(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@79 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (Bool T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@3) 0))
(assert (= ($generated@@30 $generated) $generated@@1))
(assert (= ($generated@@30 $generated@@0) $generated@@2))
(assert (= ($generated@@31 $generated@@3) $generated@@4))
(assert  (and (and (and (and (and (and (and (= ($generated@@13 $generated@@38) 3) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@42 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@42 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@42 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@13 $generated@@43) 4)) (= ($generated@@13 $generated@@44) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@13 ($generated@@45 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@45 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@45 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@45 $generated@@66 $generated@@67))
))))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@35 $generated@@68 $generated@@69) (and (< 0 $generated@@32) (and ($generated@@34 $generated@@68) (and (or (not (= $generated@@69 $generated@@36)) (not true)) (and ($generated@@37 $generated@@38 $generated@@69 $generated@@39) ($generated@@40 $generated@@38 $generated@@69 $generated@@39 $generated@@68)))))) (= ($generated@@33 $generated@@68 $generated@@69) (>= ($generated@@20 ($generated@@41 $generated@@15 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@68 $generated@@69) $generated@@46))) ($generated@@47 0))))
 :pattern ( ($generated@@33 $generated@@68 $generated@@69) ($generated@@34 $generated@@68))
))))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@72 $generated@@70)  (or (= $generated@@72 $generated@@36) (= ($generated@@71 $generated@@72) $generated@@70)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@72 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@40 $generated@@38 $generated@@73 $generated@@39 $generated@@74) ($generated@@40 $generated@@38 $generated@@73 $generated@@70 $generated@@74))
 :pattern ( ($generated@@40 $generated@@38 $generated@@73 $generated@@39 $generated@@74))
 :pattern ( ($generated@@40 $generated@@38 $generated@@73 $generated@@70 $generated@@74))
)))
(assert (= ($generated@@13 $generated@@76) 7))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@37 $generated@@76 $generated@@78 $generated@@77) ($generated@@75 $generated@@78))
 :pattern ( ($generated@@75 $generated@@78) ($generated@@37 $generated@@76 $generated@@78 $generated@@77))
)))
(assert (= ($generated@@29 $generated@@46) 0))
(assert (= ($generated@@79 $generated@@5 $generated@@12) $generated@@46))
(assert  (not ($generated@@80 $generated@@46)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@40 $generated@@38 $generated@@81 $generated@@70 $generated@@82)  (or (= $generated@@81 $generated@@36) ($generated@@18 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@81) $generated@@3)))))
 :pattern ( ($generated@@40 $generated@@38 $generated@@81 $generated@@70 $generated@@82))
)))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@47 $generated@@83) $generated@@83)
 :pattern ( ($generated@@47 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@88 $generated@@90 $generated@@91) (and (< 1 $generated@@32) (and ($generated@@34 $generated@@90) (and ($generated@@37 $generated@@76 $generated@@91 $generated@@77) ($generated@@40 $generated@@76 $generated@@91 $generated@@77 $generated@@90))))) (and (and ($generated@@75 $generated@@91) ($generated@@35 $generated@@90 ($generated@@89 $generated@@91))) (= ($generated@@87 true $generated@@90 $generated@@91) ($generated@@33 $generated@@90 ($generated@@89 $generated@@91)))))
 :pattern ( ($generated@@87 true $generated@@90 $generated@@91) ($generated@@34 $generated@@90))
))))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@75 $generated@@93) (= ($generated@@92 $generated@@93) $generated@@8))
 :pattern ( ($generated@@75 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@41 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@41 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@75 $generated@@98) (exists (($generated@@99 T@U) ) (= $generated@@98 ($generated@@97 $generated@@99))))
 :pattern ( ($generated@@75 $generated@@98))
)))
(assert ($generated@@80 $generated@@3))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and (and ($generated@@34 $generated@@100) (and (or (not (= $generated@@101 $generated@@36)) (not true)) (= ($generated@@71 $generated@@101) $generated@@70))) ($generated@@18 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@100 $generated@@101) $generated@@3)))) ($generated@@40 $generated@@15 ($generated@@41 $generated@@15 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@100 $generated@@101) $generated@@46)) $generated@@0 $generated@@100))
 :pattern ( ($generated@@41 $generated@@15 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@100 $generated@@101) $generated@@46)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@102 ($generated@@94 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@40 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@102 ($generated@@94 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@18 ($generated@@107 $generated@@38 $generated@@43 $generated@@14 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@18 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@136 $generated@@139) $generated@@137)))) (= $generated@@139 $generated@@138)))
 :pattern ( ($generated@@107 $generated@@38 $generated@@43 $generated@@14 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@37 $generated@@76 ($generated@@97 $generated@@141) $generated@@77) ($generated@@37 $generated@@38 $generated@@141 $generated@@39))
 :pattern ( ($generated@@37 $generated@@76 ($generated@@97 $generated@@141) $generated@@77))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@142 $generated@@39)  (and ($generated@@37 $generated@@38 $generated@@142 $generated@@70) (or (not (= $generated@@142 $generated@@36)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@142 $generated@@39))
 :pattern ( ($generated@@37 $generated@@38 $generated@@142 $generated@@70))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@34 $generated@@144) (= ($generated@@40 $generated@@76 ($generated@@97 $generated@@143) $generated@@77 $generated@@144) ($generated@@40 $generated@@38 $generated@@143 $generated@@39 $generated@@144)))
 :pattern ( ($generated@@40 $generated@@76 ($generated@@97 $generated@@143) $generated@@77 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (and (= ($generated@@145 ($generated@@79 $generated@@146 $generated@@147)) $generated@@146) (= ($generated@@31 ($generated@@79 $generated@@146 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@79 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@92 ($generated@@97 $generated@@148)) $generated@@8)
 :pattern ( ($generated@@97 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@89 ($generated@@97 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@97 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@41 $generated@@151 ($generated@@94 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@94 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and ($generated@@34 $generated@@152) (and (or (not (= $generated@@153 $generated@@36)) (not true)) (= ($generated@@71 $generated@@153) $generated@@70))) ($generated@@37 $generated@@15 ($generated@@41 $generated@@15 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@152 $generated@@153) $generated@@46)) $generated@@0))
 :pattern ( ($generated@@41 $generated@@15 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@152 $generated@@153) $generated@@46)))
)))
(assert (= ($generated@@30 $generated@@70) $generated@@6))
(assert (= ($generated@@154 $generated@@70) $generated@@10))
(assert (= ($generated@@30 $generated@@39) $generated@@7))
(assert (= ($generated@@154 $generated@@39) $generated@@10))
(assert (= ($generated@@30 $generated@@77) $generated@@9))
(assert (= ($generated@@154 $generated@@77) $generated@@11))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@34 $generated@@156) (and ($generated@@75 $generated@@155) ($generated@@40 $generated@@76 $generated@@155 $generated@@77 $generated@@156))) ($generated@@40 $generated@@38 ($generated@@89 $generated@@155) $generated@@39 $generated@@156))
 :pattern ( ($generated@@40 $generated@@38 ($generated@@89 $generated@@155) $generated@@39 $generated@@156))
)))
(assert (forall (($generated@@157 Int) ) (! (= ($generated@@94 $generated@@15 ($generated@@19 ($generated@@47 $generated@@157))) ($generated@@84 $generated@@44 ($generated@@94 $generated@@15 ($generated@@19 $generated@@157))))
 :pattern ( ($generated@@94 $generated@@15 ($generated@@19 ($generated@@47 $generated@@157))))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@97 ($generated@@84 $generated@@38 $generated@@158)) ($generated@@84 $generated@@76 ($generated@@97 $generated@@158)))
 :pattern ( ($generated@@97 ($generated@@84 $generated@@38 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@94 $generated@@160 ($generated@@84 $generated@@160 $generated@@159)) ($generated@@84 $generated@@44 ($generated@@94 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@94 $generated@@160 ($generated@@84 $generated@@160 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! ($generated@@40 $generated@@15 $generated@@162 $generated@@0 $generated@@161)
 :pattern ( ($generated@@40 $generated@@15 $generated@@162 $generated@@0 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@40 $generated@@14 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@40 $generated@@14 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@37 $generated@@15 $generated@@165 $generated@@0)
 :pattern ( ($generated@@37 $generated@@15 $generated@@165 $generated@@0))
)))
(assert (forall (($generated@@166 T@U) ) (! ($generated@@37 $generated@@14 $generated@@166 $generated)
 :pattern ( ($generated@@37 $generated@@14 $generated@@166 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@173  (=> ($generated@@75 $generated@@167) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= ($generated@@89 $generated@@167) $generated@@36)) (not true))) (=> (or (not (= ($generated@@89 $generated@@167) $generated@@36)) (not true)) (=> (and (and (and ($generated@@102 ($generated@@94 $generated@@38 ($generated@@89 $generated@@167)) $generated@@70 $generated@@168) (= $generated@@169 (forall (($generated@@174 T@U) ($generated@@175 T@U) )  (=> (and (and (or (not (= $generated@@174 $generated@@36)) (not true)) ($generated@@18 ($generated@@41 $generated@@14 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@38 ($generated@@45 $generated@@43 $generated@@44) $generated@@168 $generated@@174) $generated@@3)))) (= $generated@@174 ($generated@@89 $generated@@167))) ($generated@@18 ($generated@@107 $generated@@38 $generated@@43 $generated@@14 $generated@@170 $generated@@174 $generated@@175)))))) (and ($generated@@35 $generated@@168 ($generated@@89 $generated@@167)) (= ($generated@@87 $generated@@171 $generated@@168 $generated@@167) ($generated@@33 $generated@@168 ($generated@@89 $generated@@167))))) (and (and ($generated@@75 $generated@@167) ($generated@@35 $generated@@168 ($generated@@89 $generated@@167))) (and ($generated@@37 $generated@@14 ($generated@@17 ($generated@@87 $generated@@171 $generated@@168 $generated@@167)) $generated) (= (ControlFlow 0 3) (- 0 2))))) $generated@@169))))))
(let (($generated@@176 true))
(let (($generated@@177  (=> (= $generated@@170 ($generated@@108 $generated@@36 $generated@@168 $generated@@3 ($generated@@89 $generated@@167))) (=> (and ($generated@@75 $generated@@167) ($generated@@75 $generated@@167)) (and (=> (= (ControlFlow 0 5) 1) $generated@@176) (=> (= (ControlFlow 0 5) 3) $generated@@173))))))
(let (($generated@@178  (=> (and ($generated@@34 $generated@@168) ($generated@@172 $generated@@168)) (=> (and (and ($generated@@37 $generated@@76 $generated@@167 $generated@@77) ($generated@@40 $generated@@76 $generated@@167 $generated@@77 $generated@@168)) (and (= 1 $generated@@32) (= (ControlFlow 0 6) 5))) $generated@@177))))
$generated@@178)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
