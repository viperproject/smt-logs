(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Int)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@125 () T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@24 $generated@@25) $generated@@4))
(assert (= ($generated@@7 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)))
)))
(assert (= ($generated@@7 $generated@@32) 4))
(assert ($generated@@26 $generated@@32 $generated@@25 $generated@@33))
(assert  (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@35 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@35 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@35 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@7 $generated@@36) 5)) (= ($generated@@7 $generated@@37) 6)) (= ($generated@@7 $generated@@38) 7)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@7 ($generated@@39 $generated@@55 $generated@@56)) 8))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@39 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@39 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@39 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@34 $generated@@61 $generated@@62) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@12 ($generated@@40 $generated@@8 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@61 $generated@@63) $generated@@2))) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated@@2))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated@@2))
)))
 :pattern ( ($generated@@34 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@24 $generated@@70) $generated@@4))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@24 $generated@@72) $generated@@5))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@40 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@40 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or (not (= $generated@@79 $generated@@80)) (not true)) (= ($generated@@77 $generated@@78 $generated@@80) ($generated@@77 ($generated@@76 $generated@@78 $generated@@79) $generated@@80)))
 :pattern ( ($generated@@76 $generated@@78 $generated@@79) ($generated@@77 $generated@@78 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@69 $generated@@81) (= $generated@@81 $generated@@25))
 :pattern ( ($generated@@69 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@82 ($generated@@76 $generated@@83 $generated@@84)) (+ ($generated@@82 $generated@@83) 1))
 :pattern ( ($generated@@82 ($generated@@76 $generated@@83 $generated@@84)))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@71 $generated@@86) (exists (($generated@@87 T@U) ) (= $generated@@86 ($generated@@85 $generated@@87))))
 :pattern ( ($generated@@71 $generated@@86))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@88 ($generated@@73 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@89 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@88 ($generated@@73 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@34 $generated@@94 $generated@@95) (=> ($generated@@88 $generated@@96 $generated@@97 $generated@@94) ($generated@@88 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@34 $generated@@94 $generated@@95) ($generated@@88 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (!  (=> ($generated@@34 $generated@@98 $generated@@99) (=> ($generated@@89 $generated@@102 $generated@@100 $generated@@101 $generated@@98) ($generated@@89 $generated@@102 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@34 $generated@@98 $generated@@99) ($generated@@89 $generated@@102 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@82 ($generated@@103 $generated@@104 $generated@@105)) (+ ($generated@@82 $generated@@104) ($generated@@82 $generated@@105)))
 :pattern ( ($generated@@82 ($generated@@103 $generated@@104 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@106 $generated@@107 $generated@@33) (and (= ($generated@@73 $generated@@32 ($generated@@40 $generated@@32 $generated@@107)) $generated@@107) ($generated@@26 $generated@@32 ($generated@@40 $generated@@32 $generated@@107) $generated@@33)))
 :pattern ( ($generated@@106 $generated@@107 $generated@@33))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (> ($generated@@77 $generated@@109 ($generated@@73 $generated@@32 $generated@@110)) 0) (< ($generated@@108 $generated@@110) ($generated@@108 ($generated@@85 $generated@@109))))
 :pattern ( ($generated@@77 $generated@@109 ($generated@@73 $generated@@32 $generated@@110)) ($generated@@85 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@111 ($generated@@28 $generated@@112)) (forall (($generated@@113 T@U) ) (!  (=> (< 0 ($generated@@77 $generated@@111 $generated@@113)) ($generated@@106 $generated@@113 $generated@@112))
 :pattern ( ($generated@@77 $generated@@111 $generated@@113))
)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@111 ($generated@@28 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@26 $generated@@32 $generated@@114 $generated@@33) (or ($generated@@69 $generated@@114) ($generated@@71 $generated@@114)))
 :pattern ( ($generated@@71 $generated@@114) ($generated@@26 $generated@@32 $generated@@114 $generated@@33))
 :pattern ( ($generated@@69 $generated@@114) ($generated@@26 $generated@@32 $generated@@114 $generated@@33))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or (not (= $generated@@115 $generated@@117)) (not true)) (=> (and ($generated@@34 $generated@@115 $generated@@116) ($generated@@34 $generated@@116 $generated@@117)) ($generated@@34 $generated@@115 $generated@@117)))
 :pattern ( ($generated@@34 $generated@@115 $generated@@116) ($generated@@34 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@106 $generated@@118 $generated) (and (= ($generated@@73 $generated@@8 ($generated@@40 $generated@@8 $generated@@118)) $generated@@118) ($generated@@26 $generated@@8 ($generated@@40 $generated@@8 $generated@@118) $generated)))
 :pattern ( ($generated@@106 $generated@@118 $generated))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@106 ($generated@@73 $generated@@121 $generated@@119) $generated@@120) ($generated@@26 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@106 ($generated@@73 $generated@@121 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@29 $generated@@122) (forall (($generated@@123 T@U) ) (!  (and (<= 0 ($generated@@77 $generated@@122 $generated@@123)) (<= ($generated@@77 $generated@@122 $generated@@123) ($generated@@82 $generated@@122)))
 :pattern ( ($generated@@77 $generated@@122 $generated@@123))
)))
 :pattern ( ($generated@@29 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (<= 0 ($generated@@82 $generated@@124))
 :pattern ( ($generated@@82 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@77 $generated@@125 $generated@@126) 0)
 :pattern ( ($generated@@77 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@77 ($generated@@76 $generated@@127 $generated@@128) $generated@@128) (+ ($generated@@77 $generated@@127 $generated@@128) 1))
 :pattern ( ($generated@@76 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@129 ($generated@@28 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@28 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@23 ($generated@@28 $generated@@131)) $generated@@1)
 :pattern ( ($generated@@28 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@24 ($generated@@85 $generated@@132)) $generated@@5)
 :pattern ( ($generated@@85 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@85 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@85 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@40 $generated@@136 ($generated@@73 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@73 $generated@@136 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (and (= (= ($generated@@82 $generated@@137) 0) (= $generated@@137 $generated@@125)) (=> (or (not (= ($generated@@82 $generated@@137) 0)) (not true)) (exists (($generated@@138 T@U) ) (! (< 0 ($generated@@77 $generated@@137 $generated@@138))
 :pattern ( ($generated@@77 $generated@@137 $generated@@138))
))))
 :pattern ( ($generated@@82 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@77 ($generated@@103 $generated@@139 $generated@@140) $generated@@141) (+ ($generated@@77 $generated@@139 $generated@@141) ($generated@@77 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@77 ($generated@@103 $generated@@139 $generated@@140) $generated@@141))
)))
(assert  (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@142 $generated@@145 $generated@@146 $generated@@147 ($generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@142 $generated@@152 $generated@@153 $generated@@154 ($generated@@144 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@142 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@142 $generated@@161 $generated@@162 $generated@@163 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@142 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@12 ($generated@@142 $generated@@38 $generated@@36 $generated@@8 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@142 $generated@@38 $generated@@36 $generated@@8 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@106 $generated@@176 ($generated@@28 $generated@@177)) (and (= ($generated@@73 $generated@@27 ($generated@@40 $generated@@27 $generated@@176)) $generated@@176) ($generated@@26 $generated@@27 ($generated@@40 $generated@@27 $generated@@176) ($generated@@28 $generated@@177))))
 :pattern ( ($generated@@106 $generated@@176 ($generated@@28 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@178 $generated@@180) ($generated@@26 $generated@@32 $generated@@179 $generated@@33)) ($generated@@89 $generated@@32 $generated@@179 $generated@@33 $generated@@180))
 :pattern ( ($generated@@89 $generated@@32 $generated@@179 $generated@@33 $generated@@180))
)))
(assert (= ($generated@@23 $generated@@33) $generated@@3))
(assert (= ($generated@@181 $generated@@33) $generated@@6))
(assert (= $generated@@25 ($generated@@66 $generated@@32 $generated@@25)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@26 $generated@@32 ($generated@@85 $generated@@182) $generated@@33) ($generated@@26 $generated@@27 $generated@@182 ($generated@@28 $generated)))
 :pattern ( ($generated@@26 $generated@@32 ($generated@@85 $generated@@182) $generated@@33))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@178 $generated@@184) (and ($generated@@71 $generated@@183) ($generated@@89 $generated@@32 $generated@@183 $generated@@33 $generated@@184))) ($generated@@89 $generated@@27 ($generated@@133 $generated@@183) ($generated@@28 $generated) $generated@@184))
 :pattern ( ($generated@@89 $generated@@27 ($generated@@133 $generated@@183) ($generated@@28 $generated) $generated@@184))
)))
(assert (forall (($generated@@185 Int) ) (! (= ($generated@@73 $generated@@9 ($generated@@13 ($generated@@64 $generated@@185))) ($generated@@66 $generated@@37 ($generated@@73 $generated@@9 ($generated@@13 $generated@@185))))
 :pattern ( ($generated@@73 $generated@@9 ($generated@@13 ($generated@@64 $generated@@185))))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@85 ($generated@@66 $generated@@27 $generated@@186)) ($generated@@66 $generated@@32 ($generated@@85 $generated@@186)))
 :pattern ( ($generated@@85 ($generated@@66 $generated@@27 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@T) ) (! (= ($generated@@73 $generated@@188 ($generated@@66 $generated@@188 $generated@@187)) ($generated@@66 $generated@@37 ($generated@@73 $generated@@188 $generated@@187)))
 :pattern ( ($generated@@73 $generated@@188 ($generated@@66 $generated@@188 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (< 0 ($generated@@77 $generated@@189 $generated@@191)) (< 0 ($generated@@77 ($generated@@76 $generated@@189 $generated@@190) $generated@@191)))
 :pattern ( ($generated@@76 $generated@@189 $generated@@190) ($generated@@77 $generated@@189 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= (< 0 ($generated@@77 ($generated@@76 $generated@@192 $generated@@193) $generated@@194))  (or (= $generated@@194 $generated@@193) (< 0 ($generated@@77 $generated@@192 $generated@@194))))
 :pattern ( ($generated@@77 ($generated@@76 $generated@@192 $generated@@193) $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@89 $generated@@27 $generated@@195 ($generated@@28 $generated@@196) $generated@@197) (forall (($generated@@198 T@U) ) (!  (=> (< 0 ($generated@@77 $generated@@195 $generated@@198)) ($generated@@88 $generated@@198 $generated@@196 $generated@@197))
 :pattern ( ($generated@@77 $generated@@195 $generated@@198))
)))
 :pattern ( ($generated@@89 $generated@@27 $generated@@195 ($generated@@28 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! ($generated@@89 $generated@@8 $generated@@200 $generated $generated@@199)
 :pattern ( ($generated@@89 $generated@@8 $generated@@200 $generated $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@26 $generated@@8 $generated@@201 $generated)
 :pattern ( ($generated@@26 $generated@@8 $generated@@201 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@217  (=> (or (not (= $generated@@202 $generated@@203)) (not true)) (=> (and (= $generated@@204 ($generated@@85 $generated@@205)) (= (ControlFlow 0 5) (- 0 4))) ($generated@@71 $generated@@204)))))
(let (($generated@@218 true))
(let (($generated@@219  (=> $generated@@206 (and (=> (= (ControlFlow 0 6) 3) $generated@@218) (=> (= (ControlFlow 0 6) 5) $generated@@217)))))
(let (($generated@@220 true))
(let (($generated@@221  (and (=> (= (ControlFlow 0 7) 2) $generated@@220) (=> (= (ControlFlow 0 7) 6) $generated@@219))))
(let (($generated@@222 true))
(let (($generated@@223  (=> (and (and ($generated@@26 $generated@@32 $generated@@207 $generated@@33) ($generated@@89 $generated@@32 $generated@@207 $generated@@33 $generated@@208)) (and ($generated@@26 $generated@@27 $generated@@205 ($generated@@28 $generated)) ($generated@@89 $generated@@27 $generated@@205 ($generated@@28 $generated) $generated@@208))) (=> (and (and (and (and (not false) (<= 0 $generated@@202)) (= $generated@@209 0)) (= $generated@@203 31)) (and (and (and (<= $generated@@209 $generated@@202) (<= $generated@@202 $generated@@203)) (forall (($generated@@224 T@U) ) (!  (=> (and (or (not (= $generated@@224 $generated@@210)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@208 $generated@@224) $generated@@2)))) (= ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@208 $generated@@224) ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@208 $generated@@224)))
 :pattern ( ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@208 $generated@@224))
))) (and ($generated@@34 $generated@@208 $generated@@208) (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (or (not (= $generated@@225 $generated@@210)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@208 $generated@@225) $generated@@2)))) (or (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@208 $generated@@225) $generated@@226) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@208 $generated@@225) $generated@@226)) ($generated@@12 ($generated@@142 $generated@@38 $generated@@36 $generated@@8 $generated@@211 $generated@@225 $generated@@226))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@208 $generated@@225) $generated@@226))
))))) (and (=> (= (ControlFlow 0 8) 1) $generated@@222) (=> (= (ControlFlow 0 8) 7) $generated@@221))))))
(let (($generated@@227  (=> (and (and (= $generated@@211 ($generated@@143 $generated@@210 $generated@@208 $generated@@2 false)) (= $generated@@212 ($generated@@66 $generated@@27 ($generated@@76 $generated@@125 ($generated@@73 $generated@@8 ($generated@@66 $generated@@8 ($generated@@11 false))))))) (and (= $generated@@209 ($generated@@64 0)) (= $generated@@203 ($generated@@64 31)))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (<= $generated@@209 $generated@@203)) (=> (<= $generated@@209 $generated@@203) (=> (= (ControlFlow 0 9) 8) $generated@@223))))))
(let (($generated@@228  (=> (and ($generated@@178 $generated@@208) ($generated@@213 $generated@@208)) (=> (and (and ($generated@@26 $generated@@27 $generated@@214 ($generated@@28 $generated)) ($generated@@89 $generated@@27 $generated@@214 ($generated@@28 $generated) $generated@@208)) true) (=> (and (and (and ($generated@@26 $generated@@32 $generated@@215 $generated@@33) ($generated@@89 $generated@@32 $generated@@215 $generated@@33 $generated@@208)) true) (and (= 1 $generated@@216) (= (ControlFlow 0 11) 9))) $generated@@227)))))
$generated@@228))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
