(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated) $generated@@0))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@32 $generated@@17 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@32 $generated@@17 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (= ($generated@@36 $generated@@37) $generated@@6))
(assert (= ($generated@@36 $generated@@38) $generated@@7))
(assert (= ($generated@@36 $generated@@39) $generated@@8))
(assert (= ($generated@@36 $generated@@40) $generated@@9))
(assert (= ($generated@@36 $generated@@41) $generated@@10))
(assert (= ($generated@@15 $generated@@43) 3))
(assert ($generated@@42 $generated@@43 $generated@@37 $generated@@44))
(assert ($generated@@42 $generated@@43 $generated@@38 $generated@@44))
(assert ($generated@@42 $generated@@43 $generated@@39 $generated@@44))
(assert ($generated@@42 $generated@@43 $generated@@40 $generated@@45))
(assert ($generated@@42 $generated@@43 $generated@@41 $generated@@46))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@49) (= $generated@@48 $generated@@49))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@51 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@51 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@51 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@15 $generated@@52) 4)) (= ($generated@@15 $generated@@53) 5)) (= ($generated@@15 $generated@@54) 6)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@15 ($generated@@55 $generated@@71 $generated@@72)) 7))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@55 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@55 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@55 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@50 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@20 ($generated@@56 $generated@@16 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@77 $generated@@79) $generated@@1))) ($generated@@20 ($generated@@56 $generated@@16 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@50 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@56 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@56 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@42 $generated@@17 $generated@@88 $generated@@33) (<= ($generated@@80 0) ($generated@@22 $generated@@88)))
 :pattern ( ($generated@@42 $generated@@17 $generated@@88 $generated@@33))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (!  (=> ($generated@@50 $generated@@89 $generated@@90) (=> ($generated@@32 $generated@@93 $generated@@91 $generated@@92 $generated@@89) ($generated@@32 $generated@@93 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@50 $generated@@89 $generated@@90) ($generated@@32 $generated@@93 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or (not (= $generated@@94 $generated@@96)) (not true)) (=> (and ($generated@@50 $generated@@94 $generated@@95) ($generated@@50 $generated@@95 $generated@@96)) ($generated@@50 $generated@@94 $generated@@96)))
 :pattern ( ($generated@@50 $generated@@94 $generated@@95) ($generated@@50 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@56 $generated@@98 ($generated@@85 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@85 $generated@@98 $generated@@97))
)))
(assert  (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@99 $generated@@102 $generated@@103 $generated@@104 ($generated@@101 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@101 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@99 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@99 $generated@@118 $generated@@119 $generated@@120 ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@99 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@20 ($generated@@99 $generated@@54 $generated@@52 $generated@@16 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@20 ($generated@@56 $generated@@16 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@99 $generated@@54 $generated@@52 $generated@@16 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@133 $generated@@135) ($generated@@42 $generated@@43 $generated@@134 $generated@@44)) ($generated@@32 $generated@@43 $generated@@134 $generated@@44 $generated@@135))
 :pattern ( ($generated@@32 $generated@@43 $generated@@134 $generated@@44 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and ($generated@@133 $generated@@137) ($generated@@42 $generated@@43 $generated@@136 $generated@@45)) ($generated@@32 $generated@@43 $generated@@136 $generated@@45 $generated@@137))
 :pattern ( ($generated@@32 $generated@@43 $generated@@136 $generated@@45 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@133 $generated@@139) ($generated@@42 $generated@@43 $generated@@138 $generated@@46)) ($generated@@32 $generated@@43 $generated@@138 $generated@@46 $generated@@139))
 :pattern ( ($generated@@32 $generated@@43 $generated@@138 $generated@@46 $generated@@139))
)))
(assert (= ($generated@@31 $generated@@33) $generated@@2))
(assert (= ($generated@@140 $generated@@33) $generated@@11))
(assert (= ($generated@@31 $generated@@45) $generated@@3))
(assert (= ($generated@@140 $generated@@45) $generated@@12))
(assert (= ($generated@@31 $generated@@46) $generated@@4))
(assert (= ($generated@@140 $generated@@46) $generated@@13))
(assert (= ($generated@@31 $generated@@44) $generated@@5))
(assert (= ($generated@@140 $generated@@44) $generated@@14))
(assert (= $generated@@37 ($generated@@82 $generated@@43 $generated@@37)))
(assert (= $generated@@38 ($generated@@82 $generated@@43 $generated@@38)))
(assert (= $generated@@39 ($generated@@82 $generated@@43 $generated@@39)))
(assert (= $generated@@40 ($generated@@82 $generated@@43 $generated@@40)))
(assert (= $generated@@41 ($generated@@82 $generated@@43 $generated@@41)))
(assert (forall (($generated@@141 Int) ) (! (= ($generated@@85 $generated@@17 ($generated@@21 ($generated@@80 $generated@@141))) ($generated@@82 $generated@@53 ($generated@@85 $generated@@17 ($generated@@21 $generated@@141))))
 :pattern ( ($generated@@85 $generated@@17 ($generated@@21 ($generated@@80 $generated@@141))))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@85 $generated@@143 ($generated@@82 $generated@@143 $generated@@142)) ($generated@@82 $generated@@53 ($generated@@85 $generated@@143 $generated@@142)))
 :pattern ( ($generated@@85 $generated@@143 ($generated@@82 $generated@@143 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! ($generated@@32 $generated@@17 $generated@@145 $generated $generated@@144)
 :pattern ( ($generated@@32 $generated@@17 $generated@@145 $generated $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! ($generated@@42 $generated@@17 $generated@@146 $generated)
 :pattern ( ($generated@@42 $generated@@17 $generated@@146 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U Int) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U Int) Bool)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@172  (=> (and (= $generated@@147 ($generated@@100 $generated@@148 $generated@@149 $generated@@1 false)) (= $generated@@150 ($generated@@82 $generated@@43 $generated@@38))) (=> (and (and (and ($generated@@133 $generated@@151) ($generated@@152 $generated@@151)) (forall (($generated@@173 T@U) ) (!  (=> (and (or (not (= $generated@@173 $generated@@148)) (not true)) ($generated@@20 ($generated@@56 $generated@@16 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@149 $generated@@173) $generated@@1)))) (= ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@151 $generated@@173) ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@149 $generated@@173)))
 :pattern ( ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@151 $generated@@173))
))) (and ($generated@@50 $generated@@149 $generated@@151) (= $generated@@153 ($generated@@82 $generated@@43 $generated@@37)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@47 $generated@@153 $generated@@37)) (=> ($generated@@47 $generated@@153 $generated@@37) (=> (and ($generated@@133 $generated@@154) ($generated@@152 $generated@@154)) (=> (and (and (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@148)) (not true)) ($generated@@20 ($generated@@56 $generated@@16 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@151 $generated@@174) $generated@@1)))) (= ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@154 $generated@@174) ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@151 $generated@@174)))
 :pattern ( ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@154 $generated@@174))
)) ($generated@@50 $generated@@151 $generated@@154)) (and (= $generated@@155 ($generated@@82 $generated@@43 $generated@@39)) (= $generated@@156 ($generated@@80 10)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= ($generated@@80 0) $generated@@156)) (=> (<= ($generated@@80 0) $generated@@156) (=> (and ($generated@@133 $generated@@157) ($generated@@152 $generated@@157)) (=> (and (and (forall (($generated@@175 T@U) ) (!  (=> (and (or (not (= $generated@@175 $generated@@148)) (not true)) ($generated@@20 ($generated@@56 $generated@@16 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@154 $generated@@175) $generated@@1)))) (= ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@157 $generated@@175) ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@154 $generated@@175)))
 :pattern ( ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@157 $generated@@175))
)) ($generated@@50 $generated@@154 $generated@@157)) (and (= $generated@@158 ($generated@@80 7)) (= $generated@@159 ($generated@@80 2)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (= $generated@@159 ($generated@@80 0)) (= $generated@@159 ($generated@@80 2)))) (=> (or (= $generated@@159 ($generated@@80 0)) (= $generated@@159 ($generated@@80 2))) (=> (and (and (and ($generated@@133 $generated@@160) ($generated@@152 $generated@@160)) (forall (($generated@@176 T@U) ) (!  (=> (and (or (not (= $generated@@176 $generated@@148)) (not true)) ($generated@@20 ($generated@@56 $generated@@16 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@157 $generated@@176) $generated@@1)))) (= ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@160 $generated@@176) ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@157 $generated@@176)))
 :pattern ( ($generated@@51 $generated@@54 ($generated@@55 $generated@@52 $generated@@53) $generated@@160 $generated@@176))
))) (and (and ($generated@@50 $generated@@157 $generated@@160) (= $generated@@161 ($generated@@80 0))) (and (= $generated@@162 ($generated@@82 $generated@@43 $generated@@40)) ($generated@@32 $generated@@43 $generated@@162 $generated@@45 $generated@@160)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@42 $generated@@17 ($generated@@21 ($generated@@80 19)) $generated@@33)) (=> ($generated@@42 $generated@@17 ($generated@@21 ($generated@@80 19)) $generated@@33) (=> (and (= $generated@@163 ($generated@@80 19)) ($generated@@32 $generated@@17 ($generated@@21 $generated@@163) $generated@@33 $generated@@160)) (=> (and (and ($generated@@164 ($generated@@82 $generated@@43 $generated@@40) ($generated@@80 19)) ($generated@@164 ($generated@@82 $generated@@43 $generated@@40) ($generated@@80 19))) (and (= $generated@@165 ($generated@@82 $generated@@43 $generated@@40)) ($generated@@32 $generated@@43 $generated@@165 $generated@@45 $generated@@160))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@42 $generated@@17 ($generated@@21 ($generated@@80 19)) $generated@@33)) (=> ($generated@@42 $generated@@17 ($generated@@21 ($generated@@80 19)) $generated@@33) (=> (= $generated@@166 ($generated@@80 19)) (=> (and ($generated@@32 $generated@@17 ($generated@@21 $generated@@166) $generated@@33 $generated@@160) ($generated@@167 ($generated@@82 $generated@@43 $generated@@40) ($generated@@80 19))) (=> (and (and (and ($generated@@167 ($generated@@82 $generated@@43 $generated@@40) ($generated@@80 19)) (= $generated@@168 ($generated@@82 $generated@@43 $generated@@41))) (and ($generated@@32 $generated@@43 $generated@@168 $generated@@46 $generated@@160) ($generated@@169 ($generated@@82 $generated@@43 $generated@@41)))) (and (and ($generated@@169 ($generated@@82 $generated@@43 $generated@@41)) (= $generated@@170 ($generated@@82 $generated@@43 $generated@@40))) (and ($generated@@32 $generated@@43 $generated@@170 $generated@@45 $generated@@160) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@42 $generated@@17 ($generated@@21 ($generated@@80 12)) $generated@@33)))))))))))))))))))))))))
(let (($generated@@177  (=> (and (and ($generated@@133 $generated@@149) ($generated@@152 $generated@@149)) (and (= 2 $generated@@171) (= (ControlFlow 0 8) 2))) $generated@@172)))
$generated@@177)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
