(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@92 (T@U) Int)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T) T@T)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T) T@T)
(declare-fun $generated@@104 (T@T) T@T)
(declare-fun $generated@@166 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@24) 0))
(assert (= ($generated@@25 $generated@@26) $generated@@3))
(assert (= ($generated@@7 $generated@@28) 3))
(assert (forall (($generated@@30 T@U) ) (! ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@30)))
)))
(assert (= ($generated@@7 $generated@@34) 4))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (or ($generated@@35 $generated@@42 ($generated@@33 $generated@@34 $generated@@43) $generated@@44) (and (< 1 $generated@@31) (and ($generated@@27 $generated@@34 $generated@@43 ($generated@@36 $generated@@42)) ($generated@@37 $generated@@44 $generated@@42)))) (= ($generated@@32 $generated@@42 ($generated@@33 $generated@@34 $generated@@43) $generated@@44) (ite (< ($generated@@23 ($generated@@33 $generated@@34 $generated@@43)) 12) $generated@@26 (ite (= ($generated@@38 ($generated@@33 $generated@@34 $generated@@43) ($generated@@39 9)) $generated@@44) ($generated@@40 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 9)))) (ite (= ($generated@@38 ($generated@@33 $generated@@34 $generated@@43) ($generated@@39 2)) $generated@@44) ($generated@@40 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 2)))) $generated@@26)))))
 :weight 3
 :pattern ( ($generated@@32 $generated@@42 ($generated@@33 $generated@@34 $generated@@43) $generated@@44))
))))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@39 $generated@@45) $generated@@45)
 :pattern ( ($generated@@39 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@33 $generated@@47 $generated@@46) $generated@@46)
 :pattern ( ($generated@@33 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@48 $generated@@49) (= ($generated@@25 $generated@@49) $generated@@3))
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@25 $generated@@51) $generated@@4))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@41 $generated@@54 ($generated@@52 $generated@@54 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@52 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@48 $generated@@55) (= $generated@@55 $generated@@26))
 :pattern ( ($generated@@48 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@50 $generated@@56) (exists (($generated@@57 T@U) ) (= $generated@@56 ($generated@@40 $generated@@57))))
 :pattern ( ($generated@@50 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@27 $generated@@9 $generated@@59 $generated@@58) (<= ($generated@@39 0) ($generated@@14 $generated@@59)))
 :pattern ( ($generated@@27 $generated@@9 $generated@@59 $generated@@58))
)))
(assert (= ($generated@@7 $generated@@60) 5))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@35 $generated@@61 ($generated@@33 $generated@@34 $generated@@62) ($generated@@33 $generated@@60 $generated@@63)) (and (< 1 $generated@@31) (and ($generated@@27 $generated@@34 $generated@@62 ($generated@@36 $generated@@61)) ($generated@@37 $generated@@63 $generated@@61)))) (= ($generated@@32 $generated@@61 ($generated@@33 $generated@@34 $generated@@62) ($generated@@33 $generated@@60 $generated@@63)) (ite (< ($generated@@23 ($generated@@33 $generated@@34 $generated@@62)) 12) $generated@@26 (ite (= ($generated@@38 ($generated@@33 $generated@@34 $generated@@62) ($generated@@39 9)) ($generated@@33 $generated@@60 $generated@@63)) ($generated@@40 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 9)))) (ite (= ($generated@@38 ($generated@@33 $generated@@34 $generated@@62) ($generated@@39 2)) ($generated@@33 $generated@@60 $generated@@63)) ($generated@@40 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 2)))) $generated@@26)))))
 :weight 3
 :pattern ( ($generated@@32 $generated@@61 ($generated@@33 $generated@@34 $generated@@62) ($generated@@33 $generated@@60 $generated@@63)))
))))
(assert (forall (($generated@@66 T@U) ) (!  (and (= ($generated@@64 ($generated@@29 $generated@@66)) $generated@@2) (= ($generated@@65 ($generated@@29 $generated@@66)) $generated@@6))
 :pattern ( ($generated@@29 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@37 $generated@@67 $generated@@58) (and (= ($generated@@41 $generated@@9 ($generated@@52 $generated@@9 $generated@@67)) $generated@@67) ($generated@@27 $generated@@9 ($generated@@52 $generated@@9 $generated@@67) $generated@@58)))
 :pattern ( ($generated@@37 $generated@@67 $generated@@58))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (or ($generated@@35 $generated@@68 $generated@@69 $generated@@70) (and (< 1 $generated@@31) (and ($generated@@27 $generated@@34 $generated@@69 ($generated@@36 $generated@@68)) ($generated@@37 $generated@@70 $generated@@68)))) (= ($generated@@32 $generated@@68 $generated@@69 $generated@@70) (ite (< ($generated@@23 $generated@@69) 12) $generated@@26 (ite (= ($generated@@38 $generated@@69 ($generated@@39 9)) $generated@@70) ($generated@@40 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 9)))) (ite (= ($generated@@38 $generated@@69 ($generated@@39 2)) $generated@@70) ($generated@@40 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 2)))) $generated@@26)))))
 :pattern ( ($generated@@32 $generated@@68 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@72 ($generated@@29 $generated@@71)) (or ($generated@@48 $generated@@72) ($generated@@50 $generated@@72)))
 :pattern ( ($generated@@50 $generated@@72) ($generated@@27 $generated@@28 $generated@@72 ($generated@@29 $generated@@71)))
 :pattern ( ($generated@@48 $generated@@72) ($generated@@27 $generated@@28 $generated@@72 ($generated@@29 $generated@@71)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@37 ($generated@@41 $generated@@75 $generated@@73) $generated@@74) ($generated@@27 $generated@@75 $generated@@73 $generated@@74))
 :pattern ( ($generated@@37 ($generated@@41 $generated@@75 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (<= 0 ($generated@@23 $generated@@76))
 :pattern ( ($generated@@23 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@77 ($generated@@36 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@36 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@64 ($generated@@36 $generated@@79)) $generated)
 :pattern ( ($generated@@36 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 ($generated@@29 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@29 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@25 ($generated@@40 $generated@@82)) $generated@@4)
 :pattern ( ($generated@@40 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 ($generated@@40 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@40 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@52 $generated@@86 ($generated@@41 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@41 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@40 $generated@@88) ($generated@@29 $generated@@87)) ($generated@@37 $generated@@88 $generated@@87))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@40 $generated@@88) ($generated@@29 $generated@@87)))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@35 $generated@@89 $generated@@90 $generated@@91) (and (< 1 $generated@@31) (and ($generated@@27 $generated@@34 $generated@@90 ($generated@@36 $generated@@89)) ($generated@@37 $generated@@91 $generated@@89)))) (and (=> (and ($generated@@50 ($generated@@32 $generated@@89 $generated@@90 $generated@@91)) (< ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 ($generated@@32 $generated@@89 $generated@@90 $generated@@91)))) ($generated@@23 $generated@@90))) (= ($generated@@38 $generated@@90 ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 ($generated@@32 $generated@@89 $generated@@90 $generated@@91))))) $generated@@91)) ($generated@@27 $generated@@28 ($generated@@32 $generated@@89 $generated@@90 $generated@@91) ($generated@@29 $generated@@58))))
 :pattern ( ($generated@@32 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@94 T@U) ) (! (< ($generated@@92 $generated@@94) ($generated@@93 ($generated@@40 $generated@@94)))
 :pattern ( ($generated@@40 $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@95 $generated@@105 $generated@@106 $generated@@107 ($generated@@101 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@95 $generated@@112 $generated@@113 $generated@@114 ($generated@@101 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@95 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@95 $generated@@121 $generated@@122 $generated@@123 ($generated@@101 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@95 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))) (= ($generated@@7 $generated@@96) 6)) (= ($generated@@7 $generated@@97) 7)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@99 $generated@@130 $generated@@131 ($generated@@102 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@132) $generated@@134) $generated@@132)
 :weight 0
))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@139 $generated@@140) (= ($generated@@99 $generated@@135 $generated@@136 ($generated@@102 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@137) $generated@@140) ($generated@@99 $generated@@135 $generated@@136 $generated@@138 $generated@@140)))
 :weight 0
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (= ($generated@@7 ($generated@@100 $generated@@141 $generated@@142)) 8))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@103 ($generated@@100 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@100 $generated@@143 $generated@@144))
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@104 ($generated@@100 $generated@@145 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@100 $generated@@145 $generated@@146))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 Bool) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@12 ($generated@@95 $generated@@96 $generated@@97 $generated@@8 ($generated@@98 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@12 ($generated@@52 $generated@@8 ($generated@@99 $generated@@97 $generated@@60 ($generated@@99 $generated@@96 ($generated@@100 $generated@@97 $generated@@60) $generated@@148 $generated@@151) $generated@@149)))) $generated@@150))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97 $generated@@8 ($generated@@98 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@92 ($generated@@41 $generated@@28 $generated@@153)) ($generated@@93 $generated@@153))
 :pattern ( ($generated@@92 ($generated@@41 $generated@@28 $generated@@153)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@37 $generated@@154 ($generated@@36 $generated@@155)) (and (= ($generated@@41 $generated@@34 ($generated@@52 $generated@@34 $generated@@154)) $generated@@154) ($generated@@27 $generated@@34 ($generated@@52 $generated@@34 $generated@@154) ($generated@@36 $generated@@155))))
 :pattern ( ($generated@@37 $generated@@154 ($generated@@36 $generated@@155)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@37 $generated@@157 ($generated@@29 $generated@@156)) (and (= ($generated@@41 $generated@@28 ($generated@@52 $generated@@28 $generated@@157)) $generated@@157) ($generated@@27 $generated@@28 ($generated@@52 $generated@@28 $generated@@157) ($generated@@29 $generated@@156))))
 :pattern ( ($generated@@37 $generated@@157 ($generated@@29 $generated@@156)))
)))
(assert (= ($generated@@64 $generated@@58) $generated@@1))
(assert (= ($generated@@65 $generated@@58) $generated@@5))
(assert (= $generated@@26 ($generated@@33 $generated@@28 $generated@@26)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 $generated@@158))) ($generated@@33 $generated@@60 ($generated@@41 $generated@@9 ($generated@@13 $generated@@158))))
 :pattern ( ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 $generated@@158))))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@40 ($generated@@33 $generated@@60 $generated@@159)) ($generated@@33 $generated@@28 ($generated@@40 $generated@@159)))
 :pattern ( ($generated@@40 ($generated@@33 $generated@@60 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@41 $generated@@161 ($generated@@33 $generated@@161 $generated@@160)) ($generated@@33 $generated@@60 ($generated@@41 $generated@@161 $generated@@160)))
 :pattern ( ($generated@@41 $generated@@161 ($generated@@33 $generated@@161 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> (= ($generated@@23 $generated@@162) 0) (= $generated@@162 $generated@@24))
 :pattern ( ($generated@@23 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@163 ($generated@@36 $generated@@164)) (forall (($generated@@165 Int) ) (!  (=> (and (<= 0 $generated@@165) (< $generated@@165 ($generated@@23 $generated@@163))) ($generated@@37 ($generated@@38 $generated@@163 $generated@@165) $generated@@164))
 :pattern ( ($generated@@38 $generated@@163 $generated@@165))
)))
 :pattern ( ($generated@@27 $generated@@34 $generated@@163 ($generated@@36 $generated@@164)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (and (<= 0 $generated@@168) (< $generated@@168 ($generated@@23 $generated@@167))) (< ($generated@@93 ($generated@@52 $generated@@28 ($generated@@38 $generated@@167 $generated@@168))) ($generated@@166 $generated@@167)))
 :pattern ( ($generated@@93 ($generated@@52 $generated@@28 ($generated@@38 $generated@@167 $generated@@168))))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@178 true))
(let (($generated@@179  (=> (and (=> (and ($generated@@50 $generated@@169) (< ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169))) ($generated@@23 $generated@@170))) (= ($generated@@38 $generated@@170 ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169)))) $generated@@171)) (= (ControlFlow 0 18) 13)) $generated@@178)))
(let (($generated@@180  (=> ($generated@@50 $generated@@169) (and (=> (= (ControlFlow 0 14) (- 0 17)) ($generated@@50 $generated@@169)) (=> ($generated@@50 $generated@@169) (=> (< ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169))) ($generated@@23 $generated@@170)) (and (=> (= (ControlFlow 0 14) (- 0 16)) ($generated@@50 $generated@@169)) (=> ($generated@@50 $generated@@169) (and (=> (= (ControlFlow 0 14) (- 0 15)) (and (<= 0 ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169)))) (< ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169))) ($generated@@23 $generated@@170)))) (=> (and (<= 0 ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169)))) (< ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169))) ($generated@@23 $generated@@170))) (=> (and (= ($generated@@38 $generated@@170 ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169)))) $generated@@171) (= (ControlFlow 0 14) 13)) $generated@@178)))))))))))
(let (($generated@@181  (=> (and ($generated@@27 $generated@@28 ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@29 $generated@@58)) ($generated@@27 $generated@@28 $generated@@169 ($generated@@29 $generated@@58))) (and (=> (= (ControlFlow 0 19) 14) $generated@@180) (=> (= (ControlFlow 0 19) 18) $generated@@179)))))
(let (($generated@@182  (=> (= (ControlFlow 0 2) (- 0 1)) (=> (and ($generated@@50 $generated@@169) (< ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169))) ($generated@@23 $generated@@170))) (= ($generated@@38 $generated@@170 ($generated@@14 ($generated@@52 $generated@@9 ($generated@@83 $generated@@169)))) $generated@@171)))))
(let (($generated@@183  (=> (or (not (= ($generated@@38 $generated@@170 ($generated@@39 2)) $generated@@171)) (not true)) (=> (and (and (= ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@33 $generated@@28 $generated@@26)) ($generated@@27 $generated@@28 ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@29 $generated@@58))) (and (= ($generated@@32 $generated@@172 $generated@@170 $generated@@171) $generated@@169) (= (ControlFlow 0 8) 2))) $generated@@182))))
(let (($generated@@184  (=> (= ($generated@@38 $generated@@170 ($generated@@39 2)) $generated@@171) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@27 $generated@@9 ($generated@@13 ($generated@@39 2)) $generated@@58)) (=> ($generated@@27 $generated@@9 ($generated@@13 ($generated@@39 2)) $generated@@58) (=> (and (and (= ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@33 $generated@@28 ($generated@@40 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 2)))))) ($generated@@27 $generated@@28 ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@29 $generated@@58))) (and (= ($generated@@32 $generated@@172 $generated@@170 $generated@@171) $generated@@169) (= (ControlFlow 0 6) 2))) $generated@@182))))))
(let (($generated@@185  (=> (or (not (= ($generated@@38 $generated@@170 ($generated@@39 9)) $generated@@171)) (not true)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 ($generated@@39 2)) (< ($generated@@39 2) ($generated@@23 $generated@@170)))) (=> (and (<= 0 ($generated@@39 2)) (< ($generated@@39 2) ($generated@@23 $generated@@170))) (and (=> (= (ControlFlow 0 9) 6) $generated@@184) (=> (= (ControlFlow 0 9) 8) $generated@@183)))))))
(let (($generated@@186  (=> (= ($generated@@38 $generated@@170 ($generated@@39 9)) $generated@@171) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@27 $generated@@9 ($generated@@13 ($generated@@39 9)) $generated@@58)) (=> ($generated@@27 $generated@@9 ($generated@@13 ($generated@@39 9)) $generated@@58) (=> (and (and (= ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@33 $generated@@28 ($generated@@40 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@39 9)))))) ($generated@@27 $generated@@28 ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@29 $generated@@58))) (and (= ($generated@@32 $generated@@172 $generated@@170 $generated@@171) $generated@@169) (= (ControlFlow 0 4) 2))) $generated@@182))))))
(let (($generated@@187  (=> (<= 12 ($generated@@23 $generated@@170)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (and (<= 0 ($generated@@39 9)) (< ($generated@@39 9) ($generated@@23 $generated@@170)))) (=> (and (<= 0 ($generated@@39 9)) (< ($generated@@39 9) ($generated@@23 $generated@@170))) (and (=> (= (ControlFlow 0 11) 4) $generated@@186) (=> (= (ControlFlow 0 11) 9) $generated@@185)))))))
(let (($generated@@188  (=> (< ($generated@@23 $generated@@170) 12) (=> (and (and (= ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@33 $generated@@28 $generated@@26)) ($generated@@27 $generated@@28 ($generated@@32 $generated@@172 $generated@@170 $generated@@171) ($generated@@29 $generated@@58))) (and (= ($generated@@32 $generated@@172 $generated@@170 $generated@@171) $generated@@169) (= (ControlFlow 0 3) 2))) $generated@@182))))
(let (($generated@@189  (=> (= $generated@@173 ($generated@@98 $generated@@174 $generated@@175 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 20) 19) $generated@@181) (=> (= (ControlFlow 0 20) 3) $generated@@188)) (=> (= (ControlFlow 0 20) 11) $generated@@187)))))
(let (($generated@@190  (=> (and ($generated@@176 $generated@@175) ($generated@@177 $generated@@175)) (=> (and (and ($generated@@27 $generated@@34 $generated@@170 ($generated@@36 $generated@@172)) ($generated@@37 $generated@@171 $generated@@172)) (and (= 1 $generated@@31) (= (ControlFlow 0 21) 20))) $generated@@189))))
$generated@@190))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
