(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U Int) T@U)
(declare-fun $generated@@42 (T@U Int T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@T T@U T@U) Bool)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@27 $generated@@28) $generated@@29)  (or (= $generated@@29 $generated@@28) ($generated@@21 $generated@@27 $generated@@29)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@27 $generated@@28) $generated@@29))
)))
(assert (= ($generated@@4 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@34) $generated@@36) ($generated@@30 $generated@@31 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@34) $generated@@36))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ) (!  (not ($generated@@21 $generated@@37 $generated@@38))
 :pattern ( ($generated@@21 $generated@@37 $generated@@38))
)))
(assert (= ($generated@@39 $generated@@40) 0))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (and (<= 0 $generated@@46) (< $generated@@46 ($generated@@39 $generated@@43))) (and (=> (= $generated@@44 $generated@@46) (= ($generated@@41 ($generated@@42 $generated@@43 $generated@@44 $generated@@45) $generated@@46) $generated@@45)) (=> (or (not (= $generated@@44 $generated@@46)) (not true)) (= ($generated@@41 ($generated@@42 $generated@@43 $generated@@44 $generated@@45) $generated@@46) ($generated@@41 $generated@@43 $generated@@46)))))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@43 $generated@@44 $generated@@45) $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@4 $generated@@50) 4)) (= ($generated@@4 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@4 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@74 ($generated@@33 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@47) ($generated@@9 ($generated@@48 $generated@@5 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@75 $generated@@74) $generated@@0)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@74 ($generated@@33 $generated@@73) $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@9 ($generated@@48 $generated@@5 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@77 $generated@@79) $generated@@0))) ($generated@@9 ($generated@@48 $generated@@5 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@78 $generated@@79) $generated@@0))))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@78 $generated@@79) $generated@@0))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (= ($generated@@4 $generated@@89) 7))
(assert  (=> (<= 1 $generated@@85) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@87 $generated@@92 $generated@@93) (and (< 1 $generated@@85) ($generated@@88 $generated@@89 $generated@@93 ($generated@@90 $generated@@92)))) (=> ($generated@@86 $generated@@92 $generated@@93) ($generated@@91 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@86 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and ($generated@@88 $generated@@89 $generated@@96 ($generated@@90 $generated@@98)) ($generated@@95 $generated@@97 $generated@@98)) ($generated@@88 $generated@@89 ($generated@@94 $generated@@96 $generated@@97) ($generated@@90 $generated@@98)))
 :pattern ( ($generated@@88 $generated@@89 ($generated@@94 $generated@@96 $generated@@97) ($generated@@90 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 ($generated@@48 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@48 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@39 ($generated@@94 $generated@@102 $generated@@103)) (+ 1 ($generated@@39 $generated@@102)))
 :pattern ( ($generated@@94 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@88 $generated@@31 $generated@@105 ($generated@@32 $generated@@104))  (and ($generated@@88 $generated@@31 $generated@@105 ($generated@@33 $generated@@104)) (or (not (= $generated@@105 $generated@@47)) (not true))))
 :pattern ( ($generated@@88 $generated@@31 $generated@@105 ($generated@@32 $generated@@104)))
 :pattern ( ($generated@@88 $generated@@31 $generated@@105 ($generated@@33 $generated@@104)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@106 ($generated@@99 $generated@@110 $generated@@107) $generated@@108 $generated@@109) ($generated@@30 $generated@@110 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@106 ($generated@@99 $generated@@110 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@76 $generated@@111 $generated@@112) (=> ($generated@@106 $generated@@113 $generated@@114 $generated@@111) ($generated@@106 $generated@@113 $generated@@114 $generated@@112)))
 :pattern ( ($generated@@76 $generated@@111 $generated@@112) ($generated@@106 $generated@@113 $generated@@114 $generated@@111))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (!  (=> ($generated@@76 $generated@@115 $generated@@116) (=> ($generated@@30 $generated@@119 $generated@@117 $generated@@118 $generated@@115) ($generated@@30 $generated@@119 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@76 $generated@@115 $generated@@116) ($generated@@30 $generated@@119 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@122 T@U) ) (!  (and (= ($generated@@120 ($generated@@33 $generated@@122)) $generated@@1) (= ($generated@@121 ($generated@@33 $generated@@122)) $generated@@3))
 :pattern ( ($generated@@33 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (!  (and (= ($generated@@120 ($generated@@32 $generated@@123)) $generated@@2) (= ($generated@@121 ($generated@@32 $generated@@123)) $generated@@3))
 :pattern ( ($generated@@32 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 Int) ($generated@@126 T@U) ) (!  (and (=> (= $generated@@125 ($generated@@39 $generated@@124)) (= ($generated@@41 ($generated@@94 $generated@@124 $generated@@126) $generated@@125) $generated@@126)) (=> (or (not (= $generated@@125 ($generated@@39 $generated@@124))) (not true)) (= ($generated@@41 ($generated@@94 $generated@@124 $generated@@126) $generated@@125) ($generated@@41 $generated@@124 $generated@@125))))
 :pattern ( ($generated@@41 ($generated@@94 $generated@@124 $generated@@126) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or (not (= $generated@@127 $generated@@129)) (not true)) (=> (and ($generated@@76 $generated@@127 $generated@@128) ($generated@@76 $generated@@128 $generated@@129)) ($generated@@76 $generated@@127 $generated@@129)))
 :pattern ( ($generated@@76 $generated@@127 $generated@@128) ($generated@@76 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@95 ($generated@@99 $generated@@132 $generated@@130) $generated@@131) ($generated@@88 $generated@@132 $generated@@130 $generated@@131))
 :pattern ( ($generated@@95 ($generated@@99 $generated@@132 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (<= 0 ($generated@@39 $generated@@133))
 :pattern ( ($generated@@39 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@30 $generated@@89 $generated@@134 ($generated@@90 $generated@@135) $generated@@136) (forall (($generated@@137 Int) ) (!  (=> (and (<= 0 $generated@@137) (< $generated@@137 ($generated@@39 $generated@@134))) ($generated@@106 ($generated@@41 $generated@@134 $generated@@137) $generated@@135 $generated@@136))
 :pattern ( ($generated@@41 $generated@@134 $generated@@137))
)))
 :pattern ( ($generated@@30 $generated@@89 $generated@@134 ($generated@@90 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@90 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@90 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@120 ($generated@@90 $generated@@140)) $generated)
 :pattern ( ($generated@@90 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@141 ($generated@@33 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@33 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@32 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@32 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@48 $generated@@146 ($generated@@99 $generated@@146 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@99 $generated@@146 $generated@@145))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@88 $generated@@31 $generated@@150 ($generated@@33 $generated@@149))  (or (= $generated@@150 $generated@@47) ($generated@@147 ($generated@@148 $generated@@150) $generated@@149)))
 :pattern ( ($generated@@88 $generated@@31 $generated@@150 ($generated@@33 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 Int) ($generated@@153 T@U) ) (!  (=> (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@39 $generated@@151))) (= ($generated@@39 ($generated@@42 $generated@@151 $generated@@152 $generated@@153)) ($generated@@39 $generated@@151)))
 :pattern ( ($generated@@39 ($generated@@42 $generated@@151 $generated@@152 $generated@@153)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (and (= ($generated@@154 ($generated@@94 $generated@@156 $generated@@157)) $generated@@156) (= ($generated@@155 ($generated@@94 $generated@@156 $generated@@157)) $generated@@157))
 :pattern ( ($generated@@94 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@95 $generated@@158 ($generated@@90 $generated@@159)) (and (= ($generated@@99 $generated@@89 ($generated@@48 $generated@@89 $generated@@158)) $generated@@158) ($generated@@88 $generated@@89 ($generated@@48 $generated@@89 $generated@@158) ($generated@@90 $generated@@159))))
 :pattern ( ($generated@@95 $generated@@158 ($generated@@90 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@95 $generated@@161 ($generated@@33 $generated@@160)) (and (= ($generated@@99 $generated@@31 ($generated@@48 $generated@@31 $generated@@161)) $generated@@161) ($generated@@88 $generated@@31 ($generated@@48 $generated@@31 $generated@@161) ($generated@@33 $generated@@160))))
 :pattern ( ($generated@@95 $generated@@161 ($generated@@33 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@95 $generated@@163 ($generated@@32 $generated@@162)) (and (= ($generated@@99 $generated@@31 ($generated@@48 $generated@@31 $generated@@163)) $generated@@163) ($generated@@88 $generated@@31 ($generated@@48 $generated@@31 $generated@@163) ($generated@@32 $generated@@162))))
 :pattern ( ($generated@@95 $generated@@163 ($generated@@32 $generated@@162)))
)))
(assert (forall (($generated@@164 Int) ) (! (= ($generated@@99 $generated@@6 ($generated@@10 ($generated@@80 $generated@@164))) ($generated@@82 $generated@@51 ($generated@@99 $generated@@6 ($generated@@10 $generated@@164))))
 :pattern ( ($generated@@99 $generated@@6 ($generated@@10 ($generated@@80 $generated@@164))))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@99 $generated@@166 ($generated@@82 $generated@@166 $generated@@165)) ($generated@@82 $generated@@51 ($generated@@99 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@99 $generated@@166 ($generated@@82 $generated@@166 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= ($generated@@39 $generated@@167) 0) (= $generated@@167 $generated@@40))
 :pattern ( ($generated@@39 $generated@@167))
)))
(assert  (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@168 $generated@@171 $generated@@172 $generated@@173 ($generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@176 $generated@@177) $generated@@174)
 :weight 0
)) (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@168 $generated@@178 $generated@@179 $generated@@180 ($generated@@170 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@168 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@168 $generated@@187 $generated@@188 $generated@@189 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@168 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@9 ($generated@@168 $generated@@31 $generated@@50 $generated@@5 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (or (not (= $generated@@200 $generated@@196)) (not true)) ($generated@@9 ($generated@@48 $generated@@5 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@197 $generated@@200) $generated@@198)))) ($generated@@21 $generated@@199 ($generated@@99 $generated@@31 $generated@@200))))
 :pattern ( ($generated@@168 $generated@@31 $generated@@50 $generated@@5 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@88 $generated@@89 $generated@@202 ($generated@@90 $generated@@203)) (forall (($generated@@204 Int) ) (!  (=> (and (<= 0 $generated@@204) (< $generated@@204 ($generated@@39 $generated@@202))) ($generated@@95 ($generated@@41 $generated@@202 $generated@@204) $generated@@203))
 :pattern ( ($generated@@41 $generated@@202 $generated@@204))
)))
 :pattern ( ($generated@@88 $generated@@89 $generated@@202 ($generated@@90 $generated@@203)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U T@U) Bool)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@217  (=> (and (and (and ($generated@@205 $generated@@206) ($generated@@207 $generated@@206)) (forall (($generated@@218 T@U) ) (!  (=> (and (or (not (= $generated@@218 $generated@@47)) (not true)) ($generated@@9 ($generated@@48 $generated@@5 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@218) $generated@@0)))) (or (= ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@206 $generated@@218) ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@208 $generated@@218)) ($generated@@21 (ite ($generated@@91 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)) $generated@@37 ($generated@@20 $generated@@37 ($generated@@99 $generated@@31 $generated@@211))) ($generated@@99 $generated@@31 $generated@@218))))
 :pattern ( ($generated@@49 $generated@@31 ($generated@@52 $generated@@50 $generated@@51) $generated@@206 $generated@@218))
))) (and ($generated@@76 $generated@@208 $generated@@206) (= (ControlFlow 0 2) (- 0 1)))) (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@39 ($generated@@94 $generated@@40 $generated@@210)))))))
(let (($generated@@219  (=> (and (not ($generated@@91 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210))) (= (ControlFlow 0 4) 2)) $generated@@217)))
(let (($generated@@220  (=> (and ($generated@@91 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)) (= (ControlFlow 0 3) 2)) $generated@@217)))
(let (($generated@@221  (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@39 ($generated@@94 $generated@@40 $generated@@210))))) (=> (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@39 ($generated@@94 $generated@@40 $generated@@210)))) (=> (= $generated@@212 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)) (=> (and ($generated@@30 $generated@@89 $generated@@212 ($generated@@90 $generated@@209) $generated@@208) ($generated@@213 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210))) (and (=> (= (ControlFlow 0 5) 3) $generated@@220) (=> (= (ControlFlow 0 5) 4) $generated@@219))))))))
(let (($generated@@222  (=> (and (not ($generated@@91 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210))) (= (ControlFlow 0 8) 5)) $generated@@221)))
(let (($generated@@223  (=> (and ($generated@@91 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)) (= (ControlFlow 0 7) 5)) $generated@@221)))
(let (($generated@@224  (=> (= $generated@@214 ($generated@@169 $generated@@47 $generated@@208 $generated@@0 (ite ($generated@@91 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)) $generated@@37 ($generated@@20 $generated@@37 ($generated@@99 $generated@@31 $generated@@211))))) (and (=> (= (ControlFlow 0 9) (- 0 11)) (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@39 ($generated@@94 $generated@@40 $generated@@210))))) (=> (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@39 ($generated@@94 $generated@@40 $generated@@210)))) (=> (and (and (= $generated@@215 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)) ($generated@@30 $generated@@89 $generated@@215 ($generated@@90 $generated@@209) $generated@@208)) (and ($generated@@87 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)) ($generated@@86 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@39 ($generated@@94 $generated@@40 $generated@@210))))) (=> (and (<= 0 ($generated@@80 0)) (< ($generated@@80 0) ($generated@@39 ($generated@@94 $generated@@40 $generated@@210)))) (=> (= $generated@@216 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210)) (=> (and ($generated@@30 $generated@@89 $generated@@216 ($generated@@90 $generated@@209) $generated@@208) ($generated@@213 $generated@@209 ($generated@@42 ($generated@@94 $generated@@40 $generated@@210) ($generated@@80 0) $generated@@210))) (and (=> (= (ControlFlow 0 9) 7) $generated@@223) (=> (= (ControlFlow 0 9) 8) $generated@@222))))))))))))
(let (($generated@@225  (=> (and (and (and ($generated@@205 $generated@@208) ($generated@@207 $generated@@208)) (and (or (not (= $generated@@211 $generated@@47)) (not true)) (and ($generated@@88 $generated@@31 $generated@@211 ($generated@@32 $generated@@209)) ($generated@@30 $generated@@31 $generated@@211 ($generated@@32 $generated@@209) $generated@@208)))) (and (and ($generated@@95 $generated@@210 $generated@@209) ($generated@@106 $generated@@210 $generated@@209 $generated@@208)) (and (= 3 $generated@@85) (= (ControlFlow 0 12) 9)))) $generated@@224)))
$generated@@225)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
