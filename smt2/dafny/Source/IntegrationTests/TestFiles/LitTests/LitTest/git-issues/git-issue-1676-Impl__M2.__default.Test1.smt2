(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@T T@T) T@T)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@38 (T@T) T@T)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@60 (Int) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@U T@U) Bool)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U Int) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@21 $generated@@7 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@21 $generated@@7 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@31 $generated@@40 $generated@@41 ($generated@@37 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@31 $generated@@45 $generated@@46 ($generated@@37 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@31 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@5 $generated@@32) 3)) (= ($generated@@5 $generated@@33) 4)) (= ($generated@@5 $generated@@34) 5)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (= ($generated@@5 ($generated@@35 $generated@@51 $generated@@52)) 6))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@38 ($generated@@35 $generated@@53 $generated@@54)) $generated@@53)
 :pattern ( ($generated@@35 $generated@@53 $generated@@54))
))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@39 ($generated@@35 $generated@@55 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@35 $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> ($generated@@30 $generated@@57 $generated@@58) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@10 ($generated@@36 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@57 $generated@@59) $generated@@0))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@58 $generated@@59) $generated@@0))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@58 $generated@@59) $generated@@0))
)))
 :pattern ( ($generated@@30 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@60 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert (= ($generated@@5 $generated@@66) 7))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and ($generated@@65 $generated@@66 $generated@@70 ($generated@@68 $generated@@72)) ($generated@@69 $generated@@71 $generated@@72)) ($generated@@65 $generated@@66 ($generated@@67 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
 :pattern ( ($generated@@65 $generated@@66 ($generated@@67 $generated@@70 $generated@@71) ($generated@@68 $generated@@72)))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@36 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@36 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@28 ($generated@@67 $generated@@76 $generated@@77)) (+ 1 ($generated@@28 $generated@@76)))
 :pattern ( ($generated@@67 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@65 $generated@@7 $generated@@78 $generated@@25) (= ($generated@@12 $generated@@78) ($generated@@60 0)))
 :pattern ( ($generated@@65 $generated@@7 $generated@@78 $generated@@25))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@65 $generated@@7 $generated@@79 $generated@@22) (= ($generated@@12 $generated@@79) ($generated@@60 1)))
 :pattern ( ($generated@@65 $generated@@7 $generated@@79 $generated@@22))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@73 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@21 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 ($generated@@73 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@30 $generated@@85 $generated@@86) (=> ($generated@@80 $generated@@87 $generated@@88 $generated@@85) ($generated@@80 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@30 $generated@@85 $generated@@86) ($generated@@80 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (!  (=> ($generated@@30 $generated@@89 $generated@@90) (=> ($generated@@21 $generated@@93 $generated@@91 $generated@@92 $generated@@89) ($generated@@21 $generated@@93 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@30 $generated@@89 $generated@@90) ($generated@@21 $generated@@93 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@28 ($generated@@94 $generated@@95 $generated@@96)) (+ ($generated@@28 $generated@@95) ($generated@@28 $generated@@96)))
 :pattern ( ($generated@@28 ($generated@@94 $generated@@95 $generated@@96)))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@69 $generated@@97 $generated@@22) (and (= ($generated@@73 $generated@@7 ($generated@@36 $generated@@7 $generated@@97)) $generated@@97) ($generated@@65 $generated@@7 ($generated@@36 $generated@@7 $generated@@97) $generated@@22)))
 :pattern ( ($generated@@69 $generated@@97 $generated@@22))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@69 $generated@@98 $generated@@25) (and (= ($generated@@73 $generated@@7 ($generated@@36 $generated@@7 $generated@@98)) $generated@@98) ($generated@@65 $generated@@7 ($generated@@36 $generated@@7 $generated@@98) $generated@@25)))
 :pattern ( ($generated@@69 $generated@@98 $generated@@25))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 Int) ($generated@@102 T@U) ) (!  (and (=> (= $generated@@101 ($generated@@28 $generated@@100)) (= ($generated@@99 ($generated@@67 $generated@@100 $generated@@102) $generated@@101) $generated@@102)) (=> (or (not (= $generated@@101 ($generated@@28 $generated@@100))) (not true)) (= ($generated@@99 ($generated@@67 $generated@@100 $generated@@102) $generated@@101) ($generated@@99 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@99 ($generated@@67 $generated@@100 $generated@@102) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or (not (= $generated@@103 $generated@@105)) (not true)) (=> (and ($generated@@30 $generated@@103 $generated@@104) ($generated@@30 $generated@@104 $generated@@105)) ($generated@@30 $generated@@103 $generated@@105)))
 :pattern ( ($generated@@30 $generated@@103 $generated@@104) ($generated@@30 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@69 ($generated@@73 $generated@@108 $generated@@106) $generated@@107) ($generated@@65 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@69 ($generated@@73 $generated@@108 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (<= 0 ($generated@@28 $generated@@109))
 :pattern ( ($generated@@28 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@21 $generated@@66 $generated@@110 ($generated@@68 $generated@@111) $generated@@112) (forall (($generated@@113 Int) ) (!  (=> (and (<= 0 $generated@@113) (< $generated@@113 ($generated@@28 $generated@@110))) ($generated@@80 ($generated@@99 $generated@@110 $generated@@113) $generated@@111 $generated@@112))
 :pattern ( ($generated@@99 $generated@@110 $generated@@113))
)))
 :pattern ( ($generated@@21 $generated@@66 $generated@@110 ($generated@@68 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@68 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@68 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@68 $generated@@117)) $generated)
 :pattern ( ($generated@@68 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@36 $generated@@119 ($generated@@73 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@73 $generated@@119 $generated@@118))
)))
(assert  (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@120 $generated@@123 $generated@@124 $generated@@125 ($generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@120 $generated@@130 $generated@@131 $generated@@132 ($generated@@122 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@120 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@120 $generated@@139 $generated@@140 $generated@@141 ($generated@@122 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@120 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@10 ($generated@@120 $generated@@34 $generated@@32 $generated@@6 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@120 $generated@@34 $generated@@32 $generated@@6 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (and (= ($generated@@154 ($generated@@67 $generated@@156 $generated@@157)) $generated@@156) (= ($generated@@155 ($generated@@67 $generated@@156 $generated@@157)) $generated@@157))
 :pattern ( ($generated@@67 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@69 $generated@@158 ($generated@@68 $generated@@159)) (and (= ($generated@@73 $generated@@66 ($generated@@36 $generated@@66 $generated@@158)) $generated@@158) ($generated@@65 $generated@@66 ($generated@@36 $generated@@66 $generated@@158) ($generated@@68 $generated@@159))))
 :pattern ( ($generated@@69 $generated@@158 ($generated@@68 $generated@@159)))
)))
(assert (= ($generated@@116 $generated@@22) $generated@@1))
(assert (= ($generated@@160 $generated@@22) $generated@@3))
(assert (= ($generated@@116 $generated@@25) $generated@@2))
(assert (= ($generated@@160 $generated@@25) $generated@@4))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Int) ) (!  (and (=> (< $generated@@163 ($generated@@28 $generated@@161)) (= ($generated@@99 ($generated@@94 $generated@@161 $generated@@162) $generated@@163) ($generated@@99 $generated@@161 $generated@@163))) (=> (<= ($generated@@28 $generated@@161) $generated@@163) (= ($generated@@99 ($generated@@94 $generated@@161 $generated@@162) $generated@@163) ($generated@@99 $generated@@162 (- $generated@@163 ($generated@@28 $generated@@161))))))
 :pattern ( ($generated@@99 ($generated@@94 $generated@@161 $generated@@162) $generated@@163))
)))
(assert (forall (($generated@@164 Int) ) (! (= ($generated@@73 $generated@@7 ($generated@@11 ($generated@@60 $generated@@164))) ($generated@@62 $generated@@33 ($generated@@73 $generated@@7 ($generated@@11 $generated@@164))))
 :pattern ( ($generated@@73 $generated@@7 ($generated@@11 ($generated@@60 $generated@@164))))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@73 $generated@@166 ($generated@@62 $generated@@166 $generated@@165)) ($generated@@62 $generated@@33 ($generated@@73 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@73 $generated@@166 ($generated@@62 $generated@@166 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ) (!  (=> (= ($generated@@28 $generated@@167) 0) (= $generated@@167 $generated@@29))
 :pattern ( ($generated@@28 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@65 $generated@@66 $generated@@168 ($generated@@68 $generated@@169)) (forall (($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@28 $generated@@168))) ($generated@@69 ($generated@@99 $generated@@168 $generated@@170) $generated@@169))
 :pattern ( ($generated@@99 $generated@@168 $generated@@170))
)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@168 ($generated@@68 $generated@@169)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183  (=> (= $generated@@171 ($generated@@121 $generated@@172 $generated@@173 $generated@@0 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@65 $generated@@7 ($generated@@11 ($generated@@60 1)) $generated@@22)) (=> ($generated@@65 $generated@@7 ($generated@@11 ($generated@@60 1)) $generated@@22) (=> (= $generated@@174 ($generated@@62 $generated@@66 ($generated@@67 $generated@@29 ($generated@@73 $generated@@7 ($generated@@11 ($generated@@60 1)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@65 $generated@@7 ($generated@@11 ($generated@@60 0)) $generated@@25)) (=> ($generated@@65 $generated@@7 ($generated@@11 ($generated@@60 0)) $generated@@25) (=> (= $generated@@175 ($generated@@62 $generated@@66 ($generated@@67 $generated@@29 ($generated@@73 $generated@@7 ($generated@@11 ($generated@@60 0)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@65 $generated@@66 ($generated@@94 $generated@@174 $generated@@175) ($generated@@68 $generated@@22))) (=> ($generated@@65 $generated@@66 ($generated@@94 $generated@@174 $generated@@175) ($generated@@68 $generated@@22)) (=> (and (= $generated@@176 ($generated@@94 $generated@@174 $generated@@175)) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@60 1)) (< ($generated@@60 1) ($generated@@28 $generated@@176)))))))))))))))
(let (($generated@@184  (=> (and ($generated@@177 $generated@@173) ($generated@@178 $generated@@173)) (=> (and (and (and (and ($generated@@65 $generated@@66 $generated@@179 ($generated@@68 $generated@@22)) ($generated@@21 $generated@@66 $generated@@179 ($generated@@68 $generated@@22) $generated@@173)) true) (and (and ($generated@@65 $generated@@66 $generated@@180 ($generated@@68 $generated@@25)) ($generated@@21 $generated@@66 $generated@@180 ($generated@@68 $generated@@25) $generated@@173)) true)) (and (and (and ($generated@@65 $generated@@66 $generated@@181 ($generated@@68 $generated@@22)) ($generated@@21 $generated@@66 $generated@@181 ($generated@@68 $generated@@22) $generated@@173)) true) (and (= 2 $generated@@182) (= (ControlFlow 0 6) 2)))) $generated@@183))))
$generated@@184)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
