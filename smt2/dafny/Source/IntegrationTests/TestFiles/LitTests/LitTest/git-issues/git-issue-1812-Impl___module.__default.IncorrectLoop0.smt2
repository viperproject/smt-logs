(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U) Int)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U) T@U)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T T@T) T@T)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@T) T@T)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@23) 3))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@25 ($generated@@22 $generated@@23 $generated@@37)) (and (< 0 $generated@@19) (and (and ($generated@@24 $generated@@36) ($generated@@26 $generated@@23 $generated@@37 ($generated@@27 $generated))) (not ($generated@@28 $generated@@37 $generated@@29))))) (and (and ($generated@@30 ($generated@@22 $generated@@23 $generated@@37)) (=> (not ($generated@@28 $generated@@37 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 ($generated@@22 $generated@@23 $generated@@37))))))) (let (($generated@@38 ($generated@@34 $generated@@37 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 ($generated@@22 $generated@@23 $generated@@37))))))))
($generated@@25 $generated@@38)))) (= ($generated@@20 ($generated@@21 $generated@@35) ($generated@@22 $generated@@23 $generated@@37)) (let (($generated@@39 ($generated@@33 ($generated@@22 $generated@@23 $generated@@37))))
(ite ($generated@@28 $generated@@37 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@39)))) $generated@@39 (let (($generated@@40 ($generated@@34 $generated@@37 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@39))))))
(let (($generated@@41 ($generated@@20 ($generated@@21 $generated@@35) $generated@@40)))
$generated@@41)))))))
 :weight 3
 :pattern ( ($generated@@20 ($generated@@21 $generated@@35) ($generated@@22 $generated@@23 $generated@@37)) ($generated@@24 $generated@@36))
))))
(assert (= ($generated@@42 $generated) $generated@@0))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! ($generated@@43 ($generated@@31 $generated@@44 $generated@@45) $generated@@45)
 :pattern ( ($generated@@31 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@43 $generated@@46 $generated@@48) ($generated@@43 ($generated@@31 $generated@@46 $generated@@47) $generated@@48))
 :pattern ( ($generated@@31 $generated@@46 $generated@@47) ($generated@@43 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@43 ($generated@@31 $generated@@49 $generated@@50) $generated@@51)  (or (= $generated@@51 $generated@@50) ($generated@@43 $generated@@49 $generated@@51)))
 :pattern ( ($generated@@43 ($generated@@31 $generated@@49 $generated@@50) $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> ($generated@@43 $generated@@53 $generated@@54) (not ($generated@@43 ($generated@@34 $generated@@52 $generated@@53) $generated@@54)))
 :pattern ( ($generated@@34 $generated@@52 $generated@@53) ($generated@@43 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (!  (not ($generated@@43 $generated@@29 $generated@@55))
 :pattern ( ($generated@@43 $generated@@29 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@43 ($generated@@34 $generated@@56 $generated@@57) $generated@@58)  (and ($generated@@43 $generated@@56 $generated@@58) (not ($generated@@43 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@43 ($generated@@34 $generated@@56 $generated@@57) $generated@@58))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@25 $generated@@61) (and (< 0 $generated@@19) (and (and ($generated@@24 $generated@@60) ($generated@@26 $generated@@23 $generated@@61 ($generated@@27 $generated))) (not ($generated@@28 $generated@@61 $generated@@29))))) (and (and ($generated@@30 $generated@@61) (=> (not ($generated@@28 $generated@@61 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 $generated@@61)))))) (let (($generated@@62 ($generated@@34 $generated@@61 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 $generated@@61)))))))
($generated@@25 $generated@@62)))) (= ($generated@@20 ($generated@@21 $generated@@59) $generated@@61) (let (($generated@@63 ($generated@@33 $generated@@61)))
(ite ($generated@@28 $generated@@61 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@63)))) $generated@@63 (let (($generated@@64 ($generated@@34 $generated@@61 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@63))))))
(let (($generated@@65 ($generated@@20 $generated@@59 $generated@@64)))
$generated@@65)))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@59) $generated@@61) ($generated@@24 $generated@@60))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@67 $generated@@76 $generated@@77 ($generated@@73 $generated@@76 $generated@@77 $generated@@79 $generated@@80 $generated@@78) $generated@@80) $generated@@78)
 :weight 0
)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (or (= $generated@@85 $generated@@86) (= ($generated@@67 $generated@@81 $generated@@82 ($generated@@73 $generated@@81 $generated@@82 $generated@@84 $generated@@85 $generated@@83) $generated@@86) ($generated@@67 $generated@@81 $generated@@82 $generated@@84 $generated@@86)))
 :weight 0
))) (= ($generated@@3 $generated@@68) 4)) (= ($generated@@3 $generated@@69) 5)) (= ($generated@@3 $generated@@70) 6)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (= ($generated@@3 ($generated@@71 $generated@@87 $generated@@88)) 7))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@74 ($generated@@71 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@71 $generated@@89 $generated@@90))
))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@75 ($generated@@71 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@71 $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@66 $generated@@93 $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@8 ($generated@@72 $generated@@4 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@93 $generated@@95) $generated@@2))) ($generated@@8 ($generated@@72 $generated@@4 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@94 $generated@@95) $generated@@2))))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@94 $generated@@95) $generated@@2))
)))
 :pattern ( ($generated@@66 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@30 $generated@@96) ($generated@@43 $generated@@96 ($generated@@32 $generated@@5 ($generated@@9 ($generated@@33 $generated@@96)))))
 :pattern ( ($generated@@33 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@22 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@22 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 $generated@@100 $generated@@101) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@43 $generated@@100 $generated@@102) ($generated@@43 $generated@@101 $generated@@102))
 :pattern ( ($generated@@43 $generated@@100 $generated@@102))
 :pattern ( ($generated@@43 $generated@@101 $generated@@102))
)))
 :pattern ( ($generated@@99 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@32 $generated@@104 ($generated@@72 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@72 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@26 $generated@@23 $generated@@106 ($generated@@27 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@43 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@43 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@26 $generated@@23 $generated@@106 ($generated@@27 $generated@@107)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@109 ($generated@@32 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@110 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@109 ($generated@@32 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@66 $generated@@115 $generated@@116) (=> ($generated@@109 $generated@@117 $generated@@118 $generated@@115) ($generated@@109 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@66 $generated@@115 $generated@@116) ($generated@@109 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (!  (=> ($generated@@66 $generated@@119 $generated@@120) (=> ($generated@@110 $generated@@123 $generated@@121 $generated@@122 $generated@@119) ($generated@@110 $generated@@123 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@66 $generated@@119 $generated@@120) ($generated@@110 $generated@@123 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@28 $generated@@124 $generated@@125) (= $generated@@124 $generated@@125))
 :pattern ( ($generated@@28 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (or (not (= $generated@@126 $generated@@128)) (not true)) (=> (and ($generated@@66 $generated@@126 $generated@@127) ($generated@@66 $generated@@127 $generated@@128)) ($generated@@66 $generated@@126 $generated@@128)))
 :pattern ( ($generated@@66 $generated@@126 $generated@@127) ($generated@@66 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@105 $generated@@129 $generated) (and (= ($generated@@32 $generated@@5 ($generated@@72 $generated@@5 $generated@@129)) $generated@@129) ($generated@@26 $generated@@5 ($generated@@72 $generated@@5 $generated@@129) $generated)))
 :pattern ( ($generated@@105 $generated@@129 $generated))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@105 ($generated@@32 $generated@@132 $generated@@130) $generated@@131) ($generated@@26 $generated@@132 $generated@@130 $generated@@131))
 :pattern ( ($generated@@105 ($generated@@32 $generated@@132 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@110 $generated@@23 $generated@@133 ($generated@@27 $generated@@134) $generated@@135) (forall (($generated@@136 T@U) ) (!  (=> ($generated@@43 $generated@@133 $generated@@136) ($generated@@109 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@43 $generated@@133 $generated@@136))
)))
 :pattern ( ($generated@@110 $generated@@23 $generated@@133 ($generated@@27 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@27 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@27 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@42 ($generated@@27 $generated@@139)) $generated@@1)
 :pattern ( ($generated@@27 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@72 $generated@@141 ($generated@@32 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@32 $generated@@141 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@142) $generated@@143) ($generated@@20 $generated@@142 $generated@@143))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@142) $generated@@143))
)))
(assert  (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@144 $generated@@147 $generated@@148 $generated@@149 ($generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@144 $generated@@154 $generated@@155 $generated@@156 ($generated@@146 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@144 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@144 $generated@@163 $generated@@164 $generated@@165 ($generated@@146 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@144 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@8 ($generated@@144 $generated@@70 $generated@@68 $generated@@4 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@8 ($generated@@72 $generated@@4 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@144 $generated@@70 $generated@@68 $generated@@4 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@105 $generated@@178 ($generated@@27 $generated@@179)) (and (= ($generated@@32 $generated@@23 ($generated@@72 $generated@@23 $generated@@178)) $generated@@178) ($generated@@26 $generated@@23 ($generated@@72 $generated@@23 $generated@@178) ($generated@@27 $generated@@179))))
 :pattern ( ($generated@@105 $generated@@178 ($generated@@27 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@28 $generated@@180 $generated@@181) (forall (($generated@@182 T@U) ) (! (= ($generated@@43 $generated@@180 $generated@@182) ($generated@@43 $generated@@181 $generated@@182))
 :pattern ( ($generated@@43 $generated@@180 $generated@@182))
 :pattern ( ($generated@@43 $generated@@181 $generated@@182))
)))
 :pattern ( ($generated@@28 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@32 $generated@@184 ($generated@@22 $generated@@184 $generated@@183)) ($generated@@22 $generated@@69 ($generated@@32 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@32 $generated@@184 ($generated@@22 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@110 $generated@@5 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@110 $generated@@5 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@26 $generated@@5 $generated@@187 $generated)
 :pattern ( ($generated@@26 $generated@@5 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@199  (=> (and (not ($generated@@28 $generated@@188 $generated@@29)) (= $generated@@189 ($generated@@34 $generated@@188 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@190)))))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and ($generated@@99 $generated@@189 $generated@@188) (not ($generated@@99 $generated@@188 $generated@@189)))) (=> (and ($generated@@99 $generated@@189 $generated@@188) (not ($generated@@99 $generated@@188 $generated@@189))) (=> (=> (not ($generated@@28 $generated@@189 $generated@@29)) ($generated@@25 $generated@@189)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> $generated@@191 (not ($generated@@28 $generated@@189 $generated@@29)))) (=> (=> $generated@@191 (not ($generated@@28 $generated@@189 $generated@@29))) (=> (= (ControlFlow 0 6) (- 0 5)) (=> $generated@@191 (= $generated@@190 ($generated@@20 ($generated@@21 ($generated@@21 $generated@@192)) $generated@@189))))))))))))
(let (($generated@@200 true))
(let (($generated@@201  (=> $generated@@191 (and (=> (= (ControlFlow 0 9) 4) $generated@@200) (=> (= (ControlFlow 0 9) 6) $generated@@199)))))
(let (($generated@@202  (=> (and (and (not $generated@@191) (not ($generated@@28 $generated@@188 $generated@@29))) (and ($generated@@110 $generated@@23 $generated@@188 ($generated@@27 $generated) $generated@@193) (= (ControlFlow 0 3) (- 0 2)))) (not ($generated@@28 $generated@@188 $generated@@29)))))
(let (($generated@@203  (and (=> (= (ControlFlow 0 10) 3) $generated@@202) (=> (= (ControlFlow 0 10) 9) $generated@@201))))
(let (($generated@@204 true))
(let (($generated@@205  (=> (and ($generated@@26 $generated@@23 $generated@@188 ($generated@@27 $generated)) ($generated@@110 $generated@@23 $generated@@188 ($generated@@27 $generated) $generated@@193)) (=> (and (and (and (not false) (=> $generated@@191 (not ($generated@@28 $generated@@188 $generated@@29)))) (and (=> $generated@@191 ($generated@@25 $generated@@188)) (=> $generated@@191 (= $generated@@190 ($generated@@20 ($generated@@21 ($generated@@21 $generated@@192)) $generated@@188))))) (and (and (forall (($generated@@206 T@U) ) (!  (=> (and (or (not (= $generated@@206 $generated@@194)) (not true)) ($generated@@8 ($generated@@72 $generated@@4 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@193 $generated@@206) $generated@@2)))) (= ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@193 $generated@@206) ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@193 $generated@@206)))
 :pattern ( ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@193 $generated@@206))
)) ($generated@@66 $generated@@193 $generated@@193)) (and (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (or (not (= $generated@@207 $generated@@194)) (not true)) ($generated@@8 ($generated@@72 $generated@@4 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@193 $generated@@207) $generated@@2)))) (or (= ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@193 $generated@@207) $generated@@208) ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@193 $generated@@207) $generated@@208)) ($generated@@8 ($generated@@144 $generated@@70 $generated@@68 $generated@@4 $generated@@195 $generated@@207 $generated@@208))))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@70 ($generated@@71 $generated@@68 $generated@@69) $generated@@193 $generated@@207) $generated@@208))
)) ($generated@@99 $generated@@188 $generated@@196)))) (and (=> (= (ControlFlow 0 11) 1) $generated@@204) (=> (= (ControlFlow 0 11) 10) $generated@@203))))))
(let (($generated@@209  (=> (and (= $generated@@195 ($generated@@145 $generated@@194 $generated@@193 $generated@@2 false)) (= $generated@@196 ($generated@@31 $generated@@29 ($generated@@32 $generated@@5 ($generated@@9 $generated@@190))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (=> $generated@@191 (not ($generated@@28 $generated@@196 $generated@@29)))) (=> (=> $generated@@191 (not ($generated@@28 $generated@@196 $generated@@29))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (=> $generated@@191 (= $generated@@190 ($generated@@20 ($generated@@21 ($generated@@21 $generated@@192)) $generated@@196)))) (=> (=> $generated@@191 (= $generated@@190 ($generated@@20 ($generated@@21 ($generated@@21 $generated@@192)) $generated@@196))) (=> (= (ControlFlow 0 12) 11) $generated@@205))))))))
(let (($generated@@210  (=> (and ($generated@@24 $generated@@193) ($generated@@197 $generated@@193)) (=> (and (and (and ($generated@@26 $generated@@23 $generated@@198 ($generated@@27 $generated)) ($generated@@110 $generated@@23 $generated@@198 ($generated@@27 $generated) $generated@@193)) true) (and (= 1 $generated@@19) (= (ControlFlow 0 15) 12))) $generated@@209))))
$generated@@210))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
