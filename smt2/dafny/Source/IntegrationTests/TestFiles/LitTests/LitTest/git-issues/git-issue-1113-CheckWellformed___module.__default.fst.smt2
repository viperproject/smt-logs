(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U Int) T@U)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@53 (T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@137 (T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@24) 3))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (or ($generated@@25 $generated@@27 ($generated@@23 $generated@@24 $generated@@28)) (and (< 0 $generated@@21) ($generated@@26 $generated@@28 $generated@@27))) (= ($generated@@22 $generated@@27 ($generated@@23 $generated@@24 $generated@@28)) ($generated@@23 $generated@@24 $generated@@28)))
 :weight 3
 :pattern ( ($generated@@22 $generated@@27 ($generated@@23 $generated@@24 $generated@@28)))
))))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@31) 4))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 $generated@@32 $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@33 $generated) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 $generated@@32 $generated@@35))
)))
(assert (= ($generated@@36 $generated@@37) 0))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@45 T@U) ) (!  (=> (or ($generated@@39 ($generated@@23 $generated@@31 $generated@@45)) (and (< 1 $generated@@21) ($generated@@40 $generated@@31 $generated@@45 $generated@@32))) (and ($generated@@25 $generated@@32 ($generated@@41 $generated@@31 ($generated@@23 $generated@@31 $generated@@45))) (= ($generated@@38 ($generated@@23 $generated@@31 $generated@@45)) ($generated@@12 ($generated@@42 $generated@@7 ($generated@@43 ($generated@@23 $generated@@31 ($generated@@42 $generated@@31 ($generated@@22 $generated@@32 ($generated@@41 $generated@@31 ($generated@@23 $generated@@31 $generated@@45))))) ($generated@@44 0)))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@23 $generated@@31 $generated@@45)))
))))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@25 $generated@@46 $generated@@47) (and (< 0 $generated@@21) ($generated@@26 $generated@@47 $generated@@46))) ($generated@@26 ($generated@@22 $generated@@46 $generated@@47) $generated@@46))
 :pattern ( ($generated@@22 $generated@@46 $generated@@47))
))))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@44 $generated@@48) $generated@@48)
 :pattern ( ($generated@@44 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@23 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@23 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@41 $generated@@52 ($generated@@42 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@42 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@53 ($generated@@41 $generated@@57 $generated@@54) $generated@@55 $generated@@56) ($generated@@30 $generated@@57 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@53 ($generated@@41 $generated@@57 $generated@@54) $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@26 $generated@@58 $generated@@32) (and (= ($generated@@41 $generated@@31 ($generated@@42 $generated@@31 $generated@@58)) $generated@@58) ($generated@@40 $generated@@31 ($generated@@42 $generated@@31 $generated@@58) $generated@@32)))
 :pattern ( ($generated@@26 $generated@@58 $generated@@32))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@59 $generated@@32)  (and ($generated@@40 $generated@@31 $generated@@59 ($generated@@33 $generated)) (= ($generated@@36 $generated@@59) ($generated@@44 2))))
 :pattern ( ($generated@@40 $generated@@31 $generated@@59 $generated@@32))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@26 $generated@@60 $generated) (and (= ($generated@@41 $generated@@7 ($generated@@42 $generated@@7 $generated@@60)) $generated@@60) ($generated@@40 $generated@@7 ($generated@@42 $generated@@7 $generated@@60) $generated)))
 :pattern ( ($generated@@26 $generated@@60 $generated))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@26 ($generated@@41 $generated@@63 $generated@@61) $generated@@62) ($generated@@40 $generated@@63 $generated@@61 $generated@@62))
 :pattern ( ($generated@@26 ($generated@@41 $generated@@63 $generated@@61) $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (<= 0 ($generated@@36 $generated@@64))
 :pattern ( ($generated@@36 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@65 ($generated@@33 $generated@@66) $generated@@67) (forall (($generated@@68 Int) ) (!  (=> (and (<= 0 $generated@@68) (< $generated@@68 ($generated@@36 $generated@@65))) ($generated@@53 ($generated@@43 $generated@@65 $generated@@68) $generated@@66 $generated@@67))
 :pattern ( ($generated@@43 $generated@@65 $generated@@68))
)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@65 ($generated@@33 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 ($generated@@33 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@33 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@29 ($generated@@33 $generated@@71)) $generated@@1)
 :pattern ( ($generated@@33 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@42 $generated@@73 ($generated@@41 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@41 $generated@@73 $generated@@72))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@74 $generated@@84 $generated@@85 $generated@@86 ($generated@@80 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@87) $generated@@89 $generated@@90) $generated@@87)
 :weight 0
)) (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (or (= $generated@@96 $generated@@98) (= ($generated@@74 $generated@@91 $generated@@92 $generated@@93 ($generated@@80 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@98 $generated@@99) ($generated@@74 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@98 $generated@@99)))
 :weight 0
)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@106 $generated@@108) (= ($generated@@74 $generated@@100 $generated@@101 $generated@@102 ($generated@@80 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@74 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)))) (= ($generated@@5 $generated@@75) 5)) (= ($generated@@5 $generated@@76) 6)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@78 $generated@@109 $generated@@110 ($generated@@81 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@111) $generated@@113) $generated@@111)
 :weight 0
))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@78 $generated@@114 $generated@@115 ($generated@@81 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@78 $generated@@114 $generated@@115 $generated@@117 $generated@@119)))
 :weight 0
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (= ($generated@@5 ($generated@@79 $generated@@120 $generated@@121)) 7))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@79 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@79 $generated@@124 $generated@@125))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 Bool) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@10 ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))  (=> (and (or (not (= $generated@@130 $generated@@126)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@78 $generated@@76 $generated@@24 ($generated@@78 $generated@@75 ($generated@@79 $generated@@76 $generated@@24) $generated@@127 $generated@@130) $generated@@128)))) $generated@@129))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))
)))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@25 $generated@@132 $generated@@133) (and (< 0 $generated@@21) ($generated@@26 $generated@@133 $generated@@132))) (= ($generated@@22 $generated@@132 $generated@@133) $generated@@133))
 :pattern ( ($generated@@22 $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@26 $generated@@134 ($generated@@33 $generated@@135)) (and (= ($generated@@41 $generated@@31 ($generated@@42 $generated@@31 $generated@@134)) $generated@@134) ($generated@@40 $generated@@31 ($generated@@42 $generated@@31 $generated@@134) ($generated@@33 $generated@@135))))
 :pattern ( ($generated@@26 $generated@@134 ($generated@@33 $generated@@135)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@136 T@U) ) (!  (=> (or ($generated@@39 $generated@@136) (and (< 1 $generated@@21) ($generated@@40 $generated@@31 $generated@@136 $generated@@32))) (and ($generated@@25 $generated@@32 ($generated@@41 $generated@@31 $generated@@136)) (= ($generated@@38 $generated@@136) ($generated@@12 ($generated@@42 $generated@@7 ($generated@@43 ($generated@@42 $generated@@31 ($generated@@22 $generated@@32 ($generated@@41 $generated@@31 $generated@@136))) ($generated@@44 0)))))))
 :pattern ( ($generated@@38 $generated@@136))
))))
(assert  (=> (<= 0 $generated@@21) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@139 $generated@@140) (and (< 0 $generated@@21) (and ($generated@@26 $generated@@140 $generated@@139) ($generated@@53 $generated@@140 $generated@@139 $generated@@138)))) ($generated@@137 $generated@@138)) ($generated@@53 ($generated@@22 $generated@@139 $generated@@140) $generated@@139 $generated@@138))
 :pattern ( ($generated@@53 ($generated@@22 $generated@@139 $generated@@140) $generated@@139 $generated@@138))
))))
(assert (= ($generated@@29 $generated@@32) $generated@@3))
(assert (= ($generated@@141 $generated@@32) $generated@@4))
(assert (forall (($generated@@142 Int) ) (! (= ($generated@@41 $generated@@7 ($generated@@11 ($generated@@44 $generated@@142))) ($generated@@23 $generated@@24 ($generated@@41 $generated@@7 ($generated@@11 $generated@@142))))
 :pattern ( ($generated@@41 $generated@@7 ($generated@@11 ($generated@@44 $generated@@142))))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@41 $generated@@144 ($generated@@23 $generated@@144 $generated@@143)) ($generated@@23 $generated@@24 ($generated@@41 $generated@@144 $generated@@143)))
 :pattern ( ($generated@@41 $generated@@144 ($generated@@23 $generated@@144 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> (= ($generated@@36 $generated@@145) 0) (= $generated@@145 $generated@@37))
 :pattern ( ($generated@@36 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! ($generated@@30 $generated@@7 $generated@@147 $generated $generated@@146)
 :pattern ( ($generated@@30 $generated@@7 $generated@@147 $generated $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@40 $generated@@31 $generated@@148 ($generated@@33 $generated@@149)) (forall (($generated@@150 Int) ) (!  (=> (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@36 $generated@@148))) ($generated@@26 ($generated@@43 $generated@@148 $generated@@150) $generated@@149))
 :pattern ( ($generated@@43 $generated@@148 $generated@@150))
)))
 :pattern ( ($generated@@40 $generated@@31 $generated@@148 ($generated@@33 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ) (! ($generated@@40 $generated@@7 $generated@@151 $generated)
 :pattern ( ($generated@@40 $generated@@7 $generated@@151 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@157  (=> ($generated@@30 $generated@@31 $generated@@152 $generated@@32 $generated@@153) (=> (and ($generated@@25 $generated@@32 ($generated@@41 $generated@@31 $generated@@152)) (= (ControlFlow 0 3) (- 0 2))) (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@36 ($generated@@42 $generated@@31 ($generated@@22 $generated@@32 ($generated@@41 $generated@@31 $generated@@152))))))))))
(let (($generated@@158 true))
(let (($generated@@159  (=> (= $generated@@154 ($generated@@77 $generated@@155 $generated@@153 $generated@@2 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@158) (=> (= (ControlFlow 0 4) 3) $generated@@157)))))
(let (($generated@@160  (=> (and (and (and ($generated@@137 $generated@@153) ($generated@@156 $generated@@153)) ($generated@@40 $generated@@31 $generated@@152 $generated@@32)) (and (= 1 $generated@@21) (= (ControlFlow 0 5) 4))) $generated@@159)))
$generated@@160)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
