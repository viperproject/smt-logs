(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@105 (T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (! ($generated@@24 ($generated@@23 $generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@23 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@24 $generated@@27 $generated@@29) ($generated@@24 ($generated@@23 $generated@@27 $generated@@28) $generated@@29))
 :pattern ( ($generated@@23 $generated@@27 $generated@@28) ($generated@@24 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@24 ($generated@@23 $generated@@30 $generated@@31) $generated@@32)  (or (= $generated@@32 $generated@@31) ($generated@@24 $generated@@30 $generated@@32)))
 :pattern ( ($generated@@24 ($generated@@23 $generated@@30 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (!  (not ($generated@@24 $generated@@33 $generated@@34))
 :pattern ( ($generated@@24 $generated@@33 $generated@@34))
)))
(assert (= ($generated@@7 $generated@@36) 3))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@40 $generated@@37)  (or (= $generated@@40 $generated@@38) (= ($generated@@39 $generated@@40) $generated@@37)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@40 $generated@@37))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@41 $generated@@36 $generated@@44 $generated@@42 $generated@@45) ($generated@@41 $generated@@36 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@41 $generated@@36 $generated@@44 $generated@@42 $generated@@45))
 :pattern ( ($generated@@41 $generated@@36 $generated@@44 $generated@@43 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@41 $generated@@36 $generated@@47 $generated@@46 $generated@@48) ($generated@@41 $generated@@36 $generated@@47 $generated@@37 $generated@@48))
 :pattern ( ($generated@@41 $generated@@36 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@41 $generated@@36 $generated@@47 $generated@@37 $generated@@48))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@50 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@50 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@50 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@7 $generated@@51) 4)) (= ($generated@@7 $generated@@52) 5)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@7 ($generated@@53 $generated@@68 $generated@@69)) 6))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@53 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@53 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@41 $generated@@36 $generated@@74 $generated@@43 $generated@@75)  (or (= $generated@@74 $generated@@38) ($generated@@12 ($generated@@49 $generated@@8 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@36 ($generated@@53 $generated@@51 $generated@@52) $generated@@75 $generated@@74) $generated@@0)))))
 :pattern ( ($generated@@41 $generated@@36 $generated@@74 $generated@@43 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@41 $generated@@36 $generated@@76 $generated@@37 $generated@@77)  (or (= $generated@@76 $generated@@38) ($generated@@12 ($generated@@49 $generated@@8 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@36 ($generated@@53 $generated@@51 $generated@@52) $generated@@77 $generated@@76) $generated@@0)))))
 :pattern ( ($generated@@41 $generated@@36 $generated@@76 $generated@@37 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@49 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@49 $generated@@83 $generated@@82))
)))
(assert (= ($generated@@7 $generated@@84) 7))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@35 $generated@@84 $generated@@87 ($generated@@85 $generated@@88)) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@24 $generated@@87 $generated@@89) ($generated@@86 $generated@@89 $generated@@88))
 :pattern ( ($generated@@24 $generated@@87 $generated@@89))
)))
 :pattern ( ($generated@@35 $generated@@84 $generated@@87 ($generated@@85 $generated@@88)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@90 ($generated@@81 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@41 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@90 ($generated@@81 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@86 $generated@@95 $generated@@43) (and (= ($generated@@81 $generated@@36 ($generated@@49 $generated@@36 $generated@@95)) $generated@@95) ($generated@@35 $generated@@36 ($generated@@49 $generated@@36 $generated@@95) $generated@@43)))
 :pattern ( ($generated@@86 $generated@@95 $generated@@43))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@86 $generated@@96 $generated@@42) (and (= ($generated@@81 $generated@@36 ($generated@@49 $generated@@36 $generated@@96)) $generated@@96) ($generated@@35 $generated@@36 ($generated@@49 $generated@@36 $generated@@96) $generated@@42)))
 :pattern ( ($generated@@86 $generated@@96 $generated@@42))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@86 $generated@@97 $generated@@46) (and (= ($generated@@81 $generated@@36 ($generated@@49 $generated@@36 $generated@@97)) $generated@@97) ($generated@@35 $generated@@36 ($generated@@49 $generated@@36 $generated@@97) $generated@@46)))
 :pattern ( ($generated@@86 $generated@@97 $generated@@46))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@86 $generated@@98 $generated@@37) (and (= ($generated@@81 $generated@@36 ($generated@@49 $generated@@36 $generated@@98)) $generated@@98) ($generated@@35 $generated@@36 ($generated@@49 $generated@@36 $generated@@98) $generated@@37)))
 :pattern ( ($generated@@86 $generated@@98 $generated@@37))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@99 $generated@@42)  (and ($generated@@35 $generated@@36 $generated@@99 $generated@@43) (or (not (= $generated@@99 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@99 $generated@@42))
 :pattern ( ($generated@@35 $generated@@36 $generated@@99 $generated@@43))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@100 $generated@@46)  (and ($generated@@35 $generated@@36 $generated@@100 $generated@@37) (or (not (= $generated@@100 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@100 $generated@@46))
 :pattern ( ($generated@@35 $generated@@36 $generated@@100 $generated@@37))
)))
(assert  (=> (<= 0 $generated@@101) (forall (($generated@@104 T@U) ) (!  (=> (or ($generated@@103 $generated@@104) (and (< 0 $generated@@101) ($generated@@35 $generated@@84 $generated@@104 ($generated@@85 $generated@@42)))) (= ($generated@@102 $generated@@104) $generated@@104))
 :pattern ( ($generated@@102 $generated@@104))
))))
(assert  (=> (<= 0 $generated@@101) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and (or ($generated@@103 $generated@@107) (and (< 0 $generated@@101) (and ($generated@@35 $generated@@84 $generated@@107 ($generated@@85 $generated@@42)) ($generated@@41 $generated@@84 $generated@@107 ($generated@@85 $generated@@42) $generated@@106)))) ($generated@@105 $generated@@106)) ($generated@@41 $generated@@84 ($generated@@102 $generated@@107) ($generated@@85 $generated@@42) $generated@@106))
 :pattern ( ($generated@@41 $generated@@84 ($generated@@102 $generated@@107) ($generated@@85 $generated@@42) $generated@@106))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@86 ($generated@@81 $generated@@110 $generated@@108) $generated@@109) ($generated@@35 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@86 ($generated@@81 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@41 $generated@@84 $generated@@111 ($generated@@85 $generated@@112) $generated@@113) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@24 $generated@@111 $generated@@114) ($generated@@90 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@24 $generated@@111 $generated@@114))
)))
 :pattern ( ($generated@@41 $generated@@84 $generated@@111 ($generated@@85 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! ($generated@@35 $generated@@36 $generated@@115 $generated@@43)
 :pattern ( ($generated@@35 $generated@@36 $generated@@115 $generated@@43))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@85 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@85 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@85 $generated@@119)) $generated)
 :pattern ( ($generated@@85 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@49 $generated@@121 ($generated@@81 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@81 $generated@@121 $generated@@120))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@12 ($generated@@122 $generated@@36 $generated@@51 $generated@@8 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@12 ($generated@@49 $generated@@8 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@36 ($generated@@53 $generated@@51 $generated@@52) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@36 $generated@@51 $generated@@8 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert  (=> (<= 0 $generated@@101) (forall (($generated@@156 T@U) ) (!  (=> (or ($generated@@103 ($generated@@78 $generated@@84 $generated@@156)) (and (< 0 $generated@@101) ($generated@@35 $generated@@84 $generated@@156 ($generated@@85 $generated@@42)))) (= ($generated@@102 ($generated@@78 $generated@@84 $generated@@156)) ($generated@@78 $generated@@84 $generated@@156)))
 :weight 3
 :pattern ( ($generated@@102 ($generated@@78 $generated@@84 $generated@@156)))
))))
(assert  (=> (<= 0 $generated@@101) (forall (($generated@@157 T@U) ) (!  (=> (or ($generated@@103 $generated@@157) (and (< 0 $generated@@101) ($generated@@35 $generated@@84 $generated@@157 ($generated@@85 $generated@@42)))) ($generated@@35 $generated@@84 ($generated@@102 $generated@@157) ($generated@@85 $generated@@42)))
 :pattern ( ($generated@@102 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@86 $generated@@158 ($generated@@85 $generated@@159)) (and (= ($generated@@81 $generated@@84 ($generated@@49 $generated@@84 $generated@@158)) $generated@@158) ($generated@@35 $generated@@84 ($generated@@49 $generated@@84 $generated@@158) ($generated@@85 $generated@@159))))
 :pattern ( ($generated@@86 $generated@@158 ($generated@@85 $generated@@159)))
)))
(assert (= ($generated@@118 $generated@@43) $generated@@1))
(assert (= ($generated@@160 $generated@@43) $generated@@5))
(assert (= ($generated@@118 $generated@@42) $generated@@2))
(assert (= ($generated@@160 $generated@@42) $generated@@5))
(assert (= ($generated@@118 $generated@@46) $generated@@3))
(assert (= ($generated@@160 $generated@@46) $generated@@6))
(assert (= ($generated@@118 $generated@@37) $generated@@4))
(assert (= ($generated@@160 $generated@@37) $generated@@6))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@81 $generated@@162 ($generated@@78 $generated@@162 $generated@@161)) ($generated@@78 $generated@@52 ($generated@@81 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@81 $generated@@162 ($generated@@78 $generated@@162 $generated@@161)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@172  (=> (and (and (= $generated@@163 ($generated@@123 $generated@@38 $generated@@164 $generated@@0 false)) (= $generated@@165 ($generated@@23 $generated@@33 ($generated@@81 $generated@@36 $generated@@166)))) (and (= $generated@@167 ($generated@@23 $generated@@33 ($generated@@81 $generated@@36 $generated@@166))) (= (ControlFlow 0 2) (- 0 1)))) (and (forall (($generated@@173 T@U) ) (!  (=> (and ($generated@@24 ($generated@@102 $generated@@165) ($generated@@81 $generated@@36 $generated@@173)) (not ($generated@@24 ($generated@@102 $generated@@167) ($generated@@81 $generated@@36 $generated@@173)))) (or (not (= $generated@@173 $generated@@38)) (not true)))
 :pattern (  (or (not (= $generated@@173 $generated@@38)) (not true)))
)) (forall (($generated@@174 T@U) ) (!  (=> (and ($generated@@24 ($generated@@102 $generated@@165) ($generated@@81 $generated@@36 $generated@@174)) (not ($generated@@24 ($generated@@102 $generated@@167) ($generated@@81 $generated@@36 $generated@@174)))) (not ($generated@@12 ($generated@@49 $generated@@8 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@36 ($generated@@53 $generated@@51 $generated@@52) $generated@@164 $generated@@174) $generated@@0)))))
 :pattern ( ($generated@@49 $generated@@8 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@36 ($generated@@53 $generated@@51 $generated@@52) $generated@@164 $generated@@174) $generated@@0)))
))))))
(let (($generated@@175  (=> (and (and ($generated@@105 $generated@@164) ($generated@@168 $generated@@164)) (and ($generated@@35 $generated@@36 $generated@@166 $generated@@46) ($generated@@41 $generated@@36 $generated@@166 $generated@@46 $generated@@164))) (=> (and (and (and ($generated@@35 $generated@@36 $generated@@169 $generated@@46) ($generated@@41 $generated@@36 $generated@@169 $generated@@46 $generated@@164)) (and ($generated@@35 $generated@@84 $generated@@170 ($generated@@85 $generated@@42)) ($generated@@41 $generated@@84 $generated@@170 ($generated@@85 $generated@@42) $generated@@164))) (and (and ($generated@@35 $generated@@84 $generated@@171 ($generated@@85 $generated@@42)) ($generated@@41 $generated@@84 $generated@@171 ($generated@@85 $generated@@42) $generated@@164)) (and (= 1 $generated@@101) (= (ControlFlow 0 3) 2)))) $generated@@172))))
$generated@@175)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
