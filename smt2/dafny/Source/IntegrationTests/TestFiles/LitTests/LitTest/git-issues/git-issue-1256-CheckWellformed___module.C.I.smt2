(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@26 () Int)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@50 (T@U T@U) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@U T@U) Int)
(declare-fun $generated@@63 (Int) Int)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T) T@T)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@163 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@23 ($generated@@22 $generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25))
)))
(assert (= ($generated@@5 $generated@@28) 3))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (or ($generated@@31 $generated@@36 $generated@@37 $generated@@38) (and (< 0 $generated@@26) (and ($generated@@32 $generated@@38 $generated@@37) ($generated@@33 $generated@@38 $generated@@37 $generated@@35)))) ($generated@@34 $generated@@35)) ($generated@@27 $generated@@28 ($generated@@29 $generated@@36 $generated@@37 $generated@@38) ($generated@@30 $generated@@37) $generated@@35))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@29 $generated@@36 $generated@@37 $generated@@38) ($generated@@30 $generated@@37) $generated@@35))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@23 $generated@@39 $generated@@41) ($generated@@23 ($generated@@22 $generated@@39 $generated@@40) $generated@@41))
 :pattern ( ($generated@@22 $generated@@39 $generated@@40) ($generated@@23 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! ($generated@@27 $generated@@7 $generated@@43 $generated@@42 $generated@@44)
 :pattern ( ($generated@@27 $generated@@7 $generated@@43 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@45 $generated@@46) $generated@@47)  (or (= $generated@@47 $generated@@46) ($generated@@23 $generated@@45 $generated@@47)))
 :pattern ( ($generated@@23 ($generated@@22 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (!  (not ($generated@@23 $generated@@48 $generated@@49))
 :pattern ( ($generated@@23 $generated@@48 $generated@@49))
)))
(assert (= ($generated@@5 $generated@@52) 4))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@53 $generated@@56 ($generated@@51 $generated@@52 $generated@@58)) (and (< 1 $generated@@26) (and ($generated@@34 $generated@@57) ($generated@@32 $generated@@58 $generated@@56)))) (and (and ($generated@@54 $generated@@56 ($generated@@51 $generated@@52 $generated@@58)) ($generated@@31 $generated@@56 $generated@@56 ($generated@@51 $generated@@52 $generated@@58))) (= ($generated@@50 $generated@@56 ($generated@@51 $generated@@52 $generated@@58)) (let (($generated@@59 ($generated@@55 $generated@@56 ($generated@@51 $generated@@52 $generated@@58))))
(ite ($generated@@23 ($generated@@51 $generated@@28 ($generated@@29 $generated@@56 $generated@@56 ($generated@@51 $generated@@52 $generated@@58))) ($generated@@51 $generated@@52 $generated@@58)) $generated@@59 (+ $generated@@59 1))))))
 :weight 3
 :pattern ( ($generated@@50 $generated@@56 ($generated@@51 $generated@@52 $generated@@58)) ($generated@@34 $generated@@57))
))))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@31 $generated@@60 $generated@@61 ($generated@@51 $generated@@52 $generated@@62)) (and (< 0 $generated@@26) ($generated@@32 $generated@@62 $generated@@61))) (= ($generated@@29 $generated@@60 $generated@@61 ($generated@@51 $generated@@52 $generated@@62)) ($generated@@51 $generated@@28 ($generated@@22 $generated@@48 ($generated@@51 $generated@@52 $generated@@62)))))
 :weight 3
 :pattern ( ($generated@@29 $generated@@60 $generated@@61 ($generated@@51 $generated@@52 $generated@@62)))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@54 $generated@@64 $generated@@65) (and (<= ($generated@@63 0) ($generated@@55 $generated@@64 $generated@@65)) (and ($generated@@32 $generated@@65 $generated@@64) ($generated@@23 ($generated@@29 $generated@@64 $generated@@64 $generated@@65) $generated@@65))))
 :pattern ( ($generated@@55 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@63 $generated@@66) $generated@@66)
 :pattern ( ($generated@@63 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@51 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@51 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@73 $generated@@28 $generated@@74 ($generated@@30 $generated@@75)) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@23 $generated@@74 $generated@@76) ($generated@@32 $generated@@76 $generated@@75))
 :pattern ( ($generated@@23 $generated@@74 $generated@@76))
)))
 :pattern ( ($generated@@73 $generated@@28 $generated@@74 ($generated@@30 $generated@@75)))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@73 $generated@@7 $generated@@77 $generated@@42) (<= ($generated@@63 0) ($generated@@12 $generated@@77)))
 :pattern ( ($generated@@73 $generated@@7 $generated@@77 $generated@@42))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@33 ($generated@@70 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@27 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@33 ($generated@@70 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@32 $generated@@82 $generated@@42) (and (= ($generated@@70 $generated@@7 ($generated@@69 $generated@@7 $generated@@82)) $generated@@82) ($generated@@73 $generated@@7 ($generated@@69 $generated@@7 $generated@@82) $generated@@42)))
 :pattern ( ($generated@@32 $generated@@82 $generated@@42))
)))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@31 $generated@@83 $generated@@84 $generated@@85) (and (< 0 $generated@@26) ($generated@@32 $generated@@85 $generated@@84))) ($generated@@73 $generated@@28 ($generated@@29 $generated@@83 $generated@@84 $generated@@85) ($generated@@30 $generated@@84)))
 :pattern ( ($generated@@29 $generated@@83 $generated@@84 $generated@@85))
))))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@53 $generated@@86 $generated@@88) (and (< 1 $generated@@26) (and ($generated@@34 $generated@@87) ($generated@@32 $generated@@88 $generated@@86)))) (and (and ($generated@@54 $generated@@86 $generated@@88) ($generated@@31 $generated@@86 $generated@@86 $generated@@88)) (= ($generated@@50 $generated@@86 $generated@@88) (let (($generated@@89 ($generated@@55 $generated@@86 $generated@@88)))
(ite ($generated@@23 ($generated@@29 $generated@@86 $generated@@86 $generated@@88) $generated@@88) $generated@@89 (+ $generated@@89 1))))))
 :pattern ( ($generated@@50 $generated@@86 $generated@@88) ($generated@@34 $generated@@87))
))))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@32 $generated@@90 $generated) (and (= ($generated@@70 $generated@@7 ($generated@@69 $generated@@7 $generated@@90)) $generated@@90) ($generated@@73 $generated@@7 ($generated@@69 $generated@@7 $generated@@90) $generated)))
 :pattern ( ($generated@@32 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@32 ($generated@@70 $generated@@93 $generated@@91) $generated@@92) ($generated@@73 $generated@@93 $generated@@91 $generated@@92))
 :pattern ( ($generated@@32 ($generated@@70 $generated@@93 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@94 ($generated@@30 $generated@@95) $generated@@96) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@23 $generated@@94 $generated@@97) ($generated@@33 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@23 $generated@@94 $generated@@97))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@94 ($generated@@30 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@30 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@30 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@21 ($generated@@30 $generated@@100)) $generated@@1)
 :pattern ( ($generated@@30 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@69 $generated@@102 ($generated@@70 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@70 $generated@@102 $generated@@101))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@103 $generated@@113 $generated@@114 $generated@@115 ($generated@@109 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@118 $generated@@119) $generated@@116)
 :weight 0
)) (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@103 $generated@@120 $generated@@121 $generated@@122 ($generated@@109 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@103 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@103 $generated@@129 $generated@@130 $generated@@131 ($generated@@109 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@103 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)))) (= ($generated@@5 $generated@@104) 5)) (= ($generated@@5 $generated@@105) 6)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@107 $generated@@138 $generated@@139 ($generated@@110 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@140) $generated@@142) $generated@@140)
 :weight 0
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@147 $generated@@148) (= ($generated@@107 $generated@@143 $generated@@144 ($generated@@110 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@148) ($generated@@107 $generated@@143 $generated@@144 $generated@@146 $generated@@148)))
 :weight 0
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (= ($generated@@5 ($generated@@108 $generated@@149 $generated@@150)) 7))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@111 ($generated@@108 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@108 $generated@@151 $generated@@152))
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@112 ($generated@@108 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@108 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Bool) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@10 ($generated@@103 $generated@@104 $generated@@105 $generated@@6 ($generated@@106 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))  (=> (and (or (not (= $generated@@159 $generated@@155)) (not true)) ($generated@@10 ($generated@@69 $generated@@6 ($generated@@107 $generated@@105 $generated@@52 ($generated@@107 $generated@@104 ($generated@@108 $generated@@105 $generated@@52) $generated@@156 $generated@@159) $generated@@157)))) $generated@@158))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105 $generated@@6 ($generated@@106 $generated@@155 $generated@@156 $generated@@157 $generated@@158) $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@32 $generated@@161 ($generated@@30 $generated@@162)) (and (= ($generated@@70 $generated@@28 ($generated@@69 $generated@@28 $generated@@161)) $generated@@161) ($generated@@73 $generated@@28 ($generated@@69 $generated@@28 $generated@@161) ($generated@@30 $generated@@162))))
 :pattern ( ($generated@@32 $generated@@161 ($generated@@30 $generated@@162)))
)))
(assert (= ($generated@@21 $generated@@42) $generated@@3))
(assert (= ($generated@@163 $generated@@42) $generated@@4))
(assert  (=> (<= 0 $generated@@26) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or ($generated@@31 $generated@@164 $generated@@165 $generated@@166) (and (< 0 $generated@@26) ($generated@@32 $generated@@166 $generated@@165))) (= ($generated@@29 $generated@@164 $generated@@165 $generated@@166) ($generated@@22 $generated@@48 $generated@@166)))
 :pattern ( ($generated@@29 $generated@@164 $generated@@165 $generated@@166))
))))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (or ($generated@@53 $generated@@167 $generated@@168) (and (< 1 $generated@@26) ($generated@@32 $generated@@168 $generated@@167))) (<= ($generated@@63 0) ($generated@@50 $generated@@167 $generated@@168)))
 :pattern ( ($generated@@50 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@70 $generated@@7 ($generated@@11 ($generated@@63 $generated@@169))) ($generated@@51 $generated@@52 ($generated@@70 $generated@@7 ($generated@@11 $generated@@169))))
 :pattern ( ($generated@@70 $generated@@7 ($generated@@11 ($generated@@63 $generated@@169))))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@70 $generated@@171 ($generated@@51 $generated@@171 $generated@@170)) ($generated@@51 $generated@@52 ($generated@@70 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@70 $generated@@171 ($generated@@51 $generated@@171 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! ($generated@@27 $generated@@7 $generated@@173 $generated $generated@@172)
 :pattern ( ($generated@@27 $generated@@7 $generated@@173 $generated $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ) (! ($generated@@73 $generated@@7 $generated@@174 $generated)
 :pattern ( ($generated@@73 $generated@@7 $generated@@174 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@183  (=> (and ($generated@@54 $generated@@175 $generated@@176) (= (ControlFlow 0 4) (- 0 3))) ($generated@@73 $generated@@7 ($generated@@11 (ite ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176) $generated@@177 (+ $generated@@177 1))) $generated@@42))))
(let (($generated@@184  (=> (and (not ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176)) (= (ControlFlow 0 6) 4)) $generated@@183)))
(let (($generated@@185  (=> (and ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176) (= (ControlFlow 0 5) 4)) $generated@@183)))
(let (($generated@@186  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (and ($generated@@73 $generated@@7 ($generated@@11 ($generated@@63 0)) $generated) (and (<= ($generated@@63 0) ($generated@@63 0)) (and ($generated@@32 $generated@@176 $generated@@175) ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176)))) (or (and ($generated@@73 $generated@@7 ($generated@@11 ($generated@@63 0)) $generated) (and (<= ($generated@@63 0) ($generated@@63 0)) (and ($generated@@32 $generated@@176 $generated@@175) ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176)))) (exists (($generated@@187 Int) )  (and (<= ($generated@@63 0) $generated@@187) (and ($generated@@32 $generated@@176 $generated@@175) ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176))))))) (=> (or (and ($generated@@73 $generated@@7 ($generated@@11 ($generated@@63 0)) $generated) (and (<= ($generated@@63 0) ($generated@@63 0)) (and ($generated@@32 $generated@@176 $generated@@175) ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176)))) (or (and ($generated@@73 $generated@@7 ($generated@@11 ($generated@@63 0)) $generated) (and (<= ($generated@@63 0) ($generated@@63 0)) (and ($generated@@32 $generated@@176 $generated@@175) ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176)))) (exists (($generated@@188 Int) )  (and (<= ($generated@@63 0) $generated@@188) (and ($generated@@32 $generated@@176 $generated@@175) ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176)))))) (=> (and (and (<= ($generated@@63 0) $generated@@177) (and ($generated@@32 $generated@@176 $generated@@175) ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@176))) (and ($generated@@33 $generated@@176 $generated@@175 $generated@@178) ($generated@@31 $generated@@175 $generated@@175 $generated@@176))) (and (=> (= (ControlFlow 0 7) 5) $generated@@185) (=> (= (ControlFlow 0 7) 6) $generated@@184)))))))
(let (($generated@@189  (=> (and (not ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@179)) (= (ControlFlow 0 12) 7)) $generated@@186)))
(let (($generated@@190  (=> (and ($generated@@23 ($generated@@29 $generated@@175 $generated@@175 $generated@@176) $generated@@179) (= (ControlFlow 0 11) 7)) $generated@@186)))
(let (($generated@@191  (=> (and (and ($generated@@32 $generated@@179 $generated@@175) ($generated@@33 $generated@@179 $generated@@175 $generated@@178)) (and ($generated@@33 $generated@@176 $generated@@175 $generated@@178) ($generated@@31 $generated@@175 $generated@@175 $generated@@176))) (and (=> (= (ControlFlow 0 13) 11) $generated@@190) (=> (= (ControlFlow 0 13) 12) $generated@@189)))))
(let (($generated@@192  (=> (and (not (and ($generated@@32 $generated@@179 $generated@@175) ($generated@@33 $generated@@179 $generated@@175 $generated@@178))) (= (ControlFlow 0 10) 7)) $generated@@186)))
(let (($generated@@193  (=> (<= ($generated@@63 0) $generated@@177) (and (=> (= (ControlFlow 0 14) 13) $generated@@191) (=> (= (ControlFlow 0 14) 10) $generated@@192)))))
(let (($generated@@194  (=> (and (< $generated@@177 ($generated@@63 0)) (= (ControlFlow 0 9) 7)) $generated@@186)))
(let (($generated@@195  (and (=> (= (ControlFlow 0 15) 14) $generated@@193) (=> (= (ControlFlow 0 15) 9) $generated@@194))))
(let (($generated@@196 true))
(let (($generated@@197 true))
(let (($generated@@198  (=> (= $generated@@180 ($generated@@106 $generated@@181 $generated@@178 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 16) 1) $generated@@197) (=> (= (ControlFlow 0 16) 15) $generated@@195)) (=> (= (ControlFlow 0 16) 2) $generated@@196)))))
(let (($generated@@199  (=> (and (and (and ($generated@@34 $generated@@178) ($generated@@182 $generated@@178)) ($generated@@32 $generated@@176 $generated@@175)) (and (= 1 $generated@@26) (= (ControlFlow 0 17) 16))) $generated@@198)))
$generated@@199))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
