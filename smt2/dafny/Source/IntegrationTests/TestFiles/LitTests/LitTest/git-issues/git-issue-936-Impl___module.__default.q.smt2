(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (Int) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@U) Int)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@T T@T) T@T)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T) T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (< $generated@@31 ($generated@@26 $generated@@30))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@30 $generated@@31))) ($generated@@27 ($generated@@25 $generated@@30))))
 :pattern ( ($generated@@24 $generated@@30 $generated@@31) ($generated@@25 $generated@@30))
)))
(assert (= ($generated@@26 $generated@@32) 0))
(assert (= ($generated@@33 $generated@@34) $generated@@5))
(assert ($generated@@35 $generated@@29 $generated@@34 $generated@@36))
(assert (forall (($generated@@38 Int) ) (! (= ($generated@@37 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@41 $generated@@40))
)))
(assert (= ($generated@@7 $generated@@42) 4))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and ($generated@@35 $generated@@42 $generated@@46 ($generated@@44 $generated@@48)) ($generated@@45 $generated@@47 $generated@@48)) ($generated@@35 $generated@@42 ($generated@@43 $generated@@46 $generated@@47) ($generated@@44 $generated@@48)))
 :pattern ( ($generated@@35 $generated@@42 ($generated@@43 $generated@@46 $generated@@47) ($generated@@44 $generated@@48)))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@33 $generated@@50) $generated@@4))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@33 $generated@@52) $generated@@5))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@28 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@28 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@51 $generated@@56) (= $generated@@56 $generated@@34))
 :pattern ( ($generated@@51 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@49 $generated@@57) (exists (($generated@@58 T@U) ) (= $generated@@57 ($generated@@25 $generated@@58))))
 :pattern ( ($generated@@49 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@26 ($generated@@43 $generated@@59 $generated@@60)) (+ 1 ($generated@@26 $generated@@59)))
 :pattern ( ($generated@@43 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@61 ($generated@@53 $generated@@66 $generated@@63) $generated@@64 $generated@@65) ($generated@@62 $generated@@66 $generated@@63 $generated@@64 $generated@@65))
 :pattern ( ($generated@@61 ($generated@@53 $generated@@66 $generated@@63) $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@45 $generated@@67 $generated@@36) (and (= ($generated@@53 $generated@@29 ($generated@@28 $generated@@29 $generated@@67)) $generated@@67) ($generated@@35 $generated@@29 ($generated@@28 $generated@@29 $generated@@67) $generated@@36)))
 :pattern ( ($generated@@45 $generated@@67 $generated@@36))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 Int) ($generated@@70 T@U) ) (!  (and (=> (= $generated@@69 ($generated@@26 $generated@@68)) (= ($generated@@24 ($generated@@43 $generated@@68 $generated@@70) $generated@@69) $generated@@70)) (=> (or (not (= $generated@@69 ($generated@@26 $generated@@68))) (not true)) (= ($generated@@24 ($generated@@43 $generated@@68 $generated@@70) $generated@@69) ($generated@@24 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@24 ($generated@@43 $generated@@68 $generated@@70) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@35 $generated@@29 $generated@@71 $generated@@36) (or ($generated@@49 $generated@@71) ($generated@@51 $generated@@71)))
 :pattern ( ($generated@@51 $generated@@71) ($generated@@35 $generated@@29 $generated@@71 $generated@@36))
 :pattern ( ($generated@@49 $generated@@71) ($generated@@35 $generated@@29 $generated@@71 $generated@@36))
)))
(assert (= ($generated@@7 $generated@@72) 5))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@45 $generated@@73 $generated) (and (= ($generated@@53 $generated@@72 ($generated@@28 $generated@@72 $generated@@73)) $generated@@73) ($generated@@35 $generated@@72 ($generated@@28 $generated@@72 $generated@@73) $generated)))
 :pattern ( ($generated@@45 $generated@@73 $generated))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@45 ($generated@@53 $generated@@76 $generated@@74) $generated@@75) ($generated@@35 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@45 ($generated@@53 $generated@@76 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (<= 0 ($generated@@26 $generated@@77))
 :pattern ( ($generated@@26 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@62 $generated@@42 $generated@@78 ($generated@@44 $generated@@79) $generated@@80) (forall (($generated@@81 Int) ) (!  (=> (and (<= 0 $generated@@81) (< $generated@@81 ($generated@@26 $generated@@78))) ($generated@@61 ($generated@@24 $generated@@78 $generated@@81) $generated@@79 $generated@@80))
 :pattern ( ($generated@@24 $generated@@78 $generated@@81))
)))
 :pattern ( ($generated@@62 $generated@@42 $generated@@78 ($generated@@44 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@44 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@44 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@23 ($generated@@44 $generated@@84)) $generated@@1)
 :pattern ( ($generated@@44 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@33 ($generated@@25 $generated@@85)) $generated@@4)
 :pattern ( ($generated@@25 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 ($generated@@25 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@25 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@28 $generated@@89 ($generated@@53 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@53 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@92 Int) ) (!  (=> (or (and (<= 0 $generated@@92) (< $generated@@92 55296)) (and (<= 57344 $generated@@92) (< $generated@@92 1114112))) (= ($generated@@91 ($generated@@90 $generated@@92)) $generated@@92))
 :pattern ( ($generated@@90 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (< ($generated@@93 $generated@@94) ($generated@@27 ($generated@@25 $generated@@94)))
 :pattern ( ($generated@@25 $generated@@94))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@95 $generated@@106 $generated@@107 $generated@@108 ($generated@@102 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@111 $generated@@112) $generated@@109)
 :weight 0
)) (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@95 $generated@@113 $generated@@114 $generated@@115 ($generated@@102 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@95 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@95 $generated@@122 $generated@@123 $generated@@124 ($generated@@102 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)))) (= ($generated@@7 $generated@@96) 6)) (= ($generated@@7 $generated@@97) 7)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@99 $generated@@131 $generated@@132 ($generated@@103 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@135) $generated@@133)
 :weight 0
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@99 $generated@@136 $generated@@137 ($generated@@103 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@99 $generated@@136 $generated@@137 $generated@@139 $generated@@141)))
 :weight 0
))) (= ($generated@@7 $generated@@100) 8)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@7 ($generated@@101 $generated@@142 $generated@@143)) 9))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@104 ($generated@@101 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@101 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@105 ($generated@@101 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@101 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@12 ($generated@@95 $generated@@96 $generated@@97 $generated@@8 ($generated@@98 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@12 ($generated@@28 $generated@@8 ($generated@@99 $generated@@97 $generated@@100 ($generated@@99 $generated@@96 ($generated@@101 $generated@@97 $generated@@100) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97 $generated@@8 ($generated@@98 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (and (= ($generated@@154 ($generated@@43 $generated@@156 $generated@@157)) $generated@@156) (= ($generated@@155 ($generated@@43 $generated@@156 $generated@@157)) $generated@@157))
 :pattern ( ($generated@@43 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@45 $generated@@158 ($generated@@44 $generated@@159)) (and (= ($generated@@53 $generated@@42 ($generated@@28 $generated@@42 $generated@@158)) $generated@@158) ($generated@@35 $generated@@42 ($generated@@28 $generated@@42 $generated@@158) ($generated@@44 $generated@@159))))
 :pattern ( ($generated@@45 $generated@@158 ($generated@@44 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ) (!  (and (= ($generated@@90 ($generated@@91 $generated@@160)) $generated@@160) (or (and (<= 0 ($generated@@91 $generated@@160)) (< ($generated@@91 $generated@@160) 55296)) (and (<= 57344 ($generated@@91 $generated@@160)) (< ($generated@@91 $generated@@160) 1114112))))
 :pattern ( ($generated@@91 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@161 $generated@@163) ($generated@@35 $generated@@29 $generated@@162 $generated@@36)) ($generated@@62 $generated@@29 $generated@@162 $generated@@36 $generated@@163))
 :pattern ( ($generated@@62 $generated@@29 $generated@@162 $generated@@36 $generated@@163))
)))
(assert (= ($generated@@23 $generated@@36) $generated@@3))
(assert (= ($generated@@164 $generated@@36) $generated@@6))
(assert (= $generated@@34 ($generated@@39 $generated@@29 $generated@@34)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@35 $generated@@29 ($generated@@25 $generated@@165) $generated@@36) ($generated@@35 $generated@@42 $generated@@165 ($generated@@44 $generated)))
 :pattern ( ($generated@@35 $generated@@29 ($generated@@25 $generated@@165) $generated@@36))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@161 $generated@@167) (and ($generated@@49 $generated@@166) ($generated@@62 $generated@@29 $generated@@166 $generated@@36 $generated@@167))) ($generated@@62 $generated@@42 ($generated@@86 $generated@@166) ($generated@@44 $generated) $generated@@167))
 :pattern ( ($generated@@62 $generated@@42 ($generated@@86 $generated@@166) ($generated@@44 $generated) $generated@@167))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@53 $generated@@9 ($generated@@13 ($generated@@37 $generated@@168))) ($generated@@39 $generated@@100 ($generated@@53 $generated@@9 ($generated@@13 $generated@@168))))
 :pattern ( ($generated@@53 $generated@@9 ($generated@@13 ($generated@@37 $generated@@168))))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@25 ($generated@@39 $generated@@42 $generated@@169)) ($generated@@39 $generated@@29 ($generated@@25 $generated@@169)))
 :pattern ( ($generated@@25 ($generated@@39 $generated@@42 $generated@@169)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@53 $generated@@171 ($generated@@39 $generated@@171 $generated@@170)) ($generated@@39 $generated@@100 ($generated@@53 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@53 $generated@@171 ($generated@@39 $generated@@171 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= ($generated@@26 $generated@@172) 0) (= $generated@@172 $generated@@32))
 :pattern ( ($generated@@26 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! ($generated@@62 $generated@@72 $generated@@174 $generated $generated@@173)
 :pattern ( ($generated@@62 $generated@@72 $generated@@174 $generated $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@35 $generated@@42 $generated@@175 ($generated@@44 $generated@@176)) (forall (($generated@@177 Int) ) (!  (=> (and (<= 0 $generated@@177) (< $generated@@177 ($generated@@26 $generated@@175))) ($generated@@45 ($generated@@24 $generated@@175 $generated@@177) $generated@@176))
 :pattern ( ($generated@@24 $generated@@175 $generated@@177))
)))
 :pattern ( ($generated@@35 $generated@@42 $generated@@175 ($generated@@44 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 Int) ) (!  (=> (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@26 $generated@@178))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@178 $generated@@179))) ($generated@@93 $generated@@178)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@178 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ) (! ($generated@@35 $generated@@72 $generated@@180 $generated)
 :pattern ( ($generated@@35 $generated@@72 $generated@@180 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@191  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (= $generated@@181 ($generated@@37 1)) (not ($generated@@49 $generated@@182)))) (=> (=> (= $generated@@181 ($generated@@37 1)) (not ($generated@@49 $generated@@182))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (= $generated@@181 ($generated@@37 2)) ($generated@@49 $generated@@182)))))))
(let (($generated@@192  (=> (and (and (or (not (= $generated@@181 ($generated@@37 2))) (not true)) (= $generated@@183 ($generated@@39 $generated@@29 $generated@@34))) (and (= $generated@@182 $generated@@183) (= (ControlFlow 0 5) 2))) $generated@@191)))
(let (($generated@@193  (=> (and (and (= $generated@@181 ($generated@@37 2)) (= $generated@@184 ($generated@@39 $generated@@29 ($generated@@25 ($generated@@39 $generated@@42 ($generated@@43 $generated@@32 ($generated@@53 $generated@@72 ($generated@@90 90)))))))) (and (= $generated@@182 $generated@@184) (= (ControlFlow 0 4) 2))) $generated@@191)))
(let (($generated@@194  (=> (= $generated@@185 ($generated@@98 $generated@@186 $generated@@187 $generated@@2 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@193) (=> (= (ControlFlow 0 6) 5) $generated@@192)))))
(let (($generated@@195  (=> (and ($generated@@161 $generated@@187) ($generated@@188 $generated@@187)) (=> (and (and ($generated@@35 $generated@@29 $generated@@189 $generated@@36) ($generated@@62 $generated@@29 $generated@@189 $generated@@36 $generated@@187)) (and (= 1 $generated@@190) (= (ControlFlow 0 7) 6))) $generated@@194))))
$generated@@195))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
