(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@U Int) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@71 (Int) T@U)
(declare-fun $generated@@72 (T@U) Int)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (= ($generated@@5 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@26 $generated@@24 $generated@@27) ($generated@@22 $generated@@23 $generated@@26 ($generated@@25 $generated) $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@26 $generated@@24 $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) 0))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and ($generated@@33 $generated@@23 $generated@@36 ($generated@@25 $generated@@38)) ($generated@@35 $generated@@37 $generated@@38)) ($generated@@33 $generated@@23 ($generated@@34 $generated@@36 $generated@@37) ($generated@@25 $generated@@38)))
 :pattern ( ($generated@@33 $generated@@23 ($generated@@34 $generated@@36 $generated@@37) ($generated@@25 $generated@@38)))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 ($generated@@39 $generated@@42 $generated@@41)) $generated@@41)
 :pattern ( ($generated@@39 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@28 ($generated@@34 $generated@@43 $generated@@44)) (+ 1 ($generated@@28 $generated@@43)))
 :pattern ( ($generated@@34 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@45 ($generated@@40 $generated@@49 $generated@@46) $generated@@47 $generated@@48) ($generated@@22 $generated@@49 $generated@@46 $generated@@47 $generated@@48))
 :pattern ( ($generated@@45 ($generated@@40 $generated@@49 $generated@@46) $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@33 $generated@@23 $generated@@50 $generated@@24)  (and ($generated@@33 $generated@@23 $generated@@50 ($generated@@25 $generated)) (< ($generated@@28 $generated@@50) 10)))
 :pattern ( ($generated@@33 $generated@@23 $generated@@50 $generated@@24))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@35 $generated@@51 $generated@@24) (and (= ($generated@@40 $generated@@23 ($generated@@39 $generated@@23 $generated@@51)) $generated@@51) ($generated@@33 $generated@@23 ($generated@@39 $generated@@23 $generated@@51) $generated@@24)))
 :pattern ( ($generated@@35 $generated@@51 $generated@@24))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 Int) ($generated@@55 T@U) ) (!  (and (=> (= $generated@@54 ($generated@@28 $generated@@53)) (= ($generated@@52 ($generated@@34 $generated@@53 $generated@@55) $generated@@54) $generated@@55)) (=> (or (not (= $generated@@54 ($generated@@28 $generated@@53))) (not true)) (= ($generated@@52 ($generated@@34 $generated@@53 $generated@@55) $generated@@54) ($generated@@52 $generated@@53 $generated@@54))))
 :pattern ( ($generated@@52 ($generated@@34 $generated@@53 $generated@@55) $generated@@54))
)))
(assert (= ($generated@@5 $generated@@56) 4))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@35 $generated@@57 $generated) (and (= ($generated@@40 $generated@@56 ($generated@@39 $generated@@56 $generated@@57)) $generated@@57) ($generated@@33 $generated@@56 ($generated@@39 $generated@@56 $generated@@57) $generated)))
 :pattern ( ($generated@@35 $generated@@57 $generated))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@35 ($generated@@40 $generated@@60 $generated@@58) $generated@@59) ($generated@@33 $generated@@60 $generated@@58 $generated@@59))
 :pattern ( ($generated@@35 ($generated@@40 $generated@@60 $generated@@58) $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (<= 0 ($generated@@28 $generated@@61))
 :pattern ( ($generated@@28 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@62 ($generated@@25 $generated@@63) $generated@@64) (forall (($generated@@65 Int) ) (!  (=> (and (<= 0 $generated@@65) (< $generated@@65 ($generated@@28 $generated@@62))) ($generated@@45 ($generated@@52 $generated@@62 $generated@@65) $generated@@63 $generated@@64))
 :pattern ( ($generated@@52 $generated@@62 $generated@@65))
)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@62 ($generated@@25 $generated@@63) $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 ($generated@@25 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@25 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@21 ($generated@@25 $generated@@68)) $generated@@1)
 :pattern ( ($generated@@25 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@39 $generated@@70 ($generated@@40 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@40 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@73 Int) ) (!  (=> (or (and (<= 0 $generated@@73) (< $generated@@73 55296)) (and (<= 57344 $generated@@73) (< $generated@@73 1114112))) (= ($generated@@72 ($generated@@71 $generated@@73)) $generated@@73))
 :pattern ( ($generated@@71 $generated@@73))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@74 $generated@@85 $generated@@86 $generated@@87 ($generated@@81 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@74 $generated@@92 $generated@@93 $generated@@94 ($generated@@81 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@74 $generated@@101 $generated@@102 $generated@@103 ($generated@@81 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@74 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))) (= ($generated@@5 $generated@@75) 5)) (= ($generated@@5 $generated@@76) 6)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@78 $generated@@110 $generated@@111 ($generated@@82 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@78 $generated@@115 $generated@@116 ($generated@@82 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@78 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@5 $generated@@79) 7)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@5 ($generated@@80 $generated@@121 $generated@@122)) 8))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@80 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@80 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@10 ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@78 $generated@@76 $generated@@79 ($generated@@78 $generated@@75 ($generated@@80 $generated@@76 $generated@@79) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@6 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (and (= ($generated@@133 ($generated@@34 $generated@@135 $generated@@136)) $generated@@135) (= ($generated@@134 ($generated@@34 $generated@@135 $generated@@136)) $generated@@136))
 :pattern ( ($generated@@34 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@35 $generated@@137 ($generated@@25 $generated@@138)) (and (= ($generated@@40 $generated@@23 ($generated@@39 $generated@@23 $generated@@137)) $generated@@137) ($generated@@33 $generated@@23 ($generated@@39 $generated@@23 $generated@@137) ($generated@@25 $generated@@138))))
 :pattern ( ($generated@@35 $generated@@137 ($generated@@25 $generated@@138)))
)))
(assert (forall (($generated@@139 T@U) ) (!  (and (= ($generated@@71 ($generated@@72 $generated@@139)) $generated@@139) (or (and (<= 0 ($generated@@72 $generated@@139)) (< ($generated@@72 $generated@@139) 55296)) (and (<= 57344 ($generated@@72 $generated@@139)) (< ($generated@@72 $generated@@139) 1114112))))
 :pattern ( ($generated@@72 $generated@@139))
)))
(assert (= ($generated@@21 $generated@@24) $generated@@3))
(assert (= ($generated@@140 $generated@@24) $generated@@4))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@40 $generated@@142 ($generated@@30 $generated@@142 $generated@@141)) ($generated@@30 $generated@@79 ($generated@@40 $generated@@142 $generated@@141)))
 :pattern ( ($generated@@40 $generated@@142 ($generated@@30 $generated@@142 $generated@@141)))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> (= ($generated@@28 $generated@@143) 0) (= $generated@@143 $generated@@29))
 :pattern ( ($generated@@28 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! ($generated@@22 $generated@@56 $generated@@145 $generated $generated@@144)
 :pattern ( ($generated@@22 $generated@@56 $generated@@145 $generated $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@33 $generated@@23 $generated@@146 ($generated@@25 $generated@@147)) (forall (($generated@@148 Int) ) (!  (=> (and (<= 0 $generated@@148) (< $generated@@148 ($generated@@28 $generated@@146))) ($generated@@35 ($generated@@52 $generated@@146 $generated@@148) $generated@@147))
 :pattern ( ($generated@@52 $generated@@146 $generated@@148))
)))
 :pattern ( ($generated@@33 $generated@@23 $generated@@146 ($generated@@25 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ) (! ($generated@@33 $generated@@56 $generated@@149 $generated)
 :pattern ( ($generated@@33 $generated@@56 $generated@@149 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@157  (=> (and (= $generated@@150 ($generated@@77 $generated@@151 $generated@@152 $generated@@2 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@33 $generated@@23 ($generated@@30 $generated@@23 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 ($generated@@34 $generated@@29 ($generated@@40 $generated@@56 ($generated@@71 70))) ($generated@@40 $generated@@56 ($generated@@71 97))) ($generated@@40 $generated@@56 ($generated@@71 114))) ($generated@@40 $generated@@56 ($generated@@71 32))) ($generated@@40 $generated@@56 ($generated@@71 116))) ($generated@@40 $generated@@56 ($generated@@71 111))) ($generated@@40 $generated@@56 ($generated@@71 111))) ($generated@@40 $generated@@56 ($generated@@71 32))) ($generated@@40 $generated@@56 ($generated@@71 108))) ($generated@@40 $generated@@56 ($generated@@71 111))) ($generated@@40 $generated@@56 ($generated@@71 110))) ($generated@@40 $generated@@56 ($generated@@71 103))) ($generated@@40 $generated@@56 ($generated@@71 32))) ($generated@@40 $generated@@56 ($generated@@71 73))) ($generated@@40 $generated@@56 ($generated@@71 39))) ($generated@@40 $generated@@56 ($generated@@71 109))) ($generated@@40 $generated@@56 ($generated@@71 32))) ($generated@@40 $generated@@56 ($generated@@71 115))) ($generated@@40 $generated@@56 ($generated@@71 117))) ($generated@@40 $generated@@56 ($generated@@71 114))) ($generated@@40 $generated@@56 ($generated@@71 101))) ($generated@@40 $generated@@56 ($generated@@71 32))) ($generated@@40 $generated@@56 ($generated@@71 121))) ($generated@@40 $generated@@56 ($generated@@71 111))) ($generated@@40 $generated@@56 ($generated@@71 117))) ($generated@@40 $generated@@56 ($generated@@71 39))) ($generated@@40 $generated@@56 ($generated@@71 108))) ($generated@@40 $generated@@56 ($generated@@71 108))) ($generated@@40 $generated@@56 ($generated@@71 32))) ($generated@@40 $generated@@56 ($generated@@71 97))) ($generated@@40 $generated@@56 ($generated@@71 103))) ($generated@@40 $generated@@56 ($generated@@71 114))) ($generated@@40 $generated@@56 ($generated@@71 101))) ($generated@@40 $generated@@56 ($generated@@71 101)))) $generated@@24))))
(let (($generated@@158  (=> (and ($generated@@153 $generated@@152) ($generated@@154 $generated@@152)) (=> (and (and (and ($generated@@33 $generated@@23 $generated@@155 $generated@@24) ($generated@@22 $generated@@23 $generated@@155 $generated@@24 $generated@@152)) true) (and (= 1 $generated@@156) (= (ControlFlow 0 3) 2))) $generated@@157))))
$generated@@158)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
