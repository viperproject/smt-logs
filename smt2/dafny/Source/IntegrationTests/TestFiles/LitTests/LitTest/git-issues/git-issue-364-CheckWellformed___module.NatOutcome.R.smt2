(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 (T@U Int) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@U) Int)
(declare-fun $generated@@53 (T@U) Int)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (Int) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@107 (T@U) Int)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@179 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (= ($generated@@11 $generated@@32) 3))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@35 T@U) ) (!  (=> (or ($generated@@30 $generated@@35) (and (< 0 $generated@@28) ($generated@@31 $generated@@32 $generated@@35 $generated@@33))) (= ($generated@@29 $generated@@35) (ite ($generated@@34 $generated@@35) 12 14)))
 :pattern ( ($generated@@29 $generated@@35))
))))
(assert (forall (($generated@@39 T@U) ) (!  (=> ($generated@@37 $generated@@39) (and (and (<= ($generated@@38 0) ($generated@@36 $generated@@39)) (< ($generated@@36 $generated@@39) (+ ($generated@@29 $generated@@39) 1))) (< ($generated@@36 $generated@@39) 1)))
 :pattern ( ($generated@@36 $generated@@39))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@42 $generated@@45) (and (< 1 $generated@@28) (and ($generated@@41 $generated@@44) (and ($generated@@31 $generated@@32 $generated@@45 $generated@@33) ($generated@@43 $generated@@32 $generated@@45 $generated@@33 $generated@@44))))) (and ($generated@@37 $generated@@45) (= ($generated@@40 $generated@@45) (let (($generated@@46 ($generated@@36 $generated@@45)))
$generated@@46))))
 :pattern ( ($generated@@40 $generated@@45) ($generated@@41 $generated@@44))
))))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! ($generated@@43 $generated@@13 $generated@@48 $generated@@47 $generated@@49)
 :pattern ( ($generated@@43 $generated@@13 $generated@@48 $generated@@47 $generated@@49))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ) (!  (=> (and (<= 0 $generated@@56) (< $generated@@56 ($generated@@52 $generated@@55))) (< ($generated@@53 ($generated@@54 $generated@@32 ($generated@@50 $generated@@55 $generated@@56))) ($generated@@53 ($generated@@51 $generated@@55))))
 :pattern ( ($generated@@50 $generated@@55 $generated@@56) ($generated@@51 $generated@@55))
)))
(assert (= ($generated@@52 $generated@@57) 0))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@42 ($generated@@58 $generated@@32 $generated@@60)) (and (< 1 $generated@@28) (and ($generated@@41 $generated@@59) (and ($generated@@31 $generated@@32 $generated@@60 $generated@@33) ($generated@@43 $generated@@32 $generated@@60 $generated@@33 $generated@@59))))) (and ($generated@@37 $generated@@60) (= ($generated@@40 ($generated@@58 $generated@@32 $generated@@60)) (let (($generated@@61 ($generated@@36 $generated@@60)))
$generated@@61))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@58 $generated@@32 $generated@@60)) ($generated@@41 $generated@@59))
))))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@62 T@U) ) (!  (=> (or ($generated@@30 ($generated@@58 $generated@@32 $generated@@62)) (and (< 0 $generated@@28) ($generated@@31 $generated@@32 $generated@@62 $generated@@33))) (= ($generated@@29 ($generated@@58 $generated@@32 $generated@@62)) (ite ($generated@@34 ($generated@@58 $generated@@32 $generated@@62)) 12 14)))
 :weight 3
 :pattern ( ($generated@@29 ($generated@@58 $generated@@32 $generated@@62)))
))))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@38 $generated@@63) $generated@@63)
 :pattern ( ($generated@@38 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@58 $generated@@65 $generated@@64) $generated@@64)
 :pattern ( ($generated@@58 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@34 $generated@@67) (= ($generated@@66 $generated@@67) $generated@@7))
 :pattern ( ($generated@@34 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 $generated@@69) (= ($generated@@66 $generated@@69) $generated@@8))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@54 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@54 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@34 $generated@@74) (exists (($generated@@75 Int) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@34 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@68 $generated@@76) (exists (($generated@@77 T@U) ) (= $generated@@76 ($generated@@51 $generated@@77))))
 :pattern ( ($generated@@68 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@31 $generated@@13 $generated@@78 $generated@@47) (<= ($generated@@38 0) ($generated@@18 $generated@@78)))
 :pattern ( ($generated@@31 $generated@@13 $generated@@78 $generated@@47))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@70 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@43 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@79 ($generated@@70 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@84 $generated@@85 $generated@@47) (and (= ($generated@@70 $generated@@13 ($generated@@54 $generated@@13 $generated@@85)) $generated@@85) ($generated@@31 $generated@@13 ($generated@@54 $generated@@13 $generated@@85) $generated@@47)))
 :pattern ( ($generated@@84 $generated@@85 $generated@@47))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@84 $generated@@86 $generated@@33) (and (= ($generated@@70 $generated@@32 ($generated@@54 $generated@@32 $generated@@86)) $generated@@86) ($generated@@31 $generated@@32 ($generated@@54 $generated@@32 $generated@@86) $generated@@33)))
 :pattern ( ($generated@@84 $generated@@86 $generated@@33))
)))
(assert (forall (($generated@@87 Int) ) (! (= ($generated@@31 $generated@@32 ($generated@@73 $generated@@87) $generated@@33) ($generated@@31 $generated@@13 ($generated@@17 $generated@@87) $generated@@47))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@73 $generated@@87) $generated@@33))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@88 T@U) ) (!  (=> (or ($generated@@42 $generated@@88) (and (< 1 $generated@@28) ($generated@@31 $generated@@32 $generated@@88 $generated@@33))) (<= ($generated@@38 0) ($generated@@40 $generated@@88)))
 :pattern ( ($generated@@40 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@89 $generated@@33) (or ($generated@@34 $generated@@89) ($generated@@68 $generated@@89)))
 :pattern ( ($generated@@68 $generated@@89) ($generated@@31 $generated@@32 $generated@@89 $generated@@33))
 :pattern ( ($generated@@34 $generated@@89) ($generated@@31 $generated@@32 $generated@@89 $generated@@33))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@84 $generated@@90 $generated@@0) (and (= ($generated@@70 $generated@@13 ($generated@@54 $generated@@13 $generated@@90)) $generated@@90) ($generated@@31 $generated@@13 ($generated@@54 $generated@@13 $generated@@90) $generated@@0)))
 :pattern ( ($generated@@84 $generated@@90 $generated@@0))
)))
(assert (= ($generated@@11 $generated@@91) 4))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@84 $generated@@92 $generated) (and (= ($generated@@70 $generated@@91 ($generated@@54 $generated@@91 $generated@@92)) $generated@@92) ($generated@@31 $generated@@91 ($generated@@54 $generated@@91 $generated@@92) $generated)))
 :pattern ( ($generated@@84 $generated@@92 $generated))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@84 ($generated@@70 $generated@@95 $generated@@93) $generated@@94) ($generated@@31 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@84 ($generated@@70 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@52 $generated@@96))
 :pattern ( ($generated@@52 $generated@@96))
)))
(assert (= ($generated@@11 $generated@@97) 5))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@43 $generated@@97 $generated@@99 ($generated@@98 $generated@@100) $generated@@101) (forall (($generated@@102 Int) ) (!  (=> (and (<= 0 $generated@@102) (< $generated@@102 ($generated@@52 $generated@@99))) ($generated@@79 ($generated@@50 $generated@@99 $generated@@102) $generated@@100 $generated@@101))
 :pattern ( ($generated@@50 $generated@@99 $generated@@102))
)))
 :pattern ( ($generated@@43 $generated@@97 $generated@@99 ($generated@@98 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@98 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@98 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@27 ($generated@@98 $generated@@105)) $generated@@3)
 :pattern ( ($generated@@98 $generated@@105))
)))
(assert (forall (($generated@@106 Int) ) (! (= ($generated@@66 ($generated@@73 $generated@@106)) $generated@@7)
 :pattern ( ($generated@@73 $generated@@106))
)))
(assert (forall (($generated@@108 Int) ) (! (= ($generated@@107 ($generated@@73 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@73 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@66 ($generated@@51 $generated@@109)) $generated@@8)
 :pattern ( ($generated@@51 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@110 ($generated@@51 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@51 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@54 $generated@@113 ($generated@@70 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@70 $generated@@113 $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ) (! (< ($generated@@114 $generated@@115) ($generated@@53 ($generated@@51 $generated@@115)))
 :pattern ( ($generated@@51 $generated@@115))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@116 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@116 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@116 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@11 $generated@@117) 6)) (= ($generated@@11 $generated@@118) 7)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@120 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@120 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@120 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@11 $generated@@121) 8)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@11 ($generated@@122 $generated@@163 $generated@@164)) 9))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@16 ($generated@@116 $generated@@117 $generated@@118 $generated@@12 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@16 ($generated@@54 $generated@@12 ($generated@@120 $generated@@118 $generated@@121 ($generated@@120 $generated@@117 ($generated@@122 $generated@@118 $generated@@121) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@12 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@84 $generated@@175 ($generated@@98 $generated@@176)) (and (= ($generated@@70 $generated@@97 ($generated@@54 $generated@@97 $generated@@175)) $generated@@175) ($generated@@31 $generated@@97 ($generated@@54 $generated@@97 $generated@@175) ($generated@@98 $generated@@176))))
 :pattern ( ($generated@@84 $generated@@175 ($generated@@98 $generated@@176)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@41 $generated@@178) ($generated@@31 $generated@@32 $generated@@177 $generated@@33)) ($generated@@43 $generated@@32 $generated@@177 $generated@@33 $generated@@178))
 :pattern ( ($generated@@43 $generated@@32 $generated@@177 $generated@@33 $generated@@178))
)))
(assert (= ($generated@@27 $generated@@47) $generated@@5))
(assert (= ($generated@@179 $generated@@47) $generated@@9))
(assert (= ($generated@@27 $generated@@33) $generated@@6))
(assert (= ($generated@@179 $generated@@33) $generated@@10))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@31 $generated@@32 ($generated@@51 $generated@@180) $generated@@33) ($generated@@31 $generated@@97 $generated@@180 ($generated@@98 $generated)))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@51 $generated@@180) $generated@@33))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@41 $generated@@182) (and ($generated@@68 $generated@@181) ($generated@@43 $generated@@32 $generated@@181 $generated@@33 $generated@@182))) ($generated@@43 $generated@@97 ($generated@@110 $generated@@181) ($generated@@98 $generated) $generated@@182))
 :pattern ( ($generated@@43 $generated@@97 ($generated@@110 $generated@@181) ($generated@@98 $generated) $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@41 $generated@@184) (and ($generated@@34 $generated@@183) ($generated@@43 $generated@@32 $generated@@183 $generated@@33 $generated@@184))) ($generated@@43 $generated@@13 ($generated@@17 ($generated@@107 $generated@@183)) $generated@@47 $generated@@184))
 :pattern ( ($generated@@43 $generated@@13 ($generated@@17 ($generated@@107 $generated@@183)) $generated@@47 $generated@@184))
)))
(assert (forall (($generated@@185 Int) ) (! (= ($generated@@70 $generated@@13 ($generated@@17 ($generated@@38 $generated@@185))) ($generated@@58 $generated@@121 ($generated@@70 $generated@@13 ($generated@@17 $generated@@185))))
 :pattern ( ($generated@@70 $generated@@13 ($generated@@17 ($generated@@38 $generated@@185))))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@73 ($generated@@38 $generated@@186)) ($generated@@58 $generated@@32 ($generated@@73 $generated@@186)))
 :pattern ( ($generated@@73 ($generated@@38 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@51 ($generated@@58 $generated@@97 $generated@@187)) ($generated@@58 $generated@@32 ($generated@@51 $generated@@187)))
 :pattern ( ($generated@@51 ($generated@@58 $generated@@97 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@70 $generated@@189 ($generated@@58 $generated@@189 $generated@@188)) ($generated@@58 $generated@@121 ($generated@@70 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@70 $generated@@189 ($generated@@58 $generated@@189 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= ($generated@@52 $generated@@190) 0) (= $generated@@190 $generated@@57))
 :pattern ( ($generated@@52 $generated@@190))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@191 T@U) ) (!  (=> (or ($generated@@30 $generated@@191) (and (< 0 $generated@@28) ($generated@@31 $generated@@32 $generated@@191 $generated@@33))) (and (< ($generated@@29 $generated@@191) 20) (<= ($generated@@38 0) ($generated@@29 $generated@@191))))
 :pattern ( ($generated@@29 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! ($generated@@43 $generated@@13 $generated@@193 $generated@@0 $generated@@192)
 :pattern ( ($generated@@43 $generated@@13 $generated@@193 $generated@@0 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@43 $generated@@91 $generated@@195 $generated $generated@@194)
 :pattern ( ($generated@@43 $generated@@91 $generated@@195 $generated $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@31 $generated@@97 $generated@@196 ($generated@@98 $generated@@197)) (forall (($generated@@198 Int) ) (!  (=> (and (<= 0 $generated@@198) (< $generated@@198 ($generated@@52 $generated@@196))) ($generated@@84 ($generated@@50 $generated@@196 $generated@@198) $generated@@197))
 :pattern ( ($generated@@50 $generated@@196 $generated@@198))
)))
 :pattern ( ($generated@@31 $generated@@97 $generated@@196 ($generated@@98 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 Int) ) (!  (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@52 $generated@@199))) (< ($generated@@53 ($generated@@54 $generated@@32 ($generated@@50 $generated@@199 $generated@@200))) ($generated@@114 $generated@@199)))
 :pattern ( ($generated@@53 ($generated@@54 $generated@@32 ($generated@@50 $generated@@199 $generated@@200))))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@31 $generated@@13 $generated@@201 $generated@@0)
 :pattern ( ($generated@@31 $generated@@13 $generated@@201 $generated@@0))
)))
(assert (forall (($generated@@202 T@U) ) (! ($generated@@31 $generated@@91 $generated@@202 $generated)
 :pattern ( ($generated@@31 $generated@@91 $generated@@202 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@210  (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (and ($generated@@31 $generated@@13 ($generated@@17 ($generated@@38 (- 1 1))) $generated@@0) (and (and (<= ($generated@@38 0) ($generated@@38 (- 1 1))) (< (- 1 1) (+ ($generated@@29 $generated@@203) 1))) (< (- 1 1) 1))) (or (and ($generated@@31 $generated@@13 ($generated@@17 (- (+ ($generated@@29 $generated@@203) 1) 1)) $generated@@0) (and (and (<= ($generated@@38 0) (- (+ ($generated@@29 $generated@@203) 1) 1)) (< (- (+ ($generated@@29 $generated@@203) 1) 1) (+ ($generated@@29 $generated@@203) 1))) (< (- (+ ($generated@@29 $generated@@203) 1) 1) 1))) (or (and ($generated@@31 $generated@@13 ($generated@@17 ($generated@@38 0)) $generated@@0) (and (and (<= ($generated@@38 0) ($generated@@38 0)) (< 0 (+ ($generated@@29 $generated@@203) 1))) (< 0 1))) (or (and ($generated@@31 $generated@@13 ($generated@@17 ($generated@@38 0)) $generated@@0) (and (and (<= ($generated@@38 0) ($generated@@38 0)) (< 0 (+ ($generated@@29 $generated@@203) 1))) (< 0 1))) (exists (($generated@@211 Int) )  (and (and (<= ($generated@@38 0) $generated@@211) (< $generated@@211 (+ ($generated@@29 $generated@@203) 1))) (< $generated@@211 1)))))))) (=> (or (and ($generated@@31 $generated@@13 ($generated@@17 ($generated@@38 (- 1 1))) $generated@@0) (and (and (<= ($generated@@38 0) ($generated@@38 (- 1 1))) (< (- 1 1) (+ ($generated@@29 $generated@@203) 1))) (< (- 1 1) 1))) (or (and ($generated@@31 $generated@@13 ($generated@@17 (- (+ ($generated@@29 $generated@@203) 1) 1)) $generated@@0) (and (and (<= ($generated@@38 0) (- (+ ($generated@@29 $generated@@203) 1) 1)) (< (- (+ ($generated@@29 $generated@@203) 1) 1) (+ ($generated@@29 $generated@@203) 1))) (< (- (+ ($generated@@29 $generated@@203) 1) 1) 1))) (or (and ($generated@@31 $generated@@13 ($generated@@17 ($generated@@38 0)) $generated@@0) (and (and (<= ($generated@@38 0) ($generated@@38 0)) (< 0 (+ ($generated@@29 $generated@@203) 1))) (< 0 1))) (or (and ($generated@@31 $generated@@13 ($generated@@17 ($generated@@38 0)) $generated@@0) (and (and (<= ($generated@@38 0) ($generated@@38 0)) (< 0 (+ ($generated@@29 $generated@@203) 1))) (< 0 1))) (exists (($generated@@212 Int) )  (and (and (<= ($generated@@38 0) $generated@@212) (< $generated@@212 (+ ($generated@@29 $generated@@203) 1))) (< $generated@@212 1))))))) (=> (and (and (and (and (<= ($generated@@38 0) $generated@@204) (< $generated@@204 (+ ($generated@@29 $generated@@203) 1))) (< $generated@@204 1)) (=> (<= ($generated@@38 0) $generated@@205) ($generated@@30 $generated@@203))) (and (and (<= ($generated@@38 0) $generated@@205) (< $generated@@205 (+ ($generated@@29 $generated@@203) 1))) (< $generated@@205 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (= $generated@@204 $generated@@205)) (=> (= $generated@@204 $generated@@205) (=> (and ($generated@@37 $generated@@203) (= (ControlFlow 0 4) (- 0 3))) ($generated@@31 $generated@@13 ($generated@@17 $generated@@204) $generated@@47)))))))))
(let (($generated@@213  (=> (and (not (and (<= ($generated@@38 0) $generated@@204) (< $generated@@204 (+ ($generated@@29 $generated@@203) 1)))) (= (ControlFlow 0 8) 4)) $generated@@210)))
(let (($generated@@214  (=> (and (and (<= ($generated@@38 0) $generated@@204) (< $generated@@204 (+ ($generated@@29 $generated@@203) 1))) (= (ControlFlow 0 7) 4)) $generated@@210)))
(let (($generated@@215  (=> (< $generated@@204 ($generated@@38 0)) (and (=> (= (ControlFlow 0 10) 7) $generated@@214) (=> (= (ControlFlow 0 10) 8) $generated@@213)))))
(let (($generated@@216  (=> (<= ($generated@@38 0) $generated@@204) (=> (and ($generated@@79 ($generated@@70 $generated@@32 $generated@@203) $generated@@33 $generated@@206) ($generated@@30 $generated@@203)) (and (=> (= (ControlFlow 0 9) 7) $generated@@214) (=> (= (ControlFlow 0 9) 8) $generated@@213))))))
(let (($generated@@217  (and (=> (= (ControlFlow 0 11) 9) $generated@@216) (=> (= (ControlFlow 0 11) 10) $generated@@215))))
(let (($generated@@218 true))
(let (($generated@@219 true))
(let (($generated@@220  (=> (= $generated@@207 ($generated@@119 $generated@@208 $generated@@206 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@219) (=> (= (ControlFlow 0 12) 11) $generated@@217)) (=> (= (ControlFlow 0 12) 2) $generated@@218)))))
(let (($generated@@221  (=> (and ($generated@@41 $generated@@206) ($generated@@209 $generated@@206)) (=> (and (and ($generated@@31 $generated@@32 $generated@@203 $generated@@33) ($generated@@43 $generated@@32 $generated@@203 $generated@@33 $generated@@206)) (and (= 1 $generated@@28) (= (ControlFlow 0 13) 12))) $generated@@220))))
$generated@@221)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
