(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@106 () T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@28) $generated@@6))
(assert (= ($generated@@10 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@33 $generated@@32) ($generated@@29 $generated@@33))
 :pattern ( ($generated@@29 $generated@@33) ($generated@@30 $generated@@31 $generated@@33 $generated@@32))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@36 $generated@@38) ($generated@@34 $generated@@31 $generated@@28 ($generated@@35 $generated@@37) $generated@@38))
 :pattern ( ($generated@@34 $generated@@31 $generated@@28 ($generated@@35 $generated@@37) $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ) (! ($generated@@30 $generated@@31 $generated@@28 ($generated@@35 $generated@@39))
 :pattern ( ($generated@@30 $generated@@31 $generated@@28 ($generated@@35 $generated@@39)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@41 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@41 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@41 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@10 $generated@@42) 4)) (= ($generated@@10 $generated@@43) 5)) (= ($generated@@10 $generated@@44) 6)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@10 ($generated@@45 $generated@@61 $generated@@62)) 7))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@45 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@45 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@45 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@40 $generated@@67 $generated@@68) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@15 ($generated@@46 $generated@@11 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@44 ($generated@@45 $generated@@42 $generated@@43) $generated@@67 $generated@@69) $generated@@1))) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@44 ($generated@@45 $generated@@42 $generated@@43) $generated@@68 $generated@@69) $generated@@1))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@44 ($generated@@45 $generated@@42 $generated@@43) $generated@@68 $generated@@69) $generated@@1))
)))
 :pattern ( ($generated@@40 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@29 $generated@@73) (= ($generated@@27 $generated@@73) $generated@@5))
 :pattern ( ($generated@@29 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@74 $generated@@75) (= ($generated@@27 $generated@@75) $generated@@6))
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 $generated@@77) (= ($generated@@27 $generated@@77) $generated@@7))
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@46 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@46 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@74 $generated@@81) (= $generated@@81 $generated@@28))
 :pattern ( ($generated@@74 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@29 $generated@@83) (exists (($generated@@84 T@U) ) (= $generated@@83 ($generated@@82 $generated@@84))))
 :pattern ( ($generated@@29 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@76 $generated@@86) (exists (($generated@@87 T@U) ) (= $generated@@86 ($generated@@85 $generated@@87))))
 :pattern ( ($generated@@76 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@78 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@34 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@78 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@40 $generated@@93 $generated@@94) (=> ($generated@@88 $generated@@95 $generated@@96 $generated@@93) ($generated@@88 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@40 $generated@@93 $generated@@94) ($generated@@88 $generated@@95 $generated@@96 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@40 $generated@@97 $generated@@98) (=> ($generated@@34 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@34 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@40 $generated@@97 $generated@@98) ($generated@@34 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@26 ($generated@@35 $generated@@103)) $generated@@4) (= ($generated@@102 ($generated@@35 $generated@@103)) $generated@@9))
 :pattern ( ($generated@@35 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@104 $generated@@105 $generated@@32) (and (= ($generated@@78 $generated@@31 ($generated@@46 $generated@@31 $generated@@105)) $generated@@105) ($generated@@30 $generated@@31 ($generated@@46 $generated@@31 $generated@@105) $generated@@32)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@32))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@104 $generated@@107 $generated@@106) (and (= ($generated@@78 $generated@@31 ($generated@@46 $generated@@31 $generated@@107)) $generated@@107) ($generated@@30 $generated@@31 ($generated@@46 $generated@@31 $generated@@107) $generated@@106)))
 :pattern ( ($generated@@104 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@36 $generated@@110) (= ($generated@@34 $generated@@31 ($generated@@85 $generated@@109) ($generated@@35 $generated@@108) $generated@@110) ($generated@@88 $generated@@109 $generated@@108 $generated@@110)))
 :pattern ( ($generated@@34 $generated@@31 ($generated@@85 $generated@@109) ($generated@@35 $generated@@108) $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@82 $generated@@111) $generated@@32) ($generated@@30 $generated@@31 $generated@@111 ($generated@@35 $generated@@106)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@82 $generated@@111) $generated@@32))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@113 ($generated@@35 $generated@@112)) (or ($generated@@74 $generated@@113) ($generated@@76 $generated@@113)))
 :pattern ( ($generated@@76 $generated@@113) ($generated@@30 $generated@@31 $generated@@113 ($generated@@35 $generated@@112)))
 :pattern ( ($generated@@74 $generated@@113) ($generated@@30 $generated@@31 $generated@@113 ($generated@@35 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or (not (= $generated@@114 $generated@@116)) (not true)) (=> (and ($generated@@40 $generated@@114 $generated@@115) ($generated@@40 $generated@@115 $generated@@116)) ($generated@@40 $generated@@114 $generated@@116)))
 :pattern ( ($generated@@40 $generated@@114 $generated@@115) ($generated@@40 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@104 $generated@@117 $generated) (and (= ($generated@@78 $generated@@11 ($generated@@46 $generated@@11 $generated@@117)) $generated@@117) ($generated@@30 $generated@@11 ($generated@@46 $generated@@11 $generated@@117) $generated)))
 :pattern ( ($generated@@104 $generated@@117 $generated))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@104 ($generated@@78 $generated@@120 $generated@@118) $generated@@119) ($generated@@30 $generated@@120 $generated@@118 $generated@@119))
 :pattern ( ($generated@@104 ($generated@@78 $generated@@120 $generated@@118) $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@35 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@35 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@27 ($generated@@82 $generated@@123)) $generated@@5)
 :pattern ( ($generated@@82 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@82 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@82 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@27 ($generated@@85 $generated@@126)) $generated@@7)
 :pattern ( ($generated@@85 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@85 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@85 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@46 $generated@@130 ($generated@@78 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@78 $generated@@130 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@85 $generated@@132) ($generated@@35 $generated@@131)) ($generated@@104 $generated@@132 $generated@@131))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@85 $generated@@132) ($generated@@35 $generated@@131)))
)))
(assert (forall (($generated@@134 T@U) ) (! (< ($generated@@133 $generated@@134) ($generated@@133 ($generated@@82 $generated@@134)))
 :pattern ( ($generated@@82 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (< ($generated@@135 $generated@@136) ($generated@@133 ($generated@@85 $generated@@136)))
 :pattern ( ($generated@@85 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@36 $generated@@139) (and ($generated@@76 $generated@@137) ($generated@@34 $generated@@31 $generated@@137 ($generated@@35 $generated@@138) $generated@@139))) ($generated@@88 ($generated@@127 $generated@@137) $generated@@138 $generated@@139))
 :pattern ( ($generated@@88 ($generated@@127 $generated@@137) $generated@@138 $generated@@139))
)))
(assert  (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@140 $generated@@143 $generated@@144 $generated@@145 ($generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@148 $generated@@149) $generated@@146)
 :weight 0
)) (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@140 $generated@@150 $generated@@151 $generated@@152 ($generated@@142 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@140 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@140 $generated@@159 $generated@@160 $generated@@161 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@140 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@15 ($generated@@140 $generated@@44 $generated@@42 $generated@@11 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@44 ($generated@@45 $generated@@42 $generated@@43) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@140 $generated@@44 $generated@@42 $generated@@11 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@135 ($generated@@78 $generated@@31 $generated@@174)) ($generated@@133 $generated@@174))
 :pattern ( ($generated@@135 ($generated@@78 $generated@@31 $generated@@174)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@104 $generated@@176 ($generated@@35 $generated@@175)) (and (= ($generated@@78 $generated@@31 ($generated@@46 $generated@@31 $generated@@176)) $generated@@176) ($generated@@30 $generated@@31 ($generated@@46 $generated@@31 $generated@@176) ($generated@@35 $generated@@175))))
 :pattern ( ($generated@@104 $generated@@176 ($generated@@35 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@36 $generated@@178) ($generated@@30 $generated@@31 $generated@@177 $generated@@32)) ($generated@@34 $generated@@31 $generated@@177 $generated@@32 $generated@@178))
 :pattern ( ($generated@@34 $generated@@31 $generated@@177 $generated@@32 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@36 $generated@@180) ($generated@@30 $generated@@31 $generated@@179 $generated@@106)) ($generated@@34 $generated@@31 $generated@@179 $generated@@106 $generated@@180))
 :pattern ( ($generated@@34 $generated@@31 $generated@@179 $generated@@106 $generated@@180))
)))
(assert (= ($generated@@26 $generated@@32) $generated@@2))
(assert (= ($generated@@102 $generated@@32) $generated@@8))
(assert (= ($generated@@26 $generated@@106) $generated@@3))
(assert (= ($generated@@102 $generated@@106) $generated@@9))
(assert (= $generated@@28 ($generated@@70 $generated@@31 $generated@@28)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@82 ($generated@@70 $generated@@31 $generated@@181)) ($generated@@70 $generated@@31 ($generated@@82 $generated@@181)))
 :pattern ( ($generated@@82 ($generated@@70 $generated@@31 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@85 ($generated@@70 $generated@@43 $generated@@182)) ($generated@@70 $generated@@31 ($generated@@85 $generated@@182)))
 :pattern ( ($generated@@85 ($generated@@70 $generated@@43 $generated@@182)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@78 $generated@@184 ($generated@@70 $generated@@184 $generated@@183)) ($generated@@70 $generated@@43 ($generated@@78 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@78 $generated@@184 ($generated@@70 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and ($generated@@36 $generated@@186) (and ($generated@@29 $generated@@185) ($generated@@34 $generated@@31 $generated@@185 $generated@@32 $generated@@186))) ($generated@@34 $generated@@31 ($generated@@124 $generated@@185) ($generated@@35 $generated@@106) $generated@@186))
 :pattern ( ($generated@@34 $generated@@31 ($generated@@124 $generated@@185) ($generated@@35 $generated@@106) $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@34 $generated@@11 $generated@@188 $generated $generated@@187)
 :pattern ( ($generated@@34 $generated@@11 $generated@@188 $generated $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! ($generated@@30 $generated@@11 $generated@@189 $generated)
 :pattern ( ($generated@@30 $generated@@11 $generated@@189 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@201 true))
(let (($generated@@202  (=> (and (= $generated@@190 $generated@@28) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@203  (=> (or (not (= $generated@@190 ($generated@@85 ($generated@@78 $generated@@31 $generated@@191)))) (not true)) (and (=> (= (ControlFlow 0 9) 7) $generated@@202) (=> (= (ControlFlow 0 9) 8) $generated@@201)))))
(let (($generated@@204 true))
(let (($generated@@205 true))
(let (($generated@@206  (=> (= $generated@@190 ($generated@@85 ($generated@@78 $generated@@31 $generated@@191))) (=> (and (and ($generated@@30 $generated@@31 $generated@@191 $generated@@106) (= $generated@@192 ($generated@@15 ($generated@@70 $generated@@11 ($generated@@14 true))))) (and ($generated@@30 $generated@@11 ($generated@@14 $generated@@192) $generated) (= (ControlFlow 0 5) 2))) $generated@@205))))
(let (($generated@@207  (=> (and (= $generated@@193 ($generated@@82 $generated@@190)) ($generated@@30 $generated@@31 $generated@@190 ($generated@@35 $generated@@106))) (and (=> (= (ControlFlow 0 10) 5) $generated@@206) (=> (= (ControlFlow 0 10) 9) $generated@@203)))))
(let (($generated@@208  (=> (and (and ($generated@@30 $generated@@31 $generated@@193 $generated@@32) ($generated@@34 $generated@@31 $generated@@193 $generated@@32 $generated@@194)) (= $generated@@195 ($generated@@141 $generated@@196 $generated@@194 $generated@@1 false))) (and (=> (= (ControlFlow 0 11) 10) $generated@@207) (=> (= (ControlFlow 0 11) 4) $generated@@204)))))
(let (($generated@@209  (=> (and (not (and ($generated@@30 $generated@@31 $generated@@193 $generated@@32) ($generated@@34 $generated@@31 $generated@@193 $generated@@32 $generated@@194))) (= (ControlFlow 0 3) 2)) $generated@@205)))
(let (($generated@@210  (=> (and ($generated@@36 $generated@@194) (or (= $generated@@197 $generated@@194) ($generated@@40 $generated@@197 $generated@@194))) (and (=> (= (ControlFlow 0 12) 11) $generated@@208) (=> (= (ControlFlow 0 12) 3) $generated@@209)))))
(let (($generated@@211 true))
(let (($generated@@212  (=> (= $generated@@198 ($generated@@141 $generated@@196 $generated@@197 $generated@@1 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@210) (=> (= (ControlFlow 0 13) 1) $generated@@211)))))
(let (($generated@@213  (=> (and (and ($generated@@36 $generated@@197) ($generated@@199 $generated@@197)) (and (= 2 $generated@@200) (= (ControlFlow 0 14) 13))) $generated@@212)))
$generated@@213))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
