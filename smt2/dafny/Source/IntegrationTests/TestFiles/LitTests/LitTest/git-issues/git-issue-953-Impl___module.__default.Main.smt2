(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (T@T) Int)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Bool) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (Int) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (Real) T@U)
(declare-fun $generated@@30 (T@U) Real)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U) Bool)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@T T@T) T@T)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@100 (Int) Int)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@T T@U) T@U)
(declare-fun $generated@@112 (T@U Int) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (Int) T@U)
(declare-fun $generated@@124 (Int) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@21 $generated@@22) 0) (= ($generated@@21 $generated@@23) 1)) (= ($generated@@21 $generated@@24) 2)) (forall (($generated@@31 Bool) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 Int) ) (! (= ($generated@@28 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 T@U) ) (! (= ($generated@@27 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))) (forall (($generated@@35 Real) ) (! (= ($generated@@30 ($generated@@29 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@29 $generated@@35))
))) (forall (($generated@@36 T@U) ) (! (= ($generated@@29 ($generated@@30 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@30 $generated@@36))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19 $generated@@20)
)
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (= ($generated@@38 $generated@@39) $generated@@8))
(assert (= ($generated@@38 $generated@@40) $generated@@11))
(assert (= ($generated@@21 $generated@@42) 3))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@45 $generated@@43 $generated@@46) ($generated@@41 $generated@@42 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 $generated@@43 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@49 $generated@@47 $generated@@50) ($generated@@41 $generated@@42 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@41 $generated@@42 $generated@@49 $generated@@47 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@53 $generated@@51 $generated@@54) ($generated@@41 $generated@@42 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@41 $generated@@42 $generated@@53 $generated@@51 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@57 $generated@@55 $generated@@58) ($generated@@41 $generated@@42 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@41 $generated@@42 $generated@@57 $generated@@55 $generated@@58))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@60 $generated@@42 $generated@@62 $generated@@61) ($generated@@59 $generated@@62))
 :pattern ( ($generated@@59 $generated@@62) ($generated@@60 $generated@@42 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@60 $generated@@42 $generated@@64 $generated@@52) ($generated@@63 $generated@@64))
 :pattern ( ($generated@@63 $generated@@64) ($generated@@60 $generated@@42 $generated@@64 $generated@@52))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@60 $generated@@42 $generated@@67 $generated@@66) ($generated@@65 $generated@@67))
 :pattern ( ($generated@@65 $generated@@67) ($generated@@60 $generated@@42 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@60 $generated@@42 $generated@@69 $generated@@56) ($generated@@68 $generated@@69))
 :pattern ( ($generated@@68 $generated@@69) ($generated@@60 $generated@@42 $generated@@69 $generated@@56))
)))
(assert ($generated@@60 $generated@@42 $generated@@39 $generated@@44))
(assert ($generated@@60 $generated@@42 $generated@@40 $generated@@48))
(assert  (and (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@71 $generated@@80 $generated@@81 ($generated@@77 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@84) $generated@@82)
 :weight 0
)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (or (= $generated@@89 $generated@@90) (= ($generated@@71 $generated@@85 $generated@@86 ($generated@@77 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@87) $generated@@90) ($generated@@71 $generated@@85 $generated@@86 $generated@@88 $generated@@90)))
 :weight 0
))) (= ($generated@@21 $generated@@72) 4)) (= ($generated@@21 $generated@@73) 5)) (= ($generated@@21 $generated@@74) 6)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@21 ($generated@@75 $generated@@91 $generated@@92)) 7))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@78 ($generated@@75 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@75 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@79 ($generated@@75 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@75 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@70 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@26 ($generated@@76 $generated@@22 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@74 ($generated@@75 $generated@@72 $generated@@73) $generated@@97 $generated@@99) $generated@@1))) ($generated@@26 ($generated@@76 $generated@@22 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@74 ($generated@@75 $generated@@72 $generated@@73) $generated@@98 $generated@@99) $generated@@1))))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@74 ($generated@@75 $generated@@72 $generated@@73) $generated@@98 $generated@@99) $generated@@1))
)))
 :pattern ( ($generated@@70 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 Int) ) (! (= ($generated@@100 $generated@@101) $generated@@101)
 :pattern ( ($generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 $generated@@103) $generated@@103)
 :pattern ( ($generated@@102 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@59 $generated@@105) (= ($generated@@38 $generated@@105) $generated@@10))
 :pattern ( ($generated@@59 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@63 $generated@@106) (= ($generated@@38 $generated@@106) $generated@@13))
 :pattern ( ($generated@@63 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@65 $generated@@107) (= ($generated@@38 $generated@@107) $generated@@15))
 :pattern ( ($generated@@65 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@68 $generated@@108) (= ($generated@@38 $generated@@108) $generated@@16))
 :pattern ( ($generated@@68 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@109 $generated@@111 ($generated@@76 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@76 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 Int) ) (! (= ($generated@@60 $generated@@42 ($generated@@112 $generated@@113 $generated@@114) $generated@@66)  (and ($generated@@60 $generated@@42 $generated@@113 $generated@@55) ($generated@@60 $generated@@23 ($generated@@27 $generated@@114) $generated)))
 :pattern ( ($generated@@60 $generated@@42 ($generated@@112 $generated@@113 $generated@@114) $generated@@66))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@65 $generated@@115) (exists (($generated@@116 T@U) ($generated@@117 Int) ) (= $generated@@115 ($generated@@112 $generated@@116 $generated@@117))))
 :pattern ( ($generated@@65 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@59 $generated@@119) (exists (($generated@@120 T@U) ) (= $generated@@119 ($generated@@118 $generated@@120))))
 :pattern ( ($generated@@59 $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@63 $generated@@122) (exists (($generated@@123 Int) ) (= $generated@@122 ($generated@@121 $generated@@123))))
 :pattern ( ($generated@@63 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@68 $generated@@125) (exists (($generated@@126 Int) ) (= $generated@@125 ($generated@@124 $generated@@126))))
 :pattern ( ($generated@@68 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (!  (=> ($generated@@70 $generated@@127 $generated@@128) (=> ($generated@@41 $generated@@131 $generated@@129 $generated@@130 $generated@@127) ($generated@@41 $generated@@131 $generated@@129 $generated@@130 $generated@@128)))
 :pattern ( ($generated@@70 $generated@@127 $generated@@128) ($generated@@41 $generated@@131 $generated@@129 $generated@@130 $generated@@127))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@60 $generated@@42 ($generated@@118 $generated@@132) $generated@@61) ($generated@@60 $generated@@42 $generated@@132 $generated@@47))
 :pattern ( ($generated@@60 $generated@@42 ($generated@@118 $generated@@132) $generated@@61))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or (not (= $generated@@133 $generated@@135)) (not true)) (=> (and ($generated@@70 $generated@@133 $generated@@134) ($generated@@70 $generated@@134 $generated@@135)) ($generated@@70 $generated@@133 $generated@@135)))
 :pattern ( ($generated@@70 $generated@@133 $generated@@134) ($generated@@70 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 Int) ) (! (= ($generated@@38 ($generated@@112 $generated@@136 $generated@@137)) $generated@@15)
 :pattern ( ($generated@@112 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 Int) ) (! (= ($generated@@138 ($generated@@112 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@112 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 Int) ) (! (= ($generated@@141 ($generated@@112 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@112 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@38 ($generated@@118 $generated@@144)) $generated@@10)
 :pattern ( ($generated@@118 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@118 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@118 $generated@@146))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@38 ($generated@@121 $generated@@147)) $generated@@13)
 :pattern ( ($generated@@121 $generated@@147))
)))
(assert (forall (($generated@@149 Int) ) (! (= ($generated@@148 ($generated@@121 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@121 $generated@@149))
)))
(assert (forall (($generated@@150 Int) ) (! (= ($generated@@38 ($generated@@124 $generated@@150)) $generated@@16)
 :pattern ( ($generated@@124 $generated@@150))
)))
(assert (forall (($generated@@152 Int) ) (! (= ($generated@@151 ($generated@@124 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@124 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@76 $generated@@154 ($generated@@109 $generated@@154 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@109 $generated@@154 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 Int) ) (! (< ($generated@@155 $generated@@156) ($generated@@155 ($generated@@112 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@112 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@60 $generated@@42 ($generated@@121 $generated@@158) $generated@@52) ($generated@@60 $generated@@23 ($generated@@27 $generated@@158) $generated))
 :pattern ( ($generated@@60 $generated@@42 ($generated@@121 $generated@@158) $generated@@52))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@60 $generated@@42 ($generated@@124 $generated@@159) $generated@@56) ($generated@@60 $generated@@23 ($generated@@27 $generated@@159) $generated))
 :pattern ( ($generated@@60 $generated@@42 ($generated@@124 $generated@@159) $generated@@56))
)))
(assert (forall (($generated@@160 T@U) ) (! (< ($generated@@155 $generated@@160) ($generated@@155 ($generated@@118 $generated@@160)))
 :pattern ( ($generated@@118 $generated@@160))
)))
(assert  (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@161 $generated@@164 $generated@@165 $generated@@166 ($generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@169 $generated@@170) $generated@@167)
 :weight 0
)) (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@161 $generated@@171 $generated@@172 $generated@@173 ($generated@@163 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@161 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@161 $generated@@180 $generated@@181 $generated@@182 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@161 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@26 ($generated@@161 $generated@@74 $generated@@72 $generated@@22 ($generated@@162 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@26 ($generated@@76 $generated@@22 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@74 ($generated@@75 $generated@@72 $generated@@73) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@161 $generated@@74 $generated@@72 $generated@@22 ($generated@@162 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@195 $generated@@197) (and ($generated@@63 $generated@@196) ($generated@@41 $generated@@42 $generated@@196 $generated@@52 $generated@@197))) ($generated@@41 $generated@@23 ($generated@@27 ($generated@@148 $generated@@196)) $generated $generated@@197))
 :pattern ( ($generated@@41 $generated@@23 ($generated@@27 ($generated@@148 $generated@@196)) $generated $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@195 $generated@@199) (and ($generated@@65 $generated@@198) ($generated@@41 $generated@@42 $generated@@198 $generated@@66 $generated@@199))) ($generated@@41 $generated@@23 ($generated@@27 ($generated@@141 $generated@@198)) $generated $generated@@199))
 :pattern ( ($generated@@41 $generated@@23 ($generated@@27 ($generated@@141 $generated@@198)) $generated $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@195 $generated@@201) (and ($generated@@68 $generated@@200) ($generated@@41 $generated@@42 $generated@@200 $generated@@56 $generated@@201))) ($generated@@41 $generated@@23 ($generated@@27 ($generated@@151 $generated@@200)) $generated $generated@@201))
 :pattern ( ($generated@@41 $generated@@23 ($generated@@27 ($generated@@151 $generated@@200)) $generated $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and ($generated@@195 $generated@@203) ($generated@@60 $generated@@42 $generated@@202 $generated@@44)) ($generated@@41 $generated@@42 $generated@@202 $generated@@44 $generated@@203))
 :pattern ( ($generated@@41 $generated@@42 $generated@@202 $generated@@44 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@195 $generated@@205) ($generated@@60 $generated@@42 $generated@@204 $generated@@61)) ($generated@@41 $generated@@42 $generated@@204 $generated@@61 $generated@@205))
 :pattern ( ($generated@@41 $generated@@42 $generated@@204 $generated@@61 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@195 $generated@@207) ($generated@@60 $generated@@42 $generated@@206 $generated@@48)) ($generated@@41 $generated@@42 $generated@@206 $generated@@48 $generated@@207))
 :pattern ( ($generated@@41 $generated@@42 $generated@@206 $generated@@48 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and ($generated@@195 $generated@@209) ($generated@@60 $generated@@42 $generated@@208 $generated@@52)) ($generated@@41 $generated@@42 $generated@@208 $generated@@52 $generated@@209))
 :pattern ( ($generated@@41 $generated@@42 $generated@@208 $generated@@52 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@195 $generated@@211) ($generated@@60 $generated@@42 $generated@@210 $generated@@66)) ($generated@@41 $generated@@42 $generated@@210 $generated@@66 $generated@@211))
 :pattern ( ($generated@@41 $generated@@42 $generated@@210 $generated@@66 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@195 $generated@@213) ($generated@@60 $generated@@42 $generated@@212 $generated@@56)) ($generated@@41 $generated@@42 $generated@@212 $generated@@56 $generated@@213))
 :pattern ( ($generated@@41 $generated@@42 $generated@@212 $generated@@56 $generated@@213))
)))
(assert (= ($generated@@37 $generated@@47) $generated@@2))
(assert (= ($generated@@214 $generated@@47) $generated@@18))
(assert (= ($generated@@37 $generated@@61) $generated@@3))
(assert (= ($generated@@214 $generated@@61) $generated@@19))
(assert (= ($generated@@37 $generated@@43) $generated@@4))
(assert (= ($generated@@214 $generated@@43) $generated@@18))
(assert (= ($generated@@37 $generated@@55) $generated@@5))
(assert (= ($generated@@214 $generated@@55) $generated@@18))
(assert (= ($generated@@37 $generated@@66) $generated@@6))
(assert (= ($generated@@214 $generated@@66) $generated@@19))
(assert (= ($generated@@37 $generated@@51) $generated@@7))
(assert (= ($generated@@214 $generated@@51) $generated@@18))
(assert (= ($generated@@37 $generated@@44) $generated@@9))
(assert (= ($generated@@214 $generated@@44) $generated@@20))
(assert (= ($generated@@37 $generated@@48) $generated@@12))
(assert (= ($generated@@214 $generated@@48) $generated@@20))
(assert (= ($generated@@37 $generated@@52) $generated@@14))
(assert (= ($generated@@214 $generated@@52) $generated@@20))
(assert (= ($generated@@37 $generated@@56) $generated@@17))
(assert (= ($generated@@214 $generated@@56) $generated@@20))
(assert (= $generated@@39 ($generated@@102 $generated@@42 $generated@@39)))
(assert (= $generated@@40 ($generated@@102 $generated@@42 $generated@@40)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@195 $generated@@216) (and ($generated@@59 $generated@@215) ($generated@@41 $generated@@42 $generated@@215 $generated@@61 $generated@@216))) ($generated@@41 $generated@@42 ($generated@@145 $generated@@215) $generated@@47 $generated@@216))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@145 $generated@@215) $generated@@47 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and ($generated@@195 $generated@@218) (and ($generated@@65 $generated@@217) ($generated@@41 $generated@@42 $generated@@217 $generated@@66 $generated@@218))) ($generated@@41 $generated@@42 ($generated@@138 $generated@@217) $generated@@55 $generated@@218))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@138 $generated@@217) $generated@@55 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 Int) ) (! (= ($generated@@112 ($generated@@102 $generated@@42 $generated@@219) ($generated@@100 $generated@@220)) ($generated@@102 $generated@@42 ($generated@@112 $generated@@219 $generated@@220)))
 :pattern ( ($generated@@112 ($generated@@102 $generated@@42 $generated@@219) ($generated@@100 $generated@@220)))
)))
(assert (forall (($generated@@221 T@U) ) (! (= ($generated@@60 $generated@@42 $generated@@221 $generated@@43)  (and ($generated@@60 $generated@@42 $generated@@221 $generated@@44) ($generated@@26 ($generated@@102 $generated@@22 ($generated@@25 true)))))
 :pattern ( ($generated@@60 $generated@@42 $generated@@221 $generated@@43))
)))
(assert (forall (($generated@@222 T@U) ) (! (= ($generated@@60 $generated@@42 $generated@@222 $generated@@47)  (and ($generated@@60 $generated@@42 $generated@@222 $generated@@48) ($generated@@26 ($generated@@102 $generated@@22 ($generated@@25 true)))))
 :pattern ( ($generated@@60 $generated@@42 $generated@@222 $generated@@47))
)))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@60 $generated@@42 $generated@@223 $generated@@51)  (and ($generated@@60 $generated@@42 $generated@@223 $generated@@52) ($generated@@26 ($generated@@102 $generated@@22 ($generated@@25 true)))))
 :pattern ( ($generated@@60 $generated@@42 $generated@@223 $generated@@51))
)))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@60 $generated@@42 $generated@@224 $generated@@55)  (and ($generated@@60 $generated@@42 $generated@@224 $generated@@56) ($generated@@26 ($generated@@102 $generated@@22 ($generated@@25 true)))))
 :pattern ( ($generated@@60 $generated@@42 $generated@@224 $generated@@55))
)))
(assert (forall (($generated@@225 Int) ) (! (= ($generated@@109 $generated@@23 ($generated@@27 ($generated@@100 $generated@@225))) ($generated@@102 $generated@@73 ($generated@@109 $generated@@23 ($generated@@27 $generated@@225))))
 :pattern ( ($generated@@109 $generated@@23 ($generated@@27 ($generated@@100 $generated@@225))))
)))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@118 ($generated@@102 $generated@@42 $generated@@226)) ($generated@@102 $generated@@42 ($generated@@118 $generated@@226)))
 :pattern ( ($generated@@118 ($generated@@102 $generated@@42 $generated@@226)))
)))
(assert (forall (($generated@@227 Int) ) (! (= ($generated@@121 ($generated@@100 $generated@@227)) ($generated@@102 $generated@@42 ($generated@@121 $generated@@227)))
 :pattern ( ($generated@@121 ($generated@@100 $generated@@227)))
)))
(assert (forall (($generated@@228 Int) ) (! (= ($generated@@124 ($generated@@100 $generated@@228)) ($generated@@102 $generated@@42 ($generated@@124 $generated@@228)))
 :pattern ( ($generated@@124 ($generated@@100 $generated@@228)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (= ($generated@@109 $generated@@230 ($generated@@102 $generated@@230 $generated@@229)) ($generated@@102 $generated@@73 ($generated@@109 $generated@@230 $generated@@229)))
 :pattern ( ($generated@@109 $generated@@230 ($generated@@102 $generated@@230 $generated@@229)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! ($generated@@41 $generated@@23 $generated@@232 $generated $generated@@231)
 :pattern ( ($generated@@41 $generated@@23 $generated@@232 $generated $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! ($generated@@60 $generated@@23 $generated@@233 $generated)
 :pattern ( ($generated@@60 $generated@@23 $generated@@233 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 (T@U) Bool)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@251  (=> (= $generated@@234 ($generated@@162 $generated@@235 $generated@@236 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@60 $generated@@42 ($generated@@102 $generated@@42 $generated@@40) $generated@@47)) (=> ($generated@@60 $generated@@42 ($generated@@102 $generated@@42 $generated@@40) $generated@@47) (=> (and (= $generated@@237 ($generated@@102 $generated@@42 $generated@@40)) (= $generated@@238 ($generated@@118 $generated@@237))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@60 $generated@@42 ($generated@@102 $generated@@42 $generated@@39) $generated@@43)) (=> ($generated@@60 $generated@@42 ($generated@@102 $generated@@42 $generated@@39) $generated@@43) (=> (= $generated@@239 ($generated@@102 $generated@@42 $generated@@39)) (=> (and (and ($generated@@195 $generated@@240) ($generated@@241 $generated@@240)) (and (forall (($generated@@252 T@U) ) (!  (=> (and (or (not (= $generated@@252 $generated@@235)) (not true)) ($generated@@26 ($generated@@76 $generated@@22 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@74 ($generated@@75 $generated@@72 $generated@@73) $generated@@236 $generated@@252) $generated@@1)))) (= ($generated@@71 $generated@@74 ($generated@@75 $generated@@72 $generated@@73) $generated@@240 $generated@@252) ($generated@@71 $generated@@74 ($generated@@75 $generated@@72 $generated@@73) $generated@@236 $generated@@252)))
 :pattern ( ($generated@@71 $generated@@74 ($generated@@75 $generated@@72 $generated@@73) $generated@@240 $generated@@252))
)) ($generated@@70 $generated@@236 $generated@@240))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@60 $generated@@42 ($generated@@102 $generated@@42 ($generated@@124 ($generated@@100 10))) $generated@@55)) (=> ($generated@@60 $generated@@42 ($generated@@102 $generated@@42 ($generated@@124 ($generated@@100 10))) $generated@@55) (=> (= $generated@@242 ($generated@@102 $generated@@42 ($generated@@124 ($generated@@100 10)))) (=> (and (= $generated@@243 ($generated@@112 $generated@@242 ($generated@@100 11))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@60 $generated@@42 ($generated@@102 $generated@@42 ($generated@@121 ($generated@@100 9))) $generated@@51)))))))))))))))
(let (($generated@@253  (=> (and ($generated@@195 $generated@@236) ($generated@@241 $generated@@236)) (=> (and (and ($generated@@60 $generated@@42 $generated@@244 $generated@@47) ($generated@@41 $generated@@42 $generated@@244 $generated@@47 $generated@@236)) true) (=> (and (and (and ($generated@@60 $generated@@42 $generated@@245 $generated@@61) ($generated@@41 $generated@@42 $generated@@245 $generated@@61 $generated@@236)) true) (and (and ($generated@@60 $generated@@42 $generated@@246 $generated@@43) ($generated@@41 $generated@@42 $generated@@246 $generated@@43 $generated@@236)) true)) (=> (and (and (and (and ($generated@@60 $generated@@42 $generated@@247 $generated@@55) ($generated@@41 $generated@@42 $generated@@247 $generated@@55 $generated@@236)) true) (and (and ($generated@@60 $generated@@42 $generated@@248 $generated@@66) ($generated@@41 $generated@@42 $generated@@248 $generated@@66 $generated@@236)) true)) (and (and (and ($generated@@60 $generated@@42 $generated@@249 $generated@@51) ($generated@@41 $generated@@42 $generated@@249 $generated@@51 $generated@@236)) true) (and (= 0 $generated@@250) (= (ControlFlow 0 6) 2)))) $generated@@251))))))
$generated@@253)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
