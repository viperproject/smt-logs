(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@65 (Int) Int)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@95 () Int)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (and ($generated@@24 $generated@@26) ($generated@@24 $generated@@27)) (= ($generated@@23 $generated@@26 $generated@@27) (= ($generated@@25 $generated@@26) ($generated@@25 $generated@@27))))
 :pattern ( ($generated@@23 $generated@@26 $generated@@27) ($generated@@24 $generated@@26))
 :pattern ( ($generated@@23 $generated@@26 $generated@@27) ($generated@@24 $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) $generated@@3))
(assert (= ($generated@@6 $generated@@31) 3))
(assert ($generated@@30 $generated@@31 $generated@@29 $generated@@32))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@34) (= $generated@@33 $generated@@34))
 :pattern ( ($generated@@23 $generated@@33 $generated@@34))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@36 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@36 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@36 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@6 $generated@@37) 4)) (= ($generated@@6 $generated@@38) 5)) (= ($generated@@6 $generated@@39) 6)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@6 ($generated@@40 $generated@@56 $generated@@57)) 7))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@40 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@40 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@40 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@35 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@11 ($generated@@41 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@62 $generated@@64) $generated@@1))) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@63 $generated@@64) $generated@@1))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@63 $generated@@64) $generated@@1))
)))
 :pattern ( ($generated@@35 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@65 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 $generated@@71) (= ($generated@@28 $generated@@71) $generated@@3))
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@24 $generated@@72) (= ($generated@@28 $generated@@72) $generated@@4))
 :pattern ( ($generated@@24 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@41 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@41 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@70 $generated@@76) (= $generated@@76 $generated@@29))
 :pattern ( ($generated@@70 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@24 $generated@@78) (exists (($generated@@79 Int) ) (= $generated@@78 ($generated@@77 $generated@@79))))
 :pattern ( ($generated@@24 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@80 ($generated@@73 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@81 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@80 ($generated@@73 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@35 $generated@@86 $generated@@87) (=> ($generated@@80 $generated@@88 $generated@@89 $generated@@86) ($generated@@80 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@35 $generated@@86 $generated@@87) ($generated@@80 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (!  (=> ($generated@@35 $generated@@90 $generated@@91) (=> ($generated@@81 $generated@@94 $generated@@92 $generated@@93 $generated@@90) ($generated@@81 $generated@@94 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@35 $generated@@90 $generated@@91) ($generated@@81 $generated@@94 $generated@@92 $generated@@93 $generated@@90))
)))
(assert  (=> (<= 0 $generated@@95) (forall (($generated@@98 T@U) ) (!  (=> (or ($generated@@97 $generated@@98) (and (< 0 $generated@@95) ($generated@@30 $generated@@31 $generated@@98 $generated@@32))) (= ($generated@@96 $generated@@98) ($generated@@24 $generated@@98)))
 :pattern ( ($generated@@96 $generated@@98))
))))
(assert  (=> (<= 1 $generated@@95) (forall (($generated@@101 T@U) ) (!  (=> (or ($generated@@100 $generated@@101) (and (< 1 $generated@@95) (and ($generated@@30 $generated@@31 $generated@@101 $generated@@32) ($generated@@24 $generated@@101)))) (= ($generated@@99 $generated@@101) $generated@@101))
 :pattern ( ($generated@@99 $generated@@101))
))))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@102 $generated@@103) (or ($generated@@70 $generated@@103) ($generated@@24 $generated@@103)))
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@104 $generated@@32) (or ($generated@@70 $generated@@104) ($generated@@24 $generated@@104)))
 :pattern ( ($generated@@24 $generated@@104) ($generated@@30 $generated@@31 $generated@@104 $generated@@32))
 :pattern ( ($generated@@70 $generated@@104) ($generated@@30 $generated@@31 $generated@@104 $generated@@32))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or (not (= $generated@@105 $generated@@107)) (not true)) (=> (and ($generated@@35 $generated@@105 $generated@@106) ($generated@@35 $generated@@106 $generated@@107)) ($generated@@35 $generated@@105 $generated@@107)))
 :pattern ( ($generated@@35 $generated@@105 $generated@@106) ($generated@@35 $generated@@106 $generated@@107))
)))
(assert  (=> (<= 1 $generated@@95) (forall (($generated@@108 T@U) ) (!  (=> (or ($generated@@100 $generated@@108) (and (< 1 $generated@@95) (and ($generated@@30 $generated@@31 $generated@@108 $generated@@32) ($generated@@24 $generated@@108)))) ($generated@@30 $generated@@31 ($generated@@99 $generated@@108) $generated@@32))
 :pattern ( ($generated@@99 $generated@@108))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and ($generated@@70 $generated@@109) ($generated@@70 $generated@@110)) ($generated@@23 $generated@@109 $generated@@110))
 :pattern ( ($generated@@23 $generated@@109 $generated@@110) ($generated@@70 $generated@@109))
 :pattern ( ($generated@@23 $generated@@109 $generated@@110) ($generated@@70 $generated@@110))
)))
(assert (forall (($generated@@111 Int) ) (! (= ($generated@@28 ($generated@@77 $generated@@111)) $generated@@4)
 :pattern ( ($generated@@77 $generated@@111))
)))
(assert (forall (($generated@@112 Int) ) (! (= ($generated@@25 ($generated@@77 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@77 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@41 $generated@@114 ($generated@@73 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@73 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 Int) ) (! (= ($generated@@30 $generated@@31 ($generated@@77 $generated@@115) $generated@@32) ($generated@@30 $generated@@8 ($generated@@12 $generated@@115) $generated))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@77 $generated@@115) $generated@@32))
)))
(assert  (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@116 $generated@@119 $generated@@120 $generated@@121 ($generated@@118 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@116 $generated@@126 $generated@@127 $generated@@128 ($generated@@118 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@116 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@116 $generated@@135 $generated@@136 $generated@@137 ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@116 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@11 ($generated@@116 $generated@@39 $generated@@37 $generated@@7 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@116 $generated@@39 $generated@@37 $generated@@7 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and ($generated@@150 $generated@@152) (and ($generated@@24 $generated@@151) ($generated@@81 $generated@@31 $generated@@151 $generated@@32 $generated@@152))) ($generated@@81 $generated@@8 ($generated@@12 ($generated@@25 $generated@@151)) $generated $generated@@152))
 :pattern ( ($generated@@81 $generated@@8 ($generated@@12 ($generated@@25 $generated@@151)) $generated $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@150 $generated@@154) ($generated@@30 $generated@@31 $generated@@153 $generated@@32)) ($generated@@81 $generated@@31 $generated@@153 $generated@@32 $generated@@154))
 :pattern ( ($generated@@81 $generated@@31 $generated@@153 $generated@@32 $generated@@154))
)))
(assert (= ($generated@@22 $generated@@32) $generated@@2))
(assert (= ($generated@@155 $generated@@32) $generated@@5))
(assert  (=> (<= 0 $generated@@95) (forall (($generated@@156 T@U) ) (!  (=> (or ($generated@@97 ($generated@@67 $generated@@31 $generated@@156)) (and (< 0 $generated@@95) ($generated@@30 $generated@@31 $generated@@156 $generated@@32))) (= ($generated@@96 ($generated@@67 $generated@@31 $generated@@156)) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@10 ($generated@@24 ($generated@@67 $generated@@31 $generated@@156)))))))
 :weight 3
 :pattern ( ($generated@@96 ($generated@@67 $generated@@31 $generated@@156)))
))))
(assert (= $generated@@29 ($generated@@67 $generated@@31 $generated@@29)))
(assert  (=> (<= 1 $generated@@95) (forall (($generated@@157 T@U) ) (!  (=> (or ($generated@@100 ($generated@@67 $generated@@31 $generated@@157)) (and (< 1 $generated@@95) (and ($generated@@30 $generated@@31 $generated@@157 $generated@@32) ($generated@@11 ($generated@@67 $generated@@7 ($generated@@10 ($generated@@24 ($generated@@67 $generated@@31 $generated@@157)))))))) (= ($generated@@99 ($generated@@67 $generated@@31 $generated@@157)) ($generated@@67 $generated@@31 $generated@@157)))
 :weight 3
 :pattern ( ($generated@@99 ($generated@@67 $generated@@31 $generated@@157)))
))))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@73 $generated@@8 ($generated@@12 ($generated@@65 $generated@@158))) ($generated@@67 $generated@@38 ($generated@@73 $generated@@8 ($generated@@12 $generated@@158))))
 :pattern ( ($generated@@73 $generated@@8 ($generated@@12 ($generated@@65 $generated@@158))))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@77 ($generated@@65 $generated@@159)) ($generated@@67 $generated@@31 ($generated@@77 $generated@@159)))
 :pattern ( ($generated@@77 ($generated@@65 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@73 $generated@@161 ($generated@@67 $generated@@161 $generated@@160)) ($generated@@67 $generated@@38 ($generated@@73 $generated@@161 $generated@@160)))
 :pattern ( ($generated@@73 $generated@@161 ($generated@@67 $generated@@161 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! ($generated@@81 $generated@@8 $generated@@163 $generated $generated@@162)
 :pattern ( ($generated@@81 $generated@@8 $generated@@163 $generated $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ) (! ($generated@@30 $generated@@8 $generated@@164 $generated)
 :pattern ( ($generated@@30 $generated@@8 $generated@@164 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@179  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@23 $generated@@165 ($generated@@77 ($generated@@65 5))))))
(let (($generated@@180  (=> (not ($generated@@96 $generated@@166)) (=> (and (= $generated@@165 $generated@@167) (= (ControlFlow 0 5) 2)) $generated@@179))))
(let (($generated@@181  (=> (and ($generated@@96 $generated@@166) ($generated@@80 ($generated@@73 $generated@@31 $generated@@166) $generated@@32 $generated@@168)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@24 $generated@@166)) (=> (and ($generated@@24 $generated@@166) ($generated@@100 $generated@@166)) (=> (and (and ($generated@@100 $generated@@166) (= $generated@@169 ($generated@@99 $generated@@166))) (and (= $generated@@165 $generated@@169) (= (ControlFlow 0 3) 2))) $generated@@179))))))
(let (($generated@@182  (=> (= $generated@@170 ($generated@@117 $generated@@171 $generated@@172 $generated@@1 false)) (=> (and (and (and ($generated@@30 $generated@@31 $generated@@173 $generated@@32) ($generated@@81 $generated@@31 $generated@@173 $generated@@32 $generated@@172)) (and ($generated@@30 $generated@@31 $generated@@174 $generated@@32) ($generated@@81 $generated@@31 $generated@@174 $generated@@32 $generated@@172))) (and (and ($generated@@30 $generated@@31 $generated@@175 $generated@@32) ($generated@@81 $generated@@31 $generated@@175 $generated@@32 $generated@@172)) (and ($generated@@150 $generated@@168) ($generated@@176 $generated@@168)))) (=> (and (and (and (and ($generated@@30 $generated@@31 $generated@@166 $generated@@32) ($generated@@81 $generated@@31 $generated@@166 $generated@@32 $generated@@168)) ($generated@@102 $generated@@166)) (and ($generated@@23 $generated@@166 ($generated@@77 ($generated@@65 5))) (forall (($generated@@183 T@U) ) (!  (=> (and (or (not (= $generated@@183 $generated@@171)) (not true)) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@172 $generated@@183) $generated@@1)))) (= ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@168 $generated@@183) ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@172 $generated@@183)))
 :pattern ( ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@168 $generated@@183))
)))) (and (and ($generated@@35 $generated@@172 $generated@@168) ($generated@@80 ($generated@@73 $generated@@31 $generated@@166) $generated@@32 $generated@@168)) (and ($generated@@97 $generated@@166) ($generated@@97 $generated@@166)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@181) (=> (= (ControlFlow 0 6) 5) $generated@@180)))))))
(let (($generated@@184  (=> (and (and (and (and ($generated@@150 $generated@@172) ($generated@@176 $generated@@172)) (and ($generated@@30 $generated@@31 $generated@@167 $generated@@32) ($generated@@81 $generated@@31 $generated@@167 $generated@@32 $generated@@172))) (and (and ($generated@@30 $generated@@31 $generated@@177 $generated@@32) ($generated@@81 $generated@@31 $generated@@177 $generated@@32 $generated@@172)) true)) (and (and (and ($generated@@30 $generated@@31 $generated@@178 $generated@@32) ($generated@@81 $generated@@31 $generated@@178 $generated@@32 $generated@@172)) true) (and (= 2 $generated@@95) (= (ControlFlow 0 7) 6)))) $generated@@182)))
$generated@@184))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
