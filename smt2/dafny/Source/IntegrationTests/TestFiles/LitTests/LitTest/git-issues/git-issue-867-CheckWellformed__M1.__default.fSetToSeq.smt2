(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@52 (T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@69 () Int)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@T T@U T@U) Bool)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) Int)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U Int) T@U)
(declare-fun $generated@@109 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) Bool)
(declare-fun $generated@@122 (T@U T@U T@U) Bool)
(declare-fun $generated@@123 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U T@U) Bool)
(declare-fun $generated@@145 (T@U T@U T@U) Bool)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@201 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@202 () T@T)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@206 () T@T)
(declare-fun $generated@@207 (T@T T@T) T@T)
(declare-fun $generated@@208 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@T) T@T)
(declare-fun $generated@@211 (T@T) T@T)
(declare-fun $generated@@260 (T@U) T@U)
(declare-fun $generated@@261 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (forall (($generated@@20 T@U) ($generated@@21 T@U) ) (! ($generated@@19 ($generated@@18 $generated@@20 $generated@@21) $generated@@21)
 :pattern ( ($generated@@18 $generated@@20 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@19 $generated@@22 $generated@@24) ($generated@@19 ($generated@@18 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@18 $generated@@22 $generated@@23) ($generated@@19 $generated@@22 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@19 $generated@@26 $generated@@28) ($generated@@19 ($generated@@25 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@19 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@19 $generated@@30 $generated@@31) ($generated@@19 ($generated@@25 $generated@@29 $generated@@30) $generated@@31))
 :pattern ( ($generated@@25 $generated@@29 $generated@@30) ($generated@@19 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@19 ($generated@@18 $generated@@32 $generated@@33) $generated@@34)  (or (= $generated@@34 $generated@@33) ($generated@@19 $generated@@32 $generated@@34)))
 :pattern ( ($generated@@19 ($generated@@18 $generated@@32 $generated@@33) $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@35 ($generated@@36 $generated@@37 $generated@@38) $generated@@39)  (or (= $generated@@38 $generated@@39) ($generated@@35 $generated@@37 $generated@@39)))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@37 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@19 $generated@@42 $generated@@43) (not ($generated@@19 ($generated@@40 $generated@@41 $generated@@42) $generated@@43)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@19 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@47) ($generated@@19 $generated@@47 ($generated@@44 $generated@@46 $generated@@47)))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (!  (not ($generated@@19 $generated@@48 $generated@@49))
 :pattern ( ($generated@@19 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (!  (not ($generated@@35 $generated@@50 $generated@@51))
 :pattern ( ($generated@@35 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@52 $generated@@54 ($generated@@53 $generated@@55) $generated@@56) ($generated@@52 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 $generated@@54 ($generated@@53 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@19 ($generated@@57 $generated@@58 $generated@@59) $generated@@60)  (and ($generated@@19 $generated@@58 $generated@@60) ($generated@@19 $generated@@59 $generated@@60)))
 :pattern ( ($generated@@19 ($generated@@57 $generated@@58 $generated@@59) $generated@@60))
)))
(assert (= ($generated@@61 $generated@@50) 0))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@25 ($generated@@25 $generated@@62 $generated@@63) $generated@@63) ($generated@@25 $generated@@62 $generated@@63))
 :pattern ( ($generated@@25 ($generated@@25 $generated@@62 $generated@@63) $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@57 ($generated@@57 $generated@@64 $generated@@65) $generated@@65) ($generated@@57 $generated@@64 $generated@@65))
 :pattern ( ($generated@@57 ($generated@@57 $generated@@64 $generated@@65) $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@19 ($generated@@40 $generated@@66 $generated@@67) $generated@@68)  (and ($generated@@19 $generated@@66 $generated@@68) (not ($generated@@19 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@19 ($generated@@40 $generated@@66 $generated@@67) $generated@@68))
)))
(assert (= ($generated@@2 $generated@@73) 3))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@71 $generated@@78 $generated@@81) (and (< 1 $generated@@69) (and ($generated@@70 $generated@@80) ($generated@@72 $generated@@73 $generated@@81 ($generated@@74 $generated@@78))))) (and (=> (or (not (= ($generated@@75 $generated@@81) ($generated@@76 0))) (not true)) (and ($generated@@45 $generated@@78 $generated@@81) (let (($generated@@82 ($generated@@40 $generated@@81 ($generated@@18 $generated@@48 ($generated@@44 $generated@@78 $generated@@81)))))
($generated@@71 $generated@@78 $generated@@82)))) (= ($generated@@52 $generated@@78 ($generated@@53 $generated@@79) $generated@@81) (ite (= ($generated@@75 $generated@@81) ($generated@@76 0)) $generated@@50 (let (($generated@@83 ($generated@@44 $generated@@78 $generated@@81)))
(let (($generated@@84 ($generated@@40 $generated@@81 ($generated@@18 $generated@@48 $generated@@83))))
(let (($generated@@85 ($generated@@52 $generated@@78 $generated@@79 $generated@@84)))
($generated@@77 ($generated@@36 $generated@@50 $generated@@83) $generated@@85))))))))
 :pattern ( ($generated@@52 $generated@@78 ($generated@@53 $generated@@79) $generated@@81) ($generated@@70 $generated@@80))
))))
(assert (forall (($generated@@86 T@U) ) (!  (and (= (= ($generated@@75 $generated@@86) 0) (= $generated@@86 $generated@@48)) (=> (or (not (= ($generated@@75 $generated@@86) 0)) (not true)) (exists (($generated@@87 T@U) ) (! ($generated@@19 $generated@@86 $generated@@87)
 :pattern ( ($generated@@19 $generated@@86 $generated@@87))
))))
 :pattern ( ($generated@@75 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= (+ ($generated@@75 ($generated@@25 $generated@@88 $generated@@89)) ($generated@@75 ($generated@@57 $generated@@88 $generated@@89))) (+ ($generated@@75 $generated@@88) ($generated@@75 $generated@@89)))
 :pattern ( ($generated@@75 ($generated@@25 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@75 ($generated@@57 $generated@@88 $generated@@89)))
)))
(assert (forall (($generated@@90 Int) ) (! (= ($generated@@76 $generated@@90) $generated@@90)
 :pattern ( ($generated@@76 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 $generated@@92) $generated@@92)
 :pattern ( ($generated@@91 $generated@@93 $generated@@92))
)))
(assert (= ($generated@@2 $generated@@94) 4))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@72 $generated@@94 $generated@@97 ($generated@@95 $generated@@99)) ($generated@@96 $generated@@98 $generated@@99)) ($generated@@72 $generated@@94 ($generated@@36 $generated@@97 $generated@@98) ($generated@@95 $generated@@99)))
 :pattern ( ($generated@@72 $generated@@94 ($generated@@36 $generated@@97 $generated@@98) ($generated@@95 $generated@@99)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 $generated@@101 $generated@@102) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@19 $generated@@101 $generated@@103) ($generated@@19 $generated@@102 $generated@@103))
 :pattern ( ($generated@@19 $generated@@101 $generated@@103))
 :pattern ( ($generated@@19 $generated@@102 $generated@@103))
)))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@104 $generated@@106 $generated@@107)  (and (= ($generated@@61 $generated@@106) ($generated@@61 $generated@@107)) (forall (($generated@@108 Int) ) (!  (=> (and (<= 0 $generated@@108) (< $generated@@108 ($generated@@61 $generated@@106))) (= ($generated@@105 $generated@@106 $generated@@108) ($generated@@105 $generated@@107 $generated@@108)))
 :pattern ( ($generated@@105 $generated@@106 $generated@@108))
 :pattern ( ($generated@@105 $generated@@107 $generated@@108))
))))
 :pattern ( ($generated@@104 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@110 $generated@@112 ($generated@@109 $generated@@112 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@109 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 $generated@@114 $generated@@115) (forall (($generated@@116 T@U) ) (!  (or (not ($generated@@19 $generated@@114 $generated@@116)) (not ($generated@@19 $generated@@115 $generated@@116)))
 :pattern ( ($generated@@19 $generated@@114 $generated@@116))
 :pattern ( ($generated@@19 $generated@@115 $generated@@116))
)))
 :pattern ( ($generated@@113 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@72 $generated@@73 $generated@@117 ($generated@@74 $generated@@118)) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@19 $generated@@117 $generated@@119) ($generated@@96 $generated@@119 $generated@@118))
 :pattern ( ($generated@@19 $generated@@117 $generated@@119))
)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@117 ($generated@@74 $generated@@118)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@61 ($generated@@36 $generated@@120 $generated@@121)) (+ 1 ($generated@@61 $generated@@120)))
 :pattern ( ($generated@@36 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@122 ($generated@@110 $generated@@127 $generated@@124) $generated@@125 $generated@@126) ($generated@@123 $generated@@127 $generated@@124 $generated@@125 $generated@@126))
 :pattern ( ($generated@@122 ($generated@@110 $generated@@127 $generated@@124) $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@61 ($generated@@77 $generated@@128 $generated@@129)) (+ ($generated@@61 $generated@@128) ($generated@@61 $generated@@129)))
 :pattern ( ($generated@@61 ($generated@@77 $generated@@128 $generated@@129)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 Int) ($generated@@132 T@U) ) (!  (and (=> (= $generated@@131 ($generated@@61 $generated@@130)) (= ($generated@@105 ($generated@@36 $generated@@130 $generated@@132) $generated@@131) $generated@@132)) (=> (or (not (= $generated@@131 ($generated@@61 $generated@@130))) (not true)) (= ($generated@@105 ($generated@@36 $generated@@130 $generated@@132) $generated@@131) ($generated@@105 $generated@@130 $generated@@131))))
 :pattern ( ($generated@@105 ($generated@@36 $generated@@130 $generated@@132) $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@19 ($generated@@25 $generated@@133 $generated@@134) $generated@@135)  (or ($generated@@19 $generated@@133 $generated@@135) ($generated@@19 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@19 ($generated@@25 $generated@@133 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@35 ($generated@@77 $generated@@136 $generated@@137) $generated@@138)  (or ($generated@@35 $generated@@136 $generated@@138) ($generated@@35 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@35 ($generated@@77 $generated@@136 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@113 $generated@@139 $generated@@140) (and (= ($generated@@40 ($generated@@25 $generated@@139 $generated@@140) $generated@@139) $generated@@140) (= ($generated@@40 ($generated@@25 $generated@@139 $generated@@140) $generated@@140) $generated@@139)))
 :pattern ( ($generated@@25 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@35 $generated@@141 $generated@@142) (exists (($generated@@143 Int) ) (!  (and (and (<= 0 $generated@@143) (< $generated@@143 ($generated@@61 $generated@@141))) (= ($generated@@105 $generated@@141 $generated@@143) $generated@@142))
 :pattern ( ($generated@@105 $generated@@141 $generated@@143))
)))
 :pattern ( ($generated@@35 $generated@@141 $generated@@142))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (or ($generated@@145 $generated@@146 ($generated@@91 $generated@@73 $generated@@147) ($generated@@91 $generated@@94 $generated@@148)) (and (< 0 $generated@@69) (and ($generated@@72 $generated@@73 $generated@@147 ($generated@@74 $generated@@146)) ($generated@@72 $generated@@94 $generated@@148 ($generated@@95 $generated@@146))))) (= ($generated@@144 $generated@@146 ($generated@@91 $generated@@73 $generated@@147) ($generated@@91 $generated@@94 $generated@@148))  (=> (= ($generated@@75 ($generated@@91 $generated@@73 $generated@@147)) ($generated@@61 ($generated@@91 $generated@@94 $generated@@148))) (and (forall (($generated@@149 Int) ) (!  (=> (and (<= ($generated@@76 0) $generated@@149) (< $generated@@149 ($generated@@61 ($generated@@91 $generated@@94 $generated@@148)))) ($generated@@19 ($generated@@91 $generated@@73 $generated@@147) ($generated@@105 ($generated@@91 $generated@@94 $generated@@148) $generated@@149)))
 :pattern ( ($generated@@105 $generated@@148 $generated@@149))
)) (forall (($generated@@150 T@U) ) (!  (=> ($generated@@96 $generated@@150 $generated@@146) (=> ($generated@@19 ($generated@@91 $generated@@73 $generated@@147) $generated@@150) ($generated@@35 $generated@@148 $generated@@150)))
 :pattern ( ($generated@@35 $generated@@148 $generated@@150))
 :pattern ( ($generated@@19 $generated@@147 $generated@@150))
))))))
 :weight 3
 :pattern ( ($generated@@144 $generated@@146 ($generated@@91 $generated@@73 $generated@@147) ($generated@@91 $generated@@94 $generated@@148)))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@104 $generated@@151 $generated@@152) (= $generated@@151 $generated@@152))
 :pattern ( ($generated@@104 $generated@@151 $generated@@152))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (or ($generated@@71 $generated@@153 $generated@@155) (and (< 1 $generated@@69) ($generated@@72 $generated@@73 $generated@@155 ($generated@@74 $generated@@153)))) (and ($generated@@144 $generated@@153 $generated@@155 ($generated@@52 $generated@@153 $generated@@154 $generated@@155)) ($generated@@72 $generated@@94 ($generated@@52 $generated@@153 $generated@@154 $generated@@155) ($generated@@95 $generated@@153))))
 :pattern ( ($generated@@52 $generated@@153 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (and (= (+ (+ ($generated@@75 ($generated@@40 $generated@@156 $generated@@157)) ($generated@@75 ($generated@@40 $generated@@157 $generated@@156))) ($generated@@75 ($generated@@57 $generated@@156 $generated@@157))) ($generated@@75 ($generated@@25 $generated@@156 $generated@@157))) (= ($generated@@75 ($generated@@40 $generated@@156 $generated@@157)) (- ($generated@@75 $generated@@156) ($generated@@75 ($generated@@57 $generated@@156 $generated@@157)))))
 :pattern ( ($generated@@75 ($generated@@40 $generated@@156 $generated@@157)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@96 ($generated@@110 $generated@@160 $generated@@158) $generated@@159) ($generated@@72 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@96 ($generated@@110 $generated@@160 $generated@@158) $generated@@159))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or ($generated@@145 $generated@@161 $generated@@162 $generated@@163) (and (< 0 $generated@@69) (and ($generated@@72 $generated@@73 $generated@@162 ($generated@@74 $generated@@161)) ($generated@@72 $generated@@94 $generated@@163 ($generated@@95 $generated@@161))))) (= ($generated@@144 $generated@@161 $generated@@162 $generated@@163)  (=> (= ($generated@@75 $generated@@162) ($generated@@61 $generated@@163)) (and (forall (($generated@@164 Int) ) (!  (=> (and (<= ($generated@@76 0) $generated@@164) (< $generated@@164 ($generated@@61 $generated@@163))) ($generated@@19 $generated@@162 ($generated@@105 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@105 $generated@@163 $generated@@164))
)) (forall (($generated@@165 T@U) ) (!  (=> ($generated@@96 $generated@@165 $generated@@161) (=> ($generated@@19 $generated@@162 $generated@@165) ($generated@@35 $generated@@163 $generated@@165)))
 :pattern ( ($generated@@35 $generated@@163 $generated@@165))
 :pattern ( ($generated@@19 $generated@@162 $generated@@165))
))))))
 :pattern ( ($generated@@144 $generated@@161 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@166 T@U) ) (! (<= 0 ($generated@@75 $generated@@166))
 :pattern ( ($generated@@75 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (! (<= 0 ($generated@@61 $generated@@167))
 :pattern ( ($generated@@61 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@123 $generated@@73 $generated@@168 ($generated@@74 $generated@@169) $generated@@170) (forall (($generated@@171 T@U) ) (!  (=> ($generated@@19 $generated@@168 $generated@@171) ($generated@@122 $generated@@171 $generated@@169 $generated@@170))
 :pattern ( ($generated@@19 $generated@@168 $generated@@171))
)))
 :pattern ( ($generated@@123 $generated@@73 $generated@@168 ($generated@@74 $generated@@169) $generated@@170))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (or ($generated@@71 $generated@@172 ($generated@@91 $generated@@73 $generated@@175)) (and (< 1 $generated@@69) (and ($generated@@70 $generated@@174) ($generated@@72 $generated@@73 $generated@@175 ($generated@@74 $generated@@172))))) (and (=> (or (not (= ($generated@@75 ($generated@@91 $generated@@73 $generated@@175)) ($generated@@76 0))) (not true)) (and ($generated@@45 $generated@@172 ($generated@@91 $generated@@73 $generated@@175)) (let (($generated@@176 ($generated@@40 $generated@@175 ($generated@@18 $generated@@48 ($generated@@44 $generated@@172 ($generated@@91 $generated@@73 $generated@@175))))))
($generated@@71 $generated@@172 $generated@@176)))) (= ($generated@@52 $generated@@172 ($generated@@53 $generated@@173) ($generated@@91 $generated@@73 $generated@@175)) (ite (= ($generated@@75 ($generated@@91 $generated@@73 $generated@@175)) ($generated@@76 0)) $generated@@50 (let (($generated@@177 ($generated@@44 $generated@@172 ($generated@@91 $generated@@73 $generated@@175))))
(let (($generated@@178 ($generated@@40 $generated@@175 ($generated@@18 $generated@@48 $generated@@177))))
(let (($generated@@179 ($generated@@52 $generated@@172 ($generated@@53 $generated@@173) $generated@@178)))
($generated@@77 ($generated@@36 $generated@@50 $generated@@177) $generated@@179))))))))
 :weight 3
 :pattern ( ($generated@@52 $generated@@172 ($generated@@53 $generated@@173) ($generated@@91 $generated@@73 $generated@@175)) ($generated@@70 $generated@@174))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@123 $generated@@94 $generated@@180 ($generated@@95 $generated@@181) $generated@@182) (forall (($generated@@183 Int) ) (!  (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@61 $generated@@180))) ($generated@@122 ($generated@@105 $generated@@180 $generated@@183) $generated@@181 $generated@@182))
 :pattern ( ($generated@@105 $generated@@180 $generated@@183))
)))
 :pattern ( ($generated@@123 $generated@@94 $generated@@180 ($generated@@95 $generated@@181) $generated@@182))
)))
(assert  (=> (<= 1 $generated@@69) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and (or ($generated@@71 $generated@@185 $generated@@187) (and (< 1 $generated@@69) (and ($generated@@72 $generated@@73 $generated@@187 ($generated@@74 $generated@@185)) ($generated@@123 $generated@@73 $generated@@187 ($generated@@74 $generated@@185) $generated@@184)))) ($generated@@70 $generated@@184)) ($generated@@123 $generated@@94 ($generated@@52 $generated@@185 $generated@@186 $generated@@187) ($generated@@95 $generated@@185) $generated@@184))
 :pattern ( ($generated@@123 $generated@@94 ($generated@@52 $generated@@185 $generated@@186 $generated@@187) ($generated@@95 $generated@@185) $generated@@184))
))))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@188 ($generated@@74 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@74 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@190 ($generated@@74 $generated@@191)) $generated)
 :pattern ( ($generated@@74 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@192 ($generated@@95 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@95 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@190 ($generated@@95 $generated@@194)) $generated@@0)
 :pattern ( ($generated@@95 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@109 $generated@@196 ($generated@@110 $generated@@196 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@110 $generated@@196 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@25 $generated@@197 ($generated@@25 $generated@@197 $generated@@198)) ($generated@@25 $generated@@197 $generated@@198))
 :pattern ( ($generated@@25 $generated@@197 ($generated@@25 $generated@@197 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@57 $generated@@199 ($generated@@57 $generated@@199 $generated@@200)) ($generated@@57 $generated@@199 $generated@@200))
 :pattern ( ($generated@@57 $generated@@199 ($generated@@57 $generated@@199 $generated@@200)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@201 $generated@@212 $generated@@213 $generated@@214 ($generated@@208 $generated@@212 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@217 $generated@@218) $generated@@215)
 :weight 0
)) (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (or (= $generated@@224 $generated@@226) (= ($generated@@201 $generated@@219 $generated@@220 $generated@@221 ($generated@@208 $generated@@219 $generated@@220 $generated@@221 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@226 $generated@@227) ($generated@@201 $generated@@219 $generated@@220 $generated@@221 $generated@@223 $generated@@226 $generated@@227)))
 :weight 0
)) (forall (($generated@@228 T@T) ($generated@@229 T@T) ($generated@@230 T@T) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (or (= $generated@@234 $generated@@236) (= ($generated@@201 $generated@@228 $generated@@229 $generated@@230 ($generated@@208 $generated@@228 $generated@@229 $generated@@230 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@235 $generated@@236) ($generated@@201 $generated@@228 $generated@@229 $generated@@230 $generated@@232 $generated@@235 $generated@@236)))
 :weight 0
)))) (= ($generated@@2 $generated@@202) 5)) (= ($generated@@2 $generated@@203) 6)) (forall (($generated@@237 T@T) ($generated@@238 T@T) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@205 $generated@@237 $generated@@238 ($generated@@209 $generated@@237 $generated@@238 $generated@@240 $generated@@241 $generated@@239) $generated@@241) $generated@@239)
 :weight 0
))) (forall (($generated@@242 T@T) ($generated@@243 T@T) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (or (= $generated@@246 $generated@@247) (= ($generated@@205 $generated@@242 $generated@@243 ($generated@@209 $generated@@242 $generated@@243 $generated@@245 $generated@@246 $generated@@244) $generated@@247) ($generated@@205 $generated@@242 $generated@@243 $generated@@245 $generated@@247)))
 :weight 0
))) (= ($generated@@2 $generated@@206) 7)) (forall (($generated@@248 T@T) ($generated@@249 T@T) ) (= ($generated@@2 ($generated@@207 $generated@@248 $generated@@249)) 8))) (forall (($generated@@250 T@T) ($generated@@251 T@T) ) (! (= ($generated@@210 ($generated@@207 $generated@@250 $generated@@251)) $generated@@250)
 :pattern ( ($generated@@207 $generated@@250 $generated@@251))
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (! (= ($generated@@211 ($generated@@207 $generated@@252 $generated@@253)) $generated@@253)
 :pattern ( ($generated@@207 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 Bool) ($generated@@258 T@U) ($generated@@259 T@U) ) (! (= ($generated@@7 ($generated@@201 $generated@@202 $generated@@203 $generated@@3 ($generated@@204 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))  (=> (and (or (not (= $generated@@258 $generated@@254)) (not true)) ($generated@@7 ($generated@@109 $generated@@3 ($generated@@205 $generated@@203 $generated@@206 ($generated@@205 $generated@@202 ($generated@@207 $generated@@203 $generated@@206) $generated@@255 $generated@@258) $generated@@256)))) $generated@@257))
 :pattern ( ($generated@@201 $generated@@202 $generated@@203 $generated@@3 ($generated@@204 $generated@@254 $generated@@255 $generated@@256 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (and (= ($generated@@260 ($generated@@36 $generated@@262 $generated@@263)) $generated@@262) (= ($generated@@261 ($generated@@36 $generated@@262 $generated@@263)) $generated@@263))
 :pattern ( ($generated@@36 $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> ($generated@@96 $generated@@264 ($generated@@74 $generated@@265)) (and (= ($generated@@110 $generated@@73 ($generated@@109 $generated@@73 $generated@@264)) $generated@@264) ($generated@@72 $generated@@73 ($generated@@109 $generated@@73 $generated@@264) ($generated@@74 $generated@@265))))
 :pattern ( ($generated@@96 $generated@@264 ($generated@@74 $generated@@265)))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (=> ($generated@@96 $generated@@266 ($generated@@95 $generated@@267)) (and (= ($generated@@110 $generated@@94 ($generated@@109 $generated@@94 $generated@@266)) $generated@@266) ($generated@@72 $generated@@94 ($generated@@109 $generated@@94 $generated@@266) ($generated@@95 $generated@@267))))
 :pattern ( ($generated@@96 $generated@@266 ($generated@@95 $generated@@267)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> ($generated@@19 $generated@@268 $generated@@269) (= ($generated@@75 ($generated@@18 $generated@@268 $generated@@269)) ($generated@@75 $generated@@268)))
 :pattern ( ($generated@@75 ($generated@@18 $generated@@268 $generated@@269)))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 Int) ) (!  (and (=> (< $generated@@272 ($generated@@61 $generated@@270)) (= ($generated@@105 ($generated@@77 $generated@@270 $generated@@271) $generated@@272) ($generated@@105 $generated@@270 $generated@@272))) (=> (<= ($generated@@61 $generated@@270) $generated@@272) (= ($generated@@105 ($generated@@77 $generated@@270 $generated@@271) $generated@@272) ($generated@@105 $generated@@271 (- $generated@@272 ($generated@@61 $generated@@270))))))
 :pattern ( ($generated@@105 ($generated@@77 $generated@@270 $generated@@271) $generated@@272))
)))
(assert (forall (($generated@@273 Int) ) (! (= ($generated@@110 $generated@@4 ($generated@@8 ($generated@@76 $generated@@273))) ($generated@@91 $generated@@206 ($generated@@110 $generated@@4 ($generated@@8 $generated@@273))))
 :pattern ( ($generated@@110 $generated@@4 ($generated@@8 ($generated@@76 $generated@@273))))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@T) ) (! (= ($generated@@110 $generated@@275 ($generated@@91 $generated@@275 $generated@@274)) ($generated@@91 $generated@@206 ($generated@@110 $generated@@275 $generated@@274)))
 :pattern ( ($generated@@110 $generated@@275 ($generated@@91 $generated@@275 $generated@@274)))
)))
(assert (forall (($generated@@276 T@U) ) (!  (=> (= ($generated@@61 $generated@@276) 0) (= $generated@@276 $generated@@50))
 :pattern ( ($generated@@61 $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (! (= ($generated@@72 $generated@@94 $generated@@277 ($generated@@95 $generated@@278)) (forall (($generated@@279 Int) ) (!  (=> (and (<= 0 $generated@@279) (< $generated@@279 ($generated@@61 $generated@@277))) ($generated@@96 ($generated@@105 $generated@@277 $generated@@279) $generated@@278))
 :pattern ( ($generated@@105 $generated@@277 $generated@@279))
)))
 :pattern ( ($generated@@72 $generated@@94 $generated@@277 ($generated@@95 $generated@@278)))
)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (not ($generated@@19 $generated@@280 $generated@@281)) (= ($generated@@75 ($generated@@18 $generated@@280 $generated@@281)) (+ ($generated@@75 $generated@@280) 1)))
 :pattern ( ($generated@@75 ($generated@@18 $generated@@280 $generated@@281)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () T@U)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 () T@U)
(declare-fun $generated@@297 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@298  (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@145 $generated@@282 $generated@@283 $generated@@284) (or ($generated@@144 $generated@@282 $generated@@283 $generated@@284) (=> (= ($generated@@75 $generated@@283) ($generated@@61 $generated@@284)) (forall (($generated@@299 Int) ) (!  (=> (and (<= ($generated@@76 0) $generated@@299) (< $generated@@299 ($generated@@61 $generated@@284))) ($generated@@19 $generated@@283 ($generated@@105 $generated@@284 $generated@@299)))
 :pattern ( ($generated@@105 $generated@@284 $generated@@299))
)))))) (=> (=> ($generated@@145 $generated@@282 $generated@@283 $generated@@284) (or ($generated@@144 $generated@@282 $generated@@283 $generated@@284) (=> (= ($generated@@75 $generated@@283) ($generated@@61 $generated@@284)) (forall (($generated@@300 Int) ) (!  (=> (and (<= ($generated@@76 0) $generated@@300) (< $generated@@300 ($generated@@61 $generated@@284))) ($generated@@19 $generated@@283 ($generated@@105 $generated@@284 $generated@@300)))
 :pattern ( ($generated@@105 $generated@@284 $generated@@300))
))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@145 $generated@@282 $generated@@283 $generated@@284) (or ($generated@@144 $generated@@282 $generated@@283 $generated@@284) (=> (= ($generated@@75 $generated@@283) ($generated@@61 $generated@@284)) (forall (($generated@@301 T@U) ) (!  (=> ($generated@@96 $generated@@301 $generated@@282) (=> ($generated@@19 $generated@@283 $generated@@301) ($generated@@35 $generated@@284 $generated@@301)))
 :pattern ( ($generated@@35 $generated@@284 $generated@@301))
 :pattern ( ($generated@@19 $generated@@283 $generated@@301))
))))))))))
(let (($generated@@302  (and (=> (= (ControlFlow 0 6) (- 0 9)) (exists (($generated@@303 T@U) )  (and ($generated@@96 $generated@@303 $generated@@282) ($generated@@19 $generated@@283 $generated@@303)))) (=> (exists (($generated@@304 T@U) )  (and ($generated@@96 $generated@@304 $generated@@282) ($generated@@19 $generated@@283 $generated@@304))) (=> (and (and (and ($generated@@96 $generated@@285 $generated@@282) ($generated@@122 $generated@@285 $generated@@282 $generated@@286)) ($generated@@19 $generated@@283 $generated@@285)) (and (and (= $generated@@287 ($generated@@40 $generated@@283 ($generated@@18 $generated@@48 $generated@@285))) ($generated@@72 $generated@@73 $generated@@287 ($generated@@74 $generated@@282))) (and (= $generated@@288 $generated@@287) ($generated@@123 $generated@@73 $generated@@288 ($generated@@74 $generated@@282) $generated@@286)))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (and ($generated@@100 $generated@@288 $generated@@283) (not ($generated@@100 $generated@@283 $generated@@288)))) (=> (and ($generated@@100 $generated@@288 $generated@@283) (not ($generated@@100 $generated@@283 $generated@@288))) (=> ($generated@@71 $generated@@282 $generated@@288) (=> (and (and (and (= $generated@@289 ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@288)) ($generated@@71 $generated@@282 $generated@@288)) (and ($generated@@72 $generated@@94 $generated@@289 ($generated@@95 $generated@@282)) (= $generated@@291 $generated@@289))) (and (and ($generated@@96 $generated@@292 $generated@@282) ($generated@@122 $generated@@292 $generated@@282 $generated@@286)) (and ($generated@@19 $generated@@283 $generated@@292) (let (($generated@@305 ($generated@@40 $generated@@283 ($generated@@18 $generated@@48 $generated@@292))))
($generated@@71 $generated@@282 $generated@@305))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@104 (let (($generated@@306 ($generated@@40 $generated@@283 ($generated@@18 $generated@@48 $generated@@285))))
(let (($generated@@307 ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@306)))
($generated@@77 ($generated@@36 $generated@@50 $generated@@285) $generated@@307))) (let (($generated@@308 ($generated@@40 $generated@@283 ($generated@@18 $generated@@48 $generated@@292))))
(let (($generated@@309 ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@308)))
($generated@@77 ($generated@@36 $generated@@50 $generated@@292) $generated@@309))))) (=> ($generated@@104 (let (($generated@@310 ($generated@@40 $generated@@283 ($generated@@18 $generated@@48 $generated@@285))))
(let (($generated@@311 ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@310)))
($generated@@77 ($generated@@36 $generated@@50 $generated@@285) $generated@@311))) (let (($generated@@312 ($generated@@40 $generated@@283 ($generated@@18 $generated@@48 $generated@@292))))
(let (($generated@@313 ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@312)))
($generated@@77 ($generated@@36 $generated@@50 $generated@@292) $generated@@313)))) (=> (and ($generated@@45 $generated@@282 $generated@@283) (= ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@283) (let (($generated@@314 ($generated@@40 $generated@@283 ($generated@@18 $generated@@48 $generated@@285))))
(let (($generated@@315 ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@314)))
($generated@@77 ($generated@@36 $generated@@50 $generated@@285) $generated@@315))))) (=> (and (and (let (($generated@@316 ($generated@@40 $generated@@283 ($generated@@18 $generated@@48 $generated@@285))))
($generated@@71 $generated@@282 $generated@@316)) ($generated@@72 $generated@@94 ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@283) ($generated@@95 $generated@@282))) (and (= ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@283) $generated@@284) (= (ControlFlow 0 6) 3))) $generated@@298)))))))))))))
(let (($generated@@317  (=> (and (not (and ($generated@@96 $generated@@285 $generated@@282) ($generated@@122 $generated@@285 $generated@@282 $generated@@286))) (= (ControlFlow 0 11) 6)) $generated@@302)))
(let (($generated@@318  (=> (and (and ($generated@@96 $generated@@285 $generated@@282) ($generated@@122 $generated@@285 $generated@@282 $generated@@286)) (= (ControlFlow 0 10) 6)) $generated@@302)))
(let (($generated@@319  (=> (or (not (= ($generated@@75 $generated@@283) ($generated@@76 0))) (not true)) (and (=> (= (ControlFlow 0 12) 10) $generated@@318) (=> (= (ControlFlow 0 12) 11) $generated@@317)))))
(let (($generated@@320  (=> (= ($generated@@75 $generated@@283) ($generated@@76 0)) (=> (and (and (= ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@283) ($generated@@91 $generated@@94 $generated@@50)) ($generated@@72 $generated@@94 ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@283) ($generated@@95 $generated@@282))) (and (= ($generated@@52 $generated@@282 ($generated@@53 $generated@@290) $generated@@283) $generated@@284) (= (ControlFlow 0 5) 3))) $generated@@298))))
(let (($generated@@321  (=> (= $generated@@293 $generated@@283) (=> (and ($generated@@72 $generated@@73 $generated@@293 ($generated@@74 $generated@@282)) (= $generated@@294 $generated@@293)) (and (=> (= (ControlFlow 0 13) 5) $generated@@320) (=> (= (ControlFlow 0 13) 12) $generated@@319))))))
(let (($generated@@322 true))
(let (($generated@@323  (=> (= $generated@@295 ($generated@@204 $generated@@296 $generated@@286 $generated@@1 false)) (and (=> (= (ControlFlow 0 14) 1) $generated@@322) (=> (= (ControlFlow 0 14) 13) $generated@@321)))))
(let (($generated@@324  (=> (and (and (and ($generated@@70 $generated@@286) ($generated@@297 $generated@@286)) ($generated@@72 $generated@@73 $generated@@283 ($generated@@74 $generated@@282))) (and (= 1 $generated@@69) (= (ControlFlow 0 15) 14))) $generated@@323)))
$generated@@324)))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 7))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
