(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@103 (Int) T@U)
(declare-fun $generated@@106 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@176 (T@U) Int)
(declare-fun $generated@@178 (T@U) Int)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@184 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated) $generated@@1))
(assert (= ($generated@@32 $generated@@0) $generated@@2))
(assert (= ($generated@@16 $generated@@38) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 Int) ) (!  (=> (and (<= 0 $generated@@40) (< $generated@@40 ($generated@@35 $generated@@39))) (< ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@39 $generated@@40))) ($generated@@36 ($generated@@34 $generated@@39))))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@34 $generated@@39))
)))
(assert (= ($generated@@35 $generated@@41) 0))
(assert (= ($generated@@42 $generated@@43) $generated@@8))
(assert (= ($generated@@16 $generated@@45) 4))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@48 $generated@@46 $generated@@49) ($generated@@44 $generated@@45 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@44 $generated@@45 $generated@@48 $generated@@46 $generated@@49))
 :pattern ( ($generated@@44 $generated@@45 $generated@@48 $generated@@47 $generated@@49))
)))
(assert ($generated@@50 $generated@@38 $generated@@43 $generated@@51))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@16 $generated@@54) 5)) (= ($generated@@16 $generated@@55) 6)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@16 ($generated@@56 $generated@@71 $generated@@72)) 7))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@77 $generated@@47 $generated@@78)  (or (= $generated@@77 $generated@@52) ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@77) $generated@@4)))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@77 $generated@@47 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@79 $generated@@80 $generated@@81) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@82) $generated@@4))) ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@81 $generated@@82) $generated@@4))))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@81 $generated@@82) $generated@@4))
)))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@87) (= ($generated@@42 $generated@@87) $generated@@5))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) (= ($generated@@42 $generated@@89) $generated@@7))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 $generated@@91) (= ($generated@@42 $generated@@91) $generated@@8))
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 $generated@@93) (= ($generated@@42 $generated@@93) $generated@@10))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@37 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@37 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@90 $generated@@97) (= $generated@@97 $generated@@43))
 :pattern ( ($generated@@90 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@86 $generated@@99) (exists (($generated@@100 T@U) ) (= $generated@@99 ($generated@@98 $generated@@100))))
 :pattern ( ($generated@@86 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@88 $generated@@101) (exists (($generated@@102 T@U) ) (= $generated@@101 ($generated@@34 $generated@@102))))
 :pattern ( ($generated@@88 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@92 $generated@@104) (exists (($generated@@105 Int) ) (= $generated@@104 ($generated@@103 $generated@@105))))
 :pattern ( ($generated@@92 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@106 ($generated@@94 $generated@@110 $generated@@107) $generated@@108 $generated@@109) ($generated@@44 $generated@@110 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@106 ($generated@@94 $generated@@110 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@79 $generated@@111 $generated@@112) (=> ($generated@@106 $generated@@113 $generated@@114 $generated@@111) ($generated@@106 $generated@@113 $generated@@114 $generated@@112)))
 :pattern ( ($generated@@79 $generated@@111 $generated@@112) ($generated@@106 $generated@@113 $generated@@114 $generated@@111))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (!  (=> ($generated@@79 $generated@@115 $generated@@116) (=> ($generated@@44 $generated@@119 $generated@@117 $generated@@118 $generated@@115) ($generated@@44 $generated@@119 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@79 $generated@@115 $generated@@116) ($generated@@44 $generated@@119 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@122 T@U) ) (!  (and (= ($generated@@32 ($generated@@120 $generated@@122)) $generated@@6) (= ($generated@@121 ($generated@@120 $generated@@122)) $generated@@13))
 :pattern ( ($generated@@120 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@123 $generated@@124 $generated@@51) (and (= ($generated@@94 $generated@@38 ($generated@@37 $generated@@38 $generated@@124)) $generated@@124) ($generated@@50 $generated@@38 ($generated@@37 $generated@@38 $generated@@124) $generated@@51)))
 :pattern ( ($generated@@123 $generated@@124 $generated@@51))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@123 $generated@@125 $generated@@47) (and (= ($generated@@94 $generated@@45 ($generated@@37 $generated@@45 $generated@@125)) $generated@@125) ($generated@@50 $generated@@45 ($generated@@37 $generated@@45 $generated@@125) $generated@@47)))
 :pattern ( ($generated@@123 $generated@@125 $generated@@47))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@123 $generated@@126 $generated@@46) (and (= ($generated@@94 $generated@@45 ($generated@@37 $generated@@45 $generated@@126)) $generated@@126) ($generated@@50 $generated@@45 ($generated@@37 $generated@@45 $generated@@126) $generated@@46)))
 :pattern ( ($generated@@123 $generated@@126 $generated@@46))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@127 $generated@@46)  (and ($generated@@50 $generated@@45 $generated@@127 $generated@@47) (or (not (= $generated@@127 $generated@@52)) (not true))))
 :pattern ( ($generated@@50 $generated@@45 $generated@@127 $generated@@46))
 :pattern ( ($generated@@50 $generated@@45 $generated@@127 $generated@@47))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@128 $generated@@131) (= ($generated@@44 $generated@@38 ($generated@@98 $generated@@130) ($generated@@120 $generated@@129) $generated@@131) ($generated@@106 $generated@@130 $generated@@129 $generated@@131)))
 :pattern ( ($generated@@44 $generated@@38 ($generated@@98 $generated@@130) ($generated@@120 $generated@@129) $generated@@131))
)))
(assert (= ($generated@@16 $generated@@132) 8))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and ($generated@@128 $generated@@136) (and ($generated@@88 $generated@@135) (exists (($generated@@137 T@U) ) (! ($generated@@44 $generated@@38 $generated@@135 ($generated@@120 $generated@@137) $generated@@136)
 :pattern ( ($generated@@44 $generated@@38 $generated@@135 ($generated@@120 $generated@@137) $generated@@136))
)))) ($generated@@44 $generated@@132 ($generated@@133 $generated@@135) ($generated@@134 $generated) $generated@@136))
 :pattern ( ($generated@@44 $generated@@132 ($generated@@133 $generated@@135) ($generated@@134 $generated) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@128 $generated@@140) (= ($generated@@44 $generated@@38 ($generated@@34 $generated@@139) ($generated@@120 $generated@@138) $generated@@140) ($generated@@44 $generated@@132 $generated@@139 ($generated@@134 $generated) $generated@@140)))
 :pattern ( ($generated@@44 $generated@@38 ($generated@@34 $generated@@139) ($generated@@120 $generated@@138) $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@50 $generated@@38 $generated@@142 ($generated@@120 $generated@@141)) (or ($generated@@86 $generated@@142) ($generated@@88 $generated@@142)))
 :pattern ( ($generated@@88 $generated@@142) ($generated@@50 $generated@@38 $generated@@142 ($generated@@120 $generated@@141)))
 :pattern ( ($generated@@86 $generated@@142) ($generated@@50 $generated@@38 $generated@@142 ($generated@@120 $generated@@141)))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@50 $generated@@38 $generated@@143 $generated@@51) (or ($generated@@90 $generated@@143) ($generated@@92 $generated@@143)))
 :pattern ( ($generated@@92 $generated@@143) ($generated@@50 $generated@@38 $generated@@143 $generated@@51))
 :pattern ( ($generated@@90 $generated@@143) ($generated@@50 $generated@@38 $generated@@143 $generated@@51))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or (not (= $generated@@144 $generated@@146)) (not true)) (=> (and ($generated@@79 $generated@@144 $generated@@145) ($generated@@79 $generated@@145 $generated@@146)) ($generated@@79 $generated@@144 $generated@@146)))
 :pattern ( ($generated@@79 $generated@@144 $generated@@145) ($generated@@79 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@123 $generated@@147 $generated@@0) (and (= ($generated@@94 $generated@@18 ($generated@@37 $generated@@18 $generated@@147)) $generated@@147) ($generated@@50 $generated@@18 ($generated@@37 $generated@@18 $generated@@147) $generated@@0)))
 :pattern ( ($generated@@123 $generated@@147 $generated@@0))
)))
(assert (= ($generated@@16 $generated@@148) 9))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@123 $generated@@149 $generated) (and (= ($generated@@94 $generated@@148 ($generated@@37 $generated@@148 $generated@@149)) $generated@@149) ($generated@@50 $generated@@148 ($generated@@37 $generated@@148 $generated@@149) $generated)))
 :pattern ( ($generated@@123 $generated@@149 $generated))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@123 ($generated@@94 $generated@@152 $generated@@150) $generated@@151) ($generated@@50 $generated@@152 $generated@@150 $generated@@151))
 :pattern ( ($generated@@123 ($generated@@94 $generated@@152 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (<= 0 ($generated@@35 $generated@@153))
 :pattern ( ($generated@@35 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@44 $generated@@132 $generated@@154 ($generated@@134 $generated@@155) $generated@@156) (forall (($generated@@157 Int) ) (!  (=> (and (<= 0 $generated@@157) (< $generated@@157 ($generated@@35 $generated@@154))) ($generated@@106 ($generated@@33 $generated@@154 $generated@@157) $generated@@155 $generated@@156))
 :pattern ( ($generated@@33 $generated@@154 $generated@@157))
)))
 :pattern ( ($generated@@44 $generated@@132 $generated@@154 ($generated@@134 $generated@@155) $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@134 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@134 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@32 ($generated@@134 $generated@@160)) $generated@@3)
 :pattern ( ($generated@@134 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@42 ($generated@@98 $generated@@161)) $generated@@5)
 :pattern ( ($generated@@98 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@120 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@120 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@164 ($generated@@98 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@98 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@42 ($generated@@34 $generated@@166)) $generated@@7)
 :pattern ( ($generated@@34 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@133 ($generated@@34 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@34 $generated@@167))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@42 ($generated@@103 $generated@@168)) $generated@@10)
 :pattern ( ($generated@@103 $generated@@168))
)))
(assert (forall (($generated@@170 Int) ) (! (= ($generated@@169 ($generated@@103 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@103 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@T) ) (! (= ($generated@@37 $generated@@172 ($generated@@94 $generated@@172 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@94 $generated@@172 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@50 $generated@@38 ($generated@@98 $generated@@174) ($generated@@120 $generated@@173)) ($generated@@123 $generated@@174 $generated@@173))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@98 $generated@@174) ($generated@@120 $generated@@173)))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@50 $generated@@38 ($generated@@103 $generated@@175) $generated@@51) ($generated@@50 $generated@@18 ($generated@@22 $generated@@175) $generated@@0))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@103 $generated@@175) $generated@@51))
)))
(assert (forall (($generated@@177 T@U) ) (! (< ($generated@@176 $generated@@177) ($generated@@36 ($generated@@98 $generated@@177)))
 :pattern ( ($generated@@98 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (< ($generated@@178 $generated@@179) ($generated@@36 ($generated@@34 $generated@@179)))
 :pattern ( ($generated@@34 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@128 $generated@@182) (and ($generated@@86 $generated@@180) ($generated@@44 $generated@@38 $generated@@180 ($generated@@120 $generated@@181) $generated@@182))) ($generated@@106 ($generated@@164 $generated@@180) $generated@@181 $generated@@182))
 :pattern ( ($generated@@106 ($generated@@164 $generated@@180) $generated@@181 $generated@@182))
)))
(assert  (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@183 $generated@@186 $generated@@187 $generated@@188 ($generated@@185 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@191 $generated@@192) $generated@@189)
 :weight 0
)) (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@183 $generated@@193 $generated@@194 $generated@@195 ($generated@@185 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@183 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@208 $generated@@210) (= ($generated@@183 $generated@@202 $generated@@203 $generated@@204 ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@183 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 Bool) ($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@21 ($generated@@183 $generated@@45 $generated@@54 $generated@@17 ($generated@@184 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))  (=> (and (or (not (= $generated@@215 $generated@@211)) (not true)) ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@212 $generated@@215) $generated@@213)))) $generated@@214))
 :pattern ( ($generated@@183 $generated@@45 $generated@@54 $generated@@17 ($generated@@184 $generated@@211 $generated@@212 $generated@@213 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and ($generated@@128 $generated@@218) (and ($generated@@92 $generated@@217) ($generated@@44 $generated@@38 $generated@@217 $generated@@51 $generated@@218))) ($generated@@44 $generated@@18 ($generated@@22 ($generated@@169 $generated@@217)) $generated@@0 $generated@@218))
 :pattern ( ($generated@@44 $generated@@18 ($generated@@22 ($generated@@169 $generated@@217)) $generated@@0 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@176 ($generated@@94 $generated@@38 $generated@@219)) ($generated@@36 $generated@@219))
 :pattern ( ($generated@@176 ($generated@@94 $generated@@38 $generated@@219)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> ($generated@@123 $generated@@220 ($generated@@134 $generated@@221)) (and (= ($generated@@94 $generated@@132 ($generated@@37 $generated@@132 $generated@@220)) $generated@@220) ($generated@@50 $generated@@132 ($generated@@37 $generated@@132 $generated@@220) ($generated@@134 $generated@@221))))
 :pattern ( ($generated@@123 $generated@@220 ($generated@@134 $generated@@221)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> ($generated@@123 $generated@@223 ($generated@@120 $generated@@222)) (and (= ($generated@@94 $generated@@38 ($generated@@37 $generated@@38 $generated@@223)) $generated@@223) ($generated@@50 $generated@@38 ($generated@@37 $generated@@38 $generated@@223) ($generated@@120 $generated@@222))))
 :pattern ( ($generated@@123 $generated@@223 ($generated@@120 $generated@@222)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@50 $generated@@38 ($generated@@34 $generated@@225) ($generated@@120 $generated@@224)) ($generated@@50 $generated@@132 $generated@@225 ($generated@@134 $generated)))
 :pattern ( ($generated@@50 $generated@@38 ($generated@@34 $generated@@225) ($generated@@120 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@128 $generated@@227) ($generated@@50 $generated@@38 $generated@@226 $generated@@51)) ($generated@@44 $generated@@38 $generated@@226 $generated@@51 $generated@@227))
 :pattern ( ($generated@@44 $generated@@38 $generated@@226 $generated@@51 $generated@@227))
)))
(assert (= ($generated@@32 $generated@@51) $generated@@9))
(assert (= ($generated@@121 $generated@@51) $generated@@14))
(assert (= ($generated@@32 $generated@@47) $generated@@11))
(assert (= ($generated@@121 $generated@@47) $generated@@15))
(assert (= ($generated@@32 $generated@@46) $generated@@12))
(assert (= ($generated@@121 $generated@@46) $generated@@15))
(assert (= $generated@@43 ($generated@@83 $generated@@38 $generated@@43)))
(assert (forall (($generated@@230 T@U) ) (! (= ($generated@@50 $generated@@45 $generated@@230 $generated@@47)  (or (= $generated@@230 $generated@@52) ($generated@@228 ($generated@@229 $generated@@230))))
 :pattern ( ($generated@@50 $generated@@45 $generated@@230 $generated@@47))
)))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@98 ($generated@@83 $generated@@55 $generated@@231)) ($generated@@83 $generated@@38 ($generated@@98 $generated@@231)))
 :pattern ( ($generated@@98 ($generated@@83 $generated@@55 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= ($generated@@34 ($generated@@83 $generated@@132 $generated@@232)) ($generated@@83 $generated@@38 ($generated@@34 $generated@@232)))
 :pattern ( ($generated@@34 ($generated@@83 $generated@@132 $generated@@232)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@T) ) (! (= ($generated@@94 $generated@@234 ($generated@@83 $generated@@234 $generated@@233)) ($generated@@83 $generated@@55 ($generated@@94 $generated@@234 $generated@@233)))
 :pattern ( ($generated@@94 $generated@@234 ($generated@@83 $generated@@234 $generated@@233)))
)))
(assert (forall (($generated@@235 T@U) ) (!  (=> (= ($generated@@35 $generated@@235) 0) (= $generated@@235 $generated@@41))
 :pattern ( ($generated@@35 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! ($generated@@44 $generated@@18 $generated@@237 $generated@@0 $generated@@236)
 :pattern ( ($generated@@44 $generated@@18 $generated@@237 $generated@@0 $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! ($generated@@44 $generated@@148 $generated@@239 $generated $generated@@238)
 :pattern ( ($generated@@44 $generated@@148 $generated@@239 $generated $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (! (= ($generated@@50 $generated@@132 $generated@@240 ($generated@@134 $generated@@241)) (forall (($generated@@242 Int) ) (!  (=> (and (<= 0 $generated@@242) (< $generated@@242 ($generated@@35 $generated@@240))) ($generated@@123 ($generated@@33 $generated@@240 $generated@@242) $generated@@241))
 :pattern ( ($generated@@33 $generated@@240 $generated@@242))
)))
 :pattern ( ($generated@@50 $generated@@132 $generated@@240 ($generated@@134 $generated@@241)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 Int) ) (!  (=> (and (<= 0 $generated@@244) (< $generated@@244 ($generated@@35 $generated@@243))) (< ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@243 $generated@@244))) ($generated@@178 $generated@@243)))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@38 ($generated@@33 $generated@@243 $generated@@244))))
)))
(assert (forall (($generated@@245 T@U) ) (! ($generated@@50 $generated@@18 $generated@@245 $generated@@0)
 :pattern ( ($generated@@50 $generated@@18 $generated@@245 $generated@@0))
)))
(assert (forall (($generated@@246 T@U) ) (! ($generated@@50 $generated@@148 $generated@@246 $generated)
 :pattern ( ($generated@@50 $generated@@148 $generated@@246 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@260 true))
(let (($generated@@261  (=> (and (= $generated@@247 ($generated@@103 $generated@@248)) (= (ControlFlow 0 7) (- 0 6))) false)))
(let (($generated@@262  (=> (or (not (= $generated@@247 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 9) 7) $generated@@261) (=> (= (ControlFlow 0 9) 8) $generated@@260)))))
(let (($generated@@263 true))
(let (($generated@@264  (=> (and (= $generated@@247 $generated@@43) (= (ControlFlow 0 5) 2)) $generated@@263)))
(let (($generated@@265  (=> (and (= $generated@@249 ($generated@@98 ($generated@@94 $generated@@38 $generated@@247))) ($generated@@50 $generated@@38 $generated@@247 $generated@@51)) (and (=> (= (ControlFlow 0 10) 5) $generated@@264) (=> (= (ControlFlow 0 10) 9) $generated@@262)))))
(let (($generated@@266  (=> (and (= $generated@@249 ($generated@@34 $generated@@250)) ($generated@@50 $generated@@132 $generated@@250 ($generated@@134 $generated))) (=> (and (and (= $generated@@251 $generated@@250) ($generated@@50 $generated@@132 $generated@@251 ($generated@@134 $generated))) (and (= $generated@@252 $generated@@251) (= (ControlFlow 0 3) 2))) $generated@@263))))
(let (($generated@@267 true))
(let (($generated@@268  (=> (or (not (= $generated@@249 ($generated@@98 ($generated@@94 $generated@@38 $generated@@247)))) (not true)) (and (=> (= (ControlFlow 0 4) 3) $generated@@266) (=> (= (ControlFlow 0 4) 1) $generated@@267)))))
(let (($generated@@269  (=> (= $generated@@253 ($generated@@184 $generated@@52 $generated@@254 $generated@@4 false)) (=> (and ($generated@@128 $generated@@255) ($generated@@256 $generated@@255)) (=> (and (and (forall (($generated@@270 T@U) ) (!  (=> (and (or (not (= $generated@@270 $generated@@52)) (not true)) ($generated@@21 ($generated@@37 $generated@@17 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@254 $generated@@270) $generated@@4)))) (= ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@255 $generated@@270) ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@254 $generated@@270)))
 :pattern ( ($generated@@53 $generated@@45 ($generated@@56 $generated@@54 $generated@@55) $generated@@255 $generated@@270))
)) ($generated@@79 $generated@@254 $generated@@255)) (and ($generated@@50 $generated@@38 $generated@@249 ($generated@@120 $generated@@51)) ($generated@@44 $generated@@38 $generated@@249 ($generated@@120 $generated@@51) $generated@@255))) (and (=> (= (ControlFlow 0 11) 10) $generated@@265) (=> (= (ControlFlow 0 11) 4) $generated@@268)))))))
(let (($generated@@271  (=> (and (and (and ($generated@@128 $generated@@254) ($generated@@256 $generated@@254)) (and (or (not (= $generated@@257 $generated@@52)) (not true)) (and ($generated@@50 $generated@@45 $generated@@257 $generated@@46) ($generated@@44 $generated@@45 $generated@@257 $generated@@46 $generated@@254)))) (and (and ($generated@@50 $generated@@38 $generated@@258 ($generated@@120 $generated@@51)) ($generated@@44 $generated@@38 $generated@@258 ($generated@@120 $generated@@51) $generated@@254)) (and (= 1 $generated@@259) (= (ControlFlow 0 12) 11)))) $generated@@269)))
$generated@@271))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
