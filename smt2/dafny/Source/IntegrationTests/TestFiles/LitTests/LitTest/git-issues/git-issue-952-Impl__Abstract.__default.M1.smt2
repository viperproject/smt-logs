(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@1) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@1) $generated@@2))
(assert (= ($generated@@28 $generated@@29) $generated@@6))
(assert (= ($generated@@28 $generated@@30) $generated@@7))
(assert (= ($generated@@28 $generated@@31) $generated@@6))
(assert (= ($generated@@28 $generated@@32) $generated@@7))
(assert (= ($generated@@9 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@37 $generated@@31)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@31)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 $generated@@31))
)))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@38 $generated@@32)  (or (= $generated@@38 $generated@@35) (= ($generated@@36 $generated@@38) $generated@@32)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@38 $generated@@32))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@42 $generated@@40 $generated@@43) ($generated@@39 $generated@@34 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@39 $generated@@34 $generated@@42 $generated@@40 $generated@@43))
 :pattern ( ($generated@@39 $generated@@34 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@44 $generated@@29 $generated@@45) ($generated@@39 $generated@@34 $generated@@44 $generated@@31 $generated@@45))
 :pattern ( ($generated@@39 $generated@@34 $generated@@44 $generated@@29 $generated@@45))
 :pattern ( ($generated@@39 $generated@@34 $generated@@44 $generated@@31 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@46 $generated@@30 $generated@@47) ($generated@@39 $generated@@34 $generated@@46 $generated@@32 $generated@@47))
 :pattern ( ($generated@@39 $generated@@34 $generated@@46 $generated@@30 $generated@@47))
 :pattern ( ($generated@@39 $generated@@34 $generated@@46 $generated@@32 $generated@@47))
)))
(assert (= ($generated@@25 $generated@@48) 0))
(assert (= ($generated@@49 $generated@@50 $generated@@8) $generated@@48))
(assert  (not ($generated@@51 $generated@@48)))
(assert (= ($generated@@25 $generated@@52) 0))
(assert (= ($generated@@49 $generated@@53 $generated@@8) $generated@@52))
(assert  (not ($generated@@51 $generated@@52)))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@9 $generated@@56) 4)) (= ($generated@@9 $generated@@57) 5)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@9 ($generated@@58 $generated@@73 $generated@@74)) 6))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@79 $generated@@41 $generated@@80)  (or (= $generated@@79 $generated@@35) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@80 $generated@@79) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@79 $generated@@41 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@81 $generated@@31 $generated@@82)  (or (= $generated@@81 $generated@@35) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@82 $generated@@81) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@81 $generated@@31 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@83 $generated@@32 $generated@@84)  (or (= $generated@@83 $generated@@35) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@84 $generated@@83) $generated@@1)))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@83 $generated@@32 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@85 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@86 $generated@@88) $generated@@1))) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@87 $generated@@88) $generated@@1))))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@87 $generated@@88) $generated@@1))
)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@54 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@54 $generated@@91 $generated@@90))
)))
(assert ($generated@@51 $generated@@1))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@93) (and (or (not (= $generated@@94 $generated@@35)) (not true)) (= ($generated@@36 $generated@@94) $generated@@31))) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@93 $generated@@94) $generated@@1)))) ($generated@@39 $generated@@11 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@93 $generated@@94) $generated@@48)) $generated $generated@@93))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@93 $generated@@94) $generated@@48)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@92 $generated@@95) (and (or (not (= $generated@@96 $generated@@35)) (not true)) (= ($generated@@36 $generated@@96) $generated@@32))) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@95 $generated@@96) $generated@@1)))) ($generated@@39 $generated@@11 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@95 $generated@@96) $generated@@52)) $generated $generated@@95))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@95 $generated@@96) $generated@@52)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@85 $generated@@97 $generated@@98) (=> ($generated@@39 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@39 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@85 $generated@@97 $generated@@98) ($generated@@39 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@14 ($generated@@102 $generated@@34 $generated@@56 $generated@@10 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@131 $generated@@134) $generated@@132)))) (= $generated@@134 $generated@@133)))
 :pattern ( ($generated@@102 $generated@@34 $generated@@56 $generated@@10 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@136 $generated@@40)  (and ($generated@@33 $generated@@34 $generated@@136 $generated@@41) (or (not (= $generated@@136 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@136 $generated@@40))
 :pattern ( ($generated@@33 $generated@@34 $generated@@136 $generated@@41))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@137 $generated@@29)  (and ($generated@@33 $generated@@34 $generated@@137 $generated@@31) (or (not (= $generated@@137 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@137 $generated@@29))
 :pattern ( ($generated@@33 $generated@@34 $generated@@137 $generated@@31))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@138 $generated@@30)  (and ($generated@@33 $generated@@34 $generated@@138 $generated@@32) (or (not (= $generated@@138 $generated@@35)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@138 $generated@@30))
 :pattern ( ($generated@@33 $generated@@34 $generated@@138 $generated@@32))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (or (not (= $generated@@139 $generated@@141)) (not true)) (=> (and ($generated@@85 $generated@@139 $generated@@140) ($generated@@85 $generated@@140 $generated@@141)) ($generated@@85 $generated@@139 $generated@@141)))
 :pattern ( ($generated@@85 $generated@@139 $generated@@140) ($generated@@85 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (and (= ($generated@@142 ($generated@@49 $generated@@143 $generated@@144)) $generated@@143) (= ($generated@@27 ($generated@@49 $generated@@143 $generated@@144)) $generated@@144))
 :pattern ( ($generated@@49 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (! ($generated@@33 $generated@@34 $generated@@145 $generated@@41)
 :pattern ( ($generated@@33 $generated@@34 $generated@@145 $generated@@41))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@54 $generated@@147 ($generated@@89 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@89 $generated@@147 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@92 $generated@@148) (and (or (not (= $generated@@149 $generated@@35)) (not true)) (= ($generated@@36 $generated@@149) $generated@@31))) ($generated@@33 $generated@@11 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@148 $generated@@149) $generated@@48)) $generated))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@148 $generated@@149) $generated@@48)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@92 $generated@@150) (and (or (not (= $generated@@151 $generated@@35)) (not true)) (= ($generated@@36 $generated@@151) $generated@@32))) ($generated@@33 $generated@@11 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@150 $generated@@151) $generated@@52)) $generated))
 :pattern ( ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@150 $generated@@151) $generated@@52)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@92 ($generated@@59 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@152 $generated@@153 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@152 $generated@@153) $generated@@154 $generated@@155))) ($generated@@85 $generated@@152 ($generated@@59 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@152 $generated@@153 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@152 $generated@@153) $generated@@154 $generated@@155))))
 :pattern ( ($generated@@59 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@152 $generated@@153 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@152 $generated@@153) $generated@@154 $generated@@155)))
)))
(assert (= ($generated@@26 $generated@@41) $generated@@3))
(assert (= ($generated@@28 $generated@@41) $generated@@5))
(assert (= ($generated@@26 $generated@@40) $generated@@4))
(assert (= ($generated@@28 $generated@@40) $generated@@5))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@39 $generated@@11 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@39 $generated@@11 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@33 $generated@@11 $generated@@158 $generated)
 :pattern ( ($generated@@33 $generated@@11 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@169  (and (=> (= (ControlFlow 0 4) (- 0 10)) (or (not (= $generated@@159 $generated@@35)) (not true))) (=> (or (not (= $generated@@159 $generated@@35)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@14 ($generated@@102 $generated@@34 $generated@@56 $generated@@10 $generated@@160 $generated@@159 $generated@@48))) (=> ($generated@@14 ($generated@@102 $generated@@34 $generated@@56 $generated@@10 $generated@@160 $generated@@159 $generated@@48)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (or (not (= $generated@@159 $generated@@35)) (not true))) (=> (or (not (= $generated@@159 $generated@@35)) (not true)) (=> (= $generated@@161 (+ ($generated@@16 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@162 $generated@@159) $generated@@48))) 1)) (=> (and (= $generated@@163 ($generated@@59 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@162 $generated@@159 ($generated@@59 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@162 $generated@@159) $generated@@48 ($generated@@89 $generated@@11 ($generated@@15 $generated@@161))))) ($generated@@92 $generated@@163)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (not (= $generated@@164 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (not (= $generated@@164 $generated@@35)) (not true))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@39 $generated@@34 $generated@@164 $generated@@30 $generated@@162)) (=> ($generated@@39 $generated@@34 $generated@@164 $generated@@30 $generated@@162) (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@16 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@163 $generated@@164) $generated@@52))) ($generated@@16 ($generated@@54 $generated@@11 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@34 ($generated@@58 $generated@@56 $generated@@57) $generated@@162 $generated@@164) $generated@@52)))))))))))))))))))
(let (($generated@@170  (=> (and (and (= $generated@@165 $generated@@164) ($generated@@33 $generated@@34 $generated@@165 $generated@@40)) (and (= $generated@@166 $generated@@165) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= $generated@@159 (let (($generated@@171 $generated@@164))
$generated@@171))) (not true)))))
(let (($generated@@172  (=> (= $generated@@160 ($generated@@103 $generated@@35 $generated@@162 $generated@@1 $generated@@159)) (and (=> (= (ControlFlow 0 11) 2) $generated@@170) (=> (= (ControlFlow 0 11) 4) $generated@@169)))))
(let (($generated@@173  (=> (and (and (and ($generated@@92 $generated@@162) ($generated@@167 $generated@@162)) (and ($generated@@33 $generated@@34 $generated@@159 $generated@@29) ($generated@@39 $generated@@34 $generated@@159 $generated@@29 $generated@@162))) (and (and ($generated@@33 $generated@@34 $generated@@164 $generated@@30) ($generated@@39 $generated@@34 $generated@@164 $generated@@30 $generated@@162)) (and (= 0 $generated@@168) (= (ControlFlow 0 12) 11)))) $generated@@172)))
$generated@@173)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
