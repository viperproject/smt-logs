(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@26 (T@U Int T@U) Bool)
(declare-fun $generated@@27 () Int)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U Int T@U) Bool)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@30) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 T@U) ) (!  (=> (or ($generated@@26 $generated@@34 $generated@@35 $generated@@36) (and (< 1 $generated@@27) (and (and (and (or (not (= $generated@@34 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@34 $generated@@31)) (<= ($generated@@32 0) $generated@@35)) ($generated@@29 $generated@@30 $generated@@36 $generated@@31)))) (=> (and (or (not (= $generated@@35 0)) (not true)) ($generated@@25 $generated@@33 $generated@@36 (- $generated@@35 1) $generated@@36)) ($generated@@25 $generated@@33 $generated@@34 (- $generated@@35 1) $generated@@36)))
 :pattern ( ($generated@@25 $generated@@33 $generated@@34 $generated@@35 $generated@@36))
)))
(assert ($generated@@37 $generated@@38))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@40 $generated@@38)  (or (= $generated@@40 $generated@@28) (= ($generated@@39 $generated@@40) $generated@@38)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@40 $generated@@38))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@41 $generated@@30 $generated@@43 $generated@@42 $generated@@44) ($generated@@41 $generated@@30 $generated@@43 $generated@@38 $generated@@44))
 :pattern ( ($generated@@41 $generated@@30 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@41 $generated@@30 $generated@@43 $generated@@38 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@41 $generated@@30 $generated@@47 $generated@@45 $generated@@48) ($generated@@41 $generated@@30 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@41 $generated@@30 $generated@@47 $generated@@45 $generated@@48))
 :pattern ( ($generated@@41 $generated@@30 $generated@@47 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@41 $generated@@30 $generated@@50 $generated@@31 $generated@@51) ($generated@@41 $generated@@30 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@41 $generated@@30 $generated@@50 $generated@@31 $generated@@51))
 :pattern ( ($generated@@41 $generated@@30 $generated@@50 $generated@@49 $generated@@51))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@9 $generated@@54) 4)) (= ($generated@@9 $generated@@55) 5)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@9 ($generated@@56 $generated@@71 $generated@@72)) 6))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@41 $generated@@30 $generated@@77 $generated@@38 $generated@@78)  (or (= $generated@@77 $generated@@28) ($generated@@14 ($generated@@52 $generated@@10 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@30 ($generated@@56 $generated@@54 $generated@@55) $generated@@78 $generated@@77) $generated)))))
 :pattern ( ($generated@@41 $generated@@30 $generated@@77 $generated@@38 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@41 $generated@@30 $generated@@79 $generated@@46 $generated@@80)  (or (= $generated@@79 $generated@@28) ($generated@@14 ($generated@@52 $generated@@10 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@30 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@79) $generated)))))
 :pattern ( ($generated@@41 $generated@@30 $generated@@79 $generated@@46 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@41 $generated@@30 $generated@@81 $generated@@49 $generated@@82)  (or (= $generated@@81 $generated@@28) ($generated@@14 ($generated@@52 $generated@@10 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@30 ($generated@@56 $generated@@54 $generated@@55) $generated@@82 $generated@@81) $generated)))))
 :pattern ( ($generated@@41 $generated@@30 $generated@@81 $generated@@49 $generated@@82))
)))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@32 $generated@@83) $generated@@83)
 :pattern ( ($generated@@32 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@52 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@52 $generated@@89 $generated@@88))
)))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 T@U) ) (!  (=> (or ($generated@@92 $generated@@94 $generated@@95 $generated@@96) (and (< 0 $generated@@27) (and (and (and (or (not (= $generated@@94 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@94 $generated@@42)) (<= ($generated@@32 0) $generated@@95)) ($generated@@29 $generated@@30 $generated@@96 $generated@@31)))) (= ($generated@@90 ($generated@@91 $generated@@93) $generated@@94 $generated@@95 $generated@@96) ($generated@@14 ($generated@@84 $generated@@10 ($generated@@13 false)))))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@93) $generated@@94 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@97 $generated@@42)  (and ($generated@@29 $generated@@30 $generated@@97 $generated@@38) (or (not (= $generated@@97 $generated@@28)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@97 $generated@@42))
 :pattern ( ($generated@@29 $generated@@30 $generated@@97 $generated@@38))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@98 $generated@@45)  (and ($generated@@29 $generated@@30 $generated@@98 $generated@@46) (or (not (= $generated@@98 $generated@@28)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@98 $generated@@45))
 :pattern ( ($generated@@29 $generated@@30 $generated@@98 $generated@@46))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@99 $generated@@31)  (and ($generated@@29 $generated@@30 $generated@@99 $generated@@49) (or (not (= $generated@@99 $generated@@28)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@99 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 $generated@@99 $generated@@49))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@41 $generated@@30 $generated@@100 $generated@@49 $generated@@101) ($generated@@41 $generated@@30 $generated@@100 $generated@@46 $generated@@101))
 :pattern ( ($generated@@41 $generated@@30 $generated@@100 $generated@@49 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@41 $generated@@30 $generated@@102 $generated@@38 $generated@@103) ($generated@@41 $generated@@30 $generated@@102 $generated@@49 $generated@@103))
 :pattern ( ($generated@@41 $generated@@30 $generated@@102 $generated@@38 $generated@@103))
)))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 Int) ($generated@@107 T@U) ) (!  (=> (or ($generated@@92 $generated@@105 $generated@@106 $generated@@107) (and (< 0 $generated@@27) (and (and (and (or (not (= $generated@@105 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@105 $generated@@42)) (<= ($generated@@32 0) $generated@@106)) ($generated@@29 $generated@@30 $generated@@107 $generated@@31)))) (=> (and (or (not (= $generated@@106 0)) (not true)) ($generated@@90 $generated@@104 $generated@@105 (- $generated@@106 1) $generated@@107)) ($generated@@90 $generated@@104 $generated@@105 (- $generated@@106 1) $generated@@107)))
 :pattern ( ($generated@@90 $generated@@104 $generated@@105 $generated@@106 $generated@@107))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 Int) ($generated@@111 T@U) ) (! (= ($generated@@90 ($generated@@91 $generated@@108) $generated@@109 $generated@@110 $generated@@111) ($generated@@90 $generated@@108 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@108) $generated@@109 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 Int) ($generated@@115 T@U) ) (! (= ($generated@@25 ($generated@@91 $generated@@112) $generated@@113 $generated@@114 $generated@@115) ($generated@@25 $generated@@112 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@25 ($generated@@91 $generated@@112) $generated@@113 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@52 $generated@@117 ($generated@@87 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@87 $generated@@117 $generated@@116))
)))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 Int) ($generated@@121 T@U) ) (!  (=> (or ($generated@@92 ($generated@@84 $generated@@30 $generated@@119) ($generated@@32 $generated@@120) ($generated@@84 $generated@@30 $generated@@121)) (and (< 0 $generated@@27) (and (and (and (or (not (= $generated@@119 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@119 $generated@@42)) (<= ($generated@@32 0) $generated@@120)) ($generated@@29 $generated@@30 $generated@@121 $generated@@31)))) (= ($generated@@90 ($generated@@91 $generated@@118) ($generated@@84 $generated@@30 $generated@@119) ($generated@@32 $generated@@120) ($generated@@84 $generated@@30 $generated@@121)) ($generated@@14 ($generated@@84 $generated@@10 ($generated@@13 false)))))
 :weight 3
 :pattern ( ($generated@@90 ($generated@@91 $generated@@118) ($generated@@84 $generated@@30 $generated@@119) ($generated@@32 $generated@@120) ($generated@@84 $generated@@30 $generated@@121)))
))))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@14 ($generated@@122 $generated@@30 $generated@@54 $generated@@10 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@14 ($generated@@52 $generated@@10 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@30 ($generated@@56 $generated@@54 $generated@@55) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@30 $generated@@54 $generated@@10 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 Int) ($generated@@159 T@U) ) (!  (=> (or ($generated@@92 $generated@@157 $generated@@158 $generated@@159) (and (< 0 $generated@@27) (and (or (not (= $generated@@157 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@157 $generated@@42)))) (= ($generated@@25 $generated@@156 $generated@@157 $generated@@158 $generated@@159) ($generated@@90 $generated@@156 $generated@@157 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@25 $generated@@156 $generated@@157 $generated@@158 $generated@@159) ($generated@@29 $generated@@30 $generated@@157 $generated@@42))
 :pattern ( ($generated@@25 $generated@@156 $generated@@157 $generated@@158 $generated@@159) ($generated@@90 $generated@@156 $generated@@157 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@160 $generated@@49) ($generated@@29 $generated@@30 $generated@@160 $generated@@46))
 :pattern ( ($generated@@29 $generated@@30 $generated@@160 $generated@@49))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@161 $generated@@38) ($generated@@29 $generated@@30 $generated@@161 $generated@@49))
 :pattern ( ($generated@@29 $generated@@30 $generated@@161 $generated@@38))
)))
(assert (= ($generated@@162 $generated@@31) $generated@@0))
(assert (= ($generated@@163 $generated@@31) $generated@@6))
(assert (= ($generated@@162 $generated@@49) $generated@@1))
(assert (= ($generated@@163 $generated@@49) $generated@@6))
(assert (= ($generated@@162 $generated@@38) $generated@@2))
(assert (= ($generated@@163 $generated@@38) $generated@@7))
(assert (= ($generated@@162 $generated@@42) $generated@@3))
(assert (= ($generated@@163 $generated@@42) $generated@@7))
(assert (= ($generated@@162 $generated@@46) $generated@@4))
(assert (= ($generated@@163 $generated@@46) $generated@@8))
(assert (= ($generated@@162 $generated@@45) $generated@@5))
(assert (= ($generated@@163 $generated@@45) $generated@@8))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@165 $generated@@46)  (or (= $generated@@165 $generated@@28) ($generated@@164 ($generated@@39 $generated@@165))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@165 $generated@@46))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@166 $generated@@49)  (or (= $generated@@166 $generated@@28) ($generated@@37 ($generated@@39 $generated@@166))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@166 $generated@@49))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@87 $generated@@11 ($generated@@15 ($generated@@32 $generated@@167))) ($generated@@84 $generated@@55 ($generated@@87 $generated@@11 ($generated@@15 $generated@@167))))
 :pattern ( ($generated@@87 $generated@@11 ($generated@@15 ($generated@@32 $generated@@167))))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@87 $generated@@169 ($generated@@84 $generated@@169 $generated@@168)) ($generated@@84 $generated@@55 ($generated@@87 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@87 $generated@@169 ($generated@@84 $generated@@169 $generated@@168)))
)))
(assert  (=> (<= 0 $generated@@27) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 T@U) ) (!  (=> (or ($generated@@92 $generated@@171 ($generated@@32 $generated@@172) ($generated@@84 $generated@@30 $generated@@173)) (and (< 0 $generated@@27) (and (and (and (or (not (= $generated@@171 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@171 $generated@@42)) (<= ($generated@@32 0) $generated@@172)) ($generated@@29 $generated@@30 $generated@@173 $generated@@31)))) (= ($generated@@90 ($generated@@91 $generated@@170) $generated@@171 ($generated@@32 $generated@@172) ($generated@@84 $generated@@30 $generated@@173)) ($generated@@14 ($generated@@84 $generated@@10 ($generated@@13 false)))))
 :weight 3
 :pattern ( ($generated@@90 ($generated@@91 $generated@@170) $generated@@171 ($generated@@32 $generated@@172) ($generated@@84 $generated@@30 $generated@@173)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@182  (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= $generated@@174 $generated@@174) (=> (= $generated@@174 $generated@@174) (=> (or (not (= $generated@@175 $generated@@28)) (not true)) (or (not (= $generated@@175 $generated@@28)) (not true)))))) (=> (and (<= $generated@@174 $generated@@174) (=> (= $generated@@174 $generated@@174) (=> (or (not (= $generated@@175 $generated@@28)) (not true)) (or (not (= $generated@@175 $generated@@28)) (not true))))) (=> (= $generated@@176 ($generated@@123 $generated@@28 $generated@@177 $generated false)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@183 T@U) ($generated@@184 T@U) ) true)) (=> (forall (($generated@@185 T@U) ($generated@@186 T@U) ) true) (=> (and (and (and (=> (and (or (not (= $generated@@174 0)) (not true)) ($generated@@90 ($generated@@91 $generated@@178) $generated@@179 (- $generated@@174 1) $generated@@175)) ($generated@@90 ($generated@@91 $generated@@178) $generated@@179 (- $generated@@174 1) $generated@@175)) (= (ControlFlow 0 2) (- 0 1))) (and (or (not (= $generated@@174 0)) (not true)) ($generated@@25 ($generated@@91 $generated@@178) $generated@@175 (- $generated@@174 1) $generated@@175))) ($generated@@92 $generated@@179 (- $generated@@174 1) $generated@@175)) (or ($generated@@90 ($generated@@91 $generated@@178) $generated@@179 (- $generated@@174 1) $generated@@175) ($generated@@14 ($generated@@84 $generated@@10 ($generated@@13 false))))))))))))
(let (($generated@@187  (=> (and (and (and ($generated@@180 $generated@@177) ($generated@@181 $generated@@177)) (and (or (not (= $generated@@179 $generated@@28)) (not true)) (and ($generated@@29 $generated@@30 $generated@@179 $generated@@42) ($generated@@41 $generated@@30 $generated@@179 $generated@@42 $generated@@177)))) (and (and (<= ($generated@@32 0) $generated@@174) ($generated@@29 $generated@@30 $generated@@175 $generated@@31)) (and (= 0 $generated@@27) (= (ControlFlow 0 5) 2)))) $generated@@182)))
$generated@@187)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
