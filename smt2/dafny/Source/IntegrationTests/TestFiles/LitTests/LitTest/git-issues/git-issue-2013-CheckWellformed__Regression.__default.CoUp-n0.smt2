(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@30 (Int) Int)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@57 (T@U Int Bool) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@62 () Int)
(declare-fun $generated@@63 (Int Bool) Bool)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@88 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@92 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@1))
(assert (= ($generated@@23 $generated@@0) $generated@@2))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@29 ($generated@@27 $generated@@28)) ($generated@@24 $generated@@29))
 :pattern ( ($generated@@24 $generated@@29) ($generated@@25 $generated@@26 $generated@@29 ($generated@@27 $generated@@28)))
)))
(assert (forall (($generated@@31 Int) ) (! (= ($generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@35 $generated@@38 $generated@@39) ($generated@@27 $generated@@37))  (and ($generated@@36 $generated@@38 $generated@@37) ($generated@@25 $generated@@26 $generated@@39 ($generated@@27 $generated@@37))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@35 $generated@@38 $generated@@39) ($generated@@27 $generated@@37)))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@24 $generated@@41) (= ($generated@@40 $generated@@41) $generated@@5))
 :pattern ( ($generated@@24 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@42 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@42 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (!  (=> ($generated@@24 $generated@@46) (exists (($generated@@47 T@U) ($generated@@48 T@U) ) (= $generated@@46 ($generated@@35 $generated@@47 $generated@@48))))
 :pattern ( ($generated@@24 $generated@@46))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@49 ($generated@@43 $generated@@54 $generated@@51) $generated@@52 $generated@@53) ($generated@@50 $generated@@54 $generated@@51 $generated@@52 $generated@@53))
 :pattern ( ($generated@@49 ($generated@@43 $generated@@54 $generated@@51) $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ) (!  (and (= ($generated@@23 ($generated@@27 $generated@@56)) $generated@@4) (= ($generated@@55 ($generated@@27 $generated@@56)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 Int) ($generated@@61 Bool) ) (! (= ($generated@@57 ($generated@@58 $generated@@59) $generated@@60 $generated@@61) ($generated@@57 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@59) $generated@@60 $generated@@61))
)))
(assert  (=> (<= 0 $generated@@62) (forall (($generated@@64 T@U) ($generated@@65 Int) ($generated@@66 Bool) ) (!  (=> (or ($generated@@63 $generated@@65 $generated@@66) (< 0 $generated@@62)) (and (and (=> $generated@@66 ($generated@@63 $generated@@65 ($generated@@12 ($generated@@32 $generated@@8 ($generated@@11 false))))) (=> (not $generated@@66) ($generated@@63 (+ $generated@@65 1) ($generated@@12 ($generated@@32 $generated@@8 ($generated@@11 true)))))) (= ($generated@@57 ($generated@@58 $generated@@64) $generated@@65 $generated@@66) (ite $generated@@66 ($generated@@57 $generated@@64 $generated@@65 ($generated@@12 ($generated@@32 $generated@@8 ($generated@@11 false)))) ($generated@@35 ($generated@@43 $generated@@9 ($generated@@13 $generated@@65)) ($generated@@57 $generated@@64 (+ $generated@@65 1) ($generated@@12 ($generated@@32 $generated@@8 ($generated@@11 true)))))))))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@64) $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@36 $generated@@67 $generated@@0) (and (= ($generated@@43 $generated@@9 ($generated@@42 $generated@@9 $generated@@67)) $generated@@67) ($generated@@25 $generated@@9 ($generated@@42 $generated@@9 $generated@@67) $generated@@0)))
 :pattern ( ($generated@@36 $generated@@67 $generated@@0))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@36 $generated@@68 $generated) (and (= ($generated@@43 $generated@@8 ($generated@@42 $generated@@8 $generated@@68)) $generated@@68) ($generated@@25 $generated@@8 ($generated@@42 $generated@@8 $generated@@68) $generated)))
 :pattern ( ($generated@@36 $generated@@68 $generated))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@36 ($generated@@43 $generated@@71 $generated@@69) $generated@@70) ($generated@@25 $generated@@71 $generated@@69 $generated@@70))
 :pattern ( ($generated@@36 ($generated@@43 $generated@@71 $generated@@69) $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@40 ($generated@@35 $generated@@72 $generated@@73)) $generated@@5)
 :pattern ( ($generated@@35 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@74 ($generated@@35 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@35 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 ($generated@@35 $generated@@78 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@35 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 ($generated@@27 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@27 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@42 $generated@@83 ($generated@@43 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@43 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and ($generated@@84 $generated@@87) (and ($generated@@24 $generated@@85) ($generated@@50 $generated@@26 $generated@@85 ($generated@@27 $generated@@86) $generated@@87))) ($generated@@49 ($generated@@74 $generated@@85) $generated@@86 $generated@@87))
 :pattern ( ($generated@@49 ($generated@@74 $generated@@85) $generated@@86 $generated@@87))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@88 $generated@@99 $generated@@100 $generated@@101 ($generated@@95 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@104 $generated@@105) $generated@@102)
 :weight 0
)) (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@88 $generated@@106 $generated@@107 $generated@@108 ($generated@@95 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@113 $generated@@114) ($generated@@88 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@113 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@88 $generated@@115 $generated@@116 $generated@@117 ($generated@@95 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@88 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)))) (= ($generated@@7 $generated@@89) 4)) (= ($generated@@7 $generated@@90) 5)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@92 $generated@@124 $generated@@125 ($generated@@96 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@126) $generated@@128) $generated@@126)
 :weight 0
))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@92 $generated@@129 $generated@@130 ($generated@@96 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@92 $generated@@129 $generated@@130 $generated@@132 $generated@@134)))
 :weight 0
))) (= ($generated@@7 $generated@@93) 6)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (= ($generated@@7 ($generated@@94 $generated@@135 $generated@@136)) 7))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@94 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@139 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@94 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 Bool) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@12 ($generated@@88 $generated@@89 $generated@@90 $generated@@8 ($generated@@91 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))  (=> (and (or (not (= $generated@@145 $generated@@141)) (not true)) ($generated@@12 ($generated@@42 $generated@@8 ($generated@@92 $generated@@90 $generated@@93 ($generated@@92 $generated@@89 ($generated@@94 $generated@@90 $generated@@93) $generated@@142 $generated@@145) $generated@@143)))) $generated@@144))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90 $generated@@8 ($generated@@91 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@36 $generated@@148 ($generated@@27 $generated@@147)) (and (= ($generated@@43 $generated@@26 ($generated@@42 $generated@@26 $generated@@148)) $generated@@148) ($generated@@25 $generated@@26 ($generated@@42 $generated@@26 $generated@@148) ($generated@@27 $generated@@147))))
 :pattern ( ($generated@@36 $generated@@148 ($generated@@27 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@84 $generated@@151) (and ($generated@@24 $generated@@149) ($generated@@50 $generated@@26 $generated@@149 ($generated@@27 $generated@@150) $generated@@151))) ($generated@@50 $generated@@26 ($generated@@77 $generated@@149) ($generated@@27 $generated@@150) $generated@@151))
 :pattern ( ($generated@@50 $generated@@26 ($generated@@77 $generated@@149) ($generated@@27 $generated@@150) $generated@@151))
)))
(assert  (=> (<= 0 $generated@@62) (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 Bool) ) (!  (=> (or ($generated@@63 $generated@@153 $generated@@154) (< 0 $generated@@62)) ($generated@@25 $generated@@26 ($generated@@57 $generated@@152 $generated@@153 $generated@@154) ($generated@@27 $generated@@0)))
 :pattern ( ($generated@@57 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@43 $generated@@9 ($generated@@13 ($generated@@30 $generated@@155))) ($generated@@32 $generated@@93 ($generated@@43 $generated@@9 ($generated@@13 $generated@@155))))
 :pattern ( ($generated@@43 $generated@@9 ($generated@@13 ($generated@@30 $generated@@155))))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@43 $generated@@157 ($generated@@32 $generated@@157 $generated@@156)) ($generated@@32 $generated@@93 ($generated@@43 $generated@@157 $generated@@156)))
 :pattern ( ($generated@@43 $generated@@157 ($generated@@32 $generated@@157 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! ($generated@@50 $generated@@9 $generated@@159 $generated@@0 $generated@@158)
 :pattern ( ($generated@@50 $generated@@9 $generated@@159 $generated@@0 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! ($generated@@50 $generated@@8 $generated@@161 $generated $generated@@160)
 :pattern ( ($generated@@50 $generated@@8 $generated@@161 $generated $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@84 $generated@@165) (= ($generated@@50 $generated@@26 ($generated@@35 $generated@@163 $generated@@164) ($generated@@27 $generated@@162) $generated@@165)  (and ($generated@@49 $generated@@163 $generated@@162 $generated@@165) ($generated@@50 $generated@@26 $generated@@164 ($generated@@27 $generated@@162) $generated@@165))))
 :pattern ( ($generated@@50 $generated@@26 ($generated@@35 $generated@@163 $generated@@164) ($generated@@27 $generated@@162) $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (! ($generated@@25 $generated@@9 $generated@@166 $generated@@0)
 :pattern ( ($generated@@25 $generated@@9 $generated@@166 $generated@@0))
)))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@25 $generated@@8 $generated@@167 $generated)
 :pattern ( ($generated@@25 $generated@@8 $generated@@167 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@175 true))
(let (($generated@@176  (=> (and (and $generated@@168 ($generated@@50 $generated@@9 ($generated@@13 $generated@@169) $generated@@0 $generated@@170)) (and (= $generated@@171 ($generated@@12 ($generated@@32 $generated@@8 ($generated@@11 false)))) ($generated@@50 $generated@@8 ($generated@@11 $generated@@171) $generated $generated@@170))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 ($generated@@30 1)) (= ($generated@@30 1) ($generated@@30 1)))) (=> (or (<= 0 ($generated@@30 1)) (= ($generated@@30 1) ($generated@@30 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (or (<= 0 $generated@@169) (< ($generated@@30 1) ($generated@@30 1))) (= $generated@@169 $generated@@169))) (=> (or (or (<= 0 $generated@@169) (< ($generated@@30 1) ($generated@@30 1))) (= $generated@@169 $generated@@169)) (=> (= (ControlFlow 0 3) (- 0 2)) (or (< ($generated@@30 1) ($generated@@30 1)) (and (= ($generated@@30 1) ($generated@@30 1)) (or (< $generated@@169 $generated@@169) (and (= $generated@@169 $generated@@169) (and (not $generated@@171) $generated@@168)))))))))))))
(let (($generated@@177 true))
(let (($generated@@178  (=> (= $generated@@172 ($generated@@91 $generated@@173 $generated@@170 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@177) (=> (= (ControlFlow 0 7) 3) $generated@@176)) (=> (= (ControlFlow 0 7) 6) $generated@@175)))))
(let (($generated@@179  (=> (and (and ($generated@@84 $generated@@170) ($generated@@174 $generated@@170)) (and (= 0 $generated@@62) (= (ControlFlow 0 8) 7))) $generated@@178)))
$generated@@179))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
