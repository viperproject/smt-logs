(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U) Bool)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@35 (T@U Int) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 () Int)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@144 (T@U T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@20) 3))
(assert (forall (($generated@@27 T@U) ) (! (= ($generated@@19 $generated@@20 $generated@@27 $generated@@21)  (and ($generated@@19 $generated@@20 $generated@@27 ($generated@@22 $generated@@23)) ($generated@@24 ($generated@@25 $generated@@26) $generated@@27)))
 :pattern ( ($generated@@19 $generated@@20 $generated@@27 $generated@@21))
)))
(assert ($generated@@28 $generated@@23))
(assert (= ($generated@@29 $generated@@30) 0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@31 $generated@@20 $generated@@32 $generated@@21 $generated@@33) ($generated@@31 $generated@@20 $generated@@32 ($generated@@22 $generated@@23) $generated@@33))
 :pattern ( ($generated@@31 $generated@@20 $generated@@32 $generated@@21 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ($generated@@38 Int) ) (!  (=> (and (and (<= 0 $generated@@38) (< $generated@@38 $generated@@37)) (< $generated@@38 ($generated@@29 $generated@@36))) (= ($generated@@34 ($generated@@35 $generated@@36 $generated@@37) $generated@@38) ($generated@@34 $generated@@36 $generated@@38)))
 :weight 25
 :pattern ( ($generated@@34 ($generated@@35 $generated@@36 $generated@@37) $generated@@38))
 :pattern ( ($generated@@34 $generated@@36 $generated@@38) ($generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@41)  (and (= ($generated@@29 $generated@@40) ($generated@@29 $generated@@41)) (forall (($generated@@42 Int) ) (!  (=> (and (<= 0 $generated@@42) (< $generated@@42 ($generated@@29 $generated@@40))) (= ($generated@@34 $generated@@40 $generated@@42) ($generated@@34 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@34 $generated@@40 $generated@@42))
 :pattern ( ($generated@@34 $generated@@41 $generated@@42))
))))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 ($generated@@43 $generated@@46 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@43 $generated@@46 $generated@@45))
)))
(assert  (=> (<= 1 $generated@@47) (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@48 $generated@@50) (and (< 1 $generated@@47) ($generated@@19 $generated@@20 $generated@@50 ($generated@@22 $generated@@23)))) (=> ($generated@@24 $generated@@49 $generated@@50) (and (> ($generated@@29 $generated@@50) 0) (forall (($generated@@51 Int) ) (!  (=> (and (< 0 $generated@@51) (< $generated@@51 ($generated@@29 $generated@@50))) (not ($generated@@24 $generated@@49 ($generated@@35 $generated@@50 $generated@@51))))
 :pattern ( ($generated@@35 $generated@@50 $generated@@51))
)))))
 :pattern ( ($generated@@24 $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@52 ($generated@@44 $generated@@56 $generated@@53) $generated@@54 $generated@@55) ($generated@@31 $generated@@56 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@52 ($generated@@44 $generated@@56 $generated@@53) $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@57 $generated@@58 $generated@@21) (and (= ($generated@@44 $generated@@20 ($generated@@43 $generated@@20 $generated@@58)) $generated@@58) ($generated@@19 $generated@@20 ($generated@@43 $generated@@20 $generated@@58) $generated@@21)))
 :pattern ( ($generated@@57 $generated@@58 $generated@@21))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@39 $generated@@59 $generated@@60) (= $generated@@59 $generated@@60))
 :pattern ( ($generated@@39 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 Int) ) (!  (=> (and (<= 0 $generated@@62) (<= $generated@@62 ($generated@@29 $generated@@61))) (= ($generated@@29 ($generated@@35 $generated@@61 $generated@@62)) $generated@@62))
 :pattern ( ($generated@@29 ($generated@@35 $generated@@61 $generated@@62)))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@63) $generated@@64) ($generated@@24 $generated@@63 $generated@@64))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@63) $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@57 ($generated@@44 $generated@@67 $generated@@65) $generated@@66) ($generated@@19 $generated@@67 $generated@@65 $generated@@66))
 :pattern ( ($generated@@57 ($generated@@44 $generated@@67 $generated@@65) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (<= 0 ($generated@@29 $generated@@68))
 :pattern ( ($generated@@29 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@28 $generated@@69) (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@57 $generated@@71 $generated@@69) ($generated@@52 $generated@@71 $generated@@69 $generated@@70))
 :pattern ( ($generated@@52 $generated@@71 $generated@@69 $generated@@70))
)))
 :pattern ( ($generated@@28 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@31 $generated@@20 $generated@@72 ($generated@@22 $generated@@73) $generated@@74) (forall (($generated@@75 Int) ) (!  (=> (and (<= 0 $generated@@75) (< $generated@@75 ($generated@@29 $generated@@72))) ($generated@@52 ($generated@@34 $generated@@72 $generated@@75) $generated@@73 $generated@@74))
 :pattern ( ($generated@@34 $generated@@72 $generated@@75))
)))
 :pattern ( ($generated@@31 $generated@@20 $generated@@72 ($generated@@22 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 ($generated@@22 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@22 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 ($generated@@22 $generated@@79)) $generated)
 :pattern ( ($generated@@22 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@43 $generated@@81 ($generated@@44 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@44 $generated@@81 $generated@@80))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@82 $generated@@93 $generated@@94 $generated@@95 ($generated@@89 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@98 $generated@@99) $generated@@96)
 :weight 0
)) (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@82 $generated@@100 $generated@@101 $generated@@102 ($generated@@89 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@82 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@82 $generated@@109 $generated@@110 $generated@@111 ($generated@@89 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@82 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)))) (= ($generated@@3 $generated@@83) 4)) (= ($generated@@3 $generated@@84) 5)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@86 $generated@@118 $generated@@119 ($generated@@90 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@120) $generated@@122) $generated@@120)
 :weight 0
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@86 $generated@@123 $generated@@124 ($generated@@90 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@86 $generated@@123 $generated@@124 $generated@@126 $generated@@128)))
 :weight 0
))) (= ($generated@@3 $generated@@87) 6)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (= ($generated@@3 ($generated@@88 $generated@@129 $generated@@130)) 7))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@88 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@88 $generated@@133 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@8 ($generated@@82 $generated@@83 $generated@@84 $generated@@4 ($generated@@85 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@8 ($generated@@43 $generated@@4 ($generated@@86 $generated@@84 $generated@@87 ($generated@@86 $generated@@83 ($generated@@88 $generated@@84 $generated@@87) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84 $generated@@4 ($generated@@85 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@57 $generated@@141 ($generated@@22 $generated@@142)) (and (= ($generated@@44 $generated@@20 ($generated@@43 $generated@@20 $generated@@141)) $generated@@141) ($generated@@19 $generated@@20 ($generated@@43 $generated@@20 $generated@@141) ($generated@@22 $generated@@142))))
 :pattern ( ($generated@@57 $generated@@141 ($generated@@22 $generated@@142)))
)))
(assert (= ($generated@@78 $generated@@21) $generated@@1))
(assert (= ($generated@@143 $generated@@21) $generated@@2))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Int) ) (! (= ($generated@@144 $generated@@145 $generated@@146 $generated@@147) (forall (($generated@@148 Int) ) (!  (=> (and (<= 0 $generated@@148) (< $generated@@148 $generated@@147)) (= ($generated@@34 $generated@@145 $generated@@148) ($generated@@34 $generated@@146 $generated@@148)))
 :pattern ( ($generated@@34 $generated@@145 $generated@@148))
 :pattern ( ($generated@@34 $generated@@146 $generated@@148))
)))
 :pattern ( ($generated@@144 $generated@@145 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> (= ($generated@@29 $generated@@149) 0) (= $generated@@149 $generated@@30))
 :pattern ( ($generated@@29 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 Int) ) (!  (=> (= $generated@@151 0) (= ($generated@@35 $generated@@150 $generated@@151) $generated@@30))
 :pattern ( ($generated@@35 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@19 $generated@@20 $generated@@152 ($generated@@22 $generated@@153)) (forall (($generated@@154 Int) ) (!  (=> (and (<= 0 $generated@@154) (< $generated@@154 ($generated@@29 $generated@@152))) ($generated@@57 ($generated@@34 $generated@@152 $generated@@154) $generated@@153))
 :pattern ( ($generated@@34 $generated@@152 $generated@@154))
)))
 :pattern ( ($generated@@19 $generated@@20 $generated@@152 ($generated@@22 $generated@@153)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@166  (=> (= (ControlFlow 0 12) (- 0 11)) ($generated@@39 $generated@@155 $generated@@156))))
(let (($generated@@167  (=> (and (not (and (< ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)) ($generated@@144 $generated@@155 $generated@@156 ($generated@@29 $generated@@155)))) (= (ControlFlow 0 15) 12)) $generated@@166)))
(let (($generated@@168  (=> (and (< ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)) ($generated@@144 $generated@@155 $generated@@156 ($generated@@29 $generated@@155))) (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@39 $generated@@155 $generated@@157)) (=> ($generated@@39 $generated@@155 $generated@@157) (=> (= (ControlFlow 0 13) 12) $generated@@166))))))
(let (($generated@@169  (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 ($generated@@29 $generated@@155)) (<= ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)))) (=> (and (<= 0 ($generated@@29 $generated@@155)) (<= ($generated@@29 $generated@@155) ($generated@@29 $generated@@156))) (=> (= $generated@@157 ($generated@@35 $generated@@156 ($generated@@29 $generated@@155))) (and (=> (= (ControlFlow 0 16) 13) $generated@@168) (=> (= (ControlFlow 0 16) 15) $generated@@167)))))))
(let (($generated@@170  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@39 $generated@@155 $generated@@156))))
(let (($generated@@171  (=> (and ($generated@@39 $generated@@155 $generated@@156) (= (ControlFlow 0 10) 2)) $generated@@170)))
(let (($generated@@172  (=> (>= ($generated@@29 $generated@@156) ($generated@@29 $generated@@155)) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)) ($generated@@144 $generated@@155 $generated@@156 ($generated@@29 $generated@@155)))) (=> (and (<= ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)) ($generated@@144 $generated@@155 $generated@@156 ($generated@@29 $generated@@155))) (and (=> (= (ControlFlow 0 18) 16) $generated@@169) (=> (= (ControlFlow 0 18) 10) $generated@@171)))))))
(let (($generated@@173  (=> (> ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)) (and (=> (= (ControlFlow 0 3) (- 0 9)) (or (<= 0 ($generated@@29 $generated@@158)) (= ($generated@@29 $generated@@158) ($generated@@29 $generated@@158)))) (=> (or (<= 0 ($generated@@29 $generated@@158)) (= ($generated@@29 $generated@@158) ($generated@@29 $generated@@158))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (or (or (<= 0 ($generated@@29 $generated@@155)) (< ($generated@@29 $generated@@158) ($generated@@29 $generated@@158))) (= ($generated@@29 $generated@@156) ($generated@@29 $generated@@155)))) (=> (or (or (<= 0 ($generated@@29 $generated@@155)) (< ($generated@@29 $generated@@158) ($generated@@29 $generated@@158))) (= ($generated@@29 $generated@@156) ($generated@@29 $generated@@155))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (or (or (<= 0 ($generated@@29 $generated@@156)) (< ($generated@@29 $generated@@158) ($generated@@29 $generated@@158))) (< ($generated@@29 $generated@@156) ($generated@@29 $generated@@155))) (= ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)))) (=> (or (or (or (<= 0 ($generated@@29 $generated@@156)) (< ($generated@@29 $generated@@158) ($generated@@29 $generated@@158))) (< ($generated@@29 $generated@@156) ($generated@@29 $generated@@155))) (= ($generated@@29 $generated@@155) ($generated@@29 $generated@@156))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (< ($generated@@29 $generated@@158) ($generated@@29 $generated@@158)) (and (= ($generated@@29 $generated@@158) ($generated@@29 $generated@@158)) (or (< ($generated@@29 $generated@@156) ($generated@@29 $generated@@155)) (and (= ($generated@@29 $generated@@156) ($generated@@29 $generated@@155)) (< ($generated@@29 $generated@@155) ($generated@@29 $generated@@156))))))) (=> (or (< ($generated@@29 $generated@@158) ($generated@@29 $generated@@158)) (and (= ($generated@@29 $generated@@158) ($generated@@29 $generated@@158)) (or (< ($generated@@29 $generated@@156) ($generated@@29 $generated@@155)) (and (= ($generated@@29 $generated@@156) ($generated@@29 $generated@@155)) (< ($generated@@29 $generated@@155) ($generated@@29 $generated@@156)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= ($generated@@29 $generated@@156) ($generated@@29 $generated@@158)) ($generated@@144 $generated@@156 $generated@@158 ($generated@@29 $generated@@156)))) (=> (and (<= ($generated@@29 $generated@@156) ($generated@@29 $generated@@158)) ($generated@@144 $generated@@156 $generated@@158 ($generated@@29 $generated@@156))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@29 $generated@@155) ($generated@@29 $generated@@158)) ($generated@@144 $generated@@155 $generated@@158 ($generated@@29 $generated@@155)))) (=> (and (<= ($generated@@29 $generated@@155) ($generated@@29 $generated@@158)) ($generated@@144 $generated@@155 $generated@@158 ($generated@@29 $generated@@155))) (=> (and (and (and ($generated@@159 $generated@@160) ($generated@@161 $generated@@160)) ($generated@@39 $generated@@156 $generated@@155)) (and (= $generated@@162 $generated@@160) (= (ControlFlow 0 3) 2))) $generated@@170))))))))))))))))
(let (($generated@@174  (=> (= $generated@@163 ($generated@@85 $generated@@164 $generated@@162 $generated@@0 false)) (and (=> (= (ControlFlow 0 20) 3) $generated@@173) (=> (= (ControlFlow 0 20) 18) $generated@@172)))))
(let (($generated@@175  (=> (and (and (and ($generated@@159 $generated@@162) ($generated@@161 $generated@@162)) (and ($generated@@19 $generated@@20 $generated@@158 ($generated@@22 $generated@@23)) ($generated@@31 $generated@@20 $generated@@158 ($generated@@22 $generated@@23) $generated@@162))) (and (and ($generated@@19 $generated@@20 $generated@@155 $generated@@21) ($generated@@31 $generated@@20 $generated@@155 $generated@@21 $generated@@162)) (and ($generated@@19 $generated@@20 $generated@@156 $generated@@21) ($generated@@31 $generated@@20 $generated@@156 $generated@@21 $generated@@162)))) (=> (and (and (and (and (and ($generated@@19 $generated@@20 $generated@@165 ($generated@@22 $generated@@23)) ($generated@@31 $generated@@20 $generated@@165 ($generated@@22 $generated@@23) $generated@@162)) true) (= 3 $generated@@47)) (and (<= ($generated@@29 $generated@@155) ($generated@@29 $generated@@158)) ($generated@@144 $generated@@155 $generated@@158 ($generated@@29 $generated@@155)))) (and (and (<= ($generated@@29 $generated@@156) ($generated@@29 $generated@@158)) ($generated@@144 $generated@@156 $generated@@158 ($generated@@29 $generated@@156))) (= (ControlFlow 0 21) 20))) $generated@@174))))
$generated@@175)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
