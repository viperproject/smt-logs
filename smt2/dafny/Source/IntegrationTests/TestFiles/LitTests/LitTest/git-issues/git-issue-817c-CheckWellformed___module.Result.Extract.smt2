(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T) T@T)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert  (and (= ($generated@@7 $generated@@26) 3) (= ($generated@@7 $generated@@31) 4)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (or ($generated@@27 $generated@@33 ($generated@@25 $generated@@26 $generated@@34)) (and (< 1 $generated@@23) (and ($generated@@28 $generated@@26 $generated@@34 ($generated@@29 $generated@@33)) (not ($generated@@12 ($generated@@25 $generated@@8 ($generated@@11 ($generated@@30 $generated@@33 ($generated@@25 $generated@@26 $generated@@34))))))))) (= ($generated@@24 $generated@@33 ($generated@@25 $generated@@26 $generated@@34)) ($generated@@25 $generated@@31 ($generated@@32 ($generated@@25 $generated@@26 $generated@@34)))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@33 ($generated@@25 $generated@@26 $generated@@34)))
))))
(assert (= ($generated@@35 $generated) $generated@@0))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (and (<= 0 $generated@@42) (< $generated@@42 ($generated@@38 $generated@@41))) (< ($generated@@39 ($generated@@40 $generated@@26 ($generated@@36 $generated@@41 $generated@@42))) ($generated@@39 ($generated@@37 $generated@@41))))
 :pattern ( ($generated@@36 $generated@@41 $generated@@42) ($generated@@37 $generated@@41))
)))
(assert (= ($generated@@38 $generated@@43) 0))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@44 $generated@@46 ($generated@@25 $generated@@26 $generated@@47)) (and (< 0 $generated@@23) ($generated@@28 $generated@@26 $generated@@47 ($generated@@29 $generated@@46)))) (= ($generated@@30 $generated@@46 ($generated@@25 $generated@@26 $generated@@47)) ($generated@@12 ($generated@@25 $generated@@8 ($generated@@11 ($generated@@45 ($generated@@25 $generated@@26 $generated@@47)))))))
 :weight 3
 :pattern ( ($generated@@30 $generated@@46 ($generated@@25 $generated@@26 $generated@@47)))
))))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@25 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@25 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@45 $generated@@51) (= ($generated@@50 $generated@@51) $generated@@4))
 :pattern ( ($generated@@45 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 $generated@@53) (= ($generated@@50 $generated@@53) $generated@@5))
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@40 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@40 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@45 $generated@@57) (exists (($generated@@58 T@U) ) (= $generated@@57 ($generated@@37 $generated@@58))))
 :pattern ( ($generated@@45 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@52 $generated@@60) (exists (($generated@@61 T@U) ) (= $generated@@60 ($generated@@59 $generated@@61))))
 :pattern ( ($generated@@52 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@62 ($generated@@54 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@63 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@62 ($generated@@54 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (and (= ($generated@@35 ($generated@@29 $generated@@69)) $generated@@3) (= ($generated@@68 ($generated@@29 $generated@@69)) $generated@@6))
 :pattern ( ($generated@@29 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@70 $generated@@73) (= ($generated@@63 $generated@@26 ($generated@@59 $generated@@72) ($generated@@29 $generated@@71) $generated@@73) ($generated@@62 $generated@@72 $generated@@71 $generated@@73)))
 :pattern ( ($generated@@63 $generated@@26 ($generated@@59 $generated@@72) ($generated@@29 $generated@@71) $generated@@73))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@27 $generated@@74 $generated@@75) (and (< 1 $generated@@23) (and ($generated@@28 $generated@@26 $generated@@75 ($generated@@29 $generated@@74)) (not ($generated@@30 $generated@@74 $generated@@75))))) (= ($generated@@24 $generated@@74 $generated@@75) ($generated@@32 $generated@@75)))
 :pattern ( ($generated@@24 $generated@@74 $generated@@75))
))))
(assert (= ($generated@@7 $generated@@76) 5))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@70 $generated@@80) (and ($generated@@45 $generated@@79) (exists (($generated@@81 T@U) ) (! ($generated@@63 $generated@@26 $generated@@79 ($generated@@29 $generated@@81) $generated@@80)
 :pattern ( ($generated@@63 $generated@@26 $generated@@79 ($generated@@29 $generated@@81) $generated@@80))
)))) ($generated@@63 $generated@@76 ($generated@@77 $generated@@79) ($generated@@78 $generated) $generated@@80))
 :pattern ( ($generated@@63 $generated@@76 ($generated@@77 $generated@@79) ($generated@@78 $generated) $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@70 $generated@@84) (= ($generated@@63 $generated@@26 ($generated@@37 $generated@@83) ($generated@@29 $generated@@82) $generated@@84) ($generated@@63 $generated@@76 $generated@@83 ($generated@@78 $generated) $generated@@84)))
 :pattern ( ($generated@@63 $generated@@26 ($generated@@37 $generated@@83) ($generated@@29 $generated@@82) $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@28 $generated@@26 $generated@@86 ($generated@@29 $generated@@85)) (or ($generated@@45 $generated@@86) ($generated@@52 $generated@@86)))
 :pattern ( ($generated@@52 $generated@@86) ($generated@@28 $generated@@26 $generated@@86 ($generated@@29 $generated@@85)))
 :pattern ( ($generated@@45 $generated@@86) ($generated@@28 $generated@@26 $generated@@86 ($generated@@29 $generated@@85)))
)))
(assert (= ($generated@@7 $generated@@88) 6))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@89 $generated) (and (= ($generated@@54 $generated@@88 ($generated@@40 $generated@@88 $generated@@89)) $generated@@89) ($generated@@28 $generated@@88 ($generated@@40 $generated@@88 $generated@@89) $generated)))
 :pattern ( ($generated@@87 $generated@@89 $generated))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@87 ($generated@@54 $generated@@92 $generated@@90) $generated@@91) ($generated@@28 $generated@@92 $generated@@90 $generated@@91))
 :pattern ( ($generated@@87 ($generated@@54 $generated@@92 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (<= 0 ($generated@@38 $generated@@93))
 :pattern ( ($generated@@38 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@63 $generated@@76 $generated@@94 ($generated@@78 $generated@@95) $generated@@96) (forall (($generated@@97 Int) ) (!  (=> (and (<= 0 $generated@@97) (< $generated@@97 ($generated@@38 $generated@@94))) ($generated@@62 ($generated@@36 $generated@@94 $generated@@97) $generated@@95 $generated@@96))
 :pattern ( ($generated@@36 $generated@@94 $generated@@97))
)))
 :pattern ( ($generated@@63 $generated@@76 $generated@@94 ($generated@@78 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@78 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@78 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@35 ($generated@@78 $generated@@100)) $generated@@1)
 :pattern ( ($generated@@78 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 ($generated@@29 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@29 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@50 ($generated@@37 $generated@@103)) $generated@@4)
 :pattern ( ($generated@@37 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@77 ($generated@@37 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@37 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@50 ($generated@@59 $generated@@105)) $generated@@5)
 :pattern ( ($generated@@59 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@32 ($generated@@59 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@59 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@40 $generated@@108 ($generated@@54 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@54 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@28 $generated@@26 ($generated@@59 $generated@@110) ($generated@@29 $generated@@109)) ($generated@@87 $generated@@110 $generated@@109))
 :pattern ( ($generated@@28 $generated@@26 ($generated@@59 $generated@@110) ($generated@@29 $generated@@109)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@112 $generated@@113) (and (< 1 $generated@@23) (and ($generated@@63 $generated@@26 $generated@@113 ($generated@@29 $generated@@112) $generated@@111) (not ($generated@@30 $generated@@112 $generated@@113))))) ($generated@@70 $generated@@111)) ($generated@@62 ($generated@@24 $generated@@112 $generated@@113) $generated@@112 $generated@@111))
 :pattern ( ($generated@@62 ($generated@@24 $generated@@112 $generated@@113) $generated@@112 $generated@@111))
))))
(assert (forall (($generated@@115 T@U) ) (! (< ($generated@@114 $generated@@115) ($generated@@39 ($generated@@37 $generated@@115)))
 :pattern ( ($generated@@37 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (< ($generated@@116 $generated@@117) ($generated@@39 ($generated@@59 $generated@@117)))
 :pattern ( ($generated@@59 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@70 $generated@@120) (and ($generated@@52 $generated@@118) ($generated@@63 $generated@@26 $generated@@118 ($generated@@29 $generated@@119) $generated@@120))) ($generated@@62 ($generated@@32 $generated@@118) $generated@@119 $generated@@120))
 :pattern ( ($generated@@62 ($generated@@32 $generated@@118) $generated@@119 $generated@@120))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@121 $generated@@131 $generated@@132 $generated@@133 ($generated@@127 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@121 $generated@@138 $generated@@139 $generated@@140 ($generated@@127 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@121 $generated@@147 $generated@@148 $generated@@149 ($generated@@127 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@121 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))) (= ($generated@@7 $generated@@122) 7)) (= ($generated@@7 $generated@@123) 8)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@125 $generated@@156 $generated@@157 ($generated@@128 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@160) $generated@@158)
 :weight 0
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@165 $generated@@166) (= ($generated@@125 $generated@@161 $generated@@162 ($generated@@128 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@125 $generated@@161 $generated@@162 $generated@@164 $generated@@166)))
 :weight 0
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@7 ($generated@@126 $generated@@167 $generated@@168)) 9))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@129 ($generated@@126 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@126 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@130 ($generated@@126 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@126 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Bool) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@12 ($generated@@121 $generated@@122 $generated@@123 $generated@@8 ($generated@@124 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))  (=> (and (or (not (= $generated@@177 $generated@@173)) (not true)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@125 $generated@@123 $generated@@31 ($generated@@125 $generated@@122 ($generated@@126 $generated@@123 $generated@@31) $generated@@174 $generated@@177) $generated@@175)))) $generated@@176))
 :pattern ( ($generated@@121 $generated@@122 $generated@@123 $generated@@8 ($generated@@124 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@116 ($generated@@54 $generated@@26 $generated@@179)) ($generated@@39 $generated@@179))
 :pattern ( ($generated@@116 ($generated@@54 $generated@@26 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@87 $generated@@180 ($generated@@78 $generated@@181)) (and (= ($generated@@54 $generated@@76 ($generated@@40 $generated@@76 $generated@@180)) $generated@@180) ($generated@@28 $generated@@76 ($generated@@40 $generated@@76 $generated@@180) ($generated@@78 $generated@@181))))
 :pattern ( ($generated@@87 $generated@@180 ($generated@@78 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@87 $generated@@183 ($generated@@29 $generated@@182)) (and (= ($generated@@54 $generated@@26 ($generated@@40 $generated@@26 $generated@@183)) $generated@@183) ($generated@@28 $generated@@26 ($generated@@40 $generated@@26 $generated@@183) ($generated@@29 $generated@@182))))
 :pattern ( ($generated@@87 $generated@@183 ($generated@@29 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@28 $generated@@26 ($generated@@37 $generated@@185) ($generated@@29 $generated@@184)) ($generated@@28 $generated@@76 $generated@@185 ($generated@@78 $generated)))
 :pattern ( ($generated@@28 $generated@@26 ($generated@@37 $generated@@185) ($generated@@29 $generated@@184)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (or ($generated@@27 $generated@@186 $generated@@187) (and (< 1 $generated@@23) (and ($generated@@28 $generated@@26 $generated@@187 ($generated@@29 $generated@@186)) (not ($generated@@30 $generated@@186 $generated@@187))))) ($generated@@87 ($generated@@24 $generated@@186 $generated@@187) $generated@@186))
 :pattern ( ($generated@@24 $generated@@186 $generated@@187))
))))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or ($generated@@44 $generated@@188 $generated@@189) (and (< 0 $generated@@23) ($generated@@28 $generated@@26 $generated@@189 ($generated@@29 $generated@@188)))) (= ($generated@@30 $generated@@188 $generated@@189) ($generated@@45 $generated@@189)))
 :pattern ( ($generated@@30 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@37 ($generated@@25 $generated@@76 $generated@@190)) ($generated@@25 $generated@@26 ($generated@@37 $generated@@190)))
 :pattern ( ($generated@@37 ($generated@@25 $generated@@76 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@59 ($generated@@25 $generated@@31 $generated@@191)) ($generated@@25 $generated@@26 ($generated@@59 $generated@@191)))
 :pattern ( ($generated@@59 ($generated@@25 $generated@@31 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@54 $generated@@193 ($generated@@25 $generated@@193 $generated@@192)) ($generated@@25 $generated@@31 ($generated@@54 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@54 $generated@@193 ($generated@@25 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> (= ($generated@@38 $generated@@194) 0) (= $generated@@194 $generated@@43))
 :pattern ( ($generated@@38 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! ($generated@@63 $generated@@88 $generated@@196 $generated $generated@@195)
 :pattern ( ($generated@@63 $generated@@88 $generated@@196 $generated $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@28 $generated@@76 $generated@@197 ($generated@@78 $generated@@198)) (forall (($generated@@199 Int) ) (!  (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@38 $generated@@197))) ($generated@@87 ($generated@@36 $generated@@197 $generated@@199) $generated@@198))
 :pattern ( ($generated@@36 $generated@@197 $generated@@199))
)))
 :pattern ( ($generated@@28 $generated@@76 $generated@@197 ($generated@@78 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 Int) ) (!  (=> (and (<= 0 $generated@@201) (< $generated@@201 ($generated@@38 $generated@@200))) (< ($generated@@39 ($generated@@40 $generated@@26 ($generated@@36 $generated@@200 $generated@@201))) ($generated@@114 $generated@@200)))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@26 ($generated@@36 $generated@@200 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ) (! ($generated@@28 $generated@@88 $generated@@202 $generated)
 :pattern ( ($generated@@28 $generated@@88 $generated@@202 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@209  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@52 $generated@@203))))
(let (($generated@@210 true))
(let (($generated@@211  (=> (and (and (= $generated@@204 ($generated@@124 $generated@@205 $generated@@206 $generated@@2 false)) ($generated@@62 ($generated@@54 $generated@@26 $generated@@203) ($generated@@29 $generated@@207) $generated@@206)) (and ($generated@@44 $generated@@207 $generated@@203) (not ($generated@@30 $generated@@207 $generated@@203)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@210) (=> (= (ControlFlow 0 4) 3) $generated@@209)))))
(let (($generated@@212  (=> (and ($generated@@70 $generated@@206) ($generated@@208 $generated@@206)) (=> (and (and ($generated@@28 $generated@@26 $generated@@203 ($generated@@29 $generated@@207)) ($generated@@63 $generated@@26 $generated@@203 ($generated@@29 $generated@@207) $generated@@206)) (and (= 1 $generated@@23) (= (ControlFlow 0 5) 4))) $generated@@211))))
$generated@@212)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
