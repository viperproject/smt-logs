(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@52 (T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@69 (T@U) Int)
(declare-fun $generated@@74 (Int) Int)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@U T@U) Bool)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U Int) T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@U T@U) T@U)
(declare-fun $generated@@133 () Int)
(declare-fun $generated@@134 (T@U T@U T@U) Bool)
(declare-fun $generated@@135 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@153 (T@U T@U) Bool)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@198 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@200 () T@T)
(declare-fun $generated@@201 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@202 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@204 (T@T T@T) T@T)
(declare-fun $generated@@205 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@208 (T@T) T@T)
(declare-fun $generated@@257 (T@U) T@U)
(declare-fun $generated@@258 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (forall (($generated@@20 T@U) ($generated@@21 T@U) ) (! ($generated@@19 ($generated@@18 $generated@@20 $generated@@21) $generated@@21)
 :pattern ( ($generated@@18 $generated@@20 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@19 $generated@@22 $generated@@24) ($generated@@19 ($generated@@18 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@18 $generated@@22 $generated@@23) ($generated@@19 $generated@@22 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@19 $generated@@26 $generated@@28) ($generated@@19 ($generated@@25 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@19 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@19 $generated@@30 $generated@@31) ($generated@@19 ($generated@@25 $generated@@29 $generated@@30) $generated@@31))
 :pattern ( ($generated@@25 $generated@@29 $generated@@30) ($generated@@19 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@19 ($generated@@18 $generated@@32 $generated@@33) $generated@@34)  (or (= $generated@@34 $generated@@33) ($generated@@19 $generated@@32 $generated@@34)))
 :pattern ( ($generated@@19 ($generated@@18 $generated@@32 $generated@@33) $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@35 ($generated@@36 $generated@@37 $generated@@38) $generated@@39)  (or (= $generated@@38 $generated@@39) ($generated@@35 $generated@@37 $generated@@39)))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@37 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@19 $generated@@42 $generated@@43) (not ($generated@@19 ($generated@@40 $generated@@41 $generated@@42) $generated@@43)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@19 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@45 $generated@@46 $generated@@47) ($generated@@19 $generated@@47 ($generated@@44 $generated@@46 $generated@@47)))
 :pattern ( ($generated@@44 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (!  (not ($generated@@19 $generated@@48 $generated@@49))
 :pattern ( ($generated@@19 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (!  (not ($generated@@35 $generated@@50 $generated@@51))
 :pattern ( ($generated@@35 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@52 $generated@@54 ($generated@@53 $generated@@55) $generated@@56) ($generated@@52 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 $generated@@54 ($generated@@53 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@19 ($generated@@57 $generated@@58 $generated@@59) $generated@@60)  (and ($generated@@19 $generated@@58 $generated@@60) ($generated@@19 $generated@@59 $generated@@60)))
 :pattern ( ($generated@@19 ($generated@@57 $generated@@58 $generated@@59) $generated@@60))
)))
(assert (= ($generated@@61 $generated@@50) 0))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@25 ($generated@@25 $generated@@62 $generated@@63) $generated@@63) ($generated@@25 $generated@@62 $generated@@63))
 :pattern ( ($generated@@25 ($generated@@25 $generated@@62 $generated@@63) $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@57 ($generated@@57 $generated@@64 $generated@@65) $generated@@65) ($generated@@57 $generated@@64 $generated@@65))
 :pattern ( ($generated@@57 ($generated@@57 $generated@@64 $generated@@65) $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@19 ($generated@@40 $generated@@66 $generated@@67) $generated@@68)  (and ($generated@@19 $generated@@66 $generated@@68) (not ($generated@@19 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@19 ($generated@@40 $generated@@66 $generated@@67) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (!  (and (= (= ($generated@@69 $generated@@70) 0) (= $generated@@70 $generated@@48)) (=> (or (not (= ($generated@@69 $generated@@70) 0)) (not true)) (exists (($generated@@71 T@U) ) (! ($generated@@19 $generated@@70 $generated@@71)
 :pattern ( ($generated@@19 $generated@@70 $generated@@71))
))))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= (+ ($generated@@69 ($generated@@25 $generated@@72 $generated@@73)) ($generated@@69 ($generated@@57 $generated@@72 $generated@@73))) (+ ($generated@@69 $generated@@72) ($generated@@69 $generated@@73)))
 :pattern ( ($generated@@69 ($generated@@25 $generated@@72 $generated@@73)))
 :pattern ( ($generated@@69 ($generated@@57 $generated@@72 $generated@@73)))
)))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@74 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@78 $generated@@77))
)))
(assert (= ($generated@@2 $generated@@80) 3))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and ($generated@@79 $generated@@80 $generated@@83 ($generated@@81 $generated@@85)) ($generated@@82 $generated@@84 $generated@@85)) ($generated@@79 $generated@@80 ($generated@@36 $generated@@83 $generated@@84) ($generated@@81 $generated@@85)))
 :pattern ( ($generated@@79 $generated@@80 ($generated@@36 $generated@@83 $generated@@84) ($generated@@81 $generated@@85)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 $generated@@87 $generated@@88) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@19 $generated@@87 $generated@@89) ($generated@@19 $generated@@88 $generated@@89))
 :pattern ( ($generated@@19 $generated@@87 $generated@@89))
 :pattern ( ($generated@@19 $generated@@88 $generated@@89))
)))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@90 $generated@@92 $generated@@93)  (and (= ($generated@@61 $generated@@92) ($generated@@61 $generated@@93)) (forall (($generated@@94 Int) ) (!  (=> (and (<= 0 $generated@@94) (< $generated@@94 ($generated@@61 $generated@@92))) (= ($generated@@91 $generated@@92 $generated@@94) ($generated@@91 $generated@@93 $generated@@94)))
 :pattern ( ($generated@@91 $generated@@92 $generated@@94))
 :pattern ( ($generated@@91 $generated@@93 $generated@@94))
))))
 :pattern ( ($generated@@90 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@95 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@95 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 $generated@@100 $generated@@101) (forall (($generated@@102 T@U) ) (!  (or (not ($generated@@19 $generated@@100 $generated@@102)) (not ($generated@@19 $generated@@101 $generated@@102)))
 :pattern ( ($generated@@19 $generated@@100 $generated@@102))
 :pattern ( ($generated@@19 $generated@@101 $generated@@102))
)))
 :pattern ( ($generated@@99 $generated@@100 $generated@@101))
)))
(assert (= ($generated@@2 $generated@@103) 4))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@79 $generated@@103 $generated@@105 ($generated@@104 $generated@@106)) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@19 $generated@@105 $generated@@107) ($generated@@82 $generated@@107 $generated@@106))
 :pattern ( ($generated@@19 $generated@@105 $generated@@107))
)))
 :pattern ( ($generated@@79 $generated@@103 $generated@@105 ($generated@@104 $generated@@106)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@61 ($generated@@36 $generated@@108 $generated@@109)) (+ 1 ($generated@@61 $generated@@108)))
 :pattern ( ($generated@@36 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@110 ($generated@@96 $generated@@115 $generated@@112) $generated@@113 $generated@@114) ($generated@@111 $generated@@115 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@110 ($generated@@96 $generated@@115 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@61 ($generated@@116 $generated@@117 $generated@@118)) (+ ($generated@@61 $generated@@117) ($generated@@61 $generated@@118)))
 :pattern ( ($generated@@61 ($generated@@116 $generated@@117 $generated@@118)))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 Int) ($generated@@121 T@U) ) (!  (and (=> (= $generated@@120 ($generated@@61 $generated@@119)) (= ($generated@@91 ($generated@@36 $generated@@119 $generated@@121) $generated@@120) $generated@@121)) (=> (or (not (= $generated@@120 ($generated@@61 $generated@@119))) (not true)) (= ($generated@@91 ($generated@@36 $generated@@119 $generated@@121) $generated@@120) ($generated@@91 $generated@@119 $generated@@120))))
 :pattern ( ($generated@@91 ($generated@@36 $generated@@119 $generated@@121) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@19 ($generated@@25 $generated@@122 $generated@@123) $generated@@124)  (or ($generated@@19 $generated@@122 $generated@@124) ($generated@@19 $generated@@123 $generated@@124)))
 :pattern ( ($generated@@19 ($generated@@25 $generated@@122 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@35 ($generated@@116 $generated@@125 $generated@@126) $generated@@127)  (or ($generated@@35 $generated@@125 $generated@@127) ($generated@@35 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@35 ($generated@@116 $generated@@125 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@99 $generated@@128 $generated@@129) (and (= ($generated@@40 ($generated@@25 $generated@@128 $generated@@129) $generated@@128) $generated@@129) (= ($generated@@40 ($generated@@25 $generated@@128 $generated@@129) $generated@@129) $generated@@128)))
 :pattern ( ($generated@@25 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@35 $generated@@130 $generated@@131) (exists (($generated@@132 Int) ) (!  (and (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@61 $generated@@130))) (= ($generated@@91 $generated@@130 $generated@@132) $generated@@131))
 :pattern ( ($generated@@91 $generated@@130 $generated@@132))
)))
 :pattern ( ($generated@@35 $generated@@130 $generated@@131))
)))
(assert  (=> (<= 0 $generated@@133) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or ($generated@@135 $generated@@136 ($generated@@76 $generated@@103 $generated@@137) ($generated@@76 $generated@@80 $generated@@138)) (and (< 0 $generated@@133) (and ($generated@@79 $generated@@103 $generated@@137 ($generated@@104 $generated@@136)) ($generated@@79 $generated@@80 $generated@@138 ($generated@@81 $generated@@136))))) (= ($generated@@134 $generated@@136 ($generated@@76 $generated@@103 $generated@@137) ($generated@@76 $generated@@80 $generated@@138))  (=> (= ($generated@@69 ($generated@@76 $generated@@103 $generated@@137)) ($generated@@61 ($generated@@76 $generated@@80 $generated@@138))) (and (forall (($generated@@139 Int) ) (!  (=> (and (<= ($generated@@74 0) $generated@@139) (< $generated@@139 ($generated@@61 ($generated@@76 $generated@@80 $generated@@138)))) ($generated@@19 ($generated@@76 $generated@@103 $generated@@137) ($generated@@91 ($generated@@76 $generated@@80 $generated@@138) $generated@@139)))
 :pattern ( ($generated@@91 $generated@@138 $generated@@139))
)) (forall (($generated@@140 T@U) ) (!  (=> ($generated@@82 $generated@@140 $generated@@136) (=> ($generated@@19 ($generated@@76 $generated@@103 $generated@@137) $generated@@140) ($generated@@35 $generated@@138 $generated@@140)))
 :pattern ( ($generated@@35 $generated@@138 $generated@@140))
 :pattern ( ($generated@@19 $generated@@137 $generated@@140))
))))))
 :weight 3
 :pattern ( ($generated@@134 $generated@@136 ($generated@@76 $generated@@103 $generated@@137) ($generated@@76 $generated@@80 $generated@@138)))
))))
(assert  (=> (<= 1 $generated@@133) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or ($generated@@142 $generated@@143 ($generated@@76 $generated@@103 $generated@@146)) (and (< 1 $generated@@133) (and ($generated@@141 $generated@@145) ($generated@@79 $generated@@103 $generated@@146 ($generated@@104 $generated@@143))))) (and (let (($generated@@147 ($generated@@76 $generated@@103 $generated@@146)))
 (=> (or (not (= ($generated@@69 $generated@@147) ($generated@@74 0))) (not true)) (and ($generated@@45 $generated@@143 $generated@@147) (let (($generated@@148 ($generated@@40 $generated@@147 ($generated@@18 $generated@@48 ($generated@@44 $generated@@143 $generated@@147)))))
($generated@@142 $generated@@143 $generated@@148))))) (= ($generated@@52 $generated@@143 ($generated@@53 $generated@@144) ($generated@@76 $generated@@103 $generated@@146)) (let (($generated@@149 ($generated@@76 $generated@@103 $generated@@146)))
(ite (= ($generated@@69 $generated@@149) ($generated@@74 0)) $generated@@50 (let (($generated@@150 ($generated@@44 $generated@@143 $generated@@149)))
(let (($generated@@151 ($generated@@40 $generated@@149 ($generated@@18 $generated@@48 $generated@@150))))
(let (($generated@@152 ($generated@@52 $generated@@143 ($generated@@53 $generated@@144) $generated@@151)))
($generated@@116 ($generated@@36 $generated@@50 $generated@@150) $generated@@152)))))))))
 :weight 3
 :pattern ( ($generated@@52 $generated@@143 ($generated@@53 $generated@@144) ($generated@@76 $generated@@103 $generated@@146)) ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@153 $generated@@154 $generated@@155) (= $generated@@154 $generated@@155))
 :pattern ( ($generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@90 $generated@@156 $generated@@157) (= $generated@@156 $generated@@157))
 :pattern ( ($generated@@90 $generated@@156 $generated@@157))
)))
(assert  (=> (<= 1 $generated@@133) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (or ($generated@@142 $generated@@158 $generated@@160) (and (< 1 $generated@@133) ($generated@@79 $generated@@103 $generated@@160 ($generated@@104 $generated@@158)))) (and ($generated@@134 $generated@@158 $generated@@160 ($generated@@52 $generated@@158 $generated@@159 $generated@@160)) ($generated@@79 $generated@@80 ($generated@@52 $generated@@158 $generated@@159 $generated@@160) ($generated@@81 $generated@@158))))
 :pattern ( ($generated@@52 $generated@@158 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (and (= (+ (+ ($generated@@69 ($generated@@40 $generated@@161 $generated@@162)) ($generated@@69 ($generated@@40 $generated@@162 $generated@@161))) ($generated@@69 ($generated@@57 $generated@@161 $generated@@162))) ($generated@@69 ($generated@@25 $generated@@161 $generated@@162))) (= ($generated@@69 ($generated@@40 $generated@@161 $generated@@162)) (- ($generated@@69 $generated@@161) ($generated@@69 ($generated@@57 $generated@@161 $generated@@162)))))
 :pattern ( ($generated@@69 ($generated@@40 $generated@@161 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@82 ($generated@@96 $generated@@165 $generated@@163) $generated@@164) ($generated@@79 $generated@@165 $generated@@163 $generated@@164))
 :pattern ( ($generated@@82 ($generated@@96 $generated@@165 $generated@@163) $generated@@164))
)))
(assert  (=> (<= 0 $generated@@133) (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (or ($generated@@135 $generated@@166 $generated@@167 $generated@@168) (and (< 0 $generated@@133) (and ($generated@@79 $generated@@103 $generated@@167 ($generated@@104 $generated@@166)) ($generated@@79 $generated@@80 $generated@@168 ($generated@@81 $generated@@166))))) (= ($generated@@134 $generated@@166 $generated@@167 $generated@@168)  (=> (= ($generated@@69 $generated@@167) ($generated@@61 $generated@@168)) (and (forall (($generated@@169 Int) ) (!  (=> (and (<= ($generated@@74 0) $generated@@169) (< $generated@@169 ($generated@@61 $generated@@168))) ($generated@@19 $generated@@167 ($generated@@91 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@91 $generated@@168 $generated@@169))
)) (forall (($generated@@170 T@U) ) (!  (=> ($generated@@82 $generated@@170 $generated@@166) (=> ($generated@@19 $generated@@167 $generated@@170) ($generated@@35 $generated@@168 $generated@@170)))
 :pattern ( ($generated@@35 $generated@@168 $generated@@170))
 :pattern ( ($generated@@19 $generated@@167 $generated@@170))
))))))
 :pattern ( ($generated@@134 $generated@@166 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@171 T@U) ) (! (<= 0 ($generated@@69 $generated@@171))
 :pattern ( ($generated@@69 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (! (<= 0 ($generated@@61 $generated@@172))
 :pattern ( ($generated@@61 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@111 $generated@@103 $generated@@173 ($generated@@104 $generated@@174) $generated@@175) (forall (($generated@@176 T@U) ) (!  (=> ($generated@@19 $generated@@173 $generated@@176) ($generated@@110 $generated@@176 $generated@@174 $generated@@175))
 :pattern ( ($generated@@19 $generated@@173 $generated@@176))
)))
 :pattern ( ($generated@@111 $generated@@103 $generated@@173 ($generated@@104 $generated@@174) $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@111 $generated@@80 $generated@@177 ($generated@@81 $generated@@178) $generated@@179) (forall (($generated@@180 Int) ) (!  (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@61 $generated@@177))) ($generated@@110 ($generated@@91 $generated@@177 $generated@@180) $generated@@178 $generated@@179))
 :pattern ( ($generated@@91 $generated@@177 $generated@@180))
)))
 :pattern ( ($generated@@111 $generated@@80 $generated@@177 ($generated@@81 $generated@@178) $generated@@179))
)))
(assert  (=> (<= 1 $generated@@133) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (or ($generated@@142 $generated@@182 $generated@@184) (and (< 1 $generated@@133) (and ($generated@@79 $generated@@103 $generated@@184 ($generated@@104 $generated@@182)) ($generated@@111 $generated@@103 $generated@@184 ($generated@@104 $generated@@182) $generated@@181)))) ($generated@@141 $generated@@181)) ($generated@@111 $generated@@80 ($generated@@52 $generated@@182 $generated@@183 $generated@@184) ($generated@@81 $generated@@182) $generated@@181))
 :pattern ( ($generated@@111 $generated@@80 ($generated@@52 $generated@@182 $generated@@183 $generated@@184) ($generated@@81 $generated@@182) $generated@@181))
))))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@185 ($generated@@104 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@104 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@187 ($generated@@104 $generated@@188)) $generated)
 :pattern ( ($generated@@104 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@189 ($generated@@81 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@81 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@187 ($generated@@81 $generated@@191)) $generated@@0)
 :pattern ( ($generated@@81 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@95 $generated@@193 ($generated@@96 $generated@@193 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@96 $generated@@193 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@25 $generated@@194 ($generated@@25 $generated@@194 $generated@@195)) ($generated@@25 $generated@@194 $generated@@195))
 :pattern ( ($generated@@25 $generated@@194 ($generated@@25 $generated@@194 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@57 $generated@@196 ($generated@@57 $generated@@196 $generated@@197)) ($generated@@57 $generated@@196 $generated@@197))
 :pattern ( ($generated@@57 $generated@@196 ($generated@@57 $generated@@196 $generated@@197)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@198 $generated@@209 $generated@@210 $generated@@211 ($generated@@205 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@214 $generated@@215) $generated@@212)
 :weight 0
)) (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@221 $generated@@223) (= ($generated@@198 $generated@@216 $generated@@217 $generated@@218 ($generated@@205 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@198 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@198 $generated@@225 $generated@@226 $generated@@227 ($generated@@205 $generated@@225 $generated@@226 $generated@@227 $generated@@229 $generated@@230 $generated@@231 $generated@@228) $generated@@232 $generated@@233) ($generated@@198 $generated@@225 $generated@@226 $generated@@227 $generated@@229 $generated@@232 $generated@@233)))
 :weight 0
)))) (= ($generated@@2 $generated@@199) 5)) (= ($generated@@2 $generated@@200) 6)) (forall (($generated@@234 T@T) ($generated@@235 T@T) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (= ($generated@@202 $generated@@234 $generated@@235 ($generated@@206 $generated@@234 $generated@@235 $generated@@237 $generated@@238 $generated@@236) $generated@@238) $generated@@236)
 :weight 0
))) (forall (($generated@@239 T@T) ($generated@@240 T@T) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= $generated@@243 $generated@@244) (= ($generated@@202 $generated@@239 $generated@@240 ($generated@@206 $generated@@239 $generated@@240 $generated@@242 $generated@@243 $generated@@241) $generated@@244) ($generated@@202 $generated@@239 $generated@@240 $generated@@242 $generated@@244)))
 :weight 0
))) (= ($generated@@2 $generated@@203) 7)) (forall (($generated@@245 T@T) ($generated@@246 T@T) ) (= ($generated@@2 ($generated@@204 $generated@@245 $generated@@246)) 8))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (! (= ($generated@@207 ($generated@@204 $generated@@247 $generated@@248)) $generated@@247)
 :pattern ( ($generated@@204 $generated@@247 $generated@@248))
))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@208 ($generated@@204 $generated@@249 $generated@@250)) $generated@@250)
 :pattern ( ($generated@@204 $generated@@249 $generated@@250))
))))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 Bool) ($generated@@255 T@U) ($generated@@256 T@U) ) (! (= ($generated@@7 ($generated@@198 $generated@@199 $generated@@200 $generated@@3 ($generated@@201 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))  (=> (and (or (not (= $generated@@255 $generated@@251)) (not true)) ($generated@@7 ($generated@@95 $generated@@3 ($generated@@202 $generated@@200 $generated@@203 ($generated@@202 $generated@@199 ($generated@@204 $generated@@200 $generated@@203) $generated@@252 $generated@@255) $generated@@253)))) $generated@@254))
 :pattern ( ($generated@@198 $generated@@199 $generated@@200 $generated@@3 ($generated@@201 $generated@@251 $generated@@252 $generated@@253 $generated@@254) $generated@@255 $generated@@256))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ) (!  (and (= ($generated@@257 ($generated@@36 $generated@@259 $generated@@260)) $generated@@259) (= ($generated@@258 ($generated@@36 $generated@@259 $generated@@260)) $generated@@260))
 :pattern ( ($generated@@36 $generated@@259 $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> ($generated@@82 $generated@@261 ($generated@@104 $generated@@262)) (and (= ($generated@@96 $generated@@103 ($generated@@95 $generated@@103 $generated@@261)) $generated@@261) ($generated@@79 $generated@@103 ($generated@@95 $generated@@103 $generated@@261) ($generated@@104 $generated@@262))))
 :pattern ( ($generated@@82 $generated@@261 ($generated@@104 $generated@@262)))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> ($generated@@82 $generated@@263 ($generated@@81 $generated@@264)) (and (= ($generated@@96 $generated@@80 ($generated@@95 $generated@@80 $generated@@263)) $generated@@263) ($generated@@79 $generated@@80 ($generated@@95 $generated@@80 $generated@@263) ($generated@@81 $generated@@264))))
 :pattern ( ($generated@@82 $generated@@263 ($generated@@81 $generated@@264)))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> ($generated@@19 $generated@@265 $generated@@266) (= ($generated@@69 ($generated@@18 $generated@@265 $generated@@266)) ($generated@@69 $generated@@265)))
 :pattern ( ($generated@@69 ($generated@@18 $generated@@265 $generated@@266)))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= ($generated@@153 $generated@@267 $generated@@268) (forall (($generated@@269 T@U) ) (! (= ($generated@@19 $generated@@267 $generated@@269) ($generated@@19 $generated@@268 $generated@@269))
 :pattern ( ($generated@@19 $generated@@267 $generated@@269))
 :pattern ( ($generated@@19 $generated@@268 $generated@@269))
)))
 :pattern ( ($generated@@153 $generated@@267 $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 Int) ) (!  (and (=> (< $generated@@272 ($generated@@61 $generated@@270)) (= ($generated@@91 ($generated@@116 $generated@@270 $generated@@271) $generated@@272) ($generated@@91 $generated@@270 $generated@@272))) (=> (<= ($generated@@61 $generated@@270) $generated@@272) (= ($generated@@91 ($generated@@116 $generated@@270 $generated@@271) $generated@@272) ($generated@@91 $generated@@271 (- $generated@@272 ($generated@@61 $generated@@270))))))
 :pattern ( ($generated@@91 ($generated@@116 $generated@@270 $generated@@271) $generated@@272))
)))
(assert (forall (($generated@@273 Int) ) (! (= ($generated@@96 $generated@@4 ($generated@@8 ($generated@@74 $generated@@273))) ($generated@@76 $generated@@203 ($generated@@96 $generated@@4 ($generated@@8 $generated@@273))))
 :pattern ( ($generated@@96 $generated@@4 ($generated@@8 ($generated@@74 $generated@@273))))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@T) ) (! (= ($generated@@96 $generated@@275 ($generated@@76 $generated@@275 $generated@@274)) ($generated@@76 $generated@@203 ($generated@@96 $generated@@275 $generated@@274)))
 :pattern ( ($generated@@96 $generated@@275 ($generated@@76 $generated@@275 $generated@@274)))
)))
(assert  (=> (<= 1 $generated@@133) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (or ($generated@@142 $generated@@276 $generated@@279) (and (< 1 $generated@@133) (and ($generated@@141 $generated@@278) ($generated@@79 $generated@@103 $generated@@279 ($generated@@104 $generated@@276))))) (and (let (($generated@@280 $generated@@279))
 (=> (or (not (= ($generated@@69 $generated@@280) ($generated@@74 0))) (not true)) (and ($generated@@45 $generated@@276 $generated@@280) (let (($generated@@281 ($generated@@40 $generated@@280 ($generated@@18 $generated@@48 ($generated@@44 $generated@@276 $generated@@280)))))
($generated@@142 $generated@@276 $generated@@281))))) (= ($generated@@52 $generated@@276 ($generated@@53 $generated@@277) $generated@@279) (let (($generated@@282 $generated@@279))
(ite (= ($generated@@69 $generated@@282) ($generated@@74 0)) $generated@@50 (let (($generated@@283 ($generated@@44 $generated@@276 $generated@@282)))
(let (($generated@@284 ($generated@@40 $generated@@282 ($generated@@18 $generated@@48 $generated@@283))))
(let (($generated@@285 ($generated@@52 $generated@@276 $generated@@277 $generated@@284)))
($generated@@116 ($generated@@36 $generated@@50 $generated@@283) $generated@@285)))))))))
 :pattern ( ($generated@@52 $generated@@276 ($generated@@53 $generated@@277) $generated@@279) ($generated@@141 $generated@@278))
))))
(assert (forall (($generated@@286 T@U) ) (!  (=> (= ($generated@@61 $generated@@286) 0) (= $generated@@286 $generated@@50))
 :pattern ( ($generated@@61 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (! (= ($generated@@79 $generated@@80 $generated@@287 ($generated@@81 $generated@@288)) (forall (($generated@@289 Int) ) (!  (=> (and (<= 0 $generated@@289) (< $generated@@289 ($generated@@61 $generated@@287))) ($generated@@82 ($generated@@91 $generated@@287 $generated@@289) $generated@@288))
 :pattern ( ($generated@@91 $generated@@287 $generated@@289))
)))
 :pattern ( ($generated@@79 $generated@@80 $generated@@287 ($generated@@81 $generated@@288)))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (=> (not ($generated@@19 $generated@@290 $generated@@291)) (= ($generated@@69 ($generated@@18 $generated@@290 $generated@@291)) (+ ($generated@@69 $generated@@290) 1)))
 :pattern ( ($generated@@69 ($generated@@18 $generated@@290 $generated@@291)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 (T@U) Bool)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@298 () T@U)
(declare-fun $generated@@299 () T@U)
(declare-fun $generated@@300 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@301  (=> (= $generated@@292 ($generated@@201 $generated@@293 $generated@@294 $generated@@1 false)) (=> (and (and (and ($generated@@141 $generated@@295) ($generated@@296 $generated@@295)) (= $generated@@294 $generated@@295)) (and (and (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> (and (and (and ($generated@@79 $generated@@103 $generated@@302 ($generated@@104 $generated@@297)) ($generated@@79 $generated@@103 $generated@@303 ($generated@@104 $generated@@297))) ($generated@@7 ($generated@@76 $generated@@3 ($generated@@6 true)))) (or (and ($generated@@86 $generated@@302 $generated@@299) (not ($generated@@86 $generated@@299 $generated@@302))) (and ($generated@@153 $generated@@302 $generated@@299) (and ($generated@@86 $generated@@303 $generated@@300) (not ($generated@@86 $generated@@300 $generated@@303)))))) (=> ($generated@@153 $generated@@302 $generated@@303) ($generated@@90 ($generated@@52 $generated@@297 ($generated@@53 $generated@@298) $generated@@302) ($generated@@52 $generated@@297 ($generated@@53 $generated@@298) $generated@@303))))
 :pattern ( ($generated@@52 $generated@@297 ($generated@@53 $generated@@298) $generated@@303) ($generated@@52 $generated@@297 ($generated@@53 $generated@@298) $generated@@302))
)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@153 $generated@@299 $generated@@300))) ($generated@@90 ($generated@@52 $generated@@297 ($generated@@53 ($generated@@53 $generated@@298)) $generated@@299) ($generated@@52 $generated@@297 ($generated@@53 ($generated@@53 $generated@@298)) $generated@@300))))))
(let (($generated@@304  (=> (and (and (and ($generated@@141 $generated@@294) ($generated@@296 $generated@@294)) (and ($generated@@79 $generated@@103 $generated@@299 ($generated@@104 $generated@@297)) ($generated@@111 $generated@@103 $generated@@299 ($generated@@104 $generated@@297) $generated@@294))) (and (and ($generated@@79 $generated@@103 $generated@@300 ($generated@@104 $generated@@297)) ($generated@@111 $generated@@103 $generated@@300 ($generated@@104 $generated@@297) $generated@@294)) (and (= 2 $generated@@133) (= (ControlFlow 0 3) 2)))) $generated@@301)))
$generated@@304)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
