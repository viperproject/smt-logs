(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 () Int)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert ($generated@@23 $generated@@24))
(assert (forall (($generated@@27 T@U) ) (!  (not ($generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27))
)))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@32 $generated@@24)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@24)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@24))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and ($generated@@33 $generated@@36 $generated@@24 $generated@@37) ($generated@@34 $generated@@37)) ($generated@@33 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@33 $generated@@36 $generated@@24 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 $generated@@29 $generated@@40 $generated@@39 $generated@@41) ($generated@@38 $generated@@29 $generated@@40 $generated@@35 $generated@@41))
 :pattern ( ($generated@@38 $generated@@29 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@38 $generated@@29 $generated@@40 $generated@@35 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@38 $generated@@29 $generated@@43 $generated@@42 $generated@@44) ($generated@@38 $generated@@29 $generated@@43 $generated@@24 $generated@@44))
 :pattern ( ($generated@@38 $generated@@29 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@38 $generated@@29 $generated@@43 $generated@@24 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (!  (and (= (= ($generated@@45 $generated@@46) 0) (= $generated@@46 $generated@@26)) (=> (or (not (= ($generated@@45 $generated@@46) 0)) (not true)) (exists (($generated@@47 T@U) ) (! ($generated@@25 $generated@@46 $generated@@47)
 :pattern ( ($generated@@25 $generated@@46 $generated@@47))
))))
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@7 $generated@@50) 4)) (= ($generated@@7 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@7 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@38 $generated@@29 $generated@@73 $generated@@35 $generated@@74)  (or (= $generated@@73 $generated@@30) ($generated@@12 ($generated@@48 $generated@@8 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@29 ($generated@@52 $generated@@50 $generated@@51) $generated@@74 $generated@@73) $generated@@0)))))
 :pattern ( ($generated@@38 $generated@@29 $generated@@73 $generated@@35 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@38 $generated@@29 $generated@@75 $generated@@24 $generated@@76)  (or (= $generated@@75 $generated@@30) ($generated@@12 ($generated@@48 $generated@@8 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@29 ($generated@@52 $generated@@50 $generated@@51) $generated@@76 $generated@@75) $generated@@0)))))
 :pattern ( ($generated@@38 $generated@@29 $generated@@75 $generated@@24 $generated@@76))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (= ($generated@@7 $generated@@85) 7))
(assert  (=> (<= 1 $generated@@82) (forall (($generated@@87 T@U) ) (!  (=> (or ($generated@@84 $generated@@87) (and (< 1 $generated@@82) (and ($generated@@28 $generated@@85 $generated@@87 ($generated@@86 $generated@@39)) (= ($generated@@45 $generated@@87) ($generated@@77 0))))) (= ($generated@@83 $generated@@87) $generated@@87))
 :pattern ( ($generated@@83 $generated@@87))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@48 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@48 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@28 $generated@@85 $generated@@92 ($generated@@86 $generated@@93)) (forall (($generated@@94 T@U) ) (!  (=> ($generated@@25 $generated@@92 $generated@@94) ($generated@@91 $generated@@94 $generated@@93))
 :pattern ( ($generated@@25 $generated@@92 $generated@@94))
)))
 :pattern ( ($generated@@28 $generated@@85 $generated@@92 ($generated@@86 $generated@@93)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@33 ($generated@@88 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@38 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@33 ($generated@@88 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert  (=> (<= 1 $generated@@82) (forall (($generated@@99 T@U) ) (!  (=> (or ($generated@@84 $generated@@99) (and (< 1 $generated@@82) (and ($generated@@28 $generated@@85 $generated@@99 ($generated@@86 $generated@@39)) (= ($generated@@45 $generated@@99) ($generated@@77 0))))) ($generated@@28 $generated@@85 ($generated@@83 $generated@@99) ($generated@@86 $generated@@42)))
 :pattern ( ($generated@@83 $generated@@99))
))))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@91 $generated@@100 $generated@@39) (and (= ($generated@@88 $generated@@29 ($generated@@48 $generated@@29 $generated@@100)) $generated@@100) ($generated@@28 $generated@@29 ($generated@@48 $generated@@29 $generated@@100) $generated@@39)))
 :pattern ( ($generated@@91 $generated@@100 $generated@@39))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@91 $generated@@101 $generated@@42) (and (= ($generated@@88 $generated@@29 ($generated@@48 $generated@@29 $generated@@101)) $generated@@101) ($generated@@28 $generated@@29 ($generated@@48 $generated@@29 $generated@@101) $generated@@42)))
 :pattern ( ($generated@@91 $generated@@101 $generated@@42))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@91 $generated@@102 $generated@@35) (and (= ($generated@@88 $generated@@29 ($generated@@48 $generated@@29 $generated@@102)) $generated@@102) ($generated@@28 $generated@@29 ($generated@@48 $generated@@29 $generated@@102) $generated@@35)))
 :pattern ( ($generated@@91 $generated@@102 $generated@@35))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@91 $generated@@103 $generated@@24) (and (= ($generated@@88 $generated@@29 ($generated@@48 $generated@@29 $generated@@103)) $generated@@103) ($generated@@28 $generated@@29 ($generated@@48 $generated@@29 $generated@@103) $generated@@24)))
 :pattern ( ($generated@@91 $generated@@103 $generated@@24))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@104 $generated@@39)  (and ($generated@@28 $generated@@29 $generated@@104 $generated@@35) (or (not (= $generated@@104 $generated@@30)) (not true))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@104 $generated@@39))
 :pattern ( ($generated@@28 $generated@@29 $generated@@104 $generated@@35))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@105 $generated@@42)  (and ($generated@@28 $generated@@29 $generated@@105 $generated@@24) (or (not (= $generated@@105 $generated@@30)) (not true))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@105 $generated@@42))
 :pattern ( ($generated@@28 $generated@@29 $generated@@105 $generated@@24))
)))
(assert  (=> (<= 1 $generated@@82) (forall (($generated@@106 T@U) ) (!  (=> (or ($generated@@84 ($generated@@79 $generated@@85 $generated@@106)) (and (< 1 $generated@@82) (and ($generated@@28 $generated@@85 $generated@@106 ($generated@@86 $generated@@39)) (= ($generated@@45 ($generated@@79 $generated@@85 $generated@@106)) ($generated@@77 0))))) (= ($generated@@83 ($generated@@79 $generated@@85 $generated@@106)) ($generated@@79 $generated@@85 $generated@@106)))
 :weight 3
 :pattern ( ($generated@@83 ($generated@@79 $generated@@85 $generated@@106)))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@38 $generated@@29 $generated@@107 $generated@@24 $generated@@108) ($generated@@38 $generated@@29 $generated@@107 $generated@@35 $generated@@108))
 :pattern ( ($generated@@38 $generated@@29 $generated@@107 $generated@@24 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@111 $generated@@109) $generated@@110) ($generated@@28 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@91 ($generated@@88 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (<= 0 ($generated@@45 $generated@@112))
 :pattern ( ($generated@@45 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@38 $generated@@85 $generated@@113 ($generated@@86 $generated@@114) $generated@@115) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@25 $generated@@113 $generated@@116) ($generated@@33 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@25 $generated@@113 $generated@@116))
)))
 :pattern ( ($generated@@38 $generated@@85 $generated@@113 ($generated@@86 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@86 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@86 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@86 $generated@@120)) $generated)
 :pattern ( ($generated@@86 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@48 $generated@@122 ($generated@@88 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@88 $generated@@122 $generated@@121))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@12 ($generated@@123 $generated@@29 $generated@@50 $generated@@8 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@12 ($generated@@48 $generated@@8 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@29 ($generated@@52 $generated@@50 $generated@@51) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@123 $generated@@29 $generated@@50 $generated@@8 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@91 $generated@@157 ($generated@@86 $generated@@158)) (and (= ($generated@@88 $generated@@85 ($generated@@48 $generated@@85 $generated@@157)) $generated@@157) ($generated@@28 $generated@@85 ($generated@@48 $generated@@85 $generated@@157) ($generated@@86 $generated@@158))))
 :pattern ( ($generated@@91 $generated@@157 ($generated@@86 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@159 $generated@@24) ($generated@@28 $generated@@29 $generated@@159 $generated@@35))
 :pattern ( ($generated@@28 $generated@@29 $generated@@159 $generated@@24))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@91 $generated@@160 $generated@@24) ($generated@@91 $generated@@160 $generated@@35))
 :pattern ( ($generated@@91 $generated@@160 $generated@@24))
)))
(assert (= ($generated@@119 $generated@@39) $generated@@1))
(assert (= ($generated@@161 $generated@@39) $generated@@5))
(assert (= ($generated@@119 $generated@@42) $generated@@2))
(assert (= ($generated@@161 $generated@@42) $generated@@6))
(assert (= ($generated@@119 $generated@@35) $generated@@3))
(assert (= ($generated@@161 $generated@@35) $generated@@5))
(assert (= ($generated@@119 $generated@@24) $generated@@4))
(assert (= ($generated@@161 $generated@@24) $generated@@6))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@162 $generated@@35)  (or (= $generated@@162 $generated@@30) ($generated@@23 ($generated@@31 $generated@@162))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@162 $generated@@35))
)))
(assert  (=> (<= 1 $generated@@82) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (or ($generated@@84 $generated@@164) (and (< 1 $generated@@82) (and (and ($generated@@28 $generated@@85 $generated@@164 ($generated@@86 $generated@@39)) ($generated@@38 $generated@@85 $generated@@164 ($generated@@86 $generated@@39) $generated@@163)) (= ($generated@@45 $generated@@164) ($generated@@77 0))))) ($generated@@34 $generated@@163)) ($generated@@38 $generated@@85 ($generated@@83 $generated@@164) ($generated@@86 $generated@@42) $generated@@163))
 :pattern ( ($generated@@38 $generated@@85 ($generated@@83 $generated@@164) ($generated@@86 $generated@@42) $generated@@163))
))))
(assert (forall (($generated@@165 Int) ) (! (= ($generated@@88 $generated@@9 ($generated@@13 ($generated@@77 $generated@@165))) ($generated@@79 $generated@@51 ($generated@@88 $generated@@9 ($generated@@13 $generated@@165))))
 :pattern ( ($generated@@88 $generated@@9 ($generated@@13 ($generated@@77 $generated@@165))))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@88 $generated@@167 ($generated@@79 $generated@@167 $generated@@166)) ($generated@@79 $generated@@51 ($generated@@88 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@88 $generated@@167 ($generated@@79 $generated@@167 $generated@@166)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@172  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@28 $generated@@85 $generated@@168 ($generated@@86 $generated@@42)))))
(let (($generated@@173 true))
(let (($generated@@174  (=> (and (= $generated@@169 ($generated@@124 $generated@@30 $generated@@170 $generated@@0 false)) (= ($generated@@45 $generated@@168) ($generated@@77 0))) (and (=> (= (ControlFlow 0 4) 1) $generated@@173) (=> (= (ControlFlow 0 4) 3) $generated@@172)))))
(let (($generated@@175  (=> (and (and (and ($generated@@34 $generated@@170) ($generated@@171 $generated@@170)) ($generated@@28 $generated@@85 $generated@@168 ($generated@@86 $generated@@39))) (and (= 1 $generated@@82) (= (ControlFlow 0 5) 4))) $generated@@174)))
$generated@@175)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
