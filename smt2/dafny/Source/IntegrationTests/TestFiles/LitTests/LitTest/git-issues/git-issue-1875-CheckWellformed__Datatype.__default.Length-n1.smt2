(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Int)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@T T@U T@U) Bool)
(declare-fun $generated@@57 (Int) Int)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@95 () Int)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@127 (T@U) Int)
(declare-fun $generated@@128 (T@U) Int)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@T T@T) T@T)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@150 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@29) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@32 $generated@@38) (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@36 $generated@@37) ($generated@@31 $generated@@35) $generated@@38)  (and ($generated@@33 $generated@@36 $generated@@35 $generated@@38) ($generated@@28 $generated@@29 $generated@@37 ($generated@@34 ($generated@@31 $generated@@35)) $generated@@38))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@36 $generated@@37) ($generated@@31 $generated@@35) $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@41 ($generated@@34 $generated@@40) $generated@@42) ($generated@@28 $generated@@29 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
 :pattern ( ($generated@@28 $generated@@29 $generated@@41 ($generated@@34 $generated@@40) $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@43 $generated@@45 ($generated@@44 $generated@@46) $generated@@47) ($generated@@43 $generated@@45 $generated@@46 $generated@@47))
 :pattern ( ($generated@@43 $generated@@45 ($generated@@44 $generated@@46) $generated@@47))
)))
(assert (= ($generated@@48 $generated@@49) $generated@@6))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@51 $generated@@29 $generated@@53 ($generated@@39 $generated@@52)) ($generated@@50 $generated@@53))
 :pattern ( ($generated@@50 $generated@@53) ($generated@@51 $generated@@29 $generated@@53 ($generated@@39 $generated@@52)))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> ($generated@@32 $generated@@55) ($generated@@28 $generated@@29 $generated@@49 ($generated@@31 $generated@@54) $generated@@55))
 :pattern ( ($generated@@28 $generated@@29 $generated@@49 ($generated@@31 $generated@@54) $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ) (! ($generated@@51 $generated@@29 $generated@@49 ($generated@@31 $generated@@56))
 :pattern ( ($generated@@51 $generated@@29 $generated@@49 ($generated@@31 $generated@@56)))
)))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@57 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@50 $generated@@62) (= ($generated@@48 $generated@@62) $generated@@4))
 :pattern ( ($generated@@50 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@48 $generated@@64) $generated@@6))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@48 $generated@@66) $generated@@7))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@65 $generated@@71) (exists (($generated@@72 T@U) ($generated@@73 T@U) ) (= $generated@@71 ($generated@@30 $generated@@72 $generated@@73))))
 :pattern ( ($generated@@65 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@63 $generated@@74) (= $generated@@74 $generated@@49))
 :pattern ( ($generated@@63 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@50 $generated@@76) (exists (($generated@@77 T@U) ) (= $generated@@76 ($generated@@75 $generated@@77))))
 :pattern ( ($generated@@50 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@51 $generated@@29 ($generated@@30 $generated@@80 $generated@@81) ($generated@@31 $generated@@79))  (and ($generated@@78 $generated@@80 $generated@@79) ($generated@@51 $generated@@29 $generated@@81 ($generated@@34 ($generated@@31 $generated@@79)))))
 :pattern ( ($generated@@51 $generated@@29 ($generated@@30 $generated@@80 $generated@@81) ($generated@@31 $generated@@79)))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@33 ($generated@@68 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@28 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@33 ($generated@@68 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ) (!  (and (= ($generated@@27 ($generated@@31 $generated@@87)) $generated@@2) (= ($generated@@86 ($generated@@31 $generated@@87)) $generated@@8))
 :pattern ( ($generated@@31 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ) (!  (and (= ($generated@@27 ($generated@@34 $generated@@88)) $generated@@3) (= ($generated@@86 ($generated@@34 $generated@@88)) $generated@@9))
 :pattern ( ($generated@@34 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (!  (and (= ($generated@@27 ($generated@@39 $generated@@89)) $generated@@5) (= ($generated@@86 ($generated@@39 $generated@@89)) $generated@@10))
 :pattern ( ($generated@@39 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@32 $generated@@92) (= ($generated@@28 $generated@@29 ($generated@@75 $generated@@91) ($generated@@39 $generated@@90) $generated@@92) ($generated@@33 $generated@@91 $generated@@90 $generated@@92)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@75 $generated@@91) ($generated@@39 $generated@@90) $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@51 $generated@@29 $generated@@94 ($generated@@31 $generated@@93)) (or ($generated@@63 $generated@@94) ($generated@@65 $generated@@94)))
 :pattern ( ($generated@@65 $generated@@94) ($generated@@51 $generated@@29 $generated@@94 ($generated@@31 $generated@@93)))
 :pattern ( ($generated@@63 $generated@@94) ($generated@@51 $generated@@29 $generated@@94 ($generated@@31 $generated@@93)))
)))
(assert  (=> (<= 3 $generated@@95) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@96 $generated@@99 $generated@@101) (and (< 3 $generated@@95) ($generated@@51 $generated@@29 $generated@@101 ($generated@@31 $generated@@99)))) (and (=> (not ($generated@@63 $generated@@101)) (let (($generated@@102 ($generated@@97 $generated@@101)))
 (and ($generated@@50 $generated@@102) ($generated@@96 $generated@@99 ($generated@@67 $generated@@29 ($generated@@98 $generated@@102)))))) (= ($generated@@43 $generated@@99 ($generated@@44 $generated@@100) $generated@@101) (ite ($generated@@63 $generated@@101) 0 (let (($generated@@103 ($generated@@97 $generated@@101)))
(+ 1 ($generated@@43 $generated@@99 $generated@@100 ($generated@@67 $generated@@29 ($generated@@98 $generated@@103)))))))))
 :pattern ( ($generated@@43 $generated@@99 ($generated@@44 $generated@@100) $generated@@101))
))))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@78 $generated@@104 $generated) (and (= ($generated@@68 $generated@@13 ($generated@@67 $generated@@13 $generated@@104)) $generated@@104) ($generated@@51 $generated@@13 ($generated@@67 $generated@@13 $generated@@104) $generated)))
 :pattern ( ($generated@@78 $generated@@104 $generated))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@78 ($generated@@68 $generated@@107 $generated@@105) $generated@@106) ($generated@@51 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@78 ($generated@@68 $generated@@107 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@48 ($generated@@30 $generated@@108 $generated@@109)) $generated@@7)
 :pattern ( ($generated@@30 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@110 ($generated@@30 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@30 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@97 ($generated@@30 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@30 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@115 ($generated@@31 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@31 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@34 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@34 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@48 ($generated@@75 $generated@@119)) $generated@@4)
 :pattern ( ($generated@@75 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@39 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@39 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@98 ($generated@@75 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@75 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@67 $generated@@124 ($generated@@68 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@68 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@51 $generated@@29 ($generated@@75 $generated@@126) ($generated@@39 $generated@@125)) ($generated@@78 $generated@@126 $generated@@125))
 :pattern ( ($generated@@51 $generated@@29 ($generated@@75 $generated@@126) ($generated@@39 $generated@@125)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (< ($generated@@127 $generated@@129) ($generated@@128 ($generated@@30 $generated@@129 $generated@@130)))
 :pattern ( ($generated@@30 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@128 $generated@@132) ($generated@@128 ($generated@@30 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@30 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (< ($generated@@127 $generated@@133) ($generated@@128 ($generated@@75 $generated@@133)))
 :pattern ( ($generated@@75 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and ($generated@@32 $generated@@136) (and ($generated@@50 $generated@@134) ($generated@@28 $generated@@29 $generated@@134 ($generated@@39 $generated@@135) $generated@@136))) ($generated@@33 ($generated@@98 $generated@@134) $generated@@135 $generated@@136))
 :pattern ( ($generated@@33 ($generated@@98 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@32 $generated@@139) (and ($generated@@65 $generated@@137) ($generated@@28 $generated@@29 $generated@@137 ($generated@@31 $generated@@138) $generated@@139))) ($generated@@33 ($generated@@110 $generated@@137) $generated@@138 $generated@@139))
 :pattern ( ($generated@@33 ($generated@@110 $generated@@137) $generated@@138 $generated@@139))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@140 $generated@@151 $generated@@152 $generated@@153 ($generated@@147 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@156 $generated@@157) $generated@@154)
 :weight 0
)) (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@140 $generated@@158 $generated@@159 $generated@@160 ($generated@@147 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@140 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@140 $generated@@167 $generated@@168 $generated@@169 ($generated@@147 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))) (= ($generated@@11 $generated@@141) 4)) (= ($generated@@11 $generated@@142) 5)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@144 $generated@@176 $generated@@177 ($generated@@148 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@180) $generated@@178)
 :weight 0
))) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@185 $generated@@186) (= ($generated@@144 $generated@@181 $generated@@182 ($generated@@148 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@183) $generated@@186) ($generated@@144 $generated@@181 $generated@@182 $generated@@184 $generated@@186)))
 :weight 0
))) (= ($generated@@11 $generated@@145) 6)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (= ($generated@@11 ($generated@@146 $generated@@187 $generated@@188)) 7))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@149 ($generated@@146 $generated@@189 $generated@@190)) $generated@@189)
 :pattern ( ($generated@@146 $generated@@189 $generated@@190))
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@150 ($generated@@146 $generated@@191 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@146 $generated@@191 $generated@@192))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 Bool) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@16 ($generated@@140 $generated@@141 $generated@@142 $generated@@12 ($generated@@143 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))  (=> (and (or (not (= $generated@@197 $generated@@193)) (not true)) ($generated@@16 ($generated@@67 $generated@@12 ($generated@@144 $generated@@142 $generated@@145 ($generated@@144 $generated@@141 ($generated@@146 $generated@@142 $generated@@145) $generated@@194 $generated@@197) $generated@@195)))) $generated@@196))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142 $generated@@12 ($generated@@143 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@127 ($generated@@68 $generated@@29 $generated@@199)) ($generated@@128 $generated@@199))
 :pattern ( ($generated@@127 ($generated@@68 $generated@@29 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@78 $generated@@201 ($generated@@31 $generated@@200)) (and (= ($generated@@68 $generated@@29 ($generated@@67 $generated@@29 $generated@@201)) $generated@@201) ($generated@@51 $generated@@29 ($generated@@67 $generated@@29 $generated@@201) ($generated@@31 $generated@@200))))
 :pattern ( ($generated@@78 $generated@@201 ($generated@@31 $generated@@200)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@78 $generated@@203 ($generated@@34 $generated@@202)) (and (= ($generated@@68 $generated@@29 ($generated@@67 $generated@@29 $generated@@203)) $generated@@203) ($generated@@51 $generated@@29 ($generated@@67 $generated@@29 $generated@@203) ($generated@@34 $generated@@202))))
 :pattern ( ($generated@@78 $generated@@203 ($generated@@34 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@78 $generated@@205 ($generated@@39 $generated@@204)) (and (= ($generated@@68 $generated@@29 ($generated@@67 $generated@@29 $generated@@205)) $generated@@205) ($generated@@51 $generated@@29 ($generated@@67 $generated@@29 $generated@@205) ($generated@@39 $generated@@204))))
 :pattern ( ($generated@@78 $generated@@205 ($generated@@39 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@51 $generated@@29 $generated@@207 ($generated@@34 $generated@@206))  (and ($generated@@51 $generated@@29 $generated@@207 ($generated@@39 $generated@@206)) ($generated@@16 ($generated@@59 $generated@@12 ($generated@@15 true)))))
 :pattern ( ($generated@@51 $generated@@29 $generated@@207 ($generated@@34 $generated@@206)))
)))
(assert (= $generated@@49 ($generated@@59 $generated@@29 $generated@@49)))
(assert  (=> (<= 3 $generated@@95) (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (or ($generated@@96 $generated@@208 ($generated@@59 $generated@@29 $generated@@210)) (and (< 3 $generated@@95) ($generated@@51 $generated@@29 $generated@@210 ($generated@@31 $generated@@208)))) (and (=> (not ($generated@@16 ($generated@@59 $generated@@12 ($generated@@15 ($generated@@63 ($generated@@59 $generated@@29 $generated@@210)))))) (let (($generated@@211 ($generated@@59 $generated@@29 ($generated@@97 ($generated@@59 $generated@@29 $generated@@210)))))
 (and ($generated@@50 $generated@@211) ($generated@@96 $generated@@208 ($generated@@67 $generated@@29 ($generated@@98 $generated@@211)))))) (= ($generated@@43 $generated@@208 ($generated@@44 $generated@@209) ($generated@@59 $generated@@29 $generated@@210)) (ite ($generated@@63 ($generated@@59 $generated@@29 $generated@@210)) 0 (let (($generated@@212 ($generated@@59 $generated@@29 ($generated@@97 ($generated@@59 $generated@@29 $generated@@210)))))
($generated@@57 (+ 1 ($generated@@43 $generated@@208 ($generated@@44 $generated@@209) ($generated@@59 $generated@@29 ($generated@@67 $generated@@29 ($generated@@98 $generated@@212)))))))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@208 ($generated@@44 $generated@@209) ($generated@@59 $generated@@29 $generated@@210)))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@30 ($generated@@59 $generated@@145 $generated@@213) ($generated@@59 $generated@@29 $generated@@214)) ($generated@@59 $generated@@29 ($generated@@30 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@30 ($generated@@59 $generated@@145 $generated@@213) ($generated@@59 $generated@@29 $generated@@214)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@32 $generated@@217) (and ($generated@@65 $generated@@215) ($generated@@28 $generated@@29 $generated@@215 ($generated@@31 $generated@@216) $generated@@217))) ($generated@@28 $generated@@29 ($generated@@97 $generated@@215) ($generated@@34 ($generated@@31 $generated@@216)) $generated@@217))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@97 $generated@@215) ($generated@@34 ($generated@@31 $generated@@216)) $generated@@217))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@68 $generated@@13 ($generated@@17 ($generated@@57 $generated@@218))) ($generated@@59 $generated@@145 ($generated@@68 $generated@@13 ($generated@@17 $generated@@218))))
 :pattern ( ($generated@@68 $generated@@13 ($generated@@17 ($generated@@57 $generated@@218))))
)))
(assert (forall (($generated@@219 T@U) ) (! (= ($generated@@75 ($generated@@59 $generated@@145 $generated@@219)) ($generated@@59 $generated@@29 ($generated@@75 $generated@@219)))
 :pattern ( ($generated@@75 ($generated@@59 $generated@@145 $generated@@219)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@T) ) (! (= ($generated@@68 $generated@@221 ($generated@@59 $generated@@221 $generated@@220)) ($generated@@59 $generated@@145 ($generated@@68 $generated@@221 $generated@@220)))
 :pattern ( ($generated@@68 $generated@@221 ($generated@@59 $generated@@221 $generated@@220)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! ($generated@@28 $generated@@13 $generated@@223 $generated $generated@@222)
 :pattern ( ($generated@@28 $generated@@13 $generated@@223 $generated $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@51 $generated@@13 $generated@@224 $generated)
 :pattern ( ($generated@@51 $generated@@13 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@238 true))
(let (($generated@@239  (=> (= $generated@@225 ($generated@@30 $generated@@226 $generated@@227)) (=> (and (and ($generated@@78 $generated@@226 $generated@@228) ($generated@@51 $generated@@29 $generated@@227 ($generated@@34 ($generated@@31 $generated@@228)))) (and (= $generated@@229 $generated@@227) ($generated@@51 $generated@@29 $generated@@229 ($generated@@34 ($generated@@31 $generated@@228))))) (=> (and (and (and (= $generated@@230 $generated@@229) (= $generated@@231 $generated@@226)) (and ($generated@@78 $generated@@231 $generated@@228) (= $generated@@232 $generated@@231))) (and (and ($generated@@50 $generated@@230) (= $generated@@233 ($generated@@67 $generated@@29 ($generated@@98 $generated@@230)))) (and ($generated@@28 $generated@@29 $generated@@233 ($generated@@31 $generated@@228) $generated@@234) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@128 $generated@@233) ($generated@@128 $generated@@225)))))))
(let (($generated@@240  (=> (or (not (= $generated@@225 $generated@@49)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@239) (=> (= (ControlFlow 0 6) 5) $generated@@238)))))
(let (($generated@@241 true))
(let (($generated@@242 true))
(let (($generated@@243  (=> (= $generated@@235 ($generated@@143 $generated@@236 $generated@@234 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@242) (=> (= (ControlFlow 0 7) 2) $generated@@241)) (=> (= (ControlFlow 0 7) 6) $generated@@240)))))
(let (($generated@@244  (=> (and (and (and ($generated@@32 $generated@@234) ($generated@@237 $generated@@234)) ($generated@@51 $generated@@29 $generated@@225 ($generated@@31 $generated@@228))) (and (= 3 $generated@@95) (= (ControlFlow 0 8) 7))) $generated@@243)))
$generated@@244))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
