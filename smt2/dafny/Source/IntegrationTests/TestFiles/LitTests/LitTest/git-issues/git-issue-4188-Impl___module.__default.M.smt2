(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@T T@T) T@T)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T) T@T)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@147 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@25 $generated@@11 $generated@@30 $generated@@29 $generated@@31)
 :pattern ( ($generated@@25 $generated@@11 $generated@@30 $generated@@29 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@25 $generated@@11 $generated@@33 $generated@@32 $generated@@34)
 :pattern ( ($generated@@25 $generated@@11 $generated@@33 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! ($generated@@25 $generated@@11 $generated@@36 $generated@@35 $generated@@37)
 :pattern ( ($generated@@25 $generated@@11 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ) (!  (not ($generated@@38 $generated@@39 $generated@@40))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 Int) ) (! (= ($generated@@41 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 ($generated@@46 $generated@@49 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@49 $generated@@48))
)))
(assert (= ($generated@@9 $generated@@51) 3))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@50 $generated@@51 $generated@@54 ($generated@@52 $generated@@55)) (forall (($generated@@56 T@U) ) (!  (=> ($generated@@38 $generated@@54 $generated@@56) ($generated@@53 $generated@@56 $generated@@55))
 :pattern ( ($generated@@38 $generated@@54 $generated@@56))
)))
 :pattern ( ($generated@@50 $generated@@51 $generated@@54 ($generated@@52 $generated@@55)))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@50 $generated@@11 $generated@@57 $generated@@26) (<= ($generated@@41 0) ($generated@@16 $generated@@57)))
 :pattern ( ($generated@@50 $generated@@11 $generated@@57 $generated@@26))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@50 $generated@@11 $generated@@58 $generated@@32) (<= ($generated@@41 0) ($generated@@16 $generated@@58)))
 :pattern ( ($generated@@50 $generated@@11 $generated@@58 $generated@@32))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@50 $generated@@11 $generated@@59 $generated@@35) (<= ($generated@@41 0) ($generated@@16 $generated@@59)))
 :pattern ( ($generated@@50 $generated@@11 $generated@@59 $generated@@35))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@60 ($generated@@47 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@25 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@60 ($generated@@47 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@53 $generated@@65 $generated@@26) (and (= ($generated@@47 $generated@@11 ($generated@@46 $generated@@11 $generated@@65)) $generated@@65) ($generated@@50 $generated@@11 ($generated@@46 $generated@@11 $generated@@65) $generated@@26)))
 :pattern ( ($generated@@53 $generated@@65 $generated@@26))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@53 $generated@@66 $generated@@29) (and (= ($generated@@47 $generated@@11 ($generated@@46 $generated@@11 $generated@@66)) $generated@@66) ($generated@@50 $generated@@11 ($generated@@46 $generated@@11 $generated@@66) $generated@@29)))
 :pattern ( ($generated@@53 $generated@@66 $generated@@29))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@53 $generated@@67 $generated@@32) (and (= ($generated@@47 $generated@@11 ($generated@@46 $generated@@11 $generated@@67)) $generated@@67) ($generated@@50 $generated@@11 ($generated@@46 $generated@@11 $generated@@67) $generated@@32)))
 :pattern ( ($generated@@53 $generated@@67 $generated@@32))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@53 $generated@@68 $generated@@35) (and (= ($generated@@47 $generated@@11 ($generated@@46 $generated@@11 $generated@@68)) $generated@@68) ($generated@@50 $generated@@11 ($generated@@46 $generated@@11 $generated@@68) $generated@@35)))
 :pattern ( ($generated@@53 $generated@@68 $generated@@35))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (= $generated@@70 $generated@@71))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@53 ($generated@@47 $generated@@74 $generated@@72) $generated@@73) ($generated@@50 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@53 ($generated@@47 $generated@@74 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@25 $generated@@51 $generated@@75 ($generated@@52 $generated@@76) $generated@@77) (forall (($generated@@78 T@U) ) (!  (=> ($generated@@38 $generated@@75 $generated@@78) ($generated@@60 $generated@@78 $generated@@76 $generated@@77))
 :pattern ( ($generated@@38 $generated@@75 $generated@@78))
)))
 :pattern ( ($generated@@25 $generated@@51 $generated@@75 ($generated@@52 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 ($generated@@52 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@52 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@81 ($generated@@52 $generated@@82)) $generated)
 :pattern ( ($generated@@52 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@46 $generated@@84 ($generated@@47 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@47 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@50 $generated@@11 $generated@@85 $generated@@29) ($generated@@14 ($generated@@43 $generated@@10 ($generated@@13 true))))
 :pattern ( ($generated@@50 $generated@@11 $generated@@85 $generated@@29))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@86 $generated@@97 $generated@@98 $generated@@99 ($generated@@93 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@102 $generated@@103) $generated@@100)
 :weight 0
)) (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@86 $generated@@104 $generated@@105 $generated@@106 ($generated@@93 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@86 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@86 $generated@@113 $generated@@114 $generated@@115 ($generated@@93 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@86 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)))) (= ($generated@@9 $generated@@87) 4)) (= ($generated@@9 $generated@@88) 5)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@90 $generated@@122 $generated@@123 ($generated@@94 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@124) $generated@@126) $generated@@124)
 :weight 0
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@131 $generated@@132) (= ($generated@@90 $generated@@127 $generated@@128 ($generated@@94 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@132) ($generated@@90 $generated@@127 $generated@@128 $generated@@130 $generated@@132)))
 :weight 0
))) (= ($generated@@9 $generated@@91) 6)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (= ($generated@@9 ($generated@@92 $generated@@133 $generated@@134)) 7))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@92 $generated@@135 $generated@@136))
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@96 ($generated@@92 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@92 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 Bool) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@14 ($generated@@86 $generated@@87 $generated@@88 $generated@@10 ($generated@@89 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))  (=> (and (or (not (= $generated@@143 $generated@@139)) (not true)) ($generated@@14 ($generated@@46 $generated@@10 ($generated@@90 $generated@@88 $generated@@91 ($generated@@90 $generated@@87 ($generated@@92 $generated@@88 $generated@@91) $generated@@140 $generated@@143) $generated@@141)))) $generated@@142))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88 $generated@@10 ($generated@@89 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@53 $generated@@145 ($generated@@52 $generated@@146)) (and (= ($generated@@47 $generated@@51 ($generated@@46 $generated@@51 $generated@@145)) $generated@@145) ($generated@@50 $generated@@51 ($generated@@46 $generated@@51 $generated@@145) ($generated@@52 $generated@@146))))
 :pattern ( ($generated@@53 $generated@@145 ($generated@@52 $generated@@146)))
)))
(assert (= ($generated@@81 $generated@@26) $generated@@1))
(assert (= ($generated@@147 $generated@@26) $generated@@5))
(assert (= ($generated@@81 $generated@@29) $generated@@2))
(assert (= ($generated@@147 $generated@@29) $generated@@6))
(assert (= ($generated@@81 $generated@@32) $generated@@3))
(assert (= ($generated@@147 $generated@@32) $generated@@7))
(assert (= ($generated@@81 $generated@@35) $generated@@4))
(assert (= ($generated@@147 $generated@@35) $generated@@8))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@69 $generated@@148 $generated@@149) (forall (($generated@@150 T@U) ) (! (= ($generated@@38 $generated@@148 $generated@@150) ($generated@@38 $generated@@149 $generated@@150))
 :pattern ( ($generated@@38 $generated@@148 $generated@@150))
 :pattern ( ($generated@@38 $generated@@149 $generated@@150))
)))
 :pattern ( ($generated@@69 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 Int) ) (! (= ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 $generated@@151))) ($generated@@43 $generated@@91 ($generated@@47 $generated@@11 ($generated@@15 $generated@@151))))
 :pattern ( ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 $generated@@151))))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@47 $generated@@153 ($generated@@43 $generated@@153 $generated@@152)) ($generated@@43 $generated@@91 ($generated@@47 $generated@@153 $generated@@152)))
 :pattern ( ($generated@@47 $generated@@153 ($generated@@43 $generated@@153 $generated@@152)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 (T@U) Bool)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@173  (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@35) ($generated@@38 $generated@@154 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@35) ($generated@@38 $generated@@154 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (exists (($generated@@174 T@U) )  (and (<= ($generated@@41 0) ($generated@@16 $generated@@174)) ($generated@@38 $generated@@154 ($generated@@47 $generated@@11 $generated@@174)))))))))
(let (($generated@@175  (=> (and (< $generated@@155 ($generated@@41 0)) (= (ControlFlow 0 4) 2)) $generated@@173)))
(let (($generated@@176  (=> (and (<= ($generated@@41 0) $generated@@155) (= (ControlFlow 0 3) 2)) $generated@@173)))
(let (($generated@@177  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@32) ($generated@@38 $generated@@156 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@32) ($generated@@38 $generated@@156 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (exists (($generated@@178 T@U) )  (and (<= ($generated@@41 0) ($generated@@16 $generated@@178)) ($generated@@38 $generated@@156 ($generated@@47 $generated@@11 $generated@@178))))))) (=> (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@32) ($generated@@38 $generated@@156 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@32) ($generated@@38 $generated@@156 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (exists (($generated@@179 Int) )  (and (<= ($generated@@41 0) $generated@@179) ($generated@@38 $generated@@156 ($generated@@47 $generated@@11 ($generated@@15 $generated@@179))))))) (=> (and (<= ($generated@@41 0) $generated@@157) ($generated@@38 $generated@@156 ($generated@@47 $generated@@11 ($generated@@15 $generated@@157)))) (and (=> (= (ControlFlow 0 5) 3) $generated@@176) (=> (= (ControlFlow 0 5) 4) $generated@@175)))))))
(let (($generated@@180  (=> (and (< $generated@@158 ($generated@@41 0)) (= (ControlFlow 0 8) 5)) $generated@@177)))
(let (($generated@@181  (=> (and (<= ($generated@@41 0) $generated@@158) (= (ControlFlow 0 7) 5)) $generated@@177)))
(let (($generated@@182  (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@29) ($generated@@38 $generated@@159 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (exists (($generated@@183 T@U) )  (and ($generated@@14 ($generated@@43 $generated@@10 ($generated@@13 true))) ($generated@@38 $generated@@159 ($generated@@47 $generated@@11 $generated@@183)))))) (=> (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@29) ($generated@@38 $generated@@159 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (exists (($generated@@184 Int) )  (and ($generated@@14 ($generated@@43 $generated@@10 ($generated@@13 true))) ($generated@@38 $generated@@159 ($generated@@47 $generated@@11 ($generated@@15 $generated@@184)))))) (=> (and ($generated@@14 ($generated@@43 $generated@@10 ($generated@@13 true))) ($generated@@38 $generated@@159 ($generated@@47 $generated@@11 ($generated@@15 $generated@@160)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@181) (=> (= (ControlFlow 0 9) 8) $generated@@180)))))))
(let (($generated@@185  (=> (and (not ($generated@@14 ($generated@@43 $generated@@10 ($generated@@13 true)))) (= (ControlFlow 0 12) 9)) $generated@@182)))
(let (($generated@@186  (=> (and ($generated@@14 ($generated@@43 $generated@@10 ($generated@@13 true))) (= (ControlFlow 0 11) 9)) $generated@@182)))
(let (($generated@@187  (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@26) ($generated@@38 $generated@@161 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@26) ($generated@@38 $generated@@161 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (exists (($generated@@188 T@U) )  (and (<= ($generated@@41 0) ($generated@@16 $generated@@188)) ($generated@@38 $generated@@161 ($generated@@47 $generated@@11 $generated@@188))))))) (=> (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@26) ($generated@@38 $generated@@161 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (or (and ($generated@@50 $generated@@11 ($generated@@15 ($generated@@41 0)) $generated@@26) ($generated@@38 $generated@@161 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@41 0))))) (exists (($generated@@189 Int) )  (and (<= ($generated@@41 0) $generated@@189) ($generated@@38 $generated@@161 ($generated@@47 $generated@@11 ($generated@@15 $generated@@189))))))) (=> (and (<= ($generated@@41 0) $generated@@162) ($generated@@38 $generated@@161 ($generated@@47 $generated@@11 ($generated@@15 $generated@@162)))) (and (=> (= (ControlFlow 0 13) 11) $generated@@186) (=> (= (ControlFlow 0 13) 12) $generated@@185)))))))
(let (($generated@@190  (=> (and (< $generated@@163 ($generated@@41 0)) (= (ControlFlow 0 16) 13)) $generated@@187)))
(let (($generated@@191  (=> (and (<= ($generated@@41 0) $generated@@163) (= (ControlFlow 0 15) 13)) $generated@@187)))
(let (($generated@@192  (=> (= $generated@@164 ($generated@@89 $generated@@165 $generated@@166 $generated@@0 false)) (and (=> (= (ControlFlow 0 17) 15) $generated@@191) (=> (= (ControlFlow 0 17) 16) $generated@@190)))))
(let (($generated@@193  (=> (and (and (and ($generated@@167 $generated@@166) ($generated@@168 $generated@@166)) (and ($generated@@50 $generated@@51 $generated@@161 ($generated@@52 $generated@@26)) ($generated@@25 $generated@@51 $generated@@161 ($generated@@52 $generated@@26) $generated@@166))) (and (and ($generated@@50 $generated@@51 $generated@@159 ($generated@@52 $generated@@29)) ($generated@@25 $generated@@51 $generated@@159 ($generated@@52 $generated@@29) $generated@@166)) (and ($generated@@50 $generated@@51 $generated@@156 ($generated@@52 $generated@@32)) ($generated@@25 $generated@@51 $generated@@156 ($generated@@52 $generated@@32) $generated@@166)))) (=> (and (and (and (and ($generated@@50 $generated@@51 $generated@@154 ($generated@@52 $generated@@35)) ($generated@@25 $generated@@51 $generated@@154 ($generated@@52 $generated@@35) $generated@@166)) (and (<= ($generated@@41 0) $generated@@169) true)) (and (and ($generated@@14 ($generated@@43 $generated@@10 ($generated@@13 true))) true) (and (<= ($generated@@41 0) $generated@@170) true))) (and (and (and (<= ($generated@@41 0) $generated@@171) true) (and (= 1 $generated@@172) (not ($generated@@69 $generated@@161 $generated@@39)))) (and (and (not ($generated@@69 $generated@@159 $generated@@39)) (not ($generated@@69 $generated@@156 $generated@@39))) (and (not ($generated@@69 $generated@@154 $generated@@39)) (= (ControlFlow 0 18) 17))))) $generated@@192))))
$generated@@193)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
