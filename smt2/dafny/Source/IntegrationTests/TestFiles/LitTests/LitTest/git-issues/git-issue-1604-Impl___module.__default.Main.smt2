(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U) Bool)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@59 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@107 (Int) Int)
(declare-fun $generated@@109 (T@T T@U) T@U)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@114 (T@U) Bool)
(declare-fun $generated@@115 (Int Int) Int)
(declare-fun $generated@@117 (T@T T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@122 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 (T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@178 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@220 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@32 ($generated@@31 $generated@@33 $generated@@34) $generated@@34)
 :pattern ( ($generated@@31 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@32 $generated@@35 $generated@@37) ($generated@@32 ($generated@@31 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36) ($generated@@32 $generated@@35 $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@32 ($generated@@31 $generated@@38 $generated@@39) $generated@@40)  (or (= $generated@@40 $generated@@39) ($generated@@32 $generated@@38 $generated@@40)))
 :pattern ( ($generated@@32 ($generated@@31 $generated@@38 $generated@@39) $generated@@40))
)))
(assert ($generated@@41 $generated@@42))
(assert ($generated@@41 $generated@@43))
(assert (forall (($generated@@45 T@U) ) (!  (not ($generated@@32 $generated@@44 $generated@@45))
 :pattern ( ($generated@@32 $generated@@44 $generated@@45))
)))
(assert (= ($generated@@14 $generated@@47) 3))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@50 $generated@@42)  (or (= $generated@@50 $generated@@48) (= ($generated@@49 $generated@@50) $generated@@42)))
 :pattern ( ($generated@@46 $generated@@47 $generated@@50 $generated@@42))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@51 $generated@@43)  (or (= $generated@@51 $generated@@48) (= ($generated@@49 $generated@@51) $generated@@43)))
 :pattern ( ($generated@@46 $generated@@47 $generated@@51 $generated@@43))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@52 $generated@@55 $generated@@42 $generated@@56) ($generated@@53 $generated@@56)) ($generated@@52 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@52 $generated@@55 $generated@@42 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@52 $generated@@57 $generated@@43 $generated@@58) ($generated@@53 $generated@@58)) ($generated@@52 $generated@@57 $generated@@54 $generated@@58))
 :pattern ( ($generated@@52 $generated@@57 $generated@@43 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@59 $generated@@47 $generated@@61 $generated@@60 $generated@@62) ($generated@@59 $generated@@47 $generated@@61 $generated@@54 $generated@@62))
 :pattern ( ($generated@@59 $generated@@47 $generated@@61 $generated@@60 $generated@@62))
 :pattern ( ($generated@@59 $generated@@47 $generated@@61 $generated@@54 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@59 $generated@@47 $generated@@64 $generated@@63 $generated@@65) ($generated@@59 $generated@@47 $generated@@64 $generated@@42 $generated@@65))
 :pattern ( ($generated@@59 $generated@@47 $generated@@64 $generated@@63 $generated@@65))
 :pattern ( ($generated@@59 $generated@@47 $generated@@64 $generated@@42 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@59 $generated@@47 $generated@@67 $generated@@66 $generated@@68) ($generated@@59 $generated@@47 $generated@@67 $generated@@43 $generated@@68))
 :pattern ( ($generated@@59 $generated@@47 $generated@@67 $generated@@66 $generated@@68))
 :pattern ( ($generated@@59 $generated@@47 $generated@@67 $generated@@43 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@59 $generated@@47 $generated@@70 $generated@@69 $generated@@71) ($generated@@59 $generated@@47 $generated@@70 $generated@@63 $generated@@71))
 :pattern ( ($generated@@59 $generated@@47 $generated@@70 $generated@@69 $generated@@71))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@73 $generated@@80 $generated@@81 ($generated@@77 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@84) $generated@@82)
 :weight 0
)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (or (= $generated@@89 $generated@@90) (= ($generated@@73 $generated@@85 $generated@@86 ($generated@@77 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@87) $generated@@90) ($generated@@73 $generated@@85 $generated@@86 $generated@@88 $generated@@90)))
 :weight 0
))) (= ($generated@@14 $generated@@74) 4)) (= ($generated@@14 $generated@@75) 5)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@14 ($generated@@76 $generated@@91 $generated@@92)) 6))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@78 ($generated@@76 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@76 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@76 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@59 $generated@@47 $generated@@97 $generated@@54 $generated@@98)  (or (= $generated@@97 $generated@@48) ($generated@@19 ($generated@@72 $generated@@15 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@98 $generated@@97) $generated@@2)))))
 :pattern ( ($generated@@59 $generated@@47 $generated@@97 $generated@@54 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@59 $generated@@47 $generated@@99 $generated@@42 $generated@@100)  (or (= $generated@@99 $generated@@48) ($generated@@19 ($generated@@72 $generated@@15 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@100 $generated@@99) $generated@@2)))))
 :pattern ( ($generated@@59 $generated@@47 $generated@@99 $generated@@42 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@59 $generated@@47 $generated@@101 $generated@@43 $generated@@102)  (or (= $generated@@101 $generated@@48) ($generated@@19 ($generated@@72 $generated@@15 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@102 $generated@@101) $generated@@2)))))
 :pattern ( ($generated@@59 $generated@@47 $generated@@101 $generated@@43 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@103 $generated@@104 $generated@@105) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@19 ($generated@@72 $generated@@15 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@104 $generated@@106) $generated@@2))) ($generated@@19 ($generated@@72 $generated@@15 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@105 $generated@@106) $generated@@2))))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@105 $generated@@106) $generated@@2))
)))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@108 Int) ) (! (= ($generated@@107 $generated@@108) $generated@@108)
 :pattern ( ($generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@109 $generated@@111 $generated@@110) $generated@@110)
 :pattern ( ($generated@@109 $generated@@111 $generated@@110))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@116 T@U) ) (!  (=> (or ($generated@@114 ($generated@@109 $generated@@47 $generated@@116)) (and (< 1 $generated@@112) (and ($generated@@46 $generated@@47 $generated@@116 $generated@@60) ($generated@@46 $generated@@47 ($generated@@109 $generated@@47 $generated@@116) $generated@@63)))) (= ($generated@@113 ($generated@@109 $generated@@47 $generated@@116)) (ite ($generated@@46 $generated@@47 ($generated@@109 $generated@@47 $generated@@116) $generated@@66) (= ($generated@@107 ($generated@@115 1 ($generated@@107 0))) ($generated@@107 0)) true)))
 :weight 3
 :pattern ( ($generated@@113 ($generated@@109 $generated@@47 $generated@@116)))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@117 $generated@@119 ($generated@@72 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@72 $generated@@119 $generated@@118))
)))
(assert (= ($generated@@14 $generated@@120) 7))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@46 $generated@@120 $generated@@123 ($generated@@121 $generated@@124)) (forall (($generated@@125 T@U) ) (!  (=> ($generated@@32 $generated@@123 $generated@@125) ($generated@@122 $generated@@125 $generated@@124))
 :pattern ( ($generated@@32 $generated@@123 $generated@@125))
)))
 :pattern ( ($generated@@46 $generated@@120 $generated@@123 ($generated@@121 $generated@@124)))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@52 ($generated@@117 $generated@@129 $generated@@126) $generated@@127 $generated@@128) ($generated@@59 $generated@@129 $generated@@126 $generated@@127 $generated@@128))
 :pattern ( ($generated@@52 ($generated@@117 $generated@@129 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@103 $generated@@130 $generated@@131) (=> ($generated@@52 $generated@@132 $generated@@133 $generated@@130) ($generated@@52 $generated@@132 $generated@@133 $generated@@131)))
 :pattern ( ($generated@@103 $generated@@130 $generated@@131) ($generated@@52 $generated@@132 $generated@@133 $generated@@130))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (!  (=> ($generated@@103 $generated@@134 $generated@@135) (=> ($generated@@59 $generated@@138 $generated@@136 $generated@@137 $generated@@134) ($generated@@59 $generated@@138 $generated@@136 $generated@@137 $generated@@135)))
 :pattern ( ($generated@@103 $generated@@134 $generated@@135) ($generated@@59 $generated@@138 $generated@@136 $generated@@137 $generated@@134))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@122 $generated@@139 $generated@@63) (and (= ($generated@@117 $generated@@47 ($generated@@72 $generated@@47 $generated@@139)) $generated@@139) ($generated@@46 $generated@@47 ($generated@@72 $generated@@47 $generated@@139) $generated@@63)))
 :pattern ( ($generated@@122 $generated@@139 $generated@@63))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@122 $generated@@140 $generated@@60) (and (= ($generated@@117 $generated@@47 ($generated@@72 $generated@@47 $generated@@140)) $generated@@140) ($generated@@46 $generated@@47 ($generated@@72 $generated@@47 $generated@@140) $generated@@60)))
 :pattern ( ($generated@@122 $generated@@140 $generated@@60))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@122 $generated@@141 $generated@@66) (and (= ($generated@@117 $generated@@47 ($generated@@72 $generated@@47 $generated@@141)) $generated@@141) ($generated@@46 $generated@@47 ($generated@@72 $generated@@47 $generated@@141) $generated@@66)))
 :pattern ( ($generated@@122 $generated@@141 $generated@@66))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@122 $generated@@142 $generated@@42) (and (= ($generated@@117 $generated@@47 ($generated@@72 $generated@@47 $generated@@142)) $generated@@142) ($generated@@46 $generated@@47 ($generated@@72 $generated@@47 $generated@@142) $generated@@42)))
 :pattern ( ($generated@@122 $generated@@142 $generated@@42))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@122 $generated@@143 $generated@@43) (and (= ($generated@@117 $generated@@47 ($generated@@72 $generated@@47 $generated@@143)) $generated@@143) ($generated@@46 $generated@@47 ($generated@@72 $generated@@47 $generated@@143) $generated@@43)))
 :pattern ( ($generated@@122 $generated@@143 $generated@@43))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@122 $generated@@144 $generated@@69) (and (= ($generated@@117 $generated@@47 ($generated@@72 $generated@@47 $generated@@144)) $generated@@144) ($generated@@46 $generated@@47 ($generated@@72 $generated@@47 $generated@@144) $generated@@69)))
 :pattern ( ($generated@@122 $generated@@144 $generated@@69))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@122 $generated@@145 $generated@@54) (and (= ($generated@@117 $generated@@47 ($generated@@72 $generated@@47 $generated@@145)) $generated@@145) ($generated@@46 $generated@@47 ($generated@@72 $generated@@47 $generated@@145) $generated@@54)))
 :pattern ( ($generated@@122 $generated@@145 $generated@@54))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@146 $generated@@60)  (and ($generated@@46 $generated@@47 $generated@@146 $generated@@54) (or (not (= $generated@@146 $generated@@48)) (not true))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@146 $generated@@60))
 :pattern ( ($generated@@46 $generated@@47 $generated@@146 $generated@@54))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@147 $generated@@63)  (and ($generated@@46 $generated@@47 $generated@@147 $generated@@42) (or (not (= $generated@@147 $generated@@48)) (not true))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@147 $generated@@63))
 :pattern ( ($generated@@46 $generated@@47 $generated@@147 $generated@@42))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@148 $generated@@66)  (and ($generated@@46 $generated@@47 $generated@@148 $generated@@43) (or (not (= $generated@@148 $generated@@48)) (not true))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@148 $generated@@66))
 :pattern ( ($generated@@46 $generated@@47 $generated@@148 $generated@@43))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@151 T@U) ) (!  (=> (or ($generated@@150 $generated@@151) (and (< 1 $generated@@112) ($generated@@46 $generated@@47 $generated@@151 $generated@@63))) (= ($generated@@149 $generated@@151) ($generated@@19 ($generated@@109 $generated@@15 ($generated@@18 false)))))
 :pattern ( ($generated@@149 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@59 $generated@@47 $generated@@152 $generated@@42 $generated@@153) ($generated@@59 $generated@@47 $generated@@152 $generated@@54 $generated@@153))
 :pattern ( ($generated@@59 $generated@@47 $generated@@152 $generated@@42 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@59 $generated@@47 $generated@@154 $generated@@43 $generated@@155) ($generated@@59 $generated@@47 $generated@@154 $generated@@54 $generated@@155))
 :pattern ( ($generated@@59 $generated@@47 $generated@@154 $generated@@43 $generated@@155))
)))
(assert (forall (($generated@@156 Int) ($generated@@157 Int) ) (! (= ($generated@@115 $generated@@156 $generated@@157) (div $generated@@156 $generated@@157))
 :pattern ( ($generated@@115 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (or (not (= $generated@@158 $generated@@160)) (not true)) (=> (and ($generated@@103 $generated@@158 $generated@@159) ($generated@@103 $generated@@159 $generated@@160)) ($generated@@103 $generated@@158 $generated@@160)))
 :pattern ( ($generated@@103 $generated@@158 $generated@@159) ($generated@@103 $generated@@159 $generated@@160))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@161 T@U) ) (!  (=> (or ($generated@@150 ($generated@@109 $generated@@47 $generated@@161)) (and (< 1 $generated@@112) ($generated@@46 $generated@@47 $generated@@161 $generated@@63))) (= ($generated@@149 ($generated@@109 $generated@@47 $generated@@161)) ($generated@@19 ($generated@@109 $generated@@15 ($generated@@18 false)))))
 :weight 3
 :pattern ( ($generated@@149 ($generated@@109 $generated@@47 $generated@@161)))
))))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@122 $generated@@162 $generated) (and (= ($generated@@117 $generated@@16 ($generated@@72 $generated@@16 $generated@@162)) $generated@@162) ($generated@@46 $generated@@16 ($generated@@72 $generated@@16 $generated@@162) $generated)))
 :pattern ( ($generated@@122 $generated@@162 $generated))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@122 ($generated@@117 $generated@@165 $generated@@163) $generated@@164) ($generated@@46 $generated@@165 $generated@@163 $generated@@164))
 :pattern ( ($generated@@122 ($generated@@117 $generated@@165 $generated@@163) $generated@@164))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@166 T@U) ) (!  (=> (or ($generated@@114 $generated@@166) (and (< 1 $generated@@112) (and ($generated@@46 $generated@@47 $generated@@166 $generated@@60) ($generated@@46 $generated@@47 $generated@@166 $generated@@63)))) (= ($generated@@113 $generated@@166) (ite ($generated@@46 $generated@@47 $generated@@166 $generated@@66) (= ($generated@@107 ($generated@@115 1 ($generated@@107 0))) ($generated@@107 0)) true)))
 :pattern ( ($generated@@113 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@59 $generated@@120 $generated@@167 ($generated@@121 $generated@@168) $generated@@169) (forall (($generated@@170 T@U) ) (!  (=> ($generated@@32 $generated@@167 $generated@@170) ($generated@@52 $generated@@170 $generated@@168 $generated@@169))
 :pattern ( ($generated@@32 $generated@@167 $generated@@170))
)))
 :pattern ( ($generated@@59 $generated@@120 $generated@@167 ($generated@@121 $generated@@168) $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@121 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@121 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@30 ($generated@@121 $generated@@173)) $generated@@1)
 :pattern ( ($generated@@121 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@72 $generated@@175 ($generated@@117 $generated@@175 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@117 $generated@@175 $generated@@174))
)))
(assert  (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@176 $generated@@179 $generated@@180 $generated@@181 ($generated@@178 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@184 $generated@@185) $generated@@182)
 :weight 0
)) (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@176 $generated@@186 $generated@@187 $generated@@188 ($generated@@178 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@176 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@176 $generated@@195 $generated@@196 $generated@@197 ($generated@@178 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@176 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@19 ($generated@@176 $generated@@47 $generated@@74 $generated@@15 ($generated@@177 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (or (not (= $generated@@208 $generated@@204)) (not true)) ($generated@@19 ($generated@@72 $generated@@15 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@205 $generated@@208) $generated@@206)))) $generated@@207))
 :pattern ( ($generated@@176 $generated@@47 $generated@@74 $generated@@15 ($generated@@177 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@122 $generated@@210 ($generated@@121 $generated@@211)) (and (= ($generated@@117 $generated@@120 ($generated@@72 $generated@@120 $generated@@210)) $generated@@210) ($generated@@46 $generated@@120 ($generated@@72 $generated@@120 $generated@@210) ($generated@@121 $generated@@211))))
 :pattern ( ($generated@@122 $generated@@210 ($generated@@121 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ) (!  (=> ($generated@@46 $generated@@47 $generated@@212 $generated@@42) ($generated@@46 $generated@@47 $generated@@212 $generated@@54))
 :pattern ( ($generated@@46 $generated@@47 $generated@@212 $generated@@42))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> ($generated@@122 $generated@@213 $generated@@42) ($generated@@122 $generated@@213 $generated@@54))
 :pattern ( ($generated@@122 $generated@@213 $generated@@42))
)))
(assert (forall (($generated@@214 T@U) ) (!  (=> ($generated@@46 $generated@@47 $generated@@214 $generated@@43) ($generated@@46 $generated@@47 $generated@@214 $generated@@54))
 :pattern ( ($generated@@46 $generated@@47 $generated@@214 $generated@@43))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> ($generated@@122 $generated@@215 $generated@@43) ($generated@@122 $generated@@215 $generated@@54))
 :pattern ( ($generated@@122 $generated@@215 $generated@@43))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> ($generated@@53 ($generated@@77 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@216 $generated@@217 ($generated@@77 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@216 $generated@@217) $generated@@218 $generated@@219))) ($generated@@103 $generated@@216 ($generated@@77 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@216 $generated@@217 ($generated@@77 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@216 $generated@@217) $generated@@218 $generated@@219))))
 :pattern ( ($generated@@77 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@216 $generated@@217 ($generated@@77 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@216 $generated@@217) $generated@@218 $generated@@219)))
)))
(assert (= ($generated@@30 $generated@@63) $generated@@3))
(assert (= ($generated@@220 $generated@@63) $generated@@10))
(assert (= ($generated@@30 $generated@@60) $generated@@4))
(assert (= ($generated@@220 $generated@@60) $generated@@11))
(assert (= ($generated@@30 $generated@@66) $generated@@5))
(assert (= ($generated@@220 $generated@@66) $generated@@12))
(assert (= ($generated@@30 $generated@@42) $generated@@6))
(assert (= ($generated@@220 $generated@@42) $generated@@10))
(assert (= ($generated@@30 $generated@@43) $generated@@7))
(assert (= ($generated@@220 $generated@@43) $generated@@12))
(assert (= ($generated@@30 $generated@@69) $generated@@8))
(assert (= ($generated@@220 $generated@@69) $generated@@13))
(assert (= ($generated@@30 $generated@@54) $generated@@9))
(assert (= ($generated@@220 $generated@@54) $generated@@11))
(assert (forall (($generated@@221 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@221 $generated@@54)  (or (= $generated@@221 $generated@@48) ($generated@@41 ($generated@@49 $generated@@221))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@221 $generated@@54))
)))
(assert (forall (($generated@@222 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@222 $generated@@69)  (and ($generated@@46 $generated@@47 $generated@@222 $generated@@63) ($generated@@149 $generated@@222)))
 :pattern ( ($generated@@46 $generated@@47 $generated@@222 $generated@@69))
)))
(assert (forall (($generated@@223 Int) ) (! (= ($generated@@117 $generated@@16 ($generated@@20 ($generated@@107 $generated@@223))) ($generated@@109 $generated@@75 ($generated@@117 $generated@@16 ($generated@@20 $generated@@223))))
 :pattern ( ($generated@@117 $generated@@16 ($generated@@20 ($generated@@107 $generated@@223))))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (= ($generated@@117 $generated@@225 ($generated@@109 $generated@@225 $generated@@224)) ($generated@@109 $generated@@75 ($generated@@117 $generated@@225 $generated@@224)))
 :pattern ( ($generated@@117 $generated@@225 ($generated@@109 $generated@@225 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! ($generated@@59 $generated@@16 $generated@@227 $generated $generated@@226)
 :pattern ( ($generated@@59 $generated@@16 $generated@@227 $generated $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! ($generated@@46 $generated@@16 $generated@@228 $generated)
 :pattern ( ($generated@@46 $generated@@16 $generated@@228 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@229 () Bool)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () Bool)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Bool)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () Bool)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () Bool)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@250  (=> (and (= $generated@@229 (forall (($generated@@251 Int) ) (!  (=> (<= ($generated@@107 0) $generated@@251) (=> ($generated@@32 $generated@@230 ($generated@@117 $generated@@16 ($generated@@20 $generated@@251))) (> $generated@@251 1)))
 :pattern ( ($generated@@32 $generated@@230 ($generated@@117 $generated@@16 ($generated@@20 $generated@@251))))
))) (= (ControlFlow 0 2) (- 0 1))) $generated@@231)))
(let (($generated@@252  (=> (and (not ($generated@@32 $generated@@230 ($generated@@117 $generated@@16 ($generated@@20 $generated@@232)))) (= (ControlFlow 0 5) 2)) $generated@@250)))
(let (($generated@@253  (=> (and ($generated@@32 $generated@@230 ($generated@@117 $generated@@16 ($generated@@20 $generated@@232))) (= (ControlFlow 0 4) 2)) $generated@@250)))
(let (($generated@@254  (=> (<= ($generated@@107 0) $generated@@232) (and (=> (= (ControlFlow 0 6) 4) $generated@@253) (=> (= (ControlFlow 0 6) 5) $generated@@252)))))
(let (($generated@@255  (=> (and (< $generated@@232 ($generated@@107 0)) (= (ControlFlow 0 3) 2)) $generated@@250)))
(let (($generated@@256  (=> (forall (($generated@@257 T@U) ) (!  (=> ($generated@@46 $generated@@47 $generated@@257 $generated@@63) (=> ($generated@@32 $generated@@233 ($generated@@117 $generated@@47 $generated@@257)) ($generated@@114 $generated@@257)))
 :pattern ( ($generated@@113 $generated@@257))
 :pattern ( ($generated@@32 $generated@@233 ($generated@@117 $generated@@47 $generated@@257)))
)) (=> (and (= $generated@@231 (forall (($generated@@258 T@U) ) (!  (=> ($generated@@46 $generated@@47 $generated@@258 $generated@@63) (=> ($generated@@32 $generated@@233 ($generated@@117 $generated@@47 $generated@@258)) ($generated@@113 $generated@@258)))
 :pattern ( ($generated@@113 $generated@@258))
 :pattern ( ($generated@@32 $generated@@233 ($generated@@117 $generated@@47 $generated@@258)))
))) (= $generated@@230 ($generated@@109 $generated@@120 ($generated@@31 ($generated@@31 ($generated@@31 $generated@@44 ($generated@@117 $generated@@16 ($generated@@20 ($generated@@107 2)))) ($generated@@117 $generated@@16 ($generated@@20 ($generated@@107 3)))) ($generated@@117 $generated@@16 ($generated@@20 ($generated@@107 4))))))) (and (=> (= (ControlFlow 0 7) 6) $generated@@254) (=> (= (ControlFlow 0 7) 3) $generated@@255))))))
(let (($generated@@259  (=> (and (not ($generated@@32 $generated@@233 ($generated@@117 $generated@@47 $generated@@234))) (= (ControlFlow 0 11) 7)) $generated@@256)))
(let (($generated@@260  (=> (and ($generated@@32 $generated@@233 ($generated@@117 $generated@@47 $generated@@234)) ($generated@@59 $generated@@47 $generated@@234 $generated@@60 $generated@@235)) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@46 $generated@@47 $generated@@234 $generated@@63)) (=> ($generated@@46 $generated@@47 $generated@@234 $generated@@63) (=> (and ($generated@@114 $generated@@234) (= (ControlFlow 0 9) 7)) $generated@@256))))))
(let (($generated@@261  (=> (and ($generated@@46 $generated@@47 $generated@@234 $generated@@63) ($generated@@59 $generated@@47 $generated@@234 $generated@@63 $generated@@235)) (and (=> (= (ControlFlow 0 12) 9) $generated@@260) (=> (= (ControlFlow 0 12) 11) $generated@@259)))))
(let (($generated@@262  (=> (and (not (and ($generated@@46 $generated@@47 $generated@@234 $generated@@63) ($generated@@59 $generated@@47 $generated@@234 $generated@@63 $generated@@235))) (= (ControlFlow 0 8) 7)) $generated@@256)))
(let (($generated@@263  (=> (= $generated@@236 ($generated@@177 $generated@@48 $generated@@237 $generated@@2 false)) (=> (and (and (or (not (= $generated@@238 $generated@@48)) (not true)) ($generated@@46 $generated@@47 $generated@@238 $generated@@42)) (and (not ($generated@@19 ($generated@@72 $generated@@15 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@237 $generated@@238) $generated@@2)))) (= $generated@@239 ($generated@@77 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@237 $generated@@238 ($generated@@77 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@237 $generated@@238) $generated@@2 ($generated@@117 $generated@@15 ($generated@@18 true))))))) (=> (and (and (and ($generated@@53 $generated@@239) ($generated@@240 $generated@@239)) (and (or (not (= $generated@@241 $generated@@48)) (not true)) ($generated@@46 $generated@@47 $generated@@241 $generated@@43))) (and (and (not ($generated@@19 ($generated@@72 $generated@@15 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@239 $generated@@241) $generated@@2)))) (= $generated@@235 ($generated@@77 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@239 $generated@@241 ($generated@@77 $generated@@74 $generated@@75 ($generated@@73 $generated@@47 ($generated@@76 $generated@@74 $generated@@75) $generated@@239 $generated@@241) $generated@@2 ($generated@@117 $generated@@15 ($generated@@18 true)))))) (and ($generated@@53 $generated@@235) ($generated@@240 $generated@@235)))) (and (=> (= (ControlFlow 0 13) (- 0 15)) true) (and (=> (= (ControlFlow 0 13) (- 0 14)) true) (=> (and (= $generated@@233 ($generated@@31 ($generated@@31 $generated@@44 ($generated@@117 $generated@@47 $generated@@238)) ($generated@@117 $generated@@47 $generated@@241))) (= $generated@@242 ($generated@@109 $generated@@120 $generated@@44))) (and (=> (= (ControlFlow 0 13) 12) $generated@@261) (=> (= (ControlFlow 0 13) 8) $generated@@262))))))))))
(let (($generated@@264  (=> (and ($generated@@53 $generated@@237) ($generated@@240 $generated@@237)) (=> (and (and (=> $generated@@243 (and ($generated@@46 $generated@@47 $generated@@244 $generated@@63) ($generated@@59 $generated@@47 $generated@@244 $generated@@63 $generated@@237))) true) (and (=> $generated@@245 (and ($generated@@46 $generated@@47 $generated@@246 $generated@@66) ($generated@@59 $generated@@47 $generated@@246 $generated@@66 $generated@@237))) true)) (=> (and (and (and (and ($generated@@46 $generated@@120 $generated@@247 ($generated@@121 $generated@@60)) ($generated@@59 $generated@@120 $generated@@247 ($generated@@121 $generated@@60) $generated@@237)) true) (and (and ($generated@@46 $generated@@120 $generated@@248 ($generated@@121 $generated@@69)) ($generated@@59 $generated@@120 $generated@@248 ($generated@@121 $generated@@69) $generated@@237)) true)) (and (and (and ($generated@@46 $generated@@120 $generated@@249 ($generated@@121 $generated)) ($generated@@59 $generated@@120 $generated@@249 ($generated@@121 $generated) $generated@@237)) true) (and (= 3 $generated@@112) (= (ControlFlow 0 16) 13)))) $generated@@263)))))
$generated@@264)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
