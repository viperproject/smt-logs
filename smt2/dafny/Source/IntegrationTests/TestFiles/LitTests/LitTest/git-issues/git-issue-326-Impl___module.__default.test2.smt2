(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U Int) T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@80 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 Int) ) (!  (=> (and (<= 0 $generated@@26) (<= $generated@@26 ($generated@@20 $generated@@24))) (= ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26) ($generated@@23 ($generated@@22 $generated@@24 $generated@@26) $generated@@25)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 Int) ) (!  (=> (= $generated@@28 0) (= ($generated@@22 $generated@@27 $generated@@28) $generated@@27))
 :pattern ( ($generated@@22 $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 Int) ) (! (= ($generated@@29 $generated@@30) $generated@@30)
 :pattern ( ($generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@T) ) (! (= ($generated@@31 $generated@@33 $generated@@32) $generated@@32)
 :pattern ( ($generated@@31 $generated@@33 $generated@@32))
)))
(assert (= ($generated@@3 $generated@@35) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and ($generated@@34 $generated@@35 $generated@@38 ($generated@@36 $generated@@40)) ($generated@@37 $generated@@39 $generated@@40)) ($generated@@34 $generated@@35 ($generated@@23 $generated@@38 $generated@@39) ($generated@@36 $generated@@40)))
 :pattern ( ($generated@@34 $generated@@35 ($generated@@23 $generated@@38 $generated@@39) ($generated@@36 $generated@@40)))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (and (<= 0 $generated@@42) (<= $generated@@42 ($generated@@20 $generated@@41))) (= ($generated@@20 ($generated@@22 $generated@@41 $generated@@42)) (- ($generated@@20 $generated@@41) $generated@@42)))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@41 $generated@@42)))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 ($generated@@43 $generated@@46 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@43 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@20 ($generated@@23 $generated@@47 $generated@@48)) (+ 1 ($generated@@20 $generated@@47)))
 :pattern ( ($generated@@23 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@49 ($generated@@44 $generated@@54 $generated@@51) $generated@@52 $generated@@53) ($generated@@50 $generated@@54 $generated@@51 $generated@@52 $generated@@53))
 :pattern ( ($generated@@49 ($generated@@44 $generated@@54 $generated@@51) $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 Int) ($generated@@58 Int) ) (!  (=> (and (and (<= 0 $generated@@57) (<= 0 $generated@@58)) (< $generated@@58 (- ($generated@@20 $generated@@56) $generated@@57))) (= ($generated@@55 ($generated@@22 $generated@@56 $generated@@57) $generated@@58) ($generated@@55 $generated@@56 (+ $generated@@58 $generated@@57))))
 :weight 25
 :pattern ( ($generated@@55 ($generated@@22 $generated@@56 $generated@@57) $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 Int) ($generated@@61 T@U) ) (!  (and (=> (= $generated@@60 ($generated@@20 $generated@@59)) (= ($generated@@55 ($generated@@23 $generated@@59 $generated@@61) $generated@@60) $generated@@61)) (=> (or (not (= $generated@@60 ($generated@@20 $generated@@59))) (not true)) (= ($generated@@55 ($generated@@23 $generated@@59 $generated@@61) $generated@@60) ($generated@@55 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@55 ($generated@@23 $generated@@59 $generated@@61) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@37 $generated@@62 $generated) (and (= ($generated@@44 $generated@@5 ($generated@@43 $generated@@5 $generated@@62)) $generated@@62) ($generated@@34 $generated@@5 ($generated@@43 $generated@@5 $generated@@62) $generated)))
 :pattern ( ($generated@@37 $generated@@62 $generated))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@37 ($generated@@44 $generated@@65 $generated@@63) $generated@@64) ($generated@@34 $generated@@65 $generated@@63 $generated@@64))
 :pattern ( ($generated@@37 ($generated@@44 $generated@@65 $generated@@63) $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (<= 0 ($generated@@20 $generated@@66))
 :pattern ( ($generated@@20 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@50 $generated@@35 $generated@@67 ($generated@@36 $generated@@68) $generated@@69) (forall (($generated@@70 Int) ) (!  (=> (and (<= 0 $generated@@70) (< $generated@@70 ($generated@@20 $generated@@67))) ($generated@@49 ($generated@@55 $generated@@67 $generated@@70) $generated@@68 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@70))
)))
 :pattern ( ($generated@@50 $generated@@35 $generated@@67 ($generated@@36 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 ($generated@@36 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@36 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@19 ($generated@@36 $generated@@73)) $generated@@1)
 :pattern ( ($generated@@36 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@43 $generated@@75 ($generated@@44 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@44 $generated@@75 $generated@@74))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@76 $generated@@87 $generated@@88 $generated@@89 ($generated@@83 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@92 $generated@@93) $generated@@90)
 :weight 0
)) (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@76 $generated@@94 $generated@@95 $generated@@96 ($generated@@83 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@76 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@76 $generated@@103 $generated@@104 $generated@@105 ($generated@@83 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@76 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)))) (= ($generated@@3 $generated@@77) 4)) (= ($generated@@3 $generated@@78) 5)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@80 $generated@@112 $generated@@113 ($generated@@84 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@114) $generated@@116) $generated@@114)
 :weight 0
))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@80 $generated@@117 $generated@@118 ($generated@@84 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@80 $generated@@117 $generated@@118 $generated@@120 $generated@@122)))
 :weight 0
))) (= ($generated@@3 $generated@@81) 6)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@3 ($generated@@82 $generated@@123 $generated@@124)) 7))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@82 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@82 $generated@@127 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Bool) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@8 ($generated@@76 $generated@@77 $generated@@78 $generated@@4 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))  (=> (and (or (not (= $generated@@133 $generated@@129)) (not true)) ($generated@@8 ($generated@@43 $generated@@4 ($generated@@80 $generated@@78 $generated@@81 ($generated@@80 $generated@@77 ($generated@@82 $generated@@78 $generated@@81) $generated@@130 $generated@@133) $generated@@131)))) $generated@@132))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78 $generated@@4 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (and (= ($generated@@135 ($generated@@23 $generated@@137 $generated@@138)) $generated@@137) (= ($generated@@136 ($generated@@23 $generated@@137 $generated@@138)) $generated@@138))
 :pattern ( ($generated@@23 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@37 $generated@@139 ($generated@@36 $generated@@140)) (and (= ($generated@@44 $generated@@35 ($generated@@43 $generated@@35 $generated@@139)) $generated@@139) ($generated@@34 $generated@@35 ($generated@@43 $generated@@35 $generated@@139) ($generated@@36 $generated@@140))))
 :pattern ( ($generated@@37 $generated@@139 ($generated@@36 $generated@@140)))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 Int) ($generated@@143 Int) ) (!  (=> (and (and (<= 0 $generated@@142) (<= $generated@@142 $generated@@143)) (< $generated@@143 ($generated@@20 $generated@@141))) (= ($generated@@55 ($generated@@22 $generated@@141 $generated@@142) (- $generated@@143 $generated@@142)) ($generated@@55 $generated@@141 $generated@@143)))
 :weight 25
 :pattern ( ($generated@@55 $generated@@141 $generated@@143) ($generated@@22 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 Int) ($generated@@146 Int) ) (!  (=> (and (and (<= 0 $generated@@145) (<= 0 $generated@@146)) (<= (+ $generated@@145 $generated@@146) ($generated@@20 $generated@@144))) (= ($generated@@22 ($generated@@22 $generated@@144 $generated@@145) $generated@@146) ($generated@@22 $generated@@144 (+ $generated@@145 $generated@@146))))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@144 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@44 $generated@@5 ($generated@@9 ($generated@@29 $generated@@147))) ($generated@@31 $generated@@81 ($generated@@44 $generated@@5 ($generated@@9 $generated@@147))))
 :pattern ( ($generated@@44 $generated@@5 ($generated@@9 ($generated@@29 $generated@@147))))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@44 $generated@@149 ($generated@@31 $generated@@149 $generated@@148)) ($generated@@31 $generated@@81 ($generated@@44 $generated@@149 $generated@@148)))
 :pattern ( ($generated@@44 $generated@@149 ($generated@@31 $generated@@149 $generated@@148)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> (= ($generated@@20 $generated@@150) 0) (= $generated@@150 $generated@@21))
 :pattern ( ($generated@@20 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! ($generated@@50 $generated@@5 $generated@@152 $generated $generated@@151)
 :pattern ( ($generated@@50 $generated@@5 $generated@@152 $generated $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@153 ($generated@@36 $generated@@154)) (forall (($generated@@155 Int) ) (!  (=> (and (<= 0 $generated@@155) (< $generated@@155 ($generated@@20 $generated@@153))) ($generated@@37 ($generated@@55 $generated@@153 $generated@@155) $generated@@154))
 :pattern ( ($generated@@55 $generated@@153 $generated@@155))
)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@153 ($generated@@36 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@34 $generated@@5 $generated@@156 $generated)
 :pattern ( ($generated@@34 $generated@@5 $generated@@156 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@166  (=> (= $generated@@157 ($generated@@79 $generated@@158 $generated@@159 $generated@@2 false)) (=> (and (= $generated@@160 ($generated@@31 $generated@@35 ($generated@@23 ($generated@@23 ($generated@@23 $generated@@21 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@29 1)))) ($generated@@44 $generated@@5 ($generated@@9 ($generated@@29 2)))) ($generated@@44 $generated@@5 ($generated@@9 ($generated@@29 3)))))) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@29 (- 0 1))) (<= ($generated@@29 (- 0 1)) ($generated@@20 $generated@@160)))))))
(let (($generated@@167  (=> (and ($generated@@161 $generated@@159) ($generated@@162 $generated@@159)) (=> (and (and ($generated@@34 $generated@@35 $generated@@163 ($generated@@36 $generated)) ($generated@@50 $generated@@35 $generated@@163 ($generated@@36 $generated) $generated@@159)) true) (=> (and (and (and ($generated@@34 $generated@@35 $generated@@164 ($generated@@36 $generated)) ($generated@@50 $generated@@35 $generated@@164 ($generated@@36 $generated) $generated@@159)) true) (and (= 0 $generated@@165) (= (ControlFlow 0 3) 2))) $generated@@166)))))
$generated@@167)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
