(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@98 () Int)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@126 (T@U) Int)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (< $generated@@31 ($generated@@26 $generated@@30))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@30 $generated@@31))) ($generated@@27 ($generated@@25 $generated@@30))))
 :pattern ( ($generated@@24 $generated@@30 $generated@@31) ($generated@@25 $generated@@30))
)))
(assert (= ($generated@@26 $generated@@32) 0))
(assert (= ($generated@@33 $generated@@34) $generated@@5))
(assert ($generated@@35 $generated@@29 $generated@@34 $generated@@36))
(assert  (and (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@38 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@38 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@38 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@7 $generated@@39) 4)) (= ($generated@@7 $generated@@40) 5)) (= ($generated@@7 $generated@@41) 6)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@7 ($generated@@42 $generated@@57 $generated@@58)) 7))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@37 $generated@@63 $generated@@64) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@12 ($generated@@28 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@63 $generated@@65) $generated@@2))) ($generated@@12 ($generated@@28 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@64 $generated@@65) $generated@@2))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@64 $generated@@65) $generated@@2))
)))
 :pattern ( ($generated@@37 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@66 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@33 $generated@@72) $generated@@4))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 $generated@@74) (= ($generated@@33 $generated@@74) $generated@@5))
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@28 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@28 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@73 $generated@@78) (= $generated@@78 $generated@@34))
 :pattern ( ($generated@@73 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@71 $generated@@79) (exists (($generated@@80 T@U) ) (= $generated@@79 ($generated@@25 $generated@@80))))
 :pattern ( ($generated@@71 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@81 ($generated@@75 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@82 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@81 ($generated@@75 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@37 $generated@@87 $generated@@88) (=> ($generated@@81 $generated@@89 $generated@@90 $generated@@87) ($generated@@81 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@37 $generated@@87 $generated@@88) ($generated@@81 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@37 $generated@@91 $generated@@92) (=> ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@37 $generated@@91 $generated@@92) ($generated@@82 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@96 $generated@@97 $generated@@36) (and (= ($generated@@75 $generated@@29 ($generated@@28 $generated@@29 $generated@@97)) $generated@@97) ($generated@@35 $generated@@29 ($generated@@28 $generated@@29 $generated@@97) $generated@@36)))
 :pattern ( ($generated@@96 $generated@@97 $generated@@36))
)))
(assert  (=> (<= 0 $generated@@98) (forall (($generated@@101 T@U) ) (!  (=> (or ($generated@@100 $generated@@101) (and (< 0 $generated@@98) ($generated@@35 $generated@@29 $generated@@101 $generated@@36))) (= ($generated@@99 $generated@@101) ($generated@@71 $generated@@101)))
 :pattern ( ($generated@@99 $generated@@101))
))))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@35 $generated@@29 $generated@@102 $generated@@36) (or ($generated@@71 $generated@@102) ($generated@@73 $generated@@102)))
 :pattern ( ($generated@@73 $generated@@102) ($generated@@35 $generated@@29 $generated@@102 $generated@@36))
 :pattern ( ($generated@@71 $generated@@102) ($generated@@35 $generated@@29 $generated@@102 $generated@@36))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or (not (= $generated@@103 $generated@@105)) (not true)) (=> (and ($generated@@37 $generated@@103 $generated@@104) ($generated@@37 $generated@@104 $generated@@105)) ($generated@@37 $generated@@103 $generated@@105)))
 :pattern ( ($generated@@37 $generated@@103 $generated@@104) ($generated@@37 $generated@@104 $generated@@105))
)))
(assert (= ($generated@@7 $generated@@106) 8))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@96 $generated@@107 $generated) (and (= ($generated@@75 $generated@@106 ($generated@@28 $generated@@106 $generated@@107)) $generated@@107) ($generated@@35 $generated@@106 ($generated@@28 $generated@@106 $generated@@107) $generated)))
 :pattern ( ($generated@@96 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@96 ($generated@@75 $generated@@110 $generated@@108) $generated@@109) ($generated@@35 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@96 ($generated@@75 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (! (<= 0 ($generated@@26 $generated@@111))
 :pattern ( ($generated@@26 $generated@@111))
)))
(assert (= ($generated@@7 $generated@@112) 9))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@82 $generated@@112 $generated@@114 ($generated@@113 $generated@@115) $generated@@116) (forall (($generated@@117 Int) ) (!  (=> (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@26 $generated@@114))) ($generated@@81 ($generated@@24 $generated@@114 $generated@@117) $generated@@115 $generated@@116))
 :pattern ( ($generated@@24 $generated@@114 $generated@@117))
)))
 :pattern ( ($generated@@82 $generated@@112 $generated@@114 ($generated@@113 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@113 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@113 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@23 ($generated@@113 $generated@@120)) $generated@@1)
 :pattern ( ($generated@@113 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@33 ($generated@@25 $generated@@121)) $generated@@4)
 :pattern ( ($generated@@25 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@25 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@25 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@28 $generated@@125 ($generated@@75 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@75 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ) (! (< ($generated@@126 $generated@@127) ($generated@@27 ($generated@@25 $generated@@127)))
 :pattern ( ($generated@@25 $generated@@127))
)))
(assert  (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@128 $generated@@131 $generated@@132 $generated@@133 ($generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@128 $generated@@138 $generated@@139 $generated@@140 ($generated@@130 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@128 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@128 $generated@@147 $generated@@148 $generated@@149 ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@128 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@12 ($generated@@128 $generated@@41 $generated@@39 $generated@@8 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@12 ($generated@@28 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@128 $generated@@41 $generated@@39 $generated@@8 ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@96 $generated@@162 ($generated@@113 $generated@@163)) (and (= ($generated@@75 $generated@@112 ($generated@@28 $generated@@112 $generated@@162)) $generated@@162) ($generated@@35 $generated@@112 ($generated@@28 $generated@@112 $generated@@162) ($generated@@113 $generated@@163))))
 :pattern ( ($generated@@96 $generated@@162 ($generated@@113 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@164 $generated@@166) ($generated@@35 $generated@@29 $generated@@165 $generated@@36)) ($generated@@82 $generated@@29 $generated@@165 $generated@@36 $generated@@166))
 :pattern ( ($generated@@82 $generated@@29 $generated@@165 $generated@@36 $generated@@166))
)))
(assert (= ($generated@@23 $generated@@36) $generated@@3))
(assert (= ($generated@@167 $generated@@36) $generated@@6))
(assert  (=> (<= 0 $generated@@98) (forall (($generated@@168 T@U) ) (!  (=> (or ($generated@@100 ($generated@@68 $generated@@29 $generated@@168)) (and (< 0 $generated@@98) ($generated@@35 $generated@@29 $generated@@168 $generated@@36))) (= ($generated@@99 ($generated@@68 $generated@@29 $generated@@168)) ($generated@@12 ($generated@@68 $generated@@8 ($generated@@11 ($generated@@71 ($generated@@68 $generated@@29 $generated@@168)))))))
 :weight 3
 :pattern ( ($generated@@99 ($generated@@68 $generated@@29 $generated@@168)))
))))
(assert (= $generated@@34 ($generated@@68 $generated@@29 $generated@@34)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@35 $generated@@29 ($generated@@25 $generated@@169) $generated@@36) ($generated@@35 $generated@@112 $generated@@169 ($generated@@113 $generated)))
 :pattern ( ($generated@@35 $generated@@29 ($generated@@25 $generated@@169) $generated@@36))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@164 $generated@@171) (and ($generated@@71 $generated@@170) ($generated@@82 $generated@@29 $generated@@170 $generated@@36 $generated@@171))) ($generated@@82 $generated@@112 ($generated@@122 $generated@@170) ($generated@@113 $generated) $generated@@171))
 :pattern ( ($generated@@82 $generated@@112 ($generated@@122 $generated@@170) ($generated@@113 $generated) $generated@@171))
)))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@75 $generated@@9 ($generated@@13 ($generated@@66 $generated@@172))) ($generated@@68 $generated@@40 ($generated@@75 $generated@@9 ($generated@@13 $generated@@172))))
 :pattern ( ($generated@@75 $generated@@9 ($generated@@13 ($generated@@66 $generated@@172))))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@25 ($generated@@68 $generated@@112 $generated@@173)) ($generated@@68 $generated@@29 ($generated@@25 $generated@@173)))
 :pattern ( ($generated@@25 ($generated@@68 $generated@@112 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@75 $generated@@175 ($generated@@68 $generated@@175 $generated@@174)) ($generated@@68 $generated@@40 ($generated@@75 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@75 $generated@@175 ($generated@@68 $generated@@175 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> (= ($generated@@26 $generated@@176) 0) (= $generated@@176 $generated@@32))
 :pattern ( ($generated@@26 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! ($generated@@82 $generated@@106 $generated@@178 $generated $generated@@177)
 :pattern ( ($generated@@82 $generated@@106 $generated@@178 $generated $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@35 $generated@@112 $generated@@179 ($generated@@113 $generated@@180)) (forall (($generated@@181 Int) ) (!  (=> (and (<= 0 $generated@@181) (< $generated@@181 ($generated@@26 $generated@@179))) ($generated@@96 ($generated@@24 $generated@@179 $generated@@181) $generated@@180))
 :pattern ( ($generated@@24 $generated@@179 $generated@@181))
)))
 :pattern ( ($generated@@35 $generated@@112 $generated@@179 ($generated@@113 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 Int) ) (!  (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@26 $generated@@182))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@182 $generated@@183))) ($generated@@126 $generated@@182)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@182 $generated@@183))))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@35 $generated@@106 $generated@@184 $generated)
 :pattern ( ($generated@@35 $generated@@106 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@198  (=> (= (ControlFlow 0 3) (- 0 2)) (= $generated@@185 ($generated@@66 42)))))
(let (($generated@@199  (=> (and (and (not ($generated@@99 $generated@@186)) (= $generated@@187 ($generated@@66 42))) (and (= $generated@@185 $generated@@187) (= (ControlFlow 0 4) 3))) $generated@@198)))
(let (($generated@@200 true))
(let (($generated@@201  (=> (and (= $generated@@188 ($generated@@129 $generated@@189 $generated@@190 $generated@@2 false)) (= $generated@@191 ($generated@@66 0))) (=> (and (and (and ($generated@@35 $generated@@29 $generated@@192 $generated@@36) ($generated@@82 $generated@@29 $generated@@192 $generated@@36 $generated@@190)) (= $generated@@193 ($generated@@66 0))) (and (and ($generated@@35 $generated@@29 $generated@@194 $generated@@36) ($generated@@82 $generated@@29 $generated@@194 $generated@@36 $generated@@190)) (and ($generated@@164 $generated@@195) ($generated@@196 $generated@@195)))) (=> (and (and (and (and ($generated@@35 $generated@@29 $generated@@186 $generated@@36) ($generated@@82 $generated@@29 $generated@@186 $generated@@36 $generated@@195)) (=> (= $generated@@193 ($generated@@66 1)) (not ($generated@@71 $generated@@186)))) (and (=> (= $generated@@193 ($generated@@66 2)) ($generated@@71 $generated@@186)) (forall (($generated@@202 T@U) ) (!  (=> (and (or (not (= $generated@@202 $generated@@189)) (not true)) ($generated@@12 ($generated@@28 $generated@@8 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@190 $generated@@202) $generated@@2)))) (= ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@195 $generated@@202) ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@190 $generated@@202)))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@195 $generated@@202))
)))) (and (and ($generated@@37 $generated@@190 $generated@@195) ($generated@@81 ($generated@@75 $generated@@29 $generated@@186) $generated@@36 $generated@@195)) (and ($generated@@100 $generated@@186) ($generated@@100 $generated@@186)))) (and (=> (= (ControlFlow 0 5) 1) $generated@@200) (=> (= (ControlFlow 0 5) 4) $generated@@199)))))))
(let (($generated@@203  (=> (and ($generated@@164 $generated@@190) ($generated@@196 $generated@@190)) (=> (and (and (and ($generated@@35 $generated@@29 $generated@@197 $generated@@36) ($generated@@82 $generated@@29 $generated@@197 $generated@@36 $generated@@190)) true) (and (= 2 $generated@@98) (= (ControlFlow 0 6) 5))) $generated@@201))))
$generated@@203))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
