(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@37 (Int) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@151 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ) (!  (=> ($generated@@22 $generated@@24) ($generated@@23 $generated@@24))
 :pattern ( ($generated@@22 $generated@@24))
)))
(assert (= ($generated@@5 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)) ($generated@@23 $generated@@30))
 :pattern ( ($generated@@23 $generated@@30) ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@31 $generated@@35 $generated@@36) ($generated@@27 $generated@@33 $generated@@34))  (and ($generated@@32 $generated@@35 $generated@@33) ($generated@@32 $generated@@36 $generated@@34)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@31 $generated@@35 $generated@@36) ($generated@@27 $generated@@33 $generated@@34)))
)))
(assert (forall (($generated@@38 Int) ) (! (= ($generated@@37 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@41 $generated@@40))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@43 $generated@@49) (= ($generated@@42 $generated@@26 ($generated@@31 $generated@@47 $generated@@48) ($generated@@27 $generated@@45 $generated@@46) $generated@@49)  (and ($generated@@44 $generated@@47 $generated@@45 $generated@@49) ($generated@@44 $generated@@48 $generated@@46 $generated@@49))))
 :pattern ( ($generated@@42 $generated@@26 ($generated@@31 $generated@@47 $generated@@48) ($generated@@27 $generated@@45 $generated@@46) $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@23 $generated@@51) (= ($generated@@50 $generated@@51) $generated@@2))
 :pattern ( ($generated@@23 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@52 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@23 $generated@@56) (exists (($generated@@57 T@U) ($generated@@58 T@U) ) (= $generated@@56 ($generated@@31 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@23 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@44 ($generated@@53 $generated@@62 $generated@@59) $generated@@60 $generated@@61) ($generated@@42 $generated@@62 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@44 ($generated@@53 $generated@@62 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@32 $generated@@63 $generated) (and (= ($generated@@53 $generated@@7 ($generated@@52 $generated@@7 $generated@@63)) $generated@@63) ($generated@@25 $generated@@7 ($generated@@52 $generated@@7 $generated@@63) $generated)))
 :pattern ( ($generated@@32 $generated@@63 $generated))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@32 ($generated@@53 $generated@@66 $generated@@64) $generated@@65) ($generated@@25 $generated@@66 $generated@@64 $generated@@65))
 :pattern ( ($generated@@32 ($generated@@53 $generated@@66 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@50 ($generated@@31 $generated@@67 $generated@@68)) $generated@@2)
 :pattern ( ($generated@@31 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 ($generated@@27 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@27 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@72 ($generated@@27 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@27 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@31 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@31 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 ($generated@@31 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@31 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@52 $generated@@82 ($generated@@53 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@53 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (< ($generated@@83 $generated@@85) ($generated@@84 ($generated@@31 $generated@@85 $generated@@86)))
 :pattern ( ($generated@@31 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (< ($generated@@83 $generated@@88) ($generated@@84 ($generated@@31 $generated@@87 $generated@@88)))
 :pattern ( ($generated@@31 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@32 $generated@@91 ($generated@@27 $generated@@89 $generated@@90)) (and (= ($generated@@53 $generated@@26 ($generated@@52 $generated@@26 $generated@@91)) $generated@@91) ($generated@@25 $generated@@26 ($generated@@52 $generated@@26 $generated@@91) ($generated@@27 $generated@@89 $generated@@90))))
 :pattern ( ($generated@@32 $generated@@91 ($generated@@27 $generated@@89 $generated@@90)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@92 $generated@@103 $generated@@104 $generated@@105 ($generated@@99 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@92 $generated@@110 $generated@@111 $generated@@112 ($generated@@99 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@92 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@92 $generated@@119 $generated@@120 $generated@@121 ($generated@@99 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@92 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))) (= ($generated@@5 $generated@@93) 4)) (= ($generated@@5 $generated@@94) 5)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@96 $generated@@128 $generated@@129 ($generated@@100 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@96 $generated@@133 $generated@@134 ($generated@@100 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@96 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (= ($generated@@5 $generated@@97) 6)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (= ($generated@@5 ($generated@@98 $generated@@139 $generated@@140)) 7))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@98 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@102 ($generated@@98 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@98 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@10 ($generated@@92 $generated@@93 $generated@@94 $generated@@6 ($generated@@95 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@10 ($generated@@52 $generated@@6 ($generated@@96 $generated@@94 $generated@@97 ($generated@@96 $generated@@93 ($generated@@98 $generated@@94 $generated@@97) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94 $generated@@6 ($generated@@95 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (and (= ($generated@@21 ($generated@@27 $generated@@152 $generated@@153)) $generated@@3) (= ($generated@@151 ($generated@@27 $generated@@152 $generated@@153)) $generated@@4))
 :pattern ( ($generated@@27 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@83 ($generated@@53 $generated@@26 $generated@@154)) ($generated@@84 $generated@@154))
 :pattern ( ($generated@@83 ($generated@@53 $generated@@26 $generated@@154)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@43 $generated@@157) (and ($generated@@23 $generated@@155) (exists (($generated@@158 T@U) ) (! ($generated@@42 $generated@@26 $generated@@155 ($generated@@27 $generated@@156 $generated@@158) $generated@@157)
 :pattern ( ($generated@@42 $generated@@26 $generated@@155 ($generated@@27 $generated@@156 $generated@@158) $generated@@157))
)))) ($generated@@44 ($generated@@75 $generated@@155) $generated@@156 $generated@@157))
 :pattern ( ($generated@@44 ($generated@@75 $generated@@155) $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and ($generated@@43 $generated@@161) (and ($generated@@23 $generated@@159) (exists (($generated@@162 T@U) ) (! ($generated@@42 $generated@@26 $generated@@159 ($generated@@27 $generated@@162 $generated@@160) $generated@@161)
 :pattern ( ($generated@@42 $generated@@26 $generated@@159 ($generated@@27 $generated@@162 $generated@@160) $generated@@161))
)))) ($generated@@44 ($generated@@78 $generated@@159) $generated@@160 $generated@@161))
 :pattern ( ($generated@@44 ($generated@@78 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@31 ($generated@@39 $generated@@97 $generated@@163) ($generated@@39 $generated@@97 $generated@@164)) ($generated@@39 $generated@@26 ($generated@@31 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@31 ($generated@@39 $generated@@97 $generated@@163) ($generated@@39 $generated@@97 $generated@@164)))
)))
(assert (forall (($generated@@165 Int) ) (! (= ($generated@@53 $generated@@7 ($generated@@11 ($generated@@37 $generated@@165))) ($generated@@39 $generated@@97 ($generated@@53 $generated@@7 ($generated@@11 $generated@@165))))
 :pattern ( ($generated@@53 $generated@@7 ($generated@@11 ($generated@@37 $generated@@165))))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@53 $generated@@167 ($generated@@39 $generated@@167 $generated@@166)) ($generated@@39 $generated@@97 ($generated@@53 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@53 $generated@@167 ($generated@@39 $generated@@167 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@42 $generated@@7 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@42 $generated@@7 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@25 $generated@@7 $generated@@170 $generated)
 :pattern ( ($generated@@25 $generated@@7 $generated@@170 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@186 true))
(let (($generated@@187  (=> (and (and (= $generated@@171 ($generated@@37 (- 0 10))) ($generated@@23 $generated@@172)) (and ($generated@@23 $generated@@172) (= (ControlFlow 0 6) (- 0 5)))) (= ($generated@@12 ($generated@@52 $generated@@7 ($generated@@78 $generated@@172))) ($generated@@37 (- 0 10))))))
(let (($generated@@188  (=> (or (not (= $generated@@171 ($generated@@37 10))) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@187) (=> (= (ControlFlow 0 8) 7) $generated@@186)))))
(let (($generated@@189  (=> (and (and (= $generated@@171 ($generated@@37 10)) ($generated@@23 $generated@@172)) (and ($generated@@23 $generated@@172) (= (ControlFlow 0 4) (- 0 3)))) (= ($generated@@12 ($generated@@52 $generated@@7 ($generated@@78 $generated@@172))) ($generated@@37 10)))))
(let (($generated@@190  (=> (= $generated@@173 ($generated@@37 10)) (and (=> (= (ControlFlow 0 9) 4) $generated@@189) (=> (= (ControlFlow 0 9) 8) $generated@@188)))))
(let (($generated@@191 true))
(let (($generated@@192  (=> (= $generated@@172 ($generated@@31 ($generated@@53 $generated@@7 ($generated@@11 $generated@@173)) ($generated@@53 $generated@@7 ($generated@@11 $generated@@171)))) (and (=> (= (ControlFlow 0 10) 9) $generated@@190) (=> (= (ControlFlow 0 10) 2) $generated@@191)))))
(let (($generated@@193 true))
(let (($generated@@194  (and (=> (= (ControlFlow 0 11) (- 0 12)) (= $generated@@174 ($generated@@37 2))) (=> (= $generated@@174 ($generated@@37 2)) (and (=> (= (ControlFlow 0 11) 10) $generated@@192) (=> (= (ControlFlow 0 11) 1) $generated@@193))))))
(let (($generated@@195  (=> (and (= $generated@@174 $generated@@175) (= (ControlFlow 0 14) 11)) $generated@@194)))
(let (($generated@@196  (=> (and (and (or (not (= $generated@@176 ($generated@@37 (- 0 1)))) (not true)) (= $generated@@177 ($generated@@37 2))) (and (= $generated@@175 $generated@@177) (= (ControlFlow 0 16) 14))) $generated@@195)))
(let (($generated@@197  (=> (and (and (= $generated@@176 ($generated@@37 (- 0 1))) (= $generated@@178 (+ 3 $generated@@176))) (and (= $generated@@175 $generated@@178) (= (ControlFlow 0 15) 14))) $generated@@195)))
(let (($generated@@198  (=> (or (not (= $generated@@176 ($generated@@37 2))) (not true)) (and (=> (= (ControlFlow 0 17) 15) $generated@@197) (=> (= (ControlFlow 0 17) 16) $generated@@196)))))
(let (($generated@@199  (=> (and (and (= $generated@@176 ($generated@@37 2)) (= $generated@@179 (+ $generated@@176 $generated@@180))) (and (= $generated@@174 $generated@@179) (= (ControlFlow 0 13) 11))) $generated@@194)))
(let (($generated@@200  (=> (and (= $generated@@181 ($generated@@95 $generated@@182 $generated@@183 $generated@@1 false)) (= $generated@@180 ($generated@@37 0))) (and (=> (= (ControlFlow 0 18) 13) $generated@@199) (=> (= (ControlFlow 0 18) 17) $generated@@198)))))
(let (($generated@@201  (=> (and ($generated@@43 $generated@@183) ($generated@@184 $generated@@183)) (=> (and (and (and ($generated@@25 $generated@@26 $generated@@172 ($generated@@27 $generated $generated)) ($generated@@42 $generated@@26 $generated@@172 ($generated@@27 $generated $generated) $generated@@183)) ($generated@@22 $generated@@172)) (and (= 0 $generated@@185) (= (ControlFlow 0 19) 18))) $generated@@200))))
$generated@@201)))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
