(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 (Int) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 ((_ BitVec 19)) T@U)
(declare-fun $generated@@33 (T@U) (_ BitVec 19))
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@67 (Int) Int)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@98 (T@U) Int)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ) (! ($generated@@28 $generated@@13 $generated@@30 ($generated@@29 0))
 :pattern ( ($generated@@28 $generated@@13 $generated@@30 ($generated@@29 0)))
)))
(assert  (and (and (= ($generated@@11 $generated@@31) 3) (forall (($generated@@34 (_ BitVec 19)) ) (! (= ($generated@@33 ($generated@@32 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@32 $generated@@34))
))) (forall (($generated@@35 T@U) ) (! (= ($generated@@32 ($generated@@33 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@33 $generated@@35))
))))
(assert (forall (($generated@@36 T@U) ) (! ($generated@@28 $generated@@31 $generated@@36 ($generated@@29 19))
 :pattern ( ($generated@@28 $generated@@31 $generated@@36 ($generated@@29 19)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@38 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@38 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@38 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@11 $generated@@39) 4)) (= ($generated@@11 $generated@@40) 5)) (= ($generated@@11 $generated@@41) 6)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@11 ($generated@@42 $generated@@58 $generated@@59)) 7))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@42 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@42 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@42 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@37 $generated@@64 $generated@@65) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@16 ($generated@@43 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@64 $generated@@66) $generated@@3))) ($generated@@16 ($generated@@43 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@65 $generated@@66) $generated@@3))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@65 $generated@@66) $generated@@3))
)))
 :pattern ( ($generated@@37 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 Int) ) (! (= ($generated@@67 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@43 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@43 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ) (!  (and (= ($generated@@27 ($generated@@75 $generated@@77)) $generated@@6) (= ($generated@@76 ($generated@@75 $generated@@77)) $generated@@9))
 :pattern ( ($generated@@75 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (and (= ($generated@@27 ($generated@@78 $generated@@79)) $generated@@7) (= ($generated@@76 ($generated@@78 $generated@@79)) $generated@@10))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@80 $generated@@82 $generated@@81) (and (= ($generated@@72 $generated@@41 ($generated@@43 $generated@@41 $generated@@82)) $generated@@82) ($generated@@28 $generated@@41 ($generated@@43 $generated@@41 $generated@@82) $generated@@81)))
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@80 $generated@@84 $generated@@83) (and (= ($generated@@72 $generated@@41 ($generated@@43 $generated@@41 $generated@@84)) $generated@@84) ($generated@@28 $generated@@41 ($generated@@43 $generated@@41 $generated@@84) $generated@@83)))
 :pattern ( ($generated@@80 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@28 $generated@@41 $generated@@86 $generated@@83)  (and ($generated@@28 $generated@@41 $generated@@86 $generated@@81) (or (not (= $generated@@86 $generated@@85)) (not true))))
 :pattern ( ($generated@@28 $generated@@41 $generated@@86 $generated@@83))
 :pattern ( ($generated@@28 $generated@@41 $generated@@86 $generated@@81))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or (not (= $generated@@87 $generated@@89)) (not true)) (=> (and ($generated@@37 $generated@@87 $generated@@88) ($generated@@37 $generated@@88 $generated@@89)) ($generated@@37 $generated@@87 $generated@@89)))
 :pattern ( ($generated@@37 $generated@@87 $generated@@88) ($generated@@37 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@80 $generated@@90 $generated@@0) (and (= ($generated@@72 $generated@@13 ($generated@@43 $generated@@13 $generated@@90)) $generated@@90) ($generated@@28 $generated@@13 ($generated@@43 $generated@@13 $generated@@90) $generated@@0)))
 :pattern ( ($generated@@80 $generated@@90 $generated@@0))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@80 $generated@@91 $generated) (and (= ($generated@@72 $generated@@12 ($generated@@43 $generated@@12 $generated@@91)) $generated@@91) ($generated@@28 $generated@@12 ($generated@@43 $generated@@12 $generated@@91) $generated)))
 :pattern ( ($generated@@80 $generated@@91 $generated))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@80 ($generated@@72 $generated@@94 $generated@@92) $generated@@93) ($generated@@28 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@80 ($generated@@72 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! ($generated@@28 $generated@@41 $generated@@95 $generated@@81)
 :pattern ( ($generated@@28 $generated@@41 $generated@@95 $generated@@81))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@28 $generated@@13 $generated@@97 ($generated@@78 $generated@@96)) ($generated@@16 ($generated@@69 $generated@@12 ($generated@@15 true))))
 :pattern ( ($generated@@28 $generated@@13 $generated@@97 ($generated@@78 $generated@@96)))
)))
(assert (forall (($generated@@99 Int) ) (! (= ($generated@@98 ($generated@@29 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@29 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@100 ($generated@@75 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@75 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@78 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@78 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@43 $generated@@105 ($generated@@72 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@72 $generated@@105 $generated@@104))
)))
(assert  (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@106 $generated@@109 $generated@@110 $generated@@111 ($generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@106 $generated@@116 $generated@@117 $generated@@118 ($generated@@108 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@106 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@106 $generated@@125 $generated@@126 $generated@@127 ($generated@@108 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@106 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Bool) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@16 ($generated@@106 $generated@@41 $generated@@39 $generated@@12 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@16 ($generated@@43 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@135 $generated@@138) $generated@@136)))) $generated@@137))
 :pattern ( ($generated@@106 $generated@@41 $generated@@39 $generated@@12 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@80 $generated@@141 ($generated@@75 $generated@@140))  (and ($generated@@80 $generated@@141 $generated@@140) ($generated@@16 ($generated@@69 $generated@@12 ($generated@@15 true)))))
 :pattern ( ($generated@@80 $generated@@141 ($generated@@75 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@80 $generated@@142 ($generated@@29 0)) (and (= ($generated@@72 $generated@@13 ($generated@@43 $generated@@13 $generated@@142)) $generated@@142) ($generated@@28 $generated@@13 ($generated@@43 $generated@@13 $generated@@142) ($generated@@29 0))))
 :pattern ( ($generated@@80 $generated@@142 ($generated@@29 0)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@80 $generated@@144 ($generated@@78 $generated@@143)) (and (= ($generated@@72 $generated@@13 ($generated@@43 $generated@@13 $generated@@144)) $generated@@144) ($generated@@28 $generated@@13 ($generated@@43 $generated@@13 $generated@@144) ($generated@@78 $generated@@143))))
 :pattern ( ($generated@@80 $generated@@144 ($generated@@78 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@80 $generated@@145 ($generated@@29 19)) (and (= ($generated@@72 $generated@@31 ($generated@@43 $generated@@31 $generated@@145)) $generated@@145) ($generated@@28 $generated@@31 ($generated@@43 $generated@@31 $generated@@145) ($generated@@29 19))))
 :pattern ( ($generated@@80 $generated@@145 ($generated@@29 19)))
)))
(assert (= ($generated@@27 $generated@@81) $generated@@4))
(assert (= ($generated@@76 $generated@@81) $generated@@8))
(assert (= ($generated@@27 $generated@@83) $generated@@5))
(assert (= ($generated@@76 $generated@@83) $generated@@8))
(assert (forall (($generated@@146 Int) ) (! (= ($generated@@72 $generated@@13 ($generated@@17 ($generated@@67 $generated@@146))) ($generated@@69 $generated@@40 ($generated@@72 $generated@@13 ($generated@@17 $generated@@146))))
 :pattern ( ($generated@@72 $generated@@13 ($generated@@17 ($generated@@67 $generated@@146))))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@72 $generated@@148 ($generated@@69 $generated@@148 $generated@@147)) ($generated@@69 $generated@@40 ($generated@@72 $generated@@148 $generated@@147)))
 :pattern ( ($generated@@72 $generated@@148 ($generated@@69 $generated@@148 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ) (! ($generated@@28 $generated@@13 $generated@@149 $generated@@0)
 :pattern ( ($generated@@28 $generated@@13 $generated@@149 $generated@@0))
)))
(assert (forall (($generated@@150 T@U) ) (! ($generated@@28 $generated@@12 $generated@@150 $generated)
 :pattern ( ($generated@@28 $generated@@12 $generated@@150 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 () Bool)
(declare-fun $generated@@162 () Bool)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () Bool)
(declare-fun $generated@@169 () Bool)
(declare-fun $generated@@170 () Bool)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@173  (=> (= $generated@@151 ($generated@@107 $generated@@85 $generated@@152 $generated@@3 false)) (and (=> (= (ControlFlow 0 2) (- 0 13)) ($generated@@80 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@67 13))) ($generated@@75 $generated@@0))) (=> ($generated@@80 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@67 13))) ($generated@@75 $generated@@0)) (=> (= $generated@@153 ($generated@@67 13)) (and (=> (= (ControlFlow 0 2) (- 0 12)) true) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@80 ($generated@@72 $generated@@13 ($generated@@17 $generated@@153)) ($generated@@75 ($generated@@75 $generated@@0)))) (=> ($generated@@80 ($generated@@72 $generated@@13 ($generated@@17 $generated@@153)) ($generated@@75 ($generated@@75 $generated@@0))) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@80 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@67 14))) ($generated@@75 $generated@@0))) (=> ($generated@@80 ($generated@@72 $generated@@13 ($generated@@17 ($generated@@67 14))) ($generated@@75 $generated@@0)) (=> (and (and (and (= $generated@@154 ($generated@@67 14)) (= $generated@@155 ($generated@@75 $generated@@0))) (and (= $generated@@156 ($generated@@72 $generated@@13 ($generated@@17 $generated@@153))) (= $generated@@157 ($generated@@72 $generated@@13 ($generated@@17 $generated@@154))))) (and (and ($generated@@158 $generated@@159) ($generated@@160 $generated@@159)) (and (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@85)) (not true)) ($generated@@16 ($generated@@43 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@152 $generated@@174) $generated@@3)))) (= ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@159 $generated@@174) ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@152 $generated@@174)))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@159 $generated@@174))
)) ($generated@@37 $generated@@152 $generated@@159)))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@80 ($generated@@72 $generated@@12 ($generated@@69 $generated@@12 ($generated@@15 true))) ($generated@@75 $generated))) (=> ($generated@@80 ($generated@@72 $generated@@12 ($generated@@69 $generated@@12 ($generated@@15 true))) ($generated@@75 $generated)) (=> (= $generated@@161 ($generated@@16 ($generated@@69 $generated@@12 ($generated@@15 true)))) (and (=> (= (ControlFlow 0 2) (- 0 8)) true) (=> (= $generated@@162 ($generated@@16 ($generated@@69 $generated@@12 ($generated@@15 false)))) (=> (and (= $generated@@163 ($generated@@72 $generated@@12 ($generated@@15 $generated@@161))) (= $generated@@164 ($generated@@72 $generated@@12 ($generated@@15 $generated@@162)))) (=> (and (and ($generated@@158 $generated@@165) ($generated@@160 $generated@@165)) (and (forall (($generated@@175 T@U) ) (!  (=> (and (or (not (= $generated@@175 $generated@@85)) (not true)) ($generated@@16 ($generated@@43 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@159 $generated@@175) $generated@@3)))) (= ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@165 $generated@@175) ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@159 $generated@@175)))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@165 $generated@@175))
)) ($generated@@37 $generated@@159 $generated@@165))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@28 $generated@@13 ($generated@@17 ($generated@@67 18)) ($generated@@78 $generated@@83))) (=> ($generated@@28 $generated@@13 ($generated@@17 ($generated@@67 18)) ($generated@@78 $generated@@83)) (=> (= $generated@@166 ($generated@@67 18)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@28 $generated@@13 ($generated@@17 ($generated@@67 19)) ($generated@@78 ($generated@@29 19)))) (=> ($generated@@28 $generated@@13 ($generated@@17 ($generated@@67 19)) ($generated@@78 ($generated@@29 19))) (=> (= $generated@@167 ($generated@@67 19)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true)))))))))))))))))))))))))))))
(let (($generated@@176  (=> (and (and ($generated@@158 $generated@@152) ($generated@@160 $generated@@152)) (and (=> $generated@@168 ($generated@@16 ($generated@@69 $generated@@12 ($generated@@15 true)))) true)) (=> (and (and (and (=> $generated@@169 ($generated@@16 ($generated@@69 $generated@@12 ($generated@@15 true)))) true) (and (=> $generated@@170 ($generated@@16 ($generated@@69 $generated@@12 ($generated@@15 true)))) true)) (and (and (=> $generated@@171 ($generated@@16 ($generated@@69 $generated@@12 ($generated@@15 true)))) true) (and (= 4 $generated@@172) (= (ControlFlow 0 14) 2)))) $generated@@173))))
$generated@@176)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
