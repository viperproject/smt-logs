(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@89 (Int) Int)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 () Int)
(declare-fun $generated@@98 (T@U T@U Int T@U) Bool)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U Int T@U) Bool)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! ($generated@@30 $generated@@15 $generated@@32 $generated@@31 $generated@@33)
 :pattern ( ($generated@@30 $generated@@15 $generated@@32 $generated@@31 $generated@@33))
)))
(assert ($generated@@34 $generated@@35))
(assert (= ($generated@@13 $generated@@37) 3))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@40 $generated@@35)  (or (= $generated@@40 $generated@@38) (= ($generated@@39 $generated@@40) $generated@@35)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 $generated@@35))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and ($generated@@41 $generated@@45 $generated@@42 $generated@@46) ($generated@@43 $generated@@46)) ($generated@@41 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@41 $generated@@45 $generated@@42 $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and ($generated@@41 $generated@@47 $generated@@35 $generated@@48) ($generated@@43 $generated@@48)) ($generated@@41 $generated@@47 $generated@@42 $generated@@48))
 :pattern ( ($generated@@41 $generated@@47 $generated@@35 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@50 $generated@@49 $generated@@51) ($generated@@30 $generated@@37 $generated@@50 $generated@@35 $generated@@51))
 :pattern ( ($generated@@30 $generated@@37 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@30 $generated@@37 $generated@@50 $generated@@35 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@53 $generated@@52 $generated@@54) ($generated@@30 $generated@@37 $generated@@53 $generated@@44 $generated@@54))
 :pattern ( ($generated@@30 $generated@@37 $generated@@53 $generated@@52 $generated@@54))
 :pattern ( ($generated@@30 $generated@@37 $generated@@53 $generated@@44 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@56 $generated@@55 $generated@@57) ($generated@@30 $generated@@37 $generated@@56 $generated@@42 $generated@@57))
 :pattern ( ($generated@@30 $generated@@37 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@30 $generated@@37 $generated@@56 $generated@@42 $generated@@57))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@59 $generated@@66 $generated@@67 ($generated@@63 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@70) $generated@@68)
 :weight 0
)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (or (= $generated@@75 $generated@@76) (= ($generated@@59 $generated@@71 $generated@@72 ($generated@@63 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@76) ($generated@@59 $generated@@71 $generated@@72 $generated@@74 $generated@@76)))
 :weight 0
))) (= ($generated@@13 $generated@@60) 4)) (= ($generated@@13 $generated@@61) 5)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (= ($generated@@13 ($generated@@62 $generated@@77 $generated@@78)) 6))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@64 ($generated@@62 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@62 $generated@@79 $generated@@80))
))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@62 $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@83 $generated@@35 $generated@@84)  (or (= $generated@@83 $generated@@38) ($generated@@18 ($generated@@58 $generated@@14 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@37 ($generated@@62 $generated@@60 $generated@@61) $generated@@84 $generated@@83) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@83 $generated@@35 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@85 $generated@@44 $generated@@86)  (or (= $generated@@85 $generated@@38) ($generated@@18 ($generated@@58 $generated@@14 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@37 ($generated@@62 $generated@@60 $generated@@61) $generated@@86 $generated@@85) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@85 $generated@@44 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@30 $generated@@37 $generated@@87 $generated@@42 $generated@@88)  (or (= $generated@@87 $generated@@38) ($generated@@18 ($generated@@58 $generated@@14 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@37 ($generated@@62 $generated@@60 $generated@@61) $generated@@88 $generated@@87) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@37 $generated@@87 $generated@@42 $generated@@88))
)))
(assert (forall (($generated@@90 Int) ) (! (= ($generated@@89 $generated@@90) $generated@@90)
 :pattern ( ($generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 $generated@@92) $generated@@92)
 :pattern ( ($generated@@91 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@58 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@58 $generated@@96 $generated@@95))
)))
(assert  (=> (<= 0 $generated@@97) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 Int) ($generated@@104 T@U) ) (!  (=> (or ($generated@@100 $generated@@102 $generated@@103 $generated@@104) (and (< 0 $generated@@97) (and (and (and (or (not (= $generated@@102 $generated@@38)) (not true)) ($generated@@36 $generated@@37 $generated@@102 $generated@@49)) (<= ($generated@@89 0) $generated@@103)) ($generated@@36 $generated@@37 $generated@@104 $generated@@55)))) (= ($generated@@98 ($generated@@99 $generated@@101) $generated@@102 $generated@@103 $generated@@104) ($generated@@18 ($generated@@91 $generated@@14 ($generated@@17 false)))))
 :pattern ( ($generated@@98 ($generated@@99 $generated@@101) $generated@@102 $generated@@103 $generated@@104))
))))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@36 $generated@@15 $generated@@105 $generated@@31) (<= ($generated@@89 0) ($generated@@20 $generated@@105)))
 :pattern ( ($generated@@36 $generated@@15 $generated@@105 $generated@@31))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@41 ($generated@@94 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@30 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@41 ($generated@@94 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@110 $generated@@49)  (and ($generated@@36 $generated@@37 $generated@@110 $generated@@35) (or (not (= $generated@@110 $generated@@38)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@110 $generated@@49))
 :pattern ( ($generated@@36 $generated@@37 $generated@@110 $generated@@35))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@111 $generated@@52)  (and ($generated@@36 $generated@@37 $generated@@111 $generated@@44) (or (not (= $generated@@111 $generated@@38)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@111 $generated@@52))
 :pattern ( ($generated@@36 $generated@@37 $generated@@111 $generated@@44))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@112 $generated@@55)  (and ($generated@@36 $generated@@37 $generated@@112 $generated@@42) (or (not (= $generated@@112 $generated@@38)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@112 $generated@@55))
 :pattern ( ($generated@@36 $generated@@37 $generated@@112 $generated@@42))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@30 $generated@@37 $generated@@113 $generated@@42 $generated@@114) ($generated@@30 $generated@@37 $generated@@113 $generated@@44 $generated@@114))
 :pattern ( ($generated@@30 $generated@@37 $generated@@113 $generated@@42 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@30 $generated@@37 $generated@@115 $generated@@35 $generated@@116) ($generated@@30 $generated@@37 $generated@@115 $generated@@42 $generated@@116))
 :pattern ( ($generated@@30 $generated@@37 $generated@@115 $generated@@35 $generated@@116))
)))
(assert  (=> (<= 0 $generated@@97) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 Int) ($generated@@120 T@U) ) (!  (=> (or ($generated@@100 $generated@@118 $generated@@119 $generated@@120) (and (< 0 $generated@@97) (and (and (and (or (not (= $generated@@118 $generated@@38)) (not true)) ($generated@@36 $generated@@37 $generated@@118 $generated@@49)) (<= ($generated@@89 0) $generated@@119)) ($generated@@36 $generated@@37 $generated@@120 $generated@@55)))) (=> (and (or (not (= $generated@@119 0)) (not true)) ($generated@@98 $generated@@117 $generated@@118 (- $generated@@119 1) $generated@@120)) ($generated@@98 $generated@@117 $generated@@118 (- $generated@@119 1) $generated@@120)))
 :pattern ( ($generated@@98 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 Int) ($generated@@124 T@U) ) (! (= ($generated@@98 ($generated@@99 $generated@@121) $generated@@122 $generated@@123 $generated@@124) ($generated@@98 $generated@@121 $generated@@122 $generated@@123 $generated@@124))
 :pattern ( ($generated@@98 ($generated@@99 $generated@@121) $generated@@122 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@58 $generated@@126 ($generated@@94 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@94 $generated@@126 $generated@@125))
)))
(assert  (=> (<= 0 $generated@@97) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 Int) ($generated@@130 T@U) ) (!  (=> (or ($generated@@100 ($generated@@91 $generated@@37 $generated@@128) ($generated@@89 $generated@@129) ($generated@@91 $generated@@37 $generated@@130)) (and (< 0 $generated@@97) (and (and (and (or (not (= $generated@@128 $generated@@38)) (not true)) ($generated@@36 $generated@@37 $generated@@128 $generated@@49)) (<= ($generated@@89 0) $generated@@129)) ($generated@@36 $generated@@37 $generated@@130 $generated@@55)))) (= ($generated@@98 ($generated@@99 $generated@@127) ($generated@@91 $generated@@37 $generated@@128) ($generated@@89 $generated@@129) ($generated@@91 $generated@@37 $generated@@130)) ($generated@@18 ($generated@@91 $generated@@14 ($generated@@17 false)))))
 :weight 3
 :pattern ( ($generated@@98 ($generated@@99 $generated@@127) ($generated@@91 $generated@@37 $generated@@128) ($generated@@89 $generated@@129) ($generated@@91 $generated@@37 $generated@@130)))
))))
(assert  (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@131 $generated@@134 $generated@@135 $generated@@136 ($generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@131 $generated@@141 $generated@@142 $generated@@143 ($generated@@133 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@131 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@131 $generated@@150 $generated@@151 $generated@@152 ($generated@@133 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@131 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@18 ($generated@@131 $generated@@37 $generated@@60 $generated@@14 ($generated@@132 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@18 ($generated@@58 $generated@@14 ($generated@@59 $generated@@60 $generated@@61 ($generated@@59 $generated@@37 ($generated@@62 $generated@@60 $generated@@61) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@131 $generated@@37 $generated@@60 $generated@@14 ($generated@@132 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@165 $generated@@42) ($generated@@36 $generated@@37 $generated@@165 $generated@@44))
 :pattern ( ($generated@@36 $generated@@37 $generated@@165 $generated@@42))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@166 $generated@@35) ($generated@@36 $generated@@37 $generated@@166 $generated@@42))
 :pattern ( ($generated@@36 $generated@@37 $generated@@166 $generated@@35))
)))
(assert (= ($generated@@29 $generated@@31) $generated@@2))
(assert (= ($generated@@167 $generated@@31) $generated@@9))
(assert (= ($generated@@29 $generated@@55) $generated@@3))
(assert (= ($generated@@167 $generated@@55) $generated@@10))
(assert (= ($generated@@29 $generated@@42) $generated@@4))
(assert (= ($generated@@167 $generated@@42) $generated@@10))
(assert (= ($generated@@29 $generated@@35) $generated@@5))
(assert (= ($generated@@167 $generated@@35) $generated@@11))
(assert (= ($generated@@29 $generated@@49) $generated@@6))
(assert (= ($generated@@167 $generated@@49) $generated@@11))
(assert (= ($generated@@29 $generated@@44) $generated@@7))
(assert (= ($generated@@167 $generated@@44) $generated@@12))
(assert (= ($generated@@29 $generated@@52) $generated@@8))
(assert (= ($generated@@167 $generated@@52) $generated@@12))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@169 $generated@@44)  (or (= $generated@@169 $generated@@38) ($generated@@168 ($generated@@39 $generated@@169))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@169 $generated@@44))
)))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@170 $generated@@42)  (or (= $generated@@170 $generated@@38) ($generated@@34 ($generated@@39 $generated@@170))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@170 $generated@@42))
)))
(assert (forall (($generated@@171 Int) ) (! (= ($generated@@94 $generated@@15 ($generated@@19 ($generated@@89 $generated@@171))) ($generated@@91 $generated@@61 ($generated@@94 $generated@@15 ($generated@@19 $generated@@171))))
 :pattern ( ($generated@@94 $generated@@15 ($generated@@19 ($generated@@89 $generated@@171))))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@94 $generated@@173 ($generated@@91 $generated@@173 $generated@@172)) ($generated@@91 $generated@@61 ($generated@@94 $generated@@173 $generated@@172)))
 :pattern ( ($generated@@94 $generated@@173 ($generated@@91 $generated@@173 $generated@@172)))
)))
(assert  (=> (<= 0 $generated@@97) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 T@U) ) (!  (=> (or ($generated@@100 $generated@@175 ($generated@@89 $generated@@176) ($generated@@91 $generated@@37 $generated@@177)) (and (< 0 $generated@@97) (and (and (and (or (not (= $generated@@175 $generated@@38)) (not true)) ($generated@@36 $generated@@37 $generated@@175 $generated@@49)) (<= ($generated@@89 0) $generated@@176)) ($generated@@36 $generated@@37 $generated@@177 $generated@@55)))) (= ($generated@@98 ($generated@@99 $generated@@174) $generated@@175 ($generated@@89 $generated@@176) ($generated@@91 $generated@@37 $generated@@177)) ($generated@@18 ($generated@@91 $generated@@14 ($generated@@17 false)))))
 :weight 3
 :pattern ( ($generated@@98 ($generated@@99 $generated@@174) $generated@@175 ($generated@@89 $generated@@176) ($generated@@91 $generated@@37 $generated@@177)))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@30 $generated@@14 $generated@@179 $generated $generated@@178)
 :pattern ( ($generated@@30 $generated@@14 $generated@@179 $generated $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! ($generated@@36 $generated@@14 $generated@@180 $generated)
 :pattern ( ($generated@@36 $generated@@14 $generated@@180 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@190  (=> (= (ControlFlow 0 11) (- 0 10)) (=> (and (or (not (= $generated@@181 0)) (not true)) ($generated@@98 ($generated@@99 $generated@@182) $generated@@183 (- $generated@@181 1) $generated@@184)) ($generated@@98 ($generated@@99 ($generated@@99 $generated@@182)) $generated@@183 (- $generated@@181 1) $generated@@184)))))
(let (($generated@@191  (=> (= ($generated@@98 ($generated@@99 $generated@@182) $generated@@183 $generated@@181 $generated@@184) ($generated@@18 ($generated@@91 $generated@@14 ($generated@@17 false)))) (=> (and ($generated@@36 $generated@@14 ($generated@@17 ($generated@@98 ($generated@@99 $generated@@182) $generated@@183 $generated@@181 $generated@@184)) $generated) (= (ControlFlow 0 12) 11)) $generated@@190))))
(let (($generated@@192 true))
(let (($generated@@193  (=> (and (=> (and (or (not (= $generated@@181 0)) (not true)) ($generated@@98 ($generated@@99 $generated@@182) $generated@@183 (- $generated@@181 1) $generated@@184)) ($generated@@98 ($generated@@99 $generated@@182) $generated@@183 (- $generated@@181 1) $generated@@184)) (= (ControlFlow 0 9) 1)) $generated@@192)))
(let (($generated@@194  (=> (and (or (not (= $generated@@181 0)) (not true)) ($generated@@41 ($generated@@94 $generated@@37 $generated@@183) $generated@@35 $generated@@185)) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@36 $generated@@15 ($generated@@19 (- $generated@@181 1)) $generated@@31)) (=> ($generated@@36 $generated@@15 ($generated@@19 (- $generated@@181 1)) $generated@@31) (=> (= $generated@@186 (- $generated@@181 1)) (=> (and ($generated@@30 $generated@@15 ($generated@@19 $generated@@186) $generated@@31 $generated@@185) ($generated@@30 $generated@@37 $generated@@184 $generated@@55 $generated@@185)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (<= 0 $generated@@181) (= $generated@@186 $generated@@181))) (=> (or (<= 0 $generated@@181) (= $generated@@186 $generated@@181)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (and (and (= $generated@@183 $generated@@183) (= (- $generated@@181 1) $generated@@181)) (= $generated@@184 $generated@@184)) (or (< $generated@@186 $generated@@181) (and (= $generated@@186 $generated@@181) (and (= $generated@@184 $generated@@38) (or (not (= $generated@@184 $generated@@38)) (not true))))))) (=> (or (and (and (= $generated@@183 $generated@@183) (= (- $generated@@181 1) $generated@@181)) (= $generated@@184 $generated@@184)) (or (< $generated@@186 $generated@@181) (and (= $generated@@186 $generated@@181) (and (= $generated@@184 $generated@@38) (or (not (= $generated@@184 $generated@@38)) (not true)))))) (=> (or (and (and (= $generated@@183 $generated@@183) (= (- $generated@@181 1) $generated@@181)) (= $generated@@184 $generated@@184)) ($generated@@100 $generated@@183 (- $generated@@181 1) $generated@@184)) (=> (and ($generated@@98 ($generated@@99 $generated@@182) $generated@@183 (- $generated@@181 1) $generated@@184) ($generated@@41 ($generated@@94 $generated@@37 $generated@@183) $generated@@35 $generated@@185)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@36 $generated@@15 ($generated@@19 (- $generated@@181 1)) $generated@@31)) (=> ($generated@@36 $generated@@15 ($generated@@19 (- $generated@@181 1)) $generated@@31) (=> (= $generated@@187 (- $generated@@181 1)) (=> (and ($generated@@30 $generated@@15 ($generated@@19 $generated@@187) $generated@@31 $generated@@185) ($generated@@30 $generated@@37 $generated@@184 $generated@@55 $generated@@185)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (<= 0 $generated@@181) (= $generated@@187 $generated@@181))) (=> (or (<= 0 $generated@@181) (= $generated@@187 $generated@@181)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (and (and (= $generated@@183 $generated@@183) (= (- $generated@@181 1) $generated@@181)) (= $generated@@184 $generated@@184)) (or (< $generated@@187 $generated@@181) (and (= $generated@@187 $generated@@181) (and (= $generated@@184 $generated@@38) (or (not (= $generated@@184 $generated@@38)) (not true))))))) (=> (or (and (and (= $generated@@183 $generated@@183) (= (- $generated@@181 1) $generated@@181)) (= $generated@@184 $generated@@184)) (or (< $generated@@187 $generated@@181) (and (= $generated@@187 $generated@@181) (and (= $generated@@184 $generated@@38) (or (not (= $generated@@184 $generated@@38)) (not true)))))) (=> (or (and (and (= $generated@@183 $generated@@183) (= (- $generated@@181 1) $generated@@181)) (= $generated@@184 $generated@@184)) ($generated@@100 $generated@@183 (- $generated@@181 1) $generated@@184)) (=> (and ($generated@@98 ($generated@@99 $generated@@182) $generated@@183 (- $generated@@181 1) $generated@@184) (= (ControlFlow 0 2) 1)) $generated@@192)))))))))))))))))))))))
(let (($generated@@195  (=> (= $generated@@188 ($generated@@132 $generated@@38 $generated@@185 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 13) 12) $generated@@191) (=> (= (ControlFlow 0 13) 2) $generated@@194)) (=> (= (ControlFlow 0 13) 9) $generated@@193)))))
(let (($generated@@196  (=> (and (and (and ($generated@@43 $generated@@185) ($generated@@189 $generated@@185)) (and (or (not (= $generated@@183 $generated@@38)) (not true)) (and ($generated@@36 $generated@@37 $generated@@183 $generated@@49) ($generated@@30 $generated@@37 $generated@@183 $generated@@49 $generated@@185)))) (and (and (<= ($generated@@89 0) $generated@@181) ($generated@@36 $generated@@37 $generated@@184 $generated@@55)) (and (= 0 $generated@@97) (= (ControlFlow 0 14) 13)))) $generated@@195)))
$generated@@196))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
