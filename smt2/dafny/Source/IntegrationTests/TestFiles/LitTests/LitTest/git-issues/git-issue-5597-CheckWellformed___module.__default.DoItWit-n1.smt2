(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@55 (T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@67 (T@U) Int)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T T@T) T@T)
(declare-fun $generated@@75 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@101 () Int)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (Int) Int)
(declare-fun $generated@@110 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@T T@U) T@U)
(declare-fun $generated@@116 (T@U T@U) Bool)
(declare-fun $generated@@120 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@27) ($generated@@24 ($generated@@23 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 $generated@@26) ($generated@@24 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@24 $generated@@29 $generated@@30) ($generated@@24 ($generated@@23 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@23 $generated@@28 $generated@@29) ($generated@@24 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@24 $generated@@33 $generated@@34) (not ($generated@@24 ($generated@@31 $generated@@32 $generated@@33) $generated@@34)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@24 $generated@@33 $generated@@34))
)))
(assert ($generated@@35 $generated@@36))
(assert (forall (($generated@@38 T@U) ) (!  (not ($generated@@24 $generated@@37 $generated@@38))
 :pattern ( ($generated@@24 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@24 ($generated@@39 $generated@@40 $generated@@41) $generated@@42)  (and ($generated@@24 $generated@@40 $generated@@42) ($generated@@24 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@24 ($generated@@39 $generated@@40 $generated@@41) $generated@@42))
)))
(assert (= ($generated@@7 $generated@@44) 3))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@47 $generated@@36)  (or (= $generated@@47 $generated@@45) (= ($generated@@46 $generated@@47) $generated@@36)))
 :pattern ( ($generated@@43 $generated@@44 $generated@@47 $generated@@36))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@23 ($generated@@23 $generated@@48 $generated@@49) $generated@@49) ($generated@@23 $generated@@48 $generated@@49))
 :pattern ( ($generated@@23 ($generated@@23 $generated@@48 $generated@@49) $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@39 ($generated@@39 $generated@@50 $generated@@51) $generated@@51) ($generated@@39 $generated@@50 $generated@@51))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@50 $generated@@51) $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@24 ($generated@@31 $generated@@52 $generated@@53) $generated@@54)  (and ($generated@@24 $generated@@52 $generated@@54) (not ($generated@@24 $generated@@53 $generated@@54))))
 :pattern ( ($generated@@24 ($generated@@31 $generated@@52 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@55 $generated@@58 $generated@@36 $generated@@59) ($generated@@56 $generated@@59)) ($generated@@55 $generated@@58 $generated@@57 $generated@@59))
 :pattern ( ($generated@@55 $generated@@58 $generated@@36 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@60 $generated@@44 $generated@@62 $generated@@61 $generated@@63) ($generated@@60 $generated@@44 $generated@@62 $generated@@57 $generated@@63))
 :pattern ( ($generated@@60 $generated@@44 $generated@@62 $generated@@61 $generated@@63))
 :pattern ( ($generated@@60 $generated@@44 $generated@@62 $generated@@57 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@60 $generated@@44 $generated@@65 $generated@@64 $generated@@66) ($generated@@60 $generated@@44 $generated@@65 $generated@@36 $generated@@66))
 :pattern ( ($generated@@60 $generated@@44 $generated@@65 $generated@@64 $generated@@66))
 :pattern ( ($generated@@60 $generated@@44 $generated@@65 $generated@@36 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (and (= (= ($generated@@67 $generated@@68) 0) (= $generated@@68 $generated@@37)) (=> (or (not (= ($generated@@67 $generated@@68) 0)) (not true)) (exists (($generated@@69 T@U) ) (! ($generated@@24 $generated@@68 $generated@@69)
 :pattern ( ($generated@@24 $generated@@68 $generated@@69))
))))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@71 $generated@@78 $generated@@79 ($generated@@75 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@82) $generated@@80)
 :weight 0
)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (or (= $generated@@87 $generated@@88) (= ($generated@@71 $generated@@83 $generated@@84 ($generated@@75 $generated@@83 $generated@@84 $generated@@86 $generated@@87 $generated@@85) $generated@@88) ($generated@@71 $generated@@83 $generated@@84 $generated@@86 $generated@@88)))
 :weight 0
))) (= ($generated@@7 $generated@@72) 4)) (= ($generated@@7 $generated@@73) 5)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@7 ($generated@@74 $generated@@89 $generated@@90)) 6))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@76 ($generated@@74 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@74 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@77 ($generated@@74 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@74 $generated@@93 $generated@@94))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@60 $generated@@44 $generated@@95 $generated@@57 $generated@@96)  (or (= $generated@@95 $generated@@45) ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@96 $generated@@95) $generated@@0)))))
 :pattern ( ($generated@@60 $generated@@44 $generated@@95 $generated@@57 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@60 $generated@@44 $generated@@97 $generated@@36 $generated@@98)  (or (= $generated@@97 $generated@@45) ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@98 $generated@@97) $generated@@0)))))
 :pattern ( ($generated@@60 $generated@@44 $generated@@97 $generated@@36 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= (+ ($generated@@67 ($generated@@23 $generated@@99 $generated@@100)) ($generated@@67 ($generated@@39 $generated@@99 $generated@@100))) (+ ($generated@@67 $generated@@99) ($generated@@67 $generated@@100)))
 :pattern ( ($generated@@67 ($generated@@23 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@67 ($generated@@39 $generated@@99 $generated@@100)))
)))
(assert (= ($generated@@7 $generated@@104) 7))
(assert  (=> (<= 1 $generated@@101) (forall (($generated@@107 T@U) ) (!  (=> (or ($generated@@103 $generated@@107) (and (< 1 $generated@@101) (and ($generated@@43 $generated@@104 $generated@@107 ($generated@@105 $generated@@61)) (= ($generated@@67 $generated@@107) ($generated@@106 0))))) (= ($generated@@102 $generated@@107) ($generated@@23 $generated@@37 (let (($generated@@108 $generated@@107))
$generated@@108))))
 :pattern ( ($generated@@102 $generated@@107))
))))
(assert (forall (($generated@@109 Int) ) (! (= ($generated@@106 $generated@@109) $generated@@109)
 :pattern ( ($generated@@106 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@110 $generated@@112 $generated@@111) $generated@@111)
 :pattern ( ($generated@@110 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@113 $generated@@115 ($generated@@70 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@70 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@116 $generated@@117 $generated@@118) (forall (($generated@@119 T@U) ) (!  (or (not ($generated@@24 $generated@@117 $generated@@119)) (not ($generated@@24 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@24 $generated@@117 $generated@@119))
 :pattern ( ($generated@@24 $generated@@118 $generated@@119))
)))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@43 $generated@@104 $generated@@121 ($generated@@105 $generated@@122)) (forall (($generated@@123 T@U) ) (!  (=> ($generated@@24 $generated@@121 $generated@@123) ($generated@@120 $generated@@123 $generated@@122))
 :pattern ( ($generated@@24 $generated@@121 $generated@@123))
)))
 :pattern ( ($generated@@43 $generated@@104 $generated@@121 ($generated@@105 $generated@@122)))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@55 ($generated@@113 $generated@@127 $generated@@124) $generated@@125 $generated@@126) ($generated@@60 $generated@@127 $generated@@124 $generated@@125 $generated@@126))
 :pattern ( ($generated@@55 ($generated@@113 $generated@@127 $generated@@124) $generated@@125 $generated@@126))
)))
(assert  (=> (<= 1 $generated@@101) (forall (($generated@@128 T@U) ) (!  (=> (or ($generated@@103 $generated@@128) (and (< 1 $generated@@101) (and ($generated@@43 $generated@@104 $generated@@128 ($generated@@105 $generated@@61)) (= ($generated@@67 $generated@@128) ($generated@@106 0))))) ($generated@@43 $generated@@104 ($generated@@102 $generated@@128) ($generated@@105 $generated@@64)))
 :pattern ( ($generated@@102 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@120 $generated@@129 $generated@@61) (and (= ($generated@@113 $generated@@44 ($generated@@70 $generated@@44 $generated@@129)) $generated@@129) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 $generated@@129) $generated@@61)))
 :pattern ( ($generated@@120 $generated@@129 $generated@@61))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@120 $generated@@130 $generated@@64) (and (= ($generated@@113 $generated@@44 ($generated@@70 $generated@@44 $generated@@130)) $generated@@130) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 $generated@@130) $generated@@64)))
 :pattern ( ($generated@@120 $generated@@130 $generated@@64))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@120 $generated@@131 $generated@@57) (and (= ($generated@@113 $generated@@44 ($generated@@70 $generated@@44 $generated@@131)) $generated@@131) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 $generated@@131) $generated@@57)))
 :pattern ( ($generated@@120 $generated@@131 $generated@@57))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@120 $generated@@132 $generated@@36) (and (= ($generated@@113 $generated@@44 ($generated@@70 $generated@@44 $generated@@132)) $generated@@132) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 $generated@@132) $generated@@36)))
 :pattern ( ($generated@@120 $generated@@132 $generated@@36))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@133 $generated@@61)  (and ($generated@@43 $generated@@44 $generated@@133 $generated@@57) (or (not (= $generated@@133 $generated@@45)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@133 $generated@@61))
 :pattern ( ($generated@@43 $generated@@44 $generated@@133 $generated@@57))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@134 $generated@@64)  (and ($generated@@43 $generated@@44 $generated@@134 $generated@@36) (or (not (= $generated@@134 $generated@@45)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@134 $generated@@64))
 :pattern ( ($generated@@43 $generated@@44 $generated@@134 $generated@@36))
)))
(assert  (=> (<= 1 $generated@@101) (forall (($generated@@135 T@U) ) (!  (=> (or ($generated@@103 ($generated@@110 $generated@@104 $generated@@135)) (and (< 1 $generated@@101) (and ($generated@@43 $generated@@104 $generated@@135 ($generated@@105 $generated@@61)) (= ($generated@@67 ($generated@@110 $generated@@104 $generated@@135)) ($generated@@106 0))))) (= ($generated@@102 ($generated@@110 $generated@@104 $generated@@135)) ($generated@@23 $generated@@37 (let (($generated@@136 ($generated@@110 $generated@@104 $generated@@135)))
$generated@@136))))
 :weight 3
 :pattern ( ($generated@@102 ($generated@@110 $generated@@104 $generated@@135)))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@24 ($generated@@23 $generated@@137 $generated@@138) $generated@@139)  (or ($generated@@24 $generated@@137 $generated@@139) ($generated@@24 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@24 ($generated@@23 $generated@@137 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@116 $generated@@140 $generated@@141) (and (= ($generated@@31 ($generated@@23 $generated@@140 $generated@@141) $generated@@140) $generated@@141) (= ($generated@@31 ($generated@@23 $generated@@140 $generated@@141) $generated@@141) $generated@@140)))
 :pattern ( ($generated@@23 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> ($generated@@60 $generated@@44 $generated@@142 $generated@@36 $generated@@143) ($generated@@60 $generated@@44 $generated@@142 $generated@@57 $generated@@143))
 :pattern ( ($generated@@60 $generated@@44 $generated@@142 $generated@@36 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (and (= (+ (+ ($generated@@67 ($generated@@31 $generated@@144 $generated@@145)) ($generated@@67 ($generated@@31 $generated@@145 $generated@@144))) ($generated@@67 ($generated@@39 $generated@@144 $generated@@145))) ($generated@@67 ($generated@@23 $generated@@144 $generated@@145))) (= ($generated@@67 ($generated@@31 $generated@@144 $generated@@145)) (- ($generated@@67 $generated@@144) ($generated@@67 ($generated@@39 $generated@@144 $generated@@145)))))
 :pattern ( ($generated@@67 ($generated@@31 $generated@@144 $generated@@145)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@120 ($generated@@113 $generated@@148 $generated@@146) $generated@@147) ($generated@@43 $generated@@148 $generated@@146 $generated@@147))
 :pattern ( ($generated@@120 ($generated@@113 $generated@@148 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (<= 0 ($generated@@67 $generated@@149))
 :pattern ( ($generated@@67 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@60 $generated@@104 $generated@@150 ($generated@@105 $generated@@151) $generated@@152) (forall (($generated@@153 T@U) ) (!  (=> ($generated@@24 $generated@@150 $generated@@153) ($generated@@55 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@24 $generated@@150 $generated@@153))
)))
 :pattern ( ($generated@@60 $generated@@104 $generated@@150 ($generated@@105 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@105 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@105 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@105 $generated@@157)) $generated)
 :pattern ( ($generated@@105 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@70 $generated@@159 ($generated@@113 $generated@@159 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@113 $generated@@159 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@23 $generated@@160 ($generated@@23 $generated@@160 $generated@@161)) ($generated@@23 $generated@@160 $generated@@161))
 :pattern ( ($generated@@23 $generated@@160 ($generated@@23 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@39 $generated@@162 ($generated@@39 $generated@@162 $generated@@163)) ($generated@@39 $generated@@162 $generated@@163))
 :pattern ( ($generated@@39 $generated@@162 ($generated@@39 $generated@@162 $generated@@163)))
)))
(assert  (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@164 $generated@@167 $generated@@168 $generated@@169 ($generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@172 $generated@@173) $generated@@170)
 :weight 0
)) (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@164 $generated@@174 $generated@@175 $generated@@176 ($generated@@166 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@164 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@164 $generated@@183 $generated@@184 $generated@@185 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@164 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@12 ($generated@@164 $generated@@44 $generated@@72 $generated@@8 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (or (not (= $generated@@196 $generated@@192)) (not true)) ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@193 $generated@@196) $generated@@194)))) $generated@@195))
 :pattern ( ($generated@@164 $generated@@44 $generated@@72 $generated@@8 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@120 $generated@@198 ($generated@@105 $generated@@199)) (and (= ($generated@@113 $generated@@104 ($generated@@70 $generated@@104 $generated@@198)) $generated@@198) ($generated@@43 $generated@@104 ($generated@@70 $generated@@104 $generated@@198) ($generated@@105 $generated@@199))))
 :pattern ( ($generated@@120 $generated@@198 ($generated@@105 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@200 $generated@@36) ($generated@@43 $generated@@44 $generated@@200 $generated@@57))
 :pattern ( ($generated@@43 $generated@@44 $generated@@200 $generated@@36))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> ($generated@@120 $generated@@201 $generated@@36) ($generated@@120 $generated@@201 $generated@@57))
 :pattern ( ($generated@@120 $generated@@201 $generated@@36))
)))
(assert (= ($generated@@156 $generated@@61) $generated@@1))
(assert (= ($generated@@202 $generated@@61) $generated@@5))
(assert (= ($generated@@156 $generated@@64) $generated@@2))
(assert (= ($generated@@202 $generated@@64) $generated@@6))
(assert (= ($generated@@156 $generated@@57) $generated@@3))
(assert (= ($generated@@202 $generated@@57) $generated@@5))
(assert (= ($generated@@156 $generated@@36) $generated@@4))
(assert (= ($generated@@202 $generated@@36) $generated@@6))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@203 $generated@@57)  (or (= $generated@@203 $generated@@45) ($generated@@35 ($generated@@46 $generated@@203))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@203 $generated@@57))
)))
(assert  (=> (<= 1 $generated@@101) (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (or ($generated@@103 $generated@@205) (and (< 1 $generated@@101) (and (and ($generated@@43 $generated@@104 $generated@@205 ($generated@@105 $generated@@61)) ($generated@@60 $generated@@104 $generated@@205 ($generated@@105 $generated@@61) $generated@@204)) (= ($generated@@67 $generated@@205) ($generated@@106 0))))) ($generated@@56 $generated@@204)) ($generated@@60 $generated@@104 ($generated@@102 $generated@@205) ($generated@@105 $generated@@64) $generated@@204))
 :pattern ( ($generated@@60 $generated@@104 ($generated@@102 $generated@@205) ($generated@@105 $generated@@64) $generated@@204))
))))
(assert (forall (($generated@@206 Int) ) (! (= ($generated@@113 $generated@@9 ($generated@@13 ($generated@@106 $generated@@206))) ($generated@@110 $generated@@73 ($generated@@113 $generated@@9 ($generated@@13 $generated@@206))))
 :pattern ( ($generated@@113 $generated@@9 ($generated@@13 ($generated@@106 $generated@@206))))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@113 $generated@@208 ($generated@@110 $generated@@208 $generated@@207)) ($generated@@110 $generated@@73 ($generated@@113 $generated@@208 $generated@@207)))
 :pattern ( ($generated@@113 $generated@@208 ($generated@@110 $generated@@208 $generated@@207)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@213  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@43 $generated@@104 $generated@@209 ($generated@@105 $generated@@64)))))
(let (($generated@@214 true))
(let (($generated@@215  (=> (and (= $generated@@210 ($generated@@165 $generated@@45 $generated@@211 $generated@@0 false)) (= ($generated@@67 $generated@@209) ($generated@@106 0))) (and (=> (= (ControlFlow 0 4) 1) $generated@@214) (=> (= (ControlFlow 0 4) 3) $generated@@213)))))
(let (($generated@@216  (=> (and (and (and ($generated@@56 $generated@@211) ($generated@@212 $generated@@211)) ($generated@@43 $generated@@104 $generated@@209 ($generated@@105 $generated@@61))) (and (= 1 $generated@@101) (= (ControlFlow 0 5) 4))) $generated@@215)))
$generated@@216)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
