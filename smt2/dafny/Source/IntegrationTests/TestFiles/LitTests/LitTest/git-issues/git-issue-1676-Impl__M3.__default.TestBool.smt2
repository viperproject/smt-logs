(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Int)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@47 (T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@143 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@6 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@6 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@5 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)) ($generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31)))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 ($generated@@35 $generated@@38 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@35 $generated@@38 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or (not (= $generated@@42 $generated@@43)) (not true)) (= ($generated@@40 $generated@@41 $generated@@43) ($generated@@40 ($generated@@39 $generated@@41 $generated@@42) $generated@@43)))
 :pattern ( ($generated@@39 $generated@@41 $generated@@42) ($generated@@40 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@44 ($generated@@39 $generated@@45 $generated@@46)) (+ ($generated@@44 $generated@@45) 1))
 :pattern ( ($generated@@44 ($generated@@39 $generated@@45 $generated@@46)))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@47 ($generated@@36 $generated@@51 $generated@@48) $generated@@49 $generated@@50) ($generated@@22 $generated@@51 $generated@@48 $generated@@49 $generated@@50))
 :pattern ( ($generated@@47 ($generated@@36 $generated@@51 $generated@@48) $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@44 ($generated@@52 $generated@@53 $generated@@54)) (+ ($generated@@44 $generated@@53) ($generated@@44 $generated@@54)))
 :pattern ( ($generated@@44 ($generated@@52 $generated@@53 $generated@@54)))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@55 $generated@@56 $generated@@23) (and (= ($generated@@36 $generated@@6 ($generated@@35 $generated@@6 $generated@@56)) $generated@@56) ($generated@@26 $generated@@6 ($generated@@35 $generated@@6 $generated@@56) $generated@@23)))
 :pattern ( ($generated@@55 $generated@@56 $generated@@23))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@57 ($generated@@28 $generated@@58)) (forall (($generated@@59 T@U) ) (!  (=> (< 0 ($generated@@40 $generated@@57 $generated@@59)) ($generated@@55 $generated@@59 $generated@@58))
 :pattern ( ($generated@@40 $generated@@57 $generated@@59))
)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@57 ($generated@@28 $generated@@58)))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@55 $generated@@60 $generated) (and (= ($generated@@36 $generated@@6 ($generated@@35 $generated@@6 $generated@@60)) $generated@@60) ($generated@@26 $generated@@6 ($generated@@35 $generated@@6 $generated@@60) $generated)))
 :pattern ( ($generated@@55 $generated@@60 $generated))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@55 ($generated@@36 $generated@@63 $generated@@61) $generated@@62) ($generated@@26 $generated@@63 $generated@@61 $generated@@62))
 :pattern ( ($generated@@55 ($generated@@36 $generated@@63 $generated@@61) $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@26 $generated@@6 $generated@@64 $generated@@23)  (not ($generated@@10 $generated@@64)))
 :pattern ( ($generated@@26 $generated@@6 $generated@@64 $generated@@23))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@29 $generated@@65) (forall (($generated@@66 T@U) ) (!  (and (<= 0 ($generated@@40 $generated@@65 $generated@@66)) (<= ($generated@@40 $generated@@65 $generated@@66) ($generated@@44 $generated@@65)))
 :pattern ( ($generated@@40 $generated@@65 $generated@@66))
)))
 :pattern ( ($generated@@29 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (<= 0 ($generated@@44 $generated@@67))
 :pattern ( ($generated@@44 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@40 $generated@@68 $generated@@69) 0)
 :pattern ( ($generated@@40 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@40 ($generated@@39 $generated@@70 $generated@@71) $generated@@71) (+ ($generated@@40 $generated@@70 $generated@@71) 1))
 :pattern ( ($generated@@39 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 ($generated@@28 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@28 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@21 ($generated@@28 $generated@@74)) $generated@@1)
 :pattern ( ($generated@@28 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@35 $generated@@76 ($generated@@36 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@36 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (!  (and (= (= ($generated@@44 $generated@@77) 0) (= $generated@@77 $generated@@68)) (=> (or (not (= ($generated@@44 $generated@@77) 0)) (not true)) (exists (($generated@@78 T@U) ) (! (< 0 ($generated@@40 $generated@@77 $generated@@78))
 :pattern ( ($generated@@40 $generated@@77 $generated@@78))
))))
 :pattern ( ($generated@@44 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@40 ($generated@@52 $generated@@79 $generated@@80) $generated@@81) (+ ($generated@@40 $generated@@79 $generated@@81) ($generated@@40 $generated@@80 $generated@@81)))
 :pattern ( ($generated@@40 ($generated@@52 $generated@@79 $generated@@80) $generated@@81))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@82 $generated@@93 $generated@@94 $generated@@95 ($generated@@89 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@98 $generated@@99) $generated@@96)
 :weight 0
)) (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@82 $generated@@100 $generated@@101 $generated@@102 ($generated@@89 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@82 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@82 $generated@@109 $generated@@110 $generated@@111 ($generated@@89 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@82 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)))) (= ($generated@@5 $generated@@83) 4)) (= ($generated@@5 $generated@@84) 5)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@86 $generated@@118 $generated@@119 ($generated@@90 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@120) $generated@@122) $generated@@120)
 :weight 0
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@127 $generated@@128) (= ($generated@@86 $generated@@123 $generated@@124 ($generated@@90 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@125) $generated@@128) ($generated@@86 $generated@@123 $generated@@124 $generated@@126 $generated@@128)))
 :weight 0
))) (= ($generated@@5 $generated@@87) 6)) (forall (($generated@@129 T@T) ($generated@@130 T@T) ) (= ($generated@@5 ($generated@@88 $generated@@129 $generated@@130)) 7))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@88 $generated@@131 $generated@@132))
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@88 $generated@@133 $generated@@134))
))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@10 ($generated@@82 $generated@@83 $generated@@84 $generated@@6 ($generated@@85 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@10 ($generated@@35 $generated@@6 ($generated@@86 $generated@@84 $generated@@87 ($generated@@86 $generated@@83 ($generated@@88 $generated@@84 $generated@@87) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84 $generated@@6 ($generated@@85 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@55 $generated@@141 ($generated@@28 $generated@@142)) (and (= ($generated@@36 $generated@@27 ($generated@@35 $generated@@27 $generated@@141)) $generated@@141) ($generated@@26 $generated@@27 ($generated@@35 $generated@@27 $generated@@141) ($generated@@28 $generated@@142))))
 :pattern ( ($generated@@55 $generated@@141 ($generated@@28 $generated@@142)))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@143 $generated@@23) $generated@@4))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@36 $generated@@145 ($generated@@32 $generated@@145 $generated@@144)) ($generated@@32 $generated@@87 ($generated@@36 $generated@@145 $generated@@144)))
 :pattern ( ($generated@@36 $generated@@145 ($generated@@32 $generated@@145 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (< 0 ($generated@@40 $generated@@146 $generated@@148)) (< 0 ($generated@@40 ($generated@@39 $generated@@146 $generated@@147) $generated@@148)))
 :pattern ( ($generated@@39 $generated@@146 $generated@@147) ($generated@@40 $generated@@146 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= (< 0 ($generated@@40 ($generated@@39 $generated@@149 $generated@@150) $generated@@151))  (or (= $generated@@151 $generated@@150) (< 0 ($generated@@40 $generated@@149 $generated@@151))))
 :pattern ( ($generated@@40 ($generated@@39 $generated@@149 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@22 $generated@@27 $generated@@152 ($generated@@28 $generated@@153) $generated@@154) (forall (($generated@@155 T@U) ) (!  (=> (< 0 ($generated@@40 $generated@@152 $generated@@155)) ($generated@@47 $generated@@155 $generated@@153 $generated@@154))
 :pattern ( ($generated@@40 $generated@@152 $generated@@155))
)))
 :pattern ( ($generated@@22 $generated@@27 $generated@@152 ($generated@@28 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@22 $generated@@6 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@22 $generated@@6 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@26 $generated@@6 $generated@@158 $generated)
 :pattern ( ($generated@@26 $generated@@6 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () Bool)
(declare-fun $generated@@165 () Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@177  (=> (and (and (and (and (and (and (not ($generated@@10 ($generated@@32 $generated@@6 ($generated@@9 true)))) (not ($generated@@10 ($generated@@32 $generated@@6 ($generated@@9 true))))) (not ($generated@@10 ($generated@@32 $generated@@6 ($generated@@9 true))))) (not ($generated@@10 ($generated@@32 $generated@@6 ($generated@@9 true))))) (not ($generated@@10 ($generated@@32 $generated@@6 ($generated@@9 true))))) (not ($generated@@10 ($generated@@32 $generated@@6 ($generated@@9 true))))) (= (ControlFlow 0 10) (- 0 9))) false)))
(let (($generated@@178 true))
(let (($generated@@179 true))
(let (($generated@@180  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@26 $generated@@27 ($generated@@52 $generated@@159 $generated@@160) ($generated@@28 $generated@@23)))))
(let (($generated@@181  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@26 $generated@@27 ($generated@@52 $generated@@160 $generated@@159) ($generated@@28 $generated@@23)))))
(let (($generated@@182 true))
(let (($generated@@183 true))
(let (($generated@@184  (=> (= $generated@@161 ($generated@@85 $generated@@162 $generated@@163 $generated@@2 false)) (=> (and (= $generated@@160 ($generated@@39 $generated@@68 ($generated@@36 $generated@@6 ($generated@@9 $generated@@164)))) (= $generated@@159 ($generated@@39 $generated@@68 ($generated@@36 $generated@@6 ($generated@@9 $generated@@165))))) (and (and (and (and (and (and (=> (= (ControlFlow 0 11) 1) $generated@@183) (=> (= (ControlFlow 0 11) 2) $generated@@182)) (=> (= (ControlFlow 0 11) 4) $generated@@181)) (=> (= (ControlFlow 0 11) 6) $generated@@180)) (=> (= (ControlFlow 0 11) 7) $generated@@179)) (=> (= (ControlFlow 0 11) 8) $generated@@178)) (=> (= (ControlFlow 0 11) 10) $generated@@177))))))
(let (($generated@@185  (=> (and (and (and ($generated@@166 $generated@@163) ($generated@@167 $generated@@163)) (not $generated@@165)) (and (and ($generated@@26 $generated@@27 $generated@@168 ($generated@@28 $generated)) ($generated@@22 $generated@@27 $generated@@168 ($generated@@28 $generated) $generated@@163)) true)) (=> (and (and (and (and (and ($generated@@26 $generated@@27 $generated@@169 ($generated@@28 $generated@@23)) ($generated@@22 $generated@@27 $generated@@169 ($generated@@28 $generated@@23) $generated@@163)) true) (and (and ($generated@@26 $generated@@27 $generated@@170 ($generated@@28 $generated)) ($generated@@22 $generated@@27 $generated@@170 ($generated@@28 $generated) $generated@@163)) true)) (and (and (and ($generated@@26 $generated@@27 $generated@@171 ($generated@@28 $generated)) ($generated@@22 $generated@@27 $generated@@171 ($generated@@28 $generated) $generated@@163)) true) (and (and ($generated@@26 $generated@@27 $generated@@172 ($generated@@28 $generated@@23)) ($generated@@22 $generated@@27 $generated@@172 ($generated@@28 $generated@@23) $generated@@163)) true))) (and (and (and (and ($generated@@26 $generated@@27 $generated@@173 ($generated@@28 $generated@@23)) ($generated@@22 $generated@@27 $generated@@173 ($generated@@28 $generated@@23) $generated@@163)) true) (and (and ($generated@@26 $generated@@27 $generated@@174 ($generated@@28 $generated)) ($generated@@22 $generated@@27 $generated@@174 ($generated@@28 $generated) $generated@@163)) true)) (and (and (and ($generated@@26 $generated@@27 $generated@@175 ($generated@@28 $generated)) ($generated@@22 $generated@@27 $generated@@175 ($generated@@28 $generated) $generated@@163)) true) (and (= 1 $generated@@176) (= (ControlFlow 0 12) 11))))) $generated@@184))))
$generated@@185))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 6) (- 5))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
