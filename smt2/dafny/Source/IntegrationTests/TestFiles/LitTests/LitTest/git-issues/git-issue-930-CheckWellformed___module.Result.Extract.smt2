(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Int)
(declare-fun $generated@@112 (T@U) Int)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@29) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (< $generated@@31 ($generated@@26 $generated@@30))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@30 $generated@@31))) ($generated@@27 ($generated@@25 $generated@@30))))
 :pattern ( ($generated@@24 $generated@@30 $generated@@31) ($generated@@25 $generated@@30))
)))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and (or ($generated@@35 $generated@@41 $generated@@42) (and (< 0 $generated@@32) (and ($generated@@36 $generated@@29 $generated@@42 ($generated@@37 $generated@@41) $generated@@40) ($generated@@38 $generated@@42)))) ($generated@@39 $generated@@40)) ($generated@@33 ($generated@@34 $generated@@41 $generated@@42) $generated@@41 $generated@@40))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@41 $generated@@42) $generated@@41 $generated@@40))
))))
(assert (= ($generated@@26 $generated@@43) 0))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@35 $generated@@49 $generated@@50) (and (< 0 $generated@@32) (and ($generated@@47 $generated@@29 $generated@@50 ($generated@@37 $generated@@49)) ($generated@@38 $generated@@50)))) ($generated@@48 ($generated@@34 $generated@@49 $generated@@50) $generated@@49))
 :pattern ( ($generated@@34 $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@38 $generated@@52) (= ($generated@@51 $generated@@52) $generated@@4))
 :pattern ( ($generated@@38 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@51 $generated@@54) $generated@@5))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 ($generated@@28 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@28 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@38 $generated@@59) (exists (($generated@@60 T@U) ) (= $generated@@59 ($generated@@58 $generated@@60))))
 :pattern ( ($generated@@38 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@53 $generated@@61) (exists (($generated@@62 T@U) ) (= $generated@@61 ($generated@@25 $generated@@62))))
 :pattern ( ($generated@@53 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@33 ($generated@@55 $generated@@66 $generated@@63) $generated@@64 $generated@@65) ($generated@@36 $generated@@66 $generated@@63 $generated@@64 $generated@@65))
 :pattern ( ($generated@@33 ($generated@@55 $generated@@66 $generated@@63) $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (!  (and (= ($generated@@23 ($generated@@37 $generated@@68)) $generated@@3) (= ($generated@@67 ($generated@@37 $generated@@68)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@68))
)))
(assert (= ($generated@@7 $generated@@69) 4))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@35 $generated@@71 ($generated@@44 $generated@@29 $generated@@72)) (and (< 0 $generated@@32) (and ($generated@@47 $generated@@29 $generated@@72 ($generated@@37 $generated@@71)) ($generated@@12 ($generated@@44 $generated@@8 ($generated@@11 ($generated@@38 ($generated@@44 $generated@@29 $generated@@72)))))))) (= ($generated@@34 $generated@@71 ($generated@@44 $generated@@29 $generated@@72)) ($generated@@44 $generated@@69 ($generated@@70 ($generated@@44 $generated@@29 $generated@@72)))))
 :weight 3
 :pattern ( ($generated@@34 $generated@@71 ($generated@@44 $generated@@29 $generated@@72)))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@39 $generated@@75) (= ($generated@@36 $generated@@29 ($generated@@58 $generated@@74) ($generated@@37 $generated@@73) $generated@@75) ($generated@@33 $generated@@74 $generated@@73 $generated@@75)))
 :pattern ( ($generated@@36 $generated@@29 ($generated@@58 $generated@@74) ($generated@@37 $generated@@73) $generated@@75))
)))
(assert (= ($generated@@7 $generated@@76) 5))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@39 $generated@@80) (and ($generated@@53 $generated@@79) (exists (($generated@@81 T@U) ) (! ($generated@@36 $generated@@29 $generated@@79 ($generated@@37 $generated@@81) $generated@@80)
 :pattern ( ($generated@@36 $generated@@29 $generated@@79 ($generated@@37 $generated@@81) $generated@@80))
)))) ($generated@@36 $generated@@76 ($generated@@77 $generated@@79) ($generated@@78 $generated) $generated@@80))
 :pattern ( ($generated@@36 $generated@@76 ($generated@@77 $generated@@79) ($generated@@78 $generated) $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@39 $generated@@84) (= ($generated@@36 $generated@@29 ($generated@@25 $generated@@83) ($generated@@37 $generated@@82) $generated@@84) ($generated@@36 $generated@@76 $generated@@83 ($generated@@78 $generated) $generated@@84)))
 :pattern ( ($generated@@36 $generated@@29 ($generated@@25 $generated@@83) ($generated@@37 $generated@@82) $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@47 $generated@@29 $generated@@86 ($generated@@37 $generated@@85)) (or ($generated@@38 $generated@@86) ($generated@@53 $generated@@86)))
 :pattern ( ($generated@@53 $generated@@86) ($generated@@47 $generated@@29 $generated@@86 ($generated@@37 $generated@@85)))
 :pattern ( ($generated@@38 $generated@@86) ($generated@@47 $generated@@29 $generated@@86 ($generated@@37 $generated@@85)))
)))
(assert (= ($generated@@7 $generated@@87) 6))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@48 $generated@@88 $generated) (and (= ($generated@@55 $generated@@87 ($generated@@28 $generated@@87 $generated@@88)) $generated@@88) ($generated@@47 $generated@@87 ($generated@@28 $generated@@87 $generated@@88) $generated)))
 :pattern ( ($generated@@48 $generated@@88 $generated))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@48 ($generated@@55 $generated@@91 $generated@@89) $generated@@90) ($generated@@47 $generated@@91 $generated@@89 $generated@@90))
 :pattern ( ($generated@@48 ($generated@@55 $generated@@91 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (<= 0 ($generated@@26 $generated@@92))
 :pattern ( ($generated@@26 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@36 $generated@@76 $generated@@93 ($generated@@78 $generated@@94) $generated@@95) (forall (($generated@@96 Int) ) (!  (=> (and (<= 0 $generated@@96) (< $generated@@96 ($generated@@26 $generated@@93))) ($generated@@33 ($generated@@24 $generated@@93 $generated@@96) $generated@@94 $generated@@95))
 :pattern ( ($generated@@24 $generated@@93 $generated@@96))
)))
 :pattern ( ($generated@@36 $generated@@76 $generated@@93 ($generated@@78 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@97 ($generated@@78 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@23 ($generated@@78 $generated@@99)) $generated@@1)
 :pattern ( ($generated@@78 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@100 ($generated@@37 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@37 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@51 ($generated@@58 $generated@@102)) $generated@@4)
 :pattern ( ($generated@@58 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@70 ($generated@@58 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@58 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@51 ($generated@@25 $generated@@104)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@77 ($generated@@25 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@25 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@28 $generated@@107 ($generated@@55 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@55 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@47 $generated@@29 ($generated@@58 $generated@@109) ($generated@@37 $generated@@108)) ($generated@@48 $generated@@109 $generated@@108))
 :pattern ( ($generated@@47 $generated@@29 ($generated@@58 $generated@@109) ($generated@@37 $generated@@108)))
)))
(assert (forall (($generated@@111 T@U) ) (! (< ($generated@@110 $generated@@111) ($generated@@27 ($generated@@58 $generated@@111)))
 :pattern ( ($generated@@58 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (< ($generated@@112 $generated@@113) ($generated@@27 ($generated@@25 $generated@@113)))
 :pattern ( ($generated@@25 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and ($generated@@39 $generated@@116) (and ($generated@@38 $generated@@114) ($generated@@36 $generated@@29 $generated@@114 ($generated@@37 $generated@@115) $generated@@116))) ($generated@@33 ($generated@@70 $generated@@114) $generated@@115 $generated@@116))
 :pattern ( ($generated@@33 ($generated@@70 $generated@@114) $generated@@115 $generated@@116))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@117 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@117 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@117 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@117 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@117 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@7 $generated@@118) 7)) (= ($generated@@7 $generated@@119) 8)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@121 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@121 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@121 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@7 ($generated@@122 $generated@@163 $generated@@164)) 9))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@12 ($generated@@117 $generated@@118 $generated@@119 $generated@@8 ($generated@@120 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@12 ($generated@@28 $generated@@8 ($generated@@121 $generated@@119 $generated@@69 ($generated@@121 $generated@@118 ($generated@@122 $generated@@119 $generated@@69) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@117 $generated@@118 $generated@@119 $generated@@8 ($generated@@120 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@110 ($generated@@55 $generated@@29 $generated@@175)) ($generated@@27 $generated@@175))
 :pattern ( ($generated@@110 ($generated@@55 $generated@@29 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@48 $generated@@176 ($generated@@78 $generated@@177)) (and (= ($generated@@55 $generated@@76 ($generated@@28 $generated@@76 $generated@@176)) $generated@@176) ($generated@@47 $generated@@76 ($generated@@28 $generated@@76 $generated@@176) ($generated@@78 $generated@@177))))
 :pattern ( ($generated@@48 $generated@@176 ($generated@@78 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@48 $generated@@179 ($generated@@37 $generated@@178)) (and (= ($generated@@55 $generated@@29 ($generated@@28 $generated@@29 $generated@@179)) $generated@@179) ($generated@@47 $generated@@29 ($generated@@28 $generated@@29 $generated@@179) ($generated@@37 $generated@@178))))
 :pattern ( ($generated@@48 $generated@@179 ($generated@@37 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@47 $generated@@29 ($generated@@25 $generated@@181) ($generated@@37 $generated@@180)) ($generated@@47 $generated@@76 $generated@@181 ($generated@@78 $generated)))
 :pattern ( ($generated@@47 $generated@@29 ($generated@@25 $generated@@181) ($generated@@37 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@58 ($generated@@44 $generated@@69 $generated@@182)) ($generated@@44 $generated@@29 ($generated@@58 $generated@@182)))
 :pattern ( ($generated@@58 ($generated@@44 $generated@@69 $generated@@182)))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@25 ($generated@@44 $generated@@76 $generated@@183)) ($generated@@44 $generated@@29 ($generated@@25 $generated@@183)))
 :pattern ( ($generated@@25 ($generated@@44 $generated@@76 $generated@@183)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@55 $generated@@185 ($generated@@44 $generated@@185 $generated@@184)) ($generated@@44 $generated@@69 ($generated@@55 $generated@@185 $generated@@184)))
 :pattern ( ($generated@@55 $generated@@185 ($generated@@44 $generated@@185 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ) (!  (=> (= ($generated@@26 $generated@@186) 0) (= $generated@@186 $generated@@43))
 :pattern ( ($generated@@26 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@36 $generated@@87 $generated@@188 $generated $generated@@187)
 :pattern ( ($generated@@36 $generated@@87 $generated@@188 $generated $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@47 $generated@@76 $generated@@189 ($generated@@78 $generated@@190)) (forall (($generated@@191 Int) ) (!  (=> (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@26 $generated@@189))) ($generated@@48 ($generated@@24 $generated@@189 $generated@@191) $generated@@190))
 :pattern ( ($generated@@24 $generated@@189 $generated@@191))
)))
 :pattern ( ($generated@@47 $generated@@76 $generated@@189 ($generated@@78 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 Int) ) (!  (=> (and (<= 0 $generated@@193) (< $generated@@193 ($generated@@26 $generated@@192))) (< ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@192 $generated@@193))) ($generated@@112 $generated@@192)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 ($generated@@24 $generated@@192 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! ($generated@@47 $generated@@87 $generated@@194 $generated)
 :pattern ( ($generated@@47 $generated@@87 $generated@@194 $generated))
)))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@35 $generated@@195 $generated@@196) (and (< 0 $generated@@32) (and ($generated@@47 $generated@@29 $generated@@196 ($generated@@37 $generated@@195)) ($generated@@38 $generated@@196)))) (= ($generated@@34 $generated@@195 $generated@@196) ($generated@@70 $generated@@196)))
 :pattern ( ($generated@@34 $generated@@195 $generated@@196))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@203  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@38 $generated@@197))))
(let (($generated@@204 true))
(let (($generated@@205  (=> (and (= $generated@@198 ($generated@@120 $generated@@199 $generated@@200 $generated@@2 false)) ($generated@@38 $generated@@197)) (and (=> (= (ControlFlow 0 4) 1) $generated@@204) (=> (= (ControlFlow 0 4) 3) $generated@@203)))))
(let (($generated@@206  (=> (and ($generated@@39 $generated@@200) ($generated@@201 $generated@@200)) (=> (and (and ($generated@@47 $generated@@29 $generated@@197 ($generated@@37 $generated@@202)) ($generated@@36 $generated@@29 $generated@@197 ($generated@@37 $generated@@202) $generated@@200)) (and (= 0 $generated@@32) (= (ControlFlow 0 5) 4))) $generated@@205))))
$generated@@206)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
