(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@T) T@T)
(declare-fun $generated@@61 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 (T@U T@U) Bool)
(declare-fun $generated@@187 (T@U T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@207 (T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert ($generated@@31 $generated@@32))
(assert (forall (($generated@@35 T@U) ) (!  (not ($generated@@33 $generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35))
)))
(assert (= ($generated@@12 $generated@@37) 3))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@40 $generated@@32)  (or (= $generated@@40 $generated@@38) (= ($generated@@39 $generated@@40) $generated@@32)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 $generated@@32))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and ($generated@@41 $generated@@44 $generated@@32 $generated@@45) ($generated@@42 $generated@@45)) ($generated@@41 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@41 $generated@@44 $generated@@32 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 $generated@@37 $generated@@48 $generated@@47 $generated@@49) ($generated@@46 $generated@@37 $generated@@48 $generated@@43 $generated@@49))
 :pattern ( ($generated@@46 $generated@@37 $generated@@48 $generated@@47 $generated@@49))
 :pattern ( ($generated@@46 $generated@@37 $generated@@48 $generated@@43 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@46 $generated@@37 $generated@@51 $generated@@50 $generated@@52) ($generated@@46 $generated@@37 $generated@@51 $generated@@32 $generated@@52))
 :pattern ( ($generated@@46 $generated@@37 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@46 $generated@@37 $generated@@51 $generated@@32 $generated@@52))
)))
(assert (= ($generated@@28 $generated@@53) 0))
(assert (= ($generated@@54 $generated@@8 $generated@@11) $generated@@53))
(assert  (not ($generated@@55 $generated@@53)))
(assert  (and (and (and (and (and (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@57 $generated@@64 $generated@@65 ($generated@@61 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@57 $generated@@69 $generated@@70 ($generated@@61 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@57 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@12 $generated@@58) 4)) (= ($generated@@12 $generated@@59) 5)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@12 ($generated@@60 $generated@@75 $generated@@76)) 6))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@62 ($generated@@60 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@60 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@63 ($generated@@60 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@60 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@46 $generated@@37 $generated@@81 $generated@@43 $generated@@82)  (or (= $generated@@81 $generated@@38) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@82 $generated@@81) $generated@@2)))))
 :pattern ( ($generated@@46 $generated@@37 $generated@@81 $generated@@43 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@46 $generated@@37 $generated@@83 $generated@@32 $generated@@84)  (or (= $generated@@83 $generated@@38) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@84 $generated@@83) $generated@@2)))))
 :pattern ( ($generated@@46 $generated@@37 $generated@@83 $generated@@32 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@85 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@86 $generated@@88) $generated@@2))) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@87 $generated@@88) $generated@@2))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@87 $generated@@88) $generated@@2))
)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 $generated@@90) $generated@@90)
 :pattern ( ($generated@@89 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@56 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@56 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@33 ($generated@@95 $generated@@96) $generated@@97) ($generated@@17 ($generated@@57 $generated@@59 $generated@@13 $generated@@96 $generated@@97)))
 :pattern ( ($generated@@33 ($generated@@95 $generated@@96) $generated@@97))
)))
(assert (= ($generated@@12 $generated@@98) 7))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@36 $generated@@98 $generated@@101 ($generated@@99 $generated@@102)) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@33 $generated@@101 $generated@@103) ($generated@@100 $generated@@103 $generated@@102))
 :pattern ( ($generated@@33 $generated@@101 $generated@@103))
)))
 :pattern ( ($generated@@36 $generated@@98 $generated@@101 ($generated@@99 $generated@@102)))
)))
(assert ($generated@@55 $generated@@2))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@104) (and (or (not (= $generated@@105 $generated@@38)) (not true)) (= ($generated@@39 $generated@@105) $generated@@32))) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@104 $generated@@105) $generated@@2)))) ($generated@@46 $generated@@14 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@104 $generated@@105) $generated@@53)) $generated $generated@@104))
 :pattern ( ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@104 $generated@@105) $generated@@53)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@41 ($generated@@92 $generated@@109 $generated@@106) $generated@@107 $generated@@108) ($generated@@46 $generated@@109 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@41 ($generated@@92 $generated@@109 $generated@@106) $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> ($generated@@85 $generated@@110 $generated@@111) (=> ($generated@@41 $generated@@112 $generated@@113 $generated@@110) ($generated@@41 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@85 $generated@@110 $generated@@111) ($generated@@41 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (!  (=> ($generated@@85 $generated@@114 $generated@@115) (=> ($generated@@46 $generated@@118 $generated@@116 $generated@@117 $generated@@114) ($generated@@46 $generated@@118 $generated@@116 $generated@@117 $generated@@115)))
 :pattern ( ($generated@@85 $generated@@114 $generated@@115) ($generated@@46 $generated@@118 $generated@@116 $generated@@117 $generated@@114))
)))
(assert  (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@119 $generated@@122 $generated@@123 $generated@@124 ($generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@121 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@119 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@119 $generated@@138 $generated@@139 $generated@@140 ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@119 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@17 ($generated@@119 $generated@@37 $generated@@58 $generated@@13 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@17 ($generated@@56 $generated@@13 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@148 $generated@@151) $generated@@149)))) (= $generated@@151 $generated@@150)))
 :pattern ( ($generated@@119 $generated@@37 $generated@@58 $generated@@13 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@100 $generated@@153 $generated@@47) (and (= ($generated@@92 $generated@@37 ($generated@@56 $generated@@37 $generated@@153)) $generated@@153) ($generated@@36 $generated@@37 ($generated@@56 $generated@@37 $generated@@153) $generated@@47)))
 :pattern ( ($generated@@100 $generated@@153 $generated@@47))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@100 $generated@@154 $generated@@50) (and (= ($generated@@92 $generated@@37 ($generated@@56 $generated@@37 $generated@@154)) $generated@@154) ($generated@@36 $generated@@37 ($generated@@56 $generated@@37 $generated@@154) $generated@@50)))
 :pattern ( ($generated@@100 $generated@@154 $generated@@50))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@100 $generated@@155 $generated@@32) (and (= ($generated@@92 $generated@@37 ($generated@@56 $generated@@37 $generated@@155)) $generated@@155) ($generated@@36 $generated@@37 ($generated@@56 $generated@@37 $generated@@155) $generated@@32)))
 :pattern ( ($generated@@100 $generated@@155 $generated@@32))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@100 $generated@@156 $generated@@43) (and (= ($generated@@92 $generated@@37 ($generated@@56 $generated@@37 $generated@@156)) $generated@@156) ($generated@@36 $generated@@37 ($generated@@56 $generated@@37 $generated@@156) $generated@@43)))
 :pattern ( ($generated@@100 $generated@@156 $generated@@43))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@157 $generated@@47)  (and ($generated@@36 $generated@@37 $generated@@157 $generated@@43) (or (not (= $generated@@157 $generated@@38)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@157 $generated@@47))
 :pattern ( ($generated@@36 $generated@@37 $generated@@157 $generated@@43))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@158 $generated@@50)  (and ($generated@@36 $generated@@37 $generated@@158 $generated@@32) (or (not (= $generated@@158 $generated@@38)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@158 $generated@@50))
 :pattern ( ($generated@@36 $generated@@37 $generated@@158 $generated@@32))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@46 $generated@@37 $generated@@159 $generated@@32 $generated@@160) ($generated@@46 $generated@@37 $generated@@159 $generated@@43 $generated@@160))
 :pattern ( ($generated@@46 $generated@@37 $generated@@159 $generated@@32 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@161 $generated@@162 $generated@@163) (= $generated@@162 $generated@@163))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or (not (= $generated@@164 $generated@@166)) (not true)) (=> (and ($generated@@85 $generated@@164 $generated@@165) ($generated@@85 $generated@@165 $generated@@166)) ($generated@@85 $generated@@164 $generated@@166)))
 :pattern ( ($generated@@85 $generated@@164 $generated@@165) ($generated@@85 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (and (= ($generated@@167 ($generated@@54 $generated@@168 $generated@@169)) $generated@@168) (= ($generated@@30 ($generated@@54 $generated@@168 $generated@@169)) $generated@@169))
 :pattern ( ($generated@@54 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@100 $generated@@170 $generated) (and (= ($generated@@92 $generated@@14 ($generated@@56 $generated@@14 $generated@@170)) $generated@@170) ($generated@@36 $generated@@14 ($generated@@56 $generated@@14 $generated@@170) $generated)))
 :pattern ( ($generated@@100 $generated@@170 $generated))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@100 ($generated@@92 $generated@@173 $generated@@171) $generated@@172) ($generated@@36 $generated@@173 $generated@@171 $generated@@172))
 :pattern ( ($generated@@100 ($generated@@92 $generated@@173 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@46 $generated@@98 $generated@@174 ($generated@@99 $generated@@175) $generated@@176) (forall (($generated@@177 T@U) ) (!  (=> ($generated@@33 $generated@@174 $generated@@177) ($generated@@41 $generated@@177 $generated@@175 $generated@@176))
 :pattern ( ($generated@@33 $generated@@174 $generated@@177))
)))
 :pattern ( ($generated@@46 $generated@@98 $generated@@174 ($generated@@99 $generated@@175) $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@178 ($generated@@99 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@99 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@29 ($generated@@99 $generated@@180)) $generated@@1)
 :pattern ( ($generated@@99 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@56 $generated@@182 ($generated@@92 $generated@@182 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@92 $generated@@182 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@42 $generated@@183) (and (or (not (= $generated@@184 $generated@@38)) (not true)) (= ($generated@@39 $generated@@184) $generated@@32))) ($generated@@36 $generated@@14 ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@183 $generated@@184) $generated@@53)) $generated))
 :pattern ( ($generated@@56 $generated@@14 ($generated@@57 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@183 $generated@@184) $generated@@53)))
)))
(assert  (=> (<= 0 $generated@@185) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or ($generated@@187 $generated@@188 $generated@@189) (and (< 0 $generated@@185) ($generated@@100 $generated@@189 $generated@@188))) (= ($generated@@186 $generated@@188 $generated@@189) ($generated@@17 ($generated@@89 $generated@@13 ($generated@@16 true)))))
 :pattern ( ($generated@@186 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@100 $generated@@190 ($generated@@99 $generated@@191)) (and (= ($generated@@92 $generated@@98 ($generated@@56 $generated@@98 $generated@@190)) $generated@@190) ($generated@@36 $generated@@98 ($generated@@56 $generated@@98 $generated@@190) ($generated@@99 $generated@@191))))
 :pattern ( ($generated@@100 $generated@@190 ($generated@@99 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@192 $generated@@32) ($generated@@36 $generated@@37 $generated@@192 $generated@@43))
 :pattern ( ($generated@@36 $generated@@37 $generated@@192 $generated@@32))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> ($generated@@100 $generated@@193 $generated@@32) ($generated@@100 $generated@@193 $generated@@43))
 :pattern ( ($generated@@100 $generated@@193 $generated@@32))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@42 ($generated@@61 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@194 $generated@@195 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@194 $generated@@195) $generated@@196 $generated@@197))) ($generated@@85 $generated@@194 ($generated@@61 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@194 $generated@@195 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@194 $generated@@195) $generated@@196 $generated@@197))))
 :pattern ( ($generated@@61 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@194 $generated@@195 ($generated@@61 $generated@@58 $generated@@59 ($generated@@57 $generated@@37 ($generated@@60 $generated@@58 $generated@@59) $generated@@194 $generated@@195) $generated@@196 $generated@@197)))
)))
(assert (= ($generated@@29 $generated@@47) $generated@@4))
(assert (= ($generated@@198 $generated@@47) $generated@@9))
(assert (= ($generated@@29 $generated@@50) $generated@@5))
(assert (= ($generated@@198 $generated@@50) $generated@@10))
(assert (= ($generated@@29 $generated@@32) $generated@@6))
(assert (= ($generated@@198 $generated@@32) $generated@@10))
(assert (= ($generated@@29 $generated@@43) $generated@@7))
(assert (= ($generated@@198 $generated@@43) $generated@@9))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@199 $generated@@43)  (or (= $generated@@199 $generated@@38) ($generated@@31 ($generated@@39 $generated@@199))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@199 $generated@@43))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@161 $generated@@200 $generated@@201) (forall (($generated@@202 T@U) ) (! (= ($generated@@33 $generated@@200 $generated@@202) ($generated@@33 $generated@@201 $generated@@202))
 :pattern ( ($generated@@33 $generated@@200 $generated@@202))
 :pattern ( ($generated@@33 $generated@@201 $generated@@202))
)))
 :pattern ( ($generated@@161 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@92 $generated@@204 ($generated@@89 $generated@@204 $generated@@203)) ($generated@@89 $generated@@59 ($generated@@92 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@92 $generated@@204 ($generated@@89 $generated@@204 $generated@@203)))
)))
(assert  (=> (<= 0 $generated@@185) (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (or ($generated@@187 $generated@@205 ($generated@@89 $generated@@59 $generated@@206)) (and (< 0 $generated@@185) ($generated@@100 $generated@@206 $generated@@205))) (= ($generated@@186 $generated@@205 ($generated@@89 $generated@@59 $generated@@206)) ($generated@@17 ($generated@@89 $generated@@13 ($generated@@16 true)))))
 :weight 3
 :pattern ( ($generated@@186 $generated@@205 ($generated@@89 $generated@@59 $generated@@206)))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@17 ($generated@@57 $generated@@59 $generated@@13 ($generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211))  (and ($generated@@100 $generated@@211 $generated@@208) (and (= ($generated@@56 $generated@@37 $generated@@211) $generated@@209) ($generated@@186 $generated@@210 $generated@@211))))
 :pattern ( ($generated@@57 $generated@@59 $generated@@13 ($generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@46 $generated@@14 $generated@@213 $generated $generated@@212)
 :pattern ( ($generated@@46 $generated@@14 $generated@@213 $generated $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! ($generated@@36 $generated@@14 $generated@@214 $generated)
 :pattern ( ($generated@@36 $generated@@14 $generated@@214 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Bool)
(declare-fun $generated@@225 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@226  (and (=> (= (ControlFlow 0 3) (- 0 10)) (or (and ($generated@@36 $generated@@37 $generated@@38 $generated@@50) ($generated@@33 $generated@@215 ($generated@@92 $generated@@37 $generated@@38))) (exists (($generated@@227 T@U) )  (and ($generated@@36 $generated@@37 $generated@@227 $generated@@50) ($generated@@33 $generated@@215 ($generated@@92 $generated@@37 $generated@@227)))))) (=> (or (and ($generated@@36 $generated@@37 $generated@@38 $generated@@50) ($generated@@33 $generated@@215 ($generated@@92 $generated@@37 $generated@@38))) (exists (($generated@@228 T@U) )  (and ($generated@@36 $generated@@37 $generated@@228 $generated@@50) ($generated@@33 $generated@@215 ($generated@@92 $generated@@37 $generated@@228))))) (=> (and (=> true (and ($generated@@36 $generated@@37 $generated@@216 $generated@@50) ($generated@@46 $generated@@37 $generated@@216 $generated@@50 $generated@@217))) ($generated@@33 $generated@@215 ($generated@@92 $generated@@37 $generated@@216))) (and (=> (= (ControlFlow 0 3) (- 0 9)) true) (and (=> (= (ControlFlow 0 3) (- 0 8)) (or (not (= $generated@@216 $generated@@38)) (not true))) (and (=> (= (ControlFlow 0 3) (- 0 7)) true) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (not (= $generated@@216 $generated@@38)) (not true))) (=> (or (not (= $generated@@216 $generated@@38)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@17 ($generated@@119 $generated@@37 $generated@@58 $generated@@13 $generated@@218 $generated@@216 $generated@@53))) (=> ($generated@@17 ($generated@@119 $generated@@37 $generated@@58 $generated@@13 $generated@@218 $generated@@216 $generated@@53)) (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (=> (= (ControlFlow 0 3) (- 0 2)) (or (not (= $generated@@216 $generated@@38)) (not true))))))))))))))))
(let (($generated@@229  (=> (and (not (and ($generated@@36 $generated@@37 $generated@@219 $generated@@50) ($generated@@46 $generated@@37 $generated@@219 $generated@@50 $generated@@217))) (= (ControlFlow 0 12) 3)) $generated@@226)))
(let (($generated@@230  (=> (and (and ($generated@@36 $generated@@37 $generated@@219 $generated@@50) ($generated@@46 $generated@@37 $generated@@219 $generated@@50 $generated@@217)) (= (ControlFlow 0 11) 3)) $generated@@226)))
(let (($generated@@231  (=> (not ($generated@@161 $generated@@215 $generated@@34)) (and (=> (= (ControlFlow 0 13) 11) $generated@@230) (=> (= (ControlFlow 0 13) 12) $generated@@229)))))
(let (($generated@@232 true))
(let (($generated@@233  (=> (and (forall (($generated@@234 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@234 $generated@@50) (=> (= $generated@@234 $generated@@220) ($generated@@187 $generated@@50 ($generated@@92 $generated@@37 $generated@@234))))
 :pattern ( ($generated@@186 $generated@@50 ($generated@@92 $generated@@37 $generated@@234)))
)) (= $generated@@215 ($generated@@95 ($generated@@207 $generated@@50 $generated@@220 $generated@@50)))) (and (=> (= (ControlFlow 0 14) 1) $generated@@232) (=> (= (ControlFlow 0 14) 13) $generated@@231)))))
(let (($generated@@235  (=> (and (not (and (= $generated@@221 $generated@@220) ($generated@@186 $generated@@50 ($generated@@92 $generated@@37 $generated@@221)))) (= (ControlFlow 0 17) 14)) $generated@@233)))
(let (($generated@@236  (=> (and (and (= $generated@@221 $generated@@220) ($generated@@186 $generated@@50 ($generated@@92 $generated@@37 $generated@@221))) (= (ControlFlow 0 16) 14)) $generated@@233)))
(let (($generated@@237  (=> (or (not (= $generated@@221 $generated@@220)) (not true)) (and (=> (= (ControlFlow 0 19) 16) $generated@@236) (=> (= (ControlFlow 0 19) 17) $generated@@235)))))
(let (($generated@@238  (=> (= $generated@@221 $generated@@220) (=> (and ($generated@@46 $generated@@37 $generated@@221 $generated@@50 $generated@@217) ($generated@@187 $generated@@50 ($generated@@92 $generated@@37 $generated@@221))) (and (=> (= (ControlFlow 0 18) 16) $generated@@236) (=> (= (ControlFlow 0 18) 17) $generated@@235))))))
(let (($generated@@239  (=> (and ($generated@@36 $generated@@37 $generated@@221 $generated@@50) ($generated@@46 $generated@@37 $generated@@221 $generated@@50 $generated@@217)) (and (=> (= (ControlFlow 0 20) 18) $generated@@238) (=> (= (ControlFlow 0 20) 19) $generated@@237)))))
(let (($generated@@240  (=> (and (not (and ($generated@@36 $generated@@37 $generated@@221 $generated@@50) ($generated@@46 $generated@@37 $generated@@221 $generated@@50 $generated@@217))) (= (ControlFlow 0 15) 14)) $generated@@233)))
(let (($generated@@241  (=> (= $generated@@218 ($generated@@120 $generated@@38 $generated@@217 $generated@@2 $generated@@220)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (or (not (= $generated@@220 $generated@@38)) (not true))) (and (=> (= (ControlFlow 0 21) 20) $generated@@239) (=> (= (ControlFlow 0 21) 15) $generated@@240))))))
(let (($generated@@242  (=> (and (and ($generated@@42 $generated@@217) ($generated@@222 $generated@@217)) (and ($generated@@36 $generated@@37 $generated@@220 $generated@@47) ($generated@@46 $generated@@37 $generated@@220 $generated@@47 $generated@@217))) (=> (and (and (and ($generated@@36 $generated@@98 $generated@@223 ($generated@@99 $generated@@50)) ($generated@@46 $generated@@98 $generated@@223 ($generated@@99 $generated@@50) $generated@@217)) true) (and (and (=> $generated@@224 (and ($generated@@36 $generated@@37 $generated@@225 $generated@@50) ($generated@@46 $generated@@37 $generated@@225 $generated@@50 $generated@@217))) true) (and (= 1 $generated@@185) (= (ControlFlow 0 23) 21)))) $generated@@241))))
$generated@@242)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
