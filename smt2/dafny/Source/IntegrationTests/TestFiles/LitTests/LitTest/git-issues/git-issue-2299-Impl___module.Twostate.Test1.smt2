(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@68 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 () Int)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@33) 3) (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@35 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
))) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@35 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@35 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@8 $generated@@36) 4)) (= ($generated@@8 $generated@@37) 5)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@8 ($generated@@38 $generated@@53 $generated@@54)) 6))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@38 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@38 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@38 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and (and (and ($generated@@30 $generated@@60) ($generated@@30 $generated@@61)) (and (or (not (= $generated@@62 $generated@@31)) (not true)) ($generated@@32 $generated@@33 $generated@@62 $generated@@34))) (and ($generated@@27 $generated@@60) ($generated@@28 $generated@@60 $generated@@61))) (=> (forall (($generated@@63 T@U) ($generated@@64 T@U) )  (=> (and (or (not (= $generated@@63 $generated@@31)) (not true)) (= $generated@@63 $generated@@62)) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@60 $generated@@63) $generated@@64) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@61 $generated@@63) $generated@@64)))) (= ($generated@@29 $generated@@59 $generated@@60 $generated@@62) ($generated@@29 $generated@@59 $generated@@61 $generated@@62))))
 :pattern ( ($generated@@27 $generated@@60) ($generated@@28 $generated@@60 $generated@@61) ($generated@@29 $generated@@59 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@67 $generated@@65)  (or (= $generated@@67 $generated@@31) (= ($generated@@66 $generated@@67) $generated@@65)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@67 $generated@@65))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@68 $generated@@33 $generated@@69 $generated@@34 $generated@@70) ($generated@@68 $generated@@33 $generated@@69 $generated@@65 $generated@@70))
 :pattern ( ($generated@@68 $generated@@33 $generated@@69 $generated@@34 $generated@@70))
 :pattern ( ($generated@@68 $generated@@33 $generated@@69 $generated@@65 $generated@@70))
)))
(assert (= ($generated@@24 $generated@@71) 0))
(assert (= ($generated@@72 $generated@@3 $generated@@7) $generated@@71))
(assert  (not ($generated@@73 $generated@@71)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@68 $generated@@33 $generated@@75 $generated@@65 $generated@@76)  (or (= $generated@@75 $generated@@31) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@68 $generated@@33 $generated@@75 $generated@@65 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@28 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@13 ($generated@@74 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@77 $generated@@79) $generated@@1))) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@28 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@74 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@82 $generated@@81))
)))
(assert ($generated@@73 $generated@@1))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@83) (and (or (not (= $generated@@84 $generated@@31)) (not true)) (= ($generated@@66 $generated@@84) $generated@@65))) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@83 $generated@@84) $generated@@1)))) ($generated@@68 $generated@@10 ($generated@@74 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@83 $generated@@84) $generated@@71)) $generated $generated@@83))
 :pattern ( ($generated@@74 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@83 $generated@@84) $generated@@71)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@80 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@68 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@80 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@28 $generated@@90 $generated@@91) (=> ($generated@@85 $generated@@92 $generated@@93 $generated@@90) ($generated@@85 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@28 $generated@@90 $generated@@91) ($generated@@85 $generated@@92 $generated@@93 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (!  (=> ($generated@@28 $generated@@94 $generated@@95) (=> ($generated@@68 $generated@@98 $generated@@96 $generated@@97 $generated@@94) ($generated@@68 $generated@@98 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@28 $generated@@94 $generated@@95) ($generated@@68 $generated@@98 $generated@@96 $generated@@97 $generated@@94))
)))
(assert  (=> (<= 0 $generated@@99) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or ($generated@@100 $generated@@101 $generated@@102 $generated@@103) (and (< 0 $generated@@99) (and (and (and ($generated@@30 $generated@@101) ($generated@@30 $generated@@102)) ($generated@@28 $generated@@101 $generated@@102)) (and (or (not (= $generated@@103 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@103 $generated@@34) ($generated@@68 $generated@@33 $generated@@103 $generated@@34 $generated@@101)))))) (= ($generated@@29 $generated@@101 $generated@@102 $generated@@103) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or (not (= $generated@@104 $generated@@31)) (not true)) (=> (= $generated@@104 $generated@@103) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@102 $generated@@104) $generated@@105) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@101 $generated@@104) $generated@@105))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@102 $generated@@104) $generated@@105))
))))
 :pattern ( ($generated@@29 $generated@@101 $generated@@102 $generated@@103) ($generated@@30 $generated@@102))
))))
(assert  (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@106 $generated@@109 $generated@@110 $generated@@111 ($generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@106 $generated@@116 $generated@@117 $generated@@118 ($generated@@108 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@106 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@106 $generated@@125 $generated@@126 $generated@@127 ($generated@@108 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@106 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@13 ($generated@@106 $generated@@33 $generated@@36 $generated@@9 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@135 $generated@@138) $generated@@136)))) (= $generated@@138 $generated@@137)))
 :pattern ( ($generated@@106 $generated@@33 $generated@@36 $generated@@9 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@140 $generated@@34)  (and ($generated@@32 $generated@@33 $generated@@140 $generated@@65) (or (not (= $generated@@140 $generated@@31)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@140 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@140 $generated@@65))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or (not (= $generated@@141 $generated@@143)) (not true)) (=> (and ($generated@@28 $generated@@141 $generated@@142) ($generated@@28 $generated@@142 $generated@@143)) ($generated@@28 $generated@@141 $generated@@143)))
 :pattern ( ($generated@@28 $generated@@141 $generated@@142) ($generated@@28 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (and (= ($generated@@144 ($generated@@72 $generated@@145 $generated@@146)) $generated@@145) (= ($generated@@26 ($generated@@72 $generated@@145 $generated@@146)) $generated@@146))
 :pattern ( ($generated@@72 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@74 $generated@@148 ($generated@@80 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@80 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@30 $generated@@149) (and (or (not (= $generated@@150 $generated@@31)) (not true)) (= ($generated@@66 $generated@@150) $generated@@65))) ($generated@@32 $generated@@10 ($generated@@74 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@149 $generated@@150) $generated@@71)) $generated))
 :pattern ( ($generated@@74 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@149 $generated@@150) $generated@@71)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@30 ($generated@@39 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@151 $generated@@152 ($generated@@39 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@151 $generated@@152) $generated@@153 $generated@@154))) ($generated@@28 $generated@@151 ($generated@@39 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@151 $generated@@152 ($generated@@39 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@151 $generated@@152) $generated@@153 $generated@@154))))
 :pattern ( ($generated@@39 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@151 $generated@@152 ($generated@@39 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@151 $generated@@152) $generated@@153 $generated@@154)))
)))
(assert (= ($generated@@25 $generated@@65) $generated@@4))
(assert (= ($generated@@155 $generated@@65) $generated@@6))
(assert (= ($generated@@25 $generated@@34) $generated@@5))
(assert (= ($generated@@155 $generated@@34) $generated@@6))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@68 $generated@@10 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@68 $generated@@10 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@32 $generated@@10 $generated@@158 $generated)
 :pattern ( ($generated@@32 $generated@@10 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@166  (=> (= $generated@@159 ($generated@@107 $generated@@31 $generated@@160 $generated@@1 $generated@@161)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@13 ($generated@@106 $generated@@33 $generated@@36 $generated@@9 $generated@@159 $generated@@161 $generated@@71))) (=> ($generated@@13 ($generated@@106 $generated@@33 $generated@@36 $generated@@9 $generated@@159 $generated@@161 $generated@@71)) (=> (= $generated@@162 (+ ($generated@@15 ($generated@@74 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@160 $generated@@161) $generated@@71))) 1)) (=> (and (= $generated@@163 ($generated@@39 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@160 $generated@@161 ($generated@@39 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@160 $generated@@161) $generated@@71 ($generated@@80 $generated@@10 ($generated@@14 $generated@@162))))) ($generated@@30 $generated@@163)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@13 ($generated@@106 $generated@@33 $generated@@36 $generated@@9 $generated@@159 $generated@@161 $generated@@71))) (=> ($generated@@13 ($generated@@106 $generated@@33 $generated@@36 $generated@@9 $generated@@159 $generated@@161 $generated@@71)) (=> (and (and (= $generated@@164 (- ($generated@@15 ($generated@@74 $generated@@10 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@163 $generated@@161) $generated@@71))) 1)) (= $generated@@165 ($generated@@39 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@163 $generated@@161 ($generated@@39 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@163 $generated@@161) $generated@@71 ($generated@@80 $generated@@10 ($generated@@14 $generated@@164)))))) (and ($generated@@30 $generated@@165) ($generated@@85 ($generated@@80 $generated@@33 $generated@@161) $generated@@65 $generated@@165))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@68 $generated@@33 $generated@@161 $generated@@34 $generated@@163)) (=> ($generated@@68 $generated@@33 $generated@@161 $generated@@34 $generated@@163) (=> ($generated@@100 $generated@@163 $generated@@165 $generated@@161) (=> (and (and ($generated@@100 $generated@@163 $generated@@165 $generated@@161) (= (ControlFlow 0 2) (- 0 1))) ($generated@@100 $generated@@163 $generated@@165 $generated@@161)) (or ($generated@@29 $generated@@163 $generated@@165 $generated@@161) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (or (not (= $generated@@167 $generated@@31)) (not true)) (=> (= $generated@@167 $generated@@161) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@165 $generated@@167) $generated@@168) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@163 $generated@@167) $generated@@168))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@33 ($generated@@38 $generated@@36 $generated@@37) $generated@@165 $generated@@167) $generated@@168))
)))))))))))))))))
(let (($generated@@169  (=> (and ($generated@@30 $generated@@160) ($generated@@27 $generated@@160)) (=> (and (and (or (not (= $generated@@161 $generated@@31)) (not true)) (and ($generated@@32 $generated@@33 $generated@@161 $generated@@34) ($generated@@68 $generated@@33 $generated@@161 $generated@@34 $generated@@160))) (and (= 1 $generated@@99) (= (ControlFlow 0 6) 2))) $generated@@166))))
$generated@@169)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
