(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@64 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U Int Int) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T) T@T)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@T) T@T)
(declare-fun $generated@@162 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@15 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@15 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@29 $generated@@15 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@29 $generated@@15 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! ($generated@@29 $generated@@15 $generated@@37 $generated@@36 $generated@@38)
 :pattern ( ($generated@@29 $generated@@15 $generated@@37 $generated@@36 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! ($generated@@29 $generated@@15 $generated@@40 $generated@@39 $generated@@41)
 :pattern ( ($generated@@29 $generated@@15 $generated@@40 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! ($generated@@29 $generated@@15 $generated@@43 $generated@@42 $generated@@44)
 :pattern ( ($generated@@29 $generated@@15 $generated@@43 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! ($generated@@29 $generated@@15 $generated@@46 $generated@@45 $generated@@47)
 :pattern ( ($generated@@29 $generated@@15 $generated@@46 $generated@@45 $generated@@47))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@15 $generated@@58 $generated@@36)  (and (and (<= ($generated@@48 (- 0 2147483648)) ($generated@@20 $generated@@58)) (< ($generated@@20 $generated@@58) 2147483648)) (or (not (= ($generated@@20 $generated@@58) 3)) (not true))))
 :pattern ( ($generated@@57 $generated@@15 $generated@@58 $generated@@36))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@57 $generated@@15 $generated@@59 $generated@@39)  (and (and (<= ($generated@@48 (- 0 2147483648)) ($generated@@20 $generated@@59)) (< ($generated@@20 $generated@@59) 2147483648)) (or (not (= ($generated@@20 $generated@@59) 3)) (not true))))
 :pattern ( ($generated@@57 $generated@@15 $generated@@59 $generated@@39))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@57 $generated@@15 $generated@@60 $generated@@42)  (and (and (<= ($generated@@48 (- 0 2147483648)) ($generated@@20 $generated@@60)) (< ($generated@@20 $generated@@60) 2147483648)) (or (not (= ($generated@@20 $generated@@60) 3)) (not true))))
 :pattern ( ($generated@@57 $generated@@15 $generated@@60 $generated@@42))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@57 $generated@@15 $generated@@61 $generated@@45)  (and (and (<= ($generated@@48 (- 0 2147483648)) ($generated@@20 $generated@@61)) (< ($generated@@20 $generated@@61) 2147483648)) (or (not (= ($generated@@20 $generated@@61) 3)) (not true))))
 :pattern ( ($generated@@57 $generated@@15 $generated@@61 $generated@@45))
)))
(assert  (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@64 $generated@@67 $generated@@68 ($generated@@66 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@64 $generated@@72 $generated@@73 ($generated@@66 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@13 $generated@@65) 3)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@62 ($generated@@63 $generated@@78) $generated@@79) ($generated@@18 ($generated@@64 $generated@@65 $generated@@14 $generated@@78 $generated@@79)))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@78) $generated@@79))
)))
(assert (= ($generated@@13 $generated@@80) 4))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@57 $generated@@80 $generated@@83 ($generated@@81 $generated@@84)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@62 $generated@@83 $generated@@85) ($generated@@82 $generated@@85 $generated@@84))
 :pattern ( ($generated@@62 $generated@@83 $generated@@85))
)))
 :pattern ( ($generated@@57 $generated@@80 $generated@@83 ($generated@@81 $generated@@84)))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@54 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@29 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@54 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@82 $generated@@91 $generated@@30) (and (= ($generated@@54 $generated@@15 ($generated@@53 $generated@@15 $generated@@91)) $generated@@91) ($generated@@57 $generated@@15 ($generated@@53 $generated@@15 $generated@@91) $generated@@30)))
 :pattern ( ($generated@@82 $generated@@91 $generated@@30))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@82 $generated@@92 $generated@@33) (and (= ($generated@@54 $generated@@15 ($generated@@53 $generated@@15 $generated@@92)) $generated@@92) ($generated@@57 $generated@@15 ($generated@@53 $generated@@15 $generated@@92) $generated@@33)))
 :pattern ( ($generated@@82 $generated@@92 $generated@@33))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@82 $generated@@93 $generated@@36) (and (= ($generated@@54 $generated@@15 ($generated@@53 $generated@@15 $generated@@93)) $generated@@93) ($generated@@57 $generated@@15 ($generated@@53 $generated@@15 $generated@@93) $generated@@36)))
 :pattern ( ($generated@@82 $generated@@93 $generated@@36))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@82 $generated@@94 $generated@@39) (and (= ($generated@@54 $generated@@15 ($generated@@53 $generated@@15 $generated@@94)) $generated@@94) ($generated@@57 $generated@@15 ($generated@@53 $generated@@15 $generated@@94) $generated@@39)))
 :pattern ( ($generated@@82 $generated@@94 $generated@@39))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@82 $generated@@95 $generated@@42) (and (= ($generated@@54 $generated@@15 ($generated@@53 $generated@@15 $generated@@95)) $generated@@95) ($generated@@57 $generated@@15 ($generated@@53 $generated@@15 $generated@@95) $generated@@42)))
 :pattern ( ($generated@@82 $generated@@95 $generated@@42))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@82 $generated@@96 $generated@@45) (and (= ($generated@@54 $generated@@15 ($generated@@53 $generated@@15 $generated@@96)) $generated@@96) ($generated@@57 $generated@@15 ($generated@@53 $generated@@15 $generated@@96) $generated@@45)))
 :pattern ( ($generated@@82 $generated@@96 $generated@@45))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 Int) ($generated@@100 Int) ($generated@@101 T@U) ) (! (= ($generated@@18 ($generated@@64 $generated@@65 $generated@@14 ($generated@@97 $generated@@98 $generated@@99 $generated@@100) $generated@@101))  (and ($generated@@82 $generated@@101 $generated@@98) (and (<= $generated@@99 ($generated@@20 ($generated@@53 $generated@@15 $generated@@101))) (< ($generated@@20 ($generated@@53 $generated@@15 $generated@@101)) $generated@@100))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@14 ($generated@@97 $generated@@98 $generated@@99 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@82 ($generated@@54 $generated@@104 $generated@@102) $generated@@103) ($generated@@57 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@82 ($generated@@54 $generated@@104 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@29 $generated@@80 $generated@@105 ($generated@@81 $generated@@106) $generated@@107) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@62 $generated@@105 $generated@@108) ($generated@@86 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@62 $generated@@105 $generated@@108))
)))
 :pattern ( ($generated@@29 $generated@@80 $generated@@105 ($generated@@81 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 ($generated@@81 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@81 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@81 $generated@@112)) $generated)
 :pattern ( ($generated@@81 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@53 $generated@@114 ($generated@@54 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@54 $generated@@114 $generated@@113))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@115 $generated@@123 $generated@@124 $generated@@125 ($generated@@120 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@115 $generated@@130 $generated@@131 $generated@@132 ($generated@@120 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@115 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@115 $generated@@139 $generated@@140 $generated@@141 ($generated@@120 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@115 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))) (= ($generated@@13 $generated@@116) 5)) (= ($generated@@13 $generated@@117) 6)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@13 ($generated@@119 $generated@@148 $generated@@149)) 7))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@121 ($generated@@119 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@119 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@122 ($generated@@119 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@119 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@18 ($generated@@115 $generated@@116 $generated@@117 $generated@@14 ($generated@@118 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@18 ($generated@@53 $generated@@14 ($generated@@64 $generated@@117 $generated@@65 ($generated@@64 $generated@@116 ($generated@@119 $generated@@117 $generated@@65) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117 $generated@@14 ($generated@@118 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@82 $generated@@160 ($generated@@81 $generated@@161)) (and (= ($generated@@54 $generated@@80 ($generated@@53 $generated@@80 $generated@@160)) $generated@@160) ($generated@@57 $generated@@80 ($generated@@53 $generated@@80 $generated@@160) ($generated@@81 $generated@@161))))
 :pattern ( ($generated@@82 $generated@@160 ($generated@@81 $generated@@161)))
)))
(assert (= ($generated@@111 $generated@@30) $generated@@1))
(assert (= ($generated@@162 $generated@@30) $generated@@7))
(assert (= ($generated@@111 $generated@@33) $generated@@2))
(assert (= ($generated@@162 $generated@@33) $generated@@8))
(assert (= ($generated@@111 $generated@@36) $generated@@3))
(assert (= ($generated@@162 $generated@@36) $generated@@9))
(assert (= ($generated@@111 $generated@@39) $generated@@4))
(assert (= ($generated@@162 $generated@@39) $generated@@10))
(assert (= ($generated@@111 $generated@@42) $generated@@5))
(assert (= ($generated@@162 $generated@@42) $generated@@11))
(assert (= ($generated@@111 $generated@@45) $generated@@6))
(assert (= ($generated@@162 $generated@@45) $generated@@12))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@57 $generated@@15 $generated@@163 $generated@@30)  (and (<= ($generated@@48 (- 0 2147483648)) ($generated@@20 $generated@@163)) (< ($generated@@20 $generated@@163) 2147483648)))
 :pattern ( ($generated@@57 $generated@@15 $generated@@163 $generated@@30))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@57 $generated@@15 $generated@@164 $generated@@33)  (and (<= ($generated@@48 (- 0 2147483648)) ($generated@@20 $generated@@164)) (< ($generated@@20 $generated@@164) 2147483648)))
 :pattern ( ($generated@@57 $generated@@15 $generated@@164 $generated@@33))
)))
(assert (forall (($generated@@165 Int) ) (! (= ($generated@@54 $generated@@15 ($generated@@19 ($generated@@48 $generated@@165))) ($generated@@50 $generated@@65 ($generated@@54 $generated@@15 ($generated@@19 $generated@@165))))
 :pattern ( ($generated@@54 $generated@@15 ($generated@@19 ($generated@@48 $generated@@165))))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@54 $generated@@167 ($generated@@50 $generated@@167 $generated@@166)) ($generated@@50 $generated@@65 ($generated@@54 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@54 $generated@@167 ($generated@@50 $generated@@167 $generated@@166)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 72) (let (($generated@@209 true))
(let (($generated@@210  (=> (and (not (and (<= ($generated@@48 2) $generated@@168) (< $generated@@168 6))) (= (ControlFlow 0 4) 1)) $generated@@209)))
(let (($generated@@211  (=> (and (and (<= ($generated@@48 2) $generated@@168) (< $generated@@168 6)) (= (ControlFlow 0 3) 1)) $generated@@209)))
(let (($generated@@212  (=> (< $generated@@168 ($generated@@48 2)) (and (=> (= (ControlFlow 0 9) 3) $generated@@211) (=> (= (ControlFlow 0 9) 4) $generated@@210)))))
(let (($generated@@213  (=> (and (<= ($generated@@48 2) $generated@@168) (= $generated@@169 ($generated@@48 6))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (<= ($generated@@48 (- 0 2147483648)) $generated@@169)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@169) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< $generated@@169 2147483648)) (=> (< $generated@@169 2147483648) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@169 3)) (not true))) (=> (or (not (= $generated@@169 3)) (not true)) (and (=> (= (ControlFlow 0 5) 3) $generated@@211) (=> (= (ControlFlow 0 5) 4) $generated@@210)))))))))))
(let (($generated@@214  (=> (and (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@168) (< $generated@@168 2147483648)) (or (not (= $generated@@168 3)) (not true))) (= $generated@@170 ($generated@@48 2))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (<= ($generated@@48 (- 0 2147483648)) $generated@@170)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@170) (and (=> (= (ControlFlow 0 10) (- 0 12)) (< $generated@@170 2147483648)) (=> (< $generated@@170 2147483648) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@170 3)) (not true))) (=> (or (not (= $generated@@170 3)) (not true)) (and (=> (= (ControlFlow 0 10) 5) $generated@@213) (=> (= (ControlFlow 0 10) 9) $generated@@212)))))))))))
(let (($generated@@215  (=> (and (not (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@168) (< $generated@@168 2147483648)) (or (not (= $generated@@168 3)) (not true)))) (= (ControlFlow 0 2) 1)) $generated@@209)))
(let (($generated@@216  (=> (= $generated@@171 ($generated@@63 ($generated@@97 $generated@@42 ($generated@@48 2) 6))) (and (=> (= (ControlFlow 0 14) 10) $generated@@214) (=> (= (ControlFlow 0 14) 2) $generated@@215)))))
(let (($generated@@217  (=> (and (not (and (<= ($generated@@48 2) $generated@@172) (< $generated@@172 6))) (= (ControlFlow 0 17) 14)) $generated@@216)))
(let (($generated@@218  (=> (and (and (<= ($generated@@48 2) $generated@@172) (< $generated@@172 6)) (= (ControlFlow 0 16) 14)) $generated@@216)))
(let (($generated@@219  (=> (< $generated@@172 ($generated@@48 2)) (and (=> (= (ControlFlow 0 22) 16) $generated@@218) (=> (= (ControlFlow 0 22) 17) $generated@@217)))))
(let (($generated@@220  (=> (and (<= ($generated@@48 2) $generated@@172) (= $generated@@173 ($generated@@48 6))) (and (=> (= (ControlFlow 0 18) (- 0 21)) (<= ($generated@@48 (- 0 2147483648)) $generated@@173)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@173) (and (=> (= (ControlFlow 0 18) (- 0 20)) (< $generated@@173 2147483648)) (=> (< $generated@@173 2147483648) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (not (= $generated@@173 3)) (not true))) (=> (or (not (= $generated@@173 3)) (not true)) (and (=> (= (ControlFlow 0 18) 16) $generated@@218) (=> (= (ControlFlow 0 18) 17) $generated@@217)))))))))))
(let (($generated@@221  (=> (and (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@172) (< $generated@@172 2147483648)) (or (not (= $generated@@172 3)) (not true))) (= $generated@@174 ($generated@@48 2))) (and (=> (= (ControlFlow 0 23) (- 0 26)) (<= ($generated@@48 (- 0 2147483648)) $generated@@174)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@174) (and (=> (= (ControlFlow 0 23) (- 0 25)) (< $generated@@174 2147483648)) (=> (< $generated@@174 2147483648) (and (=> (= (ControlFlow 0 23) (- 0 24)) (or (not (= $generated@@174 3)) (not true))) (=> (or (not (= $generated@@174 3)) (not true)) (and (=> (= (ControlFlow 0 23) 18) $generated@@220) (=> (= (ControlFlow 0 23) 22) $generated@@219)))))))))))
(let (($generated@@222  (=> (and (not (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@172) (< $generated@@172 2147483648)) (or (not (= $generated@@172 3)) (not true)))) (= (ControlFlow 0 15) 14)) $generated@@216)))
(let (($generated@@223  (=> (= $generated@@175 ($generated@@63 ($generated@@97 $generated@@39 ($generated@@48 2) 6))) (and (=> (= (ControlFlow 0 27) 23) $generated@@221) (=> (= (ControlFlow 0 27) 15) $generated@@222)))))
(let (($generated@@224  (=> (and (not (and (<= ($generated@@48 2) $generated@@176) (< $generated@@176 6))) (= (ControlFlow 0 30) 27)) $generated@@223)))
(let (($generated@@225  (=> (and (and (<= ($generated@@48 2) $generated@@176) (< $generated@@176 6)) (= (ControlFlow 0 29) 27)) $generated@@223)))
(let (($generated@@226  (=> (< $generated@@176 ($generated@@48 2)) (and (=> (= (ControlFlow 0 34) 29) $generated@@225) (=> (= (ControlFlow 0 34) 30) $generated@@224)))))
(let (($generated@@227  (=> (and (<= ($generated@@48 2) $generated@@176) (= $generated@@177 ($generated@@48 6))) (and (=> (= (ControlFlow 0 31) (- 0 33)) (<= ($generated@@48 (- 0 2147483648)) $generated@@177)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@177) (and (=> (= (ControlFlow 0 31) (- 0 32)) (< $generated@@177 2147483648)) (=> (< $generated@@177 2147483648) (and (=> (= (ControlFlow 0 31) 29) $generated@@225) (=> (= (ControlFlow 0 31) 30) $generated@@224)))))))))
(let (($generated@@228  (=> (and (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@176) (< $generated@@176 2147483648)) (or (not (= $generated@@176 3)) (not true))) (= $generated@@178 ($generated@@48 2))) (and (=> (= (ControlFlow 0 35) (- 0 37)) (<= ($generated@@48 (- 0 2147483648)) $generated@@178)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@178) (and (=> (= (ControlFlow 0 35) (- 0 36)) (< $generated@@178 2147483648)) (=> (< $generated@@178 2147483648) (and (=> (= (ControlFlow 0 35) 31) $generated@@227) (=> (= (ControlFlow 0 35) 34) $generated@@226)))))))))
(let (($generated@@229  (=> (and (not (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@176) (< $generated@@176 2147483648)) (or (not (= $generated@@176 3)) (not true)))) (= (ControlFlow 0 28) 27)) $generated@@223)))
(let (($generated@@230  (=> (= $generated@@179 ($generated@@63 ($generated@@97 $generated@@36 ($generated@@48 2) 6))) (and (=> (= (ControlFlow 0 38) 35) $generated@@228) (=> (= (ControlFlow 0 38) 28) $generated@@229)))))
(let (($generated@@231  (=> (and (not (and (<= ($generated@@48 2) $generated@@180) (< $generated@@180 6))) (= (ControlFlow 0 41) 38)) $generated@@230)))
(let (($generated@@232  (=> (and (and (<= ($generated@@48 2) $generated@@180) (< $generated@@180 6)) (= (ControlFlow 0 40) 38)) $generated@@230)))
(let (($generated@@233  (=> (< $generated@@180 ($generated@@48 2)) (and (=> (= (ControlFlow 0 45) 40) $generated@@232) (=> (= (ControlFlow 0 45) 41) $generated@@231)))))
(let (($generated@@234  (=> (and (<= ($generated@@48 2) $generated@@180) (= $generated@@181 ($generated@@48 6))) (and (=> (= (ControlFlow 0 42) (- 0 44)) (<= ($generated@@48 (- 0 2147483648)) $generated@@181)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@181) (and (=> (= (ControlFlow 0 42) (- 0 43)) (< $generated@@181 2147483648)) (=> (< $generated@@181 2147483648) (and (=> (= (ControlFlow 0 42) 40) $generated@@232) (=> (= (ControlFlow 0 42) 41) $generated@@231)))))))))
(let (($generated@@235  (=> (and (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@180) (< $generated@@180 2147483648)) (or (not (= $generated@@180 3)) (not true))) (= $generated@@182 ($generated@@48 2))) (and (=> (= (ControlFlow 0 46) (- 0 48)) (<= ($generated@@48 (- 0 2147483648)) $generated@@182)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@182) (and (=> (= (ControlFlow 0 46) (- 0 47)) (< $generated@@182 2147483648)) (=> (< $generated@@182 2147483648) (and (=> (= (ControlFlow 0 46) 42) $generated@@234) (=> (= (ControlFlow 0 46) 45) $generated@@233)))))))))
(let (($generated@@236  (=> (and (not (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@180) (< $generated@@180 2147483648)) (or (not (= $generated@@180 3)) (not true)))) (= (ControlFlow 0 39) 38)) $generated@@230)))
(let (($generated@@237  (=> (= $generated@@183 ($generated@@63 ($generated@@97 $generated@@33 ($generated@@48 2) 6))) (=> (and (and (and ($generated@@57 $generated@@80 $generated@@184 ($generated@@81 $generated@@36)) ($generated@@29 $generated@@80 $generated@@184 ($generated@@81 $generated@@36) $generated@@185)) (and ($generated@@57 $generated@@80 $generated@@186 ($generated@@81 $generated@@39)) ($generated@@29 $generated@@80 $generated@@186 ($generated@@81 $generated@@39) $generated@@185))) (and (and ($generated@@57 $generated@@80 $generated@@187 ($generated@@81 $generated@@42)) ($generated@@29 $generated@@80 $generated@@187 ($generated@@81 $generated@@42) $generated@@185)) (and ($generated@@57 $generated@@80 $generated@@188 ($generated@@81 $generated@@45)) ($generated@@29 $generated@@80 $generated@@188 ($generated@@81 $generated@@45) $generated@@185)))) (and (=> (= (ControlFlow 0 49) 46) $generated@@235) (=> (= (ControlFlow 0 49) 39) $generated@@236))))))
(let (($generated@@238  (=> (and (not (and (<= ($generated@@48 2) $generated@@189) (< $generated@@189 6))) (= (ControlFlow 0 52) 49)) $generated@@237)))
(let (($generated@@239  (=> (and (and (<= ($generated@@48 2) $generated@@189) (< $generated@@189 6)) (= (ControlFlow 0 51) 49)) $generated@@237)))
(let (($generated@@240  (=> (< $generated@@189 ($generated@@48 2)) (and (=> (= (ControlFlow 0 56) 51) $generated@@239) (=> (= (ControlFlow 0 56) 52) $generated@@238)))))
(let (($generated@@241  (=> (and (<= ($generated@@48 2) $generated@@189) (= $generated@@190 ($generated@@48 6))) (and (=> (= (ControlFlow 0 53) (- 0 55)) (<= ($generated@@48 (- 0 2147483648)) $generated@@190)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@190) (and (=> (= (ControlFlow 0 53) (- 0 54)) (< $generated@@190 2147483648)) (=> (< $generated@@190 2147483648) (and (=> (= (ControlFlow 0 53) 51) $generated@@239) (=> (= (ControlFlow 0 53) 52) $generated@@238)))))))))
(let (($generated@@242  (=> (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@189) (< $generated@@189 2147483648)) (= $generated@@191 ($generated@@48 2))) (and (=> (= (ControlFlow 0 57) (- 0 59)) (<= ($generated@@48 (- 0 2147483648)) $generated@@191)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@191) (and (=> (= (ControlFlow 0 57) (- 0 58)) (< $generated@@191 2147483648)) (=> (< $generated@@191 2147483648) (and (=> (= (ControlFlow 0 57) 53) $generated@@241) (=> (= (ControlFlow 0 57) 56) $generated@@240)))))))))
(let (($generated@@243  (=> (and (not (and (<= ($generated@@48 (- 0 2147483648)) $generated@@189) (< $generated@@189 2147483648))) (= (ControlFlow 0 50) 49)) $generated@@237)))
(let (($generated@@244  (=> (= $generated@@192 ($generated@@63 ($generated@@97 $generated@@30 ($generated@@48 2) 6))) (and (=> (= (ControlFlow 0 60) 57) $generated@@242) (=> (= (ControlFlow 0 60) 50) $generated@@243)))))
(let (($generated@@245  (=> (and (not (and (<= ($generated@@48 2) $generated@@193) (< $generated@@193 6))) (= (ControlFlow 0 63) 60)) $generated@@244)))
(let (($generated@@246  (=> (and (and (<= ($generated@@48 2) $generated@@193) (< $generated@@193 6)) (= (ControlFlow 0 62) 60)) $generated@@244)))
(let (($generated@@247  (=> (< $generated@@193 ($generated@@48 2)) (and (=> (= (ControlFlow 0 67) 62) $generated@@246) (=> (= (ControlFlow 0 67) 63) $generated@@245)))))
(let (($generated@@248  (=> (and (<= ($generated@@48 2) $generated@@193) (= $generated@@194 ($generated@@48 6))) (and (=> (= (ControlFlow 0 64) (- 0 66)) (<= ($generated@@48 (- 0 2147483648)) $generated@@194)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@194) (and (=> (= (ControlFlow 0 64) (- 0 65)) (< $generated@@194 2147483648)) (=> (< $generated@@194 2147483648) (and (=> (= (ControlFlow 0 64) 62) $generated@@246) (=> (= (ControlFlow 0 64) 63) $generated@@245)))))))))
(let (($generated@@249  (=> (and (and (<= ($generated@@48 (- 0 2147483648)) $generated@@193) (< $generated@@193 2147483648)) (= $generated@@195 ($generated@@48 2))) (and (=> (= (ControlFlow 0 68) (- 0 70)) (<= ($generated@@48 (- 0 2147483648)) $generated@@195)) (=> (<= ($generated@@48 (- 0 2147483648)) $generated@@195) (and (=> (= (ControlFlow 0 68) (- 0 69)) (< $generated@@195 2147483648)) (=> (< $generated@@195 2147483648) (and (=> (= (ControlFlow 0 68) 64) $generated@@248) (=> (= (ControlFlow 0 68) 67) $generated@@247)))))))))
(let (($generated@@250  (=> (and (not (and (<= ($generated@@48 (- 0 2147483648)) $generated@@193) (< $generated@@193 2147483648))) (= (ControlFlow 0 61) 60)) $generated@@244)))
(let (($generated@@251  (=> (= $generated@@196 ($generated@@118 $generated@@197 $generated@@185 $generated@@0 false)) (=> (and (and ($generated@@57 $generated@@80 $generated@@198 ($generated@@81 $generated@@30)) ($generated@@29 $generated@@80 $generated@@198 ($generated@@81 $generated@@30) $generated@@185)) (and ($generated@@57 $generated@@80 $generated@@199 ($generated@@81 $generated@@33)) ($generated@@29 $generated@@80 $generated@@199 ($generated@@81 $generated@@33) $generated@@185))) (and (=> (= (ControlFlow 0 71) 68) $generated@@249) (=> (= (ControlFlow 0 71) 61) $generated@@250))))))
(let (($generated@@252  (=> (and ($generated@@200 $generated@@185) ($generated@@201 $generated@@185)) (=> (and (and ($generated@@57 $generated@@80 $generated@@202 ($generated@@81 $generated@@30)) ($generated@@29 $generated@@80 $generated@@202 ($generated@@81 $generated@@30) $generated@@185)) true) (=> (and (and (and ($generated@@57 $generated@@80 $generated@@203 ($generated@@81 $generated@@33)) ($generated@@29 $generated@@80 $generated@@203 ($generated@@81 $generated@@33) $generated@@185)) true) (and (and ($generated@@57 $generated@@80 $generated@@204 ($generated@@81 $generated@@36)) ($generated@@29 $generated@@80 $generated@@204 ($generated@@81 $generated@@36) $generated@@185)) true)) (=> (and (and (and (and ($generated@@57 $generated@@80 $generated@@205 ($generated@@81 $generated@@39)) ($generated@@29 $generated@@80 $generated@@205 ($generated@@81 $generated@@39) $generated@@185)) true) (and (and ($generated@@57 $generated@@80 $generated@@206 ($generated@@81 $generated@@42)) ($generated@@29 $generated@@80 $generated@@206 ($generated@@81 $generated@@42) $generated@@185)) true)) (and (and (and ($generated@@57 $generated@@80 $generated@@207 ($generated@@81 $generated@@45)) ($generated@@29 $generated@@80 $generated@@207 ($generated@@81 $generated@@45) $generated@@185)) true) (and (= 3 $generated@@208) (= (ControlFlow 0 72) 71)))) $generated@@251))))))
$generated@@252)))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
