(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U Bool T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@U Int) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@103 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T) T@T)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@169 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@22) 0))
(assert (= ($generated@@23 $generated@@24) $generated@@2))
(assert (= ($generated@@5 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@35 $generated@@38 $generated@@39) (and (< 0 $generated@@33) ($generated@@36 $generated@@39 $generated@@38))) (= ($generated@@34 $generated@@38 true $generated@@39) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@9 true)))))
 :pattern ( ($generated@@34 $generated@@38 true $generated@@39))
))))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@37 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@37 $generated@@41 $generated@@40))
)))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@42 $generated@@43) (= ($generated@@23 $generated@@43) $generated@@2))
 :pattern ( ($generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@44 $generated@@45) (= ($generated@@23 $generated@@45) $generated@@3))
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (= ($generated@@5 $generated@@46) 4))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@35 $generated@@47 ($generated@@37 $generated@@46 $generated@@48)) (and (< 0 $generated@@33) ($generated@@36 $generated@@48 $generated@@47))) (= ($generated@@34 $generated@@47 true ($generated@@37 $generated@@46 $generated@@48)) ($generated@@10 ($generated@@37 $generated@@6 ($generated@@9 true)))))
 :weight 3
 :pattern ( ($generated@@34 $generated@@47 true ($generated@@37 $generated@@46 $generated@@48)))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@42 $generated@@53) (= $generated@@53 $generated@@24))
 :pattern ( ($generated@@42 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@44 $generated@@55) (exists (($generated@@56 T@U) ) (= $generated@@55 ($generated@@54 $generated@@56))))
 :pattern ( ($generated@@44 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@57 ($generated@@50 $generated@@61 $generated@@58) $generated@@59 $generated@@60) ($generated@@25 $generated@@61 $generated@@58 $generated@@59 $generated@@60))
 :pattern ( ($generated@@57 ($generated@@50 $generated@@61 $generated@@58) $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ) (!  (and (= ($generated@@62 ($generated@@27 $generated@@64)) $generated@@1) (= ($generated@@63 ($generated@@27 $generated@@64)) $generated@@4))
 :pattern ( ($generated@@27 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@28 $generated@@67) (= ($generated@@25 $generated@@26 ($generated@@54 $generated@@66) ($generated@@27 $generated@@65) $generated@@67) ($generated@@57 $generated@@66 $generated@@65 $generated@@67)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@54 $generated@@66) ($generated@@27 $generated@@65) $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@69 ($generated@@27 $generated@@68)) (or ($generated@@42 $generated@@69) ($generated@@44 $generated@@69)))
 :pattern ( ($generated@@44 $generated@@69) ($generated@@31 $generated@@26 $generated@@69 ($generated@@27 $generated@@68)))
 :pattern ( ($generated@@42 $generated@@69) ($generated@@31 $generated@@26 $generated@@69 ($generated@@27 $generated@@68)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@36 ($generated@@50 $generated@@72 $generated@@70) $generated@@71) ($generated@@31 $generated@@72 $generated@@70 $generated@@71))
 :pattern ( ($generated@@36 ($generated@@50 $generated@@72 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (<= 0 ($generated@@21 $generated@@73))
 :pattern ( ($generated@@21 $generated@@73))
)))
(assert (= ($generated@@5 $generated@@74) 5))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@25 $generated@@74 $generated@@77 ($generated@@75 $generated@@78) $generated@@79) (forall (($generated@@80 Int) ) (!  (=> (and (<= 0 $generated@@80) (< $generated@@80 ($generated@@21 $generated@@77))) ($generated@@57 ($generated@@76 $generated@@77 $generated@@80) $generated@@78 $generated@@79))
 :pattern ( ($generated@@76 $generated@@77 $generated@@80))
)))
 :pattern ( ($generated@@25 $generated@@74 $generated@@77 ($generated@@75 $generated@@78) $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@81 ($generated@@75 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@75 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@62 ($generated@@75 $generated@@83)) $generated)
 :pattern ( ($generated@@75 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 ($generated@@27 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@27 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@23 ($generated@@54 $generated@@86)) $generated@@3)
 :pattern ( ($generated@@54 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 ($generated@@54 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@54 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@49 $generated@@90 ($generated@@50 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@50 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@54 $generated@@92) ($generated@@27 $generated@@91)) ($generated@@36 $generated@@92 $generated@@91))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@54 $generated@@92) ($generated@@27 $generated@@91)))
)))
(assert (forall (($generated@@95 T@U) ) (! (< ($generated@@93 $generated@@95) ($generated@@94 ($generated@@54 $generated@@95)))
 :pattern ( ($generated@@54 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and ($generated@@28 $generated@@98) (and ($generated@@44 $generated@@96) ($generated@@25 $generated@@26 $generated@@96 ($generated@@27 $generated@@97) $generated@@98))) ($generated@@57 ($generated@@87 $generated@@96) $generated@@97 $generated@@98))
 :pattern ( ($generated@@57 ($generated@@87 $generated@@96) $generated@@97 $generated@@98))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@105 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@99 $generated@@116 $generated@@117 $generated@@118 ($generated@@105 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@99 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@99 $generated@@125 $generated@@126 $generated@@127 ($generated@@105 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@99 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))) (= ($generated@@5 $generated@@100) 6)) (= ($generated@@5 $generated@@101) 7)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@103 $generated@@134 $generated@@135 ($generated@@106 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@138) $generated@@136)
 :weight 0
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@103 $generated@@139 $generated@@140 ($generated@@106 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@103 $generated@@139 $generated@@140 $generated@@142 $generated@@144)))
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@5 ($generated@@104 $generated@@145 $generated@@146)) 8))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@107 ($generated@@104 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@104 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@108 ($generated@@104 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@104 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@10 ($generated@@99 $generated@@100 $generated@@101 $generated@@6 ($generated@@102 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@10 ($generated@@49 $generated@@6 ($generated@@103 $generated@@101 $generated@@46 ($generated@@103 $generated@@100 ($generated@@104 $generated@@101 $generated@@46) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@99 $generated@@100 $generated@@101 $generated@@6 ($generated@@102 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@93 ($generated@@50 $generated@@26 $generated@@157)) ($generated@@94 $generated@@157))
 :pattern ( ($generated@@93 ($generated@@50 $generated@@26 $generated@@157)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@36 $generated@@158 ($generated@@75 $generated@@159)) (and (= ($generated@@50 $generated@@74 ($generated@@49 $generated@@74 $generated@@158)) $generated@@158) ($generated@@31 $generated@@74 ($generated@@49 $generated@@74 $generated@@158) ($generated@@75 $generated@@159))))
 :pattern ( ($generated@@36 $generated@@158 ($generated@@75 $generated@@159)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@36 $generated@@161 ($generated@@27 $generated@@160)) (and (= ($generated@@50 $generated@@26 ($generated@@49 $generated@@26 $generated@@161)) $generated@@161) ($generated@@31 $generated@@26 ($generated@@49 $generated@@26 $generated@@161) ($generated@@27 $generated@@160))))
 :pattern ( ($generated@@36 $generated@@161 ($generated@@27 $generated@@160)))
)))
(assert (= $generated@@24 ($generated@@37 $generated@@26 $generated@@24)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@54 ($generated@@37 $generated@@46 $generated@@162)) ($generated@@37 $generated@@26 ($generated@@54 $generated@@162)))
 :pattern ( ($generated@@54 ($generated@@37 $generated@@46 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@50 $generated@@164 ($generated@@37 $generated@@164 $generated@@163)) ($generated@@37 $generated@@46 ($generated@@50 $generated@@164 $generated@@163)))
 :pattern ( ($generated@@50 $generated@@164 ($generated@@37 $generated@@164 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ) (!  (=> (= ($generated@@21 $generated@@165) 0) (= $generated@@165 $generated@@22))
 :pattern ( ($generated@@21 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@31 $generated@@74 $generated@@166 ($generated@@75 $generated@@167)) (forall (($generated@@168 Int) ) (!  (=> (and (<= 0 $generated@@168) (< $generated@@168 ($generated@@21 $generated@@166))) ($generated@@36 ($generated@@76 $generated@@166 $generated@@168) $generated@@167))
 :pattern ( ($generated@@76 $generated@@166 $generated@@168))
)))
 :pattern ( ($generated@@31 $generated@@74 $generated@@166 ($generated@@75 $generated@@167)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ) (!  (=> (and (<= 0 $generated@@171) (< $generated@@171 ($generated@@21 $generated@@170))) (< ($generated@@94 ($generated@@49 $generated@@26 ($generated@@76 $generated@@170 $generated@@171))) ($generated@@169 $generated@@170)))
 :pattern ( ($generated@@94 ($generated@@49 $generated@@26 ($generated@@76 $generated@@170 $generated@@171))))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Bool)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@184  (=> (= (ControlFlow 0 2) (- 0 1)) (exists (($generated@@185 T@U) )  (and (and ($generated@@36 $generated@@185 $generated@@172) ($generated@@57 $generated@@185 $generated@@172 $generated@@173)) (=> $generated@@174 ($generated@@34 $generated@@172 $generated@@175 $generated@@185)))))))
(let (($generated@@186  (=> (and (=> $generated@@174 ($generated@@35 $generated@@172 $generated@@176)) (= (ControlFlow 0 4) 2)) $generated@@184)))
(let (($generated@@187  (=> (and (not $generated@@174) (= (ControlFlow 0 6) 4)) $generated@@186)))
(let (($generated@@188  (=> (and (and $generated@@174 ($generated@@57 $generated@@176 $generated@@172 $generated@@173)) (and ($generated@@35 $generated@@172 $generated@@176) (= (ControlFlow 0 5) 4))) $generated@@186)))
(let (($generated@@189  (=> (and ($generated@@36 $generated@@176 $generated@@172) ($generated@@57 $generated@@176 $generated@@172 $generated@@173)) (and (=> (= (ControlFlow 0 7) 5) $generated@@188) (=> (= (ControlFlow 0 7) 6) $generated@@187)))))
(let (($generated@@190  (=> (and (not (and ($generated@@36 $generated@@176 $generated@@172) ($generated@@57 $generated@@176 $generated@@172 $generated@@173))) (= (ControlFlow 0 3) 2)) $generated@@184)))
(let (($generated@@191  (=> (and (forall (($generated@@192 T@U) ) (!  (=> ($generated@@36 $generated@@192 $generated@@172) ($generated@@35 $generated@@172 $generated@@192))
 :pattern ( ($generated@@34 $generated@@172 $generated@@175 $generated@@192))
)) (= $generated@@174 (exists (($generated@@193 T@U) ) (!  (and (and ($generated@@36 $generated@@193 $generated@@172) ($generated@@57 $generated@@193 $generated@@172 $generated@@173)) ($generated@@34 $generated@@172 $generated@@175 $generated@@193))
 :pattern ( ($generated@@34 $generated@@172 $generated@@175 $generated@@193))
)))) (and (=> (= (ControlFlow 0 8) 7) $generated@@189) (=> (= (ControlFlow 0 8) 3) $generated@@190)))))
(let (($generated@@194  (=> (and (not (and ($generated@@36 $generated@@177 $generated@@172) ($generated@@57 $generated@@177 $generated@@172 $generated@@173))) (= (ControlFlow 0 10) 8)) $generated@@191)))
(let (($generated@@195  (=> (and (and (and ($generated@@36 $generated@@177 $generated@@172) ($generated@@57 $generated@@177 $generated@@172 $generated@@173)) ($generated@@57 $generated@@177 $generated@@172 $generated@@173)) (and ($generated@@35 $generated@@172 $generated@@177) (= (ControlFlow 0 9) 8))) $generated@@191)))
(let (($generated@@196  (=> (= $generated@@178 ($generated@@102 $generated@@179 $generated@@173 $generated@@0 false)) (and (=> (= (ControlFlow 0 11) 9) $generated@@195) (=> (= (ControlFlow 0 11) 10) $generated@@194)))))
(let (($generated@@197  (=> (and ($generated@@28 $generated@@173) ($generated@@180 $generated@@173)) (=> (and (and ($generated@@31 $generated@@74 $generated@@181 ($generated@@75 $generated@@172)) ($generated@@25 $generated@@74 $generated@@181 ($generated@@75 $generated@@172) $generated@@173)) (and ($generated@@31 $generated@@26 $generated@@182 ($generated@@27 $generated@@172)) ($generated@@25 $generated@@26 $generated@@182 ($generated@@27 $generated@@172) $generated@@173))) (=> (and (and (and ($generated@@36 $generated@@183 $generated@@172) ($generated@@57 $generated@@183 $generated@@172 $generated@@173)) true) (and (= 1 $generated@@33) (= (ControlFlow 0 12) 11))) $generated@@196)))))
$generated@@197))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
