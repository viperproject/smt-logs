(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (Int) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@125 (T@U T@U) Bool)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@163 (T@U Int) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@198 (T@U) Int)
(declare-fun $generated@@200 (T@U) Int)
(declare-fun $generated@@201 (T@U) Int)
(declare-fun $generated@@206 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@207 () T@T)
(declare-fun $generated@@208 () T@T)
(declare-fun $generated@@209 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@210 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@211 (T@T T@T) T@T)
(declare-fun $generated@@212 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@T) T@T)
(declare-fun $generated@@215 (T@T) T@T)
(declare-fun $generated@@264 (T@U) T@U)
(declare-fun $generated@@265 (T@U) T@U)
(declare-fun $generated@@287 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@32) 3))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@30 $generated@@37 $generated@@38 $generated@@39) (and (< 1 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@39 ($generated@@33 $generated@@37)) ($generated@@34 $generated@@39)))) (= ($generated@@29 $generated@@37 $generated@@38 $generated@@39) ($generated@@35 $generated@@32 $generated@@36)))
 :pattern ( ($generated@@29 $generated@@37 $generated@@38 $generated@@39))
))))
(assert  (and (= ($generated@@11 $generated@@41) 4) (= ($generated@@11 $generated@@50) 5)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@42 ($generated@@35 $generated@@32 $generated@@57) ($generated@@35 $generated@@41 $generated@@58)) (and (< 2 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@57 $generated@@43) ($generated@@31 $generated@@41 $generated@@58 ($generated@@44 $generated))))) (and (let (($generated@@59 (ite ($generated@@45 ($generated@@35 $generated@@32 $generated@@57)) (let (($generated@@60 ($generated@@35 $generated@@41 $generated@@58)))
(let (($generated@@61 $generated@@60))
(let (($generated@@62 $generated@@61))
(let (($generated@@63 $generated@@62))
(let (($generated@@64 $generated@@63))
(let (($generated@@65 $generated@@64))
(let (($generated@@66 $generated@@65))
(let (($generated@@67 $generated@@66))
(let (($generated@@68 $generated@@67))
(let (($generated@@69 $generated@@68))
($generated@@35 $generated@@32 ($generated@@46 ($generated@@47 $generated@@41 $generated@@69))))))))))))) ($generated@@46 ($generated@@47 $generated@@41 ($generated@@35 $generated@@41 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 $generated@@49 ($generated@@47 $generated@@50 ($generated@@51 104))) ($generated@@47 $generated@@50 ($generated@@51 101))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 111)))))))))
 (and (and ($generated@@52 ($generated@@44 $generated) $generated@@59) (=> ($generated@@53 ($generated@@44 $generated) $generated@@59) ($generated@@30 ($generated@@44 $generated) ($generated@@44 $generated) $generated@@59))) (=> (not ($generated@@53 ($generated@@44 $generated) $generated@@59)) ($generated@@54 ($generated@@44 $generated) $generated@@59)))) (= ($generated@@40 ($generated@@35 $generated@@32 $generated@@57) ($generated@@35 $generated@@41 $generated@@58)) (let (($generated@@70 (ite ($generated@@45 ($generated@@35 $generated@@32 $generated@@57)) (let (($generated@@71 ($generated@@35 $generated@@41 $generated@@58)))
(let (($generated@@72 $generated@@71))
(let (($generated@@73 $generated@@72))
(let (($generated@@74 $generated@@73))
(let (($generated@@75 $generated@@74))
(let (($generated@@76 $generated@@75))
(let (($generated@@77 $generated@@76))
(let (($generated@@78 $generated@@77))
(let (($generated@@79 $generated@@78))
(let (($generated@@80 $generated@@79))
($generated@@35 $generated@@32 ($generated@@46 ($generated@@47 $generated@@41 $generated@@80))))))))))))) ($generated@@46 ($generated@@47 $generated@@41 ($generated@@35 $generated@@41 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 $generated@@49 ($generated@@47 $generated@@50 ($generated@@51 104))) ($generated@@47 $generated@@50 ($generated@@51 101))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 111)))))))))
(ite ($generated@@53 ($generated@@44 $generated) $generated@@70) ($generated@@29 ($generated@@44 $generated) ($generated@@44 $generated) $generated@@70) (let (($generated@@81 ($generated@@55 $generated@@41 ($generated@@56 ($generated@@44 $generated) $generated@@70))))
($generated@@46 ($generated@@47 $generated@@41 $generated@@81))))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@35 $generated@@32 $generated@@57) ($generated@@35 $generated@@41 $generated@@58)))
))))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and (or ($generated@@54 $generated@@87 $generated@@88) (and (< 0 $generated@@28) (and ($generated@@83 $generated@@32 $generated@@88 ($generated@@33 $generated@@87) $generated@@86) ($generated@@84 $generated@@88)))) ($generated@@85 $generated@@86)) ($generated@@82 ($generated@@56 $generated@@87 $generated@@88) $generated@@87 $generated@@86))
 :pattern ( ($generated@@82 ($generated@@56 $generated@@87 $generated@@88) $generated@@87 $generated@@86))
))))
(assert (= ($generated@@89 $generated@@49) 0))
(assert (= ($generated@@90 $generated@@91) $generated@@5))
(assert (= ($generated@@90 $generated@@92) $generated@@6))
(assert (= ($generated@@90 $generated@@36) $generated@@7))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@85 $generated@@94) ($generated@@83 $generated@@32 $generated@@36 ($generated@@33 $generated@@93) $generated@@94))
 :pattern ( ($generated@@83 $generated@@32 $generated@@36 ($generated@@33 $generated@@93) $generated@@94))
)))
(assert ($generated@@31 $generated@@32 $generated@@91 $generated@@43))
(assert ($generated@@31 $generated@@32 $generated@@92 $generated@@43))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@52 $generated@@95 ($generated@@35 $generated@@32 $generated@@96)) (and (< 0 $generated@@28) ($generated@@31 $generated@@32 $generated@@96 ($generated@@33 $generated@@95)))) (= ($generated@@53 $generated@@95 ($generated@@35 $generated@@32 $generated@@96)) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@15 ($generated@@34 ($generated@@35 $generated@@32 $generated@@96)))))))
 :weight 3
 :pattern ( ($generated@@53 $generated@@95 ($generated@@35 $generated@@32 $generated@@96)))
))))
(assert (forall (($generated@@97 T@U) ) (! ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@97))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@97)))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@42 $generated@@98 $generated@@99) (and (< 2 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@98 $generated@@43) ($generated@@31 $generated@@41 $generated@@99 ($generated@@44 $generated))))) (and (let (($generated@@100 (ite ($generated@@45 $generated@@98) (let (($generated@@101 $generated@@99))
(let (($generated@@102 $generated@@101))
(let (($generated@@103 $generated@@102))
(let (($generated@@104 $generated@@103))
(let (($generated@@105 $generated@@104))
(let (($generated@@106 $generated@@105))
(let (($generated@@107 $generated@@106))
(let (($generated@@108 $generated@@107))
(let (($generated@@109 $generated@@108))
(let (($generated@@110 $generated@@109))
($generated@@46 ($generated@@47 $generated@@41 $generated@@110)))))))))))) ($generated@@46 ($generated@@47 $generated@@41 ($generated@@35 $generated@@41 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 $generated@@49 ($generated@@47 $generated@@50 ($generated@@51 104))) ($generated@@47 $generated@@50 ($generated@@51 101))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 111)))))))))
 (and (and ($generated@@52 ($generated@@44 $generated) $generated@@100) (=> ($generated@@53 ($generated@@44 $generated) $generated@@100) ($generated@@30 ($generated@@44 $generated) ($generated@@44 $generated) $generated@@100))) (=> (not ($generated@@53 ($generated@@44 $generated) $generated@@100)) ($generated@@54 ($generated@@44 $generated) $generated@@100)))) (= ($generated@@40 $generated@@98 $generated@@99) (let (($generated@@111 (ite ($generated@@45 $generated@@98) (let (($generated@@112 $generated@@99))
(let (($generated@@113 $generated@@112))
(let (($generated@@114 $generated@@113))
(let (($generated@@115 $generated@@114))
(let (($generated@@116 $generated@@115))
(let (($generated@@117 $generated@@116))
(let (($generated@@118 $generated@@117))
(let (($generated@@119 $generated@@118))
(let (($generated@@120 $generated@@119))
(let (($generated@@121 $generated@@120))
($generated@@46 ($generated@@47 $generated@@41 $generated@@121)))))))))))) ($generated@@46 ($generated@@47 $generated@@41 ($generated@@35 $generated@@41 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 $generated@@49 ($generated@@47 $generated@@50 ($generated@@51 104))) ($generated@@47 $generated@@50 ($generated@@51 101))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 111)))))))))
(ite ($generated@@53 ($generated@@44 $generated) $generated@@111) ($generated@@29 ($generated@@44 $generated) ($generated@@44 $generated) $generated@@111) (let (($generated@@122 ($generated@@55 $generated@@41 ($generated@@56 ($generated@@44 $generated) $generated@@111))))
($generated@@46 ($generated@@47 $generated@@41 $generated@@122))))))))
 :pattern ( ($generated@@40 $generated@@98 $generated@@99))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@35 $generated@@124 $generated@@123) $generated@@123)
 :pattern ( ($generated@@35 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@31 $generated@@41 $generated@@126 ($generated@@44 $generated@@128)) ($generated@@125 $generated@@127 $generated@@128)) ($generated@@31 $generated@@41 ($generated@@48 $generated@@126 $generated@@127) ($generated@@44 $generated@@128)))
 :pattern ( ($generated@@31 $generated@@41 ($generated@@48 $generated@@126 $generated@@127) ($generated@@44 $generated@@128)))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@30 $generated@@129 $generated@@130 ($generated@@35 $generated@@32 $generated@@131)) (and (< 1 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@131 ($generated@@33 $generated@@129)) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@15 ($generated@@34 ($generated@@35 $generated@@32 $generated@@131)))))))) (= ($generated@@29 $generated@@129 $generated@@130 ($generated@@35 $generated@@32 $generated@@131)) ($generated@@35 $generated@@32 $generated@@36)))
 :weight 3
 :pattern ( ($generated@@29 $generated@@129 $generated@@130 ($generated@@35 $generated@@32 $generated@@131)))
))))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@54 $generated@@132 $generated@@133) (and (< 0 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@133 ($generated@@33 $generated@@132)) ($generated@@84 $generated@@133)))) ($generated@@125 ($generated@@56 $generated@@132 $generated@@133) $generated@@132))
 :pattern ( ($generated@@56 $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@45 $generated@@134) (= ($generated@@90 $generated@@134) $generated@@5))
 :pattern ( ($generated@@45 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 $generated@@136) (= ($generated@@90 $generated@@136) $generated@@6))
 :pattern ( ($generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@34 $generated@@137) (= ($generated@@90 $generated@@137) $generated@@7))
 :pattern ( ($generated@@34 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@84 $generated@@138) (= ($generated@@90 $generated@@138) $generated@@8))
 :pattern ( ($generated@@84 $generated@@138))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and (or ($generated@@30 $generated@@140 $generated@@141 $generated@@142) (and (< 1 $generated@@28) (and ($generated@@83 $generated@@32 $generated@@142 ($generated@@33 $generated@@140) $generated@@139) ($generated@@34 $generated@@142)))) ($generated@@85 $generated@@139)) ($generated@@83 $generated@@32 ($generated@@29 $generated@@140 $generated@@141 $generated@@142) ($generated@@33 $generated@@141) $generated@@139))
 :pattern ( ($generated@@83 $generated@@32 ($generated@@29 $generated@@140 $generated@@141 $generated@@142) ($generated@@33 $generated@@141) $generated@@139))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@47 $generated@@144 ($generated@@55 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@55 $generated@@144 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@45 $generated@@145) (= $generated@@145 $generated@@91))
 :pattern ( ($generated@@45 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@135 $generated@@146) (= $generated@@146 $generated@@92))
 :pattern ( ($generated@@135 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@34 $generated@@147) (= $generated@@147 $generated@@36))
 :pattern ( ($generated@@34 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@84 $generated@@148) (exists (($generated@@149 T@U) ) (= $generated@@148 ($generated@@46 $generated@@149))))
 :pattern ( ($generated@@84 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@89 ($generated@@48 $generated@@150 $generated@@151)) (+ 1 ($generated@@89 $generated@@150)))
 :pattern ( ($generated@@48 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@82 ($generated@@47 $generated@@155 $generated@@152) $generated@@153 $generated@@154) ($generated@@83 $generated@@155 $generated@@152 $generated@@153 $generated@@154))
 :pattern ( ($generated@@82 ($generated@@47 $generated@@155 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (!  (and (= ($generated@@27 ($generated@@33 $generated@@157)) $generated@@4) (= ($generated@@156 ($generated@@33 $generated@@157)) $generated@@10))
 :pattern ( ($generated@@33 $generated@@157))
)))
(assert (= ($generated@@11 $generated@@158) 6))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (or ($generated@@54 $generated@@160 ($generated@@35 $generated@@32 $generated@@161)) (and (< 0 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@161 ($generated@@33 $generated@@160)) ($generated@@16 ($generated@@35 $generated@@12 ($generated@@15 ($generated@@84 ($generated@@35 $generated@@32 $generated@@161)))))))) (= ($generated@@56 $generated@@160 ($generated@@35 $generated@@32 $generated@@161)) ($generated@@35 $generated@@158 ($generated@@159 ($generated@@35 $generated@@32 $generated@@161)))))
 :weight 3
 :pattern ( ($generated@@56 $generated@@160 ($generated@@35 $generated@@32 $generated@@161)))
))))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@125 $generated@@162 $generated@@43) (and (= ($generated@@47 $generated@@32 ($generated@@55 $generated@@32 $generated@@162)) $generated@@162) ($generated@@31 $generated@@32 ($generated@@55 $generated@@32 $generated@@162) $generated@@43)))
 :pattern ( ($generated@@125 $generated@@162 $generated@@43))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 T@U) ) (!  (and (=> (= $generated@@165 ($generated@@89 $generated@@164)) (= ($generated@@163 ($generated@@48 $generated@@164 $generated@@166) $generated@@165) $generated@@166)) (=> (or (not (= $generated@@165 ($generated@@89 $generated@@164))) (not true)) (= ($generated@@163 ($generated@@48 $generated@@164 $generated@@166) $generated@@165) ($generated@@163 $generated@@164 $generated@@165))))
 :pattern ( ($generated@@163 ($generated@@48 $generated@@164 $generated@@166) $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@85 $generated@@169) (= ($generated@@83 $generated@@32 ($generated@@46 $generated@@168) ($generated@@33 $generated@@167) $generated@@169) ($generated@@82 $generated@@168 $generated@@167 $generated@@169)))
 :pattern ( ($generated@@83 $generated@@32 ($generated@@46 $generated@@168) ($generated@@33 $generated@@167) $generated@@169))
)))
(assert  (=> (<= 2 $generated@@28) (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (or ($generated@@42 $generated@@170 $generated@@171) (and (< 2 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@170 $generated@@43) ($generated@@31 $generated@@41 $generated@@171 ($generated@@44 $generated))))) ($generated@@31 $generated@@32 ($generated@@40 $generated@@170 $generated@@171) ($generated@@33 ($generated@@44 $generated))))
 :pattern ( ($generated@@40 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@173 ($generated@@33 $generated@@172)) (or ($generated@@34 $generated@@173) ($generated@@84 $generated@@173)))
 :pattern ( ($generated@@84 $generated@@173) ($generated@@31 $generated@@32 $generated@@173 ($generated@@33 $generated@@172)))
 :pattern ( ($generated@@34 $generated@@173) ($generated@@31 $generated@@32 $generated@@173 ($generated@@33 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@174 $generated@@43) (or ($generated@@45 $generated@@174) ($generated@@135 $generated@@174)))
 :pattern ( ($generated@@135 $generated@@174) ($generated@@31 $generated@@32 $generated@@174 $generated@@43))
 :pattern ( ($generated@@45 $generated@@174) ($generated@@31 $generated@@32 $generated@@174 $generated@@43))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> ($generated@@125 $generated@@175 $generated) (and (= ($generated@@47 $generated@@50 ($generated@@55 $generated@@50 $generated@@175)) $generated@@175) ($generated@@31 $generated@@50 ($generated@@55 $generated@@50 $generated@@175) $generated)))
 :pattern ( ($generated@@125 $generated@@175 $generated))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@125 ($generated@@47 $generated@@178 $generated@@176) $generated@@177) ($generated@@31 $generated@@178 $generated@@176 $generated@@177))
 :pattern ( ($generated@@125 ($generated@@47 $generated@@178 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (<= 0 ($generated@@89 $generated@@179))
 :pattern ( ($generated@@89 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@83 $generated@@41 $generated@@180 ($generated@@44 $generated@@181) $generated@@182) (forall (($generated@@183 Int) ) (!  (=> (and (<= 0 $generated@@183) (< $generated@@183 ($generated@@89 $generated@@180))) ($generated@@82 ($generated@@163 $generated@@180 $generated@@183) $generated@@181 $generated@@182))
 :pattern ( ($generated@@163 $generated@@180 $generated@@183))
)))
 :pattern ( ($generated@@83 $generated@@41 $generated@@180 ($generated@@44 $generated@@181) $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@184 ($generated@@44 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@44 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@27 ($generated@@44 $generated@@186)) $generated@@1)
 :pattern ( ($generated@@44 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@187 ($generated@@33 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@33 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@90 ($generated@@46 $generated@@189)) $generated@@8)
 :pattern ( ($generated@@46 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@159 ($generated@@46 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@46 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@55 $generated@@192 ($generated@@47 $generated@@192 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@47 $generated@@192 $generated@@191))
)))
(assert  (=> (<= 1 $generated@@28) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (or ($generated@@30 $generated@@193 $generated@@194 $generated@@195) (and (< 1 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@195 ($generated@@33 $generated@@193)) ($generated@@34 $generated@@195)))) ($generated@@31 $generated@@32 ($generated@@29 $generated@@193 $generated@@194 $generated@@195) ($generated@@33 $generated@@194)))
 :pattern ( ($generated@@29 $generated@@193 $generated@@194 $generated@@195))
))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@31 $generated@@32 ($generated@@46 $generated@@197) ($generated@@33 $generated@@196)) ($generated@@125 $generated@@197 $generated@@196))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@46 $generated@@197) ($generated@@33 $generated@@196)))
)))
(assert (forall (($generated@@199 Int) ) (!  (=> (or (and (<= 0 $generated@@199) (< $generated@@199 55296)) (and (<= 57344 $generated@@199) (< $generated@@199 1114112))) (= ($generated@@198 ($generated@@51 $generated@@199)) $generated@@199))
 :pattern ( ($generated@@51 $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ) (! (< ($generated@@200 $generated@@202) ($generated@@201 ($generated@@46 $generated@@202)))
 :pattern ( ($generated@@46 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@85 $generated@@205) (and ($generated@@84 $generated@@203) ($generated@@83 $generated@@32 $generated@@203 ($generated@@33 $generated@@204) $generated@@205))) ($generated@@82 ($generated@@159 $generated@@203) $generated@@204 $generated@@205))
 :pattern ( ($generated@@82 ($generated@@159 $generated@@203) $generated@@204 $generated@@205))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@206 $generated@@216 $generated@@217 $generated@@218 ($generated@@212 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@221 $generated@@222) $generated@@219)
 :weight 0
)) (and (forall (($generated@@223 T@T) ($generated@@224 T@T) ($generated@@225 T@T) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (or (= $generated@@228 $generated@@230) (= ($generated@@206 $generated@@223 $generated@@224 $generated@@225 ($generated@@212 $generated@@223 $generated@@224 $generated@@225 $generated@@227 $generated@@228 $generated@@229 $generated@@226) $generated@@230 $generated@@231) ($generated@@206 $generated@@223 $generated@@224 $generated@@225 $generated@@227 $generated@@230 $generated@@231)))
 :weight 0
)) (forall (($generated@@232 T@T) ($generated@@233 T@T) ($generated@@234 T@T) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (or (= $generated@@238 $generated@@240) (= ($generated@@206 $generated@@232 $generated@@233 $generated@@234 ($generated@@212 $generated@@232 $generated@@233 $generated@@234 $generated@@236 $generated@@237 $generated@@238 $generated@@235) $generated@@239 $generated@@240) ($generated@@206 $generated@@232 $generated@@233 $generated@@234 $generated@@236 $generated@@239 $generated@@240)))
 :weight 0
)))) (= ($generated@@11 $generated@@207) 7)) (= ($generated@@11 $generated@@208) 8)) (forall (($generated@@241 T@T) ($generated@@242 T@T) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (= ($generated@@210 $generated@@241 $generated@@242 ($generated@@213 $generated@@241 $generated@@242 $generated@@244 $generated@@245 $generated@@243) $generated@@245) $generated@@243)
 :weight 0
))) (forall (($generated@@246 T@T) ($generated@@247 T@T) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@250 $generated@@251) (= ($generated@@210 $generated@@246 $generated@@247 ($generated@@213 $generated@@246 $generated@@247 $generated@@249 $generated@@250 $generated@@248) $generated@@251) ($generated@@210 $generated@@246 $generated@@247 $generated@@249 $generated@@251)))
 :weight 0
))) (forall (($generated@@252 T@T) ($generated@@253 T@T) ) (= ($generated@@11 ($generated@@211 $generated@@252 $generated@@253)) 9))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ) (! (= ($generated@@214 ($generated@@211 $generated@@254 $generated@@255)) $generated@@254)
 :pattern ( ($generated@@211 $generated@@254 $generated@@255))
))) (forall (($generated@@256 T@T) ($generated@@257 T@T) ) (! (= ($generated@@215 ($generated@@211 $generated@@256 $generated@@257)) $generated@@257)
 :pattern ( ($generated@@211 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 Bool) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (= ($generated@@16 ($generated@@206 $generated@@207 $generated@@208 $generated@@12 ($generated@@209 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))  (=> (and (or (not (= $generated@@262 $generated@@258)) (not true)) ($generated@@16 ($generated@@55 $generated@@12 ($generated@@210 $generated@@208 $generated@@158 ($generated@@210 $generated@@207 ($generated@@211 $generated@@208 $generated@@158) $generated@@259 $generated@@262) $generated@@260)))) $generated@@261))
 :pattern ( ($generated@@206 $generated@@207 $generated@@208 $generated@@12 ($generated@@209 $generated@@258 $generated@@259 $generated@@260 $generated@@261) $generated@@262 $generated@@263))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ) (!  (and (= ($generated@@264 ($generated@@48 $generated@@266 $generated@@267)) $generated@@266) (= ($generated@@265 ($generated@@48 $generated@@266 $generated@@267)) $generated@@267))
 :pattern ( ($generated@@48 $generated@@266 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ) (! (= ($generated@@200 ($generated@@47 $generated@@32 $generated@@268)) ($generated@@201 $generated@@268))
 :pattern ( ($generated@@200 ($generated@@47 $generated@@32 $generated@@268)))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> ($generated@@125 $generated@@269 ($generated@@44 $generated@@270)) (and (= ($generated@@47 $generated@@41 ($generated@@55 $generated@@41 $generated@@269)) $generated@@269) ($generated@@31 $generated@@41 ($generated@@55 $generated@@41 $generated@@269) ($generated@@44 $generated@@270))))
 :pattern ( ($generated@@125 $generated@@269 ($generated@@44 $generated@@270)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ) (!  (=> ($generated@@125 $generated@@272 ($generated@@33 $generated@@271)) (and (= ($generated@@47 $generated@@32 ($generated@@55 $generated@@32 $generated@@272)) $generated@@272) ($generated@@31 $generated@@32 ($generated@@55 $generated@@32 $generated@@272) ($generated@@33 $generated@@271))))
 :pattern ( ($generated@@125 $generated@@272 ($generated@@33 $generated@@271)))
)))
(assert (forall (($generated@@273 T@U) ) (!  (and (= ($generated@@51 ($generated@@198 $generated@@273)) $generated@@273) (or (and (<= 0 ($generated@@198 $generated@@273)) (< ($generated@@198 $generated@@273) 55296)) (and (<= 57344 ($generated@@198 $generated@@273)) (< ($generated@@198 $generated@@273) 1114112))))
 :pattern ( ($generated@@198 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ) (!  (=> (and ($generated@@85 $generated@@275) ($generated@@31 $generated@@32 $generated@@274 $generated@@43)) ($generated@@83 $generated@@32 $generated@@274 $generated@@43 $generated@@275))
 :pattern ( ($generated@@83 $generated@@32 $generated@@274 $generated@@43 $generated@@275))
)))
(assert (= ($generated@@27 $generated@@43) $generated@@3))
(assert (= ($generated@@156 $generated@@43) $generated@@9))
(assert (= $generated@@91 ($generated@@35 $generated@@32 $generated@@91)))
(assert (= $generated@@92 ($generated@@35 $generated@@32 $generated@@92)))
(assert (= $generated@@36 ($generated@@35 $generated@@32 $generated@@36)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (!  (=> (or ($generated@@52 $generated@@276 $generated@@277) (and (< 0 $generated@@28) ($generated@@31 $generated@@32 $generated@@277 ($generated@@33 $generated@@276)))) (= ($generated@@53 $generated@@276 $generated@@277) ($generated@@34 $generated@@277)))
 :pattern ( ($generated@@53 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@278 T@U) ) (! (= ($generated@@46 ($generated@@35 $generated@@158 $generated@@278)) ($generated@@35 $generated@@32 ($generated@@46 $generated@@278)))
 :pattern ( ($generated@@46 ($generated@@35 $generated@@158 $generated@@278)))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@T) ) (! (= ($generated@@47 $generated@@280 ($generated@@35 $generated@@280 $generated@@279)) ($generated@@35 $generated@@158 ($generated@@47 $generated@@280 $generated@@279)))
 :pattern ( ($generated@@47 $generated@@280 ($generated@@35 $generated@@280 $generated@@279)))
)))
(assert (forall (($generated@@281 T@U) ) (!  (=> (= ($generated@@89 $generated@@281) 0) (= $generated@@281 $generated@@49))
 :pattern ( ($generated@@89 $generated@@281))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (! ($generated@@83 $generated@@50 $generated@@283 $generated $generated@@282)
 :pattern ( ($generated@@83 $generated@@50 $generated@@283 $generated $generated@@282))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ) (! (= ($generated@@31 $generated@@41 $generated@@284 ($generated@@44 $generated@@285)) (forall (($generated@@286 Int) ) (!  (=> (and (<= 0 $generated@@286) (< $generated@@286 ($generated@@89 $generated@@284))) ($generated@@125 ($generated@@163 $generated@@284 $generated@@286) $generated@@285))
 :pattern ( ($generated@@163 $generated@@284 $generated@@286))
)))
 :pattern ( ($generated@@31 $generated@@41 $generated@@284 ($generated@@44 $generated@@285)))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 Int) ) (!  (=> (and (<= 0 $generated@@289) (< $generated@@289 ($generated@@89 $generated@@288))) (< ($generated@@201 ($generated@@55 $generated@@32 ($generated@@163 $generated@@288 $generated@@289))) ($generated@@287 $generated@@288)))
 :pattern ( ($generated@@201 ($generated@@55 $generated@@32 ($generated@@163 $generated@@288 $generated@@289))))
)))
(assert (forall (($generated@@290 T@U) ) (! ($generated@@31 $generated@@50 $generated@@290 $generated)
 :pattern ( ($generated@@31 $generated@@50 $generated@@290 $generated))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@291 T@U) ($generated@@292 T@U) ) (!  (=> (or ($generated@@54 $generated@@291 $generated@@292) (and (< 0 $generated@@28) (and ($generated@@31 $generated@@32 $generated@@292 ($generated@@33 $generated@@291)) ($generated@@84 $generated@@292)))) (= ($generated@@56 $generated@@291 $generated@@292) ($generated@@159 $generated@@292)))
 :pattern ( ($generated@@56 $generated@@291 $generated@@292))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 () T@U)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@298 () T@U)
(declare-fun $generated@@299 () T@U)
(declare-fun $generated@@300 () T@U)
(declare-fun $generated@@301 () T@U)
(declare-fun $generated@@302 () T@U)
(declare-fun $generated@@303 () T@U)
(declare-fun $generated@@304 () T@U)
(declare-fun $generated@@305 () T@U)
(declare-fun $generated@@306 () T@U)
(declare-fun $generated@@307 () T@U)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@309 () T@U)
(declare-fun $generated@@310 () T@U)
(declare-fun $generated@@311 () T@U)
(declare-fun $generated@@312 () T@U)
(declare-fun $generated@@313 () T@U)
(declare-fun $generated@@314 () T@U)
(declare-fun $generated@@315 () T@U)
(declare-fun $generated@@316 () T@U)
(declare-fun $generated@@317 () T@U)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@319 () T@U)
(declare-fun $generated@@320 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@321  (=> (not ($generated@@53 ($generated@@44 $generated) $generated@@293)) (=> (and ($generated@@82 ($generated@@47 $generated@@32 $generated@@293) ($generated@@33 ($generated@@44 $generated)) $generated@@294) (= (ControlFlow 0 6) (- 0 5))) ($generated@@84 $generated@@293)))))
(let (($generated@@322  (=> ($generated@@53 ($generated@@44 $generated) $generated@@293) (=> (and ($generated@@82 ($generated@@47 $generated@@32 $generated@@293) ($generated@@33 ($generated@@44 $generated)) $generated@@294) (= (ControlFlow 0 4) (- 0 3))) ($generated@@34 $generated@@293)))))
(let (($generated@@323  (=> (= $generated@@293 $generated@@295) (=> (and ($generated@@82 ($generated@@47 $generated@@32 $generated@@293) ($generated@@33 ($generated@@44 $generated)) $generated@@294) ($generated@@52 ($generated@@44 $generated) $generated@@293)) (and (=> (= (ControlFlow 0 7) 4) $generated@@322) (=> (= (ControlFlow 0 7) 6) $generated@@321))))))
(let (($generated@@324  (=> (and (and (= $generated@@296 $generated@@92) (= $generated@@295 ($generated@@35 $generated@@32 ($generated@@46 ($generated@@47 $generated@@41 ($generated@@35 $generated@@41 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 ($generated@@48 $generated@@49 ($generated@@47 $generated@@50 ($generated@@51 104))) ($generated@@47 $generated@@50 ($generated@@51 101))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 108))) ($generated@@47 $generated@@50 ($generated@@51 111))))))))) (and ($generated@@31 $generated@@32 $generated@@295 ($generated@@33 ($generated@@44 $generated))) (= (ControlFlow 0 9) 7))) $generated@@323)))
(let (($generated@@325  (=> (and (= $generated@@296 $generated@@91) (= $generated@@297 $generated@@298)) (=> (and (and (and (and (and ($generated@@31 $generated@@41 $generated@@297 ($generated@@44 $generated)) (= $generated@@299 $generated@@297)) (and (= $generated@@300 $generated@@299) ($generated@@31 $generated@@41 $generated@@300 ($generated@@44 $generated)))) (and (and (= $generated@@301 $generated@@300) (= $generated@@302 $generated@@301)) (and ($generated@@31 $generated@@41 $generated@@302 ($generated@@44 $generated)) (= $generated@@303 $generated@@302)))) (and (and (and (= $generated@@304 $generated@@303) ($generated@@31 $generated@@41 $generated@@304 ($generated@@44 $generated))) (and (= $generated@@305 $generated@@304) (= $generated@@306 $generated@@305))) (and (and ($generated@@31 $generated@@41 $generated@@306 ($generated@@44 $generated)) (= $generated@@307 $generated@@306)) (and (= $generated@@308 $generated@@307) ($generated@@31 $generated@@41 $generated@@308 ($generated@@44 $generated)))))) (and (and (and (and (= $generated@@309 $generated@@308) (= $generated@@310 $generated@@309)) (and ($generated@@31 $generated@@41 $generated@@310 ($generated@@44 $generated)) (= $generated@@311 $generated@@310))) (and (and (= $generated@@312 $generated@@311) ($generated@@31 $generated@@41 $generated@@312 ($generated@@44 $generated))) (and (= $generated@@313 $generated@@312) (= $generated@@314 $generated@@313)))) (and (and (and ($generated@@31 $generated@@41 $generated@@314 ($generated@@44 $generated)) (= $generated@@315 $generated@@314)) (and (= $generated@@316 $generated@@315) ($generated@@31 $generated@@41 $generated@@316 ($generated@@44 $generated)))) (and (and (= $generated@@317 $generated@@316) (= $generated@@295 ($generated@@46 ($generated@@47 $generated@@41 $generated@@317)))) (and ($generated@@31 $generated@@32 $generated@@295 ($generated@@33 ($generated@@44 $generated))) (= (ControlFlow 0 8) 7)))))) $generated@@323))))
(let (($generated@@326 true))
(let (($generated@@327  (=> (or (not (= $generated@@296 $generated@@91)) (not true)) (and (=> (= (ControlFlow 0 10) 9) $generated@@324) (=> (= (ControlFlow 0 10) 2) $generated@@326)))))
(let (($generated@@328 true))
(let (($generated@@329  (=> (= $generated@@318 ($generated@@209 $generated@@319 $generated@@294 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@328) (=> (= (ControlFlow 0 11) 8) $generated@@325)) (=> (= (ControlFlow 0 11) 10) $generated@@327)))))
(let (($generated@@330  (=> (and ($generated@@85 $generated@@294) ($generated@@320 $generated@@294)) (=> (and (and ($generated@@31 $generated@@32 $generated@@296 $generated@@43) ($generated@@31 $generated@@41 $generated@@298 ($generated@@44 $generated))) (and (= 2 $generated@@28) (= (ControlFlow 0 12) 11))) $generated@@329))))
$generated@@330)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
