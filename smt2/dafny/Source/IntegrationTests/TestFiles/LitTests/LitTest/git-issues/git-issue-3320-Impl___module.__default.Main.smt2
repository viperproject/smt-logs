(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U Int) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) Int)
(declare-fun $generated@@200 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@25 ($generated@@24 $generated@@26 $generated@@27) $generated@@27)
 :pattern ( ($generated@@24 $generated@@26 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@28 $generated@@30) ($generated@@25 ($generated@@24 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@24 $generated@@28 $generated@@29) ($generated@@25 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@31 $generated@@10 $generated@@33 $generated@@32 $generated@@34)
 :pattern ( ($generated@@31 $generated@@10 $generated@@33 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@25 ($generated@@24 $generated@@35 $generated@@36) $generated@@37)  (or (= $generated@@37 $generated@@36) ($generated@@25 $generated@@35 $generated@@37)))
 :pattern ( ($generated@@25 ($generated@@24 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@25 $generated@@38 $generated@@39))
 :pattern ( ($generated@@25 $generated@@38 $generated@@39))
)))
(assert (= ($generated@@40 $generated@@41) 0))
(assert (= ($generated@@42 $generated@@43) $generated@@4))
(assert (= ($generated@@8 $generated@@45) 3))
(assert ($generated@@44 $generated@@45 $generated@@43 $generated@@46))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@47 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert (= ($generated@@8 $generated@@52) 4))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@44 $generated@@52 $generated@@56 ($generated@@54 $generated@@58)) ($generated@@55 $generated@@57 $generated@@58)) ($generated@@44 $generated@@52 ($generated@@53 $generated@@56 $generated@@57) ($generated@@54 $generated@@58)))
 :pattern ( ($generated@@44 $generated@@52 ($generated@@53 $generated@@56 $generated@@57) ($generated@@54 $generated@@58)))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@59 $generated@@60) (= ($generated@@42 $generated@@60) $generated@@4))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 $generated@@62) (= ($generated@@42 $generated@@62) $generated@@5))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 ($generated@@63 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@63 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@59 $generated@@67) (= $generated@@67 $generated@@43))
 :pattern ( ($generated@@59 $generated@@67))
)))
(assert (= ($generated@@8 $generated@@68) 5))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@44 $generated@@68 $generated@@70 ($generated@@69 $generated@@71)) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@25 $generated@@70 $generated@@72) ($generated@@55 $generated@@72 $generated@@71))
 :pattern ( ($generated@@25 $generated@@70 $generated@@72))
)))
 :pattern ( ($generated@@44 $generated@@68 $generated@@70 ($generated@@69 $generated@@71)))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@61 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@61 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@44 $generated@@10 $generated@@76 $generated@@32) (<= ($generated@@47 0) ($generated@@15 $generated@@76)))
 :pattern ( ($generated@@44 $generated@@10 $generated@@76 $generated@@32))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@40 ($generated@@53 $generated@@77 $generated@@78)) (+ 1 ($generated@@40 $generated@@77)))
 :pattern ( ($generated@@53 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@64 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@31 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@79 ($generated@@64 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@55 $generated@@84 $generated@@32) (and (= ($generated@@64 $generated@@10 ($generated@@63 $generated@@10 $generated@@84)) $generated@@84) ($generated@@44 $generated@@10 ($generated@@63 $generated@@10 $generated@@84) $generated@@32)))
 :pattern ( ($generated@@55 $generated@@84 $generated@@32))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@55 $generated@@85 $generated@@46) (and (= ($generated@@64 $generated@@45 ($generated@@63 $generated@@45 $generated@@85)) $generated@@85) ($generated@@44 $generated@@45 ($generated@@63 $generated@@45 $generated@@85) $generated@@46)))
 :pattern ( ($generated@@55 $generated@@85 $generated@@46))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 Int) ($generated@@89 T@U) ) (!  (and (=> (= $generated@@88 ($generated@@40 $generated@@87)) (= ($generated@@86 ($generated@@53 $generated@@87 $generated@@89) $generated@@88) $generated@@89)) (=> (or (not (= $generated@@88 ($generated@@40 $generated@@87))) (not true)) (= ($generated@@86 ($generated@@53 $generated@@87 $generated@@89) $generated@@88) ($generated@@86 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@86 ($generated@@53 $generated@@87 $generated@@89) $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@44 $generated@@45 ($generated@@73 $generated@@90) $generated@@46) ($generated@@44 $generated@@68 $generated@@90 ($generated@@69 $generated@@32)))
 :pattern ( ($generated@@44 $generated@@45 ($generated@@73 $generated@@90) $generated@@46))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@44 $generated@@45 $generated@@91 $generated@@46) (or ($generated@@59 $generated@@91) ($generated@@61 $generated@@91)))
 :pattern ( ($generated@@61 $generated@@91) ($generated@@44 $generated@@45 $generated@@91 $generated@@46))
 :pattern ( ($generated@@59 $generated@@91) ($generated@@44 $generated@@45 $generated@@91 $generated@@46))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@55 ($generated@@64 $generated@@94 $generated@@92) $generated@@93) ($generated@@44 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@55 ($generated@@64 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (<= 0 ($generated@@40 $generated@@95))
 :pattern ( ($generated@@40 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@31 $generated@@68 $generated@@96 ($generated@@69 $generated@@97) $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@25 $generated@@96 $generated@@99) ($generated@@79 $generated@@99 $generated@@97 $generated@@98))
 :pattern ( ($generated@@25 $generated@@96 $generated@@99))
)))
 :pattern ( ($generated@@31 $generated@@68 $generated@@96 ($generated@@69 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@31 $generated@@52 $generated@@100 ($generated@@54 $generated@@101) $generated@@102) (forall (($generated@@103 Int) ) (!  (=> (and (<= 0 $generated@@103) (< $generated@@103 ($generated@@40 $generated@@100))) ($generated@@79 ($generated@@86 $generated@@100 $generated@@103) $generated@@101 $generated@@102))
 :pattern ( ($generated@@86 $generated@@100 $generated@@103))
)))
 :pattern ( ($generated@@31 $generated@@52 $generated@@100 ($generated@@54 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@69 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@69 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@69 $generated@@107)) $generated)
 :pattern ( ($generated@@69 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@54 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@54 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@106 ($generated@@54 $generated@@110)) $generated@@0)
 :pattern ( ($generated@@54 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@42 ($generated@@73 $generated@@111)) $generated@@5)
 :pattern ( ($generated@@73 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@73 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@73 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@63 $generated@@115 ($generated@@64 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@64 $generated@@115 $generated@@114))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@116 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@116 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@116 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@8 $generated@@117) 6)) (= ($generated@@8 $generated@@118) 7)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@120 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@120 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@120 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@8 $generated@@121) 8)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@8 ($generated@@122 $generated@@163 $generated@@164)) 9))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@13 ($generated@@116 $generated@@117 $generated@@118 $generated@@9 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@13 ($generated@@63 $generated@@9 ($generated@@120 $generated@@118 $generated@@121 ($generated@@120 $generated@@117 ($generated@@122 $generated@@118 $generated@@121) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@9 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (and (= ($generated@@175 ($generated@@53 $generated@@177 $generated@@178)) $generated@@177) (= ($generated@@176 ($generated@@53 $generated@@177 $generated@@178)) $generated@@178))
 :pattern ( ($generated@@53 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@55 $generated@@179 ($generated@@69 $generated@@180)) (and (= ($generated@@64 $generated@@68 ($generated@@63 $generated@@68 $generated@@179)) $generated@@179) ($generated@@44 $generated@@68 ($generated@@63 $generated@@68 $generated@@179) ($generated@@69 $generated@@180))))
 :pattern ( ($generated@@55 $generated@@179 ($generated@@69 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@55 $generated@@181 ($generated@@54 $generated@@182)) (and (= ($generated@@64 $generated@@52 ($generated@@63 $generated@@52 $generated@@181)) $generated@@181) ($generated@@44 $generated@@52 ($generated@@63 $generated@@52 $generated@@181) ($generated@@54 $generated@@182))))
 :pattern ( ($generated@@55 $generated@@181 ($generated@@54 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@183 $generated@@185) ($generated@@44 $generated@@45 $generated@@184 $generated@@46)) ($generated@@31 $generated@@45 $generated@@184 $generated@@46 $generated@@185))
 :pattern ( ($generated@@31 $generated@@45 $generated@@184 $generated@@46 $generated@@185))
)))
(assert (= ($generated@@106 $generated@@32) $generated@@2))
(assert (= ($generated@@186 $generated@@32) $generated@@6))
(assert (= ($generated@@106 $generated@@46) $generated@@3))
(assert (= ($generated@@186 $generated@@46) $generated@@7))
(assert (= $generated@@43 ($generated@@49 $generated@@45 $generated@@43)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@25 $generated@@188 ($generated@@64 $generated@@45 $generated@@189)) (< ($generated@@187 $generated@@189) ($generated@@187 ($generated@@73 $generated@@188))))
 :pattern ( ($generated@@25 $generated@@188 ($generated@@64 $generated@@45 $generated@@189)) ($generated@@73 $generated@@188))
)))
(assert (forall (($generated@@190 Int) ) (! (= ($generated@@64 $generated@@10 ($generated@@14 ($generated@@47 $generated@@190))) ($generated@@49 $generated@@121 ($generated@@64 $generated@@10 ($generated@@14 $generated@@190))))
 :pattern ( ($generated@@64 $generated@@10 ($generated@@14 ($generated@@47 $generated@@190))))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@73 ($generated@@49 $generated@@68 $generated@@191)) ($generated@@49 $generated@@45 ($generated@@73 $generated@@191)))
 :pattern ( ($generated@@73 ($generated@@49 $generated@@68 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@64 $generated@@193 ($generated@@49 $generated@@193 $generated@@192)) ($generated@@49 $generated@@121 ($generated@@64 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@64 $generated@@193 ($generated@@49 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> (= ($generated@@40 $generated@@194) 0) (= $generated@@194 $generated@@41))
 :pattern ( ($generated@@40 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@183 $generated@@196) (and ($generated@@61 $generated@@195) ($generated@@31 $generated@@45 $generated@@195 $generated@@46 $generated@@196))) ($generated@@31 $generated@@68 ($generated@@112 $generated@@195) ($generated@@69 $generated@@32) $generated@@196))
 :pattern ( ($generated@@31 $generated@@68 ($generated@@112 $generated@@195) ($generated@@69 $generated@@32) $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@44 $generated@@52 $generated@@197 ($generated@@54 $generated@@198)) (forall (($generated@@199 Int) ) (!  (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@40 $generated@@197))) ($generated@@55 ($generated@@86 $generated@@197 $generated@@199) $generated@@198))
 :pattern ( ($generated@@86 $generated@@197 $generated@@199))
)))
 :pattern ( ($generated@@44 $generated@@52 $generated@@197 ($generated@@54 $generated@@198)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@40 $generated@@201))) (< ($generated@@187 ($generated@@63 $generated@@45 ($generated@@86 $generated@@201 $generated@@202))) ($generated@@200 $generated@@201)))
 :pattern ( ($generated@@187 ($generated@@63 $generated@@45 ($generated@@86 $generated@@201 $generated@@202))))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@209  (=> (and (= $generated@@203 ($generated@@119 $generated@@204 $generated@@205 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@44 $generated@@10 ($generated@@14 ($generated@@47 0)) $generated@@32))))
(let (($generated@@210  (=> (and ($generated@@183 $generated@@205) ($generated@@206 $generated@@205)) (=> (and (and (and ($generated@@44 $generated@@52 $generated@@207 ($generated@@54 $generated@@46)) ($generated@@31 $generated@@52 $generated@@207 ($generated@@54 $generated@@46) $generated@@205)) true) (and (= 2 $generated@@208) (= (ControlFlow 0 3) 2))) $generated@@209))))
$generated@@210)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
