(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ) (!  (not ($generated@@23 $generated@@24 $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25))
)))
(assert (= ($generated@@6 $generated@@27) 3))
(assert (forall (($generated@@31 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@31 $generated@@28)  (or (= $generated@@31 $generated@@29) (= ($generated@@30 $generated@@31) $generated@@28)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@31 $generated@@28))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@32 $generated@@27 $generated@@34 $generated@@33 $generated@@35) ($generated@@32 $generated@@27 $generated@@34 $generated@@28 $generated@@35))
 :pattern ( ($generated@@32 $generated@@27 $generated@@34 $generated@@33 $generated@@35))
 :pattern ( ($generated@@32 $generated@@27 $generated@@34 $generated@@28 $generated@@35))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@6 $generated@@38) 4)) (= ($generated@@6 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@6 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@32 $generated@@27 $generated@@61 $generated@@28 $generated@@62)  (or (= $generated@@61 $generated@@29) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@62 $generated@@61) $generated@@2)))))
 :pattern ( ($generated@@32 $generated@@27 $generated@@61 $generated@@28 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@63 $generated@@64 $generated@@65) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@11 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@64 $generated@@66) $generated@@2))) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@66) $generated@@2))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@65 $generated@@66) $generated@@2))
)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@36 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@36 $generated@@72 $generated@@71))
)))
(assert (= ($generated@@6 $generated@@73) 7))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@26 $generated@@73 $generated@@76 ($generated@@74 $generated@@77)) (forall (($generated@@78 T@U) ) (!  (=> ($generated@@23 $generated@@76 $generated@@78) ($generated@@75 $generated@@78 $generated@@77))
 :pattern ( ($generated@@23 $generated@@76 $generated@@78))
)))
 :pattern ( ($generated@@26 $generated@@73 $generated@@76 ($generated@@74 $generated@@77)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@70 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@32 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@79 ($generated@@70 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@63 $generated@@84 $generated@@85) (=> ($generated@@79 $generated@@86 $generated@@87 $generated@@84) ($generated@@79 $generated@@86 $generated@@87 $generated@@85)))
 :pattern ( ($generated@@63 $generated@@84 $generated@@85) ($generated@@79 $generated@@86 $generated@@87 $generated@@84))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (!  (=> ($generated@@63 $generated@@88 $generated@@89) (=> ($generated@@32 $generated@@92 $generated@@90 $generated@@91 $generated@@88) ($generated@@32 $generated@@92 $generated@@90 $generated@@91 $generated@@89)))
 :pattern ( ($generated@@63 $generated@@88 $generated@@89) ($generated@@32 $generated@@92 $generated@@90 $generated@@91 $generated@@88))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@75 $generated@@93 $generated@@33) (and (= ($generated@@70 $generated@@27 ($generated@@36 $generated@@27 $generated@@93)) $generated@@93) ($generated@@26 $generated@@27 ($generated@@36 $generated@@27 $generated@@93) $generated@@33)))
 :pattern ( ($generated@@75 $generated@@93 $generated@@33))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@75 $generated@@94 $generated@@28) (and (= ($generated@@70 $generated@@27 ($generated@@36 $generated@@27 $generated@@94)) $generated@@94) ($generated@@26 $generated@@27 ($generated@@36 $generated@@27 $generated@@94) $generated@@28)))
 :pattern ( ($generated@@75 $generated@@94 $generated@@28))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@95 $generated@@33)  (and ($generated@@26 $generated@@27 $generated@@95 $generated@@28) (or (not (= $generated@@95 $generated@@29)) (not true))))
 :pattern ( ($generated@@26 $generated@@27 $generated@@95 $generated@@33))
 :pattern ( ($generated@@26 $generated@@27 $generated@@95 $generated@@28))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or (not (= $generated@@96 $generated@@98)) (not true)) (=> (and ($generated@@63 $generated@@96 $generated@@97) ($generated@@63 $generated@@97 $generated@@98)) ($generated@@63 $generated@@96 $generated@@98)))
 :pattern ( ($generated@@63 $generated@@96 $generated@@97) ($generated@@63 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@75 $generated@@99 $generated) (and (= ($generated@@70 $generated@@7 ($generated@@36 $generated@@7 $generated@@99)) $generated@@99) ($generated@@26 $generated@@7 ($generated@@36 $generated@@7 $generated@@99) $generated)))
 :pattern ( ($generated@@75 $generated@@99 $generated))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@75 ($generated@@70 $generated@@102 $generated@@100) $generated@@101) ($generated@@26 $generated@@102 $generated@@100 $generated@@101))
 :pattern ( ($generated@@75 ($generated@@70 $generated@@102 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@32 $generated@@73 $generated@@103 ($generated@@74 $generated@@104) $generated@@105) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@23 $generated@@103 $generated@@106) ($generated@@79 $generated@@106 $generated@@104 $generated@@105))
 :pattern ( ($generated@@23 $generated@@103 $generated@@106))
)))
 :pattern ( ($generated@@32 $generated@@73 $generated@@103 ($generated@@74 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@107 ($generated@@74 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@74 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@22 ($generated@@74 $generated@@109)) $generated@@1)
 :pattern ( ($generated@@74 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@36 $generated@@111 ($generated@@70 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@70 $generated@@111 $generated@@110))
)))
(assert  (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@112 $generated@@115 $generated@@116 $generated@@117 ($generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@112 $generated@@122 $generated@@123 $generated@@124 ($generated@@114 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@112 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@112 $generated@@131 $generated@@132 $generated@@133 ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@112 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Bool) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@11 ($generated@@112 $generated@@27 $generated@@38 $generated@@7 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@140)) (not true)) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@141 $generated@@144) $generated@@142)))) $generated@@143))
 :pattern ( ($generated@@112 $generated@@27 $generated@@38 $generated@@7 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@75 $generated@@146 ($generated@@74 $generated@@147)) (and (= ($generated@@70 $generated@@73 ($generated@@36 $generated@@73 $generated@@146)) $generated@@146) ($generated@@26 $generated@@73 ($generated@@36 $generated@@73 $generated@@146) ($generated@@74 $generated@@147))))
 :pattern ( ($generated@@75 $generated@@146 ($generated@@74 $generated@@147)))
)))
(assert (= ($generated@@22 $generated@@33) $generated@@3))
(assert (= ($generated@@148 $generated@@33) $generated@@5))
(assert (= ($generated@@22 $generated@@28) $generated@@4))
(assert (= ($generated@@148 $generated@@28) $generated@@5))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@70 $generated@@150 ($generated@@67 $generated@@150 $generated@@149)) ($generated@@67 $generated@@39 ($generated@@70 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@70 $generated@@150 ($generated@@67 $generated@@150 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! ($generated@@32 $generated@@7 $generated@@152 $generated $generated@@151)
 :pattern ( ($generated@@32 $generated@@7 $generated@@152 $generated $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@26 $generated@@7 $generated@@153 $generated)
 :pattern ( ($generated@@26 $generated@@7 $generated@@153 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Bool)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@166  (=> (and (= $generated@@154 ($generated@@113 $generated@@29 $generated@@155 $generated@@2 false)) (= $generated@@156 ($generated@@67 $generated@@73 $generated@@24))) (=> (and (and (or (not (= $generated@@157 $generated@@29)) (not true)) (and ($generated@@26 $generated@@27 $generated@@157 $generated@@33) ($generated@@32 $generated@@27 $generated@@157 $generated@@33 $generated@@155))) (and ($generated@@158 $generated@@159) ($generated@@160 $generated@@159))) (=> (and (and (and (or (not (= $generated@@161 $generated@@29)) (not true)) (and ($generated@@26 $generated@@27 $generated@@161 $generated@@33) ($generated@@32 $generated@@27 $generated@@161 $generated@@33 $generated@@159))) (not ($generated@@11 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@155 $generated@@161) $generated@@2))))) (and (forall (($generated@@167 T@U) ) (!  (=> (and (or (not (= $generated@@167 $generated@@29)) (not true)) ($generated@@11 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@155 $generated@@167) $generated@@2)))) (= ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@159 $generated@@167) ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@155 $generated@@167)))
 :pattern ( ($generated@@37 $generated@@27 ($generated@@40 $generated@@38 $generated@@39) $generated@@159 $generated@@167))
)) ($generated@@63 $generated@@155 $generated@@159))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@161 $generated@@29)) (not true)))))))))
(let (($generated@@168  (=> (and ($generated@@158 $generated@@155) ($generated@@160 $generated@@155)) (=> (and (and (and ($generated@@26 $generated@@73 $generated@@162 ($generated@@74 $generated)) ($generated@@32 $generated@@73 $generated@@162 ($generated@@74 $generated) $generated@@155)) true) (and (and (=> $generated@@163 (and ($generated@@26 $generated@@27 $generated@@164 $generated@@33) ($generated@@32 $generated@@27 $generated@@164 $generated@@33 $generated@@155))) true) (and (= 1 $generated@@165) (= (ControlFlow 0 4) 2)))) $generated@@166))))
$generated@@168)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
