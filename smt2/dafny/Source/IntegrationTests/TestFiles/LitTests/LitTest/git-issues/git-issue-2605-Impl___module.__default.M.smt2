(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (Int) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@90 (Int Int) Int)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) Int)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@37 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@37 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@5 $generated@@38) 4)) (= ($generated@@5 $generated@@39) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@5 ($generated@@40 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@40 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@40 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@40 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63)  (or (= $generated@@62 $generated@@25) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@63 $generated@@62) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@62 ($generated@@24 $generated@@61) $generated@@63))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (and (and (and ($generated@@70 $generated@@73) (and (or (not (= $generated@@74 $generated@@25)) (not true)) (= ($generated@@26 $generated@@74) ($generated@@24 $generated@@72)))) (and (<= 0 $generated@@75) (< $generated@@75 ($generated@@23 $generated@@74)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@73 $generated@@74) $generated@@1)))) ($generated@@71 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@73 $generated@@74) ($generated@@69 $generated@@75)) $generated@@72 $generated@@73))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@73 $generated@@74) ($generated@@69 $generated@@75)) ($generated@@24 $generated@@72))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@36 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@36 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@80 ($generated@@32 $generated@@79))  (and ($generated@@27 $generated@@31 $generated@@80 ($generated@@24 $generated@@79)) (or (not (= $generated@@80 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@80 ($generated@@32 $generated@@79)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@80 ($generated@@24 $generated@@79)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@71 ($generated@@76 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@30 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@71 ($generated@@76 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@86)) $generated@@2) (= ($generated@@85 ($generated@@24 $generated@@86)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@87)) $generated@@3) (= ($generated@@85 ($generated@@32 $generated@@87)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@89 ($generated@@24 $generated@@88))  (or (= $generated@@89 $generated@@25) (= ($generated@@26 $generated@@89) ($generated@@24 $generated@@88))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@89 ($generated@@24 $generated@@88)))
)))
(assert (forall (($generated@@91 Int) ($generated@@92 Int) ) (! (= ($generated@@90 $generated@@91 $generated@@92) (div $generated@@91 $generated@@92))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@93 $generated@@94 $generated) (and (= ($generated@@76 $generated@@7 ($generated@@36 $generated@@7 $generated@@94)) $generated@@94) ($generated@@27 $generated@@7 ($generated@@36 $generated@@7 $generated@@94) $generated)))
 :pattern ( ($generated@@93 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@93 ($generated@@76 $generated@@97 $generated@@95) $generated@@96) ($generated@@27 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@93 ($generated@@76 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (<= 0 ($generated@@23 $generated@@98))
 :pattern ( ($generated@@23 $generated@@98))
)))
(assert (forall (($generated@@99 Int) ) (! (= ($generated@@21 ($generated@@69 $generated@@99)) 1)
 :pattern ( ($generated@@69 $generated@@99))
)))
(assert (forall (($generated@@101 Int) ) (! (= ($generated@@100 ($generated@@69 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@69 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@24 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@24 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@32 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@32 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@36 $generated@@107 ($generated@@76 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@76 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and (and ($generated@@70 $generated@@109) (and (or (not (= $generated@@110 $generated@@25)) (not true)) (= ($generated@@26 $generated@@110) ($generated@@24 $generated@@108)))) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@109 $generated@@110) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@110)) $generated $generated@@109))
 :pattern ( ($generated@@23 $generated@@110) ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@109 $generated@@110) $generated@@1)) ($generated@@24 $generated@@108))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 Int) ) (!  (=> (and (and ($generated@@70 $generated@@112) (and (or (not (= $generated@@113 $generated@@25)) (not true)) (= ($generated@@26 $generated@@113) ($generated@@24 $generated@@111)))) (and (<= 0 $generated@@114) (< $generated@@114 ($generated@@23 $generated@@113)))) ($generated@@93 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@112 $generated@@113) ($generated@@69 $generated@@114)) $generated@@111))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@112 $generated@@113) ($generated@@69 $generated@@114)) ($generated@@24 $generated@@111))
)))
(assert  (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@115 $generated@@118 $generated@@119 $generated@@120 ($generated@@117 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@123 $generated@@124) $generated@@121)
 :weight 0
)) (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@115 $generated@@125 $generated@@126 $generated@@127 ($generated@@117 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@115 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@115 $generated@@134 $generated@@135 $generated@@136 ($generated@@117 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@115 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@10 ($generated@@115 $generated@@31 $generated@@38 $generated@@6 ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@10 ($generated@@36 $generated@@6 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@115 $generated@@31 $generated@@38 $generated@@6 ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@93 $generated@@150 ($generated@@24 $generated@@149)) (and (= ($generated@@76 $generated@@31 ($generated@@36 $generated@@31 $generated@@150)) $generated@@150) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@150) ($generated@@24 $generated@@149))))
 :pattern ( ($generated@@93 $generated@@150 ($generated@@24 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@93 $generated@@152 ($generated@@32 $generated@@151)) (and (= ($generated@@76 $generated@@31 ($generated@@36 $generated@@31 $generated@@152)) $generated@@152) ($generated@@27 $generated@@31 ($generated@@36 $generated@@31 $generated@@152) ($generated@@32 $generated@@151))))
 :pattern ( ($generated@@93 $generated@@152 ($generated@@32 $generated@@151)))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@76 $generated@@7 ($generated@@11 ($generated@@64 $generated@@153))) ($generated@@66 $generated@@39 ($generated@@76 $generated@@7 ($generated@@11 $generated@@153))))
 :pattern ( ($generated@@76 $generated@@7 ($generated@@11 ($generated@@64 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@76 $generated@@155 ($generated@@66 $generated@@155 $generated@@154)) ($generated@@66 $generated@@39 ($generated@@76 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@76 $generated@@155 ($generated@@66 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@30 $generated@@7 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@30 $generated@@7 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@27 $generated@@7 $generated@@158 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@166  (and (=> (= (ControlFlow 0 11) (- 0 13)) ($generated@@10 ($generated@@66 $generated@@6 ($generated@@9 false)))) (=> ($generated@@10 ($generated@@66 $generated@@6 ($generated@@9 false))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (= ($generated@@90 $generated@@159 ($generated@@64 0)) ($generated@@90 $generated@@159 ($generated@@64 0)))) (=> (= ($generated@@90 $generated@@159 ($generated@@64 0)) ($generated@@90 $generated@@159 ($generated@@64 0))) (=> (= (ControlFlow 0 11) (- 0 10)) (= ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@161) ($generated@@69 $generated@@162)))) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@161) ($generated@@69 $generated@@162))))))))))))
(let (($generated@@167  (and (=> (= (ControlFlow 0 4) (- 0 9)) (or (not (= ($generated@@64 0) 0)) (not true))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (or (not (= ($generated@@64 0) 0)) (not true))) (=> (= ($generated@@90 $generated@@159 ($generated@@64 0)) ($generated@@90 $generated@@159 ($generated@@64 0))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (not (= $generated@@161 $generated@@25)) (not true))) (=> (or (not (= $generated@@161 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 $generated@@162) (< $generated@@162 ($generated@@23 $generated@@161)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (not (= $generated@@161 $generated@@25)) (not true))) (=> (or (not (= $generated@@161 $generated@@25)) (not true)) (=> (= (ControlFlow 0 4) (- 0 3)) (and (<= 0 $generated@@162) (< $generated@@162 ($generated@@23 $generated@@161))))))))))))))
(let (($generated@@168  (=> (and (<= ($generated@@64 0) $generated@@159) (< $generated@@159 100)) (and (=> (= (ControlFlow 0 14) 4) $generated@@167) (=> (= (ControlFlow 0 14) 11) $generated@@166)))))
(let (($generated@@169  (=> (and (< $generated@@159 ($generated@@64 0)) (= (ControlFlow 0 16) 14)) $generated@@168)))
(let (($generated@@170  (=> (and (<= ($generated@@64 0) $generated@@159) (= (ControlFlow 0 15) 14)) $generated@@168)))
(let (($generated@@171  (and (=> (= (ControlFlow 0 17) 15) $generated@@170) (=> (= (ControlFlow 0 17) 16) $generated@@169))))
(let (($generated@@172  (=> (and (forall (($generated@@173 Int) ) (!  (=> (and (<= ($generated@@64 0) $generated@@173) (< $generated@@173 100)) (and (= ($generated@@90 $generated@@173 ($generated@@64 0)) ($generated@@90 $generated@@173 ($generated@@64 0))) (= ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@161) ($generated@@69 $generated@@162)))) ($generated@@12 ($generated@@36 $generated@@7 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@31 ($generated@@40 $generated@@38 $generated@@39) $generated@@160 $generated@@161) ($generated@@69 $generated@@162)))))))
 :pattern ( ($generated@@90 $generated@@173 0))
)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@10 ($generated@@66 $generated@@6 ($generated@@9 false))))))
(let (($generated@@174  (=> (= $generated@@163 ($generated@@116 $generated@@25 $generated@@160 $generated@@1 false)) (and (=> (= (ControlFlow 0 18) 17) $generated@@171) (=> (= (ControlFlow 0 18) 2) $generated@@172)))))
(let (($generated@@175  (=> (and ($generated@@70 $generated@@160) ($generated@@164 $generated@@160)) (=> (and (and ($generated@@27 $generated@@31 $generated@@161 ($generated@@32 $generated)) ($generated@@30 $generated@@31 $generated@@161 ($generated@@32 $generated) $generated@@160)) (and (= 0 $generated@@165) (= (ControlFlow 0 19) 18))) $generated@@174))))
$generated@@175))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 8))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 6))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Invalid
