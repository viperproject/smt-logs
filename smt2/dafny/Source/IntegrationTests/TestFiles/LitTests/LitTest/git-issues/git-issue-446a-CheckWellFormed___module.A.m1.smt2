(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U Int) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) Bool)
(declare-fun $generated@@117 (T@U) Bool)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@162 (T@U) Int)
(declare-fun $generated@@167 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated) $generated@@1))
(assert (= ($generated@@28 $generated@@0) $generated@@2))
(assert (= ($generated@@12 $generated@@34) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (and (<= 0 $generated@@36) (< $generated@@36 ($generated@@31 $generated@@35))) (< ($generated@@32 ($generated@@33 $generated@@34 ($generated@@29 $generated@@35 $generated@@36))) ($generated@@32 ($generated@@30 $generated@@35))))
 :pattern ( ($generated@@29 $generated@@35 $generated@@36) ($generated@@30 $generated@@35))
)))
(assert (= ($generated@@31 $generated@@37) 0))
(assert (= ($generated@@12 $generated@@39) 4))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@43 $generated@@40)  (or (= $generated@@43 $generated@@41) (= ($generated@@42 $generated@@43) $generated@@40)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@43 $generated@@40))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@44 $generated@@39 $generated@@46 $generated@@45 $generated@@47) ($generated@@44 $generated@@39 $generated@@46 $generated@@40 $generated@@47))
 :pattern ( ($generated@@44 $generated@@39 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@44 $generated@@39 $generated@@46 $generated@@40 $generated@@47))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@12 $generated@@49) 5)) (= ($generated@@12 $generated@@50) 6)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@12 ($generated@@51 $generated@@66 $generated@@67)) 7))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@44 $generated@@39 $generated@@72 $generated@@40 $generated@@73)  (or (= $generated@@72 $generated@@41) ($generated@@17 ($generated@@33 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@72) $generated@@4)))))
 :pattern ( ($generated@@44 $generated@@39 $generated@@72 $generated@@40 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@74 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@17 ($generated@@33 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@75 $generated@@77) $generated@@4))) ($generated@@17 ($generated@@33 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@4))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@4))
)))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@83 $generated@@85) (= ($generated@@84 $generated@@85) $generated@@8))
 :pattern ( ($generated@@83 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@87) (= ($generated@@84 $generated@@87) $generated@@9))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@33 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@33 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@83 $generated@@92) (exists (($generated@@93 T@U) ) (= $generated@@92 ($generated@@91 $generated@@93))))
 :pattern ( ($generated@@83 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@86 $generated@@94) (exists (($generated@@95 T@U) ) (= $generated@@94 ($generated@@30 $generated@@95))))
 :pattern ( ($generated@@86 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@96 ($generated@@88 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@44 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 ($generated@@88 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@74 $generated@@101 $generated@@102) (=> ($generated@@96 $generated@@103 $generated@@104 $generated@@101) ($generated@@96 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@74 $generated@@101 $generated@@102) ($generated@@96 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (!  (=> ($generated@@74 $generated@@105 $generated@@106) (=> ($generated@@44 $generated@@109 $generated@@107 $generated@@108 $generated@@105) ($generated@@44 $generated@@109 $generated@@107 $generated@@108 $generated@@106)))
 :pattern ( ($generated@@74 $generated@@105 $generated@@106) ($generated@@44 $generated@@109 $generated@@107 $generated@@108 $generated@@105))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@28 ($generated@@110 $generated@@112)) $generated@@7) (= ($generated@@111 ($generated@@110 $generated@@112)) $generated@@11))
 :pattern ( ($generated@@110 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@113 $generated@@114 $generated@@45) (and (= ($generated@@88 $generated@@39 ($generated@@33 $generated@@39 $generated@@114)) $generated@@114) ($generated@@38 $generated@@39 ($generated@@33 $generated@@39 $generated@@114) $generated@@45)))
 :pattern ( ($generated@@113 $generated@@114 $generated@@45))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@113 $generated@@115 $generated@@40) (and (= ($generated@@88 $generated@@39 ($generated@@33 $generated@@39 $generated@@115)) $generated@@115) ($generated@@38 $generated@@39 ($generated@@33 $generated@@39 $generated@@115) $generated@@40)))
 :pattern ( ($generated@@113 $generated@@115 $generated@@40))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@116 $generated@@45)  (and ($generated@@38 $generated@@39 $generated@@116 $generated@@40) (or (not (= $generated@@116 $generated@@41)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@116 $generated@@45))
 :pattern ( ($generated@@38 $generated@@39 $generated@@116 $generated@@40))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@117 $generated@@120) (= ($generated@@44 $generated@@34 ($generated@@91 $generated@@119) ($generated@@110 $generated@@118) $generated@@120) ($generated@@96 $generated@@119 $generated@@118 $generated@@120)))
 :pattern ( ($generated@@44 $generated@@34 ($generated@@91 $generated@@119) ($generated@@110 $generated@@118) $generated@@120))
)))
(assert (= ($generated@@12 $generated@@121) 8))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@117 $generated@@125) (and ($generated@@86 $generated@@124) (exists (($generated@@126 T@U) ) (! ($generated@@44 $generated@@34 $generated@@124 ($generated@@110 $generated@@126) $generated@@125)
 :pattern ( ($generated@@44 $generated@@34 $generated@@124 ($generated@@110 $generated@@126) $generated@@125))
)))) ($generated@@44 $generated@@121 ($generated@@122 $generated@@124) ($generated@@123 $generated) $generated@@125))
 :pattern ( ($generated@@44 $generated@@121 ($generated@@122 $generated@@124) ($generated@@123 $generated) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@117 $generated@@129) (= ($generated@@44 $generated@@34 ($generated@@30 $generated@@128) ($generated@@110 $generated@@127) $generated@@129) ($generated@@44 $generated@@121 $generated@@128 ($generated@@123 $generated) $generated@@129)))
 :pattern ( ($generated@@44 $generated@@34 ($generated@@30 $generated@@128) ($generated@@110 $generated@@127) $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@38 $generated@@34 $generated@@131 ($generated@@110 $generated@@130)) (or ($generated@@83 $generated@@131) ($generated@@86 $generated@@131)))
 :pattern ( ($generated@@86 $generated@@131) ($generated@@38 $generated@@34 $generated@@131 ($generated@@110 $generated@@130)))
 :pattern ( ($generated@@83 $generated@@131) ($generated@@38 $generated@@34 $generated@@131 ($generated@@110 $generated@@130)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (or (not (= $generated@@132 $generated@@134)) (not true)) (=> (and ($generated@@74 $generated@@132 $generated@@133) ($generated@@74 $generated@@133 $generated@@134)) ($generated@@74 $generated@@132 $generated@@134)))
 :pattern ( ($generated@@74 $generated@@132 $generated@@133) ($generated@@74 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@113 $generated@@135 $generated@@0) (and (= ($generated@@88 $generated@@14 ($generated@@33 $generated@@14 $generated@@135)) $generated@@135) ($generated@@38 $generated@@14 ($generated@@33 $generated@@14 $generated@@135) $generated@@0)))
 :pattern ( ($generated@@113 $generated@@135 $generated@@0))
)))
(assert (= ($generated@@12 $generated@@136) 9))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@113 $generated@@137 $generated) (and (= ($generated@@88 $generated@@136 ($generated@@33 $generated@@136 $generated@@137)) $generated@@137) ($generated@@38 $generated@@136 ($generated@@33 $generated@@136 $generated@@137) $generated)))
 :pattern ( ($generated@@113 $generated@@137 $generated))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@113 ($generated@@88 $generated@@140 $generated@@138) $generated@@139) ($generated@@38 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@113 ($generated@@88 $generated@@140 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (<= 0 ($generated@@31 $generated@@141))
 :pattern ( ($generated@@31 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@44 $generated@@121 $generated@@142 ($generated@@123 $generated@@143) $generated@@144) (forall (($generated@@145 Int) ) (!  (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@31 $generated@@142))) ($generated@@96 ($generated@@29 $generated@@142 $generated@@145) $generated@@143 $generated@@144))
 :pattern ( ($generated@@29 $generated@@142 $generated@@145))
)))
 :pattern ( ($generated@@44 $generated@@121 $generated@@142 ($generated@@123 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@123 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@123 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@28 ($generated@@123 $generated@@148)) $generated@@3)
 :pattern ( ($generated@@123 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@110 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@110 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@84 ($generated@@91 $generated@@151)) $generated@@8)
 :pattern ( ($generated@@91 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@91 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@91 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@84 ($generated@@30 $generated@@154)) $generated@@9)
 :pattern ( ($generated@@30 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@122 ($generated@@30 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@30 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@33 $generated@@157 ($generated@@88 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@88 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@38 $generated@@34 ($generated@@91 $generated@@159) ($generated@@110 $generated@@158)) ($generated@@113 $generated@@159 $generated@@158))
 :pattern ( ($generated@@38 $generated@@34 ($generated@@91 $generated@@159) ($generated@@110 $generated@@158)))
)))
(assert (forall (($generated@@161 T@U) ) (! (< ($generated@@160 $generated@@161) ($generated@@32 ($generated@@91 $generated@@161)))
 :pattern ( ($generated@@91 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (< ($generated@@162 $generated@@163) ($generated@@32 ($generated@@30 $generated@@163)))
 :pattern ( ($generated@@30 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@117 $generated@@166) (and ($generated@@83 $generated@@164) ($generated@@44 $generated@@34 $generated@@164 ($generated@@110 $generated@@165) $generated@@166))) ($generated@@96 ($generated@@152 $generated@@164) $generated@@165 $generated@@166))
 :pattern ( ($generated@@96 ($generated@@152 $generated@@164) $generated@@165 $generated@@166))
)))
(assert  (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@167 $generated@@170 $generated@@171 $generated@@172 ($generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@175 $generated@@176) $generated@@173)
 :weight 0
)) (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@167 $generated@@177 $generated@@178 $generated@@179 ($generated@@169 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@167 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@167 $generated@@186 $generated@@187 $generated@@188 ($generated@@169 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@167 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@17 ($generated@@167 $generated@@39 $generated@@49 $generated@@13 ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@17 ($generated@@33 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@167 $generated@@39 $generated@@49 $generated@@13 ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@160 ($generated@@88 $generated@@34 $generated@@201)) ($generated@@32 $generated@@201))
 :pattern ( ($generated@@160 ($generated@@88 $generated@@34 $generated@@201)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@113 $generated@@202 ($generated@@123 $generated@@203)) (and (= ($generated@@88 $generated@@121 ($generated@@33 $generated@@121 $generated@@202)) $generated@@202) ($generated@@38 $generated@@121 ($generated@@33 $generated@@121 $generated@@202) ($generated@@123 $generated@@203))))
 :pattern ( ($generated@@113 $generated@@202 ($generated@@123 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@113 $generated@@205 ($generated@@110 $generated@@204)) (and (= ($generated@@88 $generated@@34 ($generated@@33 $generated@@34 $generated@@205)) $generated@@205) ($generated@@38 $generated@@34 ($generated@@33 $generated@@34 $generated@@205) ($generated@@110 $generated@@204))))
 :pattern ( ($generated@@113 $generated@@205 ($generated@@110 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@38 $generated@@34 ($generated@@30 $generated@@207) ($generated@@110 $generated@@206)) ($generated@@38 $generated@@121 $generated@@207 ($generated@@123 $generated)))
 :pattern ( ($generated@@38 $generated@@34 ($generated@@30 $generated@@207) ($generated@@110 $generated@@206)))
)))
(assert (= ($generated@@28 $generated@@45) $generated@@5))
(assert (= ($generated@@111 $generated@@45) $generated@@10))
(assert (= ($generated@@28 $generated@@40) $generated@@6))
(assert (= ($generated@@111 $generated@@40) $generated@@10))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@88 $generated@@14 ($generated@@18 ($generated@@78 $generated@@208))) ($generated@@80 $generated@@50 ($generated@@88 $generated@@14 ($generated@@18 $generated@@208))))
 :pattern ( ($generated@@88 $generated@@14 ($generated@@18 ($generated@@78 $generated@@208))))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@91 ($generated@@80 $generated@@50 $generated@@209)) ($generated@@80 $generated@@34 ($generated@@91 $generated@@209)))
 :pattern ( ($generated@@91 ($generated@@80 $generated@@50 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@30 ($generated@@80 $generated@@121 $generated@@210)) ($generated@@80 $generated@@34 ($generated@@30 $generated@@210)))
 :pattern ( ($generated@@30 ($generated@@80 $generated@@121 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@88 $generated@@212 ($generated@@80 $generated@@212 $generated@@211)) ($generated@@80 $generated@@50 ($generated@@88 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@88 $generated@@212 ($generated@@80 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> (= ($generated@@31 $generated@@213) 0) (= $generated@@213 $generated@@37))
 :pattern ( ($generated@@31 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! ($generated@@44 $generated@@14 $generated@@215 $generated@@0 $generated@@214)
 :pattern ( ($generated@@44 $generated@@14 $generated@@215 $generated@@0 $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! ($generated@@44 $generated@@136 $generated@@217 $generated $generated@@216)
 :pattern ( ($generated@@44 $generated@@136 $generated@@217 $generated $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@38 $generated@@121 $generated@@218 ($generated@@123 $generated@@219)) (forall (($generated@@220 Int) ) (!  (=> (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@31 $generated@@218))) ($generated@@113 ($generated@@29 $generated@@218 $generated@@220) $generated@@219))
 :pattern ( ($generated@@29 $generated@@218 $generated@@220))
)))
 :pattern ( ($generated@@38 $generated@@121 $generated@@218 ($generated@@123 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 Int) ) (!  (=> (and (<= 0 $generated@@222) (< $generated@@222 ($generated@@31 $generated@@221))) (< ($generated@@32 ($generated@@33 $generated@@34 ($generated@@29 $generated@@221 $generated@@222))) ($generated@@162 $generated@@221)))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@34 ($generated@@29 $generated@@221 $generated@@222))))
)))
(assert (forall (($generated@@223 T@U) ) (! ($generated@@38 $generated@@14 $generated@@223 $generated@@0)
 :pattern ( ($generated@@38 $generated@@14 $generated@@223 $generated@@0))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@38 $generated@@136 $generated@@224 $generated)
 :pattern ( ($generated@@38 $generated@@136 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@234 true))
(let (($generated@@235 true))
(let (($generated@@236  (=> (=> (<= ($generated@@78 0) $generated@@225) (and ($generated@@83 $generated@@226) (= ($generated@@19 ($generated@@33 $generated@@14 ($generated@@152 $generated@@226))) $generated@@225))) (and (=> (= (ControlFlow 0 5) 1) $generated@@235) (=> (= (ControlFlow 0 5) 2) $generated@@234)))))
(let (($generated@@237  (=> (and (<= ($generated@@78 0) $generated@@225) ($generated@@83 $generated@@226)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@83 $generated@@226)) (=> ($generated@@83 $generated@@226) (=> (= ($generated@@19 ($generated@@33 $generated@@14 ($generated@@152 $generated@@226))) $generated@@225) (and (=> (= (ControlFlow 0 3) 1) $generated@@235) (=> (= (ControlFlow 0 3) 2) $generated@@234))))))))
(let (($generated@@238  (=> (= $generated@@227 ($generated@@168 $generated@@41 $generated@@228 $generated@@4 false)) (=> (and ($generated@@117 $generated@@229) ($generated@@230 $generated@@229)) (=> (and (and (forall (($generated@@239 T@U) ) (!  (=> (and (or (not (= $generated@@239 $generated@@41)) (not true)) ($generated@@17 ($generated@@33 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@228 $generated@@239) $generated@@4)))) (= ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@229 $generated@@239) ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@228 $generated@@239)))
 :pattern ( ($generated@@48 $generated@@39 ($generated@@51 $generated@@49 $generated@@50) $generated@@229 $generated@@239))
)) ($generated@@74 $generated@@228 $generated@@229)) (and ($generated@@38 $generated@@34 $generated@@226 ($generated@@110 $generated@@0)) ($generated@@44 $generated@@34 $generated@@226 ($generated@@110 $generated@@0) $generated@@229))) (and (=> (= (ControlFlow 0 6) 3) $generated@@237) (=> (= (ControlFlow 0 6) 5) $generated@@236)))))))
(let (($generated@@240  (=> (and (and (and ($generated@@117 $generated@@228) ($generated@@230 $generated@@228)) (and (or (not (= $generated@@231 $generated@@41)) (not true)) (and ($generated@@38 $generated@@39 $generated@@231 $generated@@45) ($generated@@44 $generated@@39 $generated@@231 $generated@@45 $generated@@228)))) (and (and ($generated@@38 $generated@@34 $generated@@232 ($generated@@110 $generated@@0)) ($generated@@44 $generated@@34 $generated@@232 ($generated@@110 $generated@@0) $generated@@228)) (and (= 1 $generated@@233) (= (ControlFlow 0 7) 6)))) $generated@@238)))
$generated@@240)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
