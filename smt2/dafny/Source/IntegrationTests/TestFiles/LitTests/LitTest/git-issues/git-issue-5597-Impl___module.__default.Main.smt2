(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@55 (T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@67 (T@U) Int)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@T T@T) T@T)
(declare-fun $generated@@75 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@105 () Int)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@110 (Int) Int)
(declare-fun $generated@@114 (T@T T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@118 (T@U) Bool)
(declare-fun $generated@@120 (T@T T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@192 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@194 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@27) ($generated@@24 ($generated@@23 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 $generated@@26) ($generated@@24 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@24 $generated@@29 $generated@@30) ($generated@@24 ($generated@@23 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@23 $generated@@28 $generated@@29) ($generated@@24 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@24 $generated@@33 $generated@@34) (not ($generated@@24 ($generated@@31 $generated@@32 $generated@@33) $generated@@34)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33) ($generated@@24 $generated@@33 $generated@@34))
)))
(assert ($generated@@35 $generated@@36))
(assert (forall (($generated@@38 T@U) ) (!  (not ($generated@@24 $generated@@37 $generated@@38))
 :pattern ( ($generated@@24 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@24 ($generated@@39 $generated@@40 $generated@@41) $generated@@42)  (and ($generated@@24 $generated@@40 $generated@@42) ($generated@@24 $generated@@41 $generated@@42)))
 :pattern ( ($generated@@24 ($generated@@39 $generated@@40 $generated@@41) $generated@@42))
)))
(assert (= ($generated@@7 $generated@@44) 3))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@47 $generated@@36)  (or (= $generated@@47 $generated@@45) (= ($generated@@46 $generated@@47) $generated@@36)))
 :pattern ( ($generated@@43 $generated@@44 $generated@@47 $generated@@36))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@23 ($generated@@23 $generated@@48 $generated@@49) $generated@@49) ($generated@@23 $generated@@48 $generated@@49))
 :pattern ( ($generated@@23 ($generated@@23 $generated@@48 $generated@@49) $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@39 ($generated@@39 $generated@@50 $generated@@51) $generated@@51) ($generated@@39 $generated@@50 $generated@@51))
 :pattern ( ($generated@@39 ($generated@@39 $generated@@50 $generated@@51) $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@24 ($generated@@31 $generated@@52 $generated@@53) $generated@@54)  (and ($generated@@24 $generated@@52 $generated@@54) (not ($generated@@24 $generated@@53 $generated@@54))))
 :pattern ( ($generated@@24 ($generated@@31 $generated@@52 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@55 $generated@@58 $generated@@36 $generated@@59) ($generated@@56 $generated@@59)) ($generated@@55 $generated@@58 $generated@@57 $generated@@59))
 :pattern ( ($generated@@55 $generated@@58 $generated@@36 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@60 $generated@@44 $generated@@62 $generated@@61 $generated@@63) ($generated@@60 $generated@@44 $generated@@62 $generated@@57 $generated@@63))
 :pattern ( ($generated@@60 $generated@@44 $generated@@62 $generated@@61 $generated@@63))
 :pattern ( ($generated@@60 $generated@@44 $generated@@62 $generated@@57 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@60 $generated@@44 $generated@@65 $generated@@64 $generated@@66) ($generated@@60 $generated@@44 $generated@@65 $generated@@36 $generated@@66))
 :pattern ( ($generated@@60 $generated@@44 $generated@@65 $generated@@64 $generated@@66))
 :pattern ( ($generated@@60 $generated@@44 $generated@@65 $generated@@36 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (and (= (= ($generated@@67 $generated@@68) 0) (= $generated@@68 $generated@@37)) (=> (or (not (= ($generated@@67 $generated@@68) 0)) (not true)) (exists (($generated@@69 T@U) ) (! ($generated@@24 $generated@@68 $generated@@69)
 :pattern ( ($generated@@24 $generated@@68 $generated@@69))
))))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@71 $generated@@78 $generated@@79 ($generated@@75 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@82) $generated@@80)
 :weight 0
)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (or (= $generated@@87 $generated@@88) (= ($generated@@71 $generated@@83 $generated@@84 ($generated@@75 $generated@@83 $generated@@84 $generated@@86 $generated@@87 $generated@@85) $generated@@88) ($generated@@71 $generated@@83 $generated@@84 $generated@@86 $generated@@88)))
 :weight 0
))) (= ($generated@@7 $generated@@72) 4)) (= ($generated@@7 $generated@@73) 5)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (= ($generated@@7 ($generated@@74 $generated@@89 $generated@@90)) 6))) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (! (= ($generated@@76 ($generated@@74 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@74 $generated@@91 $generated@@92))
))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@77 ($generated@@74 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@74 $generated@@93 $generated@@94))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@60 $generated@@44 $generated@@95 $generated@@57 $generated@@96)  (or (= $generated@@95 $generated@@45) ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@96 $generated@@95) $generated@@0)))))
 :pattern ( ($generated@@60 $generated@@44 $generated@@95 $generated@@57 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@60 $generated@@44 $generated@@97 $generated@@36 $generated@@98)  (or (= $generated@@97 $generated@@45) ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@98 $generated@@97) $generated@@0)))))
 :pattern ( ($generated@@60 $generated@@44 $generated@@97 $generated@@36 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= (+ ($generated@@67 ($generated@@23 $generated@@99 $generated@@100)) ($generated@@67 ($generated@@39 $generated@@99 $generated@@100))) (+ ($generated@@67 $generated@@99) ($generated@@67 $generated@@100)))
 :pattern ( ($generated@@67 ($generated@@23 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@67 ($generated@@39 $generated@@99 $generated@@100)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@101 $generated@@102 $generated@@103) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@102 $generated@@104) $generated@@0))) ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@103 $generated@@104) $generated@@0))))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@103 $generated@@104) $generated@@0))
)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103))
)))
(assert (= ($generated@@7 $generated@@108) 7))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@111 T@U) ) (!  (=> (or ($generated@@107 $generated@@111) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@111 ($generated@@109 $generated@@61)) (= ($generated@@67 $generated@@111) ($generated@@110 0))))) (= ($generated@@106 $generated@@111) ($generated@@23 $generated@@37 (let (($generated@@112 $generated@@111))
$generated@@112))))
 :pattern ( ($generated@@106 $generated@@111))
))))
(assert (forall (($generated@@113 Int) ) (! (= ($generated@@110 $generated@@113) $generated@@113)
 :pattern ( ($generated@@110 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@114 $generated@@116 $generated@@115) $generated@@115)
 :pattern ( ($generated@@114 $generated@@116 $generated@@115))
)))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@119 T@U) ) (!  (=> (or ($generated@@118 $generated@@119) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@119 ($generated@@109 $generated@@61)) (= ($generated@@67 $generated@@119) ($generated@@110 0))))) (= ($generated@@117 $generated@@119) $generated@@119))
 :pattern ( ($generated@@117 $generated@@119))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@120 $generated@@122 ($generated@@70 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@70 $generated@@122 $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@123 $generated@@124 $generated@@125) (forall (($generated@@126 T@U) ) (!  (or (not ($generated@@24 $generated@@124 $generated@@126)) (not ($generated@@24 $generated@@125 $generated@@126)))
 :pattern ( ($generated@@24 $generated@@124 $generated@@126))
 :pattern ( ($generated@@24 $generated@@125 $generated@@126))
)))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@43 $generated@@108 $generated@@128 ($generated@@109 $generated@@129)) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@24 $generated@@128 $generated@@130) ($generated@@127 $generated@@130 $generated@@129))
 :pattern ( ($generated@@24 $generated@@128 $generated@@130))
)))
 :pattern ( ($generated@@43 $generated@@108 $generated@@128 ($generated@@109 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@55 ($generated@@120 $generated@@134 $generated@@131) $generated@@132 $generated@@133) ($generated@@60 $generated@@134 $generated@@131 $generated@@132 $generated@@133))
 :pattern ( ($generated@@55 ($generated@@120 $generated@@134 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@101 $generated@@135 $generated@@136) (=> ($generated@@55 $generated@@137 $generated@@138 $generated@@135) ($generated@@55 $generated@@137 $generated@@138 $generated@@136)))
 :pattern ( ($generated@@101 $generated@@135 $generated@@136) ($generated@@55 $generated@@137 $generated@@138 $generated@@135))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@T) ) (!  (=> ($generated@@101 $generated@@139 $generated@@140) (=> ($generated@@60 $generated@@143 $generated@@141 $generated@@142 $generated@@139) ($generated@@60 $generated@@143 $generated@@141 $generated@@142 $generated@@140)))
 :pattern ( ($generated@@101 $generated@@139 $generated@@140) ($generated@@60 $generated@@143 $generated@@141 $generated@@142 $generated@@139))
)))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@144 T@U) ) (!  (=> (or ($generated@@107 $generated@@144) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@144 ($generated@@109 $generated@@61)) (= ($generated@@67 $generated@@144) ($generated@@110 0))))) ($generated@@43 $generated@@108 ($generated@@106 $generated@@144) ($generated@@109 $generated@@64)))
 :pattern ( ($generated@@106 $generated@@144))
))))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@147 T@U) ) (!  (=> (or ($generated@@146 $generated@@147) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@147 ($generated@@109 $generated@@61)) (= ($generated@@67 $generated@@147) ($generated@@110 0))))) ($generated@@43 $generated@@108 ($generated@@145 $generated@@147) ($generated@@109 $generated@@64)))
 :pattern ( ($generated@@145 $generated@@147))
))))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@148 T@U) ) (!  (=> (or ($generated@@118 $generated@@148) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@148 ($generated@@109 $generated@@61)) (= ($generated@@67 $generated@@148) ($generated@@110 0))))) ($generated@@43 $generated@@108 ($generated@@117 $generated@@148) ($generated@@109 $generated@@64)))
 :pattern ( ($generated@@117 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@127 $generated@@149 $generated@@61) (and (= ($generated@@120 $generated@@44 ($generated@@70 $generated@@44 $generated@@149)) $generated@@149) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 $generated@@149) $generated@@61)))
 :pattern ( ($generated@@127 $generated@@149 $generated@@61))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@127 $generated@@150 $generated@@64) (and (= ($generated@@120 $generated@@44 ($generated@@70 $generated@@44 $generated@@150)) $generated@@150) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 $generated@@150) $generated@@64)))
 :pattern ( ($generated@@127 $generated@@150 $generated@@64))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@127 $generated@@151 $generated@@57) (and (= ($generated@@120 $generated@@44 ($generated@@70 $generated@@44 $generated@@151)) $generated@@151) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 $generated@@151) $generated@@57)))
 :pattern ( ($generated@@127 $generated@@151 $generated@@57))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@127 $generated@@152 $generated@@36) (and (= ($generated@@120 $generated@@44 ($generated@@70 $generated@@44 $generated@@152)) $generated@@152) ($generated@@43 $generated@@44 ($generated@@70 $generated@@44 $generated@@152) $generated@@36)))
 :pattern ( ($generated@@127 $generated@@152 $generated@@36))
)))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@153 T@U) ) (!  (=> (or ($generated@@146 $generated@@153) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@153 ($generated@@109 $generated@@61)) (= ($generated@@67 $generated@@153) ($generated@@110 0))))) (= ($generated@@145 $generated@@153) (let (($generated@@154 $generated@@153))
$generated@@154)))
 :pattern ( ($generated@@145 $generated@@153))
))))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@155 $generated@@61)  (and ($generated@@43 $generated@@44 $generated@@155 $generated@@57) (or (not (= $generated@@155 $generated@@45)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@155 $generated@@61))
 :pattern ( ($generated@@43 $generated@@44 $generated@@155 $generated@@57))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@156 $generated@@64)  (and ($generated@@43 $generated@@44 $generated@@156 $generated@@36) (or (not (= $generated@@156 $generated@@45)) (not true))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@156 $generated@@64))
 :pattern ( ($generated@@43 $generated@@44 $generated@@156 $generated@@36))
)))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@157 T@U) ) (!  (=> (or ($generated@@107 ($generated@@114 $generated@@108 $generated@@157)) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@157 ($generated@@109 $generated@@61)) (= ($generated@@67 ($generated@@114 $generated@@108 $generated@@157)) ($generated@@110 0))))) (= ($generated@@106 ($generated@@114 $generated@@108 $generated@@157)) ($generated@@23 $generated@@37 (let (($generated@@158 ($generated@@114 $generated@@108 $generated@@157)))
$generated@@158))))
 :weight 3
 :pattern ( ($generated@@106 ($generated@@114 $generated@@108 $generated@@157)))
))))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@159 T@U) ) (!  (=> (or ($generated@@118 ($generated@@114 $generated@@108 $generated@@159)) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@159 ($generated@@109 $generated@@61)) (= ($generated@@67 ($generated@@114 $generated@@108 $generated@@159)) ($generated@@110 0))))) (= ($generated@@117 ($generated@@114 $generated@@108 $generated@@159)) ($generated@@114 $generated@@108 $generated@@159)))
 :weight 3
 :pattern ( ($generated@@117 ($generated@@114 $generated@@108 $generated@@159)))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@24 ($generated@@23 $generated@@160 $generated@@161) $generated@@162)  (or ($generated@@24 $generated@@160 $generated@@162) ($generated@@24 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@24 ($generated@@23 $generated@@160 $generated@@161) $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@123 $generated@@163 $generated@@164) (and (= ($generated@@31 ($generated@@23 $generated@@163 $generated@@164) $generated@@163) $generated@@164) (= ($generated@@31 ($generated@@23 $generated@@163 $generated@@164) $generated@@164) $generated@@163)))
 :pattern ( ($generated@@23 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@60 $generated@@44 $generated@@165 $generated@@36 $generated@@166) ($generated@@60 $generated@@44 $generated@@165 $generated@@57 $generated@@166))
 :pattern ( ($generated@@60 $generated@@44 $generated@@165 $generated@@36 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (or (not (= $generated@@167 $generated@@169)) (not true)) (=> (and ($generated@@101 $generated@@167 $generated@@168) ($generated@@101 $generated@@168 $generated@@169)) ($generated@@101 $generated@@167 $generated@@169)))
 :pattern ( ($generated@@101 $generated@@167 $generated@@168) ($generated@@101 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (and (= (+ (+ ($generated@@67 ($generated@@31 $generated@@170 $generated@@171)) ($generated@@67 ($generated@@31 $generated@@171 $generated@@170))) ($generated@@67 ($generated@@39 $generated@@170 $generated@@171))) ($generated@@67 ($generated@@23 $generated@@170 $generated@@171))) (= ($generated@@67 ($generated@@31 $generated@@170 $generated@@171)) (- ($generated@@67 $generated@@170) ($generated@@67 ($generated@@39 $generated@@170 $generated@@171)))))
 :pattern ( ($generated@@67 ($generated@@31 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@127 ($generated@@120 $generated@@174 $generated@@172) $generated@@173) ($generated@@43 $generated@@174 $generated@@172 $generated@@173))
 :pattern ( ($generated@@127 ($generated@@120 $generated@@174 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (<= 0 ($generated@@67 $generated@@175))
 :pattern ( ($generated@@67 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@60 $generated@@108 $generated@@176 ($generated@@109 $generated@@177) $generated@@178) (forall (($generated@@179 T@U) ) (!  (=> ($generated@@24 $generated@@176 $generated@@179) ($generated@@55 $generated@@179 $generated@@177 $generated@@178))
 :pattern ( ($generated@@24 $generated@@176 $generated@@179))
)))
 :pattern ( ($generated@@60 $generated@@108 $generated@@176 ($generated@@109 $generated@@177) $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@180 ($generated@@109 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@109 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@182 ($generated@@109 $generated@@183)) $generated)
 :pattern ( ($generated@@109 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@70 $generated@@185 ($generated@@120 $generated@@185 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@120 $generated@@185 $generated@@184))
)))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@186 T@U) ) (!  (=> (or ($generated@@146 ($generated@@114 $generated@@108 $generated@@186)) (and (< 1 $generated@@105) (and ($generated@@43 $generated@@108 $generated@@186 ($generated@@109 $generated@@61)) (= ($generated@@67 ($generated@@114 $generated@@108 $generated@@186)) ($generated@@110 0))))) (= ($generated@@145 ($generated@@114 $generated@@108 $generated@@186)) (let (($generated@@187 ($generated@@114 $generated@@108 $generated@@186)))
$generated@@187)))
 :weight 3
 :pattern ( ($generated@@145 ($generated@@114 $generated@@108 $generated@@186)))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@23 $generated@@188 ($generated@@23 $generated@@188 $generated@@189)) ($generated@@23 $generated@@188 $generated@@189))
 :pattern ( ($generated@@23 $generated@@188 ($generated@@23 $generated@@188 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@39 $generated@@190 ($generated@@39 $generated@@190 $generated@@191)) ($generated@@39 $generated@@190 $generated@@191))
 :pattern ( ($generated@@39 $generated@@190 ($generated@@39 $generated@@190 $generated@@191)))
)))
(assert  (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@192 $generated@@195 $generated@@196 $generated@@197 ($generated@@194 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@200 $generated@@201) $generated@@198)
 :weight 0
)) (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@192 $generated@@202 $generated@@203 $generated@@204 ($generated@@194 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@192 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@192 $generated@@211 $generated@@212 $generated@@213 ($generated@@194 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@192 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 Bool) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@12 ($generated@@192 $generated@@44 $generated@@72 $generated@@8 ($generated@@193 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))  (=> (and (or (not (= $generated@@224 $generated@@220)) (not true)) ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@221 $generated@@224) $generated@@222)))) $generated@@223))
 :pattern ( ($generated@@192 $generated@@44 $generated@@72 $generated@@8 ($generated@@193 $generated@@220 $generated@@221 $generated@@222 $generated@@223) $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> ($generated@@127 $generated@@226 ($generated@@109 $generated@@227)) (and (= ($generated@@120 $generated@@108 ($generated@@70 $generated@@108 $generated@@226)) $generated@@226) ($generated@@43 $generated@@108 ($generated@@70 $generated@@108 $generated@@226) ($generated@@109 $generated@@227))))
 :pattern ( ($generated@@127 $generated@@226 ($generated@@109 $generated@@227)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> ($generated@@43 $generated@@44 $generated@@228 $generated@@36) ($generated@@43 $generated@@44 $generated@@228 $generated@@57))
 :pattern ( ($generated@@43 $generated@@44 $generated@@228 $generated@@36))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> ($generated@@127 $generated@@229 $generated@@36) ($generated@@127 $generated@@229 $generated@@57))
 :pattern ( ($generated@@127 $generated@@229 $generated@@36))
)))
(assert (= ($generated@@182 $generated@@61) $generated@@1))
(assert (= ($generated@@230 $generated@@61) $generated@@5))
(assert (= ($generated@@182 $generated@@64) $generated@@2))
(assert (= ($generated@@230 $generated@@64) $generated@@6))
(assert (= ($generated@@182 $generated@@57) $generated@@3))
(assert (= ($generated@@230 $generated@@57) $generated@@5))
(assert (= ($generated@@182 $generated@@36) $generated@@4))
(assert (= ($generated@@230 $generated@@36) $generated@@6))
(assert (forall (($generated@@231 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@231 $generated@@57)  (or (= $generated@@231 $generated@@45) ($generated@@35 ($generated@@46 $generated@@231))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@231 $generated@@57))
)))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (or ($generated@@107 $generated@@233) (and (< 1 $generated@@105) (and (and ($generated@@43 $generated@@108 $generated@@233 ($generated@@109 $generated@@61)) ($generated@@60 $generated@@108 $generated@@233 ($generated@@109 $generated@@61) $generated@@232)) (= ($generated@@67 $generated@@233) ($generated@@110 0))))) ($generated@@56 $generated@@232)) ($generated@@60 $generated@@108 ($generated@@106 $generated@@233) ($generated@@109 $generated@@64) $generated@@232))
 :pattern ( ($generated@@60 $generated@@108 ($generated@@106 $generated@@233) ($generated@@109 $generated@@64) $generated@@232))
))))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (or ($generated@@146 $generated@@235) (and (< 1 $generated@@105) (and (and ($generated@@43 $generated@@108 $generated@@235 ($generated@@109 $generated@@61)) ($generated@@60 $generated@@108 $generated@@235 ($generated@@109 $generated@@61) $generated@@234)) (= ($generated@@67 $generated@@235) ($generated@@110 0))))) ($generated@@56 $generated@@234)) ($generated@@60 $generated@@108 ($generated@@145 $generated@@235) ($generated@@109 $generated@@64) $generated@@234))
 :pattern ( ($generated@@60 $generated@@108 ($generated@@145 $generated@@235) ($generated@@109 $generated@@64) $generated@@234))
))))
(assert  (=> (<= 1 $generated@@105) (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (and (or ($generated@@118 $generated@@237) (and (< 1 $generated@@105) (and (and ($generated@@43 $generated@@108 $generated@@237 ($generated@@109 $generated@@61)) ($generated@@60 $generated@@108 $generated@@237 ($generated@@109 $generated@@61) $generated@@236)) (= ($generated@@67 $generated@@237) ($generated@@110 0))))) ($generated@@56 $generated@@236)) ($generated@@60 $generated@@108 ($generated@@117 $generated@@237) ($generated@@109 $generated@@64) $generated@@236))
 :pattern ( ($generated@@60 $generated@@108 ($generated@@117 $generated@@237) ($generated@@109 $generated@@64) $generated@@236))
))))
(assert (forall (($generated@@238 Int) ) (! (= ($generated@@120 $generated@@9 ($generated@@13 ($generated@@110 $generated@@238))) ($generated@@114 $generated@@73 ($generated@@120 $generated@@9 ($generated@@13 $generated@@238))))
 :pattern ( ($generated@@120 $generated@@9 ($generated@@13 ($generated@@110 $generated@@238))))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@T) ) (! (= ($generated@@120 $generated@@240 ($generated@@114 $generated@@240 $generated@@239)) ($generated@@114 $generated@@73 ($generated@@120 $generated@@240 $generated@@239)))
 :pattern ( ($generated@@120 $generated@@240 ($generated@@114 $generated@@240 $generated@@239)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@253  (=> (and (= $generated@@241 ($generated@@193 $generated@@45 $generated@@242 $generated@@0 false)) (= $generated@@243 ($generated@@114 $generated@@108 $generated@@37))) (=> (and (and ($generated@@43 $generated@@108 $generated@@244 ($generated@@109 $generated@@64)) ($generated@@60 $generated@@108 $generated@@244 ($generated@@109 $generated@@64) $generated@@242)) (and ($generated@@43 $generated@@108 $generated@@245 ($generated@@109 $generated@@64)) ($generated@@60 $generated@@108 $generated@@245 ($generated@@109 $generated@@64) $generated@@242))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= ($generated@@67 $generated@@243) ($generated@@110 0))) (=> (= ($generated@@67 $generated@@243) ($generated@@110 0)) (=> (and ($generated@@56 $generated@@246) ($generated@@247 $generated@@246)) (=> (and (and (and ($generated@@43 $generated@@108 $generated@@248 ($generated@@109 $generated@@64)) ($generated@@60 $generated@@108 $generated@@248 ($generated@@109 $generated@@64) $generated@@246)) (forall (($generated@@254 T@U) ) (!  (=> (and (or (not (= $generated@@254 $generated@@45)) (not true)) ($generated@@12 ($generated@@70 $generated@@8 ($generated@@71 $generated@@72 $generated@@73 ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@242 $generated@@254) $generated@@0)))) (= ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@246 $generated@@254) ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@242 $generated@@254)))
 :pattern ( ($generated@@71 $generated@@44 ($generated@@74 $generated@@72 $generated@@73) $generated@@246 $generated@@254))
))) (and ($generated@@101 $generated@@242 $generated@@246) ($generated@@60 $generated@@108 $generated@@243 ($generated@@109 $generated@@61) $generated@@246))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@67 $generated@@243) ($generated@@110 0))) (=> (= ($generated@@67 $generated@@243) ($generated@@110 0)) (=> (and (and ($generated@@107 $generated@@243) ($generated@@107 $generated@@243)) (and (= $generated@@249 ($generated@@106 $generated@@243)) ($generated@@60 $generated@@108 $generated@@243 ($generated@@109 $generated@@61) $generated@@246))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@67 $generated@@243) ($generated@@110 0))) (=> (and (= ($generated@@67 $generated@@243) ($generated@@110 0)) ($generated@@146 $generated@@243)) (=> (and (and ($generated@@146 $generated@@243) (= $generated@@250 ($generated@@145 $generated@@243))) (and ($generated@@60 $generated@@108 $generated@@243 ($generated@@109 $generated@@61) $generated@@246) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@67 $generated@@243) ($generated@@110 0))))))))))))))))
(let (($generated@@255  (=> (and ($generated@@56 $generated@@242) ($generated@@247 $generated@@242)) (=> (and (and ($generated@@43 $generated@@108 $generated@@251 ($generated@@109 $generated@@61)) ($generated@@60 $generated@@108 $generated@@251 ($generated@@109 $generated@@61) $generated@@242)) true) (=> (and (and (and ($generated@@43 $generated@@108 $generated@@252 ($generated@@109 $generated@@64)) ($generated@@60 $generated@@108 $generated@@252 ($generated@@109 $generated@@64) $generated@@242)) true) (and (= 2 $generated@@105) (= (ControlFlow 0 6) 2))) $generated@@253)))))
$generated@@255)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
