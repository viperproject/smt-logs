(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U T@U T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 () Int)
(declare-fun $generated@@69 (T@U) Int)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U T@U) Bool)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@76 (T@U) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@97 (Int) Int)
(declare-fun $generated@@101 (T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@U) Bool)
(declare-fun $generated@@109 () T@U)
(declare-fun $generated@@110 (T@U T@U) Bool)
(declare-fun $generated@@115 () Int)
(declare-fun $generated@@118 (Int) T@U)
(declare-fun $generated@@121 (T@U T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@131 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@29) 3) (= ($generated@@12 $generated@@36) 4)) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@12 $generated@@40) 5)) (= ($generated@@12 $generated@@41) 6)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@12 ($generated@@42 $generated@@57 $generated@@58)) 7))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@31 $generated@@65) (= ($generated@@28 $generated@@29 $generated@@63 ($generated@@30 $generated@@64) $generated@@65)  (=> ($generated@@32 $generated@@64 $generated@@65 $generated@@63) (forall (($generated@@66 T@U) ) (!  (=> (and (or (not (= $generated@@66 $generated@@37)) (not true)) ($generated@@33 ($generated@@34 $generated@@64 $generated@@65 $generated@@63) ($generated@@35 $generated@@36 $generated@@66))) ($generated@@17 ($generated@@38 $generated@@13 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@36 ($generated@@42 $generated@@40 $generated@@41) $generated@@65 $generated@@66) $generated@@1))))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@64 $generated@@65 $generated@@63) ($generated@@35 $generated@@36 $generated@@66)))
)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@63 ($generated@@30 $generated@@64) $generated@@65))
)))
(assert (= ($generated@@67 $generated) $generated@@0))
(assert (= ($generated@@12 $generated@@72) 8))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@75 T@U) ) (!  (=> (or ($generated@@70 $generated@@75) (and (< 0 $generated@@68) ($generated@@71 $generated@@72 $generated@@75 $generated@@73))) (= ($generated@@69 $generated@@75) (ite ($generated@@74 $generated@@75) 92 95)))
 :pattern ( ($generated@@69 $generated@@75))
))))
(assert  (=> (< 0 $generated@@68) (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@77) ($generated@@71 $generated@@72 $generated@@78 $generated@@73)) ($generated@@28 $generated@@72 $generated@@78 $generated@@73 $generated@@77)) ($generated@@28 $generated@@14 ($generated@@18 ($generated@@76 $generated@@78)) $generated $generated@@77))
 :pattern ( ($generated@@76 $generated@@78) ($generated@@28 $generated@@72 $generated@@78 $generated@@73 $generated@@77))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@81 ($generated@@79 $generated@@80) $generated@@82) ($generated@@28 $generated@@29 $generated@@81 ($generated@@30 $generated@@80) $generated@@82))
 :pattern ( ($generated@@28 $generated@@29 $generated@@81 ($generated@@79 $generated@@80) $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@85 ($generated@@83 $generated@@84) $generated@@86) ($generated@@28 $generated@@29 $generated@@85 ($generated@@79 $generated@@84) $generated@@86))
 :pattern ( ($generated@@28 $generated@@29 $generated@@85 ($generated@@83 $generated@@84) $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@32 $generated $generated@@90 ($generated@@87 $generated@@89)) ($generated@@88 $generated@@89))
 :pattern ( ($generated@@32 $generated $generated@@90 ($generated@@87 $generated@@89)))
)))
(assert (forall (($generated@@92 T@U) ) (!  (not ($generated@@33 $generated@@91 $generated@@92))
 :pattern ( ($generated@@33 $generated@@91 $generated@@92))
)))
(assert (= ($generated@@93 $generated@@94) $generated@@6))
(assert ($generated@@71 $generated@@72 $generated@@94 $generated@@73))
(assert  (=> (<= 0 $generated@@68) (forall (($generated@@96 T@U) ) (!  (=> (or ($generated@@70 ($generated@@95 $generated@@72 $generated@@96)) (and (< 0 $generated@@68) ($generated@@71 $generated@@72 $generated@@96 $generated@@73))) (= ($generated@@69 ($generated@@95 $generated@@72 $generated@@96)) (ite ($generated@@74 ($generated@@95 $generated@@72 $generated@@96)) 92 95)))
 :weight 3
 :pattern ( ($generated@@69 ($generated@@95 $generated@@72 $generated@@96)))
))))
(assert (forall (($generated@@98 Int) ) (! (= ($generated@@97 $generated@@98) $generated@@98)
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@95 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@95 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 $generated $generated@@103 ($generated@@87 $generated@@102)) ($generated@@35 $generated@@14 ($generated@@18 ($generated@@69 $generated@@102))))
 :pattern ( ($generated@@101 $generated $generated@@103 ($generated@@87 $generated@@102)))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@74 $generated@@104) (= ($generated@@93 $generated@@104) $generated@@6))
 :pattern ( ($generated@@74 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 $generated@@106) (= ($generated@@93 $generated@@106) $generated@@7))
 :pattern ( ($generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@35 $generated@@108 ($generated@@38 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@38 $generated@@108 $generated@@107))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@112) ($generated@@71 $generated@@29 $generated@@113 ($generated@@30 $generated@@111))) ($generated@@110 ($generated@@34 $generated@@111 $generated@@109 $generated@@113) $generated@@91)) (= ($generated@@32 $generated@@111 $generated@@109 $generated@@113) ($generated@@32 $generated@@111 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@32 $generated@@111 $generated@@109 $generated@@113) ($generated@@31 $generated@@112))
 :pattern ( ($generated@@32 $generated@@111 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@76 $generated@@114) ($generated@@97 40))
 :pattern ( ($generated@@76 $generated@@114))
)))
(assert  (=> (< 0 $generated@@68) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@31 $generated@@116) ($generated@@28 $generated@@14 ($generated@@18 $generated@@115) $generated $generated@@116))
 :pattern ( ($generated@@28 $generated@@14 ($generated@@18 $generated@@115) $generated $generated@@116))
))))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@74 $generated@@117) (= $generated@@117 $generated@@94))
 :pattern ( ($generated@@74 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@105 $generated@@119) (exists (($generated@@120 Int) ) (= $generated@@119 ($generated@@118 $generated@@120))))
 :pattern ( ($generated@@105 $generated@@119))
)))
(assert ($generated@@31 $generated@@109))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@121 ($generated@@35 $generated@@125 $generated@@122) $generated@@123 $generated@@124) ($generated@@28 $generated@@125 $generated@@122 $generated@@123 $generated@@124))
 :pattern ( ($generated@@121 ($generated@@35 $generated@@125 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ) (!  (and (= ($generated@@67 ($generated@@30 $generated@@127)) $generated@@2) (= ($generated@@126 ($generated@@30 $generated@@127)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@67 ($generated@@79 $generated@@128)) $generated@@3) (= ($generated@@126 ($generated@@79 $generated@@128)) $generated@@9))
 :pattern ( ($generated@@79 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (and (= ($generated@@67 ($generated@@83 $generated@@129)) $generated@@4) (= ($generated@@126 ($generated@@83 $generated@@129)) $generated@@10))
 :pattern ( ($generated@@83 $generated@@129))
)))
(assert  (=> (< 0 $generated@@68) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@130 $generated@@73) ($generated@@71 $generated@@14 ($generated@@18 ($generated@@76 $generated@@130)) $generated))
 :pattern ( ($generated@@76 $generated@@130))
))))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@131 $generated@@132 $generated@@73) (and (= ($generated@@35 $generated@@72 ($generated@@38 $generated@@72 $generated@@132)) $generated@@132) ($generated@@71 $generated@@72 ($generated@@38 $generated@@72 $generated@@132) $generated@@73)))
 :pattern ( ($generated@@131 $generated@@132 $generated@@73))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@31 $generated@@134) ($generated@@71 $generated@@29 $generated@@135 ($generated@@30 $generated@@133))) (= ($generated@@110 ($generated@@34 $generated@@133 $generated@@109 $generated@@135) $generated@@91) ($generated@@110 ($generated@@34 $generated@@133 $generated@@134 $generated@@135) $generated@@91)))
 :pattern ( ($generated@@34 $generated@@133 $generated@@109 $generated@@135) ($generated@@31 $generated@@134))
 :pattern ( ($generated@@34 $generated@@133 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@110 $generated@@136 $generated@@137) (= $generated@@136 $generated@@137))
 :pattern ( ($generated@@110 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@138 $generated@@73) (or ($generated@@74 $generated@@138) ($generated@@105 $generated@@138)))
 :pattern ( ($generated@@105 $generated@@138) ($generated@@71 $generated@@72 $generated@@138 $generated@@73))
 :pattern ( ($generated@@74 $generated@@138) ($generated@@71 $generated@@72 $generated@@138 $generated@@73))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@131 $generated@@139 $generated) (and (= ($generated@@35 $generated@@14 ($generated@@38 $generated@@14 $generated@@139)) $generated@@139) ($generated@@71 $generated@@14 ($generated@@38 $generated@@14 $generated@@139) $generated)))
 :pattern ( ($generated@@131 $generated@@139 $generated))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@131 ($generated@@35 $generated@@142 $generated@@140) $generated@@141) ($generated@@71 $generated@@142 $generated@@140 $generated@@141))
 :pattern ( ($generated@@131 ($generated@@35 $generated@@142 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@143 $generated@@73) (= ($generated@@88 $generated@@143) true))
 :pattern ( ($generated@@88 $generated@@143))
)))
(assert  (=> (< 0 $generated@@68) ($generated@@71 $generated@@14 ($generated@@18 $generated@@115) $generated)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@30 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@30 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@79 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@79 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@83 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@83 $generated@@149))
)))
(assert (forall (($generated@@150 Int) ) (! (= ($generated@@93 ($generated@@118 $generated@@150)) $generated@@7)
 :pattern ( ($generated@@118 $generated@@150))
)))
(assert (forall (($generated@@152 Int) ) (! (= ($generated@@151 ($generated@@118 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@118 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@38 $generated@@154 ($generated@@35 $generated@@154 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@35 $generated@@154 $generated@@153))
)))
(assert (= $generated@@115 ($generated@@97 30)))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@71 $generated@@72 ($generated@@118 $generated@@155) $generated@@73) ($generated@@71 $generated@@14 ($generated@@18 $generated@@155) $generated))
 :pattern ( ($generated@@71 $generated@@72 ($generated@@118 $generated@@155) $generated@@73))
)))
(assert  (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@156 $generated@@159 $generated@@160 $generated@@161 ($generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@164 $generated@@165) $generated@@162)
 :weight 0
)) (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@156 $generated@@166 $generated@@167 $generated@@168 ($generated@@158 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@156 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@181 $generated@@183) (= ($generated@@156 $generated@@175 $generated@@176 $generated@@177 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@156 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@17 ($generated@@156 $generated@@36 $generated@@40 $generated@@13 ($generated@@157 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@184)) (not true)) ($generated@@17 ($generated@@38 $generated@@13 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@36 ($generated@@42 $generated@@40 $generated@@41) $generated@@185 $generated@@188) $generated@@186)))) $generated@@187))
 :pattern ( ($generated@@156 $generated@@36 $generated@@40 $generated@@13 ($generated@@157 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@71 $generated@@29 $generated@@191 ($generated@@83 $generated@@190))  (and ($generated@@71 $generated@@29 $generated@@191 ($generated@@79 $generated@@190)) ($generated@@32 $generated@@190 $generated@@109 $generated@@191)))
 :pattern ( ($generated@@71 $generated@@29 $generated@@191 ($generated@@83 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@31 $generated@@193) (and ($generated@@105 $generated@@192) ($generated@@28 $generated@@72 $generated@@192 $generated@@73 $generated@@193))) ($generated@@28 $generated@@14 ($generated@@18 ($generated@@151 $generated@@192)) $generated $generated@@193))
 :pattern ( ($generated@@28 $generated@@14 ($generated@@18 ($generated@@151 $generated@@192)) $generated $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@71 $generated@@29 $generated@@194 ($generated@@30 $generated@@195)) (forall (($generated@@196 T@U) ) (!  (=> (and ($generated@@31 $generated@@196) ($generated@@32 $generated@@195 $generated@@196 $generated@@194)) ($generated@@131 ($generated@@101 $generated@@195 $generated@@196 $generated@@194) $generated@@195))
 :pattern ( ($generated@@101 $generated@@195 $generated@@196 $generated@@194))
)))
 :pattern ( ($generated@@71 $generated@@29 $generated@@194 ($generated@@30 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@131 $generated@@198 ($generated@@30 $generated@@197)) (and (= ($generated@@35 $generated@@29 ($generated@@38 $generated@@29 $generated@@198)) $generated@@198) ($generated@@71 $generated@@29 ($generated@@38 $generated@@29 $generated@@198) ($generated@@30 $generated@@197))))
 :pattern ( ($generated@@131 $generated@@198 ($generated@@30 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@131 $generated@@200 ($generated@@79 $generated@@199)) (and (= ($generated@@35 $generated@@29 ($generated@@38 $generated@@29 $generated@@200)) $generated@@200) ($generated@@71 $generated@@29 ($generated@@38 $generated@@29 $generated@@200) ($generated@@79 $generated@@199))))
 :pattern ( ($generated@@131 $generated@@200 ($generated@@79 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@131 $generated@@202 ($generated@@83 $generated@@201)) (and (= ($generated@@35 $generated@@29 ($generated@@38 $generated@@29 $generated@@202)) $generated@@202) ($generated@@71 $generated@@29 ($generated@@38 $generated@@29 $generated@@202) ($generated@@83 $generated@@201))))
 :pattern ( ($generated@@131 $generated@@202 ($generated@@83 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@31 $generated@@204) ($generated@@71 $generated@@72 $generated@@203 $generated@@73)) ($generated@@28 $generated@@72 $generated@@203 $generated@@73 $generated@@204))
 :pattern ( ($generated@@28 $generated@@72 $generated@@203 $generated@@73 $generated@@204))
)))
(assert (= ($generated@@67 $generated@@73) $generated@@5))
(assert (= ($generated@@126 $generated@@73) $generated@@11))
(assert (= $generated@@94 ($generated@@95 $generated@@72 $generated@@94)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@31 $generated@@207) ($generated@@28 $generated@@29 $generated@@205 ($generated@@30 $generated@@206) $generated@@207)) (=> ($generated@@32 $generated@@206 $generated@@207 $generated@@205) ($generated@@121 ($generated@@101 $generated@@206 $generated@@207 $generated@@205) $generated@@206 $generated@@207)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@205 ($generated@@30 $generated@@206) $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@110 $generated@@208 $generated@@209) (forall (($generated@@210 T@U) ) (! (= ($generated@@33 $generated@@208 $generated@@210) ($generated@@33 $generated@@209 $generated@@210))
 :pattern ( ($generated@@33 $generated@@208 $generated@@210))
 :pattern ( ($generated@@33 $generated@@209 $generated@@210))
)))
 :pattern ( ($generated@@110 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@71 $generated@@29 $generated@@211 ($generated@@30 $generated@@212)) (forall (($generated@@214 T@U) ) (!  (=> ($generated@@131 $generated@@214 $generated@@212) ($generated@@131 $generated@@214 $generated@@213))
 :pattern ( ($generated@@131 $generated@@214 $generated@@212))
 :pattern ( ($generated@@131 $generated@@214 $generated@@213))
))) ($generated@@71 $generated@@29 $generated@@211 ($generated@@30 $generated@@213)))
 :pattern ( ($generated@@71 $generated@@29 $generated@@211 ($generated@@30 $generated@@212)) ($generated@@71 $generated@@29 $generated@@211 ($generated@@30 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@69 $generated@@215) ($generated@@19 ($generated@@38 $generated@@14 ($generated@@101 $generated $generated@@216 ($generated@@87 $generated@@215)))))
 :pattern ( ($generated@@69 $generated@@215) ($generated@@31 $generated@@216))
)))
(assert (forall (($generated@@217 Int) ) (! (= ($generated@@35 $generated@@14 ($generated@@18 ($generated@@97 $generated@@217))) ($generated@@95 $generated@@41 ($generated@@35 $generated@@14 ($generated@@18 $generated@@217))))
 :pattern ( ($generated@@35 $generated@@14 ($generated@@18 ($generated@@97 $generated@@217))))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@118 ($generated@@97 $generated@@218)) ($generated@@95 $generated@@72 ($generated@@118 $generated@@218)))
 :pattern ( ($generated@@118 ($generated@@97 $generated@@218)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (= ($generated@@35 $generated@@220 ($generated@@95 $generated@@220 $generated@@219)) ($generated@@95 $generated@@41 ($generated@@35 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@35 $generated@@220 ($generated@@95 $generated@@220 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! ($generated@@28 $generated@@14 $generated@@222 $generated $generated@@221)
 :pattern ( ($generated@@28 $generated@@14 $generated@@222 $generated $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@33 ($generated@@34 $generated $generated@@225 ($generated@@87 $generated@@224)) $generated@@223) false)
 :pattern ( ($generated@@33 ($generated@@34 $generated $generated@@225 ($generated@@87 $generated@@224)) $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@71 $generated@@29 $generated@@227 ($generated@@79 $generated@@226))  (and ($generated@@71 $generated@@29 $generated@@227 ($generated@@30 $generated@@226)) ($generated@@110 ($generated@@34 $generated@@226 $generated@@109 $generated@@227) $generated@@91)))
 :pattern ( ($generated@@71 $generated@@29 $generated@@227 ($generated@@79 $generated@@226)))
)))
(assert (forall (($generated@@228 T@U) ) (! ($generated@@71 $generated@@14 $generated@@228 $generated)
 :pattern ( ($generated@@71 $generated@@14 $generated@@228 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@236  (and (=> (= (ControlFlow 0 2) (- 0 4)) (= $generated@@229 ($generated@@97 40))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= $generated@@230 ($generated@@97 30))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@19 ($generated@@38 $generated@@14 ($generated@@101 $generated $generated@@231 $generated@@232))) ($generated@@97 92)))))))
(let (($generated@@237  (=> (and (not (and (= $generated@@229 ($generated@@97 40)) (= $generated@@230 ($generated@@97 30)))) (= (ControlFlow 0 6) 2)) $generated@@236)))
(let (($generated@@238  (=> (and (and (= $generated@@229 ($generated@@97 40)) (= $generated@@230 ($generated@@97 30))) (= (ControlFlow 0 5) 2)) $generated@@236)))
(let (($generated@@239  (=> (or (not (= $generated@@229 ($generated@@97 40))) (not true)) (and (=> (= (ControlFlow 0 8) 5) $generated@@238) (=> (= (ControlFlow 0 8) 6) $generated@@237)))))
(let (($generated@@240  (=> (= $generated@@229 ($generated@@97 40)) (and (=> (= (ControlFlow 0 7) 5) $generated@@238) (=> (= (ControlFlow 0 7) 6) $generated@@237)))))
(let (($generated@@241  (=> (= $generated@@233 ($generated@@157 $generated@@37 $generated@@231 $generated@@1 false)) (=> (and (= $generated@@229 ($generated@@76 ($generated@@95 $generated@@72 $generated@@94))) (= $generated@@230 $generated@@115)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or (not (= 0 $generated@@68)) (not true))) (=> (or (not (= 0 $generated@@68)) (not true)) (=> (= $generated@@232 ($generated@@87 ($generated@@95 $generated@@72 $generated@@94))) (and (=> (= (ControlFlow 0 9) 7) $generated@@240) (=> (= (ControlFlow 0 9) 8) $generated@@239)))))))))
(let (($generated@@242  (=> (and ($generated@@31 $generated@@231) ($generated@@234 $generated@@231)) (=> (and (and (and ($generated@@71 $generated@@29 $generated@@235 ($generated@@83 $generated)) ($generated@@28 $generated@@29 $generated@@235 ($generated@@83 $generated) $generated@@231)) true) (and (= 1 $generated@@68) (= (ControlFlow 0 11) 9))) $generated@@241))))
$generated@@242))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
