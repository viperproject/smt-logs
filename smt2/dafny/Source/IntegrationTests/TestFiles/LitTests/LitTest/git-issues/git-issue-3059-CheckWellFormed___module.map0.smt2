(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@101 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@31 $generated@@32) ($generated@@27 $generated@@29 $generated@@30))  (and ($generated@@28 $generated@@31 $generated@@29) ($generated@@28 $generated@@32 $generated@@30)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@31 $generated@@32) ($generated@@27 $generated@@29 $generated@@30)))
)))
(assert (forall (($generated@@34 Int) ) (! (= ($generated@@33 $generated@@34) $generated@@34)
 :pattern ( ($generated@@33 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@35 $generated@@37 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 ($generated@@38 $generated@@41 $generated@@40)) $generated@@40)
 :pattern ( ($generated@@38 $generated@@41 $generated@@40))
)))
(assert (= ($generated@@7 $generated@@42) 4))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@24 $generated@@42 $generated@@45 ($generated@@43 $generated@@46)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@44 $generated@@45 $generated@@47) ($generated@@28 $generated@@47 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@47))
)))
 :pattern ( ($generated@@24 $generated@@42 $generated@@45 ($generated@@43 $generated@@46)))
)))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@28 $generated@@48 $generated) (and (= ($generated@@39 $generated@@9 ($generated@@38 $generated@@9 $generated@@48)) $generated@@48) ($generated@@24 $generated@@9 ($generated@@38 $generated@@9 $generated@@48) $generated)))
 :pattern ( ($generated@@28 $generated@@48 $generated))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@28 ($generated@@39 $generated@@51 $generated@@49) $generated@@50) ($generated@@24 $generated@@51 $generated@@49 $generated@@50))
 :pattern ( ($generated@@28 ($generated@@39 $generated@@51 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@53 ($generated@@52 $generated@@54 $generated@@55)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@56 ($generated@@52 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@52 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@23 ($generated@@52 $generated@@59 $generated@@60)) $generated@@2)
 :pattern ( ($generated@@52 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@61 ($generated@@26 $generated@@62 $generated@@63)) $generated@@4)
 :pattern ( ($generated@@26 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@64 ($generated@@27 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@27 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@67 ($generated@@27 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@27 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@70 ($generated@@26 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@26 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@73 ($generated@@26 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@26 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 ($generated@@43 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@43 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@23 ($generated@@43 $generated@@78)) $generated@@1)
 :pattern ( ($generated@@43 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@38 $generated@@80 ($generated@@39 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@39 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (< ($generated@@81 $generated@@83) ($generated@@82 ($generated@@26 $generated@@83 $generated@@84)))
 :pattern ( ($generated@@26 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (< ($generated@@81 $generated@@86) ($generated@@82 ($generated@@26 $generated@@85 $generated@@86)))
 :pattern ( ($generated@@26 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (not ($generated@@44 ($generated@@87 $generated@@88) $generated@@89))
 :pattern ( ($generated@@44 ($generated@@87 $generated@@88) $generated@@89))
)))
(assert (= ($generated@@7 $generated@@90) 5))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@28 $generated@@91 ($generated@@52 $generated@@92 $generated@@93)) (and (= ($generated@@39 $generated@@90 ($generated@@38 $generated@@90 $generated@@91)) $generated@@91) ($generated@@24 $generated@@90 ($generated@@38 $generated@@90 $generated@@91) ($generated@@52 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@28 $generated@@91 ($generated@@52 $generated@@92 $generated@@93)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@28 $generated@@96 ($generated@@27 $generated@@94 $generated@@95)) (and (= ($generated@@39 $generated@@25 ($generated@@38 $generated@@25 $generated@@96)) $generated@@96) ($generated@@24 $generated@@25 ($generated@@38 $generated@@25 $generated@@96) ($generated@@27 $generated@@94 $generated@@95))))
 :pattern ( ($generated@@28 $generated@@96 ($generated@@27 $generated@@94 $generated@@95)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@97 $generated@@108 $generated@@109 $generated@@110 ($generated@@104 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@113 $generated@@114) $generated@@111)
 :weight 0
)) (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@97 $generated@@115 $generated@@116 $generated@@117 ($generated@@104 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@97 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@97 $generated@@124 $generated@@125 $generated@@126 ($generated@@104 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)))) (= ($generated@@7 $generated@@98) 6)) (= ($generated@@7 $generated@@99) 7)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@101 $generated@@133 $generated@@134 ($generated@@105 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@137) $generated@@135)
 :weight 0
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@101 $generated@@138 $generated@@139 ($generated@@105 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@101 $generated@@138 $generated@@139 $generated@@141 $generated@@143)))
 :weight 0
))) (= ($generated@@7 $generated@@102) 8)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (= ($generated@@7 ($generated@@103 $generated@@144 $generated@@145)) 9))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@103 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@103 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@12 ($generated@@97 $generated@@98 $generated@@99 $generated@@8 ($generated@@100 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@101 $generated@@99 $generated@@102 ($generated@@101 $generated@@98 ($generated@@103 $generated@@99 $generated@@102) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@97 $generated@@98 $generated@@99 $generated@@8 ($generated@@100 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (and (= ($generated@@23 ($generated@@27 $generated@@157 $generated@@158)) $generated@@5) (= ($generated@@156 ($generated@@27 $generated@@157 $generated@@158)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (!  (or (= $generated@@159 $generated@@88) (exists (($generated@@160 T@U) ) ($generated@@44 ($generated@@87 $generated@@159) $generated@@160)))
 :pattern ( ($generated@@87 $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ) (!  (or (= $generated@@162 $generated@@88) (exists (($generated@@163 T@U) ) ($generated@@44 ($generated@@161 $generated@@162) $generated@@163)))
 :pattern ( ($generated@@161 $generated@@162))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@44 ($generated@@164 $generated@@166) $generated@@167)  (and ($generated@@44 ($generated@@87 $generated@@166) ($generated@@70 ($generated@@38 $generated@@25 $generated@@167))) (= ($generated@@101 $generated@@102 $generated@@102 ($generated@@165 $generated@@166) ($generated@@70 ($generated@@38 $generated@@25 $generated@@167))) ($generated@@73 ($generated@@38 $generated@@25 $generated@@167)))))
 :pattern ( ($generated@@44 ($generated@@164 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@44 ($generated@@161 $generated@@168) $generated@@169) (exists (($generated@@170 T@U) ) (!  (and ($generated@@44 ($generated@@87 $generated@@168) $generated@@170) (= $generated@@169 ($generated@@101 $generated@@102 $generated@@102 ($generated@@165 $generated@@168) $generated@@170)))
 :pattern ( ($generated@@44 ($generated@@87 $generated@@168) $generated@@170))
 :pattern ( ($generated@@101 $generated@@102 $generated@@102 ($generated@@165 $generated@@168) $generated@@170))
)))
 :pattern ( ($generated@@44 ($generated@@161 $generated@@168) $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@81 ($generated@@39 $generated@@25 $generated@@171)) ($generated@@82 $generated@@171))
 :pattern ( ($generated@@81 ($generated@@39 $generated@@25 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@28 $generated@@172 ($generated@@43 $generated@@173)) (and (= ($generated@@39 $generated@@42 ($generated@@38 $generated@@42 $generated@@172)) $generated@@172) ($generated@@24 $generated@@42 ($generated@@38 $generated@@42 $generated@@172) ($generated@@43 $generated@@173))))
 :pattern ( ($generated@@28 $generated@@172 ($generated@@43 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@24 $generated@@90 $generated@@174 ($generated@@52 $generated@@175 $generated@@176)) (forall (($generated@@177 T@U) ) (!  (=> ($generated@@44 ($generated@@87 $generated@@174) $generated@@177) (and ($generated@@28 ($generated@@101 $generated@@102 $generated@@102 ($generated@@165 $generated@@174) $generated@@177) $generated@@176) ($generated@@28 $generated@@177 $generated@@175)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@102 ($generated@@165 $generated@@174) $generated@@177))
 :pattern ( ($generated@@44 ($generated@@87 $generated@@174) $generated@@177))
)))
 :pattern ( ($generated@@24 $generated@@90 $generated@@174 ($generated@@52 $generated@@175 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@26 ($generated@@35 $generated@@102 $generated@@178) ($generated@@35 $generated@@102 $generated@@179)) ($generated@@35 $generated@@25 ($generated@@26 $generated@@178 $generated@@179)))
 :pattern ( ($generated@@26 ($generated@@35 $generated@@102 $generated@@178) ($generated@@35 $generated@@102 $generated@@179)))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@39 $generated@@9 ($generated@@13 ($generated@@33 $generated@@180))) ($generated@@35 $generated@@102 ($generated@@39 $generated@@9 ($generated@@13 $generated@@180))))
 :pattern ( ($generated@@39 $generated@@9 ($generated@@13 ($generated@@33 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@39 $generated@@182 ($generated@@35 $generated@@182 $generated@@181)) ($generated@@35 $generated@@102 ($generated@@39 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@39 $generated@@182 ($generated@@35 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ) (!  (or (= $generated@@183 $generated@@88) (exists (($generated@@184 T@U) ($generated@@185 T@U) ) ($generated@@44 ($generated@@164 $generated@@183) ($generated@@39 $generated@@25 ($generated@@26 $generated@@184 $generated@@185)))))
 :pattern ( ($generated@@164 $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@24 $generated@@90 $generated@@186 ($generated@@52 $generated@@187 $generated@@188)) (and (and ($generated@@24 $generated@@42 ($generated@@87 $generated@@186) ($generated@@43 $generated@@187)) ($generated@@24 $generated@@42 ($generated@@161 $generated@@186) ($generated@@43 $generated@@188))) ($generated@@24 $generated@@42 ($generated@@164 $generated@@186) ($generated@@43 ($generated@@27 $generated@@187 $generated@@188)))))
 :pattern ( ($generated@@24 $generated@@90 $generated@@186 ($generated@@52 $generated@@187 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ) (! ($generated@@24 $generated@@9 $generated@@189 $generated)
 :pattern ( ($generated@@24 $generated@@9 $generated@@189 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@198 true))
(let (($generated@@199  (=> (and (=> ($generated@@44 ($generated@@87 $generated@@190) ($generated@@39 $generated@@9 ($generated@@13 $generated@@191))) (= ($generated@@14 ($generated@@38 $generated@@9 ($generated@@101 $generated@@102 $generated@@102 ($generated@@165 $generated@@190) ($generated@@39 $generated@@9 ($generated@@13 $generated@@191))))) ($generated@@33 0))) (= (ControlFlow 0 6) 3)) $generated@@198)))
(let (($generated@@200  (=> ($generated@@44 ($generated@@87 $generated@@190) ($generated@@39 $generated@@9 ($generated@@13 $generated@@191))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@44 ($generated@@87 $generated@@190) ($generated@@39 $generated@@9 ($generated@@13 $generated@@191)))) (=> ($generated@@44 ($generated@@87 $generated@@190) ($generated@@39 $generated@@9 ($generated@@13 $generated@@191))) (=> (and (= ($generated@@14 ($generated@@38 $generated@@9 ($generated@@101 $generated@@102 $generated@@102 ($generated@@165 $generated@@190) ($generated@@39 $generated@@9 ($generated@@13 $generated@@191))))) ($generated@@33 0)) (= (ControlFlow 0 4) 3)) $generated@@198))))))
(let (($generated@@201  (=> ($generated@@24 $generated@@90 $generated@@190 ($generated@@52 $generated $generated)) (and (=> (= (ControlFlow 0 7) 4) $generated@@200) (=> (= (ControlFlow 0 7) 6) $generated@@199)))))
(let (($generated@@202  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@203 Int) )  (=> ($generated@@44 ($generated@@87 $generated@@88) ($generated@@39 $generated@@9 ($generated@@13 $generated@@203))) (= ($generated@@14 ($generated@@38 $generated@@9 ($generated@@101 $generated@@102 $generated@@102 ($generated@@165 ($generated@@35 $generated@@90 $generated@@88)) ($generated@@39 $generated@@9 ($generated@@13 $generated@@203))))) ($generated@@33 0)))))))
(let (($generated@@204  (=> (= $generated@@192 ($generated@@100 $generated@@193 $generated@@194 $generated@@3 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@201) (=> (= (ControlFlow 0 8) 2) $generated@@202)))))
(let (($generated@@205  (=> (and (and ($generated@@195 $generated@@194) ($generated@@196 $generated@@194)) (and (= 0 $generated@@197) (= (ControlFlow 0 9) 8))) $generated@@204)))
$generated@@205))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
