(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! ($generated@@27 $generated@@11 $generated@@29 $generated@@28 $generated@@30)
 :pattern ( ($generated@@27 $generated@@11 $generated@@29 $generated@@28 $generated@@30))
)))
(assert (= ($generated@@9 $generated@@32) 3))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 $generated@@33)  (or (= $generated@@36 $generated@@34) (= ($generated@@35 $generated@@36) $generated@@33)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 $generated@@33))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@27 $generated@@32 $generated@@38 $generated@@37 $generated@@39) ($generated@@27 $generated@@32 $generated@@38 $generated@@33 $generated@@39))
 :pattern ( ($generated@@27 $generated@@32 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@27 $generated@@32 $generated@@38 $generated@@33 $generated@@39))
)))
(assert (= ($generated@@25 $generated@@40) 0))
(assert (= ($generated@@41 $generated@@4 $generated@@7) $generated@@40))
(assert  (not ($generated@@42 $generated@@40)))
(assert (= ($generated@@25 $generated@@43) 0))
(assert (= ($generated@@41 $generated@@4 $generated@@8) $generated@@43))
(assert  (not ($generated@@42 $generated@@43)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@9 $generated@@46) 4)) (= ($generated@@9 $generated@@47) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@9 ($generated@@48 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@27 $generated@@32 $generated@@69 $generated@@33 $generated@@70)  (or (= $generated@@69 $generated@@34) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@69) $generated)))))
 :pattern ( ($generated@@27 $generated@@32 $generated@@69 $generated@@33 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@72 $generated@@74) $generated))) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@73 $generated@@74) $generated))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@44 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@44 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@31 $generated@@11 $generated@@83 $generated@@28) (<= ($generated@@75 0) ($generated@@16 $generated@@83)))
 :pattern ( ($generated@@31 $generated@@11 $generated@@83 $generated@@28))
)))
(assert ($generated@@42 $generated))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (!  (=> ($generated@@71 $generated@@84 $generated@@85) (=> ($generated@@27 $generated@@88 $generated@@86 $generated@@87 $generated@@84) ($generated@@27 $generated@@88 $generated@@86 $generated@@87 $generated@@85)))
 :pattern ( ($generated@@71 $generated@@84 $generated@@85) ($generated@@27 $generated@@88 $generated@@86 $generated@@87 $generated@@84))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and ($generated@@89 $generated@@90) (and (or (not (= $generated@@91 $generated@@34)) (not true)) (= ($generated@@35 $generated@@91) $generated@@33))) ($generated@@31 $generated@@11 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@90 $generated@@91) $generated@@40)) $generated@@28))
 :pattern ( ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@90 $generated@@91) $generated@@40)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@89 $generated@@92) (and (or (not (= $generated@@93 $generated@@34)) (not true)) (= ($generated@@35 $generated@@93) $generated@@33))) ($generated@@31 $generated@@32 ($generated@@44 $generated@@32 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@92 $generated@@93) $generated@@43)) $generated@@33))
 :pattern ( ($generated@@44 $generated@@32 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@92 $generated@@93) $generated@@43)))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@94 $generated@@37)  (and ($generated@@31 $generated@@32 $generated@@94 $generated@@33) (or (not (= $generated@@94 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@94 $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@94 $generated@@33))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and (and ($generated@@89 $generated@@95) (and (or (not (= $generated@@96 $generated@@34)) (not true)) (= ($generated@@35 $generated@@96) $generated@@33))) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@95 $generated@@96) $generated)))) ($generated@@27 $generated@@11 ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@95 $generated@@96) $generated@@40)) $generated@@28 $generated@@95))
 :pattern ( ($generated@@44 $generated@@11 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@95 $generated@@96) $generated@@40)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and (and ($generated@@89 $generated@@97) (and (or (not (= $generated@@98 $generated@@34)) (not true)) (= ($generated@@35 $generated@@98) $generated@@33))) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@97 $generated@@98) $generated)))) ($generated@@27 $generated@@32 ($generated@@44 $generated@@32 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@97 $generated@@98) $generated@@43)) $generated@@33 $generated@@97))
 :pattern ( ($generated@@44 $generated@@32 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@97 $generated@@98) $generated@@43)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or (not (= $generated@@99 $generated@@101)) (not true)) (=> (and ($generated@@71 $generated@@99 $generated@@100) ($generated@@71 $generated@@100 $generated@@101)) ($generated@@71 $generated@@99 $generated@@101)))
 :pattern ( ($generated@@71 $generated@@99 $generated@@100) ($generated@@71 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (and (= ($generated@@102 ($generated@@41 $generated@@103 $generated@@104)) $generated@@103) (= ($generated@@26 ($generated@@41 $generated@@103 $generated@@104)) $generated@@104))
 :pattern ( ($generated@@41 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@44 $generated@@106 ($generated@@80 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@80 $generated@@106 $generated@@105))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Bool) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@14 ($generated@@107 $generated@@32 $generated@@46 $generated@@10 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@136 $generated@@139) $generated@@137)))) $generated@@138))
 :pattern ( ($generated@@107 $generated@@32 $generated@@46 $generated@@10 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@89 ($generated@@49 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@141 $generated@@142 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@141 $generated@@142) $generated@@143 $generated@@144))) ($generated@@71 $generated@@141 ($generated@@49 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@141 $generated@@142 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@141 $generated@@142) $generated@@143 $generated@@144))))
 :pattern ( ($generated@@49 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@141 $generated@@142 ($generated@@49 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@141 $generated@@142) $generated@@143 $generated@@144)))
)))
(assert (= ($generated@@145 $generated@@28) $generated@@1))
(assert (= ($generated@@146 $generated@@28) $generated@@5))
(assert (= ($generated@@145 $generated@@37) $generated@@2))
(assert (= ($generated@@146 $generated@@37) $generated@@6))
(assert (= ($generated@@145 $generated@@33) $generated@@3))
(assert (= ($generated@@146 $generated@@33) $generated@@6))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@80 $generated@@11 ($generated@@15 ($generated@@75 $generated@@147))) ($generated@@77 $generated@@47 ($generated@@80 $generated@@11 ($generated@@15 $generated@@147))))
 :pattern ( ($generated@@80 $generated@@11 ($generated@@15 ($generated@@75 $generated@@147))))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@80 $generated@@149 ($generated@@77 $generated@@149 $generated@@148)) ($generated@@77 $generated@@47 ($generated@@80 $generated@@149 $generated@@148)))
 :pattern ( ($generated@@80 $generated@@149 ($generated@@77 $generated@@149 $generated@@148)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@161 true))
(let (($generated@@162  (=> (or (not (= $generated@@150 ($generated@@75 0))) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@31 $generated@@11 ($generated@@15 (- $generated@@150 1)) $generated@@28)) (=> ($generated@@31 $generated@@11 ($generated@@15 (- $generated@@150 1)) $generated@@28) (=> (= $generated@@151 (- $generated@@150 1)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (<= 0 $generated@@150) (= $generated@@151 $generated@@150))) (=> (or (<= 0 $generated@@150) (= $generated@@151 $generated@@150)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< $generated@@151 $generated@@150)) (=> (< $generated@@151 $generated@@150) (=> (and (and (or (not (= $generated@@152 $generated@@34)) (not true)) (and ($generated@@31 $generated@@32 $generated@@152 $generated@@37) ($generated@@27 $generated@@32 $generated@@152 $generated@@37 $generated@@153))) (and ($generated@@89 $generated@@154) ($generated@@155 $generated@@154))) (=> (and (and (and (or (not (= $generated@@156 $generated@@34)) (not true)) (and ($generated@@31 $generated@@32 $generated@@156 $generated@@37) ($generated@@27 $generated@@32 $generated@@156 $generated@@37 $generated@@154))) (and (not ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@153 $generated@@156) $generated)))) (forall (($generated@@163 T@U) ) (!  (=> (and (or (not (= $generated@@163 $generated@@34)) (not true)) ($generated@@14 ($generated@@44 $generated@@10 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@153 $generated@@163) $generated)))) (= ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@154 $generated@@163) ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@153 $generated@@163)))
 :pattern ( ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@154 $generated@@163))
)))) (and (and ($generated@@71 $generated@@153 $generated@@154) (= $generated@@157 $generated@@154)) (and (= $generated@@158 $generated@@156) (= (ControlFlow 0 3) 1)))) $generated@@161))))))))))))
(let (($generated@@164  (=> (and (and (= $generated@@150 ($generated@@75 0)) (= $generated@@157 $generated@@153)) (and (= $generated@@158 $generated@@34) (= (ControlFlow 0 2) 1))) $generated@@161)))
(let (($generated@@165  (=> (= $generated@@159 ($generated@@108 $generated@@34 $generated@@153 $generated false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@164) (=> (= (ControlFlow 0 7) 3) $generated@@162)))))
(let (($generated@@166  (=> (and (and (and ($generated@@89 $generated@@153) ($generated@@155 $generated@@153)) (<= ($generated@@75 0) $generated@@150)) (and (= 1 $generated@@160) (= (ControlFlow 0 8) 7))) $generated@@165)))
$generated@@166))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
