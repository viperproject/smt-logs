(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 (T@T) Int)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (Bool) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (Int) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (Real) T@U)
(declare-fun $generated@@28 (T@U) Real)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T T@T) T@T)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@92 () T@U)
(declare-fun $generated@@93 () T@U)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 () T@U)
(declare-fun $generated@@97 () T@U)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@117 (T@U) Bool)
(declare-fun $generated@@120 (T@T T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@162 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@19 $generated@@20) 0) (= ($generated@@19 $generated@@21) 1)) (= ($generated@@19 $generated@@22) 2)) (forall (($generated@@29 Bool) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 Int) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 Real) ) (! (= ($generated@@28 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 T@U) ) (! (= ($generated@@27 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18)
)
(assert  (and (= ($generated@@19 $generated@@39) 3) (= ($generated@@19 $generated@@41) 4)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@37 $generated@@52 $generated@@53) (and (< 3 $generated@@35) (and ($generated@@38 $generated@@39 $generated@@52 $generated@@40) ($generated@@38 $generated@@41 $generated@@53 $generated@@42)))) (= ($generated@@36 $generated@@52 $generated@@53) (let (($generated@@54 ($generated@@43 $generated@@52)))
(ite ($generated@@44 $generated@@53) ($generated@@45 $generated@@54) (ite ($generated@@46 $generated@@53) ($generated@@47 $generated@@54) (ite ($generated@@48 $generated@@53) ($generated@@49 $generated@@54) (ite ($generated@@50 $generated@@53) ($generated@@51 $generated@@54)  (or ($generated@@49 $generated@@54) ($generated@@51 $generated@@54)))))))))
 :pattern ( ($generated@@36 $generated@@52 $generated@@53))
))))
(assert (= ($generated@@55 $generated) $generated@@0))
(assert  (=> (< 2 $generated@@35) (forall (($generated@@60 T@U) ) (!  (=> (and (or (not (= $generated@@60 $generated@@56)) (not true)) (= ($generated@@57 $generated@@60) $generated@@58)) ($generated@@38 $generated@@41 ($generated@@43 $generated@@60) $generated@@59))
 :pattern ( ($generated@@43 $generated@@60))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@62 $generated@@71 $generated@@72 ($generated@@68 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@75) $generated@@73)
 :weight 0
)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (or (= $generated@@80 $generated@@81) (= ($generated@@62 $generated@@76 $generated@@77 ($generated@@68 $generated@@76 $generated@@77 $generated@@79 $generated@@80 $generated@@78) $generated@@81) ($generated@@62 $generated@@76 $generated@@77 $generated@@79 $generated@@81)))
 :weight 0
))) (= ($generated@@19 $generated@@63) 5)) (= ($generated@@19 $generated@@64) 6)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (= ($generated@@19 ($generated@@65 $generated@@82 $generated@@83)) 7))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@69 ($generated@@65 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@65 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@70 ($generated@@65 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@65 $generated@@86 $generated@@87))
))))
(assert  (=> (< 2 $generated@@35) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and ($generated@@66 $generated@@88) (and (or (not (= $generated@@89 $generated@@56)) (not true)) (= ($generated@@57 $generated@@89) $generated@@58))) ($generated@@24 ($generated@@61 $generated@@20 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@39 ($generated@@65 $generated@@63 $generated@@64) $generated@@88 $generated@@89) $generated@@1)))) ($generated@@67 $generated@@41 ($generated@@43 $generated@@89) $generated@@59 $generated@@88))
 :pattern ( ($generated@@43 $generated@@89) ($generated@@61 $generated@@20 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@39 ($generated@@65 $generated@@63 $generated@@64) $generated@@88 $generated@@89) $generated@@1)))
))))
(assert (= ($generated@@90 $generated@@91) $generated@@6))
(assert (= ($generated@@90 $generated@@92) $generated@@7))
(assert (= ($generated@@90 $generated@@93) $generated@@8))
(assert (= ($generated@@90 $generated@@94) $generated@@9))
(assert (= ($generated@@90 $generated@@95) $generated@@10))
(assert (= ($generated@@90 $generated@@96) $generated@@11))
(assert (= ($generated@@90 $generated@@97) $generated@@15))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@98 $generated@@58)  (or (= $generated@@98 $generated@@56) (= ($generated@@57 $generated@@98) $generated@@58)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@98 $generated@@58))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@67 $generated@@39 $generated@@99 $generated@@40 $generated@@100) ($generated@@67 $generated@@39 $generated@@99 $generated@@58 $generated@@100))
 :pattern ( ($generated@@67 $generated@@39 $generated@@99 $generated@@40 $generated@@100))
 :pattern ( ($generated@@67 $generated@@39 $generated@@99 $generated@@58 $generated@@100))
)))
(assert ($generated@@38 $generated@@41 $generated@@91 $generated@@42))
(assert ($generated@@38 $generated@@41 $generated@@92 $generated@@42))
(assert ($generated@@38 $generated@@41 $generated@@93 $generated@@42))
(assert ($generated@@38 $generated@@41 $generated@@94 $generated@@42))
(assert ($generated@@38 $generated@@41 $generated@@95 $generated@@42))
(assert ($generated@@38 $generated@@41 $generated@@96 $generated@@59))
(assert ($generated@@38 $generated@@41 $generated@@97 $generated@@59))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@66 $generated@@101) ($generated@@67 $generated@@41 $generated@@96 $generated@@59 $generated@@101))
 :pattern ( ($generated@@67 $generated@@41 $generated@@96 $generated@@59 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@66 $generated@@102) ($generated@@67 $generated@@41 $generated@@97 $generated@@59 $generated@@102))
 :pattern ( ($generated@@67 $generated@@41 $generated@@97 $generated@@59 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@67 $generated@@39 $generated@@103 $generated@@58 $generated@@104)  (or (= $generated@@103 $generated@@56) ($generated@@24 ($generated@@61 $generated@@20 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@39 ($generated@@65 $generated@@63 $generated@@64) $generated@@104 $generated@@103) $generated@@1)))))
 :pattern ( ($generated@@67 $generated@@39 $generated@@103 $generated@@58 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 $generated@@106) $generated@@106)
 :pattern ( ($generated@@105 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@44 $generated@@108) (= ($generated@@90 $generated@@108) $generated@@6))
 :pattern ( ($generated@@44 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@46 $generated@@109) (= ($generated@@90 $generated@@109) $generated@@7))
 :pattern ( ($generated@@46 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@48 $generated@@110) (= ($generated@@90 $generated@@110) $generated@@8))
 :pattern ( ($generated@@48 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@50 $generated@@111) (= ($generated@@90 $generated@@111) $generated@@9))
 :pattern ( ($generated@@50 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 $generated@@113) (= ($generated@@90 $generated@@113) $generated@@10))
 :pattern ( ($generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@45 $generated@@114) (= ($generated@@90 $generated@@114) $generated@@11))
 :pattern ( ($generated@@45 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@49 $generated@@115) (= ($generated@@90 $generated@@115) $generated@@12))
 :pattern ( ($generated@@49 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@51 $generated@@116) (= ($generated@@90 $generated@@116) $generated@@13))
 :pattern ( ($generated@@51 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 $generated@@118) (= ($generated@@90 $generated@@118) $generated@@14))
 :pattern ( ($generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@47 $generated@@119) (= ($generated@@90 $generated@@119) $generated@@15))
 :pattern ( ($generated@@47 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@120 $generated@@122 ($generated@@61 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@61 $generated@@122 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@44 $generated@@123) (= $generated@@123 $generated@@91))
 :pattern ( ($generated@@44 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@46 $generated@@124) (= $generated@@124 $generated@@92))
 :pattern ( ($generated@@46 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@48 $generated@@125) (= $generated@@125 $generated@@93))
 :pattern ( ($generated@@48 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@50 $generated@@126) (= $generated@@126 $generated@@94))
 :pattern ( ($generated@@50 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@112 $generated@@127) (= $generated@@127 $generated@@95))
 :pattern ( ($generated@@112 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@45 $generated@@128) (= $generated@@128 $generated@@96))
 :pattern ( ($generated@@45 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@47 $generated@@129) (= $generated@@129 $generated@@97))
 :pattern ( ($generated@@47 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@49 $generated@@131) (exists (($generated@@132 T@U) ) (= $generated@@131 ($generated@@130 $generated@@132))))
 :pattern ( ($generated@@49 $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@51 $generated@@134) (exists (($generated@@135 T@U) ) (= $generated@@134 ($generated@@133 $generated@@135))))
 :pattern ( ($generated@@51 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@117 $generated@@137) (exists (($generated@@138 T@U) ) (= $generated@@137 ($generated@@136 $generated@@138))))
 :pattern ( ($generated@@117 $generated@@137))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or ($generated@@37 ($generated@@105 $generated@@39 $generated@@139) ($generated@@105 $generated@@41 $generated@@140)) (and (< 3 $generated@@35) (and ($generated@@38 $generated@@39 $generated@@139 $generated@@40) ($generated@@38 $generated@@41 $generated@@140 $generated@@42)))) (= ($generated@@36 ($generated@@105 $generated@@39 $generated@@139) ($generated@@105 $generated@@41 $generated@@140)) (let (($generated@@141 ($generated@@43 ($generated@@105 $generated@@39 $generated@@139))))
(ite ($generated@@44 ($generated@@105 $generated@@41 $generated@@140)) ($generated@@45 $generated@@141) (ite ($generated@@46 ($generated@@105 $generated@@41 $generated@@140)) ($generated@@47 $generated@@141) (ite ($generated@@48 ($generated@@105 $generated@@41 $generated@@140)) ($generated@@49 $generated@@141) (ite ($generated@@50 ($generated@@105 $generated@@41 $generated@@140)) ($generated@@51 $generated@@141)  (or ($generated@@49 $generated@@141) ($generated@@51 $generated@@141)))))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@105 $generated@@39 $generated@@139) ($generated@@105 $generated@@41 $generated@@140)))
))))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@38 $generated@@41 ($generated@@130 $generated@@142) $generated@@59) ($generated@@38 $generated@@39 $generated@@142 $generated@@40))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@130 $generated@@142) $generated@@59))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@38 $generated@@41 ($generated@@133 $generated@@143) $generated@@59) ($generated@@38 $generated@@39 $generated@@143 $generated@@40))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@133 $generated@@143) $generated@@59))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@38 $generated@@41 ($generated@@136 $generated@@144) $generated@@59) ($generated@@38 $generated@@39 $generated@@144 $generated@@40))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@136 $generated@@144) $generated@@59))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@145 $generated@@40)  (and ($generated@@38 $generated@@39 $generated@@145 $generated@@58) (or (not (= $generated@@145 $generated@@56)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@145 $generated@@40))
 :pattern ( ($generated@@38 $generated@@39 $generated@@145 $generated@@58))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@66 $generated@@147) (= ($generated@@67 $generated@@41 ($generated@@130 $generated@@146) $generated@@59 $generated@@147) ($generated@@67 $generated@@39 $generated@@146 $generated@@40 $generated@@147)))
 :pattern ( ($generated@@67 $generated@@41 ($generated@@130 $generated@@146) $generated@@59 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@66 $generated@@149) (= ($generated@@67 $generated@@41 ($generated@@133 $generated@@148) $generated@@59 $generated@@149) ($generated@@67 $generated@@39 $generated@@148 $generated@@40 $generated@@149)))
 :pattern ( ($generated@@67 $generated@@41 ($generated@@133 $generated@@148) $generated@@59 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@66 $generated@@151) (= ($generated@@67 $generated@@41 ($generated@@136 $generated@@150) $generated@@59 $generated@@151) ($generated@@67 $generated@@39 $generated@@150 $generated@@40 $generated@@151)))
 :pattern ( ($generated@@67 $generated@@41 ($generated@@136 $generated@@150) $generated@@59 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@90 ($generated@@130 $generated@@152)) $generated@@12)
 :pattern ( ($generated@@130 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@130 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@130 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@90 ($generated@@133 $generated@@155)) $generated@@13)
 :pattern ( ($generated@@133 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@153 ($generated@@133 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@133 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@90 ($generated@@136 $generated@@157)) $generated@@14)
 :pattern ( ($generated@@136 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@136 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@136 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@61 $generated@@161 ($generated@@120 $generated@@161 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@120 $generated@@161 $generated@@160))
)))
(assert  (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@162 $generated@@165 $generated@@166 $generated@@167 ($generated@@164 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@170 $generated@@171) $generated@@168)
 :weight 0
)) (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@162 $generated@@172 $generated@@173 $generated@@174 ($generated@@164 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@162 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@162 $generated@@181 $generated@@182 $generated@@183 ($generated@@164 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@162 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 Bool) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@24 ($generated@@162 $generated@@39 $generated@@63 $generated@@20 ($generated@@163 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@194 $generated@@195))  (=> (and (or (not (= $generated@@194 $generated@@190)) (not true)) ($generated@@24 ($generated@@61 $generated@@20 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@39 ($generated@@65 $generated@@63 $generated@@64) $generated@@191 $generated@@194) $generated@@192)))) $generated@@193))
 :pattern ( ($generated@@162 $generated@@39 $generated@@63 $generated@@20 ($generated@@163 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@66 $generated@@197) ($generated@@38 $generated@@41 $generated@@196 $generated@@42)) ($generated@@67 $generated@@41 $generated@@196 $generated@@42 $generated@@197))
 :pattern ( ($generated@@67 $generated@@41 $generated@@196 $generated@@42 $generated@@197))
)))
(assert (= ($generated@@55 $generated@@42) $generated@@2))
(assert (= ($generated@@198 $generated@@42) $generated@@16))
(assert (= ($generated@@55 $generated@@40) $generated@@3))
(assert (= ($generated@@198 $generated@@40) $generated@@17))
(assert (= ($generated@@55 $generated@@59) $generated@@4))
(assert (= ($generated@@198 $generated@@59) $generated@@18))
(assert (= ($generated@@55 $generated@@58) $generated@@5))
(assert (= ($generated@@198 $generated@@58) $generated@@17))
(assert (= $generated@@91 ($generated@@105 $generated@@41 $generated@@91)))
(assert (= $generated@@92 ($generated@@105 $generated@@41 $generated@@92)))
(assert (= $generated@@93 ($generated@@105 $generated@@41 $generated@@93)))
(assert (= $generated@@94 ($generated@@105 $generated@@41 $generated@@94)))
(assert (= $generated@@95 ($generated@@105 $generated@@41 $generated@@95)))
(assert (= $generated@@96 ($generated@@105 $generated@@41 $generated@@96)))
(assert (= $generated@@97 ($generated@@105 $generated@@41 $generated@@97)))
(assert (forall (($generated@@199 T@U) ) (!  (=> ($generated@@38 $generated@@41 $generated@@199 $generated@@42) (or (or (or (or ($generated@@44 $generated@@199) ($generated@@46 $generated@@199)) ($generated@@48 $generated@@199)) ($generated@@50 $generated@@199)) ($generated@@112 $generated@@199)))
 :pattern ( ($generated@@112 $generated@@199) ($generated@@38 $generated@@41 $generated@@199 $generated@@42))
 :pattern ( ($generated@@50 $generated@@199) ($generated@@38 $generated@@41 $generated@@199 $generated@@42))
 :pattern ( ($generated@@48 $generated@@199) ($generated@@38 $generated@@41 $generated@@199 $generated@@42))
 :pattern ( ($generated@@46 $generated@@199) ($generated@@38 $generated@@41 $generated@@199 $generated@@42))
 :pattern ( ($generated@@44 $generated@@199) ($generated@@38 $generated@@41 $generated@@199 $generated@@42))
)))
(assert (forall (($generated@@200 T@U) ) (!  (=> ($generated@@38 $generated@@41 $generated@@200 $generated@@59) (or (or (or (or ($generated@@45 $generated@@200) ($generated@@49 $generated@@200)) ($generated@@51 $generated@@200)) ($generated@@117 $generated@@200)) ($generated@@47 $generated@@200)))
 :pattern ( ($generated@@47 $generated@@200) ($generated@@38 $generated@@41 $generated@@200 $generated@@59))
 :pattern ( ($generated@@117 $generated@@200) ($generated@@38 $generated@@41 $generated@@200 $generated@@59))
 :pattern ( ($generated@@51 $generated@@200) ($generated@@38 $generated@@41 $generated@@200 $generated@@59))
 :pattern ( ($generated@@49 $generated@@200) ($generated@@38 $generated@@41 $generated@@200 $generated@@59))
 :pattern ( ($generated@@45 $generated@@200) ($generated@@38 $generated@@41 $generated@@200 $generated@@59))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@66 $generated@@202) (and ($generated@@49 $generated@@201) ($generated@@67 $generated@@41 $generated@@201 $generated@@59 $generated@@202))) ($generated@@67 $generated@@39 ($generated@@153 $generated@@201) $generated@@40 $generated@@202))
 :pattern ( ($generated@@67 $generated@@39 ($generated@@153 $generated@@201) $generated@@40 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@66 $generated@@204) (and ($generated@@51 $generated@@203) ($generated@@67 $generated@@41 $generated@@203 $generated@@59 $generated@@204))) ($generated@@67 $generated@@39 ($generated@@153 $generated@@203) $generated@@40 $generated@@204))
 :pattern ( ($generated@@67 $generated@@39 ($generated@@153 $generated@@203) $generated@@40 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@66 $generated@@206) (and ($generated@@117 $generated@@205) ($generated@@67 $generated@@41 $generated@@205 $generated@@59 $generated@@206))) ($generated@@67 $generated@@39 ($generated@@158 $generated@@205) $generated@@40 $generated@@206))
 :pattern ( ($generated@@67 $generated@@39 ($generated@@158 $generated@@205) $generated@@40 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ) (! (= ($generated@@130 ($generated@@105 $generated@@39 $generated@@207)) ($generated@@105 $generated@@41 ($generated@@130 $generated@@207)))
 :pattern ( ($generated@@130 ($generated@@105 $generated@@39 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@133 ($generated@@105 $generated@@39 $generated@@208)) ($generated@@105 $generated@@41 ($generated@@133 $generated@@208)))
 :pattern ( ($generated@@133 ($generated@@105 $generated@@39 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@136 ($generated@@105 $generated@@39 $generated@@209)) ($generated@@105 $generated@@41 ($generated@@136 $generated@@209)))
 :pattern ( ($generated@@136 ($generated@@105 $generated@@39 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@T) ) (! (= ($generated@@120 $generated@@211 ($generated@@105 $generated@@211 $generated@@210)) ($generated@@105 $generated@@64 ($generated@@120 $generated@@211 $generated@@210)))
 :pattern ( ($generated@@120 $generated@@211 ($generated@@105 $generated@@211 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@67 $generated@@20 $generated@@213 $generated $generated@@212)
 :pattern ( ($generated@@67 $generated@@20 $generated@@213 $generated $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! ($generated@@38 $generated@@20 $generated@@214 $generated)
 :pattern ( ($generated@@38 $generated@@20 $generated@@214 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@222 true))
(let (($generated@@223  (=> (and ($generated@@49 $generated@@215) (= (ControlFlow 0 9) 7)) $generated@@222)))
(let (($generated@@224  (=> (and (not ($generated@@49 $generated@@215)) (= (ControlFlow 0 8) 7)) $generated@@222)))
(let (($generated@@225  (=> (= $generated@@216 $generated@@95) (and (=> (= (ControlFlow 0 10) 8) $generated@@224) (=> (= (ControlFlow 0 10) 9) $generated@@223)))))
(let (($generated@@226 true))
(let (($generated@@227  (=> (or (not (= $generated@@216 $generated@@94)) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@225) (=> (= (ControlFlow 0 11) 6) $generated@@226)))))
(let (($generated@@228 true))
(let (($generated@@229  (=> (or (not (= $generated@@216 $generated@@93)) (not true)) (and (=> (= (ControlFlow 0 12) 5) $generated@@228) (=> (= (ControlFlow 0 12) 11) $generated@@227)))))
(let (($generated@@230 true))
(let (($generated@@231  (=> (or (not (= $generated@@216 $generated@@92)) (not true)) (and (=> (= (ControlFlow 0 13) 4) $generated@@230) (=> (= (ControlFlow 0 13) 12) $generated@@229)))))
(let (($generated@@232 true))
(let (($generated@@233  (=> (or (not (= $generated@@216 $generated@@91)) (not true)) (and (=> (= (ControlFlow 0 14) 3) $generated@@232) (=> (= (ControlFlow 0 14) 13) $generated@@231)))))
(let (($generated@@234 true))
(let (($generated@@235  (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (not (= $generated@@217 $generated@@56)) (not true))) (=> (or (not (= $generated@@217 $generated@@56)) (not true)) (=> (= $generated@@218 ($generated@@43 $generated@@217)) (=> (and ($generated@@38 $generated@@41 $generated@@218 $generated@@59) (= $generated@@215 $generated@@218)) (and (=> (= (ControlFlow 0 15) 2) $generated@@234) (=> (= (ControlFlow 0 15) 14) $generated@@233))))))))
(let (($generated@@236 true))
(let (($generated@@237  (=> (= $generated@@219 ($generated@@163 $generated@@56 $generated@@220 $generated@@1 false)) (and (=> (= (ControlFlow 0 17) 1) $generated@@236) (=> (= (ControlFlow 0 17) 15) $generated@@235)))))
(let (($generated@@238  (=> (and ($generated@@66 $generated@@220) ($generated@@221 $generated@@220)) (=> (and (and ($generated@@38 $generated@@39 $generated@@217 $generated@@40) ($generated@@38 $generated@@41 $generated@@216 $generated@@42)) (and (= 3 $generated@@35) (= (ControlFlow 0 18) 17))) $generated@@237))))
$generated@@238))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
