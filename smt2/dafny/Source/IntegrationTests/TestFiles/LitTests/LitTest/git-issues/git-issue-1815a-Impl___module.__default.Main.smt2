(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 (T@U Int) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (Int) Int)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Int)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Int)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert ($generated@@28 $generated@@29))
(assert (= ($generated@@11 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34)) ($generated@@30 $generated@@35))
 :pattern ( ($generated@@30 $generated@@35) ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34)))
)))
(assert (= ($generated@@11 $generated@@36) 4))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@31 $generated@@36 $generated@@39 $generated@@29)  (or (= $generated@@39 $generated@@37) (= ($generated@@38 $generated@@39) $generated@@29)))
 :pattern ( ($generated@@31 $generated@@36 $generated@@39 $generated@@29))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (and ($generated@@40 $generated@@43 $generated@@29 $generated@@44) ($generated@@41 $generated@@44)) ($generated@@40 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@40 $generated@@43 $generated@@29 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@45 $generated@@36 $generated@@47 $generated@@46 $generated@@48) ($generated@@45 $generated@@36 $generated@@47 $generated@@42 $generated@@48))
 :pattern ( ($generated@@45 $generated@@36 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@45 $generated@@36 $generated@@47 $generated@@42 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@45 $generated@@36 $generated@@50 $generated@@49 $generated@@51) ($generated@@45 $generated@@36 $generated@@50 $generated@@29 $generated@@51))
 :pattern ( ($generated@@45 $generated@@36 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@45 $generated@@36 $generated@@50 $generated@@29 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 Int) ) (! (= ($generated@@31 $generated@@32 ($generated@@52 $generated@@55 $generated@@56) ($generated@@33 $generated@@54))  (and ($generated@@53 $generated@@55 $generated@@54) ($generated@@31 $generated@@13 ($generated@@17 $generated@@56) $generated)))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@52 $generated@@55 $generated@@56) ($generated@@33 $generated@@54)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@11 $generated@@59) 5)) (= ($generated@@11 $generated@@60) 6)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@11 ($generated@@61 $generated@@76 $generated@@77)) 7))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@45 $generated@@36 $generated@@82 $generated@@42 $generated@@83)  (or (= $generated@@82 $generated@@37) ($generated@@16 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@83 $generated@@82) $generated@@1)))))
 :pattern ( ($generated@@45 $generated@@36 $generated@@82 $generated@@42 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@45 $generated@@36 $generated@@84 $generated@@29 $generated@@85)  (or (= $generated@@84 $generated@@37) ($generated@@16 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@85 $generated@@84) $generated@@1)))))
 :pattern ( ($generated@@45 $generated@@36 $generated@@84 $generated@@29 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@86 $generated@@87 $generated@@88) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@16 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@87 $generated@@89) $generated@@1))) ($generated@@16 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@88 $generated@@89) $generated@@1))))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@88 $generated@@89) $generated@@1))
)))
 :pattern ( ($generated@@86 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 Int) ) (! (= ($generated@@90 $generated@@91) $generated@@91)
 :pattern ( ($generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 $generated@@93) $generated@@93)
 :pattern ( ($generated@@92 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@30 $generated@@96) (= ($generated@@95 $generated@@96) $generated@@5))
 :pattern ( ($generated@@30 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 ($generated@@57 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@57 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@30 $generated@@100) (exists (($generated@@101 T@U) ($generated@@102 Int) ) (= $generated@@100 ($generated@@52 $generated@@101 $generated@@102))))
 :pattern ( ($generated@@30 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@40 ($generated@@97 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@45 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@40 ($generated@@97 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@86 $generated@@107 $generated@@108) (=> ($generated@@40 $generated@@109 $generated@@110 $generated@@107) ($generated@@40 $generated@@109 $generated@@110 $generated@@108)))
 :pattern ( ($generated@@86 $generated@@107 $generated@@108) ($generated@@40 $generated@@109 $generated@@110 $generated@@107))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (!  (=> ($generated@@86 $generated@@111 $generated@@112) (=> ($generated@@45 $generated@@115 $generated@@113 $generated@@114 $generated@@111) ($generated@@45 $generated@@115 $generated@@113 $generated@@114 $generated@@112)))
 :pattern ( ($generated@@86 $generated@@111 $generated@@112) ($generated@@45 $generated@@115 $generated@@113 $generated@@114 $generated@@111))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@27 ($generated@@33 $generated@@117)) $generated@@4) (= ($generated@@116 ($generated@@33 $generated@@117)) $generated@@10))
 :pattern ( ($generated@@33 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@53 $generated@@118 $generated@@49) (and (= ($generated@@97 $generated@@36 ($generated@@57 $generated@@36 $generated@@118)) $generated@@118) ($generated@@31 $generated@@36 ($generated@@57 $generated@@36 $generated@@118) $generated@@49)))
 :pattern ( ($generated@@53 $generated@@118 $generated@@49))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@53 $generated@@119 $generated@@46) (and (= ($generated@@97 $generated@@36 ($generated@@57 $generated@@36 $generated@@119)) $generated@@119) ($generated@@31 $generated@@36 ($generated@@57 $generated@@36 $generated@@119) $generated@@46)))
 :pattern ( ($generated@@53 $generated@@119 $generated@@46))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@53 $generated@@120 $generated@@42) (and (= ($generated@@97 $generated@@36 ($generated@@57 $generated@@36 $generated@@120)) $generated@@120) ($generated@@31 $generated@@36 ($generated@@57 $generated@@36 $generated@@120) $generated@@42)))
 :pattern ( ($generated@@53 $generated@@120 $generated@@42))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@53 $generated@@121 $generated@@29) (and (= ($generated@@97 $generated@@36 ($generated@@57 $generated@@36 $generated@@121)) $generated@@121) ($generated@@31 $generated@@36 ($generated@@57 $generated@@36 $generated@@121) $generated@@29)))
 :pattern ( ($generated@@53 $generated@@121 $generated@@29))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@31 $generated@@36 $generated@@122 $generated@@46)  (and ($generated@@31 $generated@@36 $generated@@122 $generated@@42) (or (not (= $generated@@122 $generated@@37)) (not true))))
 :pattern ( ($generated@@31 $generated@@36 $generated@@122 $generated@@46))
 :pattern ( ($generated@@31 $generated@@36 $generated@@122 $generated@@42))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@31 $generated@@36 $generated@@123 $generated@@49)  (and ($generated@@31 $generated@@36 $generated@@123 $generated@@29) (or (not (= $generated@@123 $generated@@37)) (not true))))
 :pattern ( ($generated@@31 $generated@@36 $generated@@123 $generated@@49))
 :pattern ( ($generated@@31 $generated@@36 $generated@@123 $generated@@29))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@41 $generated@@126) (and ($generated@@30 $generated@@125) (exists (($generated@@127 T@U) ) (! ($generated@@45 $generated@@32 $generated@@125 ($generated@@33 $generated@@127) $generated@@126)
 :pattern ( ($generated@@45 $generated@@32 $generated@@125 ($generated@@33 $generated@@127) $generated@@126))
)))) ($generated@@45 $generated@@13 ($generated@@17 ($generated@@124 $generated@@125)) $generated $generated@@126))
 :pattern ( ($generated@@45 $generated@@13 ($generated@@17 ($generated@@124 $generated@@125)) $generated $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@45 $generated@@36 $generated@@128 $generated@@29 $generated@@129) ($generated@@45 $generated@@36 $generated@@128 $generated@@42 $generated@@129))
 :pattern ( ($generated@@45 $generated@@36 $generated@@128 $generated@@29 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or (not (= $generated@@130 $generated@@132)) (not true)) (=> (and ($generated@@86 $generated@@130 $generated@@131) ($generated@@86 $generated@@131 $generated@@132)) ($generated@@86 $generated@@130 $generated@@132)))
 :pattern ( ($generated@@86 $generated@@130 $generated@@131) ($generated@@86 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@53 $generated@@133 $generated) (and (= ($generated@@97 $generated@@13 ($generated@@57 $generated@@13 $generated@@133)) $generated@@133) ($generated@@31 $generated@@13 ($generated@@57 $generated@@13 $generated@@133) $generated)))
 :pattern ( ($generated@@53 $generated@@133 $generated))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@53 ($generated@@97 $generated@@136 $generated@@134) $generated@@135) ($generated@@31 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@53 ($generated@@97 $generated@@136 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 Int) ) (! (= ($generated@@95 ($generated@@52 $generated@@137 $generated@@138)) $generated@@5)
 :pattern ( ($generated@@52 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 Int) ) (! (= ($generated@@139 ($generated@@52 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@52 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 Int) ) (! (= ($generated@@124 ($generated@@52 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@52 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@33 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@33 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@57 $generated@@147 ($generated@@97 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@97 $generated@@147 $generated@@146))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 Int) ) (! (< ($generated@@148 $generated@@150) ($generated@@149 ($generated@@52 $generated@@150 $generated@@151)))
 :pattern ( ($generated@@52 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@41 $generated@@154) (and ($generated@@30 $generated@@152) ($generated@@45 $generated@@32 $generated@@152 ($generated@@33 $generated@@153) $generated@@154))) ($generated@@40 ($generated@@139 $generated@@152) $generated@@153 $generated@@154))
 :pattern ( ($generated@@40 ($generated@@139 $generated@@152) $generated@@153 $generated@@154))
)))
(assert  (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@155 $generated@@158 $generated@@159 $generated@@160 ($generated@@157 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@157 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@155 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@155 $generated@@174 $generated@@175 $generated@@176 ($generated@@157 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@155 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 Bool) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@16 ($generated@@155 $generated@@36 $generated@@59 $generated@@12 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))  (=> (and (or (not (= $generated@@187 $generated@@183)) (not true)) ($generated@@16 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@184 $generated@@187) $generated@@185)))) $generated@@186))
 :pattern ( ($generated@@155 $generated@@36 $generated@@59 $generated@@12 ($generated@@156 $generated@@183 $generated@@184 $generated@@185 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@148 ($generated@@97 $generated@@32 $generated@@189)) ($generated@@149 $generated@@189))
 :pattern ( ($generated@@148 ($generated@@97 $generated@@32 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@53 $generated@@191 ($generated@@33 $generated@@190)) (and (= ($generated@@97 $generated@@32 ($generated@@57 $generated@@32 $generated@@191)) $generated@@191) ($generated@@31 $generated@@32 ($generated@@57 $generated@@32 $generated@@191) ($generated@@33 $generated@@190))))
 :pattern ( ($generated@@53 $generated@@191 ($generated@@33 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ) (!  (=> ($generated@@31 $generated@@36 $generated@@192 $generated@@29) ($generated@@31 $generated@@36 $generated@@192 $generated@@42))
 :pattern ( ($generated@@31 $generated@@36 $generated@@192 $generated@@29))
)))
(assert (forall (($generated@@193 T@U) ) (!  (=> ($generated@@53 $generated@@193 $generated@@29) ($generated@@53 $generated@@193 $generated@@42))
 :pattern ( ($generated@@53 $generated@@193 $generated@@29))
)))
(assert (= ($generated@@27 $generated@@49) $generated@@2))
(assert (= ($generated@@116 $generated@@49) $generated@@8))
(assert (= ($generated@@27 $generated@@46) $generated@@3))
(assert (= ($generated@@116 $generated@@46) $generated@@9))
(assert (= ($generated@@27 $generated@@42) $generated@@6))
(assert (= ($generated@@116 $generated@@42) $generated@@9))
(assert (= ($generated@@27 $generated@@29) $generated@@7))
(assert (= ($generated@@116 $generated@@29) $generated@@8))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@31 $generated@@36 $generated@@194 $generated@@42)  (or (= $generated@@194 $generated@@37) ($generated@@28 ($generated@@38 $generated@@194))))
 :pattern ( ($generated@@31 $generated@@36 $generated@@194 $generated@@42))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Int) ($generated@@198 T@U) ) (!  (=> ($generated@@41 $generated@@198) (= ($generated@@45 $generated@@32 ($generated@@52 $generated@@196 $generated@@197) ($generated@@33 $generated@@195) $generated@@198)  (and ($generated@@40 $generated@@196 $generated@@195 $generated@@198) ($generated@@45 $generated@@13 ($generated@@17 $generated@@197) $generated $generated@@198))))
 :pattern ( ($generated@@45 $generated@@32 ($generated@@52 $generated@@196 $generated@@197) ($generated@@33 $generated@@195) $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 Int) ) (! (= ($generated@@52 ($generated@@92 $generated@@60 $generated@@199) ($generated@@90 $generated@@200)) ($generated@@92 $generated@@32 ($generated@@52 $generated@@199 $generated@@200)))
 :pattern ( ($generated@@52 ($generated@@92 $generated@@60 $generated@@199) ($generated@@90 $generated@@200)))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@97 $generated@@13 ($generated@@17 ($generated@@90 $generated@@201))) ($generated@@92 $generated@@60 ($generated@@97 $generated@@13 ($generated@@17 $generated@@201))))
 :pattern ( ($generated@@97 $generated@@13 ($generated@@17 ($generated@@90 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@97 $generated@@203 ($generated@@92 $generated@@203 $generated@@202)) ($generated@@92 $generated@@60 ($generated@@97 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@97 $generated@@203 ($generated@@92 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@45 $generated@@13 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@45 $generated@@13 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@31 $generated@@13 $generated@@206 $generated)
 :pattern ( ($generated@@31 $generated@@13 $generated@@206 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@219 true))
(let (($generated@@220 true))
(let (($generated@@221  (=> (= $generated@@207 ($generated@@156 $generated@@37 $generated@@208 $generated@@1 false)) (=> (and (and (or (not (= $generated@@209 $generated@@37)) (not true)) (and ($generated@@31 $generated@@36 $generated@@209 $generated@@49) ($generated@@45 $generated@@36 $generated@@209 $generated@@49 $generated@@208))) (and ($generated@@41 $generated@@210) ($generated@@211 $generated@@210))) (=> (and (and (and (or (not (= $generated@@212 $generated@@37)) (not true)) (and ($generated@@31 $generated@@36 $generated@@212 $generated@@49) ($generated@@45 $generated@@36 $generated@@212 $generated@@49 $generated@@210))) (not ($generated@@16 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@208 $generated@@212) $generated@@1))))) (and (forall (($generated@@222 T@U) ) (!  (=> (and (or (not (= $generated@@222 $generated@@37)) (not true)) ($generated@@16 ($generated@@57 $generated@@12 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@208 $generated@@222) $generated@@1)))) (= ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@210 $generated@@222) ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@208 $generated@@222)))
 :pattern ( ($generated@@58 $generated@@36 ($generated@@61 $generated@@59 $generated@@60) $generated@@210 $generated@@222))
)) ($generated@@86 $generated@@208 $generated@@210))) (and (=> (= (ControlFlow 0 3) (- 0 5)) true) (=> (= $generated@@213 ($generated@@52 ($generated@@97 $generated@@36 $generated@@212) ($generated@@90 1815))) (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (and (=> (= (ControlFlow 0 3) 1) $generated@@220) (=> (= (ControlFlow 0 3) 2) $generated@@219))))))))))
(let (($generated@@223  (=> (and (and (and ($generated@@41 $generated@@208) ($generated@@211 $generated@@208)) (and (=> $generated@@214 (and ($generated@@31 $generated@@36 $generated@@215 $generated@@49) ($generated@@45 $generated@@36 $generated@@215 $generated@@49 $generated@@208))) true)) (and (and (=> $generated@@216 (and ($generated@@31 $generated@@32 $generated@@217 ($generated@@33 $generated@@46)) ($generated@@45 $generated@@32 $generated@@217 ($generated@@33 $generated@@46) $generated@@208))) true) (and (= 1 $generated@@218) (= (ControlFlow 0 6) 3)))) $generated@@221)))
$generated@@223)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
