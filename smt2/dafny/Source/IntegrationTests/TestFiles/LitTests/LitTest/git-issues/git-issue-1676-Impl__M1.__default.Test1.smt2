(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@T T@T) T@T)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U T@U) Bool)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U Int) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@29 $generated@@38 $generated@@39 ($generated@@35 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@42) $generated@@40)
 :weight 0
)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (or (= $generated@@47 $generated@@48) (= ($generated@@29 $generated@@43 $generated@@44 ($generated@@35 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@48) ($generated@@29 $generated@@43 $generated@@44 $generated@@46 $generated@@48)))
 :weight 0
))) (= ($generated@@5 $generated@@30) 3)) (= ($generated@@5 $generated@@31) 4)) (= ($generated@@5 $generated@@32) 5)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (= ($generated@@5 ($generated@@33 $generated@@49 $generated@@50)) 6))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@36 ($generated@@33 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@33 $generated@@51 $generated@@52))
))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@37 ($generated@@33 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@33 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@28 $generated@@55 $generated@@56) (forall (($generated@@57 T@U) ) (!  (=> ($generated@@10 ($generated@@34 $generated@@6 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@55 $generated@@57) $generated@@2))) ($generated@@10 ($generated@@34 $generated@@6 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@56 $generated@@57) $generated@@2))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@56 $generated@@57) $generated@@2))
)))
 :pattern ( ($generated@@28 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@59 Int) ) (! (= ($generated@@58 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@62 $generated@@61))
)))
(assert (= ($generated@@5 $generated@@64) 7))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@63 $generated@@64 $generated@@68 ($generated@@66 $generated@@70)) ($generated@@67 $generated@@69 $generated@@70)) ($generated@@63 $generated@@64 ($generated@@65 $generated@@68 $generated@@69) ($generated@@66 $generated@@70)))
 :pattern ( ($generated@@63 $generated@@64 ($generated@@65 $generated@@68 $generated@@69) ($generated@@66 $generated@@70)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@34 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@34 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@26 ($generated@@65 $generated@@74 $generated@@75)) (+ 1 ($generated@@26 $generated@@74)))
 :pattern ( ($generated@@65 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@63 $generated@@7 $generated@@76 $generated@@23) (= ($generated@@12 $generated@@76) ($generated@@58 1)))
 :pattern ( ($generated@@63 $generated@@7 $generated@@76 $generated@@23))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@71 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@22 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@71 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@28 $generated@@82 $generated@@83) (=> ($generated@@77 $generated@@84 $generated@@85 $generated@@82) ($generated@@77 $generated@@84 $generated@@85 $generated@@83)))
 :pattern ( ($generated@@28 $generated@@82 $generated@@83) ($generated@@77 $generated@@84 $generated@@85 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (!  (=> ($generated@@28 $generated@@86 $generated@@87) (=> ($generated@@22 $generated@@90 $generated@@88 $generated@@89 $generated@@86) ($generated@@22 $generated@@90 $generated@@88 $generated@@89 $generated@@87)))
 :pattern ( ($generated@@28 $generated@@86 $generated@@87) ($generated@@22 $generated@@90 $generated@@88 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@26 ($generated@@91 $generated@@92 $generated@@93)) (+ ($generated@@26 $generated@@92) ($generated@@26 $generated@@93)))
 :pattern ( ($generated@@26 ($generated@@91 $generated@@92 $generated@@93)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@67 $generated@@94 $generated@@23) (and (= ($generated@@71 $generated@@7 ($generated@@34 $generated@@7 $generated@@94)) $generated@@94) ($generated@@63 $generated@@7 ($generated@@34 $generated@@7 $generated@@94) $generated@@23)))
 :pattern ( ($generated@@67 $generated@@94 $generated@@23))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ($generated@@98 T@U) ) (!  (and (=> (= $generated@@97 ($generated@@26 $generated@@96)) (= ($generated@@95 ($generated@@65 $generated@@96 $generated@@98) $generated@@97) $generated@@98)) (=> (or (not (= $generated@@97 ($generated@@26 $generated@@96))) (not true)) (= ($generated@@95 ($generated@@65 $generated@@96 $generated@@98) $generated@@97) ($generated@@95 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@95 ($generated@@65 $generated@@96 $generated@@98) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or (not (= $generated@@99 $generated@@101)) (not true)) (=> (and ($generated@@28 $generated@@99 $generated@@100) ($generated@@28 $generated@@100 $generated@@101)) ($generated@@28 $generated@@99 $generated@@101)))
 :pattern ( ($generated@@28 $generated@@99 $generated@@100) ($generated@@28 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@67 $generated@@102 $generated) (and (= ($generated@@71 $generated@@7 ($generated@@34 $generated@@7 $generated@@102)) $generated@@102) ($generated@@63 $generated@@7 ($generated@@34 $generated@@7 $generated@@102) $generated)))
 :pattern ( ($generated@@67 $generated@@102 $generated))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@67 ($generated@@71 $generated@@105 $generated@@103) $generated@@104) ($generated@@63 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@67 ($generated@@71 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (<= 0 ($generated@@26 $generated@@106))
 :pattern ( ($generated@@26 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@22 $generated@@64 $generated@@107 ($generated@@66 $generated@@108) $generated@@109) (forall (($generated@@110 Int) ) (!  (=> (and (<= 0 $generated@@110) (< $generated@@110 ($generated@@26 $generated@@107))) ($generated@@77 ($generated@@95 $generated@@107 $generated@@110) $generated@@108 $generated@@109))
 :pattern ( ($generated@@95 $generated@@107 $generated@@110))
)))
 :pattern ( ($generated@@22 $generated@@64 $generated@@107 ($generated@@66 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@66 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@66 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@21 ($generated@@66 $generated@@113)) $generated@@1)
 :pattern ( ($generated@@66 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@34 $generated@@115 ($generated@@71 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@71 $generated@@115 $generated@@114))
)))
(assert  (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@116 $generated@@119 $generated@@120 $generated@@121 ($generated@@118 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@116 $generated@@126 $generated@@127 $generated@@128 ($generated@@118 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@116 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@116 $generated@@135 $generated@@136 $generated@@137 ($generated@@118 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@116 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@10 ($generated@@116 $generated@@32 $generated@@30 $generated@@6 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@10 ($generated@@34 $generated@@6 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@116 $generated@@32 $generated@@30 $generated@@6 ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (and (= ($generated@@150 ($generated@@65 $generated@@152 $generated@@153)) $generated@@152) (= ($generated@@151 ($generated@@65 $generated@@152 $generated@@153)) $generated@@153))
 :pattern ( ($generated@@65 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@67 $generated@@154 ($generated@@66 $generated@@155)) (and (= ($generated@@71 $generated@@64 ($generated@@34 $generated@@64 $generated@@154)) $generated@@154) ($generated@@63 $generated@@64 ($generated@@34 $generated@@64 $generated@@154) ($generated@@66 $generated@@155))))
 :pattern ( ($generated@@67 $generated@@154 ($generated@@66 $generated@@155)))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@156 $generated@@23) $generated@@4))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Int) ) (!  (and (=> (< $generated@@159 ($generated@@26 $generated@@157)) (= ($generated@@95 ($generated@@91 $generated@@157 $generated@@158) $generated@@159) ($generated@@95 $generated@@157 $generated@@159))) (=> (<= ($generated@@26 $generated@@157) $generated@@159) (= ($generated@@95 ($generated@@91 $generated@@157 $generated@@158) $generated@@159) ($generated@@95 $generated@@158 (- $generated@@159 ($generated@@26 $generated@@157))))))
 :pattern ( ($generated@@95 ($generated@@91 $generated@@157 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@71 $generated@@7 ($generated@@11 ($generated@@58 $generated@@160))) ($generated@@60 $generated@@31 ($generated@@71 $generated@@7 ($generated@@11 $generated@@160))))
 :pattern ( ($generated@@71 $generated@@7 ($generated@@11 ($generated@@58 $generated@@160))))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@71 $generated@@162 ($generated@@60 $generated@@162 $generated@@161)) ($generated@@60 $generated@@31 ($generated@@71 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@71 $generated@@162 ($generated@@60 $generated@@162 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= ($generated@@26 $generated@@163) 0) (= $generated@@163 $generated@@27))
 :pattern ( ($generated@@26 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! ($generated@@22 $generated@@7 $generated@@165 $generated $generated@@164)
 :pattern ( ($generated@@22 $generated@@7 $generated@@165 $generated $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@63 $generated@@64 $generated@@166 ($generated@@66 $generated@@167)) (forall (($generated@@168 Int) ) (!  (=> (and (<= 0 $generated@@168) (< $generated@@168 ($generated@@26 $generated@@166))) ($generated@@67 ($generated@@95 $generated@@166 $generated@@168) $generated@@167))
 :pattern ( ($generated@@95 $generated@@166 $generated@@168))
)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@166 ($generated@@66 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@63 $generated@@7 $generated@@169 $generated)
 :pattern ( ($generated@@63 $generated@@7 $generated@@169 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@182  (=> (and (= $generated@@170 ($generated@@117 $generated@@171 $generated@@172 $generated@@2 false)) (= $generated@@173 ($generated@@60 $generated@@64 ($generated@@65 ($generated@@65 $generated@@27 ($generated@@71 $generated@@7 ($generated@@11 ($generated@@58 1)))) ($generated@@71 $generated@@7 ($generated@@11 ($generated@@58 1))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@63 $generated@@7 ($generated@@11 ($generated@@58 1)) $generated@@23)) (=> ($generated@@63 $generated@@7 ($generated@@11 ($generated@@58 1)) $generated@@23) (=> (= $generated@@174 ($generated@@60 $generated@@64 ($generated@@65 $generated@@27 ($generated@@71 $generated@@7 ($generated@@11 ($generated@@58 1)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@63 $generated@@64 ($generated@@91 $generated@@174 $generated@@173) ($generated@@66 $generated@@23))) (=> ($generated@@63 $generated@@64 ($generated@@91 $generated@@174 $generated@@173) ($generated@@66 $generated@@23)) (=> (and (= $generated@@175 ($generated@@91 $generated@@174 $generated@@173)) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@58 1)) (< ($generated@@58 1) ($generated@@26 $generated@@175))))))))))))
(let (($generated@@183  (=> (and ($generated@@176 $generated@@172) ($generated@@177 $generated@@172)) (=> (and (and (and (and ($generated@@63 $generated@@64 $generated@@178 ($generated@@66 $generated)) ($generated@@22 $generated@@64 $generated@@178 ($generated@@66 $generated) $generated@@172)) true) (and (and ($generated@@63 $generated@@64 $generated@@179 ($generated@@66 $generated@@23)) ($generated@@22 $generated@@64 $generated@@179 ($generated@@66 $generated@@23) $generated@@172)) true)) (and (and (and ($generated@@63 $generated@@64 $generated@@180 ($generated@@66 $generated@@23)) ($generated@@22 $generated@@64 $generated@@180 ($generated@@66 $generated@@23) $generated@@172)) true) (and (= 2 $generated@@181) (= (ControlFlow 0 5) 2)))) $generated@@182))))
$generated@@183)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
