(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U Int) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@85 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@144 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@1))
(assert (= ($generated@@23 $generated@@0) $generated@@2))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@24 $generated@@25 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@7 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@31 $generated@@29 $generated@@32) ($generated@@27 $generated@@28 $generated@@31 ($generated@@30 $generated) $generated@@32))
 :pattern ( ($generated@@27 $generated@@28 $generated@@31 $generated@@29 $generated@@32))
)))
(assert (= ($generated@@33 $generated@@25) 0))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@34 $generated@@28 $generated@@36 $generated@@29)  (and ($generated@@34 $generated@@28 $generated@@36 ($generated@@30 $generated)) (< ($generated@@33 $generated@@36) $generated@@35)))
 :pattern ( ($generated@@34 $generated@@28 $generated@@36 $generated@@29))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@41 T@U) ) (!  (=> (or ($generated@@39 $generated@@41) (and (< 2 $generated@@37) (and ($generated@@34 $generated@@28 $generated@@41 ($generated@@30 $generated@@29)) (forall (($generated@@42 T@U) ) (!  (=> ($generated@@34 $generated@@28 $generated@@42 $generated@@29) (=> ($generated@@24 $generated@@41 ($generated@@40 $generated@@28 $generated@@42)) (< ($generated@@33 $generated@@42) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@42))
 :pattern ( ($generated@@24 $generated@@41 ($generated@@40 $generated@@28 $generated@@42)))
))))) (forall (($generated@@43 T@U) ) (!  (=> ($generated@@34 $generated@@28 $generated@@43 $generated@@29) (=> ($generated@@24 $generated@@41 ($generated@@40 $generated@@28 $generated@@43)) (< ($generated@@33 $generated@@43) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@43))
 :pattern ( ($generated@@24 $generated@@41 ($generated@@40 $generated@@28 $generated@@43)))
)))
 :pattern ( ($generated@@38 $generated@@41))
))))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@44 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@40 $generated@@51 ($generated@@49 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert  (=> (< 0 $generated@@37) (forall (($generated@@53 T@U) ) (!  (=> ($generated@@52 $generated@@53) ($generated@@27 $generated@@9 ($generated@@13 $generated@@35) $generated@@0 $generated@@53))
 :pattern ( ($generated@@27 $generated@@9 ($generated@@13 $generated@@35) $generated@@0 $generated@@53))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@54 ($generated@@40 $generated@@58 $generated@@55) $generated@@56 $generated@@57) ($generated@@27 $generated@@58 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@54 ($generated@@40 $generated@@58 $generated@@55) $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@59 $generated@@60 $generated@@29) (and (= ($generated@@40 $generated@@28 ($generated@@49 $generated@@28 $generated@@60)) $generated@@60) ($generated@@34 $generated@@28 ($generated@@49 $generated@@28 $generated@@60) $generated@@29)))
 :pattern ( ($generated@@59 $generated@@60 $generated@@29))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@24 $generated@@62 $generated@@63) (exists (($generated@@64 Int) ) (!  (and (and (<= 0 $generated@@64) (< $generated@@64 ($generated@@33 $generated@@62))) (= ($generated@@61 $generated@@62 $generated@@64) $generated@@63))
 :pattern ( ($generated@@61 $generated@@62 $generated@@64))
)))
 :pattern ( ($generated@@24 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@59 $generated@@65 $generated@@0) (and (= ($generated@@40 $generated@@9 ($generated@@49 $generated@@9 $generated@@65)) $generated@@65) ($generated@@34 $generated@@9 ($generated@@49 $generated@@9 $generated@@65) $generated@@0)))
 :pattern ( ($generated@@59 $generated@@65 $generated@@0))
)))
(assert (= ($generated@@7 $generated@@66) 4))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@59 $generated@@67 $generated) (and (= ($generated@@40 $generated@@66 ($generated@@49 $generated@@66 $generated@@67)) $generated@@67) ($generated@@34 $generated@@66 ($generated@@49 $generated@@66 $generated@@67) $generated)))
 :pattern ( ($generated@@59 $generated@@67 $generated))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@59 ($generated@@40 $generated@@70 $generated@@68) $generated@@69) ($generated@@34 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@59 ($generated@@40 $generated@@70 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (<= 0 ($generated@@33 $generated@@71))
 :pattern ( ($generated@@33 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@72 ($generated@@30 $generated@@73) $generated@@74) (forall (($generated@@75 Int) ) (!  (=> (and (<= 0 $generated@@75) (< $generated@@75 ($generated@@33 $generated@@72))) ($generated@@54 ($generated@@61 $generated@@72 $generated@@75) $generated@@73 $generated@@74))
 :pattern ( ($generated@@61 $generated@@72 $generated@@75))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@72 ($generated@@30 $generated@@73) $generated@@74))
)))
(assert  (=> (< 0 $generated@@37) ($generated@@34 $generated@@9 ($generated@@13 $generated@@35) $generated@@0)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 ($generated@@30 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@30 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@23 ($generated@@30 $generated@@78)) $generated@@3)
 :pattern ( ($generated@@30 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@49 $generated@@80 ($generated@@40 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@40 $generated@@80 $generated@@79))
)))
(assert (= $generated@@35 ($generated@@44 4)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@81 $generated@@92 $generated@@93 $generated@@94 ($generated@@88 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@97 $generated@@98) $generated@@95)
 :weight 0
)) (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@104 $generated@@106) (= ($generated@@81 $generated@@99 $generated@@100 $generated@@101 ($generated@@88 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@81 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@81 $generated@@108 $generated@@109 $generated@@110 ($generated@@88 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@81 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)))) (= ($generated@@7 $generated@@82) 5)) (= ($generated@@7 $generated@@83) 6)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@85 $generated@@117 $generated@@118 ($generated@@89 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@121) $generated@@119)
 :weight 0
))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@85 $generated@@122 $generated@@123 ($generated@@89 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@85 $generated@@122 $generated@@123 $generated@@125 $generated@@127)))
 :weight 0
))) (= ($generated@@7 $generated@@86) 7)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (= ($generated@@7 ($generated@@87 $generated@@128 $generated@@129)) 8))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@130 $generated@@131)) $generated@@130)
 :pattern ( ($generated@@87 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@132 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@87 $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Bool) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@12 ($generated@@81 $generated@@82 $generated@@83 $generated@@8 ($generated@@84 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@12 ($generated@@49 $generated@@8 ($generated@@85 $generated@@83 $generated@@86 ($generated@@85 $generated@@82 ($generated@@87 $generated@@83 $generated@@86) $generated@@135 $generated@@138) $generated@@136)))) $generated@@137))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83 $generated@@8 ($generated@@84 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@59 $generated@@140 ($generated@@30 $generated@@141)) (and (= ($generated@@40 $generated@@28 ($generated@@49 $generated@@28 $generated@@140)) $generated@@140) ($generated@@34 $generated@@28 ($generated@@49 $generated@@28 $generated@@140) ($generated@@30 $generated@@141))))
 :pattern ( ($generated@@59 $generated@@140 ($generated@@30 $generated@@141)))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@142 T@U) ) (!  (=> (or ($generated@@39 $generated@@142) (and (< 2 $generated@@37) (and ($generated@@34 $generated@@28 $generated@@142 ($generated@@30 $generated@@29)) (forall (($generated@@143 T@U) ) (!  (=> ($generated@@34 $generated@@28 $generated@@143 $generated@@29) (=> ($generated@@24 $generated@@142 ($generated@@40 $generated@@28 $generated@@143)) (< ($generated@@33 $generated@@143) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@143))
 :pattern ( ($generated@@24 $generated@@142 ($generated@@40 $generated@@28 $generated@@143)))
))))) (= ($generated@@38 $generated@@142) ($generated@@44 0)))
 :pattern ( ($generated@@38 $generated@@142))
))))
(assert (= ($generated@@23 $generated@@29) $generated@@5))
(assert (= ($generated@@144 $generated@@29) $generated@@6))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@40 $generated@@9 ($generated@@13 ($generated@@44 $generated@@145))) ($generated@@46 $generated@@86 ($generated@@40 $generated@@9 ($generated@@13 $generated@@145))))
 :pattern ( ($generated@@40 $generated@@9 ($generated@@13 ($generated@@44 $generated@@145))))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@40 $generated@@147 ($generated@@46 $generated@@147 $generated@@146)) ($generated@@46 $generated@@86 ($generated@@40 $generated@@147 $generated@@146)))
 :pattern ( ($generated@@40 $generated@@147 ($generated@@46 $generated@@147 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> (= ($generated@@33 $generated@@148) 0) (= $generated@@148 $generated@@25))
 :pattern ( ($generated@@33 $generated@@148))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@149 T@U) ) (!  (=> (or ($generated@@39 ($generated@@46 $generated@@28 $generated@@149)) (and (< 2 $generated@@37) (and ($generated@@34 $generated@@28 $generated@@149 ($generated@@30 $generated@@29)) (forall (($generated@@150 T@U) ) (!  (=> ($generated@@34 $generated@@28 $generated@@150 $generated@@29) (=> ($generated@@24 $generated@@149 ($generated@@40 $generated@@28 $generated@@150)) (< ($generated@@33 $generated@@150) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@150))
 :pattern ( ($generated@@24 $generated@@149 ($generated@@40 $generated@@28 $generated@@150)))
))))) (= ($generated@@38 ($generated@@46 $generated@@28 $generated@@149)) ($generated@@44 0)))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@46 $generated@@28 $generated@@149)))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! ($generated@@27 $generated@@9 $generated@@152 $generated@@0 $generated@@151)
 :pattern ( ($generated@@27 $generated@@9 $generated@@152 $generated@@0 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! ($generated@@27 $generated@@66 $generated@@154 $generated $generated@@153)
 :pattern ( ($generated@@27 $generated@@66 $generated@@154 $generated $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@34 $generated@@28 $generated@@155 ($generated@@30 $generated@@156)) (forall (($generated@@157 Int) ) (!  (=> (and (<= 0 $generated@@157) (< $generated@@157 ($generated@@33 $generated@@155))) ($generated@@59 ($generated@@61 $generated@@155 $generated@@157) $generated@@156))
 :pattern ( ($generated@@61 $generated@@155 $generated@@157))
)))
 :pattern ( ($generated@@34 $generated@@28 $generated@@155 ($generated@@30 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@34 $generated@@9 $generated@@158 $generated@@0)
 :pattern ( ($generated@@34 $generated@@9 $generated@@158 $generated@@0))
)))
(assert (forall (($generated@@159 T@U) ) (! ($generated@@34 $generated@@66 $generated@@159 $generated)
 :pattern ( ($generated@@34 $generated@@66 $generated@@159 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@168 true))
(let (($generated@@169  (=> (and (=> ($generated@@24 $generated@@160 ($generated@@40 $generated@@28 $generated@@161)) (< ($generated@@33 $generated@@161) $generated@@35)) (= (ControlFlow 0 6) 4)) $generated@@168)))
(let (($generated@@170  (=> ($generated@@24 $generated@@160 ($generated@@40 $generated@@28 $generated@@161)) (=> (and (< ($generated@@33 $generated@@161) $generated@@35) (= (ControlFlow 0 5) 4)) $generated@@168))))
(let (($generated@@171  (=> (and ($generated@@34 $generated@@28 $generated@@161 $generated@@29) ($generated@@27 $generated@@28 $generated@@161 $generated@@29 $generated@@162)) (and (=> (= (ControlFlow 0 7) 5) $generated@@170) (=> (= (ControlFlow 0 7) 6) $generated@@169)))))
(let (($generated@@172  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@173 T@U) ) (!  (=> ($generated@@34 $generated@@28 $generated@@173 $generated@@29) (=> ($generated@@24 $generated@@160 ($generated@@40 $generated@@28 $generated@@173)) (< ($generated@@33 $generated@@173) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@173))
 :pattern ( ($generated@@24 $generated@@160 ($generated@@40 $generated@@28 $generated@@173)))
)))))
(let (($generated@@174  (=> (and (and (= ($generated@@38 $generated@@160) ($generated@@44 0)) ($generated@@34 $generated@@9 ($generated@@13 ($generated@@38 $generated@@160)) $generated@@0)) (and (= ($generated@@38 $generated@@160) $generated@@163) (= (ControlFlow 0 3) 2))) $generated@@172)))
(let (($generated@@175  (=> (forall (($generated@@176 T@U) ) (!  (=> ($generated@@34 $generated@@28 $generated@@176 $generated@@29) (=> ($generated@@24 $generated@@160 ($generated@@40 $generated@@28 $generated@@176)) (< ($generated@@33 $generated@@176) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@176))
 :pattern ( ($generated@@24 $generated@@160 ($generated@@40 $generated@@28 $generated@@176)))
)) (and (=> (= (ControlFlow 0 8) 7) $generated@@171) (=> (= (ControlFlow 0 8) 3) $generated@@174)))))
(let (($generated@@177  (=> (and (=> ($generated@@24 $generated@@160 ($generated@@40 $generated@@28 $generated@@164)) (< ($generated@@33 $generated@@164) $generated@@35)) (= (ControlFlow 0 10) 8)) $generated@@175)))
(let (($generated@@178  (=> ($generated@@24 $generated@@160 ($generated@@40 $generated@@28 $generated@@164)) (=> (and (< ($generated@@33 $generated@@164) $generated@@35) (= (ControlFlow 0 9) 8)) $generated@@175))))
(let (($generated@@179  (=> (= $generated@@165 ($generated@@84 $generated@@166 $generated@@162 $generated@@4 false)) (=> (and ($generated@@34 $generated@@28 $generated@@164 $generated@@29) ($generated@@27 $generated@@28 $generated@@164 $generated@@29 $generated@@162)) (and (=> (= (ControlFlow 0 11) 9) $generated@@178) (=> (= (ControlFlow 0 11) 10) $generated@@177))))))
(let (($generated@@180  (=> (and (and (and ($generated@@52 $generated@@162) ($generated@@167 $generated@@162)) ($generated@@34 $generated@@28 $generated@@160 ($generated@@30 $generated@@29))) (and (= 2 $generated@@37) (= (ControlFlow 0 12) 11))) $generated@@179)))
$generated@@180))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
