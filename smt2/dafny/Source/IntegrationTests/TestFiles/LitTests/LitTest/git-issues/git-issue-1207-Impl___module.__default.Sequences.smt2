(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) Bool)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Int) Int)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U Int) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U T@U) Bool)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@70 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@74 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@131 (T@U T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ) (!  (not ($generated@@17 $generated@@18 $generated@@19))
 :pattern ( ($generated@@17 $generated@@18 $generated@@19))
)))
(assert (= ($generated@@20 $generated@@18) 0))
(assert (forall (($generated@@22 Int) ) (! (= ($generated@@21 $generated@@22) $generated@@22)
 :pattern ( ($generated@@21 $generated@@22))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@T) ) (! (= ($generated@@23 $generated@@25 $generated@@24) $generated@@24)
 :pattern ( ($generated@@23 $generated@@25 $generated@@24))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@26 $generated@@28 $generated@@29)  (and (= ($generated@@20 $generated@@28) ($generated@@20 $generated@@29)) (forall (($generated@@30 Int) ) (!  (=> (and (<= 0 $generated@@30) (< $generated@@30 ($generated@@20 $generated@@28))) (= ($generated@@27 $generated@@28 $generated@@30) ($generated@@27 $generated@@29 $generated@@30)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@30))
 :pattern ( ($generated@@27 $generated@@29 $generated@@30))
))))
 :pattern ( ($generated@@26 $generated@@28 $generated@@29))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 ($generated@@31 $generated@@34 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@31 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@35 ($generated@@32 $generated@@40 $generated@@37) $generated@@38 $generated@@39) ($generated@@36 $generated@@40 $generated@@37 $generated@@38 $generated@@39))
 :pattern ( ($generated@@35 ($generated@@32 $generated@@40 $generated@@37) $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@20 ($generated@@41 $generated@@42 $generated@@43)) (+ ($generated@@20 $generated@@42) ($generated@@20 $generated@@43)))
 :pattern ( ($generated@@20 ($generated@@41 $generated@@42 $generated@@43)))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@17 ($generated@@41 $generated@@44 $generated@@45) $generated@@46)  (or ($generated@@17 $generated@@44 $generated@@46) ($generated@@17 $generated@@45 $generated@@46)))
 :pattern ( ($generated@@17 ($generated@@41 $generated@@44 $generated@@45) $generated@@46))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@17 $generated@@47 $generated@@48) (exists (($generated@@49 Int) ) (!  (and (and (<= 0 $generated@@49) (< $generated@@49 ($generated@@20 $generated@@47))) (= ($generated@@27 $generated@@47 $generated@@49) $generated@@48))
 :pattern ( ($generated@@27 $generated@@47 $generated@@49))
)))
 :pattern ( ($generated@@17 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> ($generated@@26 $generated@@50 $generated@@51) (= $generated@@50 $generated@@51))
 :pattern ( ($generated@@26 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@52 ($generated@@32 $generated@@56 $generated@@54) $generated@@55) ($generated@@53 $generated@@56 $generated@@54 $generated@@55))
 :pattern ( ($generated@@52 ($generated@@32 $generated@@56 $generated@@54) $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (<= 0 ($generated@@20 $generated@@57))
 :pattern ( ($generated@@20 $generated@@57))
)))
(assert (= ($generated@@1 $generated@@58) 3))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@36 $generated@@58 $generated@@60 ($generated@@59 $generated@@61) $generated@@62) (forall (($generated@@63 Int) ) (!  (=> (and (<= 0 $generated@@63) (< $generated@@63 ($generated@@20 $generated@@60))) ($generated@@35 ($generated@@27 $generated@@60 $generated@@63) $generated@@61 $generated@@62))
 :pattern ( ($generated@@27 $generated@@60 $generated@@63))
)))
 :pattern ( ($generated@@36 $generated@@58 $generated@@60 ($generated@@59 $generated@@61) $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@64 ($generated@@59 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@59 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 ($generated@@59 $generated@@67)) $generated)
 :pattern ( ($generated@@59 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@31 $generated@@69 ($generated@@32 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@32 $generated@@69 $generated@@68))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@81 T@T) ($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@70 $generated@@81 $generated@@82 $generated@@83 ($generated@@77 $generated@@81 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@87 $generated@@84) $generated@@86 $generated@@87) $generated@@84)
 :weight 0
)) (and (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@93 $generated@@95) (= ($generated@@70 $generated@@88 $generated@@89 $generated@@90 ($generated@@77 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91) $generated@@95 $generated@@96) ($generated@@70 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@95 $generated@@96)))
 :weight 0
)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or (= $generated@@103 $generated@@105) (= ($generated@@70 $generated@@97 $generated@@98 $generated@@99 ($generated@@77 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@104 $generated@@105) ($generated@@70 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@104 $generated@@105)))
 :weight 0
)))) (= ($generated@@1 $generated@@71) 4)) (= ($generated@@1 $generated@@72) 5)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@74 $generated@@106 $generated@@107 ($generated@@78 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@108) $generated@@110) $generated@@108)
 :weight 0
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@74 $generated@@111 $generated@@112 ($generated@@78 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@74 $generated@@111 $generated@@112 $generated@@114 $generated@@116)))
 :weight 0
))) (= ($generated@@1 $generated@@75) 6)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (= ($generated@@1 ($generated@@76 $generated@@117 $generated@@118)) 7))) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@76 $generated@@119 $generated@@120))
))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@76 $generated@@121 $generated@@122))
))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 Bool) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@6 ($generated@@70 $generated@@71 $generated@@72 $generated@@2 ($generated@@73 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))  (=> (and (or (not (= $generated@@127 $generated@@123)) (not true)) ($generated@@6 ($generated@@31 $generated@@2 ($generated@@74 $generated@@72 $generated@@75 ($generated@@74 $generated@@71 ($generated@@76 $generated@@72 $generated@@75) $generated@@124 $generated@@127) $generated@@125)))) $generated@@126))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72 $generated@@2 ($generated@@73 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@52 $generated@@129 ($generated@@59 $generated@@130)) (and (= ($generated@@32 $generated@@58 ($generated@@31 $generated@@58 $generated@@129)) $generated@@129) ($generated@@53 $generated@@58 ($generated@@31 $generated@@58 $generated@@129) ($generated@@59 $generated@@130))))
 :pattern ( ($generated@@52 $generated@@129 ($generated@@59 $generated@@130)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 Int) ) (! (= ($generated@@131 $generated@@132 $generated@@133 $generated@@134) (forall (($generated@@135 Int) ) (!  (=> (and (<= 0 $generated@@135) (< $generated@@135 $generated@@134)) (= ($generated@@27 $generated@@132 $generated@@135) ($generated@@27 $generated@@133 $generated@@135)))
 :pattern ( ($generated@@27 $generated@@132 $generated@@135))
 :pattern ( ($generated@@27 $generated@@133 $generated@@135))
)))
 :pattern ( ($generated@@131 $generated@@132 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Int) ) (!  (and (=> (< $generated@@138 ($generated@@20 $generated@@136)) (= ($generated@@27 ($generated@@41 $generated@@136 $generated@@137) $generated@@138) ($generated@@27 $generated@@136 $generated@@138))) (=> (<= ($generated@@20 $generated@@136) $generated@@138) (= ($generated@@27 ($generated@@41 $generated@@136 $generated@@137) $generated@@138) ($generated@@27 $generated@@137 (- $generated@@138 ($generated@@20 $generated@@136))))))
 :pattern ( ($generated@@27 ($generated@@41 $generated@@136 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@32 $generated@@3 ($generated@@7 ($generated@@21 $generated@@139))) ($generated@@23 $generated@@75 ($generated@@32 $generated@@3 ($generated@@7 $generated@@139))))
 :pattern ( ($generated@@32 $generated@@3 ($generated@@7 ($generated@@21 $generated@@139))))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@32 $generated@@141 ($generated@@23 $generated@@141 $generated@@140)) ($generated@@23 $generated@@75 ($generated@@32 $generated@@141 $generated@@140)))
 :pattern ( ($generated@@32 $generated@@141 ($generated@@23 $generated@@141 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= ($generated@@20 $generated@@142) 0) (= $generated@@142 $generated@@18))
 :pattern ( ($generated@@20 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@53 $generated@@58 $generated@@143 ($generated@@59 $generated@@144)) (forall (($generated@@145 Int) ) (!  (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@20 $generated@@143))) ($generated@@52 ($generated@@27 $generated@@143 $generated@@145) $generated@@144))
 :pattern ( ($generated@@27 $generated@@143 $generated@@145))
)))
 :pattern ( ($generated@@53 $generated@@58 $generated@@143 ($generated@@59 $generated@@144)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@164  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and ($generated@@53 $generated@@58 $generated@@165 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@165 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@52 $generated@@166 $generated@@146) ($generated@@35 $generated@@166 $generated@@146 $generated@@147))) ($generated@@17 $generated@@165 $generated@@166))
 :pattern ( ($generated@@17 $generated@@165 $generated@@166))
)))))
(let (($generated@@167  (=> (and (not (and (and ($generated@@53 $generated@@58 $generated@@148 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@148 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@52 $generated@@149 $generated@@146) ($generated@@35 $generated@@149 $generated@@146 $generated@@147)))) (= (ControlFlow 0 4) 2)) $generated@@164)))
(let (($generated@@168  (=> (and (and (and ($generated@@53 $generated@@58 $generated@@148 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@148 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@52 $generated@@149 $generated@@146) ($generated@@35 $generated@@149 $generated@@146 $generated@@147))) (= (ControlFlow 0 3) 2)) $generated@@164)))
(let (($generated@@169  (and (=> (= (ControlFlow 0 5) (- 0 6)) (forall (($generated@@170 Int) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and (<= ($generated@@21 0) $generated@@170) (and ($generated@@53 $generated@@58 $generated@@171 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@171 ($generated@@59 $generated@@146) $generated@@147))) (and ($generated@@53 $generated@@58 $generated@@172 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@172 ($generated@@59 $generated@@146) $generated@@147))) (= ($generated@@27 $generated@@172 $generated@@170) ($generated@@27 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@27 $generated@@171 $generated@@170) ($generated@@27 $generated@@172 $generated@@170))
))) (=> (forall (($generated@@173 Int) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and (and (<= ($generated@@21 0) $generated@@173) (and ($generated@@53 $generated@@58 $generated@@174 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@174 ($generated@@59 $generated@@146) $generated@@147))) (and ($generated@@53 $generated@@58 $generated@@175 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@175 ($generated@@59 $generated@@146) $generated@@147))) (= ($generated@@27 $generated@@175 $generated@@173) ($generated@@27 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@27 $generated@@174 $generated@@173) ($generated@@27 $generated@@175 $generated@@173))
)) (and (=> (= (ControlFlow 0 5) 3) $generated@@168) (=> (= (ControlFlow 0 5) 4) $generated@@167))))))
(let (($generated@@176  (=> (and (not (and (and (<= ($generated@@21 0) $generated@@150) (and ($generated@@53 $generated@@58 $generated@@151 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@151 ($generated@@59 $generated@@146) $generated@@147))) (and ($generated@@53 $generated@@58 $generated@@152 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@152 ($generated@@59 $generated@@146) $generated@@147)))) (= (ControlFlow 0 10) 5)) $generated@@169)))
(let (($generated@@177  (=> (and (and (<= ($generated@@21 0) $generated@@150) (and ($generated@@53 $generated@@58 $generated@@151 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@151 ($generated@@59 $generated@@146) $generated@@147))) (and ($generated@@53 $generated@@58 $generated@@152 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@152 ($generated@@59 $generated@@146) $generated@@147))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@20 $generated@@152)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@150) (< $generated@@150 ($generated@@20 $generated@@151)))) (=> (= (ControlFlow 0 7) 5) $generated@@169))))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 11) (- 0 12)) (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and ($generated@@53 $generated@@58 $generated@@179 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@179 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@180 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@180 ($generated@@59 $generated@@146) $generated@@147))) ($generated@@26 ($generated@@41 $generated@@179 $generated@@180) $generated@@180))
 :pattern ( ($generated@@41 $generated@@179 $generated@@180))
))) (=> (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and (and ($generated@@53 $generated@@58 $generated@@181 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@181 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@182 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@182 ($generated@@59 $generated@@146) $generated@@147))) ($generated@@26 ($generated@@41 $generated@@181 $generated@@182) $generated@@182))
 :pattern ( ($generated@@41 $generated@@181 $generated@@182))
)) (and (=> (= (ControlFlow 0 11) 7) $generated@@177) (=> (= (ControlFlow 0 11) 10) $generated@@176))))))
(let (($generated@@183  (=> (and (not (and (and ($generated@@53 $generated@@58 $generated@@153 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@153 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@154 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@154 ($generated@@59 $generated@@146) $generated@@147)))) (= (ControlFlow 0 14) 11)) $generated@@178)))
(let (($generated@@184  (=> (and (and (and ($generated@@53 $generated@@58 $generated@@153 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@153 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@154 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@154 ($generated@@59 $generated@@146) $generated@@147))) (= (ControlFlow 0 13) 11)) $generated@@178)))
(let (($generated@@185  (and (=> (= (ControlFlow 0 15) (- 0 16)) (forall (($generated@@186 T@U) ($generated@@187 T@U) )  (=> (and (and ($generated@@53 $generated@@58 $generated@@186 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@186 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@187 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@187 ($generated@@59 $generated@@146) $generated@@147))) (and (< ($generated@@20 $generated@@186) ($generated@@20 $generated@@187)) ($generated@@131 $generated@@186 $generated@@187 ($generated@@20 $generated@@186)))))) (=> (forall (($generated@@188 T@U) ($generated@@189 T@U) )  (=> (and (and ($generated@@53 $generated@@58 $generated@@188 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@188 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@189 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@189 ($generated@@59 $generated@@146) $generated@@147))) (and (< ($generated@@20 $generated@@188) ($generated@@20 $generated@@189)) ($generated@@131 $generated@@188 $generated@@189 ($generated@@20 $generated@@188))))) (and (=> (= (ControlFlow 0 15) 13) $generated@@184) (=> (= (ControlFlow 0 15) 14) $generated@@183))))))
(let (($generated@@190  (=> (and (not (and (and ($generated@@53 $generated@@58 $generated@@155 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@155 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@156 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@156 ($generated@@59 $generated@@146) $generated@@147)))) (= (ControlFlow 0 18) 15)) $generated@@185)))
(let (($generated@@191  (=> (and (and (and ($generated@@53 $generated@@58 $generated@@155 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@155 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@156 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@156 ($generated@@59 $generated@@146) $generated@@147))) (= (ControlFlow 0 17) 15)) $generated@@185)))
(let (($generated@@192  (and (=> (= (ControlFlow 0 19) (- 0 20)) (forall (($generated@@193 T@U) ($generated@@194 T@U) )  (=> (and (and ($generated@@53 $generated@@58 $generated@@193 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@193 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@194 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@194 ($generated@@59 $generated@@146) $generated@@147))) (and (<= ($generated@@20 $generated@@193) ($generated@@20 $generated@@194)) ($generated@@131 $generated@@193 $generated@@194 ($generated@@20 $generated@@193)))))) (=> (forall (($generated@@195 T@U) ($generated@@196 T@U) )  (=> (and (and ($generated@@53 $generated@@58 $generated@@195 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@195 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@196 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@196 ($generated@@59 $generated@@146) $generated@@147))) (and (<= ($generated@@20 $generated@@195) ($generated@@20 $generated@@196)) ($generated@@131 $generated@@195 $generated@@196 ($generated@@20 $generated@@195))))) (and (=> (= (ControlFlow 0 19) 17) $generated@@191) (=> (= (ControlFlow 0 19) 18) $generated@@190))))))
(let (($generated@@197  (=> (and (not (and (and ($generated@@53 $generated@@58 $generated@@157 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@157 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@158 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@158 ($generated@@59 $generated@@146) $generated@@147)))) (= (ControlFlow 0 22) 19)) $generated@@192)))
(let (($generated@@198  (=> (and (and (and ($generated@@53 $generated@@58 $generated@@157 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@157 ($generated@@59 $generated@@146) $generated@@147)) (and ($generated@@53 $generated@@58 $generated@@158 ($generated@@59 $generated@@146)) ($generated@@36 $generated@@58 $generated@@158 ($generated@@59 $generated@@146) $generated@@147))) (= (ControlFlow 0 21) 19)) $generated@@192)))
(let (($generated@@199  (=> (= $generated@@159 ($generated@@73 $generated@@160 $generated@@147 $generated@@0 false)) (and (=> (= (ControlFlow 0 23) 21) $generated@@198) (=> (= (ControlFlow 0 23) 22) $generated@@197)))))
(let (($generated@@200  (=> (and (and ($generated@@161 $generated@@147) ($generated@@162 $generated@@147)) (and (= 0 $generated@@163) (= (ControlFlow 0 24) 23))) $generated@@199)))
$generated@@200))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 19) (- 20))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 15) (- 16))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 11) (- 12))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 9))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Invalid
