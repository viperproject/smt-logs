(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@67 (Int Int) Int)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Int)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@88 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@92 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T T@T) T@T)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@98 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (! ($generated@@23 $generated@@9 $generated@@25 $generated@@24 $generated@@26)
 :pattern ( ($generated@@23 $generated@@9 $generated@@25 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@23 $generated@@9 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@23 $generated@@9 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@31 $generated@@32))
 :pattern ( ($generated@@30 $generated@@32))
)))
(assert (= ($generated@@7 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36)) ($generated@@31 $generated@@37))
 :pattern ( ($generated@@31 $generated@@37) ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36)))
)))
(assert (forall (($generated@@39 Int) ) (! (= ($generated@@38 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@31 $generated@@44) (= ($generated@@43 $generated@@44) $generated@@3))
 :pattern ( ($generated@@31 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 ($generated@@45 $generated@@48 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@45 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@31 $generated@@50) (exists (($generated@@51 T@U) ) (= $generated@@50 ($generated@@49 $generated@@51))))
 :pattern ( ($generated@@31 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@52 ($generated@@46 $generated@@56 $generated@@53) $generated@@54 $generated@@55) ($generated@@23 $generated@@56 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@52 ($generated@@46 $generated@@56 $generated@@53) $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@59 T@U) ) (!  (and (= ($generated@@57 ($generated@@35 $generated@@59)) $generated@@0) (= ($generated@@58 ($generated@@35 $generated@@59)) $generated@@4))
 :pattern ( ($generated@@35 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@60 $generated@@61 $generated@@24) (and (= ($generated@@46 $generated@@9 ($generated@@45 $generated@@9 $generated@@61)) $generated@@61) ($generated@@33 $generated@@9 ($generated@@45 $generated@@9 $generated@@61) $generated@@24)))
 :pattern ( ($generated@@60 $generated@@61 $generated@@24))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@60 $generated@@62 $generated@@27) (and (= ($generated@@46 $generated@@9 ($generated@@45 $generated@@9 $generated@@62)) $generated@@62) ($generated@@33 $generated@@9 ($generated@@45 $generated@@9 $generated@@62) $generated@@27)))
 :pattern ( ($generated@@60 $generated@@62 $generated@@27))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@63 $generated@@66) (= ($generated@@23 $generated@@34 ($generated@@49 $generated@@65) ($generated@@35 $generated@@64) $generated@@66) ($generated@@52 $generated@@65 $generated@@64 $generated@@66)))
 :pattern ( ($generated@@23 $generated@@34 ($generated@@49 $generated@@65) ($generated@@35 $generated@@64) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@33 $generated@@9 $generated@@68 $generated@@24) (= ($generated@@67 ($generated@@14 $generated@@68) ($generated@@38 2)) ($generated@@38 0)))
 :pattern ( ($generated@@33 $generated@@9 $generated@@68 $generated@@24))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@33 $generated@@9 $generated@@69 $generated@@27)  (and (= ($generated@@67 ($generated@@14 $generated@@69) ($generated@@38 2)) ($generated@@38 0)) (<= ($generated@@38 0) ($generated@@14 $generated@@69))))
 :pattern ( ($generated@@33 $generated@@9 $generated@@69 $generated@@27))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@60 ($generated@@46 $generated@@72 $generated@@70) $generated@@71) ($generated@@33 $generated@@72 $generated@@70 $generated@@71))
 :pattern ( ($generated@@60 ($generated@@46 $generated@@72 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 ($generated@@35 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@35 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@43 ($generated@@49 $generated@@75)) $generated@@3)
 :pattern ( ($generated@@49 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 ($generated@@49 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@49 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@45 $generated@@79 ($generated@@46 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@46 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@49 $generated@@81) ($generated@@35 $generated@@80)) ($generated@@60 $generated@@81 $generated@@80))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@49 $generated@@81) ($generated@@35 $generated@@80)))
)))
(assert (forall (($generated@@84 T@U) ) (! (< ($generated@@82 $generated@@84) ($generated@@83 ($generated@@49 $generated@@84)))
 :pattern ( ($generated@@49 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and ($generated@@63 $generated@@87) (and ($generated@@31 $generated@@85) ($generated@@23 $generated@@34 $generated@@85 ($generated@@35 $generated@@86) $generated@@87))) ($generated@@52 ($generated@@76 $generated@@85) $generated@@86 $generated@@87))
 :pattern ( ($generated@@52 ($generated@@76 $generated@@85) $generated@@86 $generated@@87))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@88 $generated@@99 $generated@@100 $generated@@101 ($generated@@95 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@104 $generated@@105) $generated@@102)
 :weight 0
)) (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@88 $generated@@106 $generated@@107 $generated@@108 ($generated@@95 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@113 $generated@@114) ($generated@@88 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@113 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@88 $generated@@115 $generated@@116 $generated@@117 ($generated@@95 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@88 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)))) (= ($generated@@7 $generated@@89) 4)) (= ($generated@@7 $generated@@90) 5)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@92 $generated@@124 $generated@@125 ($generated@@96 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@126) $generated@@128) $generated@@126)
 :weight 0
))) (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@133 $generated@@134) (= ($generated@@92 $generated@@129 $generated@@130 ($generated@@96 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@131) $generated@@134) ($generated@@92 $generated@@129 $generated@@130 $generated@@132 $generated@@134)))
 :weight 0
))) (= ($generated@@7 $generated@@93) 6)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (= ($generated@@7 ($generated@@94 $generated@@135 $generated@@136)) 7))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (! (= ($generated@@97 ($generated@@94 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@94 $generated@@137 $generated@@138))
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@98 ($generated@@94 $generated@@139 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@94 $generated@@139 $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 Bool) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@12 ($generated@@88 $generated@@89 $generated@@90 $generated@@8 ($generated@@91 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))  (=> (and (or (not (= $generated@@145 $generated@@141)) (not true)) ($generated@@12 ($generated@@45 $generated@@8 ($generated@@92 $generated@@90 $generated@@93 ($generated@@92 $generated@@89 ($generated@@94 $generated@@90 $generated@@93) $generated@@142 $generated@@145) $generated@@143)))) $generated@@144))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90 $generated@@8 ($generated@@91 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 Int) ($generated@@148 Int) ) (! (= ($generated@@67 $generated@@147 $generated@@148) (mod $generated@@147 $generated@@148))
 :pattern ( ($generated@@67 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@82 ($generated@@46 $generated@@34 $generated@@149)) ($generated@@83 $generated@@149))
 :pattern ( ($generated@@82 ($generated@@46 $generated@@34 $generated@@149)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@60 $generated@@151 ($generated@@35 $generated@@150)) (and (= ($generated@@46 $generated@@34 ($generated@@45 $generated@@34 $generated@@151)) $generated@@151) ($generated@@33 $generated@@34 ($generated@@45 $generated@@34 $generated@@151) ($generated@@35 $generated@@150))))
 :pattern ( ($generated@@60 $generated@@151 ($generated@@35 $generated@@150)))
)))
(assert (= ($generated@@57 $generated@@24) $generated@@1))
(assert (= ($generated@@58 $generated@@24) $generated@@5))
(assert (= ($generated@@57 $generated@@27) $generated@@2))
(assert (= ($generated@@58 $generated@@27) $generated@@6))
(assert (forall (($generated@@152 Int) ) (! (= ($generated@@46 $generated@@9 ($generated@@13 ($generated@@38 $generated@@152))) ($generated@@40 $generated@@93 ($generated@@46 $generated@@9 ($generated@@13 $generated@@152))))
 :pattern ( ($generated@@46 $generated@@9 ($generated@@13 ($generated@@38 $generated@@152))))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@49 ($generated@@40 $generated@@93 $generated@@153)) ($generated@@40 $generated@@34 ($generated@@49 $generated@@153)))
 :pattern ( ($generated@@49 ($generated@@40 $generated@@93 $generated@@153)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@46 $generated@@155 ($generated@@40 $generated@@155 $generated@@154)) ($generated@@40 $generated@@93 ($generated@@46 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@46 $generated@@155 ($generated@@40 $generated@@155 $generated@@154)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@166 true))
(let (($generated@@167  (=> (and (= $generated@@156 ($generated@@49 ($generated@@46 $generated@@9 ($generated@@13 $generated@@157)))) (= ($generated@@67 $generated@@157 ($generated@@38 2)) ($generated@@38 0))) (=> (and (and (= ($generated@@67 $generated@@158 ($generated@@38 2)) ($generated@@38 0)) (<= ($generated@@38 0) $generated@@158)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@33 $generated@@9 ($generated@@13 $generated@@157) $generated@@27)))))
(let (($generated@@168  (=> (= ($generated@@14 ($generated@@45 $generated@@9 ($generated@@76 $generated@@156))) $generated@@159) (and (=> (= (ControlFlow 0 5) 3) $generated@@167) (=> (= (ControlFlow 0 5) 4) $generated@@166)))))
(let (($generated@@169 true))
(let (($generated@@170  (=> (= $generated@@160 ($generated@@91 $generated@@161 $generated@@162 $generated false)) (=> (and ($generated@@31 $generated@@156) ($generated@@31 $generated@@156)) (and (=> (= (ControlFlow 0 6) 5) $generated@@168) (=> (= (ControlFlow 0 6) 1) $generated@@169))))))
(let (($generated@@171  (=> (and ($generated@@63 $generated@@162) ($generated@@163 $generated@@162)) (=> (and (and (and (and ($generated@@33 $generated@@34 $generated@@156 ($generated@@35 $generated@@24)) ($generated@@23 $generated@@34 $generated@@156 ($generated@@35 $generated@@24) $generated@@162)) ($generated@@30 $generated@@156)) ($generated@@12 ($generated@@40 $generated@@8 ($generated@@11 true)))) (and (and (and (= ($generated@@67 $generated@@164 ($generated@@38 2)) ($generated@@38 0)) (<= ($generated@@38 0) $generated@@164)) (= 3 $generated@@165)) (and (=> (< $generated@@159 0) (= ($generated@@67 $generated@@159 ($generated@@38 2)) ($generated@@38 1))) (= (ControlFlow 0 7) 6)))) $generated@@170))))
$generated@@171)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
