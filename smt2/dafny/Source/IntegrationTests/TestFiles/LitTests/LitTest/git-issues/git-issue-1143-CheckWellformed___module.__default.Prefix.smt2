(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U Int) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U Int) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@30 (T@U T@U) Int)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T T@T) T@T)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@27) 3))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 Int) ) (!  (=> (or ($generated@@25 $generated@@37 $generated@@38) (and (< 2 $generated@@22) (and (and ($generated@@26 $generated@@27 $generated@@37 $generated@@28) (<= ($generated@@29 0) $generated@@38)) (and (<= $generated@@38 ($generated@@30 ($generated@@24 $generated@@31) $generated@@37)) (<= $generated@@38 ($generated@@32 ($generated@@24 $generated@@31) $generated@@37)))))) (and (=> (or (not (= $generated@@38 ($generated@@29 0))) (not true)) ($generated@@25 ($generated@@33 $generated@@37) (- $generated@@38 1))) (= ($generated@@23 ($generated@@24 $generated@@36) $generated@@37 $generated@@38) (ite (= $generated@@38 ($generated@@29 0)) $generated@@34 ($generated@@35 ($generated@@23 $generated@@36 ($generated@@33 $generated@@37) (- $generated@@38 1)))))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@36) $generated@@37 $generated@@38))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! ($generated@@39 $generated@@8 $generated@@41 $generated@@40 $generated@@42)
 :pattern ( ($generated@@39 $generated@@8 $generated@@41 $generated@@40 $generated@@42))
)))
(assert (= ($generated@@43 $generated@@34) $generated@@2))
(assert ($generated@@26 $generated@@27 $generated@@34 $generated@@28))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@46) (= $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@29 $generated@@47) $generated@@47)
 :pattern ( ($generated@@29 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@43 $generated@@52) $generated@@2))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@43 $generated@@54) $generated@@3))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@51 $generated@@59) (= $generated@@59 $generated@@34))
 :pattern ( ($generated@@51 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@53 $generated@@60) (exists (($generated@@61 T@U) ) (= $generated@@60 ($generated@@35 $generated@@61))))
 :pattern ( ($generated@@53 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@26 $generated@@8 $generated@@62 $generated@@40) (<= ($generated@@29 0) ($generated@@13 $generated@@62)))
 :pattern ( ($generated@@26 $generated@@8 $generated@@62 $generated@@40))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@63 ($generated@@56 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@39 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@63 ($generated@@56 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 Int) ) (!  (=> (or ($generated@@25 $generated@@69 $generated@@70) (and (< 2 $generated@@22) (and (and ($generated@@26 $generated@@27 $generated@@69 $generated@@28) (<= ($generated@@29 0) $generated@@70)) (and (<= $generated@@70 ($generated@@30 ($generated@@24 $generated@@31) $generated@@69)) (<= $generated@@70 ($generated@@32 ($generated@@24 $generated@@31) $generated@@69)))))) (and (and (= ($generated@@32 ($generated@@24 $generated@@31) ($generated@@23 $generated@@68 $generated@@69 $generated@@70)) $generated@@70) (= ($generated@@30 ($generated@@24 $generated@@31) ($generated@@23 $generated@@68 $generated@@69 $generated@@70)) $generated@@70)) ($generated@@26 $generated@@27 ($generated@@23 $generated@@68 $generated@@69 $generated@@70) $generated@@28)))
 :pattern ( ($generated@@23 $generated@@68 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@35 $generated@@71) $generated@@28) ($generated@@26 $generated@@27 $generated@@71 $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@35 $generated@@71) $generated@@28))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (and ($generated@@53 $generated@@72) ($generated@@53 $generated@@73)) (= ($generated@@44 $generated@@72 $generated@@73) ($generated@@44 ($generated@@33 $generated@@72) ($generated@@33 $generated@@73))))
 :pattern ( ($generated@@44 $generated@@72 $generated@@73) ($generated@@53 $generated@@72))
 :pattern ( ($generated@@44 $generated@@72 $generated@@73) ($generated@@53 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 Int) ) (! (= ($generated@@23 ($generated@@24 $generated@@74) $generated@@75 $generated@@76) ($generated@@23 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@74) $generated@@75 $generated@@76))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@77 ($generated@@48 $generated@@27 $generated@@79)) (and (< 1 $generated@@22) ($generated@@26 $generated@@27 $generated@@79 $generated@@28))) (and (=> (not ($generated@@11 ($generated@@48 $generated@@7 ($generated@@10 ($generated@@51 ($generated@@48 $generated@@27 $generated@@79)))))) (let (($generated@@80 ($generated@@48 $generated@@27 ($generated@@33 ($generated@@48 $generated@@27 $generated@@79)))))
($generated@@77 $generated@@80))) (= ($generated@@32 ($generated@@24 $generated@@78) ($generated@@48 $generated@@27 $generated@@79)) (ite ($generated@@51 ($generated@@48 $generated@@27 $generated@@79)) 0 (let (($generated@@81 ($generated@@48 $generated@@27 ($generated@@33 ($generated@@48 $generated@@27 $generated@@79)))))
($generated@@29 (+ 1 ($generated@@32 ($generated@@24 $generated@@78) $generated@@81))))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@24 $generated@@78) ($generated@@48 $generated@@27 $generated@@79)))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@82 ($generated@@48 $generated@@27 $generated@@84)) (and (< 1 $generated@@22) ($generated@@26 $generated@@27 $generated@@84 $generated@@28))) (and (=> (not ($generated@@11 ($generated@@48 $generated@@7 ($generated@@10 ($generated@@51 ($generated@@48 $generated@@27 $generated@@84)))))) (let (($generated@@85 ($generated@@48 $generated@@27 ($generated@@33 ($generated@@48 $generated@@27 $generated@@84)))))
($generated@@82 $generated@@85))) (= ($generated@@30 ($generated@@24 $generated@@83) ($generated@@48 $generated@@27 $generated@@84)) (ite ($generated@@51 ($generated@@48 $generated@@27 $generated@@84)) 0 (let (($generated@@86 ($generated@@48 $generated@@27 ($generated@@33 ($generated@@48 $generated@@27 $generated@@84)))))
($generated@@29 (+ 1 ($generated@@30 ($generated@@24 $generated@@83) $generated@@86))))))))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@24 $generated@@83) ($generated@@48 $generated@@27 $generated@@84)))
))))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@87 $generated@@28) (or ($generated@@51 $generated@@87) ($generated@@53 $generated@@87)))
 :pattern ( ($generated@@53 $generated@@87) ($generated@@26 $generated@@27 $generated@@87 $generated@@28))
 :pattern ( ($generated@@51 $generated@@87) ($generated@@26 $generated@@27 $generated@@87 $generated@@28))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and ($generated@@51 $generated@@88) ($generated@@51 $generated@@89)) ($generated@@44 $generated@@88 $generated@@89))
 :pattern ( ($generated@@44 $generated@@88 $generated@@89) ($generated@@51 $generated@@88))
 :pattern ( ($generated@@44 $generated@@88 $generated@@89) ($generated@@51 $generated@@89))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (or ($generated@@25 ($generated@@48 $generated@@27 $generated@@91) ($generated@@29 $generated@@92)) (and (< 2 $generated@@22) (and (and ($generated@@26 $generated@@27 $generated@@91 $generated@@28) (<= ($generated@@29 0) $generated@@92)) (and (<= ($generated@@29 $generated@@92) ($generated@@29 ($generated@@30 ($generated@@24 $generated@@31) ($generated@@48 $generated@@27 $generated@@91)))) (<= ($generated@@29 $generated@@92) ($generated@@29 ($generated@@32 ($generated@@24 $generated@@31) ($generated@@48 $generated@@27 $generated@@91)))))))) (and (=> (or (not (= ($generated@@29 $generated@@92) ($generated@@29 0))) (not true)) ($generated@@25 ($generated@@48 $generated@@27 ($generated@@33 ($generated@@48 $generated@@27 $generated@@91))) ($generated@@29 (- $generated@@92 1)))) (= ($generated@@23 ($generated@@24 $generated@@90) ($generated@@48 $generated@@27 $generated@@91) ($generated@@29 $generated@@92)) (ite (= ($generated@@29 $generated@@92) ($generated@@29 0)) $generated@@34 ($generated@@35 ($generated@@48 $generated@@27 ($generated@@23 ($generated@@24 $generated@@90) ($generated@@48 $generated@@27 ($generated@@33 ($generated@@48 $generated@@27 $generated@@91))) ($generated@@29 (- $generated@@92 1)))))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@90) ($generated@@48 $generated@@27 $generated@@91) ($generated@@29 $generated@@92)))
))))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@43 ($generated@@35 $generated@@93)) $generated@@3)
 :pattern ( ($generated@@35 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@33 ($generated@@35 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@35 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@55 $generated@@96 ($generated@@56 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@56 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@32 ($generated@@24 $generated@@97) $generated@@98) ($generated@@32 $generated@@97 $generated@@98))
 :pattern ( ($generated@@32 ($generated@@24 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@30 ($generated@@24 $generated@@99) $generated@@100) ($generated@@30 $generated@@99 $generated@@100))
 :pattern ( ($generated@@30 ($generated@@24 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (< ($generated@@101 $generated@@102) ($generated@@101 ($generated@@35 $generated@@102)))
 :pattern ( ($generated@@35 $generated@@102))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@103 $generated@@114 $generated@@115 $generated@@116 ($generated@@110 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@103 $generated@@121 $generated@@122 $generated@@123 ($generated@@110 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@103 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@103 $generated@@130 $generated@@131 $generated@@132 ($generated@@110 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))) (= ($generated@@6 $generated@@104) 4)) (= ($generated@@6 $generated@@105) 5)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@107 $generated@@139 $generated@@140 ($generated@@111 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@143) $generated@@141)
 :weight 0
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@148 $generated@@149) (= ($generated@@107 $generated@@144 $generated@@145 ($generated@@111 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@107 $generated@@144 $generated@@145 $generated@@147 $generated@@149)))
 :weight 0
))) (= ($generated@@6 $generated@@108) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@6 ($generated@@109 $generated@@150 $generated@@151)) 7))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@112 ($generated@@109 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@109 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@113 ($generated@@109 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@109 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@11 ($generated@@103 $generated@@104 $generated@@105 $generated@@7 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@11 ($generated@@55 $generated@@7 ($generated@@107 $generated@@105 $generated@@108 ($generated@@107 $generated@@104 ($generated@@109 $generated@@105 $generated@@108) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105 $generated@@7 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@162 $generated@@164) ($generated@@26 $generated@@27 $generated@@163 $generated@@28)) ($generated@@39 $generated@@27 $generated@@163 $generated@@28 $generated@@164))
 :pattern ( ($generated@@39 $generated@@27 $generated@@163 $generated@@28 $generated@@164))
)))
(assert (= ($generated@@165 $generated@@40) $generated@@0))
(assert (= ($generated@@166 $generated@@40) $generated@@4))
(assert (= ($generated@@165 $generated@@28) $generated@@1))
(assert (= ($generated@@166 $generated@@28) $generated@@5))
(assert (= $generated@@34 ($generated@@48 $generated@@27 $generated@@34)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@162 $generated@@168) (and ($generated@@53 $generated@@167) ($generated@@39 $generated@@27 $generated@@167 $generated@@28 $generated@@168))) ($generated@@39 $generated@@27 ($generated@@33 $generated@@167) $generated@@28 $generated@@168))
 :pattern ( ($generated@@39 $generated@@27 ($generated@@33 $generated@@167) $generated@@28 $generated@@168))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (or ($generated@@77 $generated@@170) (and (< 1 $generated@@22) ($generated@@26 $generated@@27 $generated@@170 $generated@@28))) (and (=> (not ($generated@@51 $generated@@170)) (let (($generated@@171 ($generated@@33 $generated@@170)))
($generated@@77 $generated@@171))) (= ($generated@@32 ($generated@@24 $generated@@169) $generated@@170) (ite ($generated@@51 $generated@@170) 0 (let (($generated@@172 ($generated@@33 $generated@@170)))
(+ 1 ($generated@@32 $generated@@169 $generated@@172)))))))
 :pattern ( ($generated@@32 ($generated@@24 $generated@@169) $generated@@170))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (or ($generated@@82 $generated@@174) (and (< 1 $generated@@22) ($generated@@26 $generated@@27 $generated@@174 $generated@@28))) (and (=> (not ($generated@@51 $generated@@174)) (let (($generated@@175 ($generated@@33 $generated@@174)))
($generated@@82 $generated@@175))) (= ($generated@@30 ($generated@@24 $generated@@173) $generated@@174) (ite ($generated@@51 $generated@@174) 0 (let (($generated@@176 ($generated@@33 $generated@@174)))
(+ 1 ($generated@@30 $generated@@173 $generated@@176)))))))
 :pattern ( ($generated@@30 ($generated@@24 $generated@@173) $generated@@174))
))))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@56 $generated@@8 ($generated@@12 ($generated@@29 $generated@@177))) ($generated@@48 $generated@@108 ($generated@@56 $generated@@8 ($generated@@12 $generated@@177))))
 :pattern ( ($generated@@56 $generated@@8 ($generated@@12 ($generated@@29 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@35 ($generated@@48 $generated@@27 $generated@@178)) ($generated@@48 $generated@@27 ($generated@@35 $generated@@178)))
 :pattern ( ($generated@@35 ($generated@@48 $generated@@27 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@56 $generated@@180 ($generated@@48 $generated@@180 $generated@@179)) ($generated@@48 $generated@@108 ($generated@@56 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@56 $generated@@180 ($generated@@48 $generated@@180 $generated@@179)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@190  (and (=> (= (ControlFlow 0 11) (- 0 12)) (= ($generated@@32 ($generated@@24 ($generated@@24 $generated@@31)) ($generated@@23 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@181 $generated@@182)) $generated@@182)) (=> (= ($generated@@32 ($generated@@24 ($generated@@24 $generated@@31)) ($generated@@23 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@181 $generated@@182)) $generated@@182) (=> (= (ControlFlow 0 11) (- 0 10)) (= ($generated@@30 ($generated@@24 ($generated@@24 $generated@@31)) ($generated@@23 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@181 $generated@@182)) $generated@@182))))))
(let (($generated@@191  (=> (or (not (= $generated@@182 ($generated@@29 0))) (not true)) (and (=> (= (ControlFlow 0 14) (- 0 20)) ($generated@@53 $generated@@181)) (=> ($generated@@53 $generated@@181) (=> (and (= $generated@@183 ($generated@@33 $generated@@181)) ($generated@@39 $generated@@27 $generated@@183 $generated@@28 $generated@@184)) (and (=> (= (ControlFlow 0 14) (- 0 19)) ($generated@@26 $generated@@8 ($generated@@12 (- $generated@@182 1)) $generated@@40)) (=> ($generated@@26 $generated@@8 ($generated@@12 (- $generated@@182 1)) $generated@@40) (=> (and (= $generated@@185 (- $generated@@182 1)) ($generated@@39 $generated@@8 ($generated@@12 $generated@@185) $generated@@40 $generated@@184)) (and (=> (= (ControlFlow 0 14) (- 0 18)) (<= $generated@@185 ($generated@@30 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@183))) (and (=> (= (ControlFlow 0 14) (- 0 17)) (<= $generated@@185 ($generated@@32 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@183))) (=> (and (<= $generated@@185 ($generated@@30 ($generated@@24 $generated@@31) $generated@@183)) (<= $generated@@185 ($generated@@32 ($generated@@24 $generated@@31) $generated@@183))) (and (=> (= (ControlFlow 0 14) (- 0 16)) (or (or (<= 0 $generated@@182) (< ($generated@@101 $generated@@183) ($generated@@101 $generated@@181))) (= $generated@@185 $generated@@182))) (=> (or (or (<= 0 $generated@@182) (< ($generated@@101 $generated@@183) ($generated@@101 $generated@@181))) (= $generated@@185 $generated@@182)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (or (< ($generated@@101 $generated@@183) ($generated@@101 $generated@@181)) (and (= ($generated@@101 $generated@@183) ($generated@@101 $generated@@181)) (< $generated@@185 $generated@@182)))) (=> (or (< ($generated@@101 $generated@@183) ($generated@@101 $generated@@181)) (and (= ($generated@@101 $generated@@183) ($generated@@101 $generated@@181)) (< $generated@@185 $generated@@182))) (=> ($generated@@25 ($generated@@33 $generated@@181) (- $generated@@182 1)) (=> (and (and (= ($generated@@23 ($generated@@24 $generated@@31) $generated@@181 $generated@@182) ($generated@@35 ($generated@@23 ($generated@@24 $generated@@31) ($generated@@33 $generated@@181) (- $generated@@182 1)))) ($generated@@25 ($generated@@33 $generated@@181) (- $generated@@182 1))) (and ($generated@@26 $generated@@27 ($generated@@23 ($generated@@24 $generated@@31) $generated@@181 $generated@@182) $generated@@28) (= (ControlFlow 0 14) 11))) $generated@@190))))))))))))))))))
(let (($generated@@192  (=> (and (and (= $generated@@182 ($generated@@29 0)) (= ($generated@@23 ($generated@@24 $generated@@31) $generated@@181 $generated@@182) ($generated@@48 $generated@@27 $generated@@34))) (and ($generated@@26 $generated@@27 ($generated@@23 ($generated@@24 $generated@@31) $generated@@181 $generated@@182) $generated@@28) (= (ControlFlow 0 13) 11))) $generated@@190)))
(let (($generated@@193  (=> ($generated@@26 $generated@@27 ($generated@@23 ($generated@@24 $generated@@31) $generated@@181 $generated@@182) $generated@@28) (=> (and ($generated@@39 $generated@@27 $generated@@181 $generated@@28 $generated@@184) ($generated@@39 $generated@@8 ($generated@@12 $generated@@182) $generated@@40 $generated@@184)) (and (=> (= (ControlFlow 0 2) (- 0 9)) (<= $generated@@182 ($generated@@30 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@181))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (<= $generated@@182 ($generated@@32 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@181))) (=> (and (<= $generated@@182 ($generated@@30 ($generated@@24 $generated@@31) $generated@@181)) (<= $generated@@182 ($generated@@32 ($generated@@24 $generated@@31) $generated@@181))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (or (<= 0 $generated@@182) (< ($generated@@101 $generated@@181) ($generated@@101 $generated@@181))) (= $generated@@182 $generated@@182))) (=> (or (or (<= 0 $generated@@182) (< ($generated@@101 $generated@@181) ($generated@@101 $generated@@181))) (= $generated@@182 $generated@@182)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (and ($generated@@44 $generated@@181 $generated@@181) (= $generated@@182 $generated@@182)) (or (< ($generated@@101 $generated@@181) ($generated@@101 $generated@@181)) (and (= ($generated@@101 $generated@@181) ($generated@@101 $generated@@181)) (< $generated@@182 $generated@@182))))) (=> (or (and ($generated@@44 $generated@@181 $generated@@181) (= $generated@@182 $generated@@182)) (or (< ($generated@@101 $generated@@181) ($generated@@101 $generated@@181)) (and (= ($generated@@101 $generated@@181) ($generated@@101 $generated@@181)) (< $generated@@182 $generated@@182)))) (=> (or (and ($generated@@44 $generated@@181 $generated@@181) (= $generated@@182 $generated@@182)) ($generated@@25 $generated@@181 $generated@@182)) (=> (and (= $generated@@186 ($generated@@23 ($generated@@24 $generated@@31) $generated@@181 $generated@@182)) ($generated@@39 $generated@@27 $generated@@186 $generated@@28 $generated@@184)) (=> (and (and ($generated@@77 ($generated@@23 ($generated@@24 $generated@@31) $generated@@181 $generated@@182)) (= ($generated@@32 ($generated@@24 $generated@@31) ($generated@@23 ($generated@@24 $generated@@31) $generated@@181 $generated@@182)) $generated@@182)) (and ($generated@@39 $generated@@27 $generated@@181 $generated@@28 $generated@@184) ($generated@@39 $generated@@8 ($generated@@12 $generated@@182) $generated@@40 $generated@@184))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= $generated@@182 ($generated@@30 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@181))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@182 ($generated@@32 ($generated@@24 ($generated@@24 $generated@@31)) $generated@@181))) (=> (and (<= $generated@@182 ($generated@@30 ($generated@@24 $generated@@31) $generated@@181)) (<= $generated@@182 ($generated@@32 ($generated@@24 $generated@@31) $generated@@181))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (or (<= 0 $generated@@182) (< ($generated@@101 $generated@@181) ($generated@@101 $generated@@181))) (= $generated@@182 $generated@@182))) (=> (or (or (<= 0 $generated@@182) (< ($generated@@101 $generated@@181) ($generated@@101 $generated@@181))) (= $generated@@182 $generated@@182)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and ($generated@@44 $generated@@181 $generated@@181) (= $generated@@182 $generated@@182)) (or (< ($generated@@101 $generated@@181) ($generated@@101 $generated@@181)) (and (= ($generated@@101 $generated@@181) ($generated@@101 $generated@@181)) (< $generated@@182 $generated@@182))))))))))))))))))))))))
(let (($generated@@194  (=> (= $generated@@187 ($generated@@106 $generated@@188 $generated@@184 $generated false)) (=> (and ($generated@@63 ($generated@@56 $generated@@27 $generated@@181) $generated@@28 $generated@@184) ($generated@@82 $generated@@181)) (=> (and (and (<= $generated@@182 ($generated@@30 ($generated@@24 $generated@@31) $generated@@181)) ($generated@@39 $generated@@27 $generated@@181 $generated@@28 $generated@@184)) (and ($generated@@77 $generated@@181) (<= $generated@@182 ($generated@@32 ($generated@@24 $generated@@31) $generated@@181)))) (and (and (=> (= (ControlFlow 0 21) 2) $generated@@193) (=> (= (ControlFlow 0 21) 13) $generated@@192)) (=> (= (ControlFlow 0 21) 14) $generated@@191)))))))
(let (($generated@@195  (=> (and ($generated@@162 $generated@@184) ($generated@@189 $generated@@184)) (=> (and (and ($generated@@26 $generated@@27 $generated@@181 $generated@@28) (<= ($generated@@29 0) $generated@@182)) (and (= 2 $generated@@22) (= (ControlFlow 0 22) 21))) $generated@@194))))
$generated@@195)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
