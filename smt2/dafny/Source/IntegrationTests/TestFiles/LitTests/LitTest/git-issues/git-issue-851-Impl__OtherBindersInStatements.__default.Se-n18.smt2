(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@70 (Int) Int)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@U T@U) Bool)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@101 (Int Int) Int)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U T@U Bool T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and ($generated@@26 $generated@@30 $generated@@27 $generated@@31) ($generated@@28 $generated@@31)) ($generated@@26 $generated@@30 $generated@@29 $generated@@31))
 :pattern ( ($generated@@26 $generated@@30 $generated@@27 $generated@@31))
)))
(assert (= ($generated@@9 $generated@@33) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@35 $generated@@34 $generated@@36) ($generated@@32 $generated@@33 $generated@@35 $generated@@29 $generated@@36))
 :pattern ( ($generated@@32 $generated@@33 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@32 $generated@@33 $generated@@35 $generated@@29 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@38 $generated@@37 $generated@@39) ($generated@@32 $generated@@33 $generated@@38 $generated@@27 $generated@@39))
 :pattern ( ($generated@@32 $generated@@33 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@32 $generated@@33 $generated@@38 $generated@@27 $generated@@39))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@9 $generated@@43) 4)) (= ($generated@@9 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@9 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@66 $generated@@29 $generated@@67)  (or (= $generated@@66 $generated@@40) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@33 ($generated@@45 $generated@@43 $generated@@44) $generated@@67 $generated@@66) $generated@@2)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@66 $generated@@29 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@68 $generated@@27 $generated@@69)  (or (= $generated@@68 $generated@@40) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@33 ($generated@@45 $generated@@43 $generated@@44) $generated@@69 $generated@@68) $generated@@2)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@68 $generated@@27 $generated@@69))
)))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@70 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@41 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@41 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@78 ($generated@@79 $generated@@80) $generated@@81) ($generated@@14 ($generated@@42 $generated@@44 $generated@@10 $generated@@80 $generated@@81)))
 :pattern ( ($generated@@78 ($generated@@79 $generated@@80) $generated@@81))
)))
(assert (= ($generated@@9 $generated@@83) 7))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@82 $generated@@83 $generated@@86 ($generated@@84 $generated@@87)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@78 $generated@@86 $generated@@88) ($generated@@85 $generated@@88 $generated@@87))
 :pattern ( ($generated@@78 $generated@@86 $generated@@88))
)))
 :pattern ( ($generated@@82 $generated@@83 $generated@@86 ($generated@@84 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@26 ($generated@@75 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@32 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@26 ($generated@@75 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@85 $generated@@93 $generated@@29) (and (= ($generated@@75 $generated@@33 ($generated@@41 $generated@@33 $generated@@93)) $generated@@93) ($generated@@82 $generated@@33 ($generated@@41 $generated@@33 $generated@@93) $generated@@29)))
 :pattern ( ($generated@@85 $generated@@93 $generated@@29))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@85 $generated@@94 $generated@@34) (and (= ($generated@@75 $generated@@33 ($generated@@41 $generated@@33 $generated@@94)) $generated@@94) ($generated@@82 $generated@@33 ($generated@@41 $generated@@33 $generated@@94) $generated@@34)))
 :pattern ( ($generated@@85 $generated@@94 $generated@@34))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@85 $generated@@95 $generated@@37) (and (= ($generated@@75 $generated@@33 ($generated@@41 $generated@@33 $generated@@95)) $generated@@95) ($generated@@82 $generated@@33 ($generated@@41 $generated@@33 $generated@@95) $generated@@37)))
 :pattern ( ($generated@@85 $generated@@95 $generated@@37))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@85 $generated@@96 $generated@@27) (and (= ($generated@@75 $generated@@33 ($generated@@41 $generated@@33 $generated@@96)) $generated@@96) ($generated@@82 $generated@@33 ($generated@@41 $generated@@33 $generated@@96) $generated@@27)))
 :pattern ( ($generated@@85 $generated@@96 $generated@@27))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@97 $generated@@34)  (and ($generated@@82 $generated@@33 $generated@@97 $generated@@29) (or (not (= $generated@@97 $generated@@40)) (not true))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@97 $generated@@34))
 :pattern ( ($generated@@82 $generated@@33 $generated@@97 $generated@@29))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@98 $generated@@37)  (and ($generated@@82 $generated@@33 $generated@@98 $generated@@27) (or (not (= $generated@@98 $generated@@40)) (not true))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@98 $generated@@37))
 :pattern ( ($generated@@82 $generated@@33 $generated@@98 $generated@@27))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@99 $generated@@27 $generated@@100) ($generated@@32 $generated@@33 $generated@@99 $generated@@29 $generated@@100))
 :pattern ( ($generated@@32 $generated@@33 $generated@@99 $generated@@27 $generated@@100))
)))
(assert (forall (($generated@@102 Int) ($generated@@103 Int) ) (! (= ($generated@@101 $generated@@102 $generated@@103) (div $generated@@102 $generated@@103))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@85 $generated@@104 $generated) (and (= ($generated@@75 $generated@@10 ($generated@@41 $generated@@10 $generated@@104)) $generated@@104) ($generated@@82 $generated@@10 ($generated@@41 $generated@@10 $generated@@104) $generated)))
 :pattern ( ($generated@@85 $generated@@104 $generated))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@85 ($generated@@75 $generated@@107 $generated@@105) $generated@@106) ($generated@@82 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@85 ($generated@@75 $generated@@107 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@32 $generated@@83 $generated@@108 ($generated@@84 $generated@@109) $generated@@110) (forall (($generated@@111 T@U) ) (!  (=> ($generated@@78 $generated@@108 $generated@@111) ($generated@@26 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@78 $generated@@108 $generated@@111))
)))
 :pattern ( ($generated@@32 $generated@@83 $generated@@108 ($generated@@84 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! ($generated@@82 $generated@@33 $generated@@112 $generated@@29)
 :pattern ( ($generated@@82 $generated@@33 $generated@@112 $generated@@29))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@84 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@84 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@25 ($generated@@84 $generated@@115)) $generated@@1)
 :pattern ( ($generated@@84 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@41 $generated@@117 ($generated@@75 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@75 $generated@@117 $generated@@116))
)))
(assert  (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@118 $generated@@121 $generated@@122 $generated@@123 ($generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@126 $generated@@127) $generated@@124)
 :weight 0
)) (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@118 $generated@@128 $generated@@129 $generated@@130 ($generated@@120 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@118 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@118 $generated@@137 $generated@@138 $generated@@139 ($generated@@120 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@118 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@14 ($generated@@118 $generated@@33 $generated@@43 $generated@@10 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@14 ($generated@@41 $generated@@10 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@33 ($generated@@45 $generated@@43 $generated@@44) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@118 $generated@@33 $generated@@43 $generated@@10 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@14 ($generated@@42 $generated@@44 $generated@@10 ($generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158)) (exists (($generated@@159 T@U) )  (and (and (and ($generated@@82 $generated@@33 $generated@@159 $generated@@153) ($generated@@32 $generated@@33 $generated@@159 $generated@@154 $generated@@155)) $generated@@156) (= $generated@@158 $generated@@157))))
 :pattern ( ($generated@@42 $generated@@44 $generated@@10 ($generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@85 $generated@@160 ($generated@@84 $generated@@161)) (and (= ($generated@@75 $generated@@83 ($generated@@41 $generated@@83 $generated@@160)) $generated@@160) ($generated@@82 $generated@@83 ($generated@@41 $generated@@83 $generated@@160) ($generated@@84 $generated@@161))))
 :pattern ( ($generated@@85 $generated@@160 ($generated@@84 $generated@@161)))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@82 $generated@@33 $generated@@162 $generated@@27) ($generated@@82 $generated@@33 $generated@@162 $generated@@29))
 :pattern ( ($generated@@82 $generated@@33 $generated@@162 $generated@@27))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@85 $generated@@163 $generated@@27) ($generated@@85 $generated@@163 $generated@@29))
 :pattern ( ($generated@@85 $generated@@163 $generated@@27))
)))
(assert (= ($generated@@25 $generated@@29) $generated@@3))
(assert (= ($generated@@164 $generated@@29) $generated@@7))
(assert (= ($generated@@25 $generated@@34) $generated@@4))
(assert (= ($generated@@164 $generated@@34) $generated@@7))
(assert (= ($generated@@25 $generated@@37) $generated@@5))
(assert (= ($generated@@164 $generated@@37) $generated@@8))
(assert (= ($generated@@25 $generated@@27) $generated@@6))
(assert (= ($generated@@164 $generated@@27) $generated@@8))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@167 $generated@@27)  (or (= $generated@@167 $generated@@40) ($generated@@165 ($generated@@166 $generated@@167))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@167 $generated@@27))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@75 $generated@@11 ($generated@@15 ($generated@@70 $generated@@168))) ($generated@@72 $generated@@44 ($generated@@75 $generated@@11 ($generated@@15 $generated@@168))))
 :pattern ( ($generated@@75 $generated@@11 ($generated@@15 ($generated@@70 $generated@@168))))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@75 $generated@@170 ($generated@@72 $generated@@170 $generated@@169)) ($generated@@72 $generated@@44 ($generated@@75 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@75 $generated@@170 ($generated@@72 $generated@@170 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! ($generated@@32 $generated@@10 $generated@@172 $generated $generated@@171)
 :pattern ( ($generated@@32 $generated@@10 $generated@@172 $generated $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (! ($generated@@82 $generated@@10 $generated@@173 $generated)
 :pattern ( ($generated@@82 $generated@@10 $generated@@173 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@182  (=> (and (= $generated@@174 ($generated@@79 ($generated@@152 $generated@@37 $generated@@37 $generated@@175 ($generated@@14 ($generated@@72 $generated@@10 ($generated@@13 true))) ($generated@@75 $generated@@10 ($generated@@13 (= ($generated@@70 ($generated@@101 5 ($generated@@70 0))) ($generated@@70 19))))))) (= (ControlFlow 0 2) (- 0 1))) (or (not (= ($generated@@70 0) 0)) (not true)))))
(let (($generated@@183  (=> (and (not ($generated@@14 ($generated@@72 $generated@@10 ($generated@@13 true)))) (= (ControlFlow 0 7) 2)) $generated@@182)))
(let (($generated@@184  (=> ($generated@@14 ($generated@@72 $generated@@10 ($generated@@13 true))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (not (= $generated@@176 $generated@@40)) (not true))) (=> (or (not (= $generated@@176 $generated@@40)) (not true)) (=> (and (and ($generated@@28 $generated@@177) ($generated@@178 $generated@@177)) (and ($generated@@14 ($generated@@72 $generated@@10 ($generated@@13 false))) (= $generated@@175 $generated@@177))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (not (= ($generated@@70 0) 0)) (not true))) (=> (or (not (= ($generated@@70 0) 0)) (not true)) (=> (= (ControlFlow 0 4) 2) $generated@@182)))))))))
(let (($generated@@185  (=> (and ($generated@@82 $generated@@33 $generated@@176 $generated@@37) ($generated@@32 $generated@@33 $generated@@176 $generated@@37 $generated@@175)) (and (=> (= (ControlFlow 0 8) 4) $generated@@184) (=> (= (ControlFlow 0 8) 7) $generated@@183)))))
(let (($generated@@186  (=> (and (not (and ($generated@@82 $generated@@33 $generated@@176 $generated@@37) ($generated@@32 $generated@@33 $generated@@176 $generated@@37 $generated@@175))) (= (ControlFlow 0 3) 2)) $generated@@182)))
(let (($generated@@187  (=> (= $generated@@179 ($generated@@119 $generated@@40 $generated@@175 $generated@@2 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@185) (=> (= (ControlFlow 0 9) 3) $generated@@186)))))
(let (($generated@@188  (=> (and ($generated@@28 $generated@@175) ($generated@@178 $generated@@175)) (=> (and (and (and ($generated@@82 $generated@@83 $generated@@180 ($generated@@84 $generated)) ($generated@@32 $generated@@83 $generated@@180 ($generated@@84 $generated) $generated@@175)) true) (and (= 1 $generated@@181) (= (ControlFlow 0 10) 9))) $generated@@187))))
$generated@@188))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
