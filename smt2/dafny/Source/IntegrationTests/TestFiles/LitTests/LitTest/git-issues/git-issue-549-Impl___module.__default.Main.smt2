(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert ($generated@@22 $generated@@23))
(assert (= ($generated@@6 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@28 $generated@@23)  (or (= $generated@@28 $generated@@26) (= ($generated@@27 $generated@@28) $generated@@23)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@28 $generated@@23))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and ($generated@@29 $generated@@32 $generated@@23 $generated@@33) ($generated@@30 $generated@@33)) ($generated@@29 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@29 $generated@@32 $generated@@23 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 $generated@@25 $generated@@36 $generated@@35 $generated@@37) ($generated@@34 $generated@@25 $generated@@36 $generated@@31 $generated@@37))
 :pattern ( ($generated@@34 $generated@@25 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@34 $generated@@25 $generated@@36 $generated@@31 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@34 $generated@@25 $generated@@39 $generated@@38 $generated@@40) ($generated@@34 $generated@@25 $generated@@39 $generated@@23 $generated@@40))
 :pattern ( ($generated@@34 $generated@@25 $generated@@39 $generated@@38 $generated@@40))
 :pattern ( ($generated@@34 $generated@@25 $generated@@39 $generated@@23 $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@6 $generated@@43) 4)) (= ($generated@@6 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@6 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@34 $generated@@25 $generated@@66 $generated@@31 $generated@@67)  (or (= $generated@@66 $generated@@26) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@67 $generated@@66) $generated)))))
 :pattern ( ($generated@@34 $generated@@25 $generated@@66 $generated@@31 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@34 $generated@@25 $generated@@68 $generated@@23 $generated@@69)  (or (= $generated@@68 $generated@@26) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@69 $generated@@68) $generated)))))
 :pattern ( ($generated@@34 $generated@@25 $generated@@68 $generated@@23 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@70 $generated@@71 $generated@@72) (forall (($generated@@73 T@U) ) (!  (=> ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@73) $generated))) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@72 $generated@@73) $generated))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@72 $generated@@73) $generated))
)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@41 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@41 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@29 ($generated@@74 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@34 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@29 ($generated@@74 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@70 $generated@@81 $generated@@82) (=> ($generated@@29 $generated@@83 $generated@@84 $generated@@81) ($generated@@29 $generated@@83 $generated@@84 $generated@@82)))
 :pattern ( ($generated@@70 $generated@@81 $generated@@82) ($generated@@29 $generated@@83 $generated@@84 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (!  (=> ($generated@@70 $generated@@85 $generated@@86) (=> ($generated@@34 $generated@@89 $generated@@87 $generated@@88 $generated@@85) ($generated@@34 $generated@@89 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@70 $generated@@85 $generated@@86) ($generated@@34 $generated@@89 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@90 $generated@@35)  (and ($generated@@24 $generated@@25 $generated@@90 $generated@@31) (or (not (= $generated@@90 $generated@@26)) (not true))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@90 $generated@@35))
 :pattern ( ($generated@@24 $generated@@25 $generated@@90 $generated@@31))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@91 $generated@@38)  (and ($generated@@24 $generated@@25 $generated@@91 $generated@@23) (or (not (= $generated@@91 $generated@@26)) (not true))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@91 $generated@@38))
 :pattern ( ($generated@@24 $generated@@25 $generated@@91 $generated@@23))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@34 $generated@@25 $generated@@92 $generated@@23 $generated@@93) ($generated@@34 $generated@@25 $generated@@92 $generated@@31 $generated@@93))
 :pattern ( ($generated@@34 $generated@@25 $generated@@92 $generated@@23 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or (not (= $generated@@94 $generated@@96)) (not true)) (=> (and ($generated@@70 $generated@@94 $generated@@95) ($generated@@70 $generated@@95 $generated@@96)) ($generated@@70 $generated@@94 $generated@@96)))
 :pattern ( ($generated@@70 $generated@@94 $generated@@95) ($generated@@70 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@41 $generated@@98 ($generated@@74 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@74 $generated@@98 $generated@@97))
)))
(assert  (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@99 $generated@@102 $generated@@103 $generated@@104 ($generated@@101 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@101 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@99 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@99 $generated@@118 $generated@@119 $generated@@120 ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@99 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@11 ($generated@@99 $generated@@25 $generated@@43 $generated@@7 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@99 $generated@@25 $generated@@43 $generated@@7 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@133 $generated@@23) ($generated@@24 $generated@@25 $generated@@133 $generated@@31))
 :pattern ( ($generated@@24 $generated@@25 $generated@@133 $generated@@23))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> ($generated@@30 ($generated@@46 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@134 $generated@@135 ($generated@@46 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@134 $generated@@135) $generated@@136 $generated@@137))) ($generated@@70 $generated@@134 ($generated@@46 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@134 $generated@@135 ($generated@@46 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@134 $generated@@135) $generated@@136 $generated@@137))))
 :pattern ( ($generated@@46 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@134 $generated@@135 ($generated@@46 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@134 $generated@@135) $generated@@136 $generated@@137)))
)))
(assert (= ($generated@@138 $generated@@38) $generated@@0))
(assert (= ($generated@@139 $generated@@38) $generated@@4))
(assert (= ($generated@@138 $generated@@23) $generated@@1))
(assert (= ($generated@@139 $generated@@23) $generated@@4))
(assert (= ($generated@@138 $generated@@35) $generated@@2))
(assert (= ($generated@@139 $generated@@35) $generated@@5))
(assert (= ($generated@@138 $generated@@31) $generated@@3))
(assert (= ($generated@@139 $generated@@31) $generated@@5))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@140 $generated@@31)  (or (= $generated@@140 $generated@@26) ($generated@@22 ($generated@@27 $generated@@140))))
 :pattern ( ($generated@@24 $generated@@25 $generated@@140 $generated@@31))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@U) Bool)
(declare-fun $generated@@146 (T@U) Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () Bool)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@154  (=> (= $generated@@141 ($generated@@100 $generated@@26 $generated@@142 $generated false)) (=> (and (or (not (= $generated@@143 $generated@@26)) (not true)) ($generated@@24 $generated@@25 $generated@@143 $generated@@23)) (=> (and (and (not ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@142 $generated@@143) $generated)))) (= $generated@@144 ($generated@@46 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@142 $generated@@143 ($generated@@46 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@142 $generated@@143) $generated ($generated@@74 $generated@@7 ($generated@@10 true)))))) (and ($generated@@30 $generated@@144) ($generated@@145 $generated@@144))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@143 $generated@@26)) (not true))) (=> ($generated@@29 ($generated@@74 $generated@@25 $generated@@143) $generated@@23 $generated@@144) (=> (and (and (and ($generated@@146 $generated@@143) ($generated@@146 $generated@@143)) (and (or (not (= $generated@@147 $generated@@26)) (not true)) ($generated@@24 $generated@@25 $generated@@147 $generated@@23))) (and (and (not ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@144 $generated@@147) $generated)))) (= $generated@@148 ($generated@@46 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@144 $generated@@147 ($generated@@46 $generated@@43 $generated@@44 ($generated@@42 $generated@@25 ($generated@@45 $generated@@43 $generated@@44) $generated@@144 $generated@@147) $generated ($generated@@74 $generated@@7 ($generated@@10 true)))))) (and ($generated@@30 $generated@@148) ($generated@@145 $generated@@148)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@147 $generated@@26)) (not true)))))))))))))
(let (($generated@@155  (=> (and (and (and ($generated@@30 $generated@@142) ($generated@@145 $generated@@142)) (and (=> $generated@@149 (and ($generated@@24 $generated@@25 $generated@@150 $generated@@38) ($generated@@34 $generated@@25 $generated@@150 $generated@@38 $generated@@142))) true)) (and (and (=> $generated@@151 (and ($generated@@24 $generated@@25 $generated@@152 $generated@@35) ($generated@@34 $generated@@25 $generated@@152 $generated@@35 $generated@@142))) true) (and (= 2 $generated@@153) (= (ControlFlow 0 6) 2)))) $generated@@154)))
$generated@@155)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
