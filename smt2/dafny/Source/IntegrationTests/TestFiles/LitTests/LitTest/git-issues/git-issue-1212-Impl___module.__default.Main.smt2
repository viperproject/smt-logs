(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@103 (Int) Int)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@T T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@149 (Int Int) Int)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@1) 0))
(assert (= ($generated@@31 $generated) $generated@@0))
(assert (= ($generated@@32 $generated@@1) $generated@@2))
(assert (forall (($generated@@35 T@U) ) (!  (=> ($generated@@33 $generated@@35) ($generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@35))
)))
(assert (= ($generated@@14 $generated@@37) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@41 ($generated@@38 $generated@@40) $generated@@42) ($generated@@36 $generated@@37 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
 :pattern ( ($generated@@36 $generated@@37 $generated@@41 ($generated@@38 $generated@@40) $generated@@42))
 :pattern ( ($generated@@36 $generated@@37 $generated@@41 ($generated@@39 $generated@@40) $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and ($generated@@43 $generated@@46 $generated@@44 $generated@@47) ($generated@@45 $generated@@47)) ($generated@@43 $generated@@46 ($generated@@39 $generated) $generated@@47))
 :pattern ( ($generated@@43 $generated@@46 $generated@@44 $generated@@47))
)))
(assert (= ($generated@@48 $generated@@49) $generated@@3))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@50 $generated@@37 $generated@@53 $generated@@44)  (or (= $generated@@53 $generated@@51) (= ($generated@@52 $generated@@53) $generated@@44)))
 :pattern ( ($generated@@50 $generated@@37 $generated@@53 $generated@@44))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@55 $generated@@54 $generated@@56) ($generated@@36 $generated@@37 $generated@@55 $generated@@44 $generated@@56))
 :pattern ( ($generated@@36 $generated@@37 $generated@@55 $generated@@54 $generated@@56))
 :pattern ( ($generated@@36 $generated@@37 $generated@@55 $generated@@44 $generated@@56))
)))
(assert (= ($generated@@14 $generated@@57) 4))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@50 $generated@@57 $generated@@59 $generated@@58) ($generated@@34 $generated@@59))
 :pattern ( ($generated@@34 $generated@@59) ($generated@@50 $generated@@57 $generated@@59 $generated@@58))
)))
(assert ($generated@@50 $generated@@57 $generated@@49 $generated@@58))
(assert  (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@61 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@61 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@61 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@14 $generated@@62) 5)) (= ($generated@@14 $generated@@63) 6)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@14 ($generated@@64 $generated@@79 $generated@@80)) 7))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@64 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@86 ($generated@@39 $generated@@85) $generated@@87)  (or (= $generated@@86 $generated@@51) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@87 $generated@@86) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@86 ($generated@@39 $generated@@85) $generated@@87))
)))
(assert (= ($generated@@30 $generated@@88) 0))
(assert (= ($generated@@89 $generated@@8 $generated@@13) $generated@@88))
(assert  (not ($generated@@90 $generated@@88)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@91 $generated@@44 $generated@@92)  (or (= $generated@@91 $generated@@51) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@91 $generated@@44 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 $generated@@94 $generated@@95) (= $generated@@94 $generated@@95))
 :pattern ( ($generated@@93 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@50 $generated@@37 $generated@@96 $generated@@44) ($generated@@50 $generated@@37 $generated@@96 ($generated@@39 $generated)))
 :pattern ( ($generated@@50 $generated@@37 $generated@@96 $generated@@44))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@97 $generated@@98 $generated@@44) ($generated@@97 $generated@@98 ($generated@@39 $generated)))
 :pattern ( ($generated@@97 $generated@@98 $generated@@44))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@99 $generated@@100 $generated@@101) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@100 $generated@@102) $generated@@1))) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@101 $generated@@102) $generated@@1))))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@101 $generated@@102) $generated@@1))
)))
 :pattern ( ($generated@@99 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@104 Int) ) (! (= ($generated@@103 $generated@@104) $generated@@104)
 :pattern ( ($generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 $generated@@106) $generated@@106)
 :pattern ( ($generated@@105 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@34 $generated@@108) (= ($generated@@48 $generated@@108) $generated@@3))
 :pattern ( ($generated@@34 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@109 $generated@@111 ($generated@@60 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@60 $generated@@111 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@34 $generated@@112) (= $generated@@112 $generated@@49))
 :pattern ( ($generated@@34 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and (and ($generated@@45 $generated@@114) (and (or (not (= $generated@@115 $generated@@51)) (not true)) ($generated@@50 $generated@@37 $generated@@115 ($generated@@39 $generated@@113)))) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@114 $generated@@115) $generated@@1)))) ($generated@@43 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@114 $generated@@115) $generated@@88) $generated@@113 $generated@@114))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@114 $generated@@115) $generated@@88) ($generated@@39 $generated@@113))
)))
(assert ($generated@@90 $generated@@1))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@50 $generated@@37 $generated@@117 ($generated@@38 $generated@@116))  (and ($generated@@50 $generated@@37 $generated@@117 ($generated@@39 $generated@@116)) (or (not (= $generated@@117 $generated@@51)) (not true))))
 :pattern ( ($generated@@50 $generated@@37 $generated@@117 ($generated@@38 $generated@@116)))
 :pattern ( ($generated@@50 $generated@@37 $generated@@117 ($generated@@39 $generated@@116)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@43 ($generated@@109 $generated@@121 $generated@@118) $generated@@119 $generated@@120) ($generated@@36 $generated@@121 $generated@@118 $generated@@119 $generated@@120))
 :pattern ( ($generated@@43 ($generated@@109 $generated@@121 $generated@@118) $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@99 $generated@@122 $generated@@123) (=> ($generated@@43 $generated@@124 $generated@@125 $generated@@122) ($generated@@43 $generated@@124 $generated@@125 $generated@@123)))
 :pattern ( ($generated@@99 $generated@@122 $generated@@123) ($generated@@43 $generated@@124 $generated@@125 $generated@@122))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (!  (=> ($generated@@99 $generated@@126 $generated@@127) (=> ($generated@@36 $generated@@130 $generated@@128 $generated@@129 $generated@@126) ($generated@@36 $generated@@130 $generated@@128 $generated@@129 $generated@@127)))
 :pattern ( ($generated@@99 $generated@@126 $generated@@127) ($generated@@36 $generated@@130 $generated@@128 $generated@@129 $generated@@126))
)))
(assert (forall (($generated@@132 T@U) ) (!  (and (= ($generated@@31 ($generated@@38 $generated@@132)) $generated@@7) (= ($generated@@131 ($generated@@38 $generated@@132)) $generated@@12))
 :pattern ( ($generated@@38 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (!  (and (= ($generated@@31 ($generated@@39 $generated@@133)) $generated@@9) (= ($generated@@131 ($generated@@39 $generated@@133)) $generated@@12))
 :pattern ( ($generated@@39 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@134 $generated@@135 $generated@@136) (and ($generated@@99 $generated@@135 $generated@@136) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (not ($generated@@90 $generated@@138)) (= ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@135 $generated@@137) $generated@@138) ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@136 $generated@@137) $generated@@138)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@136 $generated@@137) $generated@@138))
))))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@45 $generated@@140) (and (or (not (= $generated@@141 $generated@@51)) (not true)) ($generated@@50 $generated@@37 $generated@@141 ($generated@@39 $generated@@139)))) ($generated@@97 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@140 $generated@@141) $generated@@88) $generated@@139))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@140 $generated@@141) $generated@@88) ($generated@@39 $generated@@139))
)))
(assert ($generated@@142 $generated@@44 $generated))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@97 $generated@@143 $generated@@58) (and (= ($generated@@109 $generated@@57 ($generated@@60 $generated@@57 $generated@@143)) $generated@@143) ($generated@@50 $generated@@57 ($generated@@60 $generated@@57 $generated@@143) $generated@@58)))
 :pattern ( ($generated@@97 $generated@@143 $generated@@58))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@97 $generated@@144 $generated@@54) (and (= ($generated@@109 $generated@@37 ($generated@@60 $generated@@37 $generated@@144)) $generated@@144) ($generated@@50 $generated@@37 ($generated@@60 $generated@@37 $generated@@144) $generated@@54)))
 :pattern ( ($generated@@97 $generated@@144 $generated@@54))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@97 $generated@@145 $generated@@44) (and (= ($generated@@109 $generated@@37 ($generated@@60 $generated@@37 $generated@@145)) $generated@@145) ($generated@@50 $generated@@37 ($generated@@60 $generated@@37 $generated@@145) $generated@@44)))
 :pattern ( ($generated@@97 $generated@@145 $generated@@44))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@50 $generated@@37 $generated@@146 $generated@@54)  (and ($generated@@50 $generated@@37 $generated@@146 $generated@@44) (or (not (= $generated@@146 $generated@@51)) (not true))))
 :pattern ( ($generated@@50 $generated@@37 $generated@@146 $generated@@54))
 :pattern ( ($generated@@50 $generated@@37 $generated@@146 $generated@@44))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@147 $generated@@44 $generated@@148) ($generated@@36 $generated@@37 $generated@@147 ($generated@@39 $generated) $generated@@148))
 :pattern ( ($generated@@36 $generated@@37 $generated@@147 $generated@@44 $generated@@148))
)))
(assert (forall (($generated@@150 Int) ($generated@@151 Int) ) (! (= ($generated@@149 $generated@@150 $generated@@151) (div $generated@@150 $generated@@151))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (or (not (= $generated@@152 $generated@@154)) (not true)) (=> (and ($generated@@99 $generated@@152 $generated@@153) ($generated@@99 $generated@@153 $generated@@154)) ($generated@@99 $generated@@152 $generated@@154)))
 :pattern ( ($generated@@99 $generated@@152 $generated@@153) ($generated@@99 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (and (= ($generated@@155 ($generated@@89 $generated@@156 $generated@@157)) $generated@@156) (= ($generated@@32 ($generated@@89 $generated@@156 $generated@@157)) $generated@@157))
 :pattern ( ($generated@@89 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> ($generated@@97 $generated@@158 $generated) (and (= ($generated@@109 $generated@@16 ($generated@@60 $generated@@16 $generated@@158)) $generated@@158) ($generated@@50 $generated@@16 ($generated@@60 $generated@@16 $generated@@158) $generated)))
 :pattern ( ($generated@@97 $generated@@158 $generated))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@97 ($generated@@109 $generated@@161 $generated@@159) $generated@@160) ($generated@@50 $generated@@161 $generated@@159 $generated@@160))
 :pattern ( ($generated@@97 ($generated@@109 $generated@@161 $generated@@159) $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@38 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@38 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@164 ($generated@@39 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@39 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@60 $generated@@167 ($generated@@109 $generated@@167 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@109 $generated@@167 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@50 $generated@@37 $generated@@169 ($generated@@39 $generated@@168))  (or (= $generated@@169 $generated@@51) ($generated@@142 ($generated@@52 $generated@@169) $generated@@168)))
 :pattern ( ($generated@@50 $generated@@37 $generated@@169 ($generated@@39 $generated@@168)))
)))
(assert  (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@170 $generated@@173 $generated@@174 $generated@@175 ($generated@@172 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@178 $generated@@179) $generated@@176)
 :weight 0
)) (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@170 $generated@@180 $generated@@181 $generated@@182 ($generated@@172 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@170 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@170 $generated@@189 $generated@@190 $generated@@191 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@170 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@19 ($generated@@170 $generated@@37 $generated@@62 $generated@@15 ($generated@@171 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (or (not (= $generated@@202 $generated@@198)) (not true)) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@199 $generated@@202) $generated@@200)))) $generated@@201))
 :pattern ( ($generated@@170 $generated@@37 $generated@@62 $generated@@15 ($generated@@171 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@97 $generated@@205 ($generated@@38 $generated@@204)) (and (= ($generated@@109 $generated@@37 ($generated@@60 $generated@@37 $generated@@205)) $generated@@205) ($generated@@50 $generated@@37 ($generated@@60 $generated@@37 $generated@@205) ($generated@@38 $generated@@204))))
 :pattern ( ($generated@@97 $generated@@205 ($generated@@38 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@97 $generated@@207 ($generated@@39 $generated@@206)) (and (= ($generated@@109 $generated@@37 ($generated@@60 $generated@@37 $generated@@207)) $generated@@207) ($generated@@50 $generated@@37 ($generated@@60 $generated@@37 $generated@@207) ($generated@@39 $generated@@206))))
 :pattern ( ($generated@@97 $generated@@207 ($generated@@39 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@45 ($generated@@65 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@208 $generated@@209 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@208 $generated@@209) $generated@@210 $generated@@211))) ($generated@@99 $generated@@208 ($generated@@65 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@208 $generated@@209 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@208 $generated@@209) $generated@@210 $generated@@211))))
 :pattern ( ($generated@@65 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@208 $generated@@209 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@208 $generated@@209) $generated@@210 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@45 $generated@@213) ($generated@@50 $generated@@57 $generated@@212 $generated@@58)) ($generated@@36 $generated@@57 $generated@@212 $generated@@58 $generated@@213))
 :pattern ( ($generated@@36 $generated@@57 $generated@@212 $generated@@58 $generated@@213))
)))
(assert (= ($generated@@31 $generated@@58) $generated@@4))
(assert (= ($generated@@131 $generated@@58) $generated@@10))
(assert (= ($generated@@31 $generated@@54) $generated@@5))
(assert (= ($generated@@131 $generated@@54) $generated@@11))
(assert (= ($generated@@31 $generated@@44) $generated@@6))
(assert (= ($generated@@131 $generated@@44) $generated@@11))
(assert (= $generated@@49 ($generated@@105 $generated@@57 $generated@@49)))
(assert (forall (($generated@@214 Int) ) (! (= ($generated@@109 $generated@@16 ($generated@@20 ($generated@@103 $generated@@214))) ($generated@@105 $generated@@63 ($generated@@109 $generated@@16 ($generated@@20 $generated@@214))))
 :pattern ( ($generated@@109 $generated@@16 ($generated@@20 ($generated@@103 $generated@@214))))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@T) ) (! (= ($generated@@109 $generated@@216 ($generated@@105 $generated@@216 $generated@@215)) ($generated@@105 $generated@@63 ($generated@@109 $generated@@216 $generated@@215)))
 :pattern ( ($generated@@109 $generated@@216 ($generated@@105 $generated@@216 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! ($generated@@36 $generated@@16 $generated@@218 $generated $generated@@217)
 :pattern ( ($generated@@36 $generated@@16 $generated@@218 $generated $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ) (! ($generated@@50 $generated@@16 $generated@@219 $generated)
 :pattern ( ($generated@@50 $generated@@16 $generated@@219 $generated))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! ($generated@@93 $generated@@220 $generated@@221)
 :pattern ( ($generated@@93 $generated@@220 $generated@@221))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () Bool)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Bool)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@240  (and (=> (= (ControlFlow 0 2) (- 0 15)) (= $generated@@222 $generated@@222)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (= $generated@@222 $generated@@223)) (=> (and (= $generated@@222 $generated@@222) (= $generated@@222 $generated@@223)) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) (or (not (= $generated@@222 $generated@@51)) (not true))) (=> (or (not (= $generated@@222 $generated@@51)) (not true)) (=> (= $generated@@224 ($generated@@21 ($generated@@60 $generated@@16 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@222) $generated@@88)))) (and (=> (= (ControlFlow 0 2) (- 0 11)) true) (and (=> (= (ControlFlow 0 2) (- 0 10)) (forall (($generated@@241 T@U) ($generated@@242 T@U) )  (=> (and (and (or (not (= $generated@@241 $generated@@51)) (not true)) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@241) $generated@@1)))) (= $generated@@241 $generated@@222)) ($generated@@19 ($generated@@170 $generated@@37 $generated@@62 $generated@@15 $generated@@226 $generated@@241 $generated@@242))))) (=> (forall (($generated@@243 T@U) ($generated@@244 T@U) )  (=> (and (and (or (not (= $generated@@243 $generated@@51)) (not true)) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@243) $generated@@1)))) (= $generated@@243 $generated@@222)) ($generated@@19 ($generated@@170 $generated@@37 $generated@@62 $generated@@15 $generated@@226 $generated@@243 $generated@@244)))) (=> (and (and (and ($generated@@45 $generated@@227) ($generated@@228 $generated@@227)) (or (not (= ($generated@@21 ($generated@@60 $generated@@16 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@227 $generated@@222) $generated@@88))) ($generated@@21 ($generated@@60 $generated@@16 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@222) $generated@@88))))) (not true))) (and (forall (($generated@@245 T@U) ) (!  (=> (and (or (not (= $generated@@245 $generated@@51)) (not true)) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@245) $generated@@1)))) (or (= ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@227 $generated@@245) ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@245)) (= $generated@@245 $generated@@222)))
 :pattern ( ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@227 $generated@@245))
)) ($generated@@99 $generated@@225 $generated@@227))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@36 $generated@@37 $generated@@223 ($generated@@38 $generated@@58) $generated@@225)) (=> ($generated@@36 $generated@@37 $generated@@223 ($generated@@38 $generated@@58) $generated@@225) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@36 $generated@@37 $generated@@223 ($generated@@38 $generated@@58) $generated@@225)) (=> ($generated@@36 $generated@@37 $generated@@223 ($generated@@38 $generated@@58) $generated@@225) (=> (and ($generated@@45 $generated@@229) ($generated@@228 $generated@@229)) (=> (and (and ($generated@@33 ($generated@@60 $generated@@57 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@227 $generated@@223) $generated@@88))) ($generated@@33 ($generated@@60 $generated@@57 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@223) $generated@@88)))) (and ($generated@@93 ($generated@@60 $generated@@57 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@227 $generated@@223) $generated@@88)) ($generated@@60 $generated@@57 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@223) $generated@@88))) (= $generated@@227 $generated@@229))) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@222 $generated@@51)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@21 ($generated@@60 $generated@@16 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@229 $generated@@222) $generated@@88))) $generated@@224)) (=> (= ($generated@@21 ($generated@@60 $generated@@16 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@229 $generated@@222) $generated@@88))) $generated@@224) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@19 ($generated@@105 $generated@@15 ($generated@@18 false)))) (=> ($generated@@19 ($generated@@105 $generated@@15 ($generated@@18 false))) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= ($generated@@103 0) 0)) (not true)))))))))))))))))))))))))))))
(let (($generated@@246  (=> (and (or (not (= $generated@@222 $generated@@222)) (not true)) (= (ControlFlow 0 19) 2)) $generated@@240)))
(let (($generated@@247  (=> (= $generated@@222 $generated@@222) (and (=> (= (ControlFlow 0 16) (- 0 18)) true) (and (=> (= (ControlFlow 0 16) (- 0 17)) true) (=> (= (ControlFlow 0 16) 2) $generated@@240))))))
(let (($generated@@248  (=> (= $generated@@226 ($generated@@171 $generated@@51 $generated@@230 $generated@@1 false)) (=> (and (or (not (= $generated@@222 $generated@@51)) (not true)) ($generated@@50 $generated@@37 $generated@@222 $generated@@44)) (=> (and (and (not ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@222) $generated@@1)))) (= $generated@@231 ($generated@@65 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@222 ($generated@@65 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@230 $generated@@222) $generated@@1 ($generated@@109 $generated@@15 ($generated@@18 true)))))) (and ($generated@@45 $generated@@231) ($generated@@228 $generated@@231))) (and (=> (= (ControlFlow 0 20) (- 0 24)) true) (and (=> (= (ControlFlow 0 20) (- 0 23)) true) (=> (and (and ($generated@@50 $generated@@37 $generated@@232 ($generated@@38 $generated@@58)) ($generated@@36 $generated@@37 $generated@@232 ($generated@@38 $generated@@58) $generated@@230)) (and ($generated@@45 $generated@@225) ($generated@@228 $generated@@225))) (=> (and (and (and ($generated@@50 $generated@@37 $generated@@223 ($generated@@38 $generated@@58)) ($generated@@36 $generated@@37 $generated@@223 ($generated@@38 $generated@@58) $generated@@225)) (= $generated@@223 $generated@@222)) (and (forall (($generated@@249 T@U) ) (!  (=> (and (or (not (= $generated@@249 $generated@@51)) (not true)) ($generated@@19 ($generated@@60 $generated@@15 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@231 $generated@@249) $generated@@1)))) (= ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@249) ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@231 $generated@@249)))
 :pattern ( ($generated@@61 $generated@@37 ($generated@@64 $generated@@62 $generated@@63) $generated@@225 $generated@@249))
)) ($generated@@134 $generated@@231 $generated@@225))) (and (=> (= (ControlFlow 0 20) (- 0 22)) true) (and (=> (= (ControlFlow 0 20) (- 0 21)) true) (and (=> (= (ControlFlow 0 20) 16) $generated@@247) (=> (= (ControlFlow 0 20) 19) $generated@@246)))))))))))))
(let (($generated@@250  (=> (and ($generated@@45 $generated@@230) ($generated@@228 $generated@@230)) (=> (and (and (and (=> $generated@@233 (and ($generated@@50 $generated@@37 $generated@@234 $generated@@54) ($generated@@36 $generated@@37 $generated@@234 $generated@@54 $generated@@230))) true) (and (=> $generated@@235 (and ($generated@@50 $generated@@37 $generated@@236 ($generated@@38 $generated)) ($generated@@36 $generated@@37 $generated@@236 ($generated@@38 $generated) $generated@@230))) true)) (and (and (=> $generated@@237 (and ($generated@@50 $generated@@37 $generated@@238 ($generated@@38 $generated@@58)) ($generated@@36 $generated@@37 $generated@@238 ($generated@@38 $generated@@58) $generated@@230))) true) (and (= 2 $generated@@239) (= (ControlFlow 0 25) 20)))) $generated@@248))))
$generated@@250))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
