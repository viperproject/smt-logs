(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@24 $generated@@25 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@7 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@33 $generated@@36 ($generated@@34 $generated@@37 $generated@@38)) (forall (($generated@@41 T@U) ) (!  (=> ($generated@@35 $generated@@41 $generated@@39) ($generated@@35 $generated@@41 $generated@@37))
 :pattern ( ($generated@@35 $generated@@41 $generated@@39))
 :pattern ( ($generated@@35 $generated@@41 $generated@@37))
))) (forall (($generated@@42 T@U) ) (!  (=> ($generated@@35 $generated@@42 $generated@@38) ($generated@@35 $generated@@42 $generated@@40))
 :pattern ( ($generated@@35 $generated@@42 $generated@@38))
 :pattern ( ($generated@@35 $generated@@42 $generated@@40))
))) ($generated@@27 $generated@@33 $generated@@36 ($generated@@34 $generated@@39 $generated@@40)))
 :pattern ( ($generated@@27 $generated@@33 $generated@@36 ($generated@@34 $generated@@37 $generated@@38)) ($generated@@27 $generated@@33 $generated@@36 ($generated@@34 $generated@@39 $generated@@40)))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@43 $generated@@28 $generated@@45 $generated@@44 $generated@@46) ($generated@@43 $generated@@28 $generated@@45 $generated@@29 $generated@@46))
 :pattern ( ($generated@@43 $generated@@28 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@43 $generated@@28 $generated@@45 $generated@@29 $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@7 $generated@@49) 5)) (= ($generated@@7 $generated@@50) 6)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@7 ($generated@@51 $generated@@66 $generated@@67)) 7))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@43 $generated@@28 $generated@@72 $generated@@29 $generated@@73)  (or (= $generated@@72 $generated@@30) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@28 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@72) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@28 $generated@@72 $generated@@29 $generated@@73))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (and ($generated@@76 $generated@@80) (and ($generated@@35 $generated@@82 $generated@@78) ($generated@@27 $generated@@33 $generated@@81 ($generated@@34 $generated@@78 $generated@@79)))) (= ($generated@@77 ($generated@@74 $generated@@78 $generated@@79 $generated@@75 $generated@@81 $generated@@82) $generated@@25) ($generated@@77 ($generated@@74 $generated@@78 $generated@@79 $generated@@80 $generated@@81 $generated@@82) $generated@@25)))
 :pattern ( ($generated@@74 $generated@@78 $generated@@79 $generated@@75 $generated@@81 $generated@@82) ($generated@@76 $generated@@80))
 :pattern ( ($generated@@74 $generated@@78 $generated@@79 $generated@@80 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@47 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@47 $generated@@85 $generated@@84))
)))
(assert ($generated@@76 $generated@@75))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@83 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@43 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@83 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@35 $generated@@91 $generated@@44) (and (= ($generated@@83 $generated@@28 ($generated@@47 $generated@@28 $generated@@91)) $generated@@91) ($generated@@27 $generated@@28 ($generated@@47 $generated@@28 $generated@@91) $generated@@44)))
 :pattern ( ($generated@@35 $generated@@91 $generated@@44))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@35 $generated@@92 $generated@@29) (and (= ($generated@@83 $generated@@28 ($generated@@47 $generated@@28 $generated@@92)) $generated@@92) ($generated@@27 $generated@@28 ($generated@@47 $generated@@28 $generated@@92) $generated@@29)))
 :pattern ( ($generated@@35 $generated@@92 $generated@@29))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@93 $generated@@44)  (and ($generated@@27 $generated@@28 $generated@@93 $generated@@29) (or (not (= $generated@@93 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@93 $generated@@44))
 :pattern ( ($generated@@27 $generated@@28 $generated@@93 $generated@@29))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@76 $generated@@99) ($generated@@43 $generated@@33 $generated@@96 ($generated@@34 $generated@@97 $generated@@98) $generated@@99)) (forall (($generated@@100 T@U) ) (!  (=> (and ($generated@@86 $generated@@100 $generated@@97 $generated@@99) ($generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96 $generated@@100)) ($generated@@86 ($generated@@94 $generated@@97 $generated@@98 $generated@@99 $generated@@96 $generated@@100) $generated@@98 $generated@@99))
 :pattern ( ($generated@@94 $generated@@97 $generated@@98 $generated@@99 $generated@@96 $generated@@100))
)))
 :pattern ( ($generated@@43 $generated@@33 $generated@@96 ($generated@@34 $generated@@97 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@77 $generated@@101 $generated@@102) (= $generated@@101 $generated@@102))
 :pattern ( ($generated@@77 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@27 $generated@@33 $generated@@103 ($generated@@34 $generated@@104 $generated@@105)) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and (and ($generated@@76 $generated@@106) ($generated@@35 $generated@@107 $generated@@104)) ($generated@@95 $generated@@104 $generated@@105 $generated@@106 $generated@@103 $generated@@107)) ($generated@@35 ($generated@@94 $generated@@104 $generated@@105 $generated@@106 $generated@@103 $generated@@107) $generated@@105))
 :pattern ( ($generated@@94 $generated@@104 $generated@@105 $generated@@106 $generated@@103 $generated@@107))
)))
 :pattern ( ($generated@@27 $generated@@33 $generated@@103 ($generated@@34 $generated@@104 $generated@@105)))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@35 $generated@@108 $generated) (and (= ($generated@@83 $generated@@8 ($generated@@47 $generated@@8 $generated@@108)) $generated@@108) ($generated@@27 $generated@@8 ($generated@@47 $generated@@8 $generated@@108) $generated)))
 :pattern ( ($generated@@35 $generated@@108 $generated))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@35 ($generated@@83 $generated@@111 $generated@@109) $generated@@110) ($generated@@27 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@35 ($generated@@83 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@34 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@34 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@34 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@34 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@47 $generated@@119 ($generated@@83 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@83 $generated@@119 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@76 $generated@@123) (= ($generated@@43 $generated@@33 $generated@@120 ($generated@@34 $generated@@121 $generated@@122) $generated@@123) (forall (($generated@@124 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@124 $generated@@121) ($generated@@86 $generated@@124 $generated@@121 $generated@@123)) ($generated@@95 $generated@@121 $generated@@122 $generated@@123 $generated@@120 $generated@@124)) (forall (($generated@@125 T@U) ) (!  (=> (and (or (not (= $generated@@125 $generated@@30)) (not true)) ($generated@@24 ($generated@@74 $generated@@121 $generated@@122 $generated@@123 $generated@@120 $generated@@124) ($generated@@83 $generated@@28 $generated@@125))) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@28 ($generated@@51 $generated@@49 $generated@@50) $generated@@123 $generated@@125) $generated@@1))))
 :pattern ( ($generated@@24 ($generated@@74 $generated@@121 $generated@@122 $generated@@123 $generated@@120 $generated@@124) ($generated@@83 $generated@@28 $generated@@125)))
)))
 :pattern ( ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@120 $generated@@124))
 :pattern ( ($generated@@74 $generated@@121 $generated@@122 $generated@@123 $generated@@120 $generated@@124))
))))
 :pattern ( ($generated@@43 $generated@@33 $generated@@120 ($generated@@34 $generated@@121 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@35 $generated@@128 ($generated@@34 $generated@@126 $generated@@127)) (and (= ($generated@@83 $generated@@33 ($generated@@47 $generated@@33 $generated@@128)) $generated@@128) ($generated@@27 $generated@@33 ($generated@@47 $generated@@33 $generated@@128) ($generated@@34 $generated@@126 $generated@@127))))
 :pattern ( ($generated@@35 $generated@@128 ($generated@@34 $generated@@126 $generated@@127)))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@12 ($generated@@129 $generated@@28 $generated@@49 $generated@@8 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@28 ($generated@@51 $generated@@49 $generated@@50) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@129 $generated@@28 $generated@@49 $generated@@8 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (and (= ($generated@@23 ($generated@@34 $generated@@164 $generated@@165)) $generated@@2) (= ($generated@@163 ($generated@@34 $generated@@164 $generated@@165)) $generated@@5))
 :pattern ( ($generated@@34 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and ($generated@@76 $generated@@168) (and ($generated@@35 $generated@@170 $generated@@166) ($generated@@27 $generated@@33 $generated@@169 ($generated@@34 $generated@@166 $generated@@167)))) ($generated@@77 ($generated@@74 $generated@@166 $generated@@167 $generated@@75 $generated@@169 $generated@@170) $generated@@25)) (= ($generated@@95 $generated@@166 $generated@@167 $generated@@75 $generated@@169 $generated@@170) ($generated@@95 $generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@95 $generated@@166 $generated@@167 $generated@@75 $generated@@169 $generated@@170) ($generated@@76 $generated@@168))
 :pattern ( ($generated@@95 $generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@170))
)))
(assert (= ($generated@@23 $generated@@44) $generated@@3))
(assert (= ($generated@@163 $generated@@44) $generated@@6))
(assert (= ($generated@@23 $generated@@29) $generated@@4))
(assert (= ($generated@@163 $generated@@29) $generated@@6))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@77 $generated@@171 $generated@@172) (forall (($generated@@173 T@U) ) (! (= ($generated@@24 $generated@@171 $generated@@173) ($generated@@24 $generated@@172 $generated@@173))
 :pattern ( ($generated@@24 $generated@@171 $generated@@173))
 :pattern ( ($generated@@24 $generated@@172 $generated@@173))
)))
 :pattern ( ($generated@@77 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! ($generated@@43 $generated@@8 $generated@@175 $generated $generated@@174)
 :pattern ( ($generated@@43 $generated@@8 $generated@@175 $generated $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! ($generated@@27 $generated@@8 $generated@@176 $generated)
 :pattern ( ($generated@@27 $generated@@8 $generated@@176 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@183 true))
(let (($generated@@184  (=> (and (=> ($generated@@95 $generated@@44 $generated $generated@@177 $generated@@178 ($generated@@83 $generated@@28 $generated@@179)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@94 $generated@@44 $generated $generated@@177 $generated@@178 ($generated@@83 $generated@@28 $generated@@179))))) (= (ControlFlow 0 4) 1)) $generated@@183)))
(let (($generated@@185  (=> ($generated@@86 ($generated@@83 $generated@@33 $generated@@178) ($generated@@34 $generated@@44 $generated) $generated@@177) (=> (and ($generated@@43 $generated@@28 $generated@@179 $generated@@44 $generated@@177) ($generated@@95 $generated@@44 $generated $generated@@177 $generated@@178 ($generated@@83 $generated@@28 $generated@@179))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@95 $generated@@44 $generated $generated@@177 $generated@@178 ($generated@@83 $generated@@28 $generated@@179))) (=> ($generated@@95 $generated@@44 $generated $generated@@177 $generated@@178 ($generated@@83 $generated@@28 $generated@@179)) (=> (and ($generated@@12 ($generated@@47 $generated@@8 ($generated@@94 $generated@@44 $generated $generated@@177 $generated@@178 ($generated@@83 $generated@@28 $generated@@179)))) (= (ControlFlow 0 2) 1)) $generated@@183)))))))
(let (($generated@@186  (=> (= $generated@@180 ($generated@@130 $generated@@30 $generated@@177 $generated@@1 false)) (=> (and ($generated@@27 $generated@@28 $generated@@179 $generated@@44) ($generated@@43 $generated@@28 $generated@@179 $generated@@44 $generated@@177)) (and (=> (= (ControlFlow 0 5) 2) $generated@@185) (=> (= (ControlFlow 0 5) 4) $generated@@184))))))
(let (($generated@@187  (=> (and ($generated@@76 $generated@@177) ($generated@@181 $generated@@177)) (=> (and (and ($generated@@27 $generated@@33 $generated@@178 ($generated@@34 $generated@@44 $generated)) ($generated@@43 $generated@@33 $generated@@178 ($generated@@34 $generated@@44 $generated) $generated@@177)) (and (= 2 $generated@@182) (= (ControlFlow 0 6) 5))) $generated@@186))))
$generated@@187))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
