(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (Bool T@U Bool) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U Bool) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@150 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@25 $generated@@29 $generated@@26 $generated@@30) ($generated@@27 $generated@@30)) ($generated@@25 $generated@@29 $generated@@28 $generated@@30))
 :pattern ( ($generated@@25 $generated@@29 $generated@@26 $generated@@30))
)))
(assert (= ($generated@@8 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@34 $generated@@33 $generated@@35) ($generated@@31 $generated@@32 $generated@@34 $generated@@28 $generated@@35))
 :pattern ( ($generated@@31 $generated@@32 $generated@@34 $generated@@33 $generated@@35))
 :pattern ( ($generated@@31 $generated@@32 $generated@@34 $generated@@28 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@37 $generated@@36 $generated@@38) ($generated@@31 $generated@@32 $generated@@37 $generated@@26 $generated@@38))
 :pattern ( ($generated@@31 $generated@@32 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@31 $generated@@32 $generated@@37 $generated@@26 $generated@@38))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (or ($generated@@42 ($generated@@41 $generated@@32 $generated@@45) ($generated@@13 ($generated@@41 $generated@@9 $generated@@46))) (and (< 0 $generated@@39) (and (or (not (= $generated@@45 $generated@@43)) (not true)) ($generated@@44 $generated@@32 $generated@@45 $generated@@36)))) (= ($generated@@40 true ($generated@@41 $generated@@32 $generated@@45) ($generated@@13 ($generated@@41 $generated@@9 $generated@@46))) ($generated@@13 ($generated@@41 $generated@@9 $generated@@46))))
 :weight 3
 :pattern ( ($generated@@40 true ($generated@@41 $generated@@32 $generated@@45) ($generated@@13 ($generated@@41 $generated@@9 $generated@@46))))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@8 $generated@@49) 4)) (= ($generated@@8 $generated@@50) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@8 ($generated@@51 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@72 $generated@@28 $generated@@73)  (or (= $generated@@72 $generated@@43) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@32 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@72) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@72 $generated@@28 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@74 $generated@@26 $generated@@75)  (or (= $generated@@74 $generated@@43) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@32 ($generated@@51 $generated@@49 $generated@@50) $generated@@75 $generated@@74) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@74 $generated@@26 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@32 ($generated@@51 $generated@@49 $generated@@50) $generated@@77 $generated@@79) $generated@@1))) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@32 ($generated@@51 $generated@@49 $generated@@50) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@32 ($generated@@51 $generated@@49 $generated@@50) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@41 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@41 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@47 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@47 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@25 ($generated@@82 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@31 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@25 ($generated@@82 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@76 $generated@@89 $generated@@90) (=> ($generated@@25 $generated@@91 $generated@@92 $generated@@89) ($generated@@25 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@76 $generated@@89 $generated@@90) ($generated@@25 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (!  (=> ($generated@@76 $generated@@93 $generated@@94) (=> ($generated@@31 $generated@@97 $generated@@95 $generated@@96 $generated@@93) ($generated@@31 $generated@@97 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@76 $generated@@93 $generated@@94) ($generated@@31 $generated@@97 $generated@@95 $generated@@96 $generated@@93))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@98 T@U) ($generated@@99 Bool) ) (!  (=> (or ($generated@@42 $generated@@98 $generated@@99) (and (< 0 $generated@@39) (and (or (not (= $generated@@98 $generated@@43)) (not true)) ($generated@@44 $generated@@32 $generated@@98 $generated@@36)))) (= ($generated@@40 true $generated@@98 $generated@@99) $generated@@99))
 :pattern ( ($generated@@40 true $generated@@98 $generated@@99))
))))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@100 $generated@@33)  (and ($generated@@44 $generated@@32 $generated@@100 $generated@@28) (or (not (= $generated@@100 $generated@@43)) (not true))))
 :pattern ( ($generated@@44 $generated@@32 $generated@@100 $generated@@33))
 :pattern ( ($generated@@44 $generated@@32 $generated@@100 $generated@@28))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@101 $generated@@36)  (and ($generated@@44 $generated@@32 $generated@@101 $generated@@26) (or (not (= $generated@@101 $generated@@43)) (not true))))
 :pattern ( ($generated@@44 $generated@@32 $generated@@101 $generated@@36))
 :pattern ( ($generated@@44 $generated@@32 $generated@@101 $generated@@26))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@102 $generated@@26 $generated@@103) ($generated@@31 $generated@@32 $generated@@102 $generated@@28 $generated@@103))
 :pattern ( ($generated@@31 $generated@@32 $generated@@102 $generated@@26 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or (not (= $generated@@104 $generated@@106)) (not true)) (=> (and ($generated@@76 $generated@@104 $generated@@105) ($generated@@76 $generated@@105 $generated@@106)) ($generated@@76 $generated@@104 $generated@@106)))
 :pattern ( ($generated@@76 $generated@@104 $generated@@105) ($generated@@76 $generated@@105 $generated@@106))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@42 $generated@@107 ($generated@@13 ($generated@@41 $generated@@9 $generated@@108))) (and (< 0 $generated@@39) (and (or (not (= $generated@@107 $generated@@43)) (not true)) ($generated@@44 $generated@@32 $generated@@107 $generated@@36)))) (= ($generated@@40 true $generated@@107 ($generated@@13 ($generated@@41 $generated@@9 $generated@@108))) ($generated@@13 ($generated@@41 $generated@@9 $generated@@108))))
 :weight 3
 :pattern ( ($generated@@40 true $generated@@107 ($generated@@13 ($generated@@41 $generated@@9 $generated@@108))))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@47 $generated@@110 ($generated@@82 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@82 $generated@@110 $generated@@109))
)))
(assert  (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@111 $generated@@114 $generated@@115 $generated@@116 ($generated@@113 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@111 $generated@@121 $generated@@122 $generated@@123 ($generated@@113 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@111 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@111 $generated@@130 $generated@@131 $generated@@132 ($generated@@113 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@111 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 Bool) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@13 ($generated@@111 $generated@@32 $generated@@49 $generated@@9 ($generated@@112 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))  (=> (and (or (not (= $generated@@143 $generated@@139)) (not true)) ($generated@@13 ($generated@@47 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@32 ($generated@@51 $generated@@49 $generated@@50) $generated@@140 $generated@@143) $generated@@141)))) $generated@@142))
 :pattern ( ($generated@@111 $generated@@32 $generated@@49 $generated@@9 ($generated@@112 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@44 $generated@@32 $generated@@145 $generated@@26) ($generated@@44 $generated@@32 $generated@@145 $generated@@28))
 :pattern ( ($generated@@44 $generated@@32 $generated@@145 $generated@@26))
)))
(assert (= ($generated@@24 $generated@@36) $generated@@2))
(assert (= ($generated@@146 $generated@@36) $generated@@6))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@146 $generated@@26) $generated@@6))
(assert (= ($generated@@24 $generated@@33) $generated@@4))
(assert (= ($generated@@146 $generated@@33) $generated@@7))
(assert (= ($generated@@24 $generated@@28) $generated@@5))
(assert (= ($generated@@146 $generated@@28) $generated@@7))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@149 $generated@@28)  (or (= $generated@@149 $generated@@43) ($generated@@147 ($generated@@148 $generated@@149))))
 :pattern ( ($generated@@44 $generated@@32 $generated@@149 $generated@@28))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@44 $generated@@32 $generated@@151 $generated@@26)  (or (= $generated@@151 $generated@@43) ($generated@@150 ($generated@@148 $generated@@151))))
 :pattern ( ($generated@@44 $generated@@32 $generated@@151 $generated@@26))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@82 $generated@@153 ($generated@@41 $generated@@153 $generated@@152)) ($generated@@41 $generated@@50 ($generated@@82 $generated@@153 $generated@@152)))
 :pattern ( ($generated@@82 $generated@@153 ($generated@@41 $generated@@153 $generated@@152)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! ($generated@@31 $generated@@9 $generated@@155 $generated $generated@@154)
 :pattern ( ($generated@@31 $generated@@9 $generated@@155 $generated $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@44 $generated@@9 $generated@@156 $generated)
 :pattern ( ($generated@@44 $generated@@9 $generated@@156 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@161  (=> (and (= $generated@@157 ($generated@@112 $generated@@43 $generated@@158 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@159 $generated@@43)) (not true)))))
(let (($generated@@162  (=> (and ($generated@@27 $generated@@158) ($generated@@160 $generated@@158)) (=> (and (and ($generated@@44 $generated@@32 $generated@@159 $generated@@36) ($generated@@31 $generated@@32 $generated@@159 $generated@@36 $generated@@158)) (and (= 2 $generated@@39) (= (ControlFlow 0 3) 2))) $generated@@161))))
$generated@@162)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
