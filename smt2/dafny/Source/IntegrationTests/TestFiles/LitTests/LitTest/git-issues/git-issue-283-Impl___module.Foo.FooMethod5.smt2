(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U Int) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@69 (Int) Int)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@10 $generated@@32) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 Int) ) (!  (=> (and (<= 0 $generated@@34) (< $generated@@34 ($generated@@29 $generated@@33))) (< ($generated@@30 ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@34))) ($generated@@30 ($generated@@28 $generated@@33))))
 :pattern ( ($generated@@27 $generated@@33 $generated@@34) ($generated@@28 $generated@@33))
)))
(assert (= ($generated@@29 $generated@@35) 0))
(assert (= ($generated@@10 $generated@@37) 4))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@40 $generated@@38 $generated@@41) ($generated@@36 $generated@@37 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 $generated@@38 $generated@@41))
 :pattern ( ($generated@@36 $generated@@37 $generated@@40 $generated@@39 $generated@@41))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@10 $generated@@44) 5)) (= ($generated@@10 $generated@@45) 6)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@10 ($generated@@46 $generated@@61 $generated@@62)) 7))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@67 $generated@@39 $generated@@68)  (or (= $generated@@67 $generated@@42) ($generated@@15 ($generated@@31 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@37 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@67) $generated@@2)))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@67 $generated@@39 $generated@@68))
)))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@69 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@74 $generated@@76) (= ($generated@@75 $generated@@76) $generated@@4))
 :pattern ( ($generated@@74 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@77 $generated@@78) (= ($generated@@75 $generated@@78) $generated@@6))
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@31 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@31 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@74 $generated@@83) (exists (($generated@@84 T@U) ) (= $generated@@83 ($generated@@82 $generated@@84))))
 :pattern ( ($generated@@74 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@77 $generated@@85) (exists (($generated@@86 T@U) ) (= $generated@@85 ($generated@@28 $generated@@86))))
 :pattern ( ($generated@@77 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@87 ($generated@@79 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@36 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@87 ($generated@@79 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@26 ($generated@@92 $generated@@94)) $generated@@5) (= ($generated@@93 ($generated@@92 $generated@@94)) $generated@@9))
 :pattern ( ($generated@@92 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@95 $generated@@97 $generated@@38) (and (= ($generated@@79 $generated@@37 ($generated@@31 $generated@@37 $generated@@97)) $generated@@97) ($generated@@96 $generated@@37 ($generated@@31 $generated@@37 $generated@@97) $generated@@38)))
 :pattern ( ($generated@@95 $generated@@97 $generated@@38))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@95 $generated@@98 $generated@@39) (and (= ($generated@@79 $generated@@37 ($generated@@31 $generated@@37 $generated@@98)) $generated@@98) ($generated@@96 $generated@@37 ($generated@@31 $generated@@37 $generated@@98) $generated@@39)))
 :pattern ( ($generated@@95 $generated@@98 $generated@@39))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@96 $generated@@37 $generated@@99 $generated@@38)  (and ($generated@@96 $generated@@37 $generated@@99 $generated@@39) (or (not (= $generated@@99 $generated@@42)) (not true))))
 :pattern ( ($generated@@96 $generated@@37 $generated@@99 $generated@@38))
 :pattern ( ($generated@@96 $generated@@37 $generated@@99 $generated@@39))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@100 $generated@@103) (= ($generated@@36 $generated@@32 ($generated@@82 $generated@@102) ($generated@@92 $generated@@101) $generated@@103) ($generated@@87 $generated@@102 $generated@@101 $generated@@103)))
 :pattern ( ($generated@@36 $generated@@32 ($generated@@82 $generated@@102) ($generated@@92 $generated@@101) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@104 $generated@@105) (or ($generated@@74 $generated@@105) ($generated@@77 $generated@@105)))
 :pattern ( ($generated@@104 $generated@@105))
)))
(assert (= ($generated@@10 $generated@@106) 8))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and ($generated@@100 $generated@@110) (and ($generated@@77 $generated@@109) (exists (($generated@@111 T@U) ) (! ($generated@@36 $generated@@32 $generated@@109 ($generated@@92 $generated@@111) $generated@@110)
 :pattern ( ($generated@@36 $generated@@32 $generated@@109 ($generated@@92 $generated@@111) $generated@@110))
)))) ($generated@@36 $generated@@106 ($generated@@107 $generated@@109) ($generated@@108 $generated) $generated@@110))
 :pattern ( ($generated@@36 $generated@@106 ($generated@@107 $generated@@109) ($generated@@108 $generated) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@100 $generated@@114) (= ($generated@@36 $generated@@32 ($generated@@28 $generated@@113) ($generated@@92 $generated@@112) $generated@@114) ($generated@@36 $generated@@106 $generated@@113 ($generated@@108 $generated) $generated@@114)))
 :pattern ( ($generated@@36 $generated@@32 ($generated@@28 $generated@@113) ($generated@@92 $generated@@112) $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@96 $generated@@32 $generated@@116 ($generated@@92 $generated@@115)) (or ($generated@@74 $generated@@116) ($generated@@77 $generated@@116)))
 :pattern ( ($generated@@77 $generated@@116) ($generated@@96 $generated@@32 $generated@@116 ($generated@@92 $generated@@115)))
 :pattern ( ($generated@@74 $generated@@116) ($generated@@96 $generated@@32 $generated@@116 ($generated@@92 $generated@@115)))
)))
(assert (= ($generated@@10 $generated@@117) 9))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@95 $generated@@118 $generated) (and (= ($generated@@79 $generated@@117 ($generated@@31 $generated@@117 $generated@@118)) $generated@@118) ($generated@@96 $generated@@117 ($generated@@31 $generated@@117 $generated@@118) $generated)))
 :pattern ( ($generated@@95 $generated@@118 $generated))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@95 ($generated@@79 $generated@@121 $generated@@119) $generated@@120) ($generated@@96 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@95 ($generated@@79 $generated@@121 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (<= 0 ($generated@@29 $generated@@122))
 :pattern ( ($generated@@29 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@36 $generated@@106 $generated@@123 ($generated@@108 $generated@@124) $generated@@125) (forall (($generated@@126 Int) ) (!  (=> (and (<= 0 $generated@@126) (< $generated@@126 ($generated@@29 $generated@@123))) ($generated@@87 ($generated@@27 $generated@@123 $generated@@126) $generated@@124 $generated@@125))
 :pattern ( ($generated@@27 $generated@@123 $generated@@126))
)))
 :pattern ( ($generated@@36 $generated@@106 $generated@@123 ($generated@@108 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@108 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@108 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@26 ($generated@@108 $generated@@129)) $generated@@1)
 :pattern ( ($generated@@108 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@75 ($generated@@82 $generated@@130)) $generated@@4)
 :pattern ( ($generated@@82 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@92 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@92 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@82 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@82 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@75 ($generated@@28 $generated@@135)) $generated@@6)
 :pattern ( ($generated@@28 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@107 ($generated@@28 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@28 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@31 $generated@@138 ($generated@@79 $generated@@138 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@79 $generated@@138 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@96 $generated@@32 ($generated@@82 $generated@@140) ($generated@@92 $generated@@139)) ($generated@@95 $generated@@140 $generated@@139))
 :pattern ( ($generated@@96 $generated@@32 ($generated@@82 $generated@@140) ($generated@@92 $generated@@139)))
)))
(assert (forall (($generated@@142 T@U) ) (! (< ($generated@@141 $generated@@142) ($generated@@30 ($generated@@82 $generated@@142)))
 :pattern ( ($generated@@82 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (< ($generated@@143 $generated@@144) ($generated@@30 ($generated@@28 $generated@@144)))
 :pattern ( ($generated@@28 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and ($generated@@100 $generated@@147) (and ($generated@@74 $generated@@145) ($generated@@36 $generated@@32 $generated@@145 ($generated@@92 $generated@@146) $generated@@147))) ($generated@@87 ($generated@@133 $generated@@145) $generated@@146 $generated@@147))
 :pattern ( ($generated@@87 ($generated@@133 $generated@@145) $generated@@146 $generated@@147))
)))
(assert  (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@148 $generated@@151 $generated@@152 $generated@@153 ($generated@@150 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@156 $generated@@157) $generated@@154)
 :weight 0
)) (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@148 $generated@@158 $generated@@159 $generated@@160 ($generated@@150 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@148 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@148 $generated@@167 $generated@@168 $generated@@169 ($generated@@150 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@148 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@15 ($generated@@148 $generated@@37 $generated@@44 $generated@@11 ($generated@@149 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@15 ($generated@@31 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@37 ($generated@@46 $generated@@44 $generated@@45) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@148 $generated@@37 $generated@@44 $generated@@11 ($generated@@149 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@141 ($generated@@79 $generated@@32 $generated@@182)) ($generated@@30 $generated@@182))
 :pattern ( ($generated@@141 ($generated@@79 $generated@@32 $generated@@182)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@95 $generated@@183 ($generated@@108 $generated@@184)) (and (= ($generated@@79 $generated@@106 ($generated@@31 $generated@@106 $generated@@183)) $generated@@183) ($generated@@96 $generated@@106 ($generated@@31 $generated@@106 $generated@@183) ($generated@@108 $generated@@184))))
 :pattern ( ($generated@@95 $generated@@183 ($generated@@108 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@95 $generated@@186 ($generated@@92 $generated@@185)) (and (= ($generated@@79 $generated@@32 ($generated@@31 $generated@@32 $generated@@186)) $generated@@186) ($generated@@96 $generated@@32 ($generated@@31 $generated@@32 $generated@@186) ($generated@@92 $generated@@185))))
 :pattern ( ($generated@@95 $generated@@186 ($generated@@92 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@96 $generated@@32 ($generated@@28 $generated@@188) ($generated@@92 $generated@@187)) ($generated@@96 $generated@@106 $generated@@188 ($generated@@108 $generated)))
 :pattern ( ($generated@@96 $generated@@32 ($generated@@28 $generated@@188) ($generated@@92 $generated@@187)))
)))
(assert (= ($generated@@26 $generated@@38) $generated@@3))
(assert (= ($generated@@93 $generated@@38) $generated@@8))
(assert (= ($generated@@26 $generated@@39) $generated@@7))
(assert (= ($generated@@93 $generated@@39) $generated@@8))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@96 $generated@@37 $generated@@191 $generated@@39)  (or (= $generated@@191 $generated@@42) ($generated@@189 ($generated@@190 $generated@@191))))
 :pattern ( ($generated@@96 $generated@@37 $generated@@191 $generated@@39))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@79 $generated@@12 ($generated@@16 ($generated@@69 $generated@@192))) ($generated@@71 $generated@@45 ($generated@@79 $generated@@12 ($generated@@16 $generated@@192))))
 :pattern ( ($generated@@79 $generated@@12 ($generated@@16 ($generated@@69 $generated@@192))))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@82 ($generated@@71 $generated@@45 $generated@@193)) ($generated@@71 $generated@@32 ($generated@@82 $generated@@193)))
 :pattern ( ($generated@@82 ($generated@@71 $generated@@45 $generated@@193)))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@28 ($generated@@71 $generated@@106 $generated@@194)) ($generated@@71 $generated@@32 ($generated@@28 $generated@@194)))
 :pattern ( ($generated@@28 ($generated@@71 $generated@@106 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@79 $generated@@196 ($generated@@71 $generated@@196 $generated@@195)) ($generated@@71 $generated@@45 ($generated@@79 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@79 $generated@@196 ($generated@@71 $generated@@196 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= ($generated@@29 $generated@@197) 0) (= $generated@@197 $generated@@35))
 :pattern ( ($generated@@29 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! ($generated@@36 $generated@@117 $generated@@199 $generated $generated@@198)
 :pattern ( ($generated@@36 $generated@@117 $generated@@199 $generated $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@96 $generated@@106 $generated@@200 ($generated@@108 $generated@@201)) (forall (($generated@@202 Int) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@29 $generated@@200))) ($generated@@95 ($generated@@27 $generated@@200 $generated@@202) $generated@@201))
 :pattern ( ($generated@@27 $generated@@200 $generated@@202))
)))
 :pattern ( ($generated@@96 $generated@@106 $generated@@200 ($generated@@108 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (<= 0 $generated@@204) (< $generated@@204 ($generated@@29 $generated@@203))) (< ($generated@@30 ($generated@@31 $generated@@32 ($generated@@27 $generated@@203 $generated@@204))) ($generated@@143 $generated@@203)))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@32 ($generated@@27 $generated@@203 $generated@@204))))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@96 $generated@@117 $generated@@205 $generated)
 :pattern ( ($generated@@96 $generated@@117 $generated@@205 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@222  (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@74 $generated@@206) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@14 true))))) (=> (=> ($generated@@74 $generated@@206) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@14 true)))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> (not ($generated@@74 $generated@@206)) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@14 true)))))))))
(let (($generated@@223  (=> (and (= $generated@@207 ($generated@@69 1)) (= (ControlFlow 0 6) 4)) $generated@@222)))
(let (($generated@@224 true))
(let (($generated@@225  (and (=> (= (ControlFlow 0 7) (- 0 8)) (> $generated@@207 0)) (=> (> $generated@@207 0) (and (=> (= (ControlFlow 0 7) 2) $generated@@224) (=> (= (ControlFlow 0 7) 6) $generated@@223))))))
(let (($generated@@226  (=> (= $generated@@206 ($generated@@28 $generated@@208)) (=> (and ($generated@@96 $generated@@106 $generated@@208 ($generated@@108 $generated)) ($generated@@36 $generated@@106 $generated@@208 ($generated@@108 $generated) $generated@@209)) (=> (and (and (and ($generated@@96 $generated@@106 $generated@@210 ($generated@@108 $generated)) ($generated@@36 $generated@@106 $generated@@210 ($generated@@108 $generated) $generated@@209)) (and (= $generated@@211 $generated@@208) ($generated@@96 $generated@@106 $generated@@211 ($generated@@108 $generated)))) (and (and (= $generated@@210 $generated@@211) (= $generated@@212 ($generated@@69 2))) (and (= $generated@@207 $generated@@212) (= (ControlFlow 0 10) 7)))) $generated@@225)))))
(let (($generated@@227  (=> (= $generated@@206 ($generated@@82 ($generated@@79 $generated@@106 $generated@@213))) (=> (and ($generated@@96 $generated@@106 $generated@@213 ($generated@@108 $generated)) ($generated@@36 $generated@@106 $generated@@213 ($generated@@108 $generated) $generated@@209)) (=> (and (and (and ($generated@@96 $generated@@106 $generated@@214 ($generated@@108 $generated)) ($generated@@36 $generated@@106 $generated@@214 ($generated@@108 $generated) $generated@@209)) (and (= $generated@@215 $generated@@213) ($generated@@96 $generated@@106 $generated@@215 ($generated@@108 $generated)))) (and (and (= $generated@@214 $generated@@215) (= $generated@@216 ($generated@@69 1))) (and (= $generated@@207 $generated@@216) (= (ControlFlow 0 9) 7)))) $generated@@225)))))
(let (($generated@@228 true))
(let (($generated@@229  (=> (or (not (= $generated@@206 ($generated@@82 ($generated@@79 $generated@@106 $generated@@213)))) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@226) (=> (= (ControlFlow 0 11) 1) $generated@@228)))))
(let (($generated@@230  (=> (and (= $generated@@217 ($generated@@149 $generated@@42 $generated@@209 $generated@@2 false)) (= $generated@@218 ($generated@@69 0))) (and (=> (= (ControlFlow 0 12) 9) $generated@@227) (=> (= (ControlFlow 0 12) 11) $generated@@229)))))
(let (($generated@@231  (=> (and (and ($generated@@100 $generated@@209) ($generated@@219 $generated@@209)) (and (or (not (= $generated@@220 $generated@@42)) (not true)) (and ($generated@@96 $generated@@37 $generated@@220 $generated@@38) ($generated@@36 $generated@@37 $generated@@220 $generated@@38 $generated@@209)))) (=> (and (and (and ($generated@@96 $generated@@32 $generated@@206 ($generated@@92 ($generated@@108 $generated))) ($generated@@36 $generated@@32 $generated@@206 ($generated@@92 ($generated@@108 $generated)) $generated@@209)) ($generated@@104 $generated@@206)) (and (= 1 $generated@@221) (= (ControlFlow 0 13) 12))) $generated@@230))))
$generated@@231)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
