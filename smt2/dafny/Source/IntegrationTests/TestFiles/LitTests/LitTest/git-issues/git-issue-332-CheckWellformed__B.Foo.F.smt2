(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U T@U T@U) Int)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36) ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
)))
(assert (= ($generated@@24 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@3 $generated@@7) $generated@@37))
(assert  (not ($generated@@39 $generated@@37)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@8 $generated@@45) 4)) (= ($generated@@8 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@8 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and (and (and ($generated@@43 $generated@@69) ($generated@@43 $generated@@70)) (and (or (not (= $generated@@71 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@71 $generated@@34))) (and ($generated@@40 $generated@@69) ($generated@@41 $generated@@69 $generated@@70))) (=> (forall (($generated@@72 T@U) ($generated@@73 T@U) )  (=> (and (or (not (= $generated@@72 $generated@@30)) (not true)) (= $generated@@72 $generated@@71)) (= ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@72) $generated@@73) ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@72) $generated@@73)))) (= ($generated@@42 $generated@@68 $generated@@69 $generated@@71) ($generated@@42 $generated@@68 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@40 $generated@@69) ($generated@@41 $generated@@69 $generated@@70) ($generated@@42 $generated@@68 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@75 $generated@@29 $generated@@76)  (or (= $generated@@75 $generated@@30) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@76 $generated@@75) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@28 $generated@@75 $generated@@29 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@41 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@77 $generated@@79) $generated@@1))) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@78 $generated@@79) $generated@@1))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@78 $generated@@79) $generated@@1))
)))
 :pattern ( ($generated@@41 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@74 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@74 $generated@@82 $generated@@81))
)))
(assert ($generated@@39 $generated@@1))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and (and ($generated@@43 $generated@@83) (and (or (not (= $generated@@84 $generated@@30)) (not true)) (= ($generated@@31 $generated@@84) $generated@@29))) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@83 $generated@@84) $generated@@1)))) ($generated@@33 $generated@@10 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@83 $generated@@84) $generated@@37)) $generated $generated@@83))
 :pattern ( ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@83 $generated@@84) $generated@@37)))
)))
(assert  (=> (<= 0 $generated@@85) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or ($generated@@86 $generated@@87 $generated@@88 $generated@@89) (and (< 0 $generated@@85) (and (and (and ($generated@@43 $generated@@87) ($generated@@43 $generated@@88)) ($generated@@41 $generated@@87 $generated@@88)) (and (or (not (= $generated@@89 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@89 $generated@@34) ($generated@@33 $generated@@28 $generated@@89 $generated@@34 $generated@@87)))))) (= ($generated@@42 $generated@@87 $generated@@88 $generated@@89) (+ ($generated@@15 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@87 $generated@@89) $generated@@37))) ($generated@@15 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@88 $generated@@89) $generated@@37))))))
 :pattern ( ($generated@@42 $generated@@87 $generated@@88 $generated@@89) ($generated@@43 $generated@@88))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (!  (=> ($generated@@41 $generated@@90 $generated@@91) (=> ($generated@@33 $generated@@94 $generated@@92 $generated@@93 $generated@@90) ($generated@@33 $generated@@94 $generated@@92 $generated@@93 $generated@@91)))
 :pattern ( ($generated@@41 $generated@@90 $generated@@91) ($generated@@33 $generated@@94 $generated@@92 $generated@@93 $generated@@90))
)))
(assert  (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@95 $generated@@98 $generated@@99 $generated@@100 ($generated@@97 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@103 $generated@@104) $generated@@101)
 :weight 0
)) (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@95 $generated@@105 $generated@@106 $generated@@107 ($generated@@97 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@95 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@95 $generated@@114 $generated@@115 $generated@@116 ($generated@@97 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@95 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@13 ($generated@@95 $generated@@28 $generated@@45 $generated@@9 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))  (=> (and (or (not (= $generated@@127 $generated@@123)) (not true)) ($generated@@13 ($generated@@74 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@124 $generated@@127) $generated@@125)))) (= $generated@@127 $generated@@126)))
 :pattern ( ($generated@@95 $generated@@28 $generated@@45 $generated@@9 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@129 $generated@@34)  (and ($generated@@27 $generated@@28 $generated@@129 $generated@@29) (or (not (= $generated@@129 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@129 $generated@@34))
 :pattern ( ($generated@@27 $generated@@28 $generated@@129 $generated@@29))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or (not (= $generated@@130 $generated@@132)) (not true)) (=> (and ($generated@@41 $generated@@130 $generated@@131) ($generated@@41 $generated@@131 $generated@@132)) ($generated@@41 $generated@@130 $generated@@132)))
 :pattern ( ($generated@@41 $generated@@130 $generated@@131) ($generated@@41 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (and (= ($generated@@133 ($generated@@38 $generated@@134 $generated@@135)) $generated@@134) (= ($generated@@26 ($generated@@38 $generated@@134 $generated@@135)) $generated@@135))
 :pattern ( ($generated@@38 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@74 $generated@@137 ($generated@@80 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@80 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and ($generated@@43 $generated@@138) (and (or (not (= $generated@@139 $generated@@30)) (not true)) (= ($generated@@31 $generated@@139) $generated@@29))) ($generated@@27 $generated@@10 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@138 $generated@@139) $generated@@37)) $generated))
 :pattern ( ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@138 $generated@@139) $generated@@37)))
)))
(assert (= ($generated@@25 $generated@@29) $generated@@4))
(assert (= ($generated@@140 $generated@@29) $generated@@6))
(assert (= ($generated@@25 $generated@@34) $generated@@5))
(assert (= ($generated@@140 $generated@@34) $generated@@6))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! ($generated@@33 $generated@@10 $generated@@142 $generated $generated@@141)
 :pattern ( ($generated@@33 $generated@@10 $generated@@142 $generated $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! ($generated@@27 $generated@@10 $generated@@143 $generated)
 :pattern ( ($generated@@27 $generated@@10 $generated@@143 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@150  (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@33 $generated@@28 $generated@@144 $generated@@34 $generated@@145)) (=> ($generated@@33 $generated@@28 $generated@@144 $generated@@34 $generated@@145) (=> (and (and (= $generated@@146 ($generated@@13 ($generated@@95 $generated@@28 $generated@@45 $generated@@9 $generated@@147 $generated@@144 $generated@@37))) (= ($generated@@42 $generated@@145 $generated@@148 $generated@@144) (+ ($generated@@15 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@145 $generated@@144) $generated@@37))) ($generated@@15 ($generated@@74 $generated@@10 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@28 ($generated@@47 $generated@@45 $generated@@46) $generated@@148 $generated@@144) $generated@@37)))))) (and ($generated@@27 $generated@@10 ($generated@@14 ($generated@@42 $generated@@145 $generated@@148 $generated@@144)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@146)))))
(let (($generated@@151 true))
(let (($generated@@152  (=> (= $generated@@147 ($generated@@96 $generated@@30 $generated@@148 $generated@@1 $generated@@144)) (and (=> (= (ControlFlow 0 5) 1) $generated@@151) (=> (= (ControlFlow 0 5) 3) $generated@@150)))))
(let (($generated@@153  (=> (and ($generated@@43 $generated@@145) ($generated@@40 $generated@@145)) (=> (and (and (and (or (not (= $generated@@144 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@144 $generated@@34) ($generated@@33 $generated@@28 $generated@@144 $generated@@34 $generated@@149))) (= 0 $generated@@85)) (and (and (= $generated@@149 $generated@@145) (and ($generated@@41 $generated@@149 $generated@@148) ($generated@@43 $generated@@148))) (= (ControlFlow 0 6) 5))) $generated@@152))))
$generated@@153)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
