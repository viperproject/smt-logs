(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@13 $generated@@35) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (and (<= 0 $generated@@37) (< $generated@@37 ($generated@@32 $generated@@36))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@36 $generated@@37))) ($generated@@33 ($generated@@31 $generated@@36))))
 :pattern ( ($generated@@30 $generated@@36 $generated@@37) ($generated@@31 $generated@@36))
)))
(assert (= ($generated@@32 $generated@@38) 0))
(assert (= ($generated@@39 $generated@@40) $generated@@3))
(assert (= ($generated@@13 $generated@@42) 4))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@45 $generated@@43 $generated@@46) ($generated@@41 $generated@@42 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 $generated@@43 $generated@@46))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 $generated@@44 $generated@@46))
)))
(assert ($generated@@47 $generated@@35 $generated@@40 $generated@@48))
(assert  (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@50 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@50 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@50 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@13 $generated@@51) 5)) (= ($generated@@13 $generated@@52) 6)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@13 ($generated@@53 $generated@@68 $generated@@69)) 7))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@53 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@53 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@74 $generated@@44 $generated@@75)  (or (= $generated@@74 $generated@@49) ($generated@@18 ($generated@@34 $generated@@14 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@42 ($generated@@53 $generated@@51 $generated@@52) $generated@@75 $generated@@74) $generated@@2)))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@74 $generated@@44 $generated@@75))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@76 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@81 $generated@@82) (= ($generated@@39 $generated@@82) $generated@@6))
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 $generated@@84) (= ($generated@@39 $generated@@84) $generated@@8))
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@34 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@34 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@81 $generated@@89) (exists (($generated@@90 T@U) ) (= $generated@@89 ($generated@@88 $generated@@90))))
 :pattern ( ($generated@@81 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@83 $generated@@91) (exists (($generated@@92 T@U) ) (= $generated@@91 ($generated@@31 $generated@@92))))
 :pattern ( ($generated@@83 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@93 ($generated@@85 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@41 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@93 ($generated@@85 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@29 ($generated@@98 $generated@@100)) $generated@@7) (= ($generated@@99 ($generated@@98 $generated@@100)) $generated@@12))
 :pattern ( ($generated@@98 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@101 $generated@@102 $generated@@48) (and (= ($generated@@85 $generated@@35 ($generated@@34 $generated@@35 $generated@@102)) $generated@@102) ($generated@@47 $generated@@35 ($generated@@34 $generated@@35 $generated@@102) $generated@@48)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@48))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@101 $generated@@103 $generated@@43) (and (= ($generated@@85 $generated@@42 ($generated@@34 $generated@@42 $generated@@103)) $generated@@103) ($generated@@47 $generated@@42 ($generated@@34 $generated@@42 $generated@@103) $generated@@43)))
 :pattern ( ($generated@@101 $generated@@103 $generated@@43))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@101 $generated@@104 $generated@@44) (and (= ($generated@@85 $generated@@42 ($generated@@34 $generated@@42 $generated@@104)) $generated@@104) ($generated@@47 $generated@@42 ($generated@@34 $generated@@42 $generated@@104) $generated@@44)))
 :pattern ( ($generated@@101 $generated@@104 $generated@@44))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@105 $generated@@43)  (and ($generated@@47 $generated@@42 $generated@@105 $generated@@44) (or (not (= $generated@@105 $generated@@49)) (not true))))
 :pattern ( ($generated@@47 $generated@@42 $generated@@105 $generated@@43))
 :pattern ( ($generated@@47 $generated@@42 $generated@@105 $generated@@44))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@106 $generated@@109) (= ($generated@@41 $generated@@35 ($generated@@88 $generated@@108) ($generated@@98 $generated@@107) $generated@@109) ($generated@@93 $generated@@108 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@41 $generated@@35 ($generated@@88 $generated@@108) ($generated@@98 $generated@@107) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@110 $generated@@111) (or ($generated@@81 $generated@@111) ($generated@@83 $generated@@111)))
 :pattern ( ($generated@@110 $generated@@111))
)))
(assert (= ($generated@@13 $generated@@112) 8))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and ($generated@@106 $generated@@116) (and ($generated@@83 $generated@@115) (exists (($generated@@117 T@U) ) (! ($generated@@41 $generated@@35 $generated@@115 ($generated@@98 $generated@@117) $generated@@116)
 :pattern ( ($generated@@41 $generated@@35 $generated@@115 ($generated@@98 $generated@@117) $generated@@116))
)))) ($generated@@41 $generated@@112 ($generated@@113 $generated@@115) ($generated@@114 $generated) $generated@@116))
 :pattern ( ($generated@@41 $generated@@112 ($generated@@113 $generated@@115) ($generated@@114 $generated) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@106 $generated@@120) (= ($generated@@41 $generated@@35 ($generated@@31 $generated@@119) ($generated@@98 $generated@@118) $generated@@120) ($generated@@41 $generated@@112 $generated@@119 ($generated@@114 $generated) $generated@@120)))
 :pattern ( ($generated@@41 $generated@@35 ($generated@@31 $generated@@119) ($generated@@98 $generated@@118) $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@47 $generated@@35 $generated@@122 ($generated@@98 $generated@@121)) (or ($generated@@81 $generated@@122) ($generated@@83 $generated@@122)))
 :pattern ( ($generated@@83 $generated@@122) ($generated@@47 $generated@@35 $generated@@122 ($generated@@98 $generated@@121)))
 :pattern ( ($generated@@81 $generated@@122) ($generated@@47 $generated@@35 $generated@@122 ($generated@@98 $generated@@121)))
)))
(assert (= ($generated@@13 $generated@@123) 9))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@101 $generated@@124 $generated) (and (= ($generated@@85 $generated@@123 ($generated@@34 $generated@@123 $generated@@124)) $generated@@124) ($generated@@47 $generated@@123 ($generated@@34 $generated@@123 $generated@@124) $generated)))
 :pattern ( ($generated@@101 $generated@@124 $generated))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@101 ($generated@@85 $generated@@127 $generated@@125) $generated@@126) ($generated@@47 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@101 ($generated@@85 $generated@@127 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (<= 0 ($generated@@32 $generated@@128))
 :pattern ( ($generated@@32 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@41 $generated@@112 $generated@@129 ($generated@@114 $generated@@130) $generated@@131) (forall (($generated@@132 Int) ) (!  (=> (and (<= 0 $generated@@132) (< $generated@@132 ($generated@@32 $generated@@129))) ($generated@@93 ($generated@@30 $generated@@129 $generated@@132) $generated@@130 $generated@@131))
 :pattern ( ($generated@@30 $generated@@129 $generated@@132))
)))
 :pattern ( ($generated@@41 $generated@@112 $generated@@129 ($generated@@114 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@114 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@114 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@29 ($generated@@114 $generated@@135)) $generated@@1)
 :pattern ( ($generated@@114 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@39 ($generated@@88 $generated@@136)) $generated@@6)
 :pattern ( ($generated@@88 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@98 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@98 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@88 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@88 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@39 ($generated@@31 $generated@@141)) $generated@@8)
 :pattern ( ($generated@@31 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@113 ($generated@@31 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@31 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@34 $generated@@144 ($generated@@85 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@85 $generated@@144 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@47 $generated@@35 ($generated@@88 $generated@@146) ($generated@@98 $generated@@145)) ($generated@@101 $generated@@146 $generated@@145))
 :pattern ( ($generated@@47 $generated@@35 ($generated@@88 $generated@@146) ($generated@@98 $generated@@145)))
)))
(assert (forall (($generated@@148 T@U) ) (! (< ($generated@@147 $generated@@148) ($generated@@33 ($generated@@88 $generated@@148)))
 :pattern ( ($generated@@88 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! (< ($generated@@149 $generated@@150) ($generated@@33 ($generated@@31 $generated@@150)))
 :pattern ( ($generated@@31 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and ($generated@@106 $generated@@153) (and ($generated@@81 $generated@@151) ($generated@@41 $generated@@35 $generated@@151 ($generated@@98 $generated@@152) $generated@@153))) ($generated@@93 ($generated@@139 $generated@@151) $generated@@152 $generated@@153))
 :pattern ( ($generated@@93 ($generated@@139 $generated@@151) $generated@@152 $generated@@153))
)))
(assert  (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@154 $generated@@157 $generated@@158 $generated@@159 ($generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@162 $generated@@163) $generated@@160)
 :weight 0
)) (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@154 $generated@@164 $generated@@165 $generated@@166 ($generated@@156 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@154 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@154 $generated@@173 $generated@@174 $generated@@175 ($generated@@156 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@154 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@18 ($generated@@154 $generated@@42 $generated@@51 $generated@@14 ($generated@@155 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@18 ($generated@@34 $generated@@14 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@42 ($generated@@53 $generated@@51 $generated@@52) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@154 $generated@@42 $generated@@51 $generated@@14 ($generated@@155 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@147 ($generated@@85 $generated@@35 $generated@@188)) ($generated@@33 $generated@@188))
 :pattern ( ($generated@@147 ($generated@@85 $generated@@35 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@101 $generated@@189 ($generated@@114 $generated@@190)) (and (= ($generated@@85 $generated@@112 ($generated@@34 $generated@@112 $generated@@189)) $generated@@189) ($generated@@47 $generated@@112 ($generated@@34 $generated@@112 $generated@@189) ($generated@@114 $generated@@190))))
 :pattern ( ($generated@@101 $generated@@189 ($generated@@114 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@101 $generated@@192 ($generated@@98 $generated@@191)) (and (= ($generated@@85 $generated@@35 ($generated@@34 $generated@@35 $generated@@192)) $generated@@192) ($generated@@47 $generated@@35 ($generated@@34 $generated@@35 $generated@@192) ($generated@@98 $generated@@191))))
 :pattern ( ($generated@@101 $generated@@192 ($generated@@98 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@47 $generated@@35 ($generated@@31 $generated@@194) ($generated@@98 $generated@@193)) ($generated@@47 $generated@@112 $generated@@194 ($generated@@114 $generated)))
 :pattern ( ($generated@@47 $generated@@35 ($generated@@31 $generated@@194) ($generated@@98 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@106 $generated@@196) ($generated@@47 $generated@@35 $generated@@195 $generated@@48)) ($generated@@41 $generated@@35 $generated@@195 $generated@@48 $generated@@196))
 :pattern ( ($generated@@41 $generated@@35 $generated@@195 $generated@@48 $generated@@196))
)))
(assert (= ($generated@@29 $generated@@48) $generated@@4))
(assert (= ($generated@@99 $generated@@48) $generated@@10))
(assert (= ($generated@@29 $generated@@43) $generated@@5))
(assert (= ($generated@@99 $generated@@43) $generated@@11))
(assert (= ($generated@@29 $generated@@44) $generated@@9))
(assert (= ($generated@@99 $generated@@44) $generated@@11))
(assert (= $generated@@40 ($generated@@78 $generated@@35 $generated@@40)))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@199 $generated@@44)  (or (= $generated@@199 $generated@@49) ($generated@@197 ($generated@@198 $generated@@199))))
 :pattern ( ($generated@@47 $generated@@42 $generated@@199 $generated@@44))
)))
(assert (forall (($generated@@200 Int) ) (! (= ($generated@@85 $generated@@15 ($generated@@19 ($generated@@76 $generated@@200))) ($generated@@78 $generated@@52 ($generated@@85 $generated@@15 ($generated@@19 $generated@@200))))
 :pattern ( ($generated@@85 $generated@@15 ($generated@@19 ($generated@@76 $generated@@200))))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@88 ($generated@@78 $generated@@52 $generated@@201)) ($generated@@78 $generated@@35 ($generated@@88 $generated@@201)))
 :pattern ( ($generated@@88 ($generated@@78 $generated@@52 $generated@@201)))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@31 ($generated@@78 $generated@@112 $generated@@202)) ($generated@@78 $generated@@35 ($generated@@31 $generated@@202)))
 :pattern ( ($generated@@31 ($generated@@78 $generated@@112 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@85 $generated@@204 ($generated@@78 $generated@@204 $generated@@203)) ($generated@@78 $generated@@52 ($generated@@85 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@85 $generated@@204 ($generated@@78 $generated@@204 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ) (!  (=> (= ($generated@@32 $generated@@205) 0) (= $generated@@205 $generated@@38))
 :pattern ( ($generated@@32 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! ($generated@@41 $generated@@123 $generated@@207 $generated $generated@@206)
 :pattern ( ($generated@@41 $generated@@123 $generated@@207 $generated $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@47 $generated@@112 $generated@@208 ($generated@@114 $generated@@209)) (forall (($generated@@210 Int) ) (!  (=> (and (<= 0 $generated@@210) (< $generated@@210 ($generated@@32 $generated@@208))) ($generated@@101 ($generated@@30 $generated@@208 $generated@@210) $generated@@209))
 :pattern ( ($generated@@30 $generated@@208 $generated@@210))
)))
 :pattern ( ($generated@@47 $generated@@112 $generated@@208 ($generated@@114 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 Int) ) (!  (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@32 $generated@@211))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@211 $generated@@212))) ($generated@@149 $generated@@211)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@211 $generated@@212))))
)))
(assert (forall (($generated@@213 T@U) ) (! ($generated@@47 $generated@@123 $generated@@213 $generated)
 :pattern ( ($generated@@47 $generated@@123 $generated@@213 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@228 true))
(let (($generated@@229  (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@81 $generated@@214) ($generated@@18 ($generated@@78 $generated@@14 ($generated@@17 true))))) (=> (=> ($generated@@81 $generated@@214) ($generated@@18 ($generated@@78 $generated@@14 ($generated@@17 true)))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> (not ($generated@@81 $generated@@214)) ($generated@@18 ($generated@@78 $generated@@14 ($generated@@17 true)))))))))
(let (($generated@@230  (=> (and (= $generated@@215 ($generated@@76 1)) (= (ControlFlow 0 6) 4)) $generated@@229)))
(let (($generated@@231 true))
(let (($generated@@232  (and (=> (= (ControlFlow 0 7) (- 0 8)) (> $generated@@215 0)) (=> (> $generated@@215 0) (and (=> (= (ControlFlow 0 7) 2) $generated@@231) (=> (= (ControlFlow 0 7) 6) $generated@@230))))))
(let (($generated@@233  (=> (and (and (= $generated@@216 $generated@@40) (= $generated@@217 ($generated@@76 1))) (and (= $generated@@215 $generated@@217) (= (ControlFlow 0 11) 7))) $generated@@232)))
(let (($generated@@234  (=> (= $generated@@214 ($generated@@88 ($generated@@85 $generated@@35 $generated@@216))) (=> (and ($generated@@47 $generated@@35 $generated@@216 $generated@@48) ($generated@@41 $generated@@35 $generated@@216 $generated@@48 $generated@@218)) (and (=> (= (ControlFlow 0 13) 11) $generated@@233) (=> (= (ControlFlow 0 13) 12) $generated@@228))))))
(let (($generated@@235  (=> (= $generated@@214 ($generated@@31 $generated@@219)) (=> (and ($generated@@47 $generated@@112 $generated@@219 ($generated@@114 $generated)) ($generated@@41 $generated@@112 $generated@@219 ($generated@@114 $generated) $generated@@218)) (=> (and (and (and ($generated@@47 $generated@@112 $generated@@220 ($generated@@114 $generated)) ($generated@@41 $generated@@112 $generated@@220 ($generated@@114 $generated) $generated@@218)) (and (= $generated@@221 $generated@@219) ($generated@@47 $generated@@112 $generated@@221 ($generated@@114 $generated)))) (and (and (= $generated@@220 $generated@@221) (= $generated@@222 ($generated@@76 2))) (and (= $generated@@215 $generated@@222) (= (ControlFlow 0 9) 7)))) $generated@@232)))))
(let (($generated@@236 true))
(let (($generated@@237  (=> (or (not (= $generated@@214 ($generated@@88 ($generated@@85 $generated@@35 $generated@@216)))) (not true)) (and (=> (= (ControlFlow 0 10) 9) $generated@@235) (=> (= (ControlFlow 0 10) 1) $generated@@236)))))
(let (($generated@@238  (=> (and (= $generated@@223 ($generated@@155 $generated@@49 $generated@@218 $generated@@2 false)) (= $generated@@224 ($generated@@76 0))) (and (=> (= (ControlFlow 0 14) 13) $generated@@234) (=> (= (ControlFlow 0 14) 10) $generated@@237)))))
(let (($generated@@239  (=> (and (and ($generated@@106 $generated@@218) ($generated@@225 $generated@@218)) (and (or (not (= $generated@@226 $generated@@49)) (not true)) (and ($generated@@47 $generated@@42 $generated@@226 $generated@@43) ($generated@@41 $generated@@42 $generated@@226 $generated@@43 $generated@@218)))) (=> (and (and (and ($generated@@47 $generated@@35 $generated@@214 ($generated@@98 $generated@@48)) ($generated@@41 $generated@@35 $generated@@214 ($generated@@98 $generated@@48) $generated@@218)) ($generated@@110 $generated@@214)) (and (= 1 $generated@@227) (= (ControlFlow 0 15) 14))) $generated@@238))))
$generated@@239)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
