(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@96 (T@U) Int)
(declare-fun $generated@@97 (T@U) Int)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T T@T) T@T)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@113 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@27) $generated@@5))
(assert (= ($generated@@9 $generated@@30) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@32)) ($generated@@28 $generated@@33))
 :pattern ( ($generated@@28 $generated@@33) ($generated@@29 $generated@@30 $generated@@33 ($generated@@31 $generated@@32)))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@36 $generated@@38) ($generated@@34 $generated@@30 $generated@@27 ($generated@@35 $generated@@37) $generated@@38))
 :pattern ( ($generated@@34 $generated@@30 $generated@@27 ($generated@@35 $generated@@37) $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ) (! ($generated@@29 $generated@@30 $generated@@27 ($generated@@35 $generated@@39))
 :pattern ( ($generated@@29 $generated@@30 $generated@@27 ($generated@@35 $generated@@39)))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@28 $generated@@43) (= ($generated@@26 $generated@@43) $generated@@3))
 :pattern ( ($generated@@28 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@44 $generated@@45) (= ($generated@@26 $generated@@45) $generated@@5))
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@46 $generated@@47) (= ($generated@@26 $generated@@47) $generated@@6))
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@48 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@48 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@44 $generated@@52) (= $generated@@52 $generated@@27))
 :pattern ( ($generated@@44 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@28 $generated@@54) (exists (($generated@@55 T@U) ) (= $generated@@54 ($generated@@53 $generated@@55))))
 :pattern ( ($generated@@28 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@46 $generated@@57) (exists (($generated@@58 T@U) ) (= $generated@@57 ($generated@@56 $generated@@58))))
 :pattern ( ($generated@@46 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@59 ($generated@@49 $generated@@63 $generated@@60) $generated@@61 $generated@@62) ($generated@@34 $generated@@63 $generated@@60 $generated@@61 $generated@@62))
 :pattern ( ($generated@@59 ($generated@@49 $generated@@63 $generated@@60) $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (!  (and (= ($generated@@25 ($generated@@35 $generated@@65)) $generated@@2) (= ($generated@@64 ($generated@@35 $generated@@65)) $generated@@7))
 :pattern ( ($generated@@35 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ) (!  (and (= ($generated@@25 ($generated@@31 $generated@@66)) $generated@@4) (= ($generated@@64 ($generated@@31 $generated@@66)) $generated@@8))
 :pattern ( ($generated@@31 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@36 $generated@@69) (= ($generated@@34 $generated@@30 ($generated@@53 $generated@@68) ($generated@@31 $generated@@67) $generated@@69) ($generated@@59 $generated@@68 $generated@@67 $generated@@69)))
 :pattern ( ($generated@@34 $generated@@30 ($generated@@53 $generated@@68) ($generated@@31 $generated@@67) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@70 $generated@@71) (or ($generated@@44 $generated@@71) ($generated@@46 $generated@@71)))
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@36 $generated@@74) (= ($generated@@34 $generated@@30 ($generated@@56 $generated@@73) ($generated@@35 $generated@@72) $generated@@74) ($generated@@34 $generated@@30 $generated@@73 ($generated@@31 $generated@@72) $generated@@74)))
 :pattern ( ($generated@@34 $generated@@30 ($generated@@56 $generated@@73) ($generated@@35 $generated@@72) $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@76 ($generated@@35 $generated@@75)) (or ($generated@@44 $generated@@76) ($generated@@46 $generated@@76)))
 :pattern ( ($generated@@46 $generated@@76) ($generated@@29 $generated@@30 $generated@@76 ($generated@@35 $generated@@75)))
 :pattern ( ($generated@@44 $generated@@76) ($generated@@29 $generated@@30 $generated@@76 ($generated@@35 $generated@@75)))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@77 $generated@@78 $generated) (and (= ($generated@@49 $generated@@11 ($generated@@48 $generated@@11 $generated@@78)) $generated@@78) ($generated@@29 $generated@@11 ($generated@@48 $generated@@11 $generated@@78) $generated)))
 :pattern ( ($generated@@77 $generated@@78 $generated))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@49 $generated@@81 $generated@@79) $generated@@80) ($generated@@29 $generated@@81 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@49 $generated@@81 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 ($generated@@35 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@35 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@26 ($generated@@53 $generated@@84)) $generated@@3)
 :pattern ( ($generated@@53 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 ($generated@@31 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@31 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 ($generated@@53 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@53 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@26 ($generated@@56 $generated@@89)) $generated@@6)
 :pattern ( ($generated@@56 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 ($generated@@56 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@56 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@48 $generated@@93 ($generated@@49 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@49 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@53 $generated@@95) ($generated@@31 $generated@@94)) ($generated@@77 $generated@@95 $generated@@94))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@53 $generated@@95) ($generated@@31 $generated@@94)))
)))
(assert (forall (($generated@@98 T@U) ) (! (< ($generated@@96 $generated@@98) ($generated@@97 ($generated@@53 $generated@@98)))
 :pattern ( ($generated@@53 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (! (< ($generated@@97 $generated@@99) ($generated@@97 ($generated@@56 $generated@@99)))
 :pattern ( ($generated@@56 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and ($generated@@36 $generated@@102) (and ($generated@@28 $generated@@100) ($generated@@34 $generated@@30 $generated@@100 ($generated@@31 $generated@@101) $generated@@102))) ($generated@@59 ($generated@@87 $generated@@100) $generated@@101 $generated@@102))
 :pattern ( ($generated@@59 ($generated@@87 $generated@@100) $generated@@101 $generated@@102))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@103 $generated@@114 $generated@@115 $generated@@116 ($generated@@110 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@103 $generated@@121 $generated@@122 $generated@@123 ($generated@@110 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@103 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@103 $generated@@130 $generated@@131 $generated@@132 ($generated@@110 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))) (= ($generated@@9 $generated@@104) 4)) (= ($generated@@9 $generated@@105) 5)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@107 $generated@@139 $generated@@140 ($generated@@111 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@143) $generated@@141)
 :weight 0
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@148 $generated@@149) (= ($generated@@107 $generated@@144 $generated@@145 ($generated@@111 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@107 $generated@@144 $generated@@145 $generated@@147 $generated@@149)))
 :weight 0
))) (= ($generated@@9 $generated@@108) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@9 ($generated@@109 $generated@@150 $generated@@151)) 7))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@112 ($generated@@109 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@109 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@113 ($generated@@109 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@109 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@14 ($generated@@103 $generated@@104 $generated@@105 $generated@@10 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@107 $generated@@105 $generated@@108 ($generated@@107 $generated@@104 ($generated@@109 $generated@@105 $generated@@108) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105 $generated@@10 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@96 ($generated@@49 $generated@@30 $generated@@162)) ($generated@@97 $generated@@162))
 :pattern ( ($generated@@96 ($generated@@49 $generated@@30 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@77 $generated@@164 ($generated@@35 $generated@@163)) (and (= ($generated@@49 $generated@@30 ($generated@@48 $generated@@30 $generated@@164)) $generated@@164) ($generated@@29 $generated@@30 ($generated@@48 $generated@@30 $generated@@164) ($generated@@35 $generated@@163))))
 :pattern ( ($generated@@77 $generated@@164 ($generated@@35 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> ($generated@@77 $generated@@166 ($generated@@31 $generated@@165)) (and (= ($generated@@49 $generated@@30 ($generated@@48 $generated@@30 $generated@@166)) $generated@@166) ($generated@@29 $generated@@30 ($generated@@48 $generated@@30 $generated@@166) ($generated@@31 $generated@@165))))
 :pattern ( ($generated@@77 $generated@@166 ($generated@@31 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@56 $generated@@168) ($generated@@35 $generated@@167)) ($generated@@29 $generated@@30 $generated@@168 ($generated@@31 $generated@@167)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@56 $generated@@168) ($generated@@35 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@36 $generated@@171) (and ($generated@@46 $generated@@169) ($generated@@34 $generated@@30 $generated@@169 ($generated@@35 $generated@@170) $generated@@171))) ($generated@@34 $generated@@30 ($generated@@90 $generated@@169) ($generated@@31 $generated@@170) $generated@@171))
 :pattern ( ($generated@@34 $generated@@30 ($generated@@90 $generated@@169) ($generated@@31 $generated@@170) $generated@@171))
)))
(assert (= $generated@@27 ($generated@@40 $generated@@30 $generated@@27)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@53 ($generated@@40 $generated@@108 $generated@@172)) ($generated@@40 $generated@@30 ($generated@@53 $generated@@172)))
 :pattern ( ($generated@@53 ($generated@@40 $generated@@108 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@56 ($generated@@40 $generated@@30 $generated@@173)) ($generated@@40 $generated@@30 ($generated@@56 $generated@@173)))
 :pattern ( ($generated@@56 ($generated@@40 $generated@@30 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@49 $generated@@175 ($generated@@40 $generated@@175 $generated@@174)) ($generated@@40 $generated@@108 ($generated@@49 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@49 $generated@@175 ($generated@@40 $generated@@175 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@34 $generated@@11 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@34 $generated@@11 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@29 $generated@@11 $generated@@178 $generated)
 :pattern ( ($generated@@29 $generated@@11 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@186  (=> (and (and (= $generated@@179 ($generated@@106 $generated@@180 $generated@@181 $generated@@1 false)) (= $generated@@182 $generated@@183)) (and ($generated@@29 $generated@@30 $generated@@182 ($generated@@35 $generated)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@46 $generated@@182))))
(let (($generated@@187  (=> (and ($generated@@36 $generated@@181) ($generated@@184 $generated@@181)) (=> (and (and (and (and ($generated@@29 $generated@@30 $generated@@183 ($generated@@35 $generated)) ($generated@@34 $generated@@30 $generated@@183 ($generated@@35 $generated) $generated@@181)) ($generated@@70 $generated@@183)) (= 2 $generated@@185)) (and ($generated@@46 $generated@@183) (= (ControlFlow 0 3) 2))) $generated@@186))))
$generated@@187)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
