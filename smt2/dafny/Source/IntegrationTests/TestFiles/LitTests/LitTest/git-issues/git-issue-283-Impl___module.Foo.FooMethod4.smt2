(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U Int) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@T T@U T@U) Bool)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@104 (T@U) Bool)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@12 $generated@@34) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (and (<= 0 $generated@@36) (< $generated@@36 ($generated@@31 $generated@@35))) (< ($generated@@32 ($generated@@33 $generated@@34 ($generated@@29 $generated@@35 $generated@@36))) ($generated@@32 ($generated@@30 $generated@@35))))
 :pattern ( ($generated@@29 $generated@@35 $generated@@36) ($generated@@30 $generated@@35))
)))
(assert (= ($generated@@31 $generated@@37) 0))
(assert (= ($generated@@12 $generated@@39) 4))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@42 $generated@@40 $generated@@43) ($generated@@38 $generated@@39 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 $generated@@40 $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 $generated@@41 $generated@@43))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@12 $generated@@46) 5)) (= ($generated@@12 $generated@@47) 6)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@12 ($generated@@48 $generated@@63 $generated@@64)) 7))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@69 $generated@@41 $generated@@70)  (or (= $generated@@69 $generated@@44) ($generated@@17 ($generated@@33 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@39 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@69) $generated@@2)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@69 $generated@@41 $generated@@70))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@76 $generated@@78) (= ($generated@@77 $generated@@78) $generated@@4))
 :pattern ( ($generated@@76 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 $generated@@80) (= ($generated@@77 $generated@@80) $generated@@6))
 :pattern ( ($generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 ($generated@@33 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@33 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@76 $generated@@85) (exists (($generated@@86 T@U) ) (= $generated@@85 ($generated@@84 $generated@@86))))
 :pattern ( ($generated@@76 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@79 $generated@@87) (exists (($generated@@88 T@U) ) (= $generated@@87 ($generated@@30 $generated@@88))))
 :pattern ( ($generated@@79 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@89 ($generated@@81 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@38 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@89 ($generated@@81 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@28 ($generated@@94 $generated@@96)) $generated@@5) (= ($generated@@95 ($generated@@94 $generated@@96)) $generated@@10))
 :pattern ( ($generated@@94 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@97 $generated@@99 $generated@@40) (and (= ($generated@@81 $generated@@39 ($generated@@33 $generated@@39 $generated@@99)) $generated@@99) ($generated@@98 $generated@@39 ($generated@@33 $generated@@39 $generated@@99) $generated@@40)))
 :pattern ( ($generated@@97 $generated@@99 $generated@@40))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@97 $generated@@101 $generated@@100) (and (= ($generated@@81 $generated@@34 ($generated@@33 $generated@@34 $generated@@101)) $generated@@101) ($generated@@98 $generated@@34 ($generated@@33 $generated@@34 $generated@@101) $generated@@100)))
 :pattern ( ($generated@@97 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@97 $generated@@102 $generated@@41) (and (= ($generated@@81 $generated@@39 ($generated@@33 $generated@@39 $generated@@102)) $generated@@102) ($generated@@98 $generated@@39 ($generated@@33 $generated@@39 $generated@@102) $generated@@41)))
 :pattern ( ($generated@@97 $generated@@102 $generated@@41))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@98 $generated@@39 $generated@@103 $generated@@40)  (and ($generated@@98 $generated@@39 $generated@@103 $generated@@41) (or (not (= $generated@@103 $generated@@44)) (not true))))
 :pattern ( ($generated@@98 $generated@@39 $generated@@103 $generated@@40))
 :pattern ( ($generated@@98 $generated@@39 $generated@@103 $generated@@41))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@104 $generated@@107) (= ($generated@@38 $generated@@34 ($generated@@84 $generated@@106) ($generated@@94 $generated@@105) $generated@@107) ($generated@@89 $generated@@106 $generated@@105 $generated@@107)))
 :pattern ( ($generated@@38 $generated@@34 ($generated@@84 $generated@@106) ($generated@@94 $generated@@105) $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@108 $generated@@109) (or ($generated@@76 $generated@@109) ($generated@@79 $generated@@109)))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert (= ($generated@@12 $generated@@110) 8))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@104 $generated@@114) (and ($generated@@79 $generated@@113) (exists (($generated@@115 T@U) ) (! ($generated@@38 $generated@@34 $generated@@113 ($generated@@94 $generated@@115) $generated@@114)
 :pattern ( ($generated@@38 $generated@@34 $generated@@113 ($generated@@94 $generated@@115) $generated@@114))
)))) ($generated@@38 $generated@@110 ($generated@@111 $generated@@113) ($generated@@112 $generated) $generated@@114))
 :pattern ( ($generated@@38 $generated@@110 ($generated@@111 $generated@@113) ($generated@@112 $generated) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@104 $generated@@118) (= ($generated@@38 $generated@@34 ($generated@@30 $generated@@117) ($generated@@94 $generated@@116) $generated@@118) ($generated@@38 $generated@@110 $generated@@117 ($generated@@112 $generated) $generated@@118)))
 :pattern ( ($generated@@38 $generated@@34 ($generated@@30 $generated@@117) ($generated@@94 $generated@@116) $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@98 $generated@@34 $generated@@120 ($generated@@94 $generated@@119)) (or ($generated@@76 $generated@@120) ($generated@@79 $generated@@120)))
 :pattern ( ($generated@@79 $generated@@120) ($generated@@98 $generated@@34 $generated@@120 ($generated@@94 $generated@@119)))
 :pattern ( ($generated@@76 $generated@@120) ($generated@@98 $generated@@34 $generated@@120 ($generated@@94 $generated@@119)))
)))
(assert (= ($generated@@12 $generated@@121) 9))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@97 $generated@@122 $generated) (and (= ($generated@@81 $generated@@121 ($generated@@33 $generated@@121 $generated@@122)) $generated@@122) ($generated@@98 $generated@@121 ($generated@@33 $generated@@121 $generated@@122) $generated)))
 :pattern ( ($generated@@97 $generated@@122 $generated))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@97 ($generated@@81 $generated@@125 $generated@@123) $generated@@124) ($generated@@98 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@97 ($generated@@81 $generated@@125 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (<= 0 ($generated@@31 $generated@@126))
 :pattern ( ($generated@@31 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@38 $generated@@110 $generated@@127 ($generated@@112 $generated@@128) $generated@@129) (forall (($generated@@130 Int) ) (!  (=> (and (<= 0 $generated@@130) (< $generated@@130 ($generated@@31 $generated@@127))) ($generated@@89 ($generated@@29 $generated@@127 $generated@@130) $generated@@128 $generated@@129))
 :pattern ( ($generated@@29 $generated@@127 $generated@@130))
)))
 :pattern ( ($generated@@38 $generated@@110 $generated@@127 ($generated@@112 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@112 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@112 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@28 ($generated@@112 $generated@@133)) $generated@@1)
 :pattern ( ($generated@@112 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@77 ($generated@@84 $generated@@134)) $generated@@4)
 :pattern ( ($generated@@84 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@94 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@94 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@84 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@84 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@77 ($generated@@30 $generated@@139)) $generated@@6)
 :pattern ( ($generated@@30 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@111 ($generated@@30 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@30 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@33 $generated@@142 ($generated@@81 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@81 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@98 $generated@@34 ($generated@@84 $generated@@144) ($generated@@94 $generated@@143)) ($generated@@97 $generated@@144 $generated@@143))
 :pattern ( ($generated@@98 $generated@@34 ($generated@@84 $generated@@144) ($generated@@94 $generated@@143)))
)))
(assert (forall (($generated@@146 T@U) ) (! (< ($generated@@145 $generated@@146) ($generated@@32 ($generated@@84 $generated@@146)))
 :pattern ( ($generated@@84 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! (< ($generated@@147 $generated@@148) ($generated@@32 ($generated@@30 $generated@@148)))
 :pattern ( ($generated@@30 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@104 $generated@@151) (and ($generated@@76 $generated@@149) ($generated@@38 $generated@@34 $generated@@149 ($generated@@94 $generated@@150) $generated@@151))) ($generated@@89 ($generated@@137 $generated@@149) $generated@@150 $generated@@151))
 :pattern ( ($generated@@89 ($generated@@137 $generated@@149) $generated@@150 $generated@@151))
)))
(assert  (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@152 $generated@@155 $generated@@156 $generated@@157 ($generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@154 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@152 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@152 $generated@@171 $generated@@172 $generated@@173 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@152 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@17 ($generated@@152 $generated@@39 $generated@@46 $generated@@13 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@17 ($generated@@33 $generated@@13 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@39 ($generated@@48 $generated@@46 $generated@@47) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@152 $generated@@39 $generated@@46 $generated@@13 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@145 ($generated@@81 $generated@@34 $generated@@186)) ($generated@@32 $generated@@186))
 :pattern ( ($generated@@145 ($generated@@81 $generated@@34 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@97 $generated@@187 ($generated@@112 $generated@@188)) (and (= ($generated@@81 $generated@@110 ($generated@@33 $generated@@110 $generated@@187)) $generated@@187) ($generated@@98 $generated@@110 ($generated@@33 $generated@@110 $generated@@187) ($generated@@112 $generated@@188))))
 :pattern ( ($generated@@97 $generated@@187 ($generated@@112 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@97 $generated@@190 ($generated@@94 $generated@@189)) (and (= ($generated@@81 $generated@@34 ($generated@@33 $generated@@34 $generated@@190)) $generated@@190) ($generated@@98 $generated@@34 ($generated@@33 $generated@@34 $generated@@190) ($generated@@94 $generated@@189))))
 :pattern ( ($generated@@97 $generated@@190 ($generated@@94 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@98 $generated@@34 ($generated@@30 $generated@@192) ($generated@@94 $generated@@191)) ($generated@@98 $generated@@110 $generated@@192 ($generated@@112 $generated)))
 :pattern ( ($generated@@98 $generated@@34 ($generated@@30 $generated@@192) ($generated@@94 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@104 $generated@@194) ($generated@@98 $generated@@34 $generated@@193 $generated@@100)) ($generated@@38 $generated@@34 $generated@@193 $generated@@100 $generated@@194))
 :pattern ( ($generated@@38 $generated@@34 $generated@@193 $generated@@100 $generated@@194))
)))
(assert (= ($generated@@28 $generated@@40) $generated@@3))
(assert (= ($generated@@95 $generated@@40) $generated@@9))
(assert (= ($generated@@28 $generated@@100) $generated@@7))
(assert (= ($generated@@95 $generated@@100) $generated@@11))
(assert (= ($generated@@28 $generated@@41) $generated@@8))
(assert (= ($generated@@95 $generated@@41) $generated@@9))
(assert (forall (($generated@@197 T@U) ) (! (= ($generated@@98 $generated@@39 $generated@@197 $generated@@41)  (or (= $generated@@197 $generated@@44) ($generated@@195 ($generated@@196 $generated@@197))))
 :pattern ( ($generated@@98 $generated@@39 $generated@@197 $generated@@41))
)))
(assert (forall (($generated@@198 Int) ) (! (= ($generated@@81 $generated@@14 ($generated@@18 ($generated@@71 $generated@@198))) ($generated@@73 $generated@@47 ($generated@@81 $generated@@14 ($generated@@18 $generated@@198))))
 :pattern ( ($generated@@81 $generated@@14 ($generated@@18 ($generated@@71 $generated@@198))))
)))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@84 ($generated@@73 $generated@@47 $generated@@199)) ($generated@@73 $generated@@34 ($generated@@84 $generated@@199)))
 :pattern ( ($generated@@84 ($generated@@73 $generated@@47 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@30 ($generated@@73 $generated@@110 $generated@@200)) ($generated@@73 $generated@@34 ($generated@@30 $generated@@200)))
 :pattern ( ($generated@@30 ($generated@@73 $generated@@110 $generated@@200)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@81 $generated@@202 ($generated@@73 $generated@@202 $generated@@201)) ($generated@@73 $generated@@47 ($generated@@81 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@81 $generated@@202 ($generated@@73 $generated@@202 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ) (!  (=> (= ($generated@@31 $generated@@203) 0) (= $generated@@203 $generated@@37))
 :pattern ( ($generated@@31 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@38 $generated@@121 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@38 $generated@@121 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@98 $generated@@110 $generated@@206 ($generated@@112 $generated@@207)) (forall (($generated@@208 Int) ) (!  (=> (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@31 $generated@@206))) ($generated@@97 ($generated@@29 $generated@@206 $generated@@208) $generated@@207))
 :pattern ( ($generated@@29 $generated@@206 $generated@@208))
)))
 :pattern ( ($generated@@98 $generated@@110 $generated@@206 ($generated@@112 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 Int) ) (!  (=> (and (<= 0 $generated@@210) (< $generated@@210 ($generated@@31 $generated@@209))) (< ($generated@@32 ($generated@@33 $generated@@34 ($generated@@29 $generated@@209 $generated@@210))) ($generated@@147 $generated@@209)))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@34 ($generated@@29 $generated@@209 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ) (! ($generated@@98 $generated@@121 $generated@@211 $generated)
 :pattern ( ($generated@@98 $generated@@121 $generated@@211 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@228  (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@76 $generated@@212) ($generated@@17 ($generated@@73 $generated@@13 ($generated@@16 true))))) (=> (=> ($generated@@76 $generated@@212) ($generated@@17 ($generated@@73 $generated@@13 ($generated@@16 true)))) (=> (= (ControlFlow 0 4) (- 0 3)) (=> (not ($generated@@76 $generated@@212)) ($generated@@17 ($generated@@73 $generated@@13 ($generated@@16 true)))))))))
(let (($generated@@229  (=> (and (= $generated@@213 ($generated@@71 1)) (= (ControlFlow 0 6) 4)) $generated@@228)))
(let (($generated@@230 true))
(let (($generated@@231  (and (=> (= (ControlFlow 0 7) (- 0 8)) (> $generated@@213 0)) (=> (> $generated@@213 0) (and (=> (= (ControlFlow 0 7) 2) $generated@@230) (=> (= (ControlFlow 0 7) 6) $generated@@229))))))
(let (($generated@@232  (=> (= $generated@@212 ($generated@@30 $generated@@214)) (=> (and ($generated@@98 $generated@@110 $generated@@214 ($generated@@112 $generated)) ($generated@@38 $generated@@110 $generated@@214 ($generated@@112 $generated) $generated@@215)) (=> (and (and (and ($generated@@98 $generated@@110 $generated@@216 ($generated@@112 $generated)) ($generated@@38 $generated@@110 $generated@@216 ($generated@@112 $generated) $generated@@215)) (and (= $generated@@217 $generated@@214) ($generated@@98 $generated@@110 $generated@@217 ($generated@@112 $generated)))) (and (and (= $generated@@216 $generated@@217) (= $generated@@218 ($generated@@71 2))) (and (= $generated@@213 $generated@@218) (= (ControlFlow 0 10) 7)))) $generated@@231)))))
(let (($generated@@233  (=> (= $generated@@212 ($generated@@84 ($generated@@81 $generated@@34 $generated@@219))) (=> (and ($generated@@98 $generated@@34 $generated@@219 $generated@@100) ($generated@@38 $generated@@34 $generated@@219 $generated@@100 $generated@@215)) (=> (and (and (and ($generated@@98 $generated@@34 $generated@@220 $generated@@100) ($generated@@38 $generated@@34 $generated@@220 $generated@@100 $generated@@215)) (and (= $generated@@221 $generated@@219) ($generated@@98 $generated@@34 $generated@@221 $generated@@100))) (and (and (= $generated@@220 $generated@@221) (= $generated@@222 ($generated@@71 1))) (and (= $generated@@213 $generated@@222) (= (ControlFlow 0 9) 7)))) $generated@@231)))))
(let (($generated@@234 true))
(let (($generated@@235  (=> (or (not (= $generated@@212 ($generated@@84 ($generated@@81 $generated@@34 $generated@@219)))) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@232) (=> (= (ControlFlow 0 11) 1) $generated@@234)))))
(let (($generated@@236  (=> (and (= $generated@@223 ($generated@@153 $generated@@44 $generated@@215 $generated@@2 false)) (= $generated@@224 ($generated@@71 0))) (and (=> (= (ControlFlow 0 12) 9) $generated@@233) (=> (= (ControlFlow 0 12) 11) $generated@@235)))))
(let (($generated@@237  (=> (and (and ($generated@@104 $generated@@215) ($generated@@225 $generated@@215)) (and (or (not (= $generated@@226 $generated@@44)) (not true)) (and ($generated@@98 $generated@@39 $generated@@226 $generated@@40) ($generated@@38 $generated@@39 $generated@@226 $generated@@40 $generated@@215)))) (=> (and (and (and ($generated@@98 $generated@@34 $generated@@212 ($generated@@94 $generated@@100)) ($generated@@38 $generated@@34 $generated@@212 ($generated@@94 $generated@@100) $generated@@215)) ($generated@@108 $generated@@212)) (and (= 1 $generated@@227) (= (ControlFlow 0 13) 12))) $generated@@236))))
$generated@@237)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
