(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U Int) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U T@U) Bool)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@124 (Int) T@U)
(declare-fun $generated@@125 (T@U) Int)
(declare-fun $generated@@127 (T@U) Int)
(declare-fun $generated@@129 (T@U) Int)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@1))
(assert (= ($generated@@25 $generated@@0) $generated@@2))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (and (<= 0 $generated@@33) (< $generated@@33 ($generated@@28 $generated@@32))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@32 $generated@@33))) ($generated@@29 ($generated@@27 $generated@@32))))
 :pattern ( ($generated@@26 $generated@@32 $generated@@33) ($generated@@27 $generated@@32))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (and (or ($generated@@37 $generated@@43 $generated@@44) (and (< 0 $generated@@34) (and ($generated@@38 $generated@@31 $generated@@44 ($generated@@39 $generated@@43) $generated@@42) ($generated@@40 $generated@@44)))) ($generated@@41 $generated@@42)) ($generated@@35 ($generated@@36 $generated@@43 $generated@@44) $generated@@43 $generated@@42))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@43 $generated@@44) $generated@@43 $generated@@42))
))))
(assert (= ($generated@@28 $generated@@45) 0))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (= ($generated@@9 $generated@@52) 4))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (and ($generated@@51 $generated@@52 $generated@@56 ($generated@@54 $generated@@58)) ($generated@@55 $generated@@57 $generated@@58)) ($generated@@51 $generated@@52 ($generated@@53 $generated@@56 $generated@@57) ($generated@@54 $generated@@58)))
 :pattern ( ($generated@@51 $generated@@52 ($generated@@53 $generated@@56 $generated@@57) ($generated@@54 $generated@@58)))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@37 $generated@@59 $generated@@60) (and (< 0 $generated@@34) (and ($generated@@51 $generated@@31 $generated@@60 ($generated@@39 $generated@@59)) ($generated@@40 $generated@@60)))) ($generated@@55 ($generated@@36 $generated@@59 $generated@@60) $generated@@59))
 :pattern ( ($generated@@36 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@40 $generated@@62) (= ($generated@@61 $generated@@62) $generated@@6))
 :pattern ( ($generated@@40 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@61 $generated@@64) $generated@@7))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@30 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@30 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@40 $generated@@69) (exists (($generated@@70 T@U) ) (= $generated@@69 ($generated@@68 $generated@@70))))
 :pattern ( ($generated@@40 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@63 $generated@@71) (exists (($generated@@72 T@U) ) (= $generated@@71 ($generated@@27 $generated@@72))))
 :pattern ( ($generated@@63 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@28 ($generated@@53 $generated@@73 $generated@@74)) (+ 1 ($generated@@28 $generated@@73)))
 :pattern ( ($generated@@53 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@35 ($generated@@65 $generated@@78 $generated@@75) $generated@@76 $generated@@77) ($generated@@38 $generated@@78 $generated@@75 $generated@@76 $generated@@77))
 :pattern ( ($generated@@35 ($generated@@65 $generated@@78 $generated@@75) $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (!  (and (= ($generated@@25 ($generated@@39 $generated@@80)) $generated@@5) (= ($generated@@79 ($generated@@39 $generated@@80)) $generated@@8))
 :pattern ( ($generated@@39 $generated@@80))
)))
(assert (= ($generated@@9 $generated@@81) 5))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@37 $generated@@83 ($generated@@48 $generated@@31 $generated@@84)) (and (< 0 $generated@@34) (and ($generated@@51 $generated@@31 $generated@@84 ($generated@@39 $generated@@83)) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@13 ($generated@@40 ($generated@@48 $generated@@31 $generated@@84)))))))) (= ($generated@@36 $generated@@83 ($generated@@48 $generated@@31 $generated@@84)) ($generated@@48 $generated@@81 ($generated@@82 ($generated@@48 $generated@@31 $generated@@84)))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@83 ($generated@@48 $generated@@31 $generated@@84)))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 Int) ($generated@@87 T@U) ) (!  (and (=> (= $generated@@86 ($generated@@28 $generated@@85)) (= ($generated@@26 ($generated@@53 $generated@@85 $generated@@87) $generated@@86) $generated@@87)) (=> (or (not (= $generated@@86 ($generated@@28 $generated@@85))) (not true)) (= ($generated@@26 ($generated@@53 $generated@@85 $generated@@87) $generated@@86) ($generated@@26 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@26 ($generated@@53 $generated@@85 $generated@@87) $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@41 $generated@@90) (= ($generated@@38 $generated@@31 ($generated@@68 $generated@@89) ($generated@@39 $generated@@88) $generated@@90) ($generated@@35 $generated@@89 $generated@@88 $generated@@90)))
 :pattern ( ($generated@@38 $generated@@31 ($generated@@68 $generated@@89) ($generated@@39 $generated@@88) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@41 $generated@@93) (and ($generated@@63 $generated@@92) (exists (($generated@@94 T@U) ) (! ($generated@@38 $generated@@31 $generated@@92 ($generated@@39 $generated@@94) $generated@@93)
 :pattern ( ($generated@@38 $generated@@31 $generated@@92 ($generated@@39 $generated@@94) $generated@@93))
)))) ($generated@@38 $generated@@52 ($generated@@91 $generated@@92) ($generated@@54 $generated) $generated@@93))
 :pattern ( ($generated@@38 $generated@@52 ($generated@@91 $generated@@92) ($generated@@54 $generated) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@41 $generated@@97) (= ($generated@@38 $generated@@31 ($generated@@27 $generated@@96) ($generated@@39 $generated@@95) $generated@@97) ($generated@@38 $generated@@52 $generated@@96 ($generated@@54 $generated) $generated@@97)))
 :pattern ( ($generated@@38 $generated@@31 ($generated@@27 $generated@@96) ($generated@@39 $generated@@95) $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@51 $generated@@31 $generated@@99 ($generated@@39 $generated@@98)) (or ($generated@@40 $generated@@99) ($generated@@63 $generated@@99)))
 :pattern ( ($generated@@63 $generated@@99) ($generated@@51 $generated@@31 $generated@@99 ($generated@@39 $generated@@98)))
 :pattern ( ($generated@@40 $generated@@99) ($generated@@51 $generated@@31 $generated@@99 ($generated@@39 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@55 $generated@@100 $generated@@0) (and (= ($generated@@65 $generated@@11 ($generated@@30 $generated@@11 $generated@@100)) $generated@@100) ($generated@@51 $generated@@11 ($generated@@30 $generated@@11 $generated@@100) $generated@@0)))
 :pattern ( ($generated@@55 $generated@@100 $generated@@0))
)))
(assert (= ($generated@@9 $generated@@101) 6))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@55 $generated@@102 $generated) (and (= ($generated@@65 $generated@@101 ($generated@@30 $generated@@101 $generated@@102)) $generated@@102) ($generated@@51 $generated@@101 ($generated@@30 $generated@@101 $generated@@102) $generated)))
 :pattern ( ($generated@@55 $generated@@102 $generated))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@55 ($generated@@65 $generated@@105 $generated@@103) $generated@@104) ($generated@@51 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@55 ($generated@@65 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (<= 0 ($generated@@28 $generated@@106))
 :pattern ( ($generated@@28 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@38 $generated@@52 $generated@@107 ($generated@@54 $generated@@108) $generated@@109) (forall (($generated@@110 Int) ) (!  (=> (and (<= 0 $generated@@110) (< $generated@@110 ($generated@@28 $generated@@107))) ($generated@@35 ($generated@@26 $generated@@107 $generated@@110) $generated@@108 $generated@@109))
 :pattern ( ($generated@@26 $generated@@107 $generated@@110))
)))
 :pattern ( ($generated@@38 $generated@@52 $generated@@107 ($generated@@54 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@54 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@54 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@25 ($generated@@54 $generated@@113)) $generated@@3)
 :pattern ( ($generated@@54 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@39 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@39 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@61 ($generated@@68 $generated@@116)) $generated@@6)
 :pattern ( ($generated@@68 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@82 ($generated@@68 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@68 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@61 ($generated@@27 $generated@@118)) $generated@@7)
 :pattern ( ($generated@@27 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@91 ($generated@@27 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@27 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@30 $generated@@121 ($generated@@65 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@65 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@51 $generated@@31 ($generated@@68 $generated@@123) ($generated@@39 $generated@@122)) ($generated@@55 $generated@@123 $generated@@122))
 :pattern ( ($generated@@51 $generated@@31 ($generated@@68 $generated@@123) ($generated@@39 $generated@@122)))
)))
(assert (forall (($generated@@126 Int) ) (!  (=> (or (and (<= 0 $generated@@126) (< $generated@@126 55296)) (and (<= 57344 $generated@@126) (< $generated@@126 1114112))) (= ($generated@@125 ($generated@@124 $generated@@126)) $generated@@126))
 :pattern ( ($generated@@124 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (< ($generated@@127 $generated@@128) ($generated@@29 ($generated@@68 $generated@@128)))
 :pattern ( ($generated@@68 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (< ($generated@@129 $generated@@130) ($generated@@29 ($generated@@27 $generated@@130)))
 :pattern ( ($generated@@27 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and ($generated@@41 $generated@@133) (and ($generated@@40 $generated@@131) ($generated@@38 $generated@@31 $generated@@131 ($generated@@39 $generated@@132) $generated@@133))) ($generated@@35 ($generated@@82 $generated@@131) $generated@@132 $generated@@133))
 :pattern ( ($generated@@35 ($generated@@82 $generated@@131) $generated@@132 $generated@@133))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@134 $generated@@144 $generated@@145 $generated@@146 ($generated@@140 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@134 $generated@@151 $generated@@152 $generated@@153 ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@134 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@134 $generated@@160 $generated@@161 $generated@@162 ($generated@@140 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@134 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))) (= ($generated@@9 $generated@@135) 7)) (= ($generated@@9 $generated@@136) 8)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@138 $generated@@169 $generated@@170 ($generated@@141 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@173) $generated@@171)
 :weight 0
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@178 $generated@@179) (= ($generated@@138 $generated@@174 $generated@@175 ($generated@@141 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@176) $generated@@179) ($generated@@138 $generated@@174 $generated@@175 $generated@@177 $generated@@179)))
 :weight 0
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@9 ($generated@@139 $generated@@180 $generated@@181)) 9))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@142 ($generated@@139 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@139 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@143 ($generated@@139 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@139 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@14 ($generated@@134 $generated@@135 $generated@@136 $generated@@10 ($generated@@137 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (or (not (= $generated@@190 $generated@@186)) (not true)) ($generated@@14 ($generated@@30 $generated@@10 ($generated@@138 $generated@@136 $generated@@81 ($generated@@138 $generated@@135 ($generated@@139 $generated@@136 $generated@@81) $generated@@187 $generated@@190) $generated@@188)))) $generated@@189))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136 $generated@@10 ($generated@@137 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (and (= ($generated@@192 ($generated@@53 $generated@@194 $generated@@195)) $generated@@194) (= ($generated@@193 ($generated@@53 $generated@@194 $generated@@195)) $generated@@195))
 :pattern ( ($generated@@53 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@127 ($generated@@65 $generated@@31 $generated@@196)) ($generated@@29 $generated@@196))
 :pattern ( ($generated@@127 ($generated@@65 $generated@@31 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@55 $generated@@197 ($generated@@54 $generated@@198)) (and (= ($generated@@65 $generated@@52 ($generated@@30 $generated@@52 $generated@@197)) $generated@@197) ($generated@@51 $generated@@52 ($generated@@30 $generated@@52 $generated@@197) ($generated@@54 $generated@@198))))
 :pattern ( ($generated@@55 $generated@@197 ($generated@@54 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@55 $generated@@200 ($generated@@39 $generated@@199)) (and (= ($generated@@65 $generated@@31 ($generated@@30 $generated@@31 $generated@@200)) $generated@@200) ($generated@@51 $generated@@31 ($generated@@30 $generated@@31 $generated@@200) ($generated@@39 $generated@@199))))
 :pattern ( ($generated@@55 $generated@@200 ($generated@@39 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@51 $generated@@31 ($generated@@27 $generated@@202) ($generated@@39 $generated@@201)) ($generated@@51 $generated@@52 $generated@@202 ($generated@@54 $generated)))
 :pattern ( ($generated@@51 $generated@@31 ($generated@@27 $generated@@202) ($generated@@39 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ) (!  (and (= ($generated@@124 ($generated@@125 $generated@@203)) $generated@@203) (or (and (<= 0 ($generated@@125 $generated@@203)) (< ($generated@@125 $generated@@203) 55296)) (and (<= 57344 ($generated@@125 $generated@@203)) (< ($generated@@125 $generated@@203) 1114112))))
 :pattern ( ($generated@@125 $generated@@203))
)))
(assert (forall (($generated@@204 Int) ) (! (= ($generated@@65 $generated@@11 ($generated@@15 ($generated@@46 $generated@@204))) ($generated@@48 $generated@@81 ($generated@@65 $generated@@11 ($generated@@15 $generated@@204))))
 :pattern ( ($generated@@65 $generated@@11 ($generated@@15 ($generated@@46 $generated@@204))))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@68 ($generated@@48 $generated@@81 $generated@@205)) ($generated@@48 $generated@@31 ($generated@@68 $generated@@205)))
 :pattern ( ($generated@@68 ($generated@@48 $generated@@81 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@27 ($generated@@48 $generated@@52 $generated@@206)) ($generated@@48 $generated@@31 ($generated@@27 $generated@@206)))
 :pattern ( ($generated@@27 ($generated@@48 $generated@@52 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@65 $generated@@208 ($generated@@48 $generated@@208 $generated@@207)) ($generated@@48 $generated@@81 ($generated@@65 $generated@@208 $generated@@207)))
 :pattern ( ($generated@@65 $generated@@208 ($generated@@48 $generated@@208 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ) (!  (=> (= ($generated@@28 $generated@@209) 0) (= $generated@@209 $generated@@45))
 :pattern ( ($generated@@28 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! ($generated@@38 $generated@@11 $generated@@211 $generated@@0 $generated@@210)
 :pattern ( ($generated@@38 $generated@@11 $generated@@211 $generated@@0 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@38 $generated@@101 $generated@@213 $generated $generated@@212)
 :pattern ( ($generated@@38 $generated@@101 $generated@@213 $generated $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@214 ($generated@@54 $generated@@215)) (forall (($generated@@216 Int) ) (!  (=> (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@28 $generated@@214))) ($generated@@55 ($generated@@26 $generated@@214 $generated@@216) $generated@@215))
 :pattern ( ($generated@@26 $generated@@214 $generated@@216))
)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@214 ($generated@@54 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 Int) ) (!  (=> (and (<= 0 $generated@@218) (< $generated@@218 ($generated@@28 $generated@@217))) (< ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@217 $generated@@218))) ($generated@@129 $generated@@217)))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@31 ($generated@@26 $generated@@217 $generated@@218))))
)))
(assert (forall (($generated@@219 T@U) ) (! ($generated@@51 $generated@@11 $generated@@219 $generated@@0)
 :pattern ( ($generated@@51 $generated@@11 $generated@@219 $generated@@0))
)))
(assert (forall (($generated@@220 T@U) ) (! ($generated@@51 $generated@@101 $generated@@220 $generated)
 :pattern ( ($generated@@51 $generated@@101 $generated@@220 $generated))
)))
(assert  (=> (<= 0 $generated@@34) (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (or ($generated@@37 $generated@@221 $generated@@222) (and (< 0 $generated@@34) (and ($generated@@51 $generated@@31 $generated@@222 ($generated@@39 $generated@@221)) ($generated@@40 $generated@@222)))) (= ($generated@@36 $generated@@221 $generated@@222) ($generated@@82 $generated@@222)))
 :pattern ( ($generated@@36 $generated@@221 $generated@@222))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@232  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> (<= ($generated@@46 0) $generated@@223) ($generated@@40 $generated@@224))) (=> (=> (<= ($generated@@46 0) $generated@@223) ($generated@@40 $generated@@224)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (<= ($generated@@46 0) $generated@@223) (= ($generated@@16 ($generated@@30 $generated@@11 ($generated@@36 $generated@@0 $generated@@224))) $generated@@223))) (=> (=> (<= ($generated@@46 0) $generated@@223) (= ($generated@@16 ($generated@@30 $generated@@11 ($generated@@36 $generated@@0 $generated@@224))) $generated@@223)) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (< $generated@@223 0) ($generated@@63 $generated@@224)))))))))
(let (($generated@@233  (=> (and (and (<= 0 $generated@@223) (= $generated@@225 ($generated@@68 ($generated@@65 $generated@@11 ($generated@@15 $generated@@223))))) (and (= $generated@@224 $generated@@225) (= (ControlFlow 0 6) 2))) $generated@@232)))
(let (($generated@@234  (=> (and (and (< $generated@@223 0) (= $generated@@226 ($generated@@48 $generated@@31 ($generated@@27 ($generated@@48 $generated@@52 ($generated@@53 ($generated@@53 ($generated@@53 ($generated@@53 ($generated@@53 ($generated@@53 ($generated@@53 ($generated@@53 $generated@@45 ($generated@@65 $generated@@101 ($generated@@124 110))) ($generated@@65 $generated@@101 ($generated@@124 101))) ($generated@@65 $generated@@101 ($generated@@124 103))) ($generated@@65 $generated@@101 ($generated@@124 97))) ($generated@@65 $generated@@101 ($generated@@124 116))) ($generated@@65 $generated@@101 ($generated@@124 105))) ($generated@@65 $generated@@101 ($generated@@124 118))) ($generated@@65 $generated@@101 ($generated@@124 101)))))))) (and (= $generated@@224 $generated@@226) (= (ControlFlow 0 5) 2))) $generated@@232)))
(let (($generated@@235  (=> (= $generated@@227 ($generated@@137 $generated@@228 $generated@@229 $generated@@4 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@234) (=> (= (ControlFlow 0 7) 6) $generated@@233)))))
(let (($generated@@236  (=> (and ($generated@@41 $generated@@229) ($generated@@230 $generated@@229)) (=> (and (and ($generated@@51 $generated@@31 $generated@@231 ($generated@@39 $generated@@0)) ($generated@@38 $generated@@31 $generated@@231 ($generated@@39 $generated@@0) $generated@@229)) (and (= 1 $generated@@34) (= (ControlFlow 0 8) 7))) $generated@@235))))
$generated@@236))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
