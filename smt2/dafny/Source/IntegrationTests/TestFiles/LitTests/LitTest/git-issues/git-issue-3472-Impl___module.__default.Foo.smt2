(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (Int) Int)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@51 (T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@78 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@135 (T@U) Bool)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ) (!  (=> ($generated@@23 $generated@@25) ($generated@@24 $generated@@25))
 :pattern ( ($generated@@23 $generated@@25))
)))
(assert (= ($generated@@6 $generated@@27) 3))
(assert (forall (($generated@@29 T@U) ) (!  (=> ($generated@@26 $generated@@27 $generated@@29 $generated@@28) ($generated@@24 $generated@@29))
 :pattern ( ($generated@@24 $generated@@29) ($generated@@26 $generated@@27 $generated@@29 $generated@@28))
)))
(assert (forall (($generated@@31 Int) ) (! (= ($generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@24 $generated@@36) (= ($generated@@35 $generated@@36) $generated@@4))
 :pattern ( ($generated@@24 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 ($generated@@37 $generated@@40 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@37 $generated@@40 $generated@@39))
)))
(assert (= ($generated@@6 $generated@@41) 4))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@26 $generated@@41 $generated@@45 ($generated@@42 $generated@@46)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@43 $generated@@45 $generated@@47) ($generated@@44 $generated@@47 $generated@@46))
 :pattern ( ($generated@@43 $generated@@45 $generated@@47))
)))
 :pattern ( ($generated@@26 $generated@@41 $generated@@45 ($generated@@42 $generated@@46)))
)))
(assert (forall (($generated@@49 T@U) ) (!  (=> ($generated@@24 $generated@@49) (exists (($generated@@50 T@U) ) (= $generated@@49 ($generated@@48 $generated@@50))))
 :pattern ( ($generated@@24 $generated@@49))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@51 ($generated@@38 $generated@@56 $generated@@53) $generated@@54 $generated@@55) ($generated@@52 $generated@@56 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@51 ($generated@@38 $generated@@56 $generated@@53) $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@44 $generated@@57 $generated@@28) (and (= ($generated@@38 $generated@@27 ($generated@@37 $generated@@27 $generated@@57)) $generated@@57) ($generated@@26 $generated@@27 ($generated@@37 $generated@@27 $generated@@57) $generated@@28)))
 :pattern ( ($generated@@44 $generated@@57 $generated@@28))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@44 $generated@@58 $generated) (and (= ($generated@@38 $generated@@8 ($generated@@37 $generated@@8 $generated@@58)) $generated@@58) ($generated@@26 $generated@@8 ($generated@@37 $generated@@8 $generated@@58) $generated)))
 :pattern ( ($generated@@44 $generated@@58 $generated))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@38 $generated@@61 $generated@@59) $generated@@60) ($generated@@26 $generated@@61 $generated@@59 $generated@@60))
 :pattern ( ($generated@@44 ($generated@@38 $generated@@61 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@52 $generated@@41 $generated@@62 ($generated@@42 $generated@@63) $generated@@64) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@43 $generated@@62 $generated@@65) ($generated@@51 $generated@@65 $generated@@63 $generated@@64))
 :pattern ( ($generated@@43 $generated@@62 $generated@@65))
)))
 :pattern ( ($generated@@52 $generated@@41 $generated@@62 ($generated@@42 $generated@@63) $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 ($generated@@42 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@42 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@22 ($generated@@42 $generated@@68)) $generated@@1)
 :pattern ( ($generated@@42 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@35 ($generated@@48 $generated@@69)) $generated@@4)
 :pattern ( ($generated@@48 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 ($generated@@48 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@48 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@37 $generated@@73 ($generated@@38 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@38 $generated@@73 $generated@@72))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@74 $generated@@85 $generated@@86 $generated@@87 ($generated@@81 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@74 $generated@@92 $generated@@93 $generated@@94 ($generated@@81 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@74 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@74 $generated@@101 $generated@@102 $generated@@103 ($generated@@81 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@74 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))) (= ($generated@@6 $generated@@75) 5)) (= ($generated@@6 $generated@@76) 6)) (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@78 $generated@@110 $generated@@111 ($generated@@82 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@78 $generated@@115 $generated@@116 ($generated@@82 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@78 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@6 $generated@@79) 7)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@6 ($generated@@80 $generated@@121 $generated@@122)) 8))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@80 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@84 ($generated@@80 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@80 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 Bool) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@11 ($generated@@74 $generated@@75 $generated@@76 $generated@@7 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))  (=> (and (or (not (= $generated@@131 $generated@@127)) (not true)) ($generated@@11 ($generated@@37 $generated@@7 ($generated@@78 $generated@@76 $generated@@79 ($generated@@78 $generated@@75 ($generated@@80 $generated@@76 $generated@@79) $generated@@128 $generated@@131) $generated@@129)))) $generated@@130))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76 $generated@@7 ($generated@@77 $generated@@127 $generated@@128 $generated@@129 $generated@@130) $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@44 $generated@@133 ($generated@@42 $generated@@134)) (and (= ($generated@@38 $generated@@41 ($generated@@37 $generated@@41 $generated@@133)) $generated@@133) ($generated@@26 $generated@@41 ($generated@@37 $generated@@41 $generated@@133) ($generated@@42 $generated@@134))))
 :pattern ( ($generated@@44 $generated@@133 ($generated@@42 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and ($generated@@135 $generated@@137) ($generated@@26 $generated@@27 $generated@@136 $generated@@28)) ($generated@@52 $generated@@27 $generated@@136 $generated@@28 $generated@@137))
 :pattern ( ($generated@@52 $generated@@27 $generated@@136 $generated@@28 $generated@@137))
)))
(assert (= ($generated@@22 $generated@@28) $generated@@3))
(assert (= ($generated@@138 $generated@@28) $generated@@5))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@48 $generated@@139) $generated@@28) ($generated@@26 $generated@@41 $generated@@139 ($generated@@42 $generated)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@48 $generated@@139) $generated@@28))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@135 $generated@@141) (and ($generated@@24 $generated@@140) ($generated@@52 $generated@@27 $generated@@140 $generated@@28 $generated@@141))) ($generated@@52 $generated@@41 ($generated@@70 $generated@@140) ($generated@@42 $generated) $generated@@141))
 :pattern ( ($generated@@52 $generated@@41 ($generated@@70 $generated@@140) ($generated@@42 $generated) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@43 $generated@@143 ($generated@@38 $generated@@27 $generated@@144)) (< ($generated@@142 $generated@@144) ($generated@@142 ($generated@@48 $generated@@143))))
 :pattern ( ($generated@@43 $generated@@143 ($generated@@38 $generated@@27 $generated@@144)) ($generated@@48 $generated@@143))
)))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@38 $generated@@8 ($generated@@12 ($generated@@30 $generated@@145))) ($generated@@32 $generated@@79 ($generated@@38 $generated@@8 ($generated@@12 $generated@@145))))
 :pattern ( ($generated@@38 $generated@@8 ($generated@@12 ($generated@@30 $generated@@145))))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@48 ($generated@@32 $generated@@41 $generated@@146)) ($generated@@32 $generated@@27 ($generated@@48 $generated@@146)))
 :pattern ( ($generated@@48 ($generated@@32 $generated@@41 $generated@@146)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@38 $generated@@148 ($generated@@32 $generated@@148 $generated@@147)) ($generated@@32 $generated@@79 ($generated@@38 $generated@@148 $generated@@147)))
 :pattern ( ($generated@@38 $generated@@148 ($generated@@32 $generated@@148 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! ($generated@@52 $generated@@8 $generated@@150 $generated $generated@@149)
 :pattern ( ($generated@@52 $generated@@8 $generated@@150 $generated $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! ($generated@@26 $generated@@8 $generated@@151 $generated)
 :pattern ( ($generated@@26 $generated@@8 $generated@@151 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@161 true))
(let (($generated@@162  (=> (= (ControlFlow 0 3) (- 0 2)) (or (and ($generated@@26 $generated@@8 ($generated@@12 ($generated@@30 0)) $generated) ($generated@@43 $generated@@152 ($generated@@38 $generated@@8 ($generated@@12 ($generated@@30 0))))) (exists (($generated@@163 T@U) ) ($generated@@43 $generated@@152 ($generated@@38 $generated@@8 $generated@@163)))))))
(let (($generated@@164  (=> (= $generated@@153 ($generated@@48 $generated@@154)) (=> (and ($generated@@26 $generated@@41 $generated@@154 ($generated@@42 $generated)) ($generated@@52 $generated@@41 $generated@@154 ($generated@@42 $generated) $generated@@155)) (=> (and (and (and ($generated@@26 $generated@@41 $generated@@152 ($generated@@42 $generated)) ($generated@@52 $generated@@41 $generated@@152 ($generated@@42 $generated) $generated@@155)) (= $generated@@156 $generated@@154)) (and ($generated@@26 $generated@@41 $generated@@156 ($generated@@42 $generated)) (= $generated@@152 $generated@@156))) (and (=> (= (ControlFlow 0 5) 3) $generated@@162) (=> (= (ControlFlow 0 5) 4) $generated@@161)))))))
(let (($generated@@165 true))
(let (($generated@@166  (=> (= $generated@@157 ($generated@@77 $generated@@158 $generated@@155 $generated@@2 false)) (and (=> (= (ControlFlow 0 6) 5) $generated@@164) (=> (= (ControlFlow 0 6) 1) $generated@@165)))))
(let (($generated@@167  (=> (and ($generated@@135 $generated@@155) ($generated@@159 $generated@@155)) (=> (and (and (and ($generated@@26 $generated@@27 $generated@@153 $generated@@28) ($generated@@52 $generated@@27 $generated@@153 $generated@@28 $generated@@155)) ($generated@@23 $generated@@153)) (and (= 1 $generated@@160) (= (ControlFlow 0 7) 6))) $generated@@166))))
$generated@@167)))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
