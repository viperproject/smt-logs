(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@69 () Int)
(declare-fun $generated@@70 (T@U Bool T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U T@U) Bool)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U) Bool)
(declare-fun $generated@@143 () Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@25 $generated@@29 $generated@@26 $generated@@30) ($generated@@27 $generated@@30)) ($generated@@25 $generated@@29 $generated@@28 $generated@@30))
 :pattern ( ($generated@@25 $generated@@29 $generated@@26 $generated@@30))
)))
(assert (= ($generated@@8 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@34 $generated@@33 $generated@@35) ($generated@@31 $generated@@32 $generated@@34 $generated@@28 $generated@@35))
 :pattern ( ($generated@@31 $generated@@32 $generated@@34 $generated@@33 $generated@@35))
 :pattern ( ($generated@@31 $generated@@32 $generated@@34 $generated@@28 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@37 $generated@@36 $generated@@38) ($generated@@31 $generated@@32 $generated@@37 $generated@@26 $generated@@38))
 :pattern ( ($generated@@31 $generated@@32 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@31 $generated@@32 $generated@@37 $generated@@26 $generated@@38))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@8 $generated@@42) 4)) (= ($generated@@8 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@8 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@65 $generated@@28 $generated@@66)  (or (= $generated@@65 $generated@@39) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@66 $generated@@65) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@65 $generated@@28 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@67 $generated@@26 $generated@@68)  (or (= $generated@@67 $generated@@39) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@68 $generated@@67) $generated@@1)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@67 $generated@@26 $generated@@68))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@72 $generated@@75 ($generated@@71 $generated@@32 $generated@@76) ($generated@@71 $generated@@43 $generated@@77)) (and (< 0 $generated@@69) (and (and (or (not (= $generated@@76 $generated@@39)) (not true)) ($generated@@73 $generated@@32 $generated@@76 $generated@@36)) ($generated@@74 $generated@@77 $generated@@75)))) (= ($generated@@70 $generated@@75 true ($generated@@71 $generated@@32 $generated@@76) ($generated@@71 $generated@@43 $generated@@77)) (= ($generated@@71 $generated@@43 $generated@@77) ($generated@@71 $generated@@43 $generated@@77))))
 :weight 3
 :pattern ( ($generated@@70 $generated@@75 true ($generated@@71 $generated@@32 $generated@@76) ($generated@@71 $generated@@43 $generated@@77)))
))))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@71 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@71 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@40 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@40 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@25 ($generated@@82 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@31 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@25 ($generated@@82 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@72 $generated@@89 $generated@@90 $generated@@91) (and (< 0 $generated@@69) (and (and (or (not (= $generated@@90 $generated@@39)) (not true)) ($generated@@73 $generated@@32 $generated@@90 $generated@@36)) ($generated@@74 $generated@@91 $generated@@89)))) (= ($generated@@70 $generated@@89 true $generated@@90 $generated@@91) (= $generated@@91 $generated@@91)))
 :pattern ( ($generated@@70 $generated@@89 true $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@74 $generated@@92 $generated@@36) (and (= ($generated@@82 $generated@@32 ($generated@@40 $generated@@32 $generated@@92)) $generated@@92) ($generated@@73 $generated@@32 ($generated@@40 $generated@@32 $generated@@92) $generated@@36)))
 :pattern ( ($generated@@74 $generated@@92 $generated@@36))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@74 $generated@@93 $generated@@26) (and (= ($generated@@82 $generated@@32 ($generated@@40 $generated@@32 $generated@@93)) $generated@@93) ($generated@@73 $generated@@32 ($generated@@40 $generated@@32 $generated@@93) $generated@@26)))
 :pattern ( ($generated@@74 $generated@@93 $generated@@26))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@74 $generated@@94 $generated@@33) (and (= ($generated@@82 $generated@@32 ($generated@@40 $generated@@32 $generated@@94)) $generated@@94) ($generated@@73 $generated@@32 ($generated@@40 $generated@@32 $generated@@94) $generated@@33)))
 :pattern ( ($generated@@74 $generated@@94 $generated@@33))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@74 $generated@@95 $generated@@28) (and (= ($generated@@82 $generated@@32 ($generated@@40 $generated@@32 $generated@@95)) $generated@@95) ($generated@@73 $generated@@32 ($generated@@40 $generated@@32 $generated@@95) $generated@@28)))
 :pattern ( ($generated@@74 $generated@@95 $generated@@28))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@73 $generated@@32 $generated@@96 $generated@@33)  (and ($generated@@73 $generated@@32 $generated@@96 $generated@@28) (or (not (= $generated@@96 $generated@@39)) (not true))))
 :pattern ( ($generated@@73 $generated@@32 $generated@@96 $generated@@33))
 :pattern ( ($generated@@73 $generated@@32 $generated@@96 $generated@@28))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@73 $generated@@32 $generated@@97 $generated@@36)  (and ($generated@@73 $generated@@32 $generated@@97 $generated@@26) (or (not (= $generated@@97 $generated@@39)) (not true))))
 :pattern ( ($generated@@73 $generated@@32 $generated@@97 $generated@@36))
 :pattern ( ($generated@@73 $generated@@32 $generated@@97 $generated@@26))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@98 $generated@@26 $generated@@99) ($generated@@31 $generated@@32 $generated@@98 $generated@@28 $generated@@99))
 :pattern ( ($generated@@31 $generated@@32 $generated@@98 $generated@@26 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@74 $generated@@100 $generated) (and (= ($generated@@82 $generated@@10 ($generated@@40 $generated@@10 $generated@@100)) $generated@@100) ($generated@@73 $generated@@10 ($generated@@40 $generated@@10 $generated@@100) $generated)))
 :pattern ( ($generated@@74 $generated@@100 $generated))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@74 ($generated@@82 $generated@@103 $generated@@101) $generated@@102) ($generated@@73 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@74 ($generated@@82 $generated@@103 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@40 $generated@@105 ($generated@@82 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@82 $generated@@105 $generated@@104))
)))
(assert  (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@106 $generated@@109 $generated@@110 $generated@@111 ($generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@106 $generated@@116 $generated@@117 $generated@@118 ($generated@@108 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@106 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@106 $generated@@125 $generated@@126 $generated@@127 ($generated@@108 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@106 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Bool) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@13 ($generated@@106 $generated@@32 $generated@@42 $generated@@9 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@32 ($generated@@44 $generated@@42 $generated@@43) $generated@@135 $generated@@138) $generated@@136)))) $generated@@137))
 :pattern ( ($generated@@106 $generated@@32 $generated@@42 $generated@@9 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@73 $generated@@32 $generated@@140 $generated@@26) ($generated@@73 $generated@@32 $generated@@140 $generated@@28))
 :pattern ( ($generated@@73 $generated@@32 $generated@@140 $generated@@26))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@74 $generated@@141 $generated@@26) ($generated@@74 $generated@@141 $generated@@28))
 :pattern ( ($generated@@74 $generated@@141 $generated@@26))
)))
(assert  (=> (<= 0 $generated@@69) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or ($generated@@72 $generated@@144 $generated@@145 $generated@@146) (and (< 0 $generated@@69) (and (or (not (= $generated@@145 $generated@@39)) (not true)) ($generated@@73 $generated@@32 $generated@@145 $generated@@36)))) (= ($generated@@142 $generated@@144 $generated@@145 $generated@@146) ($generated@@70 $generated@@144 $generated@@143 $generated@@145 $generated@@146)))
 :pattern ( ($generated@@142 $generated@@144 $generated@@145 $generated@@146) ($generated@@73 $generated@@32 $generated@@145 $generated@@36))
 :pattern ( ($generated@@142 $generated@@144 $generated@@145 $generated@@146) ($generated@@70 $generated@@144 $generated@@143 $generated@@145 $generated@@146))
))))
(assert (= ($generated@@24 $generated@@36) $generated@@2))
(assert (= ($generated@@147 $generated@@36) $generated@@6))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@147 $generated@@26) $generated@@6))
(assert (= ($generated@@24 $generated@@33) $generated@@4))
(assert (= ($generated@@147 $generated@@33) $generated@@7))
(assert (= ($generated@@24 $generated@@28) $generated@@5))
(assert (= ($generated@@147 $generated@@28) $generated@@7))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@73 $generated@@32 $generated@@150 $generated@@28)  (or (= $generated@@150 $generated@@39) ($generated@@148 ($generated@@149 $generated@@150))))
 :pattern ( ($generated@@73 $generated@@32 $generated@@150 $generated@@28))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@73 $generated@@32 $generated@@152 $generated@@26)  (or (= $generated@@152 $generated@@39) ($generated@@151 ($generated@@149 $generated@@152))))
 :pattern ( ($generated@@73 $generated@@32 $generated@@152 $generated@@26))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@82 $generated@@10 ($generated@@14 ($generated@@78 $generated@@153))) ($generated@@71 $generated@@43 ($generated@@82 $generated@@10 ($generated@@14 $generated@@153))))
 :pattern ( ($generated@@82 $generated@@10 ($generated@@14 ($generated@@78 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@82 $generated@@155 ($generated@@71 $generated@@155 $generated@@154)) ($generated@@71 $generated@@43 ($generated@@82 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@82 $generated@@155 ($generated@@71 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@31 $generated@@10 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@31 $generated@@10 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@73 $generated@@10 $generated@@158 $generated)
 :pattern ( ($generated@@73 $generated@@10 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 (T@U T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () Bool)
(declare-fun $generated@@166 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@167  (=> (= $generated@@159 ($generated@@107 $generated@@39 $generated@@160 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@161 $generated@@39)) (not true))) (=> (and ($generated@@25 ($generated@@82 $generated@@32 $generated@@161) $generated@@28 $generated@@160) (= $generated@@162 ($generated@@78 5))) (=> (and (and ($generated@@31 $generated@@10 ($generated@@14 $generated@@162) $generated $generated@@160) ($generated@@163 $generated $generated@@161 ($generated@@82 $generated@@10 ($generated@@14 ($generated@@78 5))))) (and ($generated@@163 $generated $generated@@161 ($generated@@82 $generated@@10 ($generated@@14 ($generated@@78 5)))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@142 $generated $generated@@161 ($generated@@82 $generated@@10 ($generated@@14 ($generated@@78 5)))))))))))
(let (($generated@@168  (=> (and (and ($generated@@27 $generated@@160) ($generated@@164 $generated@@160)) (and ($generated@@73 $generated@@32 $generated@@161 $generated@@36) ($generated@@31 $generated@@32 $generated@@161 $generated@@36 $generated@@160))) (=> (and (and (and (=> $generated@@165 (and ($generated@@73 $generated@@32 $generated@@166 $generated@@33) ($generated@@31 $generated@@32 $generated@@166 $generated@@33 $generated@@160))) true) (= 2 $generated@@69)) (and ($generated@@70 $generated $generated@@143 $generated@@161 ($generated@@82 $generated@@10 ($generated@@14 ($generated@@78 6)))) (= (ControlFlow 0 5) 2))) $generated@@167))))
$generated@@168)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
