(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@25 (T@T T@T) T@T)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@34 (T@T) T@T)
(declare-fun $generated@@35 (T@T) T@T)
(declare-fun $generated@@81 (T@U) Int)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 () Int)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 () Bool)
(declare-fun $generated@@92 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@T T@U T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@101 (Bool) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@103 () T@U)
(declare-fun $generated@@106 (T@T T@U) T@U)
(declare-fun $generated@@109 (T@T T@U T@U) Bool)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) Bool)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@120 (T@U Int) T@U)
(declare-fun $generated@@121 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@36 T@T) ($generated@@37 T@T) ($generated@@38 T@T) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@24 $generated@@36 $generated@@37 $generated@@38 ($generated@@31 $generated@@36 $generated@@37 $generated@@38 $generated@@40 $generated@@41 $generated@@42 $generated@@39) $generated@@41 $generated@@42) $generated@@39)
 :weight 0
)) (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@48 $generated@@50) (= ($generated@@24 $generated@@43 $generated@@44 $generated@@45 ($generated@@31 $generated@@43 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@49 $generated@@46) $generated@@50 $generated@@51) ($generated@@24 $generated@@43 $generated@@44 $generated@@45 $generated@@47 $generated@@50 $generated@@51)))
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@58 $generated@@60) (= ($generated@@24 $generated@@52 $generated@@53 $generated@@54 ($generated@@31 $generated@@52 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@58 $generated@@55) $generated@@59 $generated@@60) ($generated@@24 $generated@@52 $generated@@53 $generated@@54 $generated@@56 $generated@@59 $generated@@60)))
 :weight 0
)))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@32 $generated@@61 $generated@@62 ($generated@@33 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@65) $generated@@63)
 :weight 0
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (or (= $generated@@70 $generated@@71) (= ($generated@@32 $generated@@66 $generated@@67 ($generated@@33 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@71) ($generated@@32 $generated@@66 $generated@@67 $generated@@69 $generated@@71)))
 :weight 0
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (= ($generated@@7 ($generated@@25 $generated@@72 $generated@@73)) 3))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@34 ($generated@@25 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@25 $generated@@74 $generated@@75))
))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@35 ($generated@@25 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@25 $generated@@76 $generated@@77))
))) (= ($generated@@7 $generated@@26) 4)) (= ($generated@@7 $generated@@27) 5)) (= ($generated@@7 $generated@@28) 6)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@12 ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@8 ($generated@@29 $generated@@78) $generated@@79 $generated@@80)) ($generated@@30 $generated@@80 $generated@@78))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@8 ($generated@@29 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (= ($generated@@81 $generated@@82) 0))
(assert (forall (($generated@@84 Int) ) (! (= ($generated@@83 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (= ($generated@@7 $generated@@93) 7))
(assert  (=> (<= 0 $generated@@88) (forall (($generated@@104 T@U) ) (!  (=> (or $generated@@91 (and (< 0 $generated@@88) ($generated@@90 $generated@@104))) (= $generated@@89 ($generated@@92 $generated $generated@@104 ($generated@@83 10) ($generated@@85 $generated@@93 ($generated@@94 $generated@@93 ($generated@@95 ($generated@@96 ($generated@@97 ($generated@@98 $generated@@9 ($generated@@13 ($generated@@83 0)))) ($generated@@29 $generated) ($generated@@99 ($generated@@100 ($generated@@101 false))))) ($generated@@102 $generated@@103))))))
 :pattern ( $generated@@89 ($generated@@90 $generated@@104))
))))
(assert  (=> (<= 0 $generated@@88) (forall (($generated@@105 T@U) ) (!  (=> (or $generated@@91 (and (< 0 $generated@@88) ($generated@@90 $generated@@105))) (= $generated@@89 ($generated@@92 $generated $generated@@105 ($generated@@83 10) ($generated@@85 $generated@@93 ($generated@@94 $generated@@93 ($generated@@95 ($generated@@96 ($generated@@97 ($generated@@98 $generated@@9 ($generated@@13 ($generated@@83 0)))) ($generated@@29 $generated) ($generated@@99 ($generated@@100 ($generated@@101 false))))) ($generated@@102 $generated@@103))))))
 :weight 3
 :pattern ( $generated@@89 ($generated@@90 $generated@@105))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@98 $generated@@108 ($generated@@106 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@106 $generated@@108 $generated@@107))
)))
(assert (= ($generated@@7 $generated@@110) 8))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@109 $generated@@110 $generated@@113 ($generated@@111 $generated@@114)) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@112 $generated@@113 $generated@@115) ($generated@@30 $generated@@115 $generated@@114))
 :pattern ( ($generated@@112 $generated@@113 $generated@@115))
)))
 :pattern ( ($generated@@109 $generated@@110 $generated@@113 ($generated@@111 $generated@@114)))
)))
(assert (= ($generated@@7 $generated@@116) 9))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@94 $generated@@119 $generated@@117 $generated@@118) ($generated@@32 $generated@@116 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@94 $generated@@119 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 Int) ($generated@@125 T@U) ($generated@@126 Int) ) (!  (=> (and (and ($generated@@90 $generated@@123) (<= 0 $generated@@126)) (< $generated@@126 $generated@@124)) (= ($generated@@120 ($generated@@92 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126) ($generated@@121 $generated $generated@@122 $generated@@123 $generated@@125 ($generated@@98 $generated@@9 ($generated@@13 $generated@@126)))))
 :pattern ( ($generated@@120 ($generated@@92 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@112 ($generated@@100 $generated@@127) $generated@@128) ($generated@@12 ($generated@@32 $generated@@26 $generated@@8 $generated@@127 ($generated@@106 $generated@@26 $generated@@128))))
 :pattern ( ($generated@@112 ($generated@@100 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@121 $generated@@129 $generated@@130 $generated@@131 ($generated@@96 $generated@@132 $generated@@133 $generated@@134) $generated@@135) ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@28 $generated@@132 $generated@@131 $generated@@135))
 :pattern ( ($generated@@121 $generated@@129 $generated@@130 $generated@@131 ($generated@@96 $generated@@132 $generated@@133 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@30 $generated@@137 $generated@@136) (and (= ($generated@@98 $generated@@26 ($generated@@106 $generated@@26 $generated@@137)) $generated@@137) ($generated@@109 $generated@@26 ($generated@@106 $generated@@26 $generated@@137) $generated@@136)))
 :pattern ( ($generated@@30 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@30 $generated@@139 $generated@@138) (and (= ($generated@@98 $generated@@26 ($generated@@106 $generated@@26 $generated@@139)) $generated@@139) ($generated@@109 $generated@@26 ($generated@@106 $generated@@26 $generated@@139) $generated@@138)))
 :pattern ( ($generated@@30 $generated@@139 $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@109 $generated@@26 $generated@@141 $generated@@138)  (and ($generated@@109 $generated@@26 $generated@@141 $generated@@136) (or (not (= $generated@@141 $generated@@140)) (not true))))
 :pattern ( ($generated@@109 $generated@@26 $generated@@141 $generated@@138))
 :pattern ( ($generated@@109 $generated@@26 $generated@@141 $generated@@136))
)))
(assert (forall (($generated@@142 Bool) ($generated@@143 T@U) ) (! (= ($generated@@12 ($generated@@32 $generated@@26 $generated@@8 ($generated@@101 $generated@@142) $generated@@143)) $generated@@142)
 :pattern ( ($generated@@32 $generated@@26 $generated@@8 ($generated@@101 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@32 $generated@@116 $generated@@93 ($generated@@95 $generated@@144) $generated@@145) $generated@@144)
 :pattern ( ($generated@@32 $generated@@116 $generated@@93 ($generated@@95 $generated@@144) $generated@@145))
)))
(assert (= ($generated@@7 $generated@@146) 10))
(assert  (=> (<= 0 $generated@@88) (=> (or $generated@@91 (< 0 $generated@@88)) ($generated@@109 $generated@@146 $generated@@89 ($generated@@147 $generated)))))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@30 $generated@@148 $generated) (and (= ($generated@@98 $generated@@9 ($generated@@106 $generated@@9 $generated@@148)) $generated@@148) ($generated@@109 $generated@@9 ($generated@@106 $generated@@9 $generated@@148) $generated)))
 :pattern ( ($generated@@30 $generated@@148 $generated))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@30 ($generated@@98 $generated@@151 $generated@@149) $generated@@150) ($generated@@109 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@30 ($generated@@98 $generated@@151 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (<= 0 ($generated@@81 $generated@@152))
 :pattern ( ($generated@@81 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@109 $generated@@26 $generated@@153 $generated@@136)
 :pattern ( ($generated@@109 $generated@@26 $generated@@153 $generated@@136))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@111 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@111 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@23 ($generated@@111 $generated@@156)) $generated@@1)
 :pattern ( ($generated@@111 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@147 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@147 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@23 ($generated@@147 $generated@@159)) $generated@@2)
 :pattern ( ($generated@@147 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@106 $generated@@161 ($generated@@98 $generated@@161 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@98 $generated@@161 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@94 $generated@@164 $generated@@162 ($generated@@102 $generated@@163)) ($generated@@94 $generated@@164 $generated@@162 $generated@@163))
 :pattern ( ($generated@@94 $generated@@164 $generated@@162 ($generated@@102 $generated@@163)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@12 ($generated@@24 $generated@@26 $generated@@27 $generated@@8 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@12 ($generated@@106 $generated@@8 ($generated@@32 $generated@@27 $generated@@28 ($generated@@32 $generated@@26 ($generated@@25 $generated@@27 $generated@@28) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@24 $generated@@26 $generated@@27 $generated@@8 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@30 $generated@@172 ($generated@@111 $generated@@173)) (and (= ($generated@@98 $generated@@110 ($generated@@106 $generated@@110 $generated@@172)) $generated@@172) ($generated@@109 $generated@@110 ($generated@@106 $generated@@110 $generated@@172) ($generated@@111 $generated@@173))))
 :pattern ( ($generated@@30 $generated@@172 ($generated@@111 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@30 $generated@@174 ($generated@@147 $generated@@175)) (and (= ($generated@@98 $generated@@146 ($generated@@106 $generated@@146 $generated@@174)) $generated@@174) ($generated@@109 $generated@@146 ($generated@@106 $generated@@146 $generated@@174) ($generated@@147 $generated@@175))))
 :pattern ( ($generated@@30 $generated@@174 ($generated@@147 $generated@@175)))
)))
(assert (= ($generated@@23 $generated@@136) $generated@@4))
(assert (= ($generated@@176 $generated@@136) $generated@@6))
(assert (= ($generated@@23 $generated@@138) $generated@@5))
(assert (= ($generated@@176 $generated@@138) $generated@@6))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Int) ($generated@@180 T@U) ) (!  (=> (and ($generated@@90 $generated@@178) (<= 0 $generated@@179)) (= ($generated@@81 ($generated@@92 $generated@@177 $generated@@178 $generated@@179 $generated@@180)) $generated@@179))
 :pattern ( ($generated@@81 ($generated@@92 $generated@@177 $generated@@178 $generated@@179 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@109 $generated@@110 ($generated@@100 $generated@@181) ($generated@@111 $generated@@136))
 :pattern ( ($generated@@100 $generated@@181))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@98 $generated@@9 ($generated@@13 ($generated@@83 $generated@@182))) ($generated@@85 $generated@@28 ($generated@@98 $generated@@9 ($generated@@13 $generated@@182))))
 :pattern ( ($generated@@98 $generated@@9 ($generated@@13 ($generated@@83 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@98 $generated@@184 ($generated@@85 $generated@@184 $generated@@183)) ($generated@@85 $generated@@28 ($generated@@98 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@98 $generated@@184 ($generated@@85 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= ($generated@@81 $generated@@185) 0) (= $generated@@185 $generated@@82))
 :pattern ( ($generated@@81 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@109 $generated@@146 $generated@@186 ($generated@@147 $generated@@187)) (forall (($generated@@188 Int) ) (!  (=> (and (<= 0 $generated@@188) (< $generated@@188 ($generated@@81 $generated@@186))) ($generated@@30 ($generated@@120 $generated@@186 $generated@@188) $generated@@187))
 :pattern ( ($generated@@120 $generated@@186 $generated@@188))
)))
 :pattern ( ($generated@@109 $generated@@146 $generated@@186 ($generated@@147 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@28 ($generated@@97 $generated@@189) $generated@@190 $generated@@191) $generated@@189)
 :pattern ( ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@28 ($generated@@97 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@110 ($generated@@99 $generated@@192) $generated@@193 $generated@@194) $generated@@192)
 :pattern ( ($generated@@24 ($generated@@25 $generated@@26 ($generated@@25 $generated@@27 $generated@@28)) $generated@@28 $generated@@110 ($generated@@99 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (! ($generated@@109 $generated@@9 $generated@@195 $generated)
 :pattern ( ($generated@@109 $generated@@9 $generated@@195 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@199  (=> $generated@@91 (=> (and $generated@@91 (= (ControlFlow 0 3) (- 0 2))) (= ($generated@@81 ($generated@@85 $generated@@146 $generated@@89)) ($generated@@83 10))))))
(let (($generated@@200 true))
(let (($generated@@201  (=> (= $generated@@196 ($generated@@165 $generated@@140 $generated@@197 $generated@@3 false)) (and (=> (= (ControlFlow 0 4) 1) $generated@@200) (=> (= (ControlFlow 0 4) 3) $generated@@199)))))
(let (($generated@@202  (=> (and (and ($generated@@90 $generated@@197) ($generated@@198 $generated@@197)) (and (= 1 $generated@@88) (= (ControlFlow 0 5) 4))) $generated@@201)))
$generated@@202)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
