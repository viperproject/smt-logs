(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@T T@T) T@T)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@28) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)) ($generated@@26 $generated@@32))
 :pattern ( ($generated@@26 $generated@@32) ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@30 $generated@@31)))
)))
(assert (= ($generated@@33 $generated@@34) $generated@@5))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@37 $generated@@39) ($generated@@35 $generated@@28 $generated@@34 ($generated@@36 $generated@@38) $generated@@39))
 :pattern ( ($generated@@35 $generated@@28 $generated@@34 ($generated@@36 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@40 $generated@@44 $generated@@45) ($generated@@29 $generated@@42 $generated@@43))  (and ($generated@@41 $generated@@44 $generated@@42) ($generated@@41 $generated@@45 $generated@@43)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@40 $generated@@44 $generated@@45) ($generated@@29 $generated@@42 $generated@@43)))
)))
(assert (forall (($generated@@46 T@U) ) (! ($generated@@27 $generated@@28 $generated@@34 ($generated@@36 $generated@@46))
 :pattern ( ($generated@@27 $generated@@28 $generated@@34 ($generated@@36 $generated@@46)))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@50 $generated@@52 $generated@@53) ($generated@@36 $generated@@51))  (and ($generated@@41 $generated@@52 $generated@@51) ($generated@@27 $generated@@28 $generated@@53 ($generated@@36 $generated@@51))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@50 $generated@@52 $generated@@53) ($generated@@36 $generated@@51)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> ($generated@@37 $generated@@59) (= ($generated@@35 $generated@@28 ($generated@@40 $generated@@57 $generated@@58) ($generated@@29 $generated@@55 $generated@@56) $generated@@59)  (and ($generated@@54 $generated@@57 $generated@@55 $generated@@59) ($generated@@54 $generated@@58 $generated@@56 $generated@@59))))
 :pattern ( ($generated@@35 $generated@@28 ($generated@@40 $generated@@57 $generated@@58) ($generated@@29 $generated@@55 $generated@@56) $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@26 $generated@@60) (= ($generated@@33 $generated@@60) $generated@@2))
 :pattern ( ($generated@@26 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 $generated@@62) (= ($generated@@33 $generated@@62) $generated@@5))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@33 $generated@@64) $generated@@6))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@26 $generated@@69) (exists (($generated@@70 T@U) ($generated@@71 T@U) ) (= $generated@@69 ($generated@@40 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@26 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@63 $generated@@72) (exists (($generated@@73 T@U) ($generated@@74 T@U) ) (= $generated@@72 ($generated@@50 $generated@@73 $generated@@74))))
 :pattern ( ($generated@@63 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@61 $generated@@75) (= $generated@@75 $generated@@34))
 :pattern ( ($generated@@61 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@54 ($generated@@66 $generated@@79 $generated@@76) $generated@@77 $generated@@78) ($generated@@35 $generated@@79 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@54 ($generated@@66 $generated@@79 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (and (= ($generated@@25 ($generated@@36 $generated@@81)) $generated@@4) (= ($generated@@80 ($generated@@36 $generated@@81)) $generated@@8))
 :pattern ( ($generated@@36 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@82 $generated@@83) (or ($generated@@61 $generated@@83) ($generated@@63 $generated@@83)))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@85 ($generated@@36 $generated@@84)) (or ($generated@@61 $generated@@85) ($generated@@63 $generated@@85)))
 :pattern ( ($generated@@63 $generated@@85) ($generated@@27 $generated@@28 $generated@@85 ($generated@@36 $generated@@84)))
 :pattern ( ($generated@@61 $generated@@85) ($generated@@27 $generated@@28 $generated@@85 ($generated@@36 $generated@@84)))
)))
(assert (= ($generated@@9 $generated@@86) 4))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@41 $generated@@87 $generated) (and (= ($generated@@66 $generated@@86 ($generated@@65 $generated@@86 $generated@@87)) $generated@@87) ($generated@@27 $generated@@86 ($generated@@65 $generated@@86 $generated@@87) $generated)))
 :pattern ( ($generated@@41 $generated@@87 $generated))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@41 ($generated@@66 $generated@@90 $generated@@88) $generated@@89) ($generated@@27 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@41 ($generated@@66 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@33 ($generated@@40 $generated@@91 $generated@@92)) $generated@@2)
 :pattern ( ($generated@@40 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 ($generated@@29 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@29 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 ($generated@@29 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@29 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@99 ($generated@@40 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@40 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@102 ($generated@@40 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@40 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@33 ($generated@@50 $generated@@105 $generated@@106)) $generated@@6)
 :pattern ( ($generated@@50 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@107 ($generated@@50 $generated@@108 $generated@@109)) $generated@@108)
 :pattern ( ($generated@@50 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@110 ($generated@@50 $generated@@111 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@50 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@36 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@36 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@65 $generated@@116 ($generated@@66 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@66 $generated@@116 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (< ($generated@@117 $generated@@119) ($generated@@118 ($generated@@40 $generated@@119 $generated@@120)))
 :pattern ( ($generated@@40 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (< ($generated@@117 $generated@@122) ($generated@@118 ($generated@@40 $generated@@121 $generated@@122)))
 :pattern ( ($generated@@40 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (< ($generated@@117 $generated@@123) ($generated@@118 ($generated@@50 $generated@@123 $generated@@124)))
 :pattern ( ($generated@@50 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (< ($generated@@118 $generated@@126) ($generated@@118 ($generated@@50 $generated@@125 $generated@@126)))
 :pattern ( ($generated@@50 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> ($generated@@41 $generated@@129 ($generated@@29 $generated@@127 $generated@@128)) (and (= ($generated@@66 $generated@@28 ($generated@@65 $generated@@28 $generated@@129)) $generated@@129) ($generated@@27 $generated@@28 ($generated@@65 $generated@@28 $generated@@129) ($generated@@29 $generated@@127 $generated@@128))))
 :pattern ( ($generated@@41 $generated@@129 ($generated@@29 $generated@@127 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@37 $generated@@132) (and ($generated@@63 $generated@@130) ($generated@@35 $generated@@28 $generated@@130 ($generated@@36 $generated@@131) $generated@@132))) ($generated@@54 ($generated@@107 $generated@@130) $generated@@131 $generated@@132))
 :pattern ( ($generated@@54 ($generated@@107 $generated@@130) $generated@@131 $generated@@132))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@133 $generated@@144 $generated@@145 $generated@@146 ($generated@@140 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@133 $generated@@151 $generated@@152 $generated@@153 ($generated@@140 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@133 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@133 $generated@@160 $generated@@161 $generated@@162 ($generated@@140 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@133 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))) (= ($generated@@9 $generated@@134) 5)) (= ($generated@@9 $generated@@135) 6)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@137 $generated@@169 $generated@@170 ($generated@@141 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@173) $generated@@171)
 :weight 0
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@178 $generated@@179) (= ($generated@@137 $generated@@174 $generated@@175 ($generated@@141 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@176) $generated@@179) ($generated@@137 $generated@@174 $generated@@175 $generated@@177 $generated@@179)))
 :weight 0
))) (= ($generated@@9 $generated@@138) 7)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (= ($generated@@9 ($generated@@139 $generated@@180 $generated@@181)) 8))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@142 ($generated@@139 $generated@@182 $generated@@183)) $generated@@182)
 :pattern ( ($generated@@139 $generated@@182 $generated@@183))
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@143 ($generated@@139 $generated@@184 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@139 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@14 ($generated@@133 $generated@@134 $generated@@135 $generated@@10 ($generated@@136 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (or (not (= $generated@@190 $generated@@186)) (not true)) ($generated@@14 ($generated@@65 $generated@@10 ($generated@@137 $generated@@135 $generated@@138 ($generated@@137 $generated@@134 ($generated@@139 $generated@@135 $generated@@138) $generated@@187 $generated@@190) $generated@@188)))) $generated@@189))
 :pattern ( ($generated@@133 $generated@@134 $generated@@135 $generated@@10 ($generated@@136 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@192 $generated@@193)) $generated@@3) (= ($generated@@80 ($generated@@29 $generated@@192 $generated@@193)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@117 ($generated@@66 $generated@@28 $generated@@194)) ($generated@@118 $generated@@194))
 :pattern ( ($generated@@117 ($generated@@66 $generated@@28 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@41 $generated@@196 ($generated@@36 $generated@@195)) (and (= ($generated@@66 $generated@@28 ($generated@@65 $generated@@28 $generated@@196)) $generated@@196) ($generated@@27 $generated@@28 ($generated@@65 $generated@@28 $generated@@196) ($generated@@36 $generated@@195))))
 :pattern ( ($generated@@41 $generated@@196 ($generated@@36 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@37 $generated@@199) (and ($generated@@63 $generated@@197) ($generated@@35 $generated@@28 $generated@@197 ($generated@@36 $generated@@198) $generated@@199))) ($generated@@35 $generated@@28 ($generated@@110 $generated@@197) ($generated@@36 $generated@@198) $generated@@199))
 :pattern ( ($generated@@35 $generated@@28 ($generated@@110 $generated@@197) ($generated@@36 $generated@@198) $generated@@199))
)))
(assert (= $generated@@34 ($generated@@47 $generated@@28 $generated@@34)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@37 $generated@@202) (and ($generated@@26 $generated@@200) (exists (($generated@@203 T@U) ) (! ($generated@@35 $generated@@28 $generated@@200 ($generated@@29 $generated@@201 $generated@@203) $generated@@202)
 :pattern ( ($generated@@35 $generated@@28 $generated@@200 ($generated@@29 $generated@@201 $generated@@203) $generated@@202))
)))) ($generated@@54 ($generated@@99 $generated@@200) $generated@@201 $generated@@202))
 :pattern ( ($generated@@54 ($generated@@99 $generated@@200) $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@37 $generated@@206) (and ($generated@@26 $generated@@204) (exists (($generated@@207 T@U) ) (! ($generated@@35 $generated@@28 $generated@@204 ($generated@@29 $generated@@207 $generated@@205) $generated@@206)
 :pattern ( ($generated@@35 $generated@@28 $generated@@204 ($generated@@29 $generated@@207 $generated@@205) $generated@@206))
)))) ($generated@@54 ($generated@@102 $generated@@204) $generated@@205 $generated@@206))
 :pattern ( ($generated@@54 ($generated@@102 $generated@@204) $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@40 ($generated@@47 $generated@@138 $generated@@208) ($generated@@47 $generated@@138 $generated@@209)) ($generated@@47 $generated@@28 ($generated@@40 $generated@@208 $generated@@209)))
 :pattern ( ($generated@@40 ($generated@@47 $generated@@138 $generated@@208) ($generated@@47 $generated@@138 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@50 ($generated@@47 $generated@@138 $generated@@210) ($generated@@47 $generated@@28 $generated@@211)) ($generated@@47 $generated@@28 ($generated@@50 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@50 ($generated@@47 $generated@@138 $generated@@210) ($generated@@47 $generated@@28 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@T) ) (! (= ($generated@@66 $generated@@213 ($generated@@47 $generated@@213 $generated@@212)) ($generated@@47 $generated@@138 ($generated@@66 $generated@@213 $generated@@212)))
 :pattern ( ($generated@@66 $generated@@213 ($generated@@47 $generated@@213 $generated@@212)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! ($generated@@35 $generated@@86 $generated@@215 $generated $generated@@214)
 :pattern ( ($generated@@35 $generated@@86 $generated@@215 $generated $generated@@214))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> ($generated@@37 $generated@@219) (= ($generated@@35 $generated@@28 ($generated@@50 $generated@@217 $generated@@218) ($generated@@36 $generated@@216) $generated@@219)  (and ($generated@@54 $generated@@217 $generated@@216 $generated@@219) ($generated@@35 $generated@@28 $generated@@218 ($generated@@36 $generated@@216) $generated@@219))))
 :pattern ( ($generated@@35 $generated@@28 ($generated@@50 $generated@@217 $generated@@218) ($generated@@36 $generated@@216) $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ) (! ($generated@@27 $generated@@86 $generated@@220 $generated)
 :pattern ( ($generated@@27 $generated@@86 $generated@@220 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@234 true))
(let (($generated@@235  (=> (and (= $generated@@221 $generated@@34) (= (ControlFlow 0 8) (- 0 7))) false)))
(let (($generated@@236  (=> (or (not (= $generated@@221 ($generated@@50 ($generated@@66 $generated@@86 $generated@@222) $generated@@223))) (not true)) (and (=> (= (ControlFlow 0 10) 8) $generated@@235) (=> (= (ControlFlow 0 10) 9) $generated@@234)))))
(let (($generated@@237 true))
(let (($generated@@238  (=> (= $generated@@224 $generated@@34) (and (=> (= (ControlFlow 0 11) 6) $generated@@237) (=> (= (ControlFlow 0 11) 10) $generated@@236)))))
(let (($generated@@239 true))
(let (($generated@@240  (=> (and (= $generated@@224 ($generated@@50 $generated@@225 $generated@@226)) (= (ControlFlow 0 3) (- 0 2))) false)))
(let (($generated@@241  (=> (or (not (= $generated@@224 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 5) 3) $generated@@240) (=> (= (ControlFlow 0 5) 4) $generated@@239)))))
(let (($generated@@242  (=> (= ($generated@@40 ($generated@@66 $generated@@28 $generated@@227) ($generated@@66 $generated@@28 $generated@@228)) ($generated@@40 ($generated@@66 $generated@@28 $generated@@224) ($generated@@66 $generated@@28 $generated@@221))) (=> (and ($generated@@27 $generated@@28 $generated@@224 ($generated@@36 $generated)) ($generated@@27 $generated@@28 $generated@@221 ($generated@@36 $generated))) (and (=> (= (ControlFlow 0 12) 11) $generated@@238) (=> (= (ControlFlow 0 12) 5) $generated@@241))))))
(let (($generated@@243 true))
(let (($generated@@244  (=> (= $generated@@229 ($generated@@136 $generated@@230 $generated@@231 $generated@@1 false)) (and (=> (= (ControlFlow 0 13) 12) $generated@@242) (=> (= (ControlFlow 0 13) 1) $generated@@243)))))
(let (($generated@@245  (=> (and ($generated@@37 $generated@@231) ($generated@@232 $generated@@231)) (=> (and (and ($generated@@27 $generated@@28 $generated@@227 ($generated@@36 $generated)) ($generated@@35 $generated@@28 $generated@@227 ($generated@@36 $generated) $generated@@231)) ($generated@@82 $generated@@227)) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@228 ($generated@@36 $generated)) ($generated@@35 $generated@@28 $generated@@228 ($generated@@36 $generated) $generated@@231)) ($generated@@82 $generated@@228)) (and (= 0 $generated@@233) (= (ControlFlow 0 14) 13))) $generated@@244)))))
$generated@@245)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 2))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 8) (- 7))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
