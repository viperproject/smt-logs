(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 () Int)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U T@U T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Int)
(declare-fun $generated@@111 (T@U) Int)
(declare-fun $generated@@116 () T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@128 (T@T T@T) T@T)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert  (and (and (and (= ($generated@@9 $generated@@26) 3) (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@33 $generated@@38 $generated@@39 ($generated@@37 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@42) $generated@@40)
 :weight 0
))) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (or (= $generated@@47 $generated@@48) (= ($generated@@33 $generated@@43 $generated@@44 ($generated@@37 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@48) ($generated@@33 $generated@@43 $generated@@44 $generated@@46 $generated@@48)))
 :weight 0
))) (= ($generated@@9 $generated@@34) 4)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@49 $generated@@27)  (and ($generated@@25 $generated@@26 $generated@@49 ($generated@@28 $generated $generated)) (forall (($generated@@50 Int) )  (=> ($generated@@29 ($generated@@30 $generated@@49) ($generated@@31 $generated@@11 ($generated@@15 $generated@@50))) (= ($generated@@16 ($generated@@32 $generated@@11 ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 $generated@@49) ($generated@@31 $generated@@11 ($generated@@15 $generated@@50))))) ($generated@@36 0))))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@49 $generated@@27))
)))
(assert (= ($generated@@51 $generated) $generated@@0))
(assert  (=> (<= 1 $generated@@52) (forall (($generated@@57 T@U) ) (!  (=> (or ($generated@@55 ($generated@@54 $generated@@26 $generated@@57)) (and (< 1 $generated@@52) ($generated@@25 $generated@@26 $generated@@57 $generated@@27))) (= ($generated@@53 ($generated@@54 $generated@@26 $generated@@57)) ($generated@@56 ($generated@@54 $generated@@26 $generated@@57) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 0))) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 1))))))
 :weight 3
 :pattern ( ($generated@@53 ($generated@@54 $generated@@26 $generated@@57)))
))))
(assert (= ($generated@@9 $generated@@58) 5))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@25 $generated@@58 ($generated@@59 $generated@@64 $generated@@65) ($generated@@60 $generated@@62 $generated@@63))  (and ($generated@@61 $generated@@64 $generated@@62) ($generated@@61 $generated@@65 $generated@@63)))
 :pattern ( ($generated@@25 $generated@@58 ($generated@@59 $generated@@64 $generated@@65) ($generated@@60 $generated@@62 $generated@@63)))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@36 $generated@@66) $generated@@66)
 :pattern ( ($generated@@36 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@54 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@54 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@31 $generated@@70 ($generated@@32 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@32 $generated@@70 $generated@@69))
)))
(assert (= ($generated@@9 $generated@@71) 6))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@25 $generated@@71 $generated@@73 ($generated@@72 $generated@@74)) (forall (($generated@@75 T@U) ) (!  (=> ($generated@@29 $generated@@73 $generated@@75) ($generated@@61 $generated@@75 $generated@@74))
 :pattern ( ($generated@@29 $generated@@73 $generated@@75))
)))
 :pattern ( ($generated@@25 $generated@@71 $generated@@73 ($generated@@72 $generated@@74)))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@61 $generated@@76 $generated@@27) (and (= ($generated@@31 $generated@@26 ($generated@@32 $generated@@26 $generated@@76)) $generated@@76) ($generated@@25 $generated@@26 ($generated@@32 $generated@@26 $generated@@76) $generated@@27)))
 :pattern ( ($generated@@61 $generated@@76 $generated@@27))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@61 $generated@@77 $generated) (and (= ($generated@@31 $generated@@11 ($generated@@32 $generated@@11 $generated@@77)) $generated@@77) ($generated@@25 $generated@@11 ($generated@@32 $generated@@11 $generated@@77) $generated)))
 :pattern ( ($generated@@61 $generated@@77 $generated))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@61 ($generated@@31 $generated@@80 $generated@@78) $generated@@79) ($generated@@25 $generated@@80 $generated@@78 $generated@@79))
 :pattern ( ($generated@@61 ($generated@@31 $generated@@80 $generated@@78) $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@81 ($generated@@28 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@28 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 ($generated@@28 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@28 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@51 ($generated@@28 $generated@@87 $generated@@88)) $generated@@2)
 :pattern ( ($generated@@28 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 ($generated@@59 $generated@@90 $generated@@91)) $generated@@4)
 :pattern ( ($generated@@59 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@92 ($generated@@60 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@60 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@95 ($generated@@60 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@60 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 ($generated@@59 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@59 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 ($generated@@59 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@59 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@72 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@72 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@51 ($generated@@72 $generated@@106)) $generated@@1)
 :pattern ( ($generated@@72 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@32 $generated@@108 ($generated@@31 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@31 $generated@@108 $generated@@107))
)))
(assert  (=> (<= 1 $generated@@52) (forall (($generated@@109 T@U) ) (!  (=> (or ($generated@@55 $generated@@109) (and (< 1 $generated@@52) ($generated@@25 $generated@@26 $generated@@109 $generated@@27))) (and ($generated@@14 ($generated@@54 $generated@@10 ($generated@@13 false))) ($generated@@25 $generated@@26 ($generated@@53 $generated@@109) $generated@@27)))
 :pattern ( ($generated@@53 $generated@@109))
))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (< ($generated@@110 $generated@@112) ($generated@@111 ($generated@@59 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@59 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (< ($generated@@110 $generated@@115) ($generated@@111 ($generated@@59 $generated@@114 $generated@@115)))
 :pattern ( ($generated@@59 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (!  (not ($generated@@29 ($generated@@30 $generated@@116) $generated@@117))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@61 $generated@@118 ($generated@@28 $generated@@119 $generated@@120)) (and (= ($generated@@31 $generated@@26 ($generated@@32 $generated@@26 $generated@@118)) $generated@@118) ($generated@@25 $generated@@26 ($generated@@32 $generated@@26 $generated@@118) ($generated@@28 $generated@@119 $generated@@120))))
 :pattern ( ($generated@@61 $generated@@118 ($generated@@28 $generated@@119 $generated@@120)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@61 $generated@@123 ($generated@@60 $generated@@121 $generated@@122)) (and (= ($generated@@31 $generated@@58 ($generated@@32 $generated@@58 $generated@@123)) $generated@@123) ($generated@@25 $generated@@58 ($generated@@32 $generated@@58 $generated@@123) ($generated@@60 $generated@@121 $generated@@122))))
 :pattern ( ($generated@@61 $generated@@123 ($generated@@60 $generated@@121 $generated@@122)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@124 $generated@@132 $generated@@133 $generated@@134 ($generated@@129 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@124 $generated@@139 $generated@@140 $generated@@141 ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@124 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@124 $generated@@148 $generated@@149 $generated@@150 ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@124 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))) (= ($generated@@9 $generated@@125) 7)) (= ($generated@@9 $generated@@126) 8)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (= ($generated@@9 ($generated@@128 $generated@@157 $generated@@158)) 9))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@130 ($generated@@128 $generated@@159 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@128 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@131 ($generated@@128 $generated@@161 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@128 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Bool) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@14 ($generated@@124 $generated@@125 $generated@@126 $generated@@10 ($generated@@127 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))  (=> (and (or (not (= $generated@@167 $generated@@163)) (not true)) ($generated@@14 ($generated@@32 $generated@@10 ($generated@@33 $generated@@126 $generated@@34 ($generated@@33 $generated@@125 ($generated@@128 $generated@@126 $generated@@34) $generated@@164 $generated@@167) $generated@@165)))) $generated@@166))
 :pattern ( ($generated@@124 $generated@@125 $generated@@126 $generated@@10 ($generated@@127 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (and (= ($generated@@51 ($generated@@60 $generated@@170 $generated@@171)) $generated@@5) (= ($generated@@169 ($generated@@60 $generated@@170 $generated@@171)) $generated@@7))
 :pattern ( ($generated@@60 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (or (= $generated@@172 $generated@@116) (exists (($generated@@173 T@U) ) ($generated@@29 ($generated@@30 $generated@@172) $generated@@173)))
 :pattern ( ($generated@@30 $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ) (!  (or (= $generated@@175 $generated@@116) (exists (($generated@@176 T@U) ) ($generated@@29 ($generated@@174 $generated@@175) $generated@@176)))
 :pattern ( ($generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@29 ($generated@@177 $generated@@178) $generated@@179)  (and ($generated@@29 ($generated@@30 $generated@@178) ($generated@@98 ($generated@@32 $generated@@58 $generated@@179))) (= ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 $generated@@178) ($generated@@98 ($generated@@32 $generated@@58 $generated@@179))) ($generated@@101 ($generated@@32 $generated@@58 $generated@@179)))))
 :pattern ( ($generated@@29 ($generated@@177 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@29 ($generated@@174 $generated@@180) $generated@@181) (exists (($generated@@182 T@U) ) (!  (and ($generated@@29 ($generated@@30 $generated@@180) $generated@@182) (= $generated@@181 ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 $generated@@180) $generated@@182)))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@180) $generated@@182))
 :pattern ( ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 $generated@@180) $generated@@182))
)))
 :pattern ( ($generated@@29 ($generated@@174 $generated@@180) $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (and (=> (= $generated@@185 $generated@@184) (and ($generated@@29 ($generated@@30 ($generated@@56 $generated@@183 $generated@@184 $generated@@186)) $generated@@185) (= ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 ($generated@@56 $generated@@183 $generated@@184 $generated@@186)) $generated@@185) $generated@@186))) (=> (or (not (= $generated@@185 $generated@@184)) (not true)) (and (= ($generated@@29 ($generated@@30 ($generated@@56 $generated@@183 $generated@@184 $generated@@186)) $generated@@185) ($generated@@29 ($generated@@30 $generated@@183) $generated@@185)) (= ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 ($generated@@56 $generated@@183 $generated@@184 $generated@@186)) $generated@@185) ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 $generated@@183) $generated@@185)))))
 :pattern ( ($generated@@29 ($generated@@30 ($generated@@56 $generated@@183 $generated@@184 $generated@@186)) $generated@@185))
 :pattern ( ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 ($generated@@56 $generated@@183 $generated@@184 $generated@@186)) $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@110 ($generated@@31 $generated@@58 $generated@@187)) ($generated@@111 $generated@@187))
 :pattern ( ($generated@@110 ($generated@@31 $generated@@58 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@61 $generated@@188 ($generated@@72 $generated@@189)) (and (= ($generated@@31 $generated@@71 ($generated@@32 $generated@@71 $generated@@188)) $generated@@188) ($generated@@25 $generated@@71 ($generated@@32 $generated@@71 $generated@@188) ($generated@@72 $generated@@189))))
 :pattern ( ($generated@@61 $generated@@188 ($generated@@72 $generated@@189)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@190 ($generated@@28 $generated@@191 $generated@@192)) (forall (($generated@@193 T@U) ) (!  (=> ($generated@@29 ($generated@@30 $generated@@190) $generated@@193) (and ($generated@@61 ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 $generated@@190) $generated@@193) $generated@@192) ($generated@@61 $generated@@193 $generated@@191)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@34 ($generated@@35 $generated@@190) $generated@@193))
 :pattern ( ($generated@@29 ($generated@@30 $generated@@190) $generated@@193))
)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@190 ($generated@@28 $generated@@191 $generated@@192)))
)))
(assert (= ($generated@@51 $generated@@27) $generated@@6))
(assert (= ($generated@@169 $generated@@27) $generated@@8))
(assert  (=> (<= 1 $generated@@52) (forall (($generated@@194 T@U) ) (!  (=> (or ($generated@@55 $generated@@194) (and (< 1 $generated@@52) ($generated@@25 $generated@@26 $generated@@194 $generated@@27))) (= ($generated@@53 $generated@@194) ($generated@@56 $generated@@194 ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 0))) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 1))))))
 :pattern ( ($generated@@53 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@59 ($generated@@54 $generated@@34 $generated@@195) ($generated@@54 $generated@@34 $generated@@196)) ($generated@@54 $generated@@58 ($generated@@59 $generated@@195 $generated@@196)))
 :pattern ( ($generated@@59 ($generated@@54 $generated@@34 $generated@@195) ($generated@@54 $generated@@34 $generated@@196)))
)))
(assert (forall (($generated@@197 Int) ) (! (= ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 $generated@@197))) ($generated@@54 $generated@@34 ($generated@@31 $generated@@11 ($generated@@15 $generated@@197))))
 :pattern ( ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 $generated@@197))))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@T) ) (! (= ($generated@@31 $generated@@199 ($generated@@54 $generated@@199 $generated@@198)) ($generated@@54 $generated@@34 ($generated@@31 $generated@@199 $generated@@198)))
 :pattern ( ($generated@@31 $generated@@199 ($generated@@54 $generated@@199 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ) (!  (or (= $generated@@200 $generated@@116) (exists (($generated@@201 T@U) ($generated@@202 T@U) ) ($generated@@29 ($generated@@177 $generated@@200) ($generated@@31 $generated@@58 ($generated@@59 $generated@@201 $generated@@202)))))
 :pattern ( ($generated@@177 $generated@@200))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@203 ($generated@@28 $generated@@204 $generated@@205)) (and (and ($generated@@25 $generated@@71 ($generated@@30 $generated@@203) ($generated@@72 $generated@@204)) ($generated@@25 $generated@@71 ($generated@@174 $generated@@203) ($generated@@72 $generated@@205))) ($generated@@25 $generated@@71 ($generated@@177 $generated@@203) ($generated@@72 ($generated@@60 $generated@@204 $generated@@205)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@203 ($generated@@28 $generated@@204 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@25 $generated@@11 $generated@@206 $generated)
 :pattern ( ($generated@@25 $generated@@11 $generated@@206 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@212 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@213  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@14 ($generated@@54 $generated@@10 ($generated@@13 false))))))
(let (($generated@@214  (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@25 $generated@@26 ($generated@@56 $generated@@207 ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 0))) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 1)))) $generated@@27)) (=> ($generated@@25 $generated@@26 ($generated@@56 $generated@@207 ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 0))) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 1)))) $generated@@27) (=> (= ($generated@@53 $generated@@207) ($generated@@56 $generated@@207 ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 0))) ($generated@@31 $generated@@11 ($generated@@15 ($generated@@36 1))))) (=> (and ($generated@@25 $generated@@26 ($generated@@53 $generated@@207) $generated@@27) (= (ControlFlow 0 4) 3)) $generated@@213))))))
(let (($generated@@215 true))
(let (($generated@@216  (=> (= $generated@@208 ($generated@@127 $generated@@209 $generated@@210 $generated@@3 false)) (and (=> (= (ControlFlow 0 6) 1) $generated@@215) (=> (= (ControlFlow 0 6) 4) $generated@@214)))))
(let (($generated@@217  (=> (and (and (and ($generated@@211 $generated@@210) ($generated@@212 $generated@@210)) ($generated@@25 $generated@@26 $generated@@207 $generated@@27)) (and (= 1 $generated@@52) (= (ControlFlow 0 7) 6))) $generated@@216)))
$generated@@217))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
