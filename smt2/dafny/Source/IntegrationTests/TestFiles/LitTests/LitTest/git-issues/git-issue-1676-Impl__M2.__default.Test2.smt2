(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 (Int) Int)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U T@U) Bool)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U T@U) T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@U Int) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! ($generated@@24 $generated@@9 $generated@@29 $generated@@28 $generated@@30)
 :pattern ( ($generated@@24 $generated@@9 $generated@@29 $generated@@28 $generated@@30))
)))
(assert (= ($generated@@31 $generated@@32) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@34 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@34 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@34 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@7 $generated@@35) 3)) (= ($generated@@7 $generated@@36) 4)) (= ($generated@@7 $generated@@37) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@7 ($generated@@38 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@38 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@38 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@38 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@33 $generated@@60 $generated@@61) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@12 ($generated@@39 $generated@@8 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@60 $generated@@62) $generated@@2))) ($generated@@12 ($generated@@39 $generated@@8 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@2))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@2))
)))
 :pattern ( ($generated@@33 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 Int) ) (! (= ($generated@@63 $generated@@64) $generated@@64)
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (= ($generated@@7 $generated@@69) 7))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (and ($generated@@68 $generated@@69 $generated@@73 ($generated@@71 $generated@@75)) ($generated@@72 $generated@@74 $generated@@75)) ($generated@@68 $generated@@69 ($generated@@70 $generated@@73 $generated@@74) ($generated@@71 $generated@@75)))
 :pattern ( ($generated@@68 $generated@@69 ($generated@@70 $generated@@73 $generated@@74) ($generated@@71 $generated@@75)))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@39 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@39 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@31 ($generated@@70 $generated@@79 $generated@@80)) (+ 1 ($generated@@31 $generated@@79)))
 :pattern ( ($generated@@70 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@68 $generated@@9 $generated@@81 $generated@@28) (= ($generated@@14 $generated@@81) ($generated@@63 0)))
 :pattern ( ($generated@@68 $generated@@9 $generated@@81 $generated@@28))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@68 $generated@@9 $generated@@82 $generated@@25) (= ($generated@@14 $generated@@82) ($generated@@63 1)))
 :pattern ( ($generated@@68 $generated@@9 $generated@@82 $generated@@25))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@83 ($generated@@76 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@24 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@83 ($generated@@76 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@33 $generated@@88 $generated@@89) (=> ($generated@@83 $generated@@90 $generated@@91 $generated@@88) ($generated@@83 $generated@@90 $generated@@91 $generated@@89)))
 :pattern ( ($generated@@33 $generated@@88 $generated@@89) ($generated@@83 $generated@@90 $generated@@91 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (!  (=> ($generated@@33 $generated@@92 $generated@@93) (=> ($generated@@24 $generated@@96 $generated@@94 $generated@@95 $generated@@92) ($generated@@24 $generated@@96 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@33 $generated@@92 $generated@@93) ($generated@@24 $generated@@96 $generated@@94 $generated@@95 $generated@@92))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@31 ($generated@@97 $generated@@98 $generated@@99)) (+ ($generated@@31 $generated@@98) ($generated@@31 $generated@@99)))
 :pattern ( ($generated@@31 ($generated@@97 $generated@@98 $generated@@99)))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@72 $generated@@100 $generated@@25) (and (= ($generated@@76 $generated@@9 ($generated@@39 $generated@@9 $generated@@100)) $generated@@100) ($generated@@68 $generated@@9 ($generated@@39 $generated@@9 $generated@@100) $generated@@25)))
 :pattern ( ($generated@@72 $generated@@100 $generated@@25))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@72 $generated@@101 $generated@@28) (and (= ($generated@@76 $generated@@9 ($generated@@39 $generated@@9 $generated@@101)) $generated@@101) ($generated@@68 $generated@@9 ($generated@@39 $generated@@9 $generated@@101) $generated@@28)))
 :pattern ( ($generated@@72 $generated@@101 $generated@@28))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 Int) ($generated@@105 T@U) ) (!  (and (=> (= $generated@@104 ($generated@@31 $generated@@103)) (= ($generated@@102 ($generated@@70 $generated@@103 $generated@@105) $generated@@104) $generated@@105)) (=> (or (not (= $generated@@104 ($generated@@31 $generated@@103))) (not true)) (= ($generated@@102 ($generated@@70 $generated@@103 $generated@@105) $generated@@104) ($generated@@102 $generated@@103 $generated@@104))))
 :pattern ( ($generated@@102 ($generated@@70 $generated@@103 $generated@@105) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or (not (= $generated@@106 $generated@@108)) (not true)) (=> (and ($generated@@33 $generated@@106 $generated@@107) ($generated@@33 $generated@@107 $generated@@108)) ($generated@@33 $generated@@106 $generated@@108)))
 :pattern ( ($generated@@33 $generated@@106 $generated@@107) ($generated@@33 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@72 $generated@@109 $generated) (and (= ($generated@@76 $generated@@9 ($generated@@39 $generated@@9 $generated@@109)) $generated@@109) ($generated@@68 $generated@@9 ($generated@@39 $generated@@9 $generated@@109) $generated)))
 :pattern ( ($generated@@72 $generated@@109 $generated))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@72 ($generated@@76 $generated@@112 $generated@@110) $generated@@111) ($generated@@68 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@72 ($generated@@76 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (<= 0 ($generated@@31 $generated@@113))
 :pattern ( ($generated@@31 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@24 $generated@@69 $generated@@114 ($generated@@71 $generated@@115) $generated@@116) (forall (($generated@@117 Int) ) (!  (=> (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@31 $generated@@114))) ($generated@@83 ($generated@@102 $generated@@114 $generated@@117) $generated@@115 $generated@@116))
 :pattern ( ($generated@@102 $generated@@114 $generated@@117))
)))
 :pattern ( ($generated@@24 $generated@@69 $generated@@114 ($generated@@71 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@71 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@71 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@23 ($generated@@71 $generated@@120)) $generated@@1)
 :pattern ( ($generated@@71 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@39 $generated@@122 ($generated@@76 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@76 $generated@@122 $generated@@121))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@12 ($generated@@123 $generated@@37 $generated@@35 $generated@@8 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@12 ($generated@@39 $generated@@8 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@123 $generated@@37 $generated@@35 $generated@@8 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (and (= ($generated@@157 ($generated@@70 $generated@@159 $generated@@160)) $generated@@159) (= ($generated@@158 ($generated@@70 $generated@@159 $generated@@160)) $generated@@160))
 :pattern ( ($generated@@70 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@72 $generated@@161 ($generated@@71 $generated@@162)) (and (= ($generated@@76 $generated@@69 ($generated@@39 $generated@@69 $generated@@161)) $generated@@161) ($generated@@68 $generated@@69 ($generated@@39 $generated@@69 $generated@@161) ($generated@@71 $generated@@162))))
 :pattern ( ($generated@@72 $generated@@161 ($generated@@71 $generated@@162)))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@3))
(assert (= ($generated@@163 $generated@@25) $generated@@5))
(assert (= ($generated@@23 $generated@@28) $generated@@4))
(assert (= ($generated@@163 $generated@@28) $generated@@6))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Int) ) (!  (and (=> (< $generated@@166 ($generated@@31 $generated@@164)) (= ($generated@@102 ($generated@@97 $generated@@164 $generated@@165) $generated@@166) ($generated@@102 $generated@@164 $generated@@166))) (=> (<= ($generated@@31 $generated@@164) $generated@@166) (= ($generated@@102 ($generated@@97 $generated@@164 $generated@@165) $generated@@166) ($generated@@102 $generated@@165 (- $generated@@166 ($generated@@31 $generated@@164))))))
 :pattern ( ($generated@@102 ($generated@@97 $generated@@164 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@76 $generated@@9 ($generated@@13 ($generated@@63 $generated@@167))) ($generated@@65 $generated@@36 ($generated@@76 $generated@@9 ($generated@@13 $generated@@167))))
 :pattern ( ($generated@@76 $generated@@9 ($generated@@13 ($generated@@63 $generated@@167))))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@T) ) (! (= ($generated@@76 $generated@@169 ($generated@@65 $generated@@169 $generated@@168)) ($generated@@65 $generated@@36 ($generated@@76 $generated@@169 $generated@@168)))
 :pattern ( ($generated@@76 $generated@@169 ($generated@@65 $generated@@169 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> (= ($generated@@31 $generated@@170) 0) (= $generated@@170 $generated@@32))
 :pattern ( ($generated@@31 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! ($generated@@24 $generated@@9 $generated@@172 $generated $generated@@171)
 :pattern ( ($generated@@24 $generated@@9 $generated@@172 $generated $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@68 $generated@@69 $generated@@173 ($generated@@71 $generated@@174)) (forall (($generated@@175 Int) ) (!  (=> (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@31 $generated@@173))) ($generated@@72 ($generated@@102 $generated@@173 $generated@@175) $generated@@174))
 :pattern ( ($generated@@102 $generated@@173 $generated@@175))
)))
 :pattern ( ($generated@@68 $generated@@69 $generated@@173 ($generated@@71 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! ($generated@@68 $generated@@9 $generated@@176 $generated)
 :pattern ( ($generated@@68 $generated@@9 $generated@@176 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@189  (=> (= $generated@@177 ($generated@@124 $generated@@178 $generated@@179 $generated@@2 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@68 $generated@@9 ($generated@@13 ($generated@@63 1)) $generated@@25)) (=> ($generated@@68 $generated@@9 ($generated@@13 ($generated@@63 1)) $generated@@25) (=> (= $generated@@180 ($generated@@65 $generated@@69 ($generated@@70 $generated@@32 ($generated@@76 $generated@@9 ($generated@@13 ($generated@@63 1)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@68 $generated@@9 ($generated@@13 ($generated@@63 0)) $generated@@28)) (=> ($generated@@68 $generated@@9 ($generated@@13 ($generated@@63 0)) $generated@@28) (=> (and (= $generated@@181 ($generated@@65 $generated@@69 ($generated@@70 $generated@@32 ($generated@@76 $generated@@9 ($generated@@13 ($generated@@63 0)))))) (= $generated@@182 ($generated@@97 $generated@@180 $generated@@181))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@63 1)) (< ($generated@@63 1) ($generated@@31 $generated@@182)))) (=> (and (<= 0 ($generated@@63 1)) (< ($generated@@63 1) ($generated@@31 $generated@@182))) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@68 $generated@@9 ($generated@@39 $generated@@9 ($generated@@102 $generated@@182 ($generated@@63 1))) $generated@@25)))))))))))))
(let (($generated@@190  (=> (and ($generated@@183 $generated@@179) ($generated@@184 $generated@@179)) (=> (and (and (and (and ($generated@@68 $generated@@69 $generated@@185 ($generated@@71 $generated@@25)) ($generated@@24 $generated@@69 $generated@@185 ($generated@@71 $generated@@25) $generated@@179)) true) (and (and ($generated@@68 $generated@@69 $generated@@186 ($generated@@71 $generated@@28)) ($generated@@24 $generated@@69 $generated@@186 ($generated@@71 $generated@@28) $generated@@179)) true)) (and (and (and ($generated@@68 $generated@@69 $generated@@187 ($generated@@71 $generated)) ($generated@@24 $generated@@69 $generated@@187 ($generated@@71 $generated) $generated@@179)) true) (and (= 2 $generated@@188) (= (ControlFlow 0 6) 2)))) $generated@@189))))
$generated@@190)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
