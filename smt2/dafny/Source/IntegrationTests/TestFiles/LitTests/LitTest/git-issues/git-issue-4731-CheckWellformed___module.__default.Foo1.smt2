(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@37 (T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@89 () Bool)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@113 (T@U) Int)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (= ($generated@@8 $generated@@29) 3))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@27 $generated@@34 $generated@@35 $generated@@36) (and (< 1 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@36 ($generated@@30 $generated@@34)) ($generated@@31 $generated@@36)))) (= ($generated@@26 $generated@@34 $generated@@35 $generated@@36) ($generated@@32 $generated@@29 $generated@@33)))
 :pattern ( ($generated@@26 $generated@@34 $generated@@35 $generated@@36))
))))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and (or ($generated@@39 $generated@@44 $generated@@45) (and (< 0 $generated@@25) (and ($generated@@40 $generated@@29 $generated@@45 ($generated@@30 $generated@@44) $generated@@43) ($generated@@41 $generated@@45)))) ($generated@@42 $generated@@43)) ($generated@@37 ($generated@@38 $generated@@44 $generated@@45) $generated@@44 $generated@@43))
 :pattern ( ($generated@@37 ($generated@@38 $generated@@44 $generated@@45) $generated@@44 $generated@@43))
))))
(assert (= ($generated@@46 $generated@@33) $generated@@6))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@42 $generated@@48) ($generated@@40 $generated@@29 $generated@@33 ($generated@@30 $generated@@47) $generated@@48))
 :pattern ( ($generated@@40 $generated@@29 $generated@@33 ($generated@@30 $generated@@47) $generated@@48))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@50 $generated@@51 ($generated@@32 $generated@@29 $generated@@52)) (and (< 0 $generated@@25) ($generated@@28 $generated@@29 $generated@@52 ($generated@@30 $generated@@51)))) (= ($generated@@49 $generated@@51 ($generated@@32 $generated@@29 $generated@@52)) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 ($generated@@31 ($generated@@32 $generated@@29 $generated@@52)))))))
 :weight 3
 :pattern ( ($generated@@49 $generated@@51 ($generated@@32 $generated@@29 $generated@@52)))
))))
(assert (forall (($generated@@53 T@U) ) (! ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@53))
 :pattern ( ($generated@@28 $generated@@29 $generated@@33 ($generated@@30 $generated@@53)))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@32 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@32 $generated@@55 $generated@@54))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@27 $generated@@56 $generated@@57 ($generated@@32 $generated@@29 $generated@@58)) (and (< 1 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@58 ($generated@@30 $generated@@56)) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 ($generated@@31 ($generated@@32 $generated@@29 $generated@@58)))))))) (= ($generated@@26 $generated@@56 $generated@@57 ($generated@@32 $generated@@29 $generated@@58)) ($generated@@32 $generated@@29 $generated@@33)))
 :weight 3
 :pattern ( ($generated@@26 $generated@@56 $generated@@57 ($generated@@32 $generated@@29 $generated@@58)))
))))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@39 $generated@@60 $generated@@61) (and (< 0 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@61 ($generated@@30 $generated@@60)) ($generated@@41 $generated@@61)))) ($generated@@59 ($generated@@38 $generated@@60 $generated@@61) $generated@@60))
 :pattern ( ($generated@@38 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@41 $generated@@62) (= ($generated@@46 $generated@@62) $generated@@5))
 :pattern ( ($generated@@41 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@31 $generated@@63) (= ($generated@@46 $generated@@63) $generated@@6))
 :pattern ( ($generated@@31 $generated@@63))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@65 $generated@@66 $generated@@67) (and (< 1 $generated@@25) (and ($generated@@40 $generated@@29 $generated@@67 ($generated@@30 $generated@@65) $generated@@64) ($generated@@31 $generated@@67)))) ($generated@@42 $generated@@64)) ($generated@@40 $generated@@29 ($generated@@26 $generated@@65 $generated@@66 $generated@@67) ($generated@@30 $generated@@66) $generated@@64))
 :pattern ( ($generated@@40 $generated@@29 ($generated@@26 $generated@@65 $generated@@66 $generated@@67) ($generated@@30 $generated@@66) $generated@@64))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@31 $generated@@72) (= $generated@@72 $generated@@33))
 :pattern ( ($generated@@31 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@41 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@41 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@37 ($generated@@69 $generated@@79 $generated@@76) $generated@@77 $generated@@78) ($generated@@40 $generated@@79 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@37 ($generated@@69 $generated@@79 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (and (= ($generated@@24 ($generated@@30 $generated@@81)) $generated@@4) (= ($generated@@80 ($generated@@30 $generated@@81)) $generated@@7))
 :pattern ( ($generated@@30 $generated@@81))
)))
(assert (= ($generated@@8 $generated@@82) 4))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@39 $generated@@84 ($generated@@32 $generated@@29 $generated@@85)) (and (< 0 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@85 ($generated@@30 $generated@@84)) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 ($generated@@41 ($generated@@32 $generated@@29 $generated@@85)))))))) (= ($generated@@38 $generated@@84 ($generated@@32 $generated@@29 $generated@@85)) ($generated@@32 $generated@@82 ($generated@@83 ($generated@@32 $generated@@29 $generated@@85)))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@84 ($generated@@32 $generated@@29 $generated@@85)))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@42 $generated@@88) (= ($generated@@40 $generated@@29 ($generated@@73 $generated@@87) ($generated@@30 $generated@@86) $generated@@88) ($generated@@37 $generated@@87 $generated@@86 $generated@@88)))
 :pattern ( ($generated@@40 $generated@@29 ($generated@@73 $generated@@87) ($generated@@30 $generated@@86) $generated@@88))
)))
(assert  (=> (<= 2 $generated@@25) (=> (or $generated@@89 (< 2 $generated@@25)) ($generated@@28 $generated@@29 $generated@@90 ($generated@@30 $generated)))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@92 ($generated@@30 $generated@@91)) (or ($generated@@41 $generated@@92) ($generated@@31 $generated@@92)))
 :pattern ( ($generated@@31 $generated@@92) ($generated@@28 $generated@@29 $generated@@92 ($generated@@30 $generated@@91)))
 :pattern ( ($generated@@41 $generated@@92) ($generated@@28 $generated@@29 $generated@@92 ($generated@@30 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@59 $generated@@93 $generated@@0) (and (= ($generated@@69 $generated@@10 ($generated@@68 $generated@@10 $generated@@93)) $generated@@93) ($generated@@28 $generated@@10 ($generated@@68 $generated@@10 $generated@@93) $generated@@0)))
 :pattern ( ($generated@@59 $generated@@93 $generated@@0))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@59 $generated@@94 $generated) (and (= ($generated@@69 $generated@@9 ($generated@@68 $generated@@9 $generated@@94)) $generated@@94) ($generated@@28 $generated@@9 ($generated@@68 $generated@@9 $generated@@94) $generated)))
 :pattern ( ($generated@@59 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@59 ($generated@@69 $generated@@97 $generated@@95) $generated@@96) ($generated@@28 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@59 ($generated@@69 $generated@@97 $generated@@95) $generated@@96))
)))
(assert  (=> (<= 2 $generated@@25) (=> (or $generated@@89 (< 2 $generated@@25)) (and (let (($generated@@98 ($generated@@32 $generated@@29 $generated@@33)))
 (and (and ($generated@@50 ($generated@@30 $generated@@0) $generated@@98) (=> ($generated@@49 ($generated@@30 $generated@@0) $generated@@98) ($generated@@27 ($generated@@30 $generated@@0) $generated $generated@@98))) (=> (not ($generated@@49 ($generated@@30 $generated@@0) $generated@@98)) ($generated@@39 ($generated@@30 $generated@@0) $generated@@98)))) (= $generated@@90 (let (($generated@@99 ($generated@@32 $generated@@29 $generated@@33)))
(ite ($generated@@49 ($generated@@30 $generated@@0) $generated@@99) ($generated@@26 ($generated@@30 $generated@@0) $generated $generated@@99) ($generated@@32 $generated@@29 $generated@@33))))))))
(assert  (=> (<= 2 $generated@@25) (=> (or $generated@@89 (< 2 $generated@@25)) (and (let (($generated@@100 ($generated@@32 $generated@@29 $generated@@33)))
 (and (and ($generated@@50 ($generated@@30 $generated@@0) $generated@@100) (=> ($generated@@49 ($generated@@30 $generated@@0) $generated@@100) ($generated@@27 ($generated@@30 $generated@@0) $generated $generated@@100))) (=> (not ($generated@@49 ($generated@@30 $generated@@0) $generated@@100)) ($generated@@39 ($generated@@30 $generated@@0) $generated@@100)))) (= $generated@@90 (let (($generated@@101 ($generated@@32 $generated@@29 $generated@@33)))
(ite ($generated@@49 ($generated@@30 $generated@@0) $generated@@101) ($generated@@26 ($generated@@30 $generated@@0) $generated $generated@@101) ($generated@@32 $generated@@29 $generated@@33))))))))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@30 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@30 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@46 ($generated@@73 $generated@@104)) $generated@@5)
 :pattern ( ($generated@@73 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@83 ($generated@@73 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@73 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@68 $generated@@107 ($generated@@69 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@69 $generated@@107 $generated@@106))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@27 $generated@@108 $generated@@109 $generated@@110) (and (< 1 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@110 ($generated@@30 $generated@@108)) ($generated@@31 $generated@@110)))) ($generated@@28 $generated@@29 ($generated@@26 $generated@@108 $generated@@109 $generated@@110) ($generated@@30 $generated@@109)))
 :pattern ( ($generated@@26 $generated@@108 $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@73 $generated@@112) ($generated@@30 $generated@@111)) ($generated@@59 $generated@@112 $generated@@111))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@73 $generated@@112) ($generated@@30 $generated@@111)))
)))
(assert (forall (($generated@@115 T@U) ) (! (< ($generated@@113 $generated@@115) ($generated@@114 ($generated@@73 $generated@@115)))
 :pattern ( ($generated@@73 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@42 $generated@@118) (and ($generated@@41 $generated@@116) ($generated@@40 $generated@@29 $generated@@116 ($generated@@30 $generated@@117) $generated@@118))) ($generated@@37 ($generated@@83 $generated@@116) $generated@@117 $generated@@118))
 :pattern ( ($generated@@37 ($generated@@83 $generated@@116) $generated@@117 $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@125 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@119 $generated@@136 $generated@@137 $generated@@138 ($generated@@125 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@119 $generated@@145 $generated@@146 $generated@@147 ($generated@@125 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@119 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))) (= ($generated@@8 $generated@@120) 5)) (= ($generated@@8 $generated@@121) 6)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@123 $generated@@154 $generated@@155 ($generated@@126 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@123 $generated@@159 $generated@@160 ($generated@@126 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@123 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@8 ($generated@@124 $generated@@165 $generated@@166)) 7))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@124 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@128 ($generated@@124 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@124 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@13 ($generated@@119 $generated@@120 $generated@@121 $generated@@9 ($generated@@122 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@13 ($generated@@68 $generated@@9 ($generated@@123 $generated@@121 $generated@@82 ($generated@@123 $generated@@120 ($generated@@124 $generated@@121 $generated@@82) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@9 ($generated@@122 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@113 ($generated@@69 $generated@@29 $generated@@177)) ($generated@@114 $generated@@177))
 :pattern ( ($generated@@113 ($generated@@69 $generated@@29 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@59 $generated@@179 ($generated@@30 $generated@@178)) (and (= ($generated@@69 $generated@@29 ($generated@@68 $generated@@29 $generated@@179)) $generated@@179) ($generated@@28 $generated@@29 ($generated@@68 $generated@@29 $generated@@179) ($generated@@30 $generated@@178))))
 :pattern ( ($generated@@59 $generated@@179 ($generated@@30 $generated@@178)))
)))
(assert (= $generated@@33 ($generated@@32 $generated@@29 $generated@@33)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (or ($generated@@50 $generated@@180 $generated@@181) (and (< 0 $generated@@25) ($generated@@28 $generated@@29 $generated@@181 ($generated@@30 $generated@@180)))) (= ($generated@@49 $generated@@180 $generated@@181) ($generated@@31 $generated@@181)))
 :pattern ( ($generated@@49 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@73 ($generated@@32 $generated@@82 $generated@@182)) ($generated@@32 $generated@@29 ($generated@@73 $generated@@182)))
 :pattern ( ($generated@@73 ($generated@@32 $generated@@82 $generated@@182)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@69 $generated@@184 ($generated@@32 $generated@@184 $generated@@183)) ($generated@@32 $generated@@82 ($generated@@69 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@69 $generated@@184 ($generated@@32 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@40 $generated@@10 $generated@@186 $generated@@0 $generated@@185)
 :pattern ( ($generated@@40 $generated@@10 $generated@@186 $generated@@0 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@40 $generated@@9 $generated@@188 $generated $generated@@187)
 :pattern ( ($generated@@40 $generated@@9 $generated@@188 $generated $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! ($generated@@28 $generated@@10 $generated@@189 $generated@@0)
 :pattern ( ($generated@@28 $generated@@10 $generated@@189 $generated@@0))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@28 $generated@@9 $generated@@190 $generated)
 :pattern ( ($generated@@28 $generated@@9 $generated@@190 $generated))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (or ($generated@@39 $generated@@191 $generated@@192) (and (< 0 $generated@@25) (and ($generated@@28 $generated@@29 $generated@@192 ($generated@@30 $generated@@191)) ($generated@@41 $generated@@192)))) (= ($generated@@38 $generated@@191 $generated@@192) ($generated@@83 $generated@@192)))
 :pattern ( ($generated@@38 $generated@@191 $generated@@192))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@199  (=> (not ($generated@@49 ($generated@@30 $generated@@0) $generated@@193)) (=> (and ($generated@@37 ($generated@@69 $generated@@29 $generated@@193) ($generated@@30 ($generated@@30 $generated@@0)) $generated@@194) (= (ControlFlow 0 5) (- 0 4))) ($generated@@41 $generated@@193)))))
(let (($generated@@200  (=> ($generated@@49 ($generated@@30 $generated@@0) $generated@@193) (=> (and ($generated@@37 ($generated@@69 $generated@@29 $generated@@193) ($generated@@30 ($generated@@30 $generated@@0)) $generated@@194) (= (ControlFlow 0 3) (- 0 2))) ($generated@@31 $generated@@193)))))
(let (($generated@@201  (=> (= $generated@@195 ($generated@@32 $generated@@29 $generated@@33)) (=> (and (and ($generated@@28 $generated@@29 $generated@@195 ($generated@@30 ($generated@@30 $generated@@0))) (= $generated@@193 $generated@@195)) (and ($generated@@37 ($generated@@69 $generated@@29 $generated@@193) ($generated@@30 ($generated@@30 $generated@@0)) $generated@@194) ($generated@@50 ($generated@@30 $generated@@0) $generated@@193))) (and (=> (= (ControlFlow 0 6) 3) $generated@@200) (=> (= (ControlFlow 0 6) 5) $generated@@199))))))
(let (($generated@@202 true))
(let (($generated@@203  (=> (= $generated@@196 ($generated@@122 $generated@@197 $generated@@194 $generated@@3 false)) (and (=> (= (ControlFlow 0 7) 1) $generated@@202) (=> (= (ControlFlow 0 7) 6) $generated@@201)))))
(let (($generated@@204  (=> (and (and ($generated@@42 $generated@@194) ($generated@@198 $generated@@194)) (and (= 2 $generated@@25) (= (ControlFlow 0 8) 7))) $generated@@203)))
$generated@@204)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
