(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@47 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@68 (Int) T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@115 (Int) T@U)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@T T@T) T@T)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@130 (T@T) T@T)
(declare-fun $generated@@179 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@189 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@9 $generated@@35) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (and (<= 0 $generated@@37) (< $generated@@37 ($generated@@32 $generated@@36))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@36 $generated@@37))) ($generated@@33 ($generated@@31 $generated@@36))))
 :pattern ( ($generated@@30 $generated@@36 $generated@@37) ($generated@@31 $generated@@36))
)))
(assert (= ($generated@@32 $generated@@38) 0))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@46 T@U) ) (!  (=> (or ($generated@@41 $generated@@46) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@46 $generated@@43) (not ($generated@@44 $generated@@46))))) (= ($generated@@40 $generated@@46) ($generated@@45 $generated@@46)))
 :pattern ( ($generated@@40 $generated@@46))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@48 T@U) ) (!  (=> (or ($generated@@41 $generated@@48) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@48 $generated@@43) (not ($generated@@44 $generated@@48))))) (<= ($generated@@47 0) ($generated@@40 $generated@@48)))
 :pattern ( ($generated@@40 $generated@@48))
))))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@47 $generated@@49) $generated@@49)
 :pattern ( ($generated@@47 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (= ($generated@@9 $generated@@53) 4))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@42 $generated@@53 $generated@@57 ($generated@@55 $generated@@59)) ($generated@@56 $generated@@58 $generated@@59)) ($generated@@42 $generated@@53 ($generated@@54 $generated@@57 $generated@@58) ($generated@@55 $generated@@59)))
 :pattern ( ($generated@@42 $generated@@53 ($generated@@54 $generated@@57 $generated@@58) ($generated@@55 $generated@@59)))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@60 $generated@@62) (= ($generated@@61 $generated@@62) $generated@@5))
 :pattern ( ($generated@@60 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@61 $generated@@64) $generated@@6))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@34 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@34 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@60 $generated@@69) (exists (($generated@@70 Int) ) (= $generated@@69 ($generated@@68 $generated@@70))))
 :pattern ( ($generated@@60 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@63 $generated@@71) (exists (($generated@@72 T@U) ) (= $generated@@71 ($generated@@31 $generated@@72))))
 :pattern ( ($generated@@63 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@42 $generated@@11 $generated@@73 $generated@@27) (<= ($generated@@47 0) ($generated@@16 $generated@@73)))
 :pattern ( ($generated@@42 $generated@@11 $generated@@73 $generated@@27))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@32 ($generated@@54 $generated@@74 $generated@@75)) (+ 1 ($generated@@32 $generated@@74)))
 :pattern ( ($generated@@54 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@65 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@26 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@76 ($generated@@65 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@56 $generated@@81 $generated@@27) (and (= ($generated@@65 $generated@@11 ($generated@@34 $generated@@11 $generated@@81)) $generated@@81) ($generated@@42 $generated@@11 ($generated@@34 $generated@@11 $generated@@81) $generated@@27)))
 :pattern ( ($generated@@56 $generated@@81 $generated@@27))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@56 $generated@@82 $generated@@43) (and (= ($generated@@65 $generated@@35 ($generated@@34 $generated@@35 $generated@@82)) $generated@@82) ($generated@@42 $generated@@35 ($generated@@34 $generated@@35 $generated@@82) $generated@@43)))
 :pattern ( ($generated@@56 $generated@@82 $generated@@43))
)))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@42 $generated@@35 ($generated@@68 $generated@@83) $generated@@43) ($generated@@42 $generated@@11 ($generated@@15 $generated@@83) $generated@@27))
 :pattern ( ($generated@@42 $generated@@35 ($generated@@68 $generated@@83) $generated@@43))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 Int) ($generated@@86 T@U) ) (!  (and (=> (= $generated@@85 ($generated@@32 $generated@@84)) (= ($generated@@30 ($generated@@54 $generated@@84 $generated@@86) $generated@@85) $generated@@86)) (=> (or (not (= $generated@@85 ($generated@@32 $generated@@84))) (not true)) (= ($generated@@30 ($generated@@54 $generated@@84 $generated@@86) $generated@@85) ($generated@@30 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@30 ($generated@@54 $generated@@84 $generated@@86) $generated@@85))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@88 T@U) ) (!  (=> (or ($generated@@87 $generated@@88) (and (< 0 $generated@@39) ($generated@@42 $generated@@35 $generated@@88 $generated@@43))) (= ($generated@@44 $generated@@88) ($generated@@63 $generated@@88)))
 :pattern ( ($generated@@44 $generated@@88))
))))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@91 T@U) ) (!  (=> (or ($generated@@90 $generated@@91) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@91 $generated@@43) ($generated@@44 $generated@@91)))) (= ($generated@@89 $generated@@91) $generated@@91))
 :pattern ( ($generated@@89 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@42 $generated@@35 $generated@@92 $generated@@43) (or ($generated@@60 $generated@@92) ($generated@@63 $generated@@92)))
 :pattern ( ($generated@@63 $generated@@92) ($generated@@42 $generated@@35 $generated@@92 $generated@@43))
 :pattern ( ($generated@@60 $generated@@92) ($generated@@42 $generated@@35 $generated@@92 $generated@@43))
)))
(assert (= ($generated@@9 $generated@@93) 5))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@56 $generated@@94 $generated) (and (= ($generated@@65 $generated@@93 ($generated@@34 $generated@@93 $generated@@94)) $generated@@94) ($generated@@42 $generated@@93 ($generated@@34 $generated@@93 $generated@@94) $generated)))
 :pattern ( ($generated@@56 $generated@@94 $generated))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@95 T@U) ) (!  (=> (or ($generated@@90 $generated@@95) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@95 $generated@@43) ($generated@@44 $generated@@95)))) ($generated@@42 $generated@@35 ($generated@@89 $generated@@95) $generated@@43))
 :pattern ( ($generated@@89 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@56 ($generated@@65 $generated@@98 $generated@@96) $generated@@97) ($generated@@42 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@56 ($generated@@65 $generated@@98 $generated@@96) $generated@@97))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@99 T@U) ) (!  (=> (or ($generated@@41 ($generated@@50 $generated@@35 $generated@@99)) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@99 $generated@@43) (not ($generated@@14 ($generated@@50 $generated@@10 ($generated@@13 ($generated@@44 ($generated@@50 $generated@@35 $generated@@99))))))))) (= ($generated@@40 ($generated@@50 $generated@@35 $generated@@99)) ($generated@@47 ($generated@@45 ($generated@@50 $generated@@35 $generated@@99)))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@50 $generated@@35 $generated@@99)))
))))
(assert (forall (($generated@@100 T@U) ) (! (<= 0 ($generated@@32 $generated@@100))
 :pattern ( ($generated@@32 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@26 $generated@@53 $generated@@101 ($generated@@55 $generated@@102) $generated@@103) (forall (($generated@@104 Int) ) (!  (=> (and (<= 0 $generated@@104) (< $generated@@104 ($generated@@32 $generated@@101))) ($generated@@76 ($generated@@30 $generated@@101 $generated@@104) $generated@@102 $generated@@103))
 :pattern ( ($generated@@30 $generated@@101 $generated@@104))
)))
 :pattern ( ($generated@@26 $generated@@53 $generated@@101 ($generated@@55 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@55 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@55 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@25 ($generated@@55 $generated@@107)) $generated@@1)
 :pattern ( ($generated@@55 $generated@@107))
)))
(assert (forall (($generated@@108 Int) ) (! (= ($generated@@61 ($generated@@68 $generated@@108)) $generated@@5)
 :pattern ( ($generated@@68 $generated@@108))
)))
(assert (forall (($generated@@109 Int) ) (! (= ($generated@@45 ($generated@@68 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@68 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@61 ($generated@@31 $generated@@110)) $generated@@6)
 :pattern ( ($generated@@31 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@31 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@31 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@34 $generated@@114 ($generated@@65 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@65 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@117 Int) ) (!  (=> (or (and (<= 0 $generated@@117) (< $generated@@117 55296)) (and (<= 57344 $generated@@117) (< $generated@@117 1114112))) (= ($generated@@116 ($generated@@115 $generated@@117)) $generated@@117))
 :pattern ( ($generated@@115 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (< ($generated@@118 $generated@@119) ($generated@@33 ($generated@@31 $generated@@119)))
 :pattern ( ($generated@@31 $generated@@119))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@120 $generated@@131 $generated@@132 $generated@@133 ($generated@@127 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@136 $generated@@137) $generated@@134)
 :weight 0
)) (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@120 $generated@@138 $generated@@139 $generated@@140 ($generated@@127 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@120 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@153 $generated@@155) (= ($generated@@120 $generated@@147 $generated@@148 $generated@@149 ($generated@@127 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)))) (= ($generated@@9 $generated@@121) 6)) (= ($generated@@9 $generated@@122) 7)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@124 $generated@@156 $generated@@157 ($generated@@128 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@160) $generated@@158)
 :weight 0
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@165 $generated@@166) (= ($generated@@124 $generated@@161 $generated@@162 ($generated@@128 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@163) $generated@@166) ($generated@@124 $generated@@161 $generated@@162 $generated@@164 $generated@@166)))
 :weight 0
))) (= ($generated@@9 $generated@@125) 8)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (= ($generated@@9 ($generated@@126 $generated@@167 $generated@@168)) 9))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@129 ($generated@@126 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@126 $generated@@169 $generated@@170))
))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@130 ($generated@@126 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@126 $generated@@171 $generated@@172))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Bool) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@14 ($generated@@120 $generated@@121 $generated@@122 $generated@@10 ($generated@@123 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))  (=> (and (or (not (= $generated@@177 $generated@@173)) (not true)) ($generated@@14 ($generated@@34 $generated@@10 ($generated@@124 $generated@@122 $generated@@125 ($generated@@124 $generated@@121 ($generated@@126 $generated@@122 $generated@@125) $generated@@174 $generated@@177) $generated@@175)))) $generated@@176))
 :pattern ( ($generated@@120 $generated@@121 $generated@@122 $generated@@10 ($generated@@123 $generated@@173 $generated@@174 $generated@@175 $generated@@176) $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (and (= ($generated@@179 ($generated@@54 $generated@@181 $generated@@182)) $generated@@181) (= ($generated@@180 ($generated@@54 $generated@@181 $generated@@182)) $generated@@182))
 :pattern ( ($generated@@54 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@56 $generated@@183 ($generated@@55 $generated@@184)) (and (= ($generated@@65 $generated@@53 ($generated@@34 $generated@@53 $generated@@183)) $generated@@183) ($generated@@42 $generated@@53 ($generated@@34 $generated@@53 $generated@@183) ($generated@@55 $generated@@184))))
 :pattern ( ($generated@@56 $generated@@183 ($generated@@55 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ) (!  (and (= ($generated@@115 ($generated@@116 $generated@@185)) $generated@@185) (or (and (<= 0 ($generated@@116 $generated@@185)) (< ($generated@@116 $generated@@185) 55296)) (and (<= 57344 ($generated@@116 $generated@@185)) (< ($generated@@116 $generated@@185) 1114112))))
 :pattern ( ($generated@@116 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@186 $generated@@188) ($generated@@42 $generated@@35 $generated@@187 $generated@@43)) ($generated@@26 $generated@@35 $generated@@187 $generated@@43 $generated@@188))
 :pattern ( ($generated@@26 $generated@@35 $generated@@187 $generated@@43 $generated@@188))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@3))
(assert (= ($generated@@189 $generated@@27) $generated@@7))
(assert (= ($generated@@25 $generated@@43) $generated@@4))
(assert (= ($generated@@189 $generated@@43) $generated@@8))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@190 T@U) ) (!  (=> (or ($generated@@87 ($generated@@50 $generated@@35 $generated@@190)) (and (< 0 $generated@@39) ($generated@@42 $generated@@35 $generated@@190 $generated@@43))) (= ($generated@@44 ($generated@@50 $generated@@35 $generated@@190)) ($generated@@14 ($generated@@50 $generated@@10 ($generated@@13 ($generated@@63 ($generated@@50 $generated@@35 $generated@@190)))))))
 :weight 3
 :pattern ( ($generated@@44 ($generated@@50 $generated@@35 $generated@@190)))
))))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@42 $generated@@35 ($generated@@31 $generated@@191) $generated@@43) ($generated@@42 $generated@@53 $generated@@191 ($generated@@55 $generated)))
 :pattern ( ($generated@@42 $generated@@35 ($generated@@31 $generated@@191) $generated@@43))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@186 $generated@@193) (and ($generated@@63 $generated@@192) ($generated@@26 $generated@@35 $generated@@192 $generated@@43 $generated@@193))) ($generated@@26 $generated@@53 ($generated@@111 $generated@@192) ($generated@@55 $generated) $generated@@193))
 :pattern ( ($generated@@26 $generated@@53 ($generated@@111 $generated@@192) ($generated@@55 $generated) $generated@@193))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@194 T@U) ) (!  (=> (or ($generated@@90 ($generated@@50 $generated@@35 $generated@@194)) (and (< 1 $generated@@39) (and ($generated@@42 $generated@@35 $generated@@194 $generated@@43) ($generated@@14 ($generated@@50 $generated@@10 ($generated@@13 ($generated@@44 ($generated@@50 $generated@@35 $generated@@194)))))))) (= ($generated@@89 ($generated@@50 $generated@@35 $generated@@194)) ($generated@@50 $generated@@35 $generated@@194)))
 :weight 3
 :pattern ( ($generated@@89 ($generated@@50 $generated@@35 $generated@@194)))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@186 $generated@@196) (and ($generated@@60 $generated@@195) ($generated@@26 $generated@@35 $generated@@195 $generated@@43 $generated@@196))) ($generated@@26 $generated@@11 ($generated@@15 ($generated@@45 $generated@@195)) $generated@@27 $generated@@196))
 :pattern ( ($generated@@26 $generated@@11 ($generated@@15 ($generated@@45 $generated@@195)) $generated@@27 $generated@@196))
)))
(assert (forall (($generated@@197 Int) ) (! (= ($generated@@65 $generated@@11 ($generated@@15 ($generated@@47 $generated@@197))) ($generated@@50 $generated@@125 ($generated@@65 $generated@@11 ($generated@@15 $generated@@197))))
 :pattern ( ($generated@@65 $generated@@11 ($generated@@15 ($generated@@47 $generated@@197))))
)))
(assert (forall (($generated@@198 Int) ) (! (= ($generated@@68 ($generated@@47 $generated@@198)) ($generated@@50 $generated@@35 ($generated@@68 $generated@@198)))
 :pattern ( ($generated@@68 ($generated@@47 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ) (! (= ($generated@@31 ($generated@@50 $generated@@53 $generated@@199)) ($generated@@50 $generated@@35 ($generated@@31 $generated@@199)))
 :pattern ( ($generated@@31 ($generated@@50 $generated@@53 $generated@@199)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@T) ) (! (= ($generated@@65 $generated@@201 ($generated@@50 $generated@@201 $generated@@200)) ($generated@@50 $generated@@125 ($generated@@65 $generated@@201 $generated@@200)))
 :pattern ( ($generated@@65 $generated@@201 ($generated@@50 $generated@@201 $generated@@200)))
)))
(assert (forall (($generated@@202 T@U) ) (!  (=> (= ($generated@@32 $generated@@202) 0) (= $generated@@202 $generated@@38))
 :pattern ( ($generated@@32 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! ($generated@@26 $generated@@93 $generated@@204 $generated $generated@@203)
 :pattern ( ($generated@@26 $generated@@93 $generated@@204 $generated $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@42 $generated@@53 $generated@@205 ($generated@@55 $generated@@206)) (forall (($generated@@207 Int) ) (!  (=> (and (<= 0 $generated@@207) (< $generated@@207 ($generated@@32 $generated@@205))) ($generated@@56 ($generated@@30 $generated@@205 $generated@@207) $generated@@206))
 :pattern ( ($generated@@30 $generated@@205 $generated@@207))
)))
 :pattern ( ($generated@@42 $generated@@53 $generated@@205 ($generated@@55 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 Int) ) (!  (=> (and (<= 0 $generated@@209) (< $generated@@209 ($generated@@32 $generated@@208))) (< ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@208 $generated@@209))) ($generated@@118 $generated@@208)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 ($generated@@30 $generated@@208 $generated@@209))))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@42 $generated@@93 $generated@@210 $generated)
 :pattern ( ($generated@@42 $generated@@93 $generated@@210 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 (T@U) Bool)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 (T@U) Bool)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@223  (=> (= $generated@@211 ($generated@@123 $generated@@212 $generated@@213 $generated@@2 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@42 $generated@@11 ($generated@@15 ($generated@@47 55)) $generated@@27)) (=> ($generated@@42 $generated@@11 ($generated@@15 ($generated@@47 55)) $generated@@27) (=> (and (and (= $generated@@214 ($generated@@50 $generated@@35 ($generated@@68 ($generated@@47 55)))) ($generated@@76 ($generated@@65 $generated@@35 $generated@@214) $generated@@43 $generated@@213)) (and ($generated@@87 $generated@@214) ($generated@@87 $generated@@214))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not ($generated@@44 $generated@@214))) (=> (not ($generated@@44 $generated@@214)) (=> ($generated@@76 ($generated@@65 $generated@@35 $generated@@214) $generated@@43 $generated@@213) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not ($generated@@44 $generated@@214))) (=> (not ($generated@@44 $generated@@214)) (=> (and (and (and (and ($generated@@41 $generated@@214) ($generated@@41 $generated@@214)) (and (= $generated@@215 ($generated@@40 $generated@@214)) ($generated@@76 ($generated@@65 $generated@@35 $generated@@214) $generated@@43 $generated@@213))) (and (and ($generated@@87 $generated@@214) ($generated@@87 $generated@@214)) (and ($generated@@76 ($generated@@65 $generated@@35 $generated@@214) $generated@@43 $generated@@213) ($generated@@216 $generated@@214)))) (and (and (and ($generated@@216 $generated@@214) ($generated@@76 ($generated@@65 $generated@@35 $generated@@214) $generated@@43 $generated@@213)) (and ($generated@@217 $generated@@214) ($generated@@217 $generated@@214))) (and (and (= $generated@@218 ($generated@@50 $generated@@35 ($generated@@31 ($generated@@50 $generated@@53 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 ($generated@@54 $generated@@38 ($generated@@65 $generated@@93 ($generated@@115 105))) ($generated@@65 $generated@@93 ($generated@@115 116))) ($generated@@65 $generated@@93 ($generated@@115 32))) ($generated@@65 $generated@@93 ($generated@@115 99))) ($generated@@65 $generated@@93 ($generated@@115 111))) ($generated@@65 $generated@@93 ($generated@@115 117))) ($generated@@65 $generated@@93 ($generated@@115 108))) ($generated@@65 $generated@@93 ($generated@@115 100))) ($generated@@65 $generated@@93 ($generated@@115 32))) ($generated@@65 $generated@@93 ($generated@@115 98))) ($generated@@65 $generated@@93 ($generated@@115 101))) ($generated@@65 $generated@@93 ($generated@@115 32))) ($generated@@65 $generated@@93 ($generated@@115 119))) ($generated@@65 $generated@@93 ($generated@@115 111))) ($generated@@65 $generated@@93 ($generated@@115 114))) ($generated@@65 $generated@@93 ($generated@@115 115))) ($generated@@65 $generated@@93 ($generated@@115 101))))))) ($generated@@76 ($generated@@65 $generated@@35 $generated@@218) $generated@@43 $generated@@213)) (and ($generated@@87 $generated@@218) ($generated@@87 $generated@@218))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@87 $generated@@218) (or ($generated@@44 $generated@@218) ($generated@@63 $generated@@218)))) (=> ($generated@@44 $generated@@218) (=> (and (and ($generated@@76 ($generated@@65 $generated@@35 $generated@@218) $generated@@43 $generated@@213) (= (ControlFlow 0 2) (- 0 1))) ($generated@@87 $generated@@218)) (or ($generated@@44 $generated@@218) ($generated@@63 $generated@@218)))))))))))))))))
(let (($generated@@224  (=> (and ($generated@@186 $generated@@213) ($generated@@219 $generated@@213)) (=> (and (and (and (and ($generated@@42 $generated@@35 $generated@@220 $generated@@43) ($generated@@26 $generated@@35 $generated@@220 $generated@@43 $generated@@213)) true) (and (<= ($generated@@47 0) $generated@@221) true)) (and (and (and ($generated@@42 $generated@@35 $generated@@222 $generated@@43) ($generated@@26 $generated@@35 $generated@@222 $generated@@43 $generated@@213)) true) (and (= 2 $generated@@39) (= (ControlFlow 0 7) 2)))) $generated@@223))))
$generated@@224)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
