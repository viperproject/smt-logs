(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (Int) Int)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (Int) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) Bool)
(declare-fun $generated@@129 (T@U) Int)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@3) 0))
(assert (= ($generated@@27 $generated) $generated@@1))
(assert (= ($generated@@27 $generated@@0) $generated@@2))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@30)) (not true)) (= ($generated@@31 $generated@@34) ($generated@@29 $generated@@33))) ($generated@@32 $generated@@12 ($generated@@16 ($generated@@28 $generated@@34)) $generated))
 :pattern ( ($generated@@28 $generated@@34) ($generated@@29 $generated@@33))
)))
(assert (= ($generated@@10 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@35 $generated@@36 $generated@@39 ($generated@@29 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@29 $generated@@38) $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@42 $generated@@41)  (or (= $generated@@42 $generated@@30) (= ($generated@@31 $generated@@42) $generated@@41)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@44 $generated@@43 $generated@@45) ($generated@@35 $generated@@36 $generated@@44 $generated@@41 $generated@@45))
 :pattern ( ($generated@@35 $generated@@36 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@35 $generated@@36 $generated@@44 $generated@@41 $generated@@45))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@47 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@47 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@10 $generated@@48) 4)) (= ($generated@@10 $generated@@49) 5)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@10 ($generated@@50 $generated@@65 $generated@@66)) 6))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@72 ($generated@@29 $generated@@71) $generated@@73)  (or (= $generated@@72 $generated@@30) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@73 $generated@@72) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@72 ($generated@@29 $generated@@71) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@74 $generated@@41 $generated@@75)  (or (= $generated@@74 $generated@@30) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@75 $generated@@74) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@74 $generated@@41 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@15 ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@77 $generated@@79) $generated@@3))) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@78 $generated@@79) $generated@@3))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@78 $generated@@79) $generated@@3))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@80 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (and (and (and ($generated@@86 $generated@@89) (and (or (not (= $generated@@90 $generated@@30)) (not true)) (= ($generated@@31 $generated@@90) ($generated@@29 $generated@@88)))) (and (<= 0 $generated@@91) (< $generated@@91 ($generated@@28 $generated@@90)))) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@89 $generated@@90) $generated@@3)))) ($generated@@87 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@89 $generated@@90) ($generated@@85 $generated@@91)) $generated@@88 $generated@@89))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@89 $generated@@90) ($generated@@85 $generated@@91)) ($generated@@29 $generated@@88))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@46 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@46 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@96 ($generated@@37 $generated@@95))  (and ($generated@@32 $generated@@36 $generated@@96 ($generated@@29 $generated@@95)) (or (not (= $generated@@96 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@96 ($generated@@37 $generated@@95)))
 :pattern ( ($generated@@32 $generated@@36 $generated@@96 ($generated@@29 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@87 ($generated@@92 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@35 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@87 ($generated@@92 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@76 $generated@@101 $generated@@102) (=> ($generated@@87 $generated@@103 $generated@@104 $generated@@101) ($generated@@87 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@76 $generated@@101 $generated@@102) ($generated@@87 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (!  (=> ($generated@@76 $generated@@105 $generated@@106) (=> ($generated@@35 $generated@@109 $generated@@107 $generated@@108 $generated@@105) ($generated@@35 $generated@@109 $generated@@107 $generated@@108 $generated@@106)))
 :pattern ( ($generated@@76 $generated@@105 $generated@@106) ($generated@@35 $generated@@109 $generated@@107 $generated@@108 $generated@@105))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@27 ($generated@@29 $generated@@111)) $generated@@4) (= ($generated@@110 ($generated@@29 $generated@@111)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@27 ($generated@@37 $generated@@112)) $generated@@5) (= ($generated@@110 ($generated@@37 $generated@@112)) $generated@@8))
 :pattern ( ($generated@@37 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@113 $generated@@114 $generated@@43) (and (= ($generated@@92 $generated@@36 ($generated@@46 $generated@@36 $generated@@114)) $generated@@114) ($generated@@32 $generated@@36 ($generated@@46 $generated@@36 $generated@@114) $generated@@43)))
 :pattern ( ($generated@@113 $generated@@114 $generated@@43))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@113 $generated@@115 $generated@@41) (and (= ($generated@@92 $generated@@36 ($generated@@46 $generated@@36 $generated@@115)) $generated@@115) ($generated@@32 $generated@@36 ($generated@@46 $generated@@36 $generated@@115) $generated@@41)))
 :pattern ( ($generated@@113 $generated@@115 $generated@@41))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@117 ($generated@@29 $generated@@116))  (or (= $generated@@117 $generated@@30) (= ($generated@@31 $generated@@117) ($generated@@29 $generated@@116))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@117 ($generated@@29 $generated@@116)))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@118 $generated@@43)  (and ($generated@@32 $generated@@36 $generated@@118 $generated@@41) (or (not (= $generated@@118 $generated@@30)) (not true))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@118 $generated@@43))
 :pattern ( ($generated@@32 $generated@@36 $generated@@118 $generated@@41))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or (not (= $generated@@119 $generated@@121)) (not true)) (=> (and ($generated@@76 $generated@@119 $generated@@120) ($generated@@76 $generated@@120 $generated@@121)) ($generated@@76 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@76 $generated@@119 $generated@@120) ($generated@@76 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@113 $generated@@122 $generated) (and (= ($generated@@92 $generated@@12 ($generated@@46 $generated@@12 $generated@@122)) $generated@@122) ($generated@@32 $generated@@12 ($generated@@46 $generated@@12 $generated@@122) $generated)))
 :pattern ( ($generated@@113 $generated@@122 $generated))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@113 $generated@@123 $generated@@0) (and (= ($generated@@92 $generated@@13 ($generated@@46 $generated@@13 $generated@@123)) $generated@@123) ($generated@@32 $generated@@13 ($generated@@46 $generated@@13 $generated@@123) $generated@@0)))
 :pattern ( ($generated@@113 $generated@@123 $generated@@0))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@113 ($generated@@92 $generated@@126 $generated@@124) $generated@@125) ($generated@@32 $generated@@126 $generated@@124 $generated@@125))
 :pattern ( ($generated@@113 ($generated@@92 $generated@@126 $generated@@124) $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (<= 0 ($generated@@28 $generated@@127))
 :pattern ( ($generated@@28 $generated@@127))
)))
(assert (forall (($generated@@128 Int) ) (! (= ($generated@@26 ($generated@@85 $generated@@128)) 1)
 :pattern ( ($generated@@85 $generated@@128))
)))
(assert (forall (($generated@@130 Int) ) (! (= ($generated@@129 ($generated@@85 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@85 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@29 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@29 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@37 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@37 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@46 $generated@@136 ($generated@@92 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@92 $generated@@136 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and ($generated@@86 $generated@@138) (and (or (not (= $generated@@139 $generated@@30)) (not true)) (= ($generated@@31 $generated@@139) ($generated@@29 $generated@@137)))) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@138 $generated@@139) $generated@@3)))) ($generated@@35 $generated@@12 ($generated@@16 ($generated@@28 $generated@@139)) $generated $generated@@138))
 :pattern ( ($generated@@28 $generated@@139) ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@138 $generated@@139) $generated@@3)) ($generated@@29 $generated@@137))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Int) ) (!  (=> (and (and ($generated@@86 $generated@@141) (and (or (not (= $generated@@142 $generated@@30)) (not true)) (= ($generated@@31 $generated@@142) ($generated@@29 $generated@@140)))) (and (<= 0 $generated@@143) (< $generated@@143 ($generated@@28 $generated@@142)))) ($generated@@113 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@141 $generated@@142) ($generated@@85 $generated@@143)) $generated@@140))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@141 $generated@@142) ($generated@@85 $generated@@143)) ($generated@@29 $generated@@140))
)))
(assert  (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@144 $generated@@147 $generated@@148 $generated@@149 ($generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@144 $generated@@154 $generated@@155 $generated@@156 ($generated@@146 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@144 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@144 $generated@@163 $generated@@164 $generated@@165 ($generated@@146 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@144 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@15 ($generated@@144 $generated@@36 $generated@@48 $generated@@11 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@144 $generated@@36 $generated@@48 $generated@@11 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@113 $generated@@179 ($generated@@29 $generated@@178)) (and (= ($generated@@92 $generated@@36 ($generated@@46 $generated@@36 $generated@@179)) $generated@@179) ($generated@@32 $generated@@36 ($generated@@46 $generated@@36 $generated@@179) ($generated@@29 $generated@@178))))
 :pattern ( ($generated@@113 $generated@@179 ($generated@@29 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@113 $generated@@181 ($generated@@37 $generated@@180)) (and (= ($generated@@92 $generated@@36 ($generated@@46 $generated@@36 $generated@@181)) $generated@@181) ($generated@@32 $generated@@36 ($generated@@46 $generated@@36 $generated@@181) ($generated@@37 $generated@@180))))
 :pattern ( ($generated@@113 $generated@@181 ($generated@@37 $generated@@180)))
)))
(assert (= ($generated@@27 $generated@@43) $generated@@6))
(assert (= ($generated@@110 $generated@@43) $generated@@9))
(assert (= ($generated@@27 $generated@@41) $generated@@7))
(assert (= ($generated@@110 $generated@@41) $generated@@9))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@92 $generated@@12 ($generated@@16 ($generated@@80 $generated@@182))) ($generated@@82 $generated@@49 ($generated@@92 $generated@@12 ($generated@@16 $generated@@182))))
 :pattern ( ($generated@@92 $generated@@12 ($generated@@16 ($generated@@80 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@92 $generated@@184 ($generated@@82 $generated@@184 $generated@@183)) ($generated@@82 $generated@@49 ($generated@@92 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@92 $generated@@184 ($generated@@82 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@35 $generated@@12 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@35 $generated@@12 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! ($generated@@35 $generated@@13 $generated@@188 $generated@@0 $generated@@187)
 :pattern ( ($generated@@35 $generated@@13 $generated@@188 $generated@@0 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! ($generated@@32 $generated@@12 $generated@@189 $generated)
 :pattern ( ($generated@@32 $generated@@12 $generated@@189 $generated))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@32 $generated@@13 $generated@@190 $generated@@0)
 :pattern ( ($generated@@32 $generated@@13 $generated@@190 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@199  (=> (= $generated@@191 ($generated@@145 $generated@@30 $generated@@192 $generated@@3 false)) (and (=> (= (ControlFlow 0 2) (- 0 18)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (=> (< $generated@@194 ($generated@@28 $generated@@193)) (=> (and (and ($generated@@86 $generated@@195) ($generated@@196 $generated@@195)) (and (forall (($generated@@200 T@U) ) (!  (=> (and (or (not (= $generated@@200 $generated@@30)) (not true)) ($generated@@15 ($generated@@46 $generated@@11 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@192 $generated@@200) $generated@@3)))) (= ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@195 $generated@@200) ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@192 $generated@@200)))
 :pattern ( ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@195 $generated@@200))
)) ($generated@@76 $generated@@192 $generated@@195))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 16)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 15)) ($generated@@35 $generated@@36 $generated@@193 ($generated@@37 $generated@@0) $generated@@192)) (=> ($generated@@35 $generated@@36 $generated@@193 ($generated@@37 $generated@@0) $generated@@192) (=> (= ($generated@@28 $generated@@193) ($generated@@28 $generated@@193)) (and (=> (= (ControlFlow 0 2) (- 0 14)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 13)) (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193)))) (=> (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@35 $generated@@36 $generated@@193 ($generated@@29 $generated@@0) $generated@@192)) (=> ($generated@@35 $generated@@36 $generated@@193 ($generated@@29 $generated@@0) $generated@@192) (and (=> (= (ControlFlow 0 2) (- 0 10)) (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193)))) (=> (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193))) (=> (= ($generated@@19 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@195 $generated@@193) ($generated@@85 $generated@@194)))) ($generated@@19 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@192 $generated@@193) ($generated@@85 $generated@@194))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193)))) (=> (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193)))) (=> (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193))) (=> (= ($generated@@19 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@195 $generated@@193) ($generated@@85 $generated@@194)))) ($generated@@19 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@36 ($generated@@50 $generated@@48 $generated@@49) $generated@@195 $generated@@193) ($generated@@85 $generated@@194))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193)))) (=> (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@193 $generated@@30)) (not true))) (=> (or (not (= $generated@@193 $generated@@30)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@28 $generated@@193))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@201  (=> (and ($generated@@86 $generated@@192) ($generated@@196 $generated@@192)) (=> (and (and (and (or (not (= $generated@@197 $generated@@30)) (not true)) (and ($generated@@32 $generated@@36 $generated@@197 $generated@@43) ($generated@@35 $generated@@36 $generated@@197 $generated@@43 $generated@@192))) (<= ($generated@@80 0) $generated@@194)) (and (and ($generated@@32 $generated@@36 $generated@@193 ($generated@@37 $generated@@0)) ($generated@@35 $generated@@36 $generated@@193 ($generated@@37 $generated@@0) $generated@@192)) (and (= 0 $generated@@198) (= (ControlFlow 0 19) 2)))) $generated@@199))))
$generated@@201)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
