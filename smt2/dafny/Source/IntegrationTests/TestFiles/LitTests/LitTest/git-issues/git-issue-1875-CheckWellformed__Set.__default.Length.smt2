(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@45 (T@U T@U T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@57 (T@T T@U T@U) Bool)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@120 (T@U) Int)
(declare-fun $generated@@121 (T@U) Int)
(declare-fun $generated@@124 (T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U) Bool)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@T T@T) T@T)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@T) T@T)
(declare-fun $generated@@141 (T@T) T@T)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert  (and (= ($generated@@9 $generated@@27) 3) (= ($generated@@9 $generated@@32) 4)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@30 $generated@@37) (= ($generated@@26 $generated@@27 ($generated@@28 $generated@@35 $generated@@36) ($generated@@29 $generated@@34) $generated@@37)  (and ($generated@@31 $generated@@35 $generated@@34 $generated@@37) ($generated@@26 $generated@@32 $generated@@36 ($generated@@33 ($generated@@29 $generated@@34)) $generated@@37))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@28 $generated@@35 $generated@@36) ($generated@@29 $generated@@34) $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@26 $generated@@32 $generated@@40 ($generated@@33 $generated@@39) $generated@@41) ($generated@@26 $generated@@32 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
 :pattern ( ($generated@@26 $generated@@32 $generated@@40 ($generated@@33 $generated@@39) $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ) (!  (not ($generated@@42 $generated@@43 $generated@@44))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@45 $generated@@47 ($generated@@46 $generated@@48) $generated@@49) ($generated@@45 $generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@45 $generated@@47 ($generated@@46 $generated@@48) $generated@@49))
)))
(assert (= ($generated@@50 $generated@@51) $generated@@5))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@30 $generated@@53) ($generated@@26 $generated@@27 $generated@@51 ($generated@@29 $generated@@52) $generated@@53))
 :pattern ( ($generated@@26 $generated@@27 $generated@@51 ($generated@@29 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (and (= (= ($generated@@54 $generated@@55) 0) (= $generated@@55 $generated@@43)) (=> (or (not (= ($generated@@54 $generated@@55) 0)) (not true)) (exists (($generated@@56 T@U) ) (! ($generated@@42 $generated@@55 $generated@@56)
 :pattern ( ($generated@@42 $generated@@55 $generated@@56))
))))
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ) (! ($generated@@57 $generated@@27 $generated@@51 ($generated@@29 $generated@@58))
 :pattern ( ($generated@@57 $generated@@27 $generated@@51 ($generated@@29 $generated@@58)))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@59 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@64 $generated@@65) (= ($generated@@50 $generated@@65) $generated@@5))
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@50 $generated@@67) $generated@@6))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@66 $generated@@72) (exists (($generated@@73 T@U) ($generated@@74 T@U) ) (= $generated@@72 ($generated@@28 $generated@@73 $generated@@74))))
 :pattern ( ($generated@@66 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@64 $generated@@75) (= $generated@@75 $generated@@51))
 :pattern ( ($generated@@64 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@57 $generated@@32 $generated@@77 ($generated@@38 $generated@@78)) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@42 $generated@@77 $generated@@79) ($generated@@76 $generated@@79 $generated@@78))
 :pattern ( ($generated@@42 $generated@@77 $generated@@79))
)))
 :pattern ( ($generated@@57 $generated@@32 $generated@@77 ($generated@@38 $generated@@78)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@57 $generated@@27 ($generated@@28 $generated@@81 $generated@@82) ($generated@@29 $generated@@80))  (and ($generated@@76 $generated@@81 $generated@@80) ($generated@@57 $generated@@32 $generated@@82 ($generated@@33 ($generated@@29 $generated@@80)))))
 :pattern ( ($generated@@57 $generated@@27 ($generated@@28 $generated@@81 $generated@@82) ($generated@@29 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@31 ($generated@@69 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@26 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@31 ($generated@@69 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@88)) $generated@@3) (= ($generated@@87 ($generated@@29 $generated@@88)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (!  (and (= ($generated@@25 ($generated@@33 $generated@@89)) $generated@@4) (= ($generated@@87 ($generated@@33 $generated@@89)) $generated@@8))
 :pattern ( ($generated@@33 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@57 $generated@@32 $generated@@91 ($generated@@33 $generated@@90))  (and ($generated@@57 $generated@@32 $generated@@91 ($generated@@38 $generated@@90)) (= ($generated@@54 $generated@@91) ($generated@@59 1))))
 :pattern ( ($generated@@57 $generated@@32 $generated@@91 ($generated@@33 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@57 $generated@@27 $generated@@93 ($generated@@29 $generated@@92)) (or ($generated@@64 $generated@@93) ($generated@@66 $generated@@93)))
 :pattern ( ($generated@@66 $generated@@93) ($generated@@57 $generated@@27 $generated@@93 ($generated@@29 $generated@@92)))
 :pattern ( ($generated@@64 $generated@@93) ($generated@@57 $generated@@27 $generated@@93 ($generated@@29 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@76 $generated@@94 $generated) (and (= ($generated@@69 $generated@@11 ($generated@@68 $generated@@11 $generated@@94)) $generated@@94) ($generated@@57 $generated@@11 ($generated@@68 $generated@@11 $generated@@94) $generated)))
 :pattern ( ($generated@@76 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@76 ($generated@@69 $generated@@97 $generated@@95) $generated@@96) ($generated@@57 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@76 ($generated@@69 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (! (<= 0 ($generated@@54 $generated@@98))
 :pattern ( ($generated@@54 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@26 $generated@@32 $generated@@99 ($generated@@38 $generated@@100) $generated@@101) (forall (($generated@@102 T@U) ) (!  (=> ($generated@@42 $generated@@99 $generated@@102) ($generated@@31 $generated@@102 $generated@@100 $generated@@101))
 :pattern ( ($generated@@42 $generated@@99 $generated@@102))
)))
 :pattern ( ($generated@@26 $generated@@32 $generated@@99 ($generated@@38 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@50 ($generated@@28 $generated@@103 $generated@@104)) $generated@@6)
 :pattern ( ($generated@@28 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@28 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@28 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@28 $generated@@109 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@28 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@38 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@38 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@25 ($generated@@38 $generated@@113)) $generated@@1)
 :pattern ( ($generated@@38 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@29 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@29 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@33 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@33 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@68 $generated@@119 ($generated@@69 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@69 $generated@@119 $generated@@118))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (< ($generated@@120 $generated@@122) ($generated@@121 ($generated@@28 $generated@@122 $generated@@123)))
 :pattern ( ($generated@@28 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@125 $generated@@126 $generated@@127) (and ($generated@@57 $generated@@27 ($generated@@124 $generated@@126 $generated@@127) ($generated@@29 $generated@@126)) ($generated@@42 $generated@@127 ($generated@@69 $generated@@27 ($generated@@124 $generated@@126 $generated@@127)))))
 :pattern ( ($generated@@124 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@30 $generated@@130) (and ($generated@@66 $generated@@128) ($generated@@26 $generated@@27 $generated@@128 ($generated@@29 $generated@@129) $generated@@130))) ($generated@@31 ($generated@@105 $generated@@128) $generated@@129 $generated@@130))
 :pattern ( ($generated@@31 ($generated@@105 $generated@@128) $generated@@129 $generated@@130))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@131 $generated@@142 $generated@@143 $generated@@144 ($generated@@138 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@131 $generated@@149 $generated@@150 $generated@@151 ($generated@@138 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@131 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@131 $generated@@158 $generated@@159 $generated@@160 ($generated@@138 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))) (= ($generated@@9 $generated@@132) 5)) (= ($generated@@9 $generated@@133) 6)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@135 $generated@@167 $generated@@168 ($generated@@139 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@169) $generated@@171) $generated@@169)
 :weight 0
))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@176 $generated@@177) (= ($generated@@135 $generated@@172 $generated@@173 ($generated@@139 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@177) ($generated@@135 $generated@@172 $generated@@173 $generated@@175 $generated@@177)))
 :weight 0
))) (= ($generated@@9 $generated@@136) 7)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (= ($generated@@9 ($generated@@137 $generated@@178 $generated@@179)) 8))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@140 ($generated@@137 $generated@@180 $generated@@181)) $generated@@180)
 :pattern ( ($generated@@137 $generated@@180 $generated@@181))
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (! (= ($generated@@141 ($generated@@137 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@137 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@14 ($generated@@131 $generated@@132 $generated@@133 $generated@@10 ($generated@@134 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@184)) (not true)) ($generated@@14 ($generated@@68 $generated@@10 ($generated@@135 $generated@@133 $generated@@136 ($generated@@135 $generated@@132 ($generated@@137 $generated@@133 $generated@@136) $generated@@185 $generated@@188) $generated@@186)))) $generated@@187))
 :pattern ( ($generated@@131 $generated@@132 $generated@@133 $generated@@10 ($generated@@134 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@120 ($generated@@69 $generated@@27 $generated@@190)) ($generated@@121 $generated@@190))
 :pattern ( ($generated@@120 ($generated@@69 $generated@@27 $generated@@190)))
)))
(assert  (=> (<= 3 $generated@@191) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@192 $generated@@193 $generated@@196) (and (< 3 $generated@@191) (and ($generated@@30 $generated@@195) ($generated@@57 $generated@@27 $generated@@196 ($generated@@29 $generated@@193))))) (and (=> (not ($generated@@64 $generated@@196)) (let (($generated@@197 ($generated@@108 $generated@@196)))
 (and ($generated@@125 $generated@@193 $generated@@197) ($generated@@192 $generated@@193 ($generated@@124 $generated@@193 $generated@@197))))) (= ($generated@@45 $generated@@193 ($generated@@46 $generated@@194) $generated@@196) (ite ($generated@@64 $generated@@196) 0 (let (($generated@@198 ($generated@@108 $generated@@196)))
(let (($generated@@199 ($generated@@124 $generated@@193 $generated@@198)))
($generated@@45 $generated@@193 $generated@@194 $generated@@199)))))))
 :pattern ( ($generated@@45 $generated@@193 ($generated@@46 $generated@@194) $generated@@196) ($generated@@30 $generated@@195))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@76 $generated@@200 ($generated@@38 $generated@@201)) (and (= ($generated@@69 $generated@@32 ($generated@@68 $generated@@32 $generated@@200)) $generated@@200) ($generated@@57 $generated@@32 ($generated@@68 $generated@@32 $generated@@200) ($generated@@38 $generated@@201))))
 :pattern ( ($generated@@76 $generated@@200 ($generated@@38 $generated@@201)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@76 $generated@@203 ($generated@@29 $generated@@202)) (and (= ($generated@@69 $generated@@27 ($generated@@68 $generated@@27 $generated@@203)) $generated@@203) ($generated@@57 $generated@@27 ($generated@@68 $generated@@27 $generated@@203) ($generated@@29 $generated@@202))))
 :pattern ( ($generated@@76 $generated@@203 ($generated@@29 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@76 $generated@@205 ($generated@@33 $generated@@204)) (and (= ($generated@@69 $generated@@32 ($generated@@68 $generated@@32 $generated@@205)) $generated@@205) ($generated@@57 $generated@@32 ($generated@@68 $generated@@32 $generated@@205) ($generated@@33 $generated@@204))))
 :pattern ( ($generated@@76 $generated@@205 ($generated@@33 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@42 $generated@@207 ($generated@@69 $generated@@27 $generated@@208)) (< ($generated@@121 $generated@@208) ($generated@@121 ($generated@@28 $generated@@206 $generated@@207))))
 :pattern ( ($generated@@42 $generated@@207 ($generated@@69 $generated@@27 $generated@@208)) ($generated@@28 $generated@@206 $generated@@207))
)))
(assert (= $generated@@51 ($generated@@61 $generated@@27 $generated@@51)))
(assert  (=> (<= 3 $generated@@191) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (or ($generated@@192 $generated@@209 ($generated@@61 $generated@@27 $generated@@212)) (and (< 3 $generated@@191) (and ($generated@@30 $generated@@211) ($generated@@57 $generated@@27 $generated@@212 ($generated@@29 $generated@@209))))) (and (=> (not ($generated@@14 ($generated@@61 $generated@@10 ($generated@@13 ($generated@@64 ($generated@@61 $generated@@27 $generated@@212)))))) (let (($generated@@213 ($generated@@61 $generated@@32 ($generated@@108 ($generated@@61 $generated@@27 $generated@@212)))))
 (and ($generated@@125 $generated@@209 $generated@@213) ($generated@@192 $generated@@209 ($generated@@124 $generated@@209 $generated@@213))))) (= ($generated@@45 $generated@@209 ($generated@@46 $generated@@210) ($generated@@61 $generated@@27 $generated@@212)) (ite ($generated@@64 ($generated@@61 $generated@@27 $generated@@212)) 0 (let (($generated@@214 ($generated@@61 $generated@@32 ($generated@@108 ($generated@@61 $generated@@27 $generated@@212)))))
(let (($generated@@215 ($generated@@124 $generated@@209 $generated@@214)))
($generated@@45 $generated@@209 ($generated@@46 $generated@@210) $generated@@215)))))))
 :weight 3
 :pattern ( ($generated@@45 $generated@@209 ($generated@@46 $generated@@210) ($generated@@61 $generated@@27 $generated@@212)) ($generated@@30 $generated@@211))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@28 ($generated@@61 $generated@@136 $generated@@216) ($generated@@61 $generated@@32 $generated@@217)) ($generated@@61 $generated@@27 ($generated@@28 $generated@@216 $generated@@217)))
 :pattern ( ($generated@@28 ($generated@@61 $generated@@136 $generated@@216) ($generated@@61 $generated@@32 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and ($generated@@30 $generated@@220) (and ($generated@@66 $generated@@218) ($generated@@26 $generated@@27 $generated@@218 ($generated@@29 $generated@@219) $generated@@220))) ($generated@@26 $generated@@32 ($generated@@108 $generated@@218) ($generated@@33 ($generated@@29 $generated@@219)) $generated@@220))
 :pattern ( ($generated@@26 $generated@@32 ($generated@@108 $generated@@218) ($generated@@33 ($generated@@29 $generated@@219)) $generated@@220))
)))
(assert (forall (($generated@@221 Int) ) (! (= ($generated@@69 $generated@@11 ($generated@@15 ($generated@@59 $generated@@221))) ($generated@@61 $generated@@136 ($generated@@69 $generated@@11 ($generated@@15 $generated@@221))))
 :pattern ( ($generated@@69 $generated@@11 ($generated@@15 ($generated@@59 $generated@@221))))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@T) ) (! (= ($generated@@69 $generated@@223 ($generated@@61 $generated@@223 $generated@@222)) ($generated@@61 $generated@@136 ($generated@@69 $generated@@223 $generated@@222)))
 :pattern ( ($generated@@69 $generated@@223 ($generated@@61 $generated@@223 $generated@@222)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! ($generated@@26 $generated@@11 $generated@@225 $generated $generated@@224)
 :pattern ( ($generated@@26 $generated@@11 $generated@@225 $generated $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ) (! ($generated@@57 $generated@@11 $generated@@226 $generated)
 :pattern ( ($generated@@57 $generated@@11 $generated@@226 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@240  (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (and ($generated@@57 $generated@@27 ($generated@@61 $generated@@27 $generated@@51) ($generated@@29 $generated@@227)) ($generated@@42 $generated@@228 ($generated@@69 $generated@@27 ($generated@@61 $generated@@27 $generated@@51)))) (exists (($generated@@241 T@U) )  (and ($generated@@57 $generated@@27 $generated@@241 ($generated@@29 $generated@@227)) ($generated@@42 $generated@@228 ($generated@@69 $generated@@27 $generated@@241)))))) (=> (or (and ($generated@@57 $generated@@27 ($generated@@61 $generated@@27 $generated@@51) ($generated@@29 $generated@@227)) ($generated@@42 $generated@@228 ($generated@@69 $generated@@27 ($generated@@61 $generated@@27 $generated@@51)))) (exists (($generated@@242 T@U) )  (and ($generated@@57 $generated@@27 $generated@@242 ($generated@@29 $generated@@227)) ($generated@@42 $generated@@228 ($generated@@69 $generated@@27 $generated@@242))))) (=> (and (and (and ($generated@@57 $generated@@27 $generated@@229 ($generated@@29 $generated@@227)) ($generated@@26 $generated@@27 $generated@@229 ($generated@@29 $generated@@227) $generated@@230)) ($generated@@42 $generated@@228 ($generated@@69 $generated@@27 $generated@@229))) (and ($generated@@26 $generated@@27 $generated@@229 ($generated@@29 $generated@@227) $generated@@230) (= (ControlFlow 0 5) (- 0 4)))) (< ($generated@@121 $generated@@229) ($generated@@121 $generated@@231)))))))
(let (($generated@@243  (=> (and (not (and ($generated@@57 $generated@@27 $generated@@229 ($generated@@29 $generated@@227)) ($generated@@26 $generated@@27 $generated@@229 ($generated@@29 $generated@@227) $generated@@230))) (= (ControlFlow 0 8) 5)) $generated@@240)))
(let (($generated@@244  (=> (and (and ($generated@@57 $generated@@27 $generated@@229 ($generated@@29 $generated@@227)) ($generated@@26 $generated@@27 $generated@@229 ($generated@@29 $generated@@227) $generated@@230)) (= (ControlFlow 0 7) 5)) $generated@@240)))
(let (($generated@@245  (=> (= $generated@@231 ($generated@@28 $generated@@232 $generated@@233)) (=> (and (and (and ($generated@@76 $generated@@232 $generated@@227) ($generated@@57 $generated@@32 $generated@@233 ($generated@@33 ($generated@@29 $generated@@227)))) (and (= $generated@@234 $generated@@233) ($generated@@57 $generated@@32 $generated@@234 ($generated@@33 ($generated@@29 $generated@@227))))) (and (and (= $generated@@228 $generated@@234) (= $generated@@235 $generated@@232)) (and ($generated@@76 $generated@@235 $generated@@227) (= $generated@@236 $generated@@235)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@244) (=> (= (ControlFlow 0 9) 8) $generated@@243))))))
(let (($generated@@246 true))
(let (($generated@@247  (=> (or (not (= $generated@@231 $generated@@51)) (not true)) (and (=> (= (ControlFlow 0 10) 9) $generated@@245) (=> (= (ControlFlow 0 10) 3) $generated@@246)))))
(let (($generated@@248 true))
(let (($generated@@249 true))
(let (($generated@@250  (=> (= $generated@@237 ($generated@@134 $generated@@238 $generated@@230 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@249) (=> (= (ControlFlow 0 11) 2) $generated@@248)) (=> (= (ControlFlow 0 11) 10) $generated@@247)))))
(let (($generated@@251  (=> (and (and (and ($generated@@30 $generated@@230) ($generated@@239 $generated@@230)) ($generated@@57 $generated@@27 $generated@@231 ($generated@@29 $generated@@227))) (and (= 3 $generated@@191) (= (ControlFlow 0 12) 11))) $generated@@250)))
$generated@@251)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
