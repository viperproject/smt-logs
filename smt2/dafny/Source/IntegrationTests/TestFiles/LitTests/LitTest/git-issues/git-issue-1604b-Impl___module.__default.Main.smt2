(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U) Int)
(declare-fun $generated@@73 (Int Int) Int)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@76 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@97 (Int) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@115 (T@U) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@T) T@T)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@194 (Bool) T@U)
(declare-fun $generated@@195 () Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! ($generated@@28 ($generated@@27 $generated@@29 $generated@@30) $generated@@30)
 :pattern ( ($generated@@27 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@28 $generated@@31 $generated@@33) ($generated@@28 ($generated@@27 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@27 $generated@@31 $generated@@32) ($generated@@28 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@28 ($generated@@27 $generated@@34 $generated@@35) $generated@@36)  (or (= $generated@@36 $generated@@35) ($generated@@28 $generated@@34 $generated@@36)))
 :pattern ( ($generated@@28 ($generated@@27 $generated@@34 $generated@@35) $generated@@36))
)))
(assert  (and (= ($generated@@10 $generated@@41) 3) (= ($generated@@10 $generated@@46) 4)))
(assert  (=> (<= 4 $generated@@37) (forall (($generated@@49 T@U) ) (!  (=> (or ($generated@@39 $generated@@49) (and (< 4 $generated@@37) ($generated@@40 $generated@@41 $generated@@49 ($generated@@42 $generated@@43)))) (and (forall (($generated@@50 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@50 $generated@@43) (=> ($generated@@28 $generated@@49 ($generated@@45 $generated@@46 $generated@@50)) ($generated@@47 $generated@@50)))
 :pattern ( ($generated@@44 $generated@@50))
 :pattern ( ($generated@@28 $generated@@49 ($generated@@45 $generated@@46 $generated@@50)))
)) (= ($generated@@38 $generated@@49) (forall (($generated@@51 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@51 $generated@@43) (=> ($generated@@28 $generated@@49 ($generated@@45 $generated@@46 $generated@@51)) (= ($generated@@44 $generated@@51) ($generated@@48 1))))
 :pattern ( ($generated@@44 $generated@@51))
 :pattern ( ($generated@@28 $generated@@49 ($generated@@45 $generated@@46 $generated@@51)))
)))))
 :pattern ( ($generated@@38 $generated@@49))
))))
(assert (forall (($generated@@53 T@U) ) (!  (not ($generated@@28 $generated@@52 $generated@@53))
 :pattern ( ($generated@@28 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@54 $generated@@46 $generated@@57 $generated@@55 $generated@@58) ($generated@@54 $generated@@46 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@54 $generated@@46 $generated@@57 $generated@@55 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@54 $generated@@46 $generated@@59 $generated@@43 $generated@@60) ($generated@@54 $generated@@46 $generated@@59 $generated@@55 $generated@@60))
 :pattern ( ($generated@@54 $generated@@46 $generated@@59 $generated@@43 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@62 $generated@@56) ($generated@@61 $generated@@62))
 :pattern ( ($generated@@61 $generated@@62) ($generated@@40 $generated@@46 $generated@@62 $generated@@56))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@48 $generated@@63) $generated@@63)
 :pattern ( ($generated@@48 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@61 $generated@@68) (= ($generated@@67 $generated@@68) $generated@@5))
 :pattern ( ($generated@@61 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@45 $generated@@71 ($generated@@69 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@69 $generated@@71 $generated@@70))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@74 T@U) ) (!  (=> (or ($generated@@47 $generated@@74) (and (< 3 $generated@@37) ($generated@@40 $generated@@46 $generated@@74 $generated@@43))) (and ($generated@@61 $generated@@74) (= ($generated@@44 $generated@@74) (ite (<= ($generated@@72 $generated@@74) ($generated@@48 0)) ($generated@@73 1 ($generated@@48 0)) 1))))
 :pattern ( ($generated@@44 $generated@@74))
))))
(assert  (and (and (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@76 $generated@@79 $generated@@80 ($generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@83) $generated@@81)
 :weight 0
)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (or (= $generated@@88 $generated@@89) (= ($generated@@76 $generated@@84 $generated@@85 ($generated@@78 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@86) $generated@@89) ($generated@@76 $generated@@84 $generated@@85 $generated@@87 $generated@@89)))
 :weight 0
))) (= ($generated@@10 $generated@@77) 5)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@28 ($generated@@75 $generated@@90) $generated@@91) ($generated@@15 ($generated@@76 $generated@@77 $generated@@11 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@28 ($generated@@75 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@40 $generated@@41 $generated@@93 ($generated@@42 $generated@@94)) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@28 $generated@@93 $generated@@95) ($generated@@92 $generated@@95 $generated@@94))
 :pattern ( ($generated@@28 $generated@@93 $generated@@95))
)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@93 ($generated@@42 $generated@@94)))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@96 T@U) ) (!  (=> (or ($generated@@47 ($generated@@64 $generated@@46 $generated@@96)) (and (< 3 $generated@@37) ($generated@@40 $generated@@46 $generated@@96 $generated@@43))) (and ($generated@@61 ($generated@@64 $generated@@46 $generated@@96)) (= ($generated@@44 ($generated@@64 $generated@@46 $generated@@96)) (ite (<= ($generated@@48 ($generated@@72 ($generated@@64 $generated@@46 $generated@@96))) ($generated@@48 0)) ($generated@@73 1 ($generated@@48 0)) 1))))
 :weight 3
 :pattern ( ($generated@@44 ($generated@@64 $generated@@46 $generated@@96)))
))))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@61 $generated@@98) (exists (($generated@@99 Int) ) (= $generated@@98 ($generated@@97 $generated@@99))))
 :pattern ( ($generated@@61 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@100 ($generated@@45 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@54 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@100 ($generated@@45 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@92 $generated@@105 $generated@@43) (and (= ($generated@@45 $generated@@46 ($generated@@69 $generated@@46 $generated@@105)) $generated@@105) ($generated@@40 $generated@@46 ($generated@@69 $generated@@46 $generated@@105) $generated@@43)))
 :pattern ( ($generated@@92 $generated@@105 $generated@@43))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@92 $generated@@106 $generated@@56) (and (= ($generated@@45 $generated@@46 ($generated@@69 $generated@@46 $generated@@106)) $generated@@106) ($generated@@40 $generated@@46 ($generated@@69 $generated@@46 $generated@@106) $generated@@56)))
 :pattern ( ($generated@@92 $generated@@106 $generated@@56))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@92 $generated@@107 $generated@@55) (and (= ($generated@@45 $generated@@46 ($generated@@69 $generated@@46 $generated@@107)) $generated@@107) ($generated@@40 $generated@@46 ($generated@@69 $generated@@46 $generated@@107) $generated@@55)))
 :pattern ( ($generated@@92 $generated@@107 $generated@@55))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@15 ($generated@@76 $generated@@77 $generated@@11 ($generated@@108 $generated@@110 $generated@@111 $generated@@112) $generated@@113)) (exists (($generated@@114 T@U) ) (!  (and (and ($generated@@40 $generated@@46 $generated@@114 $generated@@110) (and ($generated@@28 $generated@@111 ($generated@@45 $generated@@46 $generated@@114)) ($generated@@109 $generated@@114))) (= $generated@@113 ($generated@@45 $generated@@46 $generated@@114)))
 :pattern ( ($generated@@109 $generated@@114))
 :pattern ( ($generated@@28 $generated@@112 ($generated@@45 $generated@@46 $generated@@114)))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@11 ($generated@@108 $generated@@110 $generated@@111 $generated@@112) $generated@@113))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@116 T@U) ) (!  (=> (or ($generated@@115 $generated@@116) (and (< 3 $generated@@37) ($generated@@40 $generated@@46 $generated@@116 $generated@@43))) (and (and ($generated@@61 $generated@@116) (=> (< ($generated@@48 0) ($generated@@72 $generated@@116)) ($generated@@61 $generated@@116))) (= ($generated@@109 $generated@@116) (> (ite (<= ($generated@@72 $generated@@116) ($generated@@48 0)) ($generated@@73 1 ($generated@@48 0)) ($generated@@72 $generated@@116)) 1))))
 :pattern ( ($generated@@109 $generated@@116))
))))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@40 $generated@@46 $generated@@117 $generated@@43)  (and ($generated@@40 $generated@@46 $generated@@117 $generated@@55) (or (not (= ($generated@@72 $generated@@117) 0)) (not true))))
 :pattern ( ($generated@@40 $generated@@46 $generated@@117 $generated@@43))
)))
(assert (forall (($generated@@118 Int) ($generated@@119 Int) ) (! (= ($generated@@73 $generated@@118 $generated@@119) (div $generated@@118 $generated@@119))
 :pattern ( ($generated@@73 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@40 $generated@@46 $generated@@120 $generated@@55)  (and ($generated@@40 $generated@@46 $generated@@120 $generated@@56) (>= ($generated@@72 $generated@@120) ($generated@@48 0))))
 :pattern ( ($generated@@40 $generated@@46 $generated@@120 $generated@@55))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@121 T@U) ) (!  (=> (or ($generated@@115 ($generated@@64 $generated@@46 $generated@@121)) (and (< 3 $generated@@37) ($generated@@40 $generated@@46 $generated@@121 $generated@@43))) (and (and ($generated@@61 ($generated@@64 $generated@@46 $generated@@121)) (=> (< ($generated@@48 0) ($generated@@48 ($generated@@72 ($generated@@64 $generated@@46 $generated@@121)))) ($generated@@61 ($generated@@64 $generated@@46 $generated@@121)))) (= ($generated@@109 ($generated@@64 $generated@@46 $generated@@121)) (> (ite (<= ($generated@@48 ($generated@@72 ($generated@@64 $generated@@46 $generated@@121))) ($generated@@48 0)) ($generated@@73 1 ($generated@@48 0)) ($generated@@72 ($generated@@64 $generated@@46 $generated@@121))) 1))))
 :weight 3
 :pattern ( ($generated@@109 ($generated@@64 $generated@@46 $generated@@121)))
))))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@92 $generated@@122 $generated) (and (= ($generated@@45 $generated@@12 ($generated@@69 $generated@@12 $generated@@122)) $generated@@122) ($generated@@40 $generated@@12 ($generated@@69 $generated@@12 $generated@@122) $generated)))
 :pattern ( ($generated@@92 $generated@@122 $generated))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@92 ($generated@@45 $generated@@125 $generated@@123) $generated@@124) ($generated@@40 $generated@@125 $generated@@123 $generated@@124))
 :pattern ( ($generated@@92 ($generated@@45 $generated@@125 $generated@@123) $generated@@124))
)))
(assert  (=> (<= 4 $generated@@37) (forall (($generated@@126 T@U) ) (!  (=> (or ($generated@@39 ($generated@@64 $generated@@41 $generated@@126)) (and (< 4 $generated@@37) ($generated@@40 $generated@@41 $generated@@126 ($generated@@42 $generated@@43)))) (and (forall (($generated@@127 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@127 $generated@@43) (=> ($generated@@28 ($generated@@64 $generated@@41 $generated@@126) ($generated@@45 $generated@@46 $generated@@127)) ($generated@@47 $generated@@127)))
 :pattern ( ($generated@@44 $generated@@127))
 :pattern ( ($generated@@28 $generated@@126 ($generated@@45 $generated@@46 $generated@@127)))
)) (= ($generated@@38 ($generated@@64 $generated@@41 $generated@@126)) (forall (($generated@@128 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@128 $generated@@43) (=> ($generated@@28 ($generated@@64 $generated@@41 $generated@@126) ($generated@@45 $generated@@46 $generated@@128)) (= ($generated@@44 $generated@@128) ($generated@@48 1))))
 :pattern ( ($generated@@44 $generated@@128))
 :pattern ( ($generated@@28 $generated@@126 ($generated@@45 $generated@@46 $generated@@128)))
)))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@64 $generated@@41 $generated@@126)))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@54 $generated@@41 $generated@@129 ($generated@@42 $generated@@130) $generated@@131) (forall (($generated@@132 T@U) ) (!  (=> ($generated@@28 $generated@@129 $generated@@132) ($generated@@100 $generated@@132 $generated@@130 $generated@@131))
 :pattern ( ($generated@@28 $generated@@129 $generated@@132))
)))
 :pattern ( ($generated@@54 $generated@@41 $generated@@129 ($generated@@42 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@42 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@42 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@26 ($generated@@42 $generated@@135)) $generated@@1)
 :pattern ( ($generated@@42 $generated@@135))
)))
(assert (forall (($generated@@136 Int) ) (! (= ($generated@@67 ($generated@@97 $generated@@136)) $generated@@5)
 :pattern ( ($generated@@97 $generated@@136))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@72 ($generated@@97 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@97 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@69 $generated@@139 ($generated@@45 $generated@@139 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@45 $generated@@139 $generated@@138))
)))
(assert (forall (($generated@@140 Int) ) (! (= ($generated@@40 $generated@@46 ($generated@@97 $generated@@140) $generated@@56) ($generated@@40 $generated@@12 ($generated@@16 $generated@@140) $generated))
 :pattern ( ($generated@@40 $generated@@46 ($generated@@97 $generated@@140) $generated@@56))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@141 $generated@@149 $generated@@150 $generated@@151 ($generated@@146 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@154 $generated@@155) $generated@@152)
 :weight 0
)) (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@141 $generated@@156 $generated@@157 $generated@@158 ($generated@@146 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@141 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@141 $generated@@165 $generated@@166 $generated@@167 ($generated@@146 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@141 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)))) (= ($generated@@10 $generated@@142) 6)) (= ($generated@@10 $generated@@143) 7)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@10 ($generated@@145 $generated@@174 $generated@@175)) 8))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@147 ($generated@@145 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@145 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@148 ($generated@@145 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@145 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@15 ($generated@@141 $generated@@142 $generated@@143 $generated@@11 ($generated@@144 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@15 ($generated@@69 $generated@@11 ($generated@@76 $generated@@143 $generated@@77 ($generated@@76 $generated@@142 ($generated@@145 $generated@@143 $generated@@77) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143 $generated@@11 ($generated@@144 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@186 $generated@@188) (and ($generated@@61 $generated@@187) ($generated@@54 $generated@@46 $generated@@187 $generated@@56 $generated@@188))) ($generated@@54 $generated@@12 ($generated@@16 ($generated@@72 $generated@@187)) $generated $generated@@188))
 :pattern ( ($generated@@54 $generated@@12 ($generated@@16 ($generated@@72 $generated@@187)) $generated $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@92 $generated@@189 ($generated@@42 $generated@@190)) (and (= ($generated@@45 $generated@@41 ($generated@@69 $generated@@41 $generated@@189)) $generated@@189) ($generated@@40 $generated@@41 ($generated@@69 $generated@@41 $generated@@189) ($generated@@42 $generated@@190))))
 :pattern ( ($generated@@92 $generated@@189 ($generated@@42 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and ($generated@@186 $generated@@192) ($generated@@40 $generated@@46 $generated@@191 $generated@@56)) ($generated@@54 $generated@@46 $generated@@191 $generated@@56 $generated@@192))
 :pattern ( ($generated@@54 $generated@@46 $generated@@191 $generated@@56 $generated@@192))
)))
(assert (= ($generated@@26 $generated@@43) $generated@@3))
(assert (= ($generated@@193 $generated@@43) $generated@@7))
(assert (= ($generated@@26 $generated@@56) $generated@@4))
(assert (= ($generated@@193 $generated@@56) $generated@@8))
(assert (= ($generated@@26 $generated@@55) $generated@@6))
(assert (= ($generated@@193 $generated@@55) $generated@@9))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@196 Bool) ) (!  (=> (or $generated@@195 (< 1 $generated@@37)) ($generated@@40 $generated@@41 ($generated@@194 $generated@@196) ($generated@@42 $generated@@56)))
 :pattern ( ($generated@@194 $generated@@196))
))))
(assert (forall (($generated@@197 Int) ) (! (= ($generated@@45 $generated@@12 ($generated@@16 ($generated@@48 $generated@@197))) ($generated@@64 $generated@@77 ($generated@@45 $generated@@12 ($generated@@16 $generated@@197))))
 :pattern ( ($generated@@45 $generated@@12 ($generated@@16 ($generated@@48 $generated@@197))))
)))
(assert (forall (($generated@@198 Int) ) (! (= ($generated@@97 ($generated@@48 $generated@@198)) ($generated@@64 $generated@@46 ($generated@@97 $generated@@198)))
 :pattern ( ($generated@@97 ($generated@@48 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@T) ) (! (= ($generated@@45 $generated@@200 ($generated@@64 $generated@@200 $generated@@199)) ($generated@@64 $generated@@77 ($generated@@45 $generated@@200 $generated@@199)))
 :pattern ( ($generated@@45 $generated@@200 ($generated@@64 $generated@@200 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! ($generated@@54 $generated@@12 $generated@@202 $generated $generated@@201)
 :pattern ( ($generated@@54 $generated@@12 $generated@@202 $generated $generated@@201))
)))
(assert  (=> (<= 1 $generated@@37) (=> (or $generated@@195 (< 1 $generated@@37)) (= ($generated@@194 true) ($generated@@64 $generated@@41 ($generated@@27 ($generated@@27 ($generated@@27 ($generated@@27 $generated@@52 ($generated@@45 $generated@@46 ($generated@@64 $generated@@46 ($generated@@97 ($generated@@48 (- 0 1)))))) ($generated@@45 $generated@@46 ($generated@@64 $generated@@46 ($generated@@97 ($generated@@48 0))))) ($generated@@45 $generated@@46 ($generated@@64 $generated@@46 ($generated@@97 ($generated@@48 1))))) ($generated@@45 $generated@@46 ($generated@@64 $generated@@46 ($generated@@97 ($generated@@48 2))))))))))
(assert  (=> (<= 1 $generated@@37) (=> (or $generated@@195 (< 1 $generated@@37)) (= ($generated@@194 true) ($generated@@64 $generated@@41 ($generated@@27 ($generated@@27 ($generated@@27 ($generated@@27 $generated@@52 ($generated@@45 $generated@@46 ($generated@@64 $generated@@46 ($generated@@97 ($generated@@48 (- 0 1)))))) ($generated@@45 $generated@@46 ($generated@@64 $generated@@46 ($generated@@97 ($generated@@48 0))))) ($generated@@45 $generated@@46 ($generated@@64 $generated@@46 ($generated@@97 ($generated@@48 1))))) ($generated@@45 $generated@@46 ($generated@@64 $generated@@46 ($generated@@97 ($generated@@48 2))))))))))
(assert (forall (($generated@@203 T@U) ) (! ($generated@@40 $generated@@12 $generated@@203 $generated)
 :pattern ( ($generated@@40 $generated@@12 $generated@@203 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@204 () Bool)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Bool)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@215 true))
(let (($generated@@216  (=> (and (not $generated@@204) (= (ControlFlow 0 3) 1)) $generated@@215)))
(let (($generated@@217  (=> (and $generated@@204 (= (ControlFlow 0 2) 1)) $generated@@215)))
(let (($generated@@218  (=> (and (=> $generated@@205 (and (forall (($generated@@219 T@U) ) (!  (=> ($generated@@40 $generated@@46 $generated@@219 $generated@@43) (=> ($generated@@28 $generated@@206 ($generated@@45 $generated@@46 $generated@@219)) ($generated@@115 $generated@@219)))
 :pattern ( ($generated@@109 $generated@@219))
 :pattern ( ($generated@@28 $generated@@206 ($generated@@45 $generated@@46 $generated@@219)))
)) ($generated@@39 ($generated@@75 ($generated@@108 $generated@@43 $generated@@206 $generated@@206))))) (= $generated@@204  (and $generated@@205 ($generated@@38 ($generated@@75 ($generated@@108 $generated@@43 $generated@@206 $generated@@206)))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) $generated@@204) (=> $generated@@204 (and (=> (= (ControlFlow 0 4) 2) $generated@@217) (=> (= (ControlFlow 0 4) 3) $generated@@216)))))))
(let (($generated@@220  (=> (and (and (= $generated@@207 ($generated@@75 ($generated@@108 $generated@@43 $generated@@206 $generated@@206))) ($generated@@54 $generated@@41 $generated@@207 ($generated@@42 $generated@@43) $generated@@208)) (and ($generated@@39 ($generated@@75 ($generated@@108 $generated@@43 $generated@@206 $generated@@206))) (= (ControlFlow 0 7) 4))) $generated@@218)))
(let (($generated@@221  (=> (and (not (and ($generated@@28 $generated@@206 ($generated@@45 $generated@@46 $generated@@209)) ($generated@@109 $generated@@209))) (= (ControlFlow 0 10) 7)) $generated@@220)))
(let (($generated@@222  (=> (and (and ($generated@@28 $generated@@206 ($generated@@45 $generated@@46 $generated@@209)) ($generated@@109 $generated@@209)) (= (ControlFlow 0 9) 7)) $generated@@220)))
(let (($generated@@223  (=> (not ($generated@@28 $generated@@206 ($generated@@45 $generated@@46 $generated@@209))) (and (=> (= (ControlFlow 0 12) 9) $generated@@222) (=> (= (ControlFlow 0 12) 10) $generated@@221)))))
(let (($generated@@224  (=> ($generated@@28 $generated@@206 ($generated@@45 $generated@@46 $generated@@209)) (=> (and ($generated@@54 $generated@@46 $generated@@209 $generated@@43 $generated@@208) ($generated@@115 $generated@@209)) (and (=> (= (ControlFlow 0 11) 9) $generated@@222) (=> (= (ControlFlow 0 11) 10) $generated@@221))))))
(let (($generated@@225  (=> (and ($generated@@40 $generated@@46 $generated@@209 $generated@@43) ($generated@@54 $generated@@46 $generated@@209 $generated@@43 $generated@@208)) (and (=> (= (ControlFlow 0 13) 11) $generated@@224) (=> (= (ControlFlow 0 13) 12) $generated@@223)))))
(let (($generated@@226  (=> (and (not (and ($generated@@40 $generated@@46 $generated@@209 $generated@@43) ($generated@@54 $generated@@46 $generated@@209 $generated@@43 $generated@@208))) (= (ControlFlow 0 8) 7)) $generated@@220)))
(let (($generated@@227  (=> $generated@@205 (and (=> (= (ControlFlow 0 14) 13) $generated@@225) (=> (= (ControlFlow 0 14) 8) $generated@@226)))))
(let (($generated@@228  (=> (and (not $generated@@205) (= (ControlFlow 0 6) 4)) $generated@@218)))
(let (($generated@@229  (=> (= $generated@@210 ($generated@@144 $generated@@211 $generated@@208 $generated@@2 false)) (=> (and (and $generated@@195 $generated@@195) (and (= $generated@@206 ($generated@@194 $generated@@212)) (= $generated@@205 ($generated@@15 ($generated@@64 $generated@@11 ($generated@@14 true)))))) (and (=> (= (ControlFlow 0 15) 14) $generated@@227) (=> (= (ControlFlow 0 15) 6) $generated@@228))))))
(let (($generated@@230  (=> (and ($generated@@186 $generated@@208) ($generated@@213 $generated@@208)) (=> (and (and (and ($generated@@40 $generated@@41 $generated@@214 ($generated@@42 $generated@@56)) ($generated@@54 $generated@@41 $generated@@214 ($generated@@42 $generated@@56) $generated@@208)) true) (and (= 5 $generated@@37) (= (ControlFlow 0 16) 15))) $generated@@229))))
$generated@@230))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
