(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@T T@U T@U) Bool)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@104 () T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@122 (T@U T@U) Bool)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@31 ($generated@@28 $generated@@30) $generated@@32) ($generated@@26 $generated@@27 $generated@@31 ($generated@@29 $generated@@30) $generated@@32))
 :pattern ( ($generated@@26 $generated@@27 $generated@@31 ($generated@@28 $generated@@30) $generated@@32))
 :pattern ( ($generated@@26 $generated@@27 $generated@@31 ($generated@@29 $generated@@30) $generated@@32))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@35 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@35 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@35 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@8 $generated@@36) 4)) (= ($generated@@8 $generated@@37) 5)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@8 ($generated@@38 $generated@@53 $generated@@54)) 6))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@38 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@38 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@38 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@60 ($generated@@29 $generated@@59) $generated@@61)  (or (= $generated@@60 $generated@@33) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@61 $generated@@60) $generated)))))
 :pattern ( ($generated@@26 $generated@@27 $generated@@60 ($generated@@29 $generated@@59) $generated@@61))
)))
(assert (= ($generated@@24 $generated@@62) 0))
(assert (= ($generated@@63 $generated@@3 $generated@@7) $generated@@62))
(assert  (not ($generated@@64 $generated@@62)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@65 $generated@@66 $generated@@67) (= $generated@@66 $generated@@67))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@68 $generated@@69 $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@13 ($generated@@34 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@69 $generated@@71) $generated))) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@70 $generated@@71) $generated))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@70 $generated@@71) $generated))
)))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@34 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@34 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and (and ($generated@@75 $generated@@79) (and (or (not (= $generated@@80 $generated@@33)) (not true)) ($generated@@76 $generated@@27 $generated@@80 ($generated@@29 $generated@@78)))) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@79 $generated@@80) $generated)))) ($generated@@77 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@79 $generated@@80) $generated@@62) $generated@@78 $generated@@79))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@79 $generated@@80) $generated@@62) ($generated@@29 $generated@@78))
)))
(assert ($generated@@64 $generated))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@76 $generated@@27 $generated@@82 ($generated@@28 $generated@@81))  (and ($generated@@76 $generated@@27 $generated@@82 ($generated@@29 $generated@@81)) (or (not (= $generated@@82 $generated@@33)) (not true))))
 :pattern ( ($generated@@76 $generated@@27 $generated@@82 ($generated@@28 $generated@@81)))
 :pattern ( ($generated@@76 $generated@@27 $generated@@82 ($generated@@29 $generated@@81)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@77 ($generated@@72 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@26 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@77 ($generated@@72 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@68 $generated@@87 $generated@@88) (=> ($generated@@77 $generated@@89 $generated@@90 $generated@@87) ($generated@@77 $generated@@89 $generated@@90 $generated@@88)))
 :pattern ( ($generated@@68 $generated@@87 $generated@@88) ($generated@@77 $generated@@89 $generated@@90 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (!  (=> ($generated@@68 $generated@@91 $generated@@92) (=> ($generated@@26 $generated@@95 $generated@@93 $generated@@94 $generated@@91) ($generated@@26 $generated@@95 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@68 $generated@@91 $generated@@92) ($generated@@26 $generated@@95 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@96 ($generated@@28 $generated@@98)) $generated@@2) (= ($generated@@97 ($generated@@28 $generated@@98)) $generated@@6))
 :pattern ( ($generated@@28 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@96 ($generated@@29 $generated@@99)) $generated@@4) (= ($generated@@97 ($generated@@29 $generated@@99)) $generated@@6))
 :pattern ( ($generated@@29 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@75 $generated@@102) (and (or (not (= $generated@@103 $generated@@33)) (not true)) ($generated@@76 $generated@@27 $generated@@103 ($generated@@29 $generated@@101)))) ($generated@@100 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@102 $generated@@103) $generated@@62) $generated@@101))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@102 $generated@@103) $generated@@62) ($generated@@29 $generated@@101))
)))
(assert (= ($generated@@8 $generated@@105) 7))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@100 $generated@@106 $generated@@104) (and (= ($generated@@72 $generated@@105 ($generated@@34 $generated@@105 $generated@@106)) $generated@@106) ($generated@@76 $generated@@105 ($generated@@34 $generated@@105 $generated@@106) $generated@@104)))
 :pattern ( ($generated@@100 $generated@@106 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or (not (= $generated@@107 $generated@@109)) (not true)) (=> (and ($generated@@68 $generated@@107 $generated@@108) ($generated@@68 $generated@@108 $generated@@109)) ($generated@@68 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@68 $generated@@107 $generated@@108) ($generated@@68 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (and (= ($generated@@110 ($generated@@63 $generated@@111 $generated@@112)) $generated@@111) (= ($generated@@25 ($generated@@63 $generated@@111 $generated@@112)) $generated@@112))
 :pattern ( ($generated@@63 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@100 ($generated@@72 $generated@@115 $generated@@113) $generated@@114) ($generated@@76 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@100 ($generated@@72 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@28 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@28 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@29 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@29 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@34 $generated@@121 ($generated@@72 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@72 $generated@@121 $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@76 $generated@@27 $generated@@125 ($generated@@29 $generated@@124))  (or (= $generated@@125 $generated@@33) ($generated@@122 ($generated@@123 $generated@@125) $generated@@124)))
 :pattern ( ($generated@@76 $generated@@27 $generated@@125 ($generated@@29 $generated@@124)))
)))
(assert  (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@126 $generated@@129 $generated@@130 $generated@@131 ($generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@126 $generated@@136 $generated@@137 $generated@@138 ($generated@@128 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@126 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@126 $generated@@145 $generated@@146 $generated@@147 ($generated@@128 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@126 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@13 ($generated@@126 $generated@@27 $generated@@36 $generated@@9 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@27 ($generated@@38 $generated@@36 $generated@@37) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@126 $generated@@27 $generated@@36 $generated@@9 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@100 $generated@@161 ($generated@@28 $generated@@160)) (and (= ($generated@@72 $generated@@27 ($generated@@34 $generated@@27 $generated@@161)) $generated@@161) ($generated@@76 $generated@@27 ($generated@@34 $generated@@27 $generated@@161) ($generated@@28 $generated@@160))))
 :pattern ( ($generated@@100 $generated@@161 ($generated@@28 $generated@@160)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@100 $generated@@163 ($generated@@29 $generated@@162)) (and (= ($generated@@72 $generated@@27 ($generated@@34 $generated@@27 $generated@@163)) $generated@@163) ($generated@@76 $generated@@27 ($generated@@34 $generated@@27 $generated@@163) ($generated@@29 $generated@@162))))
 :pattern ( ($generated@@100 $generated@@163 ($generated@@29 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@75 $generated@@165) ($generated@@76 $generated@@105 $generated@@164 $generated@@104)) ($generated@@26 $generated@@105 $generated@@164 $generated@@104 $generated@@165))
 :pattern ( ($generated@@26 $generated@@105 $generated@@164 $generated@@104 $generated@@165))
)))
(assert (= ($generated@@96 $generated@@104) $generated@@1))
(assert (= ($generated@@97 $generated@@104) $generated@@5))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@65 $generated@@166 $generated@@167)
 :pattern ( ($generated@@65 $generated@@166 $generated@@167))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@175  (=> (= $generated@@168 ($generated@@127 $generated@@33 $generated@@169 $generated false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@170 $generated@@33)) (not true))) (=> (or (not (= $generated@@170 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@170 $generated@@33)) (not true))) (=> (or (not (= $generated@@170 $generated@@33)) (not true)) (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@26 $generated@@27 $generated@@170 ($generated@@28 $generated@@104) $generated@@171)))))))))
(let (($generated@@176  (=> (and ($generated@@75 $generated@@171) ($generated@@172 $generated@@171)) (=> (and (and (and ($generated@@76 $generated@@27 $generated@@170 ($generated@@28 $generated@@104)) ($generated@@26 $generated@@27 $generated@@170 ($generated@@28 $generated@@104) $generated@@173)) (= 1 $generated@@174)) (and (and (= $generated@@173 $generated@@171) (and ($generated@@68 $generated@@173 $generated@@169) ($generated@@75 $generated@@169))) (and ($generated@@26 $generated@@27 $generated@@170 ($generated@@28 $generated@@104) $generated@@173) (= (ControlFlow 0 5) 2)))) $generated@@175))))
$generated@@176)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
