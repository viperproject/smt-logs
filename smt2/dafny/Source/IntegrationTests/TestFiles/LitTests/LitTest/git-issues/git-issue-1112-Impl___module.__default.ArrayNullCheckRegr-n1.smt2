(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@43 (T@U) Int)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@93 (Int) Int)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 (Int) T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@108 (T@U Int) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@130 (T@U T@U) Bool)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@212 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@3) 0))
(assert (= ($generated@@31 $generated) $generated@@1))
(assert (= ($generated@@31 $generated@@0) $generated@@2))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and (or (not (= $generated@@38 $generated@@34)) (not true)) (= ($generated@@35 $generated@@38) ($generated@@33 $generated@@37))) ($generated@@36 $generated@@16 ($generated@@20 ($generated@@32 $generated@@38)) $generated))
 :pattern ( ($generated@@32 $generated@@38) ($generated@@33 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and (or (not (= $generated@@42 $generated@@34)) (not true)) (= ($generated@@35 $generated@@42) ($generated@@40 $generated@@41))) ($generated@@36 $generated@@16 ($generated@@20 ($generated@@39 $generated@@42)) $generated))
 :pattern ( ($generated@@39 $generated@@42) ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and (or (not (= $generated@@45 $generated@@34)) (not true)) (= ($generated@@35 $generated@@45) ($generated@@40 $generated@@44))) ($generated@@36 $generated@@16 ($generated@@20 ($generated@@43 $generated@@45)) $generated))
 :pattern ( ($generated@@43 $generated@@45) ($generated@@40 $generated@@44))
)))
(assert (= ($generated@@14 $generated@@47) 3))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@50 ($generated@@48 $generated@@49) $generated@@51) ($generated@@46 $generated@@47 $generated@@50 ($generated@@33 $generated@@49) $generated@@51))
 :pattern ( ($generated@@46 $generated@@47 $generated@@50 ($generated@@48 $generated@@49) $generated@@51))
 :pattern ( ($generated@@46 $generated@@47 $generated@@50 ($generated@@33 $generated@@49) $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@54 ($generated@@52 $generated@@53) $generated@@55) ($generated@@46 $generated@@47 $generated@@54 ($generated@@40 $generated@@53) $generated@@55))
 :pattern ( ($generated@@46 $generated@@47 $generated@@54 ($generated@@52 $generated@@53) $generated@@55))
 :pattern ( ($generated@@46 $generated@@47 $generated@@54 ($generated@@40 $generated@@53) $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@57 $generated@@56 $generated@@58) ($generated@@46 $generated@@47 $generated@@57 ($generated@@33 $generated@@0) $generated@@58))
 :pattern ( ($generated@@46 $generated@@47 $generated@@57 $generated@@56 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@60 $generated@@59 $generated@@61) ($generated@@46 $generated@@47 $generated@@60 ($generated@@40 $generated@@0) $generated@@61))
 :pattern ( ($generated@@46 $generated@@47 $generated@@60 $generated@@59 $generated@@61))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@70 $generated@@71 ($generated@@67 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@74) $generated@@72)
 :weight 0
)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@79 $generated@@80) (= ($generated@@63 $generated@@75 $generated@@76 ($generated@@67 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@80) ($generated@@63 $generated@@75 $generated@@76 $generated@@78 $generated@@80)))
 :weight 0
))) (= ($generated@@14 $generated@@64) 4)) (= ($generated@@14 $generated@@65) 5)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (= ($generated@@14 ($generated@@66 $generated@@81 $generated@@82)) 6))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@68 ($generated@@66 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@66 $generated@@83 $generated@@84))
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@66 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@88 ($generated@@33 $generated@@87) $generated@@89)  (or (= $generated@@88 $generated@@34) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@89 $generated@@88) $generated@@3)))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@88 ($generated@@33 $generated@@87) $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@91 ($generated@@40 $generated@@90) $generated@@92)  (or (= $generated@@91 $generated@@34) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@92 $generated@@91) $generated@@3)))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@91 ($generated@@40 $generated@@90) $generated@@92))
)))
(assert (forall (($generated@@94 Int) ) (! (= ($generated@@93 $generated@@94) $generated@@94)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ) (!  (=> (and (and (and ($generated@@99 $generated@@102) (and (or (not (= $generated@@103 $generated@@34)) (not true)) (= ($generated@@35 $generated@@103) ($generated@@33 $generated@@101)))) (and (<= 0 $generated@@104) (< $generated@@104 ($generated@@32 $generated@@103)))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@102 $generated@@103) $generated@@3)))) ($generated@@100 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@102 $generated@@103) ($generated@@98 $generated@@104)) $generated@@101 $generated@@102))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@102 $generated@@103) ($generated@@98 $generated@@104)) ($generated@@33 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@62 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@62 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 Int) ) (! (= ($generated@@30 ($generated@@108 $generated@@109 $generated@@110)) (+ ($generated@@30 $generated@@109) 1))
 :pattern ( ($generated@@108 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@36 $generated@@47 $generated@@111 $generated@@59)  (and ($generated@@36 $generated@@47 $generated@@111 ($generated@@40 $generated@@0)) (or (= $generated@@111 $generated@@34) (and (= ($generated@@39 $generated@@111) ($generated@@43 $generated@@111)) (= ($generated@@43 $generated@@111) ($generated@@93 10))))))
 :pattern ( ($generated@@36 $generated@@47 $generated@@111 $generated@@59))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@36 $generated@@47 $generated@@113 ($generated@@48 $generated@@112))  (and ($generated@@36 $generated@@47 $generated@@113 ($generated@@33 $generated@@112)) (or (not (= $generated@@113 $generated@@34)) (not true))))
 :pattern ( ($generated@@36 $generated@@47 $generated@@113 ($generated@@48 $generated@@112)))
 :pattern ( ($generated@@36 $generated@@47 $generated@@113 ($generated@@33 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@36 $generated@@47 $generated@@115 ($generated@@52 $generated@@114))  (and ($generated@@36 $generated@@47 $generated@@115 ($generated@@40 $generated@@114)) (or (not (= $generated@@115 $generated@@34)) (not true))))
 :pattern ( ($generated@@36 $generated@@47 $generated@@115 ($generated@@52 $generated@@114)))
 :pattern ( ($generated@@36 $generated@@47 $generated@@115 ($generated@@40 $generated@@114)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@100 ($generated@@105 $generated@@119 $generated@@116) $generated@@117 $generated@@118) ($generated@@46 $generated@@119 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@100 ($generated@@105 $generated@@119 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 Int) ($generated@@124 Int) ) (!  (=> (and (and (and ($generated@@99 $generated@@121) (and (or (not (= $generated@@122 $generated@@34)) (not true)) (= ($generated@@35 $generated@@122) ($generated@@40 $generated@@120)))) (and (and (<= 0 $generated@@123) (< $generated@@123 ($generated@@39 $generated@@122))) (and (<= 0 $generated@@124) (< $generated@@124 ($generated@@43 $generated@@122))))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@121 $generated@@122) $generated@@3)))) ($generated@@100 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@121 $generated@@122) ($generated@@108 ($generated@@98 $generated@@123) $generated@@124)) $generated@@120 $generated@@121))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@121 $generated@@122) ($generated@@108 ($generated@@98 $generated@@123) $generated@@124)) ($generated@@40 $generated@@120))
)))
(assert (forall (($generated@@126 T@U) ) (!  (and (= ($generated@@31 ($generated@@33 $generated@@126)) $generated@@4) (= ($generated@@125 ($generated@@33 $generated@@126)) $generated@@10))
 :pattern ( ($generated@@33 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (!  (and (= ($generated@@31 ($generated@@48 $generated@@127)) $generated@@5) (= ($generated@@125 ($generated@@48 $generated@@127)) $generated@@10))
 :pattern ( ($generated@@48 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@31 ($generated@@40 $generated@@128)) $generated@@6) (= ($generated@@125 ($generated@@40 $generated@@128)) $generated@@11))
 :pattern ( ($generated@@40 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (and (= ($generated@@31 ($generated@@52 $generated@@129)) $generated@@7) (= ($generated@@125 ($generated@@52 $generated@@129)) $generated@@11))
 :pattern ( ($generated@@52 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@130 $generated@@131 $generated@@56) (and (= ($generated@@105 $generated@@47 ($generated@@62 $generated@@47 $generated@@131)) $generated@@131) ($generated@@36 $generated@@47 ($generated@@62 $generated@@47 $generated@@131) $generated@@56)))
 :pattern ( ($generated@@130 $generated@@131 $generated@@56))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@130 $generated@@132 $generated@@59) (and (= ($generated@@105 $generated@@47 ($generated@@62 $generated@@47 $generated@@132)) $generated@@132) ($generated@@36 $generated@@47 ($generated@@62 $generated@@47 $generated@@132) $generated@@59)))
 :pattern ( ($generated@@130 $generated@@132 $generated@@59))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@36 $generated@@47 $generated@@134 ($generated@@33 $generated@@133))  (or (= $generated@@134 $generated@@34) (= ($generated@@35 $generated@@134) ($generated@@33 $generated@@133))))
 :pattern ( ($generated@@36 $generated@@47 $generated@@134 ($generated@@33 $generated@@133)))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@36 $generated@@47 $generated@@136 ($generated@@40 $generated@@135))  (or (= $generated@@136 $generated@@34) (= ($generated@@35 $generated@@136) ($generated@@40 $generated@@135))))
 :pattern ( ($generated@@36 $generated@@47 $generated@@136 ($generated@@40 $generated@@135)))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@36 $generated@@47 $generated@@137 $generated@@56)  (and ($generated@@36 $generated@@47 $generated@@137 ($generated@@33 $generated@@0)) (or (= $generated@@137 $generated@@34) (= ($generated@@32 $generated@@137) ($generated@@93 10)))))
 :pattern ( ($generated@@36 $generated@@47 $generated@@137 $generated@@56))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Int) ($generated@@142 Int) ) (!  (=> (and (and ($generated@@99 $generated@@139) (and (or (not (= $generated@@140 $generated@@34)) (not true)) (= ($generated@@35 $generated@@140) ($generated@@40 $generated@@138)))) (and (and (<= 0 $generated@@141) (< $generated@@141 ($generated@@39 $generated@@140))) (and (<= 0 $generated@@142) (< $generated@@142 ($generated@@43 $generated@@140))))) ($generated@@130 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@139 $generated@@140) ($generated@@108 ($generated@@98 $generated@@141) $generated@@142)) $generated@@138))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@139 $generated@@140) ($generated@@108 ($generated@@98 $generated@@141) $generated@@142)) ($generated@@40 $generated@@138))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@130 $generated@@143 $generated) (and (= ($generated@@105 $generated@@16 ($generated@@62 $generated@@16 $generated@@143)) $generated@@143) ($generated@@36 $generated@@16 ($generated@@62 $generated@@16 $generated@@143) $generated)))
 :pattern ( ($generated@@130 $generated@@143 $generated))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@130 $generated@@144 $generated@@0) (and (= ($generated@@105 $generated@@17 ($generated@@62 $generated@@17 $generated@@144)) $generated@@144) ($generated@@36 $generated@@17 ($generated@@62 $generated@@17 $generated@@144) $generated@@0)))
 :pattern ( ($generated@@130 $generated@@144 $generated@@0))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@130 ($generated@@105 $generated@@147 $generated@@145) $generated@@146) ($generated@@36 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@130 ($generated@@105 $generated@@147 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ) (! (<= 0 ($generated@@32 $generated@@148))
 :pattern ( ($generated@@32 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (<= 0 ($generated@@39 $generated@@149))
 :pattern ( ($generated@@39 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (! (<= 0 ($generated@@43 $generated@@150))
 :pattern ( ($generated@@43 $generated@@150))
)))
(assert (forall (($generated@@151 Int) ) (! (= ($generated@@30 ($generated@@98 $generated@@151)) 1)
 :pattern ( ($generated@@98 $generated@@151))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@152 ($generated@@98 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@98 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@33 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@33 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@48 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@48 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@40 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@40 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@52 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@52 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@62 $generated@@163 ($generated@@105 $generated@@163 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@105 $generated@@163 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and (and ($generated@@99 $generated@@165) (and (or (not (= $generated@@166 $generated@@34)) (not true)) (= ($generated@@35 $generated@@166) ($generated@@33 $generated@@164)))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@165 $generated@@166) $generated@@3)))) ($generated@@46 $generated@@16 ($generated@@20 ($generated@@32 $generated@@166)) $generated $generated@@165))
 :pattern ( ($generated@@32 $generated@@166) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@165 $generated@@166) $generated@@3)) ($generated@@33 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and (and ($generated@@99 $generated@@168) (and (or (not (= $generated@@169 $generated@@34)) (not true)) (= ($generated@@35 $generated@@169) ($generated@@40 $generated@@167)))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@168 $generated@@169) $generated@@3)))) ($generated@@46 $generated@@16 ($generated@@20 ($generated@@39 $generated@@169)) $generated $generated@@168))
 :pattern ( ($generated@@39 $generated@@169) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@168 $generated@@169) $generated@@3)) ($generated@@40 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (and ($generated@@99 $generated@@171) (and (or (not (= $generated@@172 $generated@@34)) (not true)) (= ($generated@@35 $generated@@172) ($generated@@40 $generated@@170)))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@171 $generated@@172) $generated@@3)))) ($generated@@46 $generated@@16 ($generated@@20 ($generated@@43 $generated@@172)) $generated $generated@@171))
 :pattern ( ($generated@@43 $generated@@172) ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@171 $generated@@172) $generated@@3)) ($generated@@40 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Int) ) (!  (=> (and (and ($generated@@99 $generated@@174) (and (or (not (= $generated@@175 $generated@@34)) (not true)) (= ($generated@@35 $generated@@175) ($generated@@33 $generated@@173)))) (and (<= 0 $generated@@176) (< $generated@@176 ($generated@@32 $generated@@175)))) ($generated@@130 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@174 $generated@@175) ($generated@@98 $generated@@176)) $generated@@173))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@174 $generated@@175) ($generated@@98 $generated@@176)) ($generated@@33 $generated@@173))
)))
(assert  (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@177 $generated@@180 $generated@@181 $generated@@182 ($generated@@179 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@185 $generated@@186) $generated@@183)
 :weight 0
)) (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@177 $generated@@187 $generated@@188 $generated@@189 ($generated@@179 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@177 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@177 $generated@@196 $generated@@197 $generated@@198 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@177 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@19 ($generated@@177 $generated@@47 $generated@@64 $generated@@15 ($generated@@178 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))  (=> (and (or (not (= $generated@@209 $generated@@205)) (not true)) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@206 $generated@@209) $generated@@207)))) $generated@@208))
 :pattern ( ($generated@@177 $generated@@47 $generated@@64 $generated@@15 ($generated@@178 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 Int) ) (!  (and (= ($generated@@211 ($generated@@108 $generated@@213 $generated@@214)) $generated@@213) (= ($generated@@212 ($generated@@108 $generated@@213 $generated@@214)) $generated@@214))
 :pattern ( ($generated@@108 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> ($generated@@130 $generated@@216 ($generated@@33 $generated@@215)) (and (= ($generated@@105 $generated@@47 ($generated@@62 $generated@@47 $generated@@216)) $generated@@216) ($generated@@36 $generated@@47 ($generated@@62 $generated@@47 $generated@@216) ($generated@@33 $generated@@215))))
 :pattern ( ($generated@@130 $generated@@216 ($generated@@33 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@130 $generated@@218 ($generated@@48 $generated@@217)) (and (= ($generated@@105 $generated@@47 ($generated@@62 $generated@@47 $generated@@218)) $generated@@218) ($generated@@36 $generated@@47 ($generated@@62 $generated@@47 $generated@@218) ($generated@@48 $generated@@217))))
 :pattern ( ($generated@@130 $generated@@218 ($generated@@48 $generated@@217)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> ($generated@@130 $generated@@220 ($generated@@40 $generated@@219)) (and (= ($generated@@105 $generated@@47 ($generated@@62 $generated@@47 $generated@@220)) $generated@@220) ($generated@@36 $generated@@47 ($generated@@62 $generated@@47 $generated@@220) ($generated@@40 $generated@@219))))
 :pattern ( ($generated@@130 $generated@@220 ($generated@@40 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> ($generated@@130 $generated@@222 ($generated@@52 $generated@@221)) (and (= ($generated@@105 $generated@@47 ($generated@@62 $generated@@47 $generated@@222)) $generated@@222) ($generated@@36 $generated@@47 ($generated@@62 $generated@@47 $generated@@222) ($generated@@52 $generated@@221))))
 :pattern ( ($generated@@130 $generated@@222 ($generated@@52 $generated@@221)))
)))
(assert (= ($generated@@31 $generated@@56) $generated@@8))
(assert (= ($generated@@125 $generated@@56) $generated@@12))
(assert (= ($generated@@31 $generated@@59) $generated@@9))
(assert (= ($generated@@125 $generated@@59) $generated@@13))
(assert (forall (($generated@@223 Int) ) (! (= ($generated@@105 $generated@@16 ($generated@@20 ($generated@@93 $generated@@223))) ($generated@@95 $generated@@65 ($generated@@105 $generated@@16 ($generated@@20 $generated@@223))))
 :pattern ( ($generated@@105 $generated@@16 ($generated@@20 ($generated@@93 $generated@@223))))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (= ($generated@@105 $generated@@225 ($generated@@95 $generated@@225 $generated@@224)) ($generated@@95 $generated@@65 ($generated@@105 $generated@@225 $generated@@224)))
 :pattern ( ($generated@@105 $generated@@225 ($generated@@95 $generated@@225 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! ($generated@@46 $generated@@16 $generated@@227 $generated $generated@@226)
 :pattern ( ($generated@@46 $generated@@16 $generated@@227 $generated $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! ($generated@@46 $generated@@17 $generated@@229 $generated@@0 $generated@@228)
 :pattern ( ($generated@@46 $generated@@17 $generated@@229 $generated@@0 $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ) (! ($generated@@36 $generated@@16 $generated@@230 $generated)
 :pattern ( ($generated@@36 $generated@@16 $generated@@230 $generated))
)))
(assert (forall (($generated@@231 T@U) ) (! ($generated@@36 $generated@@17 $generated@@231 $generated@@0)
 :pattern ( ($generated@@36 $generated@@17 $generated@@231 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Real)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@241  (=> (= $generated@@232 ($generated@@178 $generated@@34 $generated@@233 $generated@@3 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@234 $generated@@34)) (not true))) (=> (or (not (= $generated@@234 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 ($generated@@93 2)) (< ($generated@@93 2) ($generated@@32 $generated@@234)))) (=> (and (<= 0 ($generated@@93 2)) (< ($generated@@93 2) ($generated@@32 $generated@@234))) (=> (= $generated@@235 ($generated@@23 ($generated@@62 $generated@@17 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@47 ($generated@@66 $generated@@64 $generated@@65) $generated@@233 $generated@@234) ($generated@@98 ($generated@@93 2)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@236 $generated@@34)) (not true))) (=> (or (not (= $generated@@236 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@93 2)) (< ($generated@@93 2) ($generated@@39 $generated@@236)))) (=> (and (<= 0 ($generated@@93 2)) (< ($generated@@93 2) ($generated@@39 $generated@@236))) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 ($generated@@93 3)) (< ($generated@@93 3) ($generated@@43 $generated@@236))))))))))))))))
(let (($generated@@242  (=> (and (and ($generated@@99 $generated@@233) ($generated@@237 $generated@@233)) (and ($generated@@36 $generated@@47 $generated@@234 ($generated@@33 $generated@@0)) ($generated@@46 $generated@@47 $generated@@234 ($generated@@33 $generated@@0) $generated@@233))) (=> (and (and (and ($generated@@36 $generated@@47 $generated@@236 ($generated@@40 $generated@@0)) ($generated@@46 $generated@@47 $generated@@236 ($generated@@40 $generated@@0) $generated@@233)) (and ($generated@@36 $generated@@47 $generated@@238 $generated@@56) ($generated@@46 $generated@@47 $generated@@238 $generated@@56 $generated@@233))) (and (and ($generated@@36 $generated@@47 $generated@@239 $generated@@59) ($generated@@46 $generated@@47 $generated@@239 $generated@@59 $generated@@233)) (and (= 1 $generated@@240) (= (ControlFlow 0 7) 2)))) $generated@@241))))
$generated@@242)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 5))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 4))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
