(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U Int) T@U)
(declare-fun $generated@@26 (Int) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@U Int) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (Int) T@U)
(declare-fun $generated@@66 (Int Int) Int)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (Int Int) Int)
(declare-fun $generated@@90 (T@U) Int)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@102 (T@T) T@T)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (= ($generated@@5 $generated@@28) 3))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (or ($generated@@26 $generated@@31) (< 1 $generated@@24)) ($generated@@27 $generated@@28 ($generated@@25 $generated@@30 $generated@@31) ($generated@@29 $generated)))
 :pattern ( ($generated@@25 $generated@@30 $generated@@31))
))))
(assert (forall (($generated@@33 Int) ) (! (= ($generated@@32 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (and ($generated@@27 $generated@@28 $generated@@39 ($generated@@29 $generated@@41)) ($generated@@38 $generated@@40 $generated@@41)) ($generated@@27 $generated@@28 ($generated@@37 $generated@@39 $generated@@40) ($generated@@29 $generated@@41)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@37 $generated@@39 $generated@@40) ($generated@@29 $generated@@41)))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@42 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@42 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@22 ($generated@@37 $generated@@46 $generated@@47)) (+ 1 ($generated@@22 $generated@@46)))
 :pattern ( ($generated@@37 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@48 ($generated@@43 $generated@@53 $generated@@50) $generated@@51 $generated@@52) ($generated@@49 $generated@@53 $generated@@50 $generated@@51 $generated@@52))
 :pattern ( ($generated@@48 ($generated@@43 $generated@@53 $generated@@50) $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@22 ($generated@@54 $generated@@55 $generated@@56)) (+ ($generated@@22 $generated@@55) ($generated@@22 $generated@@56)))
 :pattern ( ($generated@@22 ($generated@@54 $generated@@55 $generated@@56)))
)))
(assert  (=> (< 0 $generated@@24) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@58 $generated@@59) ($generated@@49 $generated@@28 $generated@@57 ($generated@@29 ($generated@@29 $generated)) $generated@@59))
 :pattern ( ($generated@@49 $generated@@28 $generated@@57 ($generated@@29 ($generated@@29 $generated)) $generated@@59))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 Int) ($generated@@63 T@U) ) (!  (and (=> (= $generated@@62 ($generated@@22 $generated@@61)) (= ($generated@@60 ($generated@@37 $generated@@61 $generated@@63) $generated@@62) $generated@@63)) (=> (or (not (= $generated@@62 ($generated@@22 $generated@@61))) (not true)) (= ($generated@@60 ($generated@@37 $generated@@61 $generated@@63) $generated@@62) ($generated@@60 $generated@@61 $generated@@62))))
 :pattern ( ($generated@@60 ($generated@@37 $generated@@61 $generated@@63) $generated@@62))
)))
(assert (= ($generated@@5 $generated@@64) 4))
(assert (= $generated@@57 ($generated@@34 $generated@@28 ($generated@@37 ($generated@@37 ($generated@@37 ($generated@@37 ($generated@@37 ($generated@@37 ($generated@@37 ($generated@@37 ($generated@@37 ($generated@@37 $generated@@23 ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 48)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 49)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 50)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 51)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 52)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 53)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 54)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 55)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 56)))))) ($generated@@43 $generated@@28 ($generated@@34 $generated@@28 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 57)))))))))
(assert (forall (($generated@@67 Int) ($generated@@68 Int) ) (! (= ($generated@@66 $generated@@67 $generated@@68) (div $generated@@67 $generated@@68))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@38 $generated@@69 $generated@@0) (and (= ($generated@@43 $generated@@7 ($generated@@42 $generated@@7 $generated@@69)) $generated@@69) ($generated@@27 $generated@@7 ($generated@@42 $generated@@7 $generated@@69) $generated@@0)))
 :pattern ( ($generated@@38 $generated@@69 $generated@@0))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@38 $generated@@70 $generated) (and (= ($generated@@43 $generated@@64 ($generated@@42 $generated@@64 $generated@@70)) $generated@@70) ($generated@@27 $generated@@64 ($generated@@42 $generated@@64 $generated@@70) $generated)))
 :pattern ( ($generated@@38 $generated@@70 $generated))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@38 ($generated@@43 $generated@@73 $generated@@71) $generated@@72) ($generated@@27 $generated@@73 $generated@@71 $generated@@72))
 :pattern ( ($generated@@38 ($generated@@43 $generated@@73 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (<= 0 ($generated@@22 $generated@@74))
 :pattern ( ($generated@@22 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@49 $generated@@28 $generated@@75 ($generated@@29 $generated@@76) $generated@@77) (forall (($generated@@78 Int) ) (!  (=> (and (<= 0 $generated@@78) (< $generated@@78 ($generated@@22 $generated@@75))) ($generated@@48 ($generated@@60 $generated@@75 $generated@@78) $generated@@76 $generated@@77))
 :pattern ( ($generated@@60 $generated@@75 $generated@@78))
)))
 :pattern ( ($generated@@49 $generated@@28 $generated@@75 ($generated@@29 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 ($generated@@29 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@29 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@21 ($generated@@29 $generated@@81)) $generated@@3)
 :pattern ( ($generated@@29 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@42 $generated@@83 ($generated@@43 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@43 $generated@@83 $generated@@82))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@86 T@U) ($generated@@87 Int) ) (!  (=> (or ($generated@@26 $generated@@87) (< 1 $generated@@24)) (and (and (=> (< $generated@@87 0) ($generated@@26 (- 0 $generated@@87))) (=> (<= 0 $generated@@87) (=> (<= 10 $generated@@87) (=> (<= 100 $generated@@87) ($generated@@26 ($generated@@66 $generated@@87 ($generated@@32 10))))))) (= ($generated@@25 ($generated@@84 $generated@@86) $generated@@87) (ite (< $generated@@87 0) ($generated@@54 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 45))) ($generated@@25 $generated@@86 (- 0 $generated@@87))) (ite (< $generated@@87 10) ($generated@@42 $generated@@28 ($generated@@60 $generated@@57 $generated@@87)) (ite (< $generated@@87 100) ($generated@@54 ($generated@@42 $generated@@28 ($generated@@60 $generated@@57 ($generated@@66 $generated@@87 ($generated@@32 10)))) ($generated@@42 $generated@@28 ($generated@@60 $generated@@57 ($generated@@85 $generated@@87 ($generated@@32 10))))) ($generated@@54 ($generated@@25 $generated@@86 ($generated@@66 $generated@@87 ($generated@@32 10))) ($generated@@42 $generated@@28 ($generated@@60 $generated@@57 ($generated@@85 $generated@@87 ($generated@@32 10)))))))))))
 :pattern ( ($generated@@25 ($generated@@84 $generated@@86) $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 Int) ) (! (= ($generated@@25 ($generated@@84 $generated@@88) $generated@@89) ($generated@@25 $generated@@88 $generated@@89))
 :pattern ( ($generated@@25 ($generated@@84 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 Int) ) (!  (=> (or (and (<= 0 $generated@@91) (< $generated@@91 55296)) (and (<= 57344 $generated@@91) (< $generated@@91 1114112))) (= ($generated@@90 ($generated@@65 $generated@@91)) $generated@@91))
 :pattern ( ($generated@@65 $generated@@91))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@92 $generated@@103 $generated@@104 $generated@@105 ($generated@@99 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@108 $generated@@109) $generated@@106)
 :weight 0
)) (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@92 $generated@@110 $generated@@111 $generated@@112 ($generated@@99 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@117 $generated@@118) ($generated@@92 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@117 $generated@@118)))
 :weight 0
)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@125 $generated@@127) (= ($generated@@92 $generated@@119 $generated@@120 $generated@@121 ($generated@@99 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@92 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)))) (= ($generated@@5 $generated@@93) 5)) (= ($generated@@5 $generated@@94) 6)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@96 $generated@@128 $generated@@129 ($generated@@100 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@96 $generated@@133 $generated@@134 ($generated@@100 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@96 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (= ($generated@@5 $generated@@97) 7)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (= ($generated@@5 ($generated@@98 $generated@@139 $generated@@140)) 8))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@98 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@102 ($generated@@98 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@98 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@10 ($generated@@92 $generated@@93 $generated@@94 $generated@@6 ($generated@@95 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@10 ($generated@@42 $generated@@6 ($generated@@96 $generated@@94 $generated@@97 ($generated@@96 $generated@@93 ($generated@@98 $generated@@94 $generated@@97) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94 $generated@@6 ($generated@@95 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 Int) ($generated@@152 Int) ) (! (= ($generated@@85 $generated@@151 $generated@@152) (mod $generated@@151 $generated@@152))
 :pattern ( ($generated@@85 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (and (= ($generated@@153 ($generated@@37 $generated@@155 $generated@@156)) $generated@@155) (= ($generated@@154 ($generated@@37 $generated@@155 $generated@@156)) $generated@@156))
 :pattern ( ($generated@@37 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@38 $generated@@157 ($generated@@29 $generated@@158)) (and (= ($generated@@43 $generated@@28 ($generated@@42 $generated@@28 $generated@@157)) $generated@@157) ($generated@@27 $generated@@28 ($generated@@42 $generated@@28 $generated@@157) ($generated@@29 $generated@@158))))
 :pattern ( ($generated@@38 $generated@@157 ($generated@@29 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ) (!  (and (= ($generated@@65 ($generated@@90 $generated@@159)) $generated@@159) (or (and (<= 0 ($generated@@90 $generated@@159)) (< ($generated@@90 $generated@@159) 55296)) (and (<= 57344 ($generated@@90 $generated@@159)) (< ($generated@@90 $generated@@159) 1114112))))
 :pattern ( ($generated@@90 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Int) ) (!  (and (=> (< $generated@@162 ($generated@@22 $generated@@160)) (= ($generated@@60 ($generated@@54 $generated@@160 $generated@@161) $generated@@162) ($generated@@60 $generated@@160 $generated@@162))) (=> (<= ($generated@@22 $generated@@160) $generated@@162) (= ($generated@@60 ($generated@@54 $generated@@160 $generated@@161) $generated@@162) ($generated@@60 $generated@@161 (- $generated@@162 ($generated@@22 $generated@@160))))))
 :pattern ( ($generated@@60 ($generated@@54 $generated@@160 $generated@@161) $generated@@162))
)))
(assert  (=> (< 0 $generated@@24) ($generated@@27 $generated@@28 $generated@@57 ($generated@@29 ($generated@@29 $generated)))))
(assert (forall (($generated@@163 Int) ) (! (= ($generated@@43 $generated@@7 ($generated@@11 ($generated@@32 $generated@@163))) ($generated@@34 $generated@@97 ($generated@@43 $generated@@7 ($generated@@11 $generated@@163))))
 :pattern ( ($generated@@43 $generated@@7 ($generated@@11 ($generated@@32 $generated@@163))))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@43 $generated@@165 ($generated@@34 $generated@@165 $generated@@164)) ($generated@@34 $generated@@97 ($generated@@43 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@43 $generated@@165 ($generated@@34 $generated@@165 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> (= ($generated@@22 $generated@@166) 0) (= $generated@@166 $generated@@23))
 :pattern ( ($generated@@22 $generated@@166))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@167 T@U) ($generated@@168 Int) ) (!  (=> (or ($generated@@26 ($generated@@32 $generated@@168)) (< 1 $generated@@24)) (and (and (=> ($generated@@10 ($generated@@34 $generated@@6 ($generated@@9 (< $generated@@168 0)))) ($generated@@26 ($generated@@32 (- 0 $generated@@168)))) (=> (not ($generated@@10 ($generated@@34 $generated@@6 ($generated@@9 (< $generated@@168 0))))) (=> (not ($generated@@10 ($generated@@34 $generated@@6 ($generated@@9 (< $generated@@168 10))))) (=> (not ($generated@@10 ($generated@@34 $generated@@6 ($generated@@9 (< $generated@@168 100))))) ($generated@@26 ($generated@@32 ($generated@@66 $generated@@168 ($generated@@32 10)))))))) (= ($generated@@25 ($generated@@84 $generated@@167) ($generated@@32 $generated@@168)) (ite (< $generated@@168 0) ($generated@@54 ($generated@@37 $generated@@23 ($generated@@43 $generated@@64 ($generated@@65 45))) ($generated@@25 ($generated@@84 $generated@@167) ($generated@@32 (- 0 $generated@@168)))) (ite (< $generated@@168 10) ($generated@@42 $generated@@28 ($generated@@60 $generated@@57 ($generated@@32 $generated@@168))) (ite (< $generated@@168 100) ($generated@@54 ($generated@@42 $generated@@28 ($generated@@60 $generated@@57 ($generated@@32 ($generated@@66 $generated@@168 ($generated@@32 10))))) ($generated@@42 $generated@@28 ($generated@@60 $generated@@57 ($generated@@32 ($generated@@85 $generated@@168 ($generated@@32 10)))))) ($generated@@54 ($generated@@25 ($generated@@84 $generated@@167) ($generated@@32 ($generated@@66 $generated@@168 ($generated@@32 10)))) ($generated@@42 $generated@@28 ($generated@@60 $generated@@57 ($generated@@32 ($generated@@85 $generated@@168 ($generated@@32 10))))))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@84 $generated@@167) ($generated@@32 $generated@@168)))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! ($generated@@49 $generated@@7 $generated@@170 $generated@@0 $generated@@169)
 :pattern ( ($generated@@49 $generated@@7 $generated@@170 $generated@@0 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! ($generated@@49 $generated@@64 $generated@@172 $generated $generated@@171)
 :pattern ( ($generated@@49 $generated@@64 $generated@@172 $generated $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@173 ($generated@@29 $generated@@174)) (forall (($generated@@175 Int) ) (!  (=> (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@22 $generated@@173))) ($generated@@38 ($generated@@60 $generated@@173 $generated@@175) $generated@@174))
 :pattern ( ($generated@@60 $generated@@173 $generated@@175))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@173 ($generated@@29 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (! ($generated@@27 $generated@@7 $generated@@176 $generated@@0)
 :pattern ( ($generated@@27 $generated@@7 $generated@@176 $generated@@0))
)))
(assert (forall (($generated@@177 T@U) ) (! ($generated@@27 $generated@@64 $generated@@177 $generated)
 :pattern ( ($generated@@27 $generated@@64 $generated@@177 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@185  (=> (<= 100 $generated@@178) (and (=> (= (ControlFlow 0 13) (- 0 17)) (or (not (= ($generated@@32 10) 0)) (not true))) (=> (or (not (= ($generated@@32 10) 0)) (not true)) (=> (and (= $generated@@179 ($generated@@66 $generated@@178 ($generated@@32 10))) ($generated@@49 $generated@@7 ($generated@@11 $generated@@179) $generated@@0 $generated@@180)) (and (=> (= (ControlFlow 0 13) (- 0 16)) (or (or (<= 0 (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178)) (and (<= 0 $generated@@179) (< $generated@@178 0))) (= (ite (< $generated@@179 0) (- 0 $generated@@179) $generated@@179) (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178)))) (=> (or (or (<= 0 (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178)) (and (<= 0 $generated@@179) (< $generated@@178 0))) (= (ite (< $generated@@179 0) (- 0 $generated@@179) $generated@@179) (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (or (and (<= 0 $generated@@179) (< $generated@@178 0)) (and (= (< $generated@@179 0) (< $generated@@178 0)) (< (ite (< $generated@@179 0) (- 0 $generated@@179) $generated@@179) (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178))))) (=> (or (and (<= 0 $generated@@179) (< $generated@@178 0)) (and (= (< $generated@@179 0) (< $generated@@178 0)) (< (ite (< $generated@@179 0) (- 0 $generated@@179) $generated@@179) (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178)))) (=> ($generated@@26 ($generated@@66 $generated@@178 ($generated@@32 10))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= ($generated@@32 10) 0)) (not true))) (=> (or (not (= ($generated@@32 10) 0)) (not true)) (=> (= (ControlFlow 0 13) (- 0 12)) (and (<= 0 ($generated@@85 $generated@@178 ($generated@@32 10))) (< ($generated@@85 $generated@@178 ($generated@@32 10)) ($generated@@22 $generated@@57)))))))))))))))))
(let (($generated@@186  (=> (< $generated@@178 100) (and (=> (= (ControlFlow 0 8) (- 0 11)) (or (not (= ($generated@@32 10) 0)) (not true))) (=> (or (not (= ($generated@@32 10) 0)) (not true)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (and (<= 0 ($generated@@66 $generated@@178 ($generated@@32 10))) (< ($generated@@66 $generated@@178 ($generated@@32 10)) ($generated@@22 $generated@@57)))) (=> (and (<= 0 ($generated@@66 $generated@@178 ($generated@@32 10))) (< ($generated@@66 $generated@@178 ($generated@@32 10)) ($generated@@22 $generated@@57))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= ($generated@@32 10) 0)) (not true))) (=> (or (not (= ($generated@@32 10) 0)) (not true)) (=> (= (ControlFlow 0 8) (- 0 7)) (and (<= 0 ($generated@@85 $generated@@178 ($generated@@32 10))) (< ($generated@@85 $generated@@178 ($generated@@32 10)) ($generated@@22 $generated@@57)))))))))))))
(let (($generated@@187  (=> (<= 10 $generated@@178) (and (=> (= (ControlFlow 0 18) 8) $generated@@186) (=> (= (ControlFlow 0 18) 13) $generated@@185)))))
(let (($generated@@188  (=> (and (< $generated@@178 10) (= (ControlFlow 0 6) (- 0 5))) (and (<= 0 $generated@@178) (< $generated@@178 ($generated@@22 $generated@@57))))))
(let (($generated@@189  (=> (<= 0 $generated@@178) (and (=> (= (ControlFlow 0 19) 6) $generated@@188) (=> (= (ControlFlow 0 19) 18) $generated@@187)))))
(let (($generated@@190  (=> (< $generated@@178 0) (=> (and (= $generated@@181 (- 0 $generated@@178)) ($generated@@49 $generated@@7 ($generated@@11 $generated@@181) $generated@@0 $generated@@180)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (or (<= 0 (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178)) (and (<= 0 $generated@@181) (< $generated@@178 0))) (= (ite (< $generated@@181 0) (- 0 $generated@@181) $generated@@181) (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178)))) (=> (or (or (<= 0 (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178)) (and (<= 0 $generated@@181) (< $generated@@178 0))) (= (ite (< $generated@@181 0) (- 0 $generated@@181) $generated@@181) (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178))) (=> (= (ControlFlow 0 3) (- 0 2)) (or (and (<= 0 $generated@@181) (< $generated@@178 0)) (and (= (< $generated@@181 0) (< $generated@@178 0)) (< (ite (< $generated@@181 0) (- 0 $generated@@181) $generated@@181) (ite (< $generated@@178 0) (- 0 $generated@@178) $generated@@178)))))))))))
(let (($generated@@191 true))
(let (($generated@@192  (=> (<= 0 $generated@@178) (and (and (=> (= (ControlFlow 0 21) 1) $generated@@191) (=> (= (ControlFlow 0 21) 3) $generated@@190)) (=> (= (ControlFlow 0 21) 19) $generated@@189)))))
(let (($generated@@193  (=> (< $generated@@178 0) (and (and (=> (= (ControlFlow 0 20) 1) $generated@@191) (=> (= (ControlFlow 0 20) 3) $generated@@190)) (=> (= (ControlFlow 0 20) 19) $generated@@189)))))
(let (($generated@@194  (=> (= $generated@@182 ($generated@@95 $generated@@183 $generated@@180 $generated@@4 false)) (and (=> (= (ControlFlow 0 22) 20) $generated@@193) (=> (= (ControlFlow 0 22) 21) $generated@@192)))))
(let (($generated@@195  (=> (and (and ($generated@@58 $generated@@180) ($generated@@184 $generated@@180)) (and (= 1 $generated@@24) (= (ControlFlow 0 23) 22))) $generated@@194)))
$generated@@195))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
