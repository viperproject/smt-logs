(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U Int T@U) T@U)
(declare-fun $generated@@62 (Int T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@87 (T@U Int) Bool)
(declare-fun $generated@@88 (T@U Int) Bool)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@124 (T@U) Int)
(declare-fun $generated@@125 (T@U) Int)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (= ($generated@@25 $generated@@26) $generated@@5))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
 :pattern ( ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34))
 :pattern ( ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34)))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (or ($generated@@38 $generated@@44) (and (< 1 $generated@@35) ($generated@@33 $generated@@28 $generated@@44 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@39 $generated@@44)) (let (($generated@@45 ($generated@@40 $generated@@44)))
(let (($generated@@46 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@44)))))
 (=> (not ($generated@@39 $generated@@45)) (let (($generated@@47 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@45)))))
 (=> (<= $generated@@46 $generated@@47) ($generated@@38 $generated@@45))))))) (= ($generated@@36 ($generated@@37 $generated@@43) $generated@@44) (ite ($generated@@39 $generated@@44) true (let (($generated@@48 ($generated@@40 $generated@@44)))
(let (($generated@@49 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@44)))))
(ite ($generated@@39 $generated@@48) true (let (($generated@@50 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@48)))))
 (and (<= $generated@@49 $generated@@50) ($generated@@36 $generated@@43 $generated@@48))))))))))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@43) $generated@@44))
))))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@51 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@53 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@33 $generated@@28 ($generated@@56 $generated@@59 $generated@@60) ($generated@@29 $generated@@58))  (and ($generated@@57 $generated@@59 $generated@@58) ($generated@@33 $generated@@28 $generated@@60 ($generated@@29 $generated@@58))))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@56 $generated@@59 $generated@@60) ($generated@@29 $generated@@58)))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@64 T@U) ($generated@@65 Int) ($generated@@66 T@U) ) (!  (=> (or ($generated@@62 ($generated@@51 $generated@@65) ($generated@@53 $generated@@28 $generated@@66)) (and (< 1 $generated@@35) ($generated@@33 $generated@@28 $generated@@66 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@39 ($generated@@53 $generated@@28 $generated@@66)))))) (let (($generated@@67 ($generated@@53 $generated@@28 ($generated@@40 ($generated@@53 $generated@@28 $generated@@66)))))
(let (($generated@@68 ($generated@@51 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 ($generated@@53 $generated@@28 $generated@@66)))))))
 (=> (< $generated@@68 ($generated@@51 $generated@@65)) ($generated@@62 ($generated@@51 $generated@@65) $generated@@67))))) (= ($generated@@61 ($generated@@37 $generated@@64) ($generated@@51 $generated@@65) ($generated@@53 $generated@@28 $generated@@66)) (ite ($generated@@39 ($generated@@53 $generated@@28 $generated@@66)) ($generated@@56 ($generated@@63 $generated@@10 ($generated@@14 ($generated@@51 $generated@@65))) ($generated@@53 $generated@@28 $generated@@26)) (let (($generated@@69 ($generated@@53 $generated@@28 ($generated@@40 ($generated@@53 $generated@@28 $generated@@66)))))
(let (($generated@@70 ($generated@@51 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 ($generated@@53 $generated@@28 $generated@@66)))))))
(ite (<= ($generated@@51 $generated@@65) $generated@@70) ($generated@@56 ($generated@@63 $generated@@10 ($generated@@14 ($generated@@51 $generated@@65))) ($generated@@53 $generated@@28 $generated@@66)) ($generated@@56 ($generated@@63 $generated@@10 ($generated@@14 $generated@@70)) ($generated@@53 $generated@@28 ($generated@@61 ($generated@@37 $generated@@64) ($generated@@51 $generated@@65) $generated@@69))))))))))
 :weight 3
 :pattern ( ($generated@@61 ($generated@@37 $generated@@64) ($generated@@51 $generated@@65) ($generated@@53 $generated@@28 $generated@@66)))
))))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@39 $generated@@71) (= ($generated@@25 $generated@@71) $generated@@5))
 :pattern ( ($generated@@39 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 $generated@@73) (= ($generated@@25 $generated@@73) $generated@@6))
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@63 $generated@@75 ($generated@@41 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@41 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@72 $generated@@76) (exists (($generated@@77 T@U) ($generated@@78 T@U) ) (= $generated@@76 ($generated@@56 $generated@@77 $generated@@78))))
 :pattern ( ($generated@@72 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@39 $generated@@79) (= $generated@@79 $generated@@26))
 :pattern ( ($generated@@39 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@63 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@27 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 ($generated@@63 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (and (= ($generated@@24 ($generated@@29 $generated@@86)) $generated@@4) (= ($generated@@85 ($generated@@29 $generated@@86)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@86))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (or ($generated@@88 $generated@@90 $generated@@91) (and (< 3 $generated@@35) (and ($generated@@33 $generated@@28 $generated@@90 ($generated@@29 $generated@@0)) ($generated@@36 ($generated@@37 $generated@@89) $generated@@90)))) ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@91 $generated@@90)))
 :pattern ( ($generated@@87 $generated@@90 $generated@@91))
))))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@38 ($generated@@53 $generated@@28 $generated@@93)) (and (< 1 $generated@@35) ($generated@@33 $generated@@28 $generated@@93 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@39 ($generated@@53 $generated@@28 $generated@@93)))))) (let (($generated@@94 ($generated@@53 $generated@@28 ($generated@@40 ($generated@@53 $generated@@28 $generated@@93)))))
(let (($generated@@95 ($generated@@51 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 ($generated@@53 $generated@@28 $generated@@93)))))))
 (=> (not ($generated@@39 $generated@@94)) (let (($generated@@96 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@94)))))
 (=> (<= $generated@@95 $generated@@96) ($generated@@38 $generated@@94))))))) (= ($generated@@36 ($generated@@37 $generated@@92) ($generated@@53 $generated@@28 $generated@@93)) (ite ($generated@@39 ($generated@@53 $generated@@28 $generated@@93)) true (let (($generated@@97 ($generated@@53 $generated@@28 ($generated@@40 ($generated@@53 $generated@@28 $generated@@93)))))
(let (($generated@@98 ($generated@@51 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 ($generated@@53 $generated@@28 $generated@@93)))))))
(ite ($generated@@39 $generated@@97) true (let (($generated@@99 ($generated@@51 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@97))))))
 (and (<= $generated@@98 $generated@@99) ($generated@@36 ($generated@@37 $generated@@92) $generated@@97))))))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@37 $generated@@92) ($generated@@53 $generated@@28 $generated@@93)))
))))
(assert (forall (($generated@@100 T@U) ($generated@@101 Int) ($generated@@102 T@U) ) (! (= ($generated@@61 ($generated@@37 $generated@@100) $generated@@101 $generated@@102) ($generated@@61 $generated@@100 $generated@@101 $generated@@102))
 :pattern ( ($generated@@61 ($generated@@37 $generated@@100) $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@33 $generated@@28 $generated@@104 ($generated@@29 $generated@@103)) (or ($generated@@39 $generated@@104) ($generated@@72 $generated@@104)))
 :pattern ( ($generated@@72 $generated@@104) ($generated@@33 $generated@@28 $generated@@104 ($generated@@29 $generated@@103)))
 :pattern ( ($generated@@39 $generated@@104) ($generated@@33 $generated@@28 $generated@@104 ($generated@@29 $generated@@103)))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@105 T@U) ($generated@@106 Int) ) (!  (=> (or ($generated@@88 ($generated@@53 $generated@@28 $generated@@105) ($generated@@51 $generated@@106)) (and (< 3 $generated@@35) (and ($generated@@33 $generated@@28 $generated@@105 ($generated@@29 $generated@@0)) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@36 ($generated@@37 $generated@@89) ($generated@@53 $generated@@28 $generated@@105)))))))) (= ($generated@@87 ($generated@@53 $generated@@28 $generated@@105) ($generated@@51 $generated@@106)) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true)))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@53 $generated@@28 $generated@@105) ($generated@@51 $generated@@106)))
))))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@57 $generated@@107 $generated@@0) (and (= ($generated@@63 $generated@@10 ($generated@@41 $generated@@10 $generated@@107)) $generated@@107) ($generated@@33 $generated@@10 ($generated@@41 $generated@@10 $generated@@107) $generated@@0)))
 :pattern ( ($generated@@57 $generated@@107 $generated@@0))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@57 $generated@@108 $generated) (and (= ($generated@@63 $generated@@9 ($generated@@41 $generated@@9 $generated@@108)) $generated@@108) ($generated@@33 $generated@@9 ($generated@@41 $generated@@9 $generated@@108) $generated)))
 :pattern ( ($generated@@57 $generated@@108 $generated))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@36 ($generated@@37 $generated@@109) $generated@@110) ($generated@@36 $generated@@109 $generated@@110))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@57 ($generated@@63 $generated@@113 $generated@@111) $generated@@112) ($generated@@33 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@57 ($generated@@63 $generated@@113 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@25 ($generated@@56 $generated@@114 $generated@@115)) $generated@@6)
 :pattern ( ($generated@@56 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@42 ($generated@@56 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@56 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@40 ($generated@@56 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@56 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@29 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@29 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@41 $generated@@123 ($generated@@63 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@63 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (< ($generated@@124 $generated@@126) ($generated@@125 ($generated@@56 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@56 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (< ($generated@@125 $generated@@129) ($generated@@125 ($generated@@56 $generated@@128 $generated@@129)))
 :pattern ( ($generated@@56 $generated@@128 $generated@@129))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@130 T@U) ($generated@@131 Int) ($generated@@132 T@U) ) (!  (=> (or ($generated@@62 $generated@@131 $generated@@132) (and (< 1 $generated@@35) ($generated@@33 $generated@@28 $generated@@132 ($generated@@29 $generated@@0)))) ($generated@@33 $generated@@28 ($generated@@61 $generated@@130 $generated@@131 $generated@@132) ($generated@@29 $generated@@0)))
 :pattern ( ($generated@@61 $generated@@130 $generated@@131 $generated@@132))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@30 $generated@@135) (and ($generated@@72 $generated@@133) ($generated@@27 $generated@@28 $generated@@133 ($generated@@29 $generated@@134) $generated@@135))) ($generated@@80 ($generated@@42 $generated@@133) $generated@@134 $generated@@135))
 :pattern ( ($generated@@80 ($generated@@42 $generated@@133) $generated@@134 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@136 $generated@@147 $generated@@148 $generated@@149 ($generated@@143 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@136 $generated@@154 $generated@@155 $generated@@156 ($generated@@143 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@136 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@136 $generated@@163 $generated@@164 $generated@@165 ($generated@@143 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (= ($generated@@8 $generated@@137) 4)) (= ($generated@@8 $generated@@138) 5)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@140 $generated@@172 $generated@@173 ($generated@@144 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@176) $generated@@174)
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@181 $generated@@182) (= ($generated@@140 $generated@@177 $generated@@178 ($generated@@144 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@182) ($generated@@140 $generated@@177 $generated@@178 $generated@@180 $generated@@182)))
 :weight 0
))) (= ($generated@@8 $generated@@141) 6)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@8 ($generated@@142 $generated@@183 $generated@@184)) 7))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@145 ($generated@@142 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@142 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@146 ($generated@@142 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@142 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@13 ($generated@@136 $generated@@137 $generated@@138 $generated@@9 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@13 ($generated@@41 $generated@@9 ($generated@@140 $generated@@138 $generated@@141 ($generated@@140 $generated@@137 ($generated@@142 $generated@@138 $generated@@141) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@9 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@124 ($generated@@63 $generated@@28 $generated@@195)) ($generated@@125 $generated@@195))
 :pattern ( ($generated@@124 ($generated@@63 $generated@@28 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@57 $generated@@197 ($generated@@29 $generated@@196)) (and (= ($generated@@63 $generated@@28 ($generated@@41 $generated@@28 $generated@@197)) $generated@@197) ($generated@@33 $generated@@28 ($generated@@41 $generated@@28 $generated@@197) ($generated@@29 $generated@@196))))
 :pattern ( ($generated@@57 $generated@@197 ($generated@@29 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@30 $generated@@200) (and ($generated@@72 $generated@@198) ($generated@@27 $generated@@28 $generated@@198 ($generated@@29 $generated@@199) $generated@@200))) ($generated@@27 $generated@@28 ($generated@@40 $generated@@198) ($generated@@29 $generated@@199) $generated@@200))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@40 $generated@@198) ($generated@@29 $generated@@199) $generated@@200))
)))
(assert (= $generated@@26 ($generated@@53 $generated@@28 $generated@@26)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@56 ($generated@@53 $generated@@141 $generated@@201) ($generated@@53 $generated@@28 $generated@@202)) ($generated@@53 $generated@@28 ($generated@@56 $generated@@201 $generated@@202)))
 :pattern ( ($generated@@56 ($generated@@53 $generated@@141 $generated@@201) ($generated@@53 $generated@@28 $generated@@202)))
)))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@63 $generated@@10 ($generated@@14 ($generated@@51 $generated@@203))) ($generated@@53 $generated@@141 ($generated@@63 $generated@@10 ($generated@@14 $generated@@203))))
 :pattern ( ($generated@@63 $generated@@10 ($generated@@14 ($generated@@51 $generated@@203))))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@T) ) (! (= ($generated@@63 $generated@@205 ($generated@@53 $generated@@205 $generated@@204)) ($generated@@53 $generated@@141 ($generated@@63 $generated@@205 $generated@@204)))
 :pattern ( ($generated@@63 $generated@@205 ($generated@@53 $generated@@205 $generated@@204)))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@206 T@U) ($generated@@207 Int) ) (!  (=> (or ($generated@@88 $generated@@206 $generated@@207) (and (< 3 $generated@@35) (and ($generated@@33 $generated@@28 $generated@@206 ($generated@@29 $generated@@0)) ($generated@@36 ($generated@@37 $generated@@89) $generated@@206)))) (= ($generated@@87 $generated@@206 $generated@@207) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true)))))
 :pattern ( ($generated@@87 $generated@@206 $generated@@207))
))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! ($generated@@27 $generated@@10 $generated@@209 $generated@@0 $generated@@208)
 :pattern ( ($generated@@27 $generated@@10 $generated@@209 $generated@@0 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! ($generated@@27 $generated@@9 $generated@@211 $generated $generated@@210)
 :pattern ( ($generated@@27 $generated@@9 $generated@@211 $generated $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@30 $generated@@215) (= ($generated@@27 $generated@@28 ($generated@@56 $generated@@213 $generated@@214) ($generated@@29 $generated@@212) $generated@@215)  (and ($generated@@80 $generated@@213 $generated@@212 $generated@@215) ($generated@@27 $generated@@28 $generated@@214 ($generated@@29 $generated@@212) $generated@@215))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@56 $generated@@213 $generated@@214) ($generated@@29 $generated@@212) $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ) (! ($generated@@33 $generated@@10 $generated@@216 $generated@@0)
 :pattern ( ($generated@@33 $generated@@10 $generated@@216 $generated@@0))
)))
(assert (forall (($generated@@217 T@U) ) (! ($generated@@33 $generated@@9 $generated@@217 $generated)
 :pattern ( ($generated@@33 $generated@@9 $generated@@217 $generated))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@218 T@U) ($generated@@219 Int) ($generated@@220 T@U) ) (!  (=> (or ($generated@@62 $generated@@219 $generated@@220) (and (< 1 $generated@@35) ($generated@@33 $generated@@28 $generated@@220 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@39 $generated@@220)) (let (($generated@@221 ($generated@@40 $generated@@220)))
(let (($generated@@222 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@220)))))
 (=> (< $generated@@222 $generated@@219) ($generated@@62 $generated@@219 $generated@@221))))) (= ($generated@@61 ($generated@@37 $generated@@218) $generated@@219 $generated@@220) (ite ($generated@@39 $generated@@220) ($generated@@56 ($generated@@63 $generated@@10 ($generated@@14 $generated@@219)) ($generated@@53 $generated@@28 $generated@@26)) (let (($generated@@223 ($generated@@40 $generated@@220)))
(let (($generated@@224 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@220)))))
(ite (<= $generated@@219 $generated@@224) ($generated@@56 ($generated@@63 $generated@@10 ($generated@@14 $generated@@219)) $generated@@220) ($generated@@56 ($generated@@63 $generated@@10 ($generated@@14 $generated@@224)) ($generated@@61 $generated@@218 $generated@@219 $generated@@223)))))))))
 :pattern ( ($generated@@61 ($generated@@37 $generated@@218) $generated@@219 $generated@@220))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@232  (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (or ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (=> ($generated@@39 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true))))))) (=> (=> ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (or ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (=> ($generated@@39 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (or ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (=> (not ($generated@@39 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226))) (let (($generated@@233 ($generated@@40 ($generated@@61 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@225 $generated@@226))))
 (=> ($generated@@39 $generated@@233) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true))))))))) (=> (=> ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (or ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (=> (not ($generated@@39 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226))) (let (($generated@@234 ($generated@@40 ($generated@@61 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@225 $generated@@226))))
 (=> ($generated@@39 $generated@@234) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true)))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (or ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (=> (not ($generated@@39 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226))) (let (($generated@@235 ($generated@@40 ($generated@@61 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@225 $generated@@226))))
(let (($generated@@236 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 ($generated@@61 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@225 $generated@@226))))))
 (=> (not ($generated@@39 $generated@@235)) (let (($generated@@237 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@235)))))
(<= $generated@@236 $generated@@237))))))))) (=> (=> ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (or ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (=> (not ($generated@@39 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226))) (let (($generated@@238 ($generated@@40 ($generated@@61 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@225 $generated@@226))))
(let (($generated@@239 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 ($generated@@61 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@225 $generated@@226))))))
 (=> (not ($generated@@39 $generated@@238)) (let (($generated@@240 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@238)))))
(<= $generated@@239 $generated@@240)))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (or ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (=> (not ($generated@@39 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226))) (let (($generated@@241 ($generated@@40 ($generated@@61 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@225 $generated@@226))))
 (=> (not ($generated@@39 $generated@@241)) ($generated@@36 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@241)))))))))))))))
(let (($generated@@242  (and (=> (= (ControlFlow 0 7) (- 0 11)) (=> ($generated@@38 $generated@@226) (or ($generated@@36 ($generated@@37 $generated@@89) $generated@@226) (=> ($generated@@39 $generated@@226) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true))))))) (=> (=> ($generated@@38 $generated@@226) (or ($generated@@36 ($generated@@37 $generated@@89) $generated@@226) (=> ($generated@@39 $generated@@226) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true)))))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (=> ($generated@@38 $generated@@226) (or ($generated@@36 ($generated@@37 $generated@@89) $generated@@226) (=> (not ($generated@@39 $generated@@226)) (let (($generated@@243 ($generated@@40 $generated@@226)))
 (=> ($generated@@39 $generated@@243) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true))))))))) (=> (=> ($generated@@38 $generated@@226) (or ($generated@@36 ($generated@@37 $generated@@89) $generated@@226) (=> (not ($generated@@39 $generated@@226)) (let (($generated@@244 ($generated@@40 $generated@@226)))
 (=> ($generated@@39 $generated@@244) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true)))))))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> ($generated@@38 $generated@@226) (or ($generated@@36 ($generated@@37 $generated@@89) $generated@@226) (=> (not ($generated@@39 $generated@@226)) (let (($generated@@245 ($generated@@40 $generated@@226)))
(let (($generated@@246 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@226)))))
 (=> (not ($generated@@39 $generated@@245)) (let (($generated@@247 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@245)))))
(<= $generated@@246 $generated@@247))))))))) (=> (=> ($generated@@38 $generated@@226) (or ($generated@@36 ($generated@@37 $generated@@89) $generated@@226) (=> (not ($generated@@39 $generated@@226)) (let (($generated@@248 ($generated@@40 $generated@@226)))
(let (($generated@@249 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@226)))))
 (=> (not ($generated@@39 $generated@@248)) (let (($generated@@250 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@248)))))
(<= $generated@@249 $generated@@250)))))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@38 $generated@@226) (or ($generated@@36 ($generated@@37 $generated@@89) $generated@@226) (=> (not ($generated@@39 $generated@@226)) (let (($generated@@251 ($generated@@40 $generated@@226)))
 (=> (not ($generated@@39 $generated@@251)) ($generated@@36 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@251))))))) (=> (=> ($generated@@38 $generated@@226) (or ($generated@@36 ($generated@@37 $generated@@89) $generated@@226) (=> (not ($generated@@39 $generated@@226)) (let (($generated@@252 ($generated@@40 $generated@@226)))
 (=> (not ($generated@@39 $generated@@252)) ($generated@@36 ($generated@@37 ($generated@@37 $generated@@89)) $generated@@252)))))) (=> (and ($generated@@30 $generated@@227) ($generated@@228 $generated@@227)) (=> (and (and (and ($generated@@62 $generated@@225 $generated@@226) ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226))) (and ($generated@@38 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (and ($generated@@36 ($generated@@37 $generated@@89) ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) (ite ($generated@@39 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226)) true (let (($generated@@253 ($generated@@40 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226))))
(let (($generated@@254 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 ($generated@@61 ($generated@@37 $generated@@89) $generated@@225 $generated@@226))))))
(ite ($generated@@39 $generated@@253) true (let (($generated@@255 ($generated@@15 ($generated@@41 $generated@@10 ($generated@@42 $generated@@253)))))
 (and (<= $generated@@254 $generated@@255) ($generated@@36 ($generated@@37 $generated@@89) $generated@@253)))))))))) (and (and (= $generated@@229 $generated@@227) (= ($generated@@87 $generated@@226 $generated@@225) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 true))))) (and ($generated@@33 $generated@@9 ($generated@@12 ($generated@@87 $generated@@226 $generated@@225)) $generated) (= (ControlFlow 0 7) 3)))) $generated@@232))))))))))))
(let (($generated@@256 true))
(let (($generated@@257  (=> (and (and (= $generated@@230 ($generated@@139 $generated@@231 $generated@@229 $generated@@3 false)) ($generated@@27 $generated@@28 $generated@@226 ($generated@@29 $generated@@0) $generated@@229)) (and ($generated@@38 $generated@@226) ($generated@@36 ($generated@@37 $generated@@89) $generated@@226))) (and (=> (= (ControlFlow 0 12) 1) $generated@@256) (=> (= (ControlFlow 0 12) 7) $generated@@242)))))
(let (($generated@@258  (=> (and (and (and ($generated@@30 $generated@@229) ($generated@@228 $generated@@229)) ($generated@@33 $generated@@28 $generated@@226 ($generated@@29 $generated@@0))) (and (= 3 $generated@@35) (= (ControlFlow 0 13) 12))) $generated@@257)))
$generated@@258))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
