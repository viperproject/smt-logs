(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@37 (Int) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@61 () Int)
(declare-fun $generated@@62 (Bool T@U T@U) Bool)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@U)
(declare-fun $generated@@95 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@T T@T) T@T)
(declare-fun $generated@@99 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@1))
(assert (= ($generated@@22 $generated@@0) $generated@@2))
(assert (forall (($generated@@25 T@U) ) (!  (not ($generated@@23 $generated@@24 $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25))
)))
(assert (= ($generated@@6 $generated@@27) 3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (and ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31 $generated@@32)) (forall (($generated@@35 T@U) ) (!  (=> ($generated@@29 $generated@@35 $generated@@33) ($generated@@29 $generated@@35 $generated@@31))
 :pattern ( ($generated@@29 $generated@@35 $generated@@33))
 :pattern ( ($generated@@29 $generated@@35 $generated@@31))
))) (forall (($generated@@36 T@U) ) (!  (=> ($generated@@29 $generated@@36 $generated@@32) ($generated@@29 $generated@@36 $generated@@34))
 :pattern ( ($generated@@29 $generated@@36 $generated@@32))
 :pattern ( ($generated@@29 $generated@@36 $generated@@34))
))) ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@33 $generated@@34)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@31 $generated@@32)) ($generated@@26 $generated@@27 $generated@@30 ($generated@@28 $generated@@33 $generated@@34)))
)))
(assert (forall (($generated@@38 Int) ) (! (= ($generated@@37 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@41 $generated@@40))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and ($generated@@44 $generated@@48) (and ($generated@@29 $generated@@50 $generated@@46) ($generated@@26 $generated@@27 $generated@@49 ($generated@@28 $generated@@46 $generated@@47)))) (= ($generated@@45 ($generated@@42 $generated@@46 $generated@@47 $generated@@43 $generated@@49 $generated@@50) $generated@@24) ($generated@@45 ($generated@@42 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50) $generated@@24)))
 :pattern ( ($generated@@42 $generated@@46 $generated@@47 $generated@@43 $generated@@49 $generated@@50) ($generated@@44 $generated@@48))
 :pattern ( ($generated@@42 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 ($generated@@51 $generated@@54 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@51 $generated@@54 $generated@@53))
)))
(assert ($generated@@44 $generated@@43))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@60 $generated@@57) $generated@@58 $generated@@59) ($generated@@56 $generated@@60 $generated@@57 $generated@@58 $generated@@59))
 :pattern ( ($generated@@55 ($generated@@52 $generated@@60 $generated@@57) $generated@@58 $generated@@59))
)))
(assert  (=> (<= 0 $generated@@61) (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@63 $generated@@65 $generated@@66) (and (< 0 $generated@@61) (and (and ($generated@@44 $generated@@65) ($generated@@26 $generated@@27 $generated@@66 ($generated@@28 $generated@@0 $generated))) ($generated@@64 $generated@@0 $generated $generated@@65 $generated@@66 ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 0))))))) (= ($generated@@62 true $generated@@65 $generated@@66) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@10 true)))))
 :pattern ( ($generated@@62 true $generated@@65 $generated@@66) ($generated@@44 $generated@@65))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and ($generated@@44 $generated@@71) ($generated@@56 $generated@@27 $generated@@68 ($generated@@28 $generated@@69 $generated@@70) $generated@@71)) (forall (($generated@@72 T@U) ) (!  (=> (and ($generated@@55 $generated@@72 $generated@@69 $generated@@71) ($generated@@64 $generated@@69 $generated@@70 $generated@@71 $generated@@68 $generated@@72)) ($generated@@55 ($generated@@67 $generated@@69 $generated@@70 $generated@@71 $generated@@68 $generated@@72) $generated@@70 $generated@@71))
 :pattern ( ($generated@@67 $generated@@69 $generated@@70 $generated@@71 $generated@@68 $generated@@72))
)))
 :pattern ( ($generated@@56 $generated@@27 $generated@@68 ($generated@@28 $generated@@69 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@45 $generated@@73 $generated@@74) (= $generated@@73 $generated@@74))
 :pattern ( ($generated@@45 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@26 $generated@@27 $generated@@75 ($generated@@28 $generated@@76 $generated@@77)) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@78) ($generated@@29 $generated@@79 $generated@@76)) ($generated@@64 $generated@@76 $generated@@77 $generated@@78 $generated@@75 $generated@@79)) ($generated@@29 ($generated@@67 $generated@@76 $generated@@77 $generated@@78 $generated@@75 $generated@@79) $generated@@77))
 :pattern ( ($generated@@67 $generated@@76 $generated@@77 $generated@@78 $generated@@75 $generated@@79))
)))
 :pattern ( ($generated@@26 $generated@@27 $generated@@75 ($generated@@28 $generated@@76 $generated@@77)))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@29 $generated@@80 $generated@@0) (and (= ($generated@@52 $generated@@8 ($generated@@51 $generated@@8 $generated@@80)) $generated@@80) ($generated@@26 $generated@@8 ($generated@@51 $generated@@8 $generated@@80) $generated@@0)))
 :pattern ( ($generated@@29 $generated@@80 $generated@@0))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@29 $generated@@81 $generated) (and (= ($generated@@52 $generated@@7 ($generated@@51 $generated@@7 $generated@@81)) $generated@@81) ($generated@@26 $generated@@7 ($generated@@51 $generated@@7 $generated@@81) $generated)))
 :pattern ( ($generated@@29 $generated@@81 $generated))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@29 ($generated@@52 $generated@@84 $generated@@82) $generated@@83) ($generated@@26 $generated@@84 $generated@@82 $generated@@83))
 :pattern ( ($generated@@29 ($generated@@52 $generated@@84 $generated@@82) $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@28 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@28 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@28 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@28 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@51 $generated@@92 ($generated@@52 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@52 $generated@@92 $generated@@91))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@6 $generated@@93) 4) (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@95 $generated@@102 $generated@@103 ($generated@@99 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@104) $generated@@106) $generated@@104)
 :weight 0
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@95 $generated@@107 $generated@@108 ($generated@@99 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@95 $generated@@107 $generated@@108 $generated@@110 $generated@@112)))
 :weight 0
))) (= ($generated@@6 $generated@@96) 5)) (= ($generated@@6 $generated@@97) 6)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (= ($generated@@6 ($generated@@98 $generated@@113 $generated@@114)) 7))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@100 ($generated@@98 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@98 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@98 $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@44 $generated@@122) (= ($generated@@56 $generated@@27 $generated@@119 ($generated@@28 $generated@@120 $generated@@121) $generated@@122) (forall (($generated@@123 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@123 $generated@@120) ($generated@@55 $generated@@123 $generated@@120 $generated@@122)) ($generated@@64 $generated@@120 $generated@@121 $generated@@122 $generated@@119 $generated@@123)) (forall (($generated@@124 T@U) ) (!  (=> (and (or (not (= $generated@@124 $generated@@94)) (not true)) ($generated@@23 ($generated@@42 $generated@@120 $generated@@121 $generated@@122 $generated@@119 $generated@@123) ($generated@@52 $generated@@93 $generated@@124))) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@95 $generated@@96 $generated@@97 ($generated@@95 $generated@@93 ($generated@@98 $generated@@96 $generated@@97) $generated@@122 $generated@@124) $generated@@3))))
 :pattern ( ($generated@@23 ($generated@@42 $generated@@120 $generated@@121 $generated@@122 $generated@@119 $generated@@123) ($generated@@52 $generated@@93 $generated@@124)))
)))
 :pattern ( ($generated@@67 $generated@@120 $generated@@121 $generated@@122 $generated@@119 $generated@@123))
 :pattern ( ($generated@@42 $generated@@120 $generated@@121 $generated@@122 $generated@@119 $generated@@123))
))))
 :pattern ( ($generated@@56 $generated@@27 $generated@@119 ($generated@@28 $generated@@120 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@29 $generated@@127 ($generated@@28 $generated@@125 $generated@@126)) (and (= ($generated@@52 $generated@@27 ($generated@@51 $generated@@27 $generated@@127)) $generated@@127) ($generated@@26 $generated@@27 ($generated@@51 $generated@@27 $generated@@127) ($generated@@28 $generated@@125 $generated@@126))))
 :pattern ( ($generated@@29 $generated@@127 ($generated@@28 $generated@@125 $generated@@126)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (and (= ($generated@@22 ($generated@@28 $generated@@129 $generated@@130)) $generated@@4) (= ($generated@@128 ($generated@@28 $generated@@129 $generated@@130)) $generated@@5))
 :pattern ( ($generated@@28 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@133) (and ($generated@@29 $generated@@135 $generated@@131) ($generated@@26 $generated@@27 $generated@@134 ($generated@@28 $generated@@131 $generated@@132)))) ($generated@@45 ($generated@@42 $generated@@131 $generated@@132 $generated@@43 $generated@@134 $generated@@135) $generated@@24)) (= ($generated@@64 $generated@@131 $generated@@132 $generated@@43 $generated@@134 $generated@@135) ($generated@@64 $generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@64 $generated@@131 $generated@@132 $generated@@43 $generated@@134 $generated@@135) ($generated@@44 $generated@@133))
 :pattern ( ($generated@@64 $generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@45 $generated@@136 $generated@@137) (forall (($generated@@138 T@U) ) (! (= ($generated@@23 $generated@@136 $generated@@138) ($generated@@23 $generated@@137 $generated@@138))
 :pattern ( ($generated@@23 $generated@@136 $generated@@138))
 :pattern ( ($generated@@23 $generated@@137 $generated@@138))
)))
 :pattern ( ($generated@@45 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 $generated@@139))) ($generated@@39 $generated@@97 ($generated@@52 $generated@@8 ($generated@@12 $generated@@139))))
 :pattern ( ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 $generated@@139))))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@52 $generated@@141 ($generated@@39 $generated@@141 $generated@@140)) ($generated@@39 $generated@@97 ($generated@@52 $generated@@141 $generated@@140)))
 :pattern ( ($generated@@52 $generated@@141 ($generated@@39 $generated@@141 $generated@@140)))
)))
(assert  (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@142 $generated@@145 $generated@@146 $generated@@147 ($generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@142 $generated@@152 $generated@@153 $generated@@154 ($generated@@144 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@142 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@142 $generated@@161 $generated@@162 $generated@@163 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@142 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@11 ($generated@@142 $generated@@93 $generated@@96 $generated@@7 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@95 $generated@@96 $generated@@97 ($generated@@95 $generated@@93 ($generated@@98 $generated@@96 $generated@@97) $generated@@171 $generated@@174) $generated@@172)))) ($generated@@23 $generated@@173 ($generated@@52 $generated@@93 $generated@@174))))
 :pattern ( ($generated@@142 $generated@@93 $generated@@96 $generated@@7 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@56 $generated@@8 $generated@@177 $generated@@0 $generated@@176)
 :pattern ( ($generated@@56 $generated@@8 $generated@@177 $generated@@0 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@56 $generated@@7 $generated@@179 $generated $generated@@178)
 :pattern ( ($generated@@56 $generated@@7 $generated@@179 $generated $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! ($generated@@26 $generated@@8 $generated@@180 $generated@@0)
 :pattern ( ($generated@@26 $generated@@8 $generated@@180 $generated@@0))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@26 $generated@@7 $generated@@181 $generated)
 :pattern ( ($generated@@26 $generated@@7 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () Int)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@191 true))
(let (($generated@@192 true))
(let (($generated@@193  (=> (and (= $generated@@182 ($generated@@143 $generated@@94 $generated@@183 $generated@@3 ($generated@@42 $generated@@0 $generated $generated@@183 $generated@@184 ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 0)))))) ($generated@@55 ($generated@@52 $generated@@27 $generated@@184) ($generated@@28 $generated@@0 $generated) $generated@@183)) (=> (and (and (= $generated@@185 ($generated@@37 0)) ($generated@@56 $generated@@8 ($generated@@12 $generated@@185) $generated@@0 $generated@@183)) (and (= $generated@@186 (forall (($generated@@194 T@U) ($generated@@195 T@U) )  (=> (and (and (or (not (= $generated@@194 $generated@@94)) (not true)) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@95 $generated@@96 $generated@@97 ($generated@@95 $generated@@93 ($generated@@98 $generated@@96 $generated@@97) $generated@@183 $generated@@194) $generated@@3)))) ($generated@@23 ($generated@@42 $generated@@0 $generated $generated@@183 $generated@@184 ($generated@@52 $generated@@8 ($generated@@12 $generated@@185))) ($generated@@52 $generated@@93 $generated@@194))) ($generated@@11 ($generated@@142 $generated@@93 $generated@@96 $generated@@7 $generated@@182 $generated@@194 $generated@@195))))) ($generated@@64 $generated@@0 $generated $generated@@183 $generated@@184 ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 0)))))) (and (=> (= (ControlFlow 0 3) (- 0 7)) $generated@@186) (=> $generated@@186 (=> ($generated@@55 ($generated@@52 $generated@@27 $generated@@184) ($generated@@28 $generated@@0 $generated) $generated@@183) (=> (and (= $generated@@187 ($generated@@37 0)) ($generated@@56 $generated@@8 ($generated@@12 $generated@@187) $generated@@0 $generated@@183)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@64 $generated@@0 $generated $generated@@183 $generated@@184 ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 0))))) (=> ($generated@@64 $generated@@0 $generated $generated@@183 $generated@@184 ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 0)))) (=> (= $generated@@188 (forall (($generated@@196 T@U) ($generated@@197 T@U) )  (=> (and (and (or (not (= $generated@@196 $generated@@94)) (not true)) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@95 $generated@@96 $generated@@97 ($generated@@95 $generated@@93 ($generated@@98 $generated@@96 $generated@@97) $generated@@183 $generated@@196) $generated@@3)))) ($generated@@23 ($generated@@42 $generated@@0 $generated $generated@@183 $generated@@184 ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 0)))) ($generated@@52 $generated@@93 $generated@@196))) ($generated@@11 ($generated@@142 $generated@@93 $generated@@96 $generated@@7 $generated@@182 $generated@@196 $generated@@197))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@188) (=> $generated@@188 (=> ($generated@@55 ($generated@@52 $generated@@27 $generated@@184) ($generated@@28 $generated@@0 $generated) $generated@@183) (=> (and (= $generated@@189 ($generated@@37 0)) ($generated@@56 $generated@@8 ($generated@@12 $generated@@189) $generated@@0 $generated@@183)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@64 $generated@@0 $generated $generated@@183 $generated@@184 ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 0))))) (=> ($generated@@64 $generated@@0 $generated $generated@@183 $generated@@184 ($generated@@52 $generated@@8 ($generated@@12 ($generated@@37 0)))) (and (=> (= (ControlFlow 0 3) 1) $generated@@192) (=> (= (ControlFlow 0 3) 2) $generated@@191)))))))))))))))))))
(let (($generated@@198  (=> (and (and (and ($generated@@44 $generated@@183) ($generated@@190 $generated@@183)) ($generated@@26 $generated@@27 $generated@@184 ($generated@@28 $generated@@0 $generated))) (and (= 0 $generated@@61) (= (ControlFlow 0 8) 3))) $generated@@193)))
$generated@@198)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
