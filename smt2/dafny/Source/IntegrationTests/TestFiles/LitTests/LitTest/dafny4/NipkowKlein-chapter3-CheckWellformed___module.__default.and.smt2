(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@64 (Bool) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@99 (T@U) Int)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 (T@T T@T) T@T)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T) T@T)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@169 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@10 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@29 $generated@@31 $generated@@32) $generated@@30)  (and ($generated@@27 $generated@@28 $generated@@31 $generated@@30) ($generated@@27 $generated@@28 $generated@@32 $generated@@30)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@29 $generated@@31 $generated@@32) $generated@@30))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@33 $generated@@35 $generated@@36) $generated@@30)  (and ($generated@@27 $generated@@28 $generated@@35 $generated@@34) ($generated@@27 $generated@@28 $generated@@36 $generated@@34)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@33 $generated@@35 $generated@@36) $generated@@30))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@39 $generated@@40 $generated@@41) (and (< 3 $generated@@37) (and ($generated@@27 $generated@@28 $generated@@40 $generated@@30) ($generated@@27 $generated@@28 $generated@@41 $generated@@30)))) ($generated@@27 $generated@@28 ($generated@@38 $generated@@40 $generated@@41) $generated@@30))
 :pattern ( ($generated@@38 $generated@@40 $generated@@41))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 $generated@@43) $generated@@43)
 :pattern ( ($generated@@42 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@47 T@U) ) (! (= ($generated@@45 $generated@@47) (= ($generated@@46 $generated@@47) $generated@@4))
 :pattern ( ($generated@@45 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@48 $generated@@49) (= ($generated@@46 $generated@@49) $generated@@5))
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@46 $generated@@51) $generated@@6))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 $generated@@53) (= ($generated@@46 $generated@@53) $generated@@7))
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 ($generated@@54 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@54 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@50 $generated@@58) (exists (($generated@@59 T@U) ($generated@@60 T@U) ) (= $generated@@58 ($generated@@29 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@50 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@52 $generated@@61) (exists (($generated@@62 T@U) ($generated@@63 T@U) ) (= $generated@@61 ($generated@@33 $generated@@62 $generated@@63))))
 :pattern ( ($generated@@52 $generated@@61))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@45 $generated@@65) (exists (($generated@@66 Bool) ) (= $generated@@65 ($generated@@64 $generated@@66))))
 :pattern ( ($generated@@45 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@48 $generated@@68) (exists (($generated@@69 T@U) ) (= $generated@@68 ($generated@@67 $generated@@69))))
 :pattern ( ($generated@@48 $generated@@68))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@39 ($generated@@42 $generated@@28 $generated@@71) ($generated@@42 $generated@@28 $generated@@72)) (and (< 3 $generated@@37) (and ($generated@@27 $generated@@28 $generated@@71 $generated@@30) ($generated@@27 $generated@@28 $generated@@72 $generated@@30)))) (= ($generated@@38 ($generated@@42 $generated@@28 $generated@@71) ($generated@@42 $generated@@28 $generated@@72)) (ite ($generated@@45 ($generated@@42 $generated@@28 $generated@@71)) (ite ($generated@@70 ($generated@@42 $generated@@28 $generated@@71)) $generated@@72 $generated@@71) (ite ($generated@@45 ($generated@@42 $generated@@28 $generated@@72)) (ite ($generated@@70 ($generated@@42 $generated@@28 $generated@@72)) $generated@@71 $generated@@72) ($generated@@29 ($generated@@42 $generated@@28 $generated@@71) ($generated@@42 $generated@@28 $generated@@72))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@42 $generated@@28 $generated@@71) ($generated@@42 $generated@@28 $generated@@72)))
))))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@67 $generated@@73) $generated@@30) ($generated@@27 $generated@@28 $generated@@73 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@67 $generated@@73) $generated@@30))
)))
(assert (forall (($generated@@74 Bool) ) (! (= ($generated@@70 ($generated@@64 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@64 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@46 ($generated@@29 $generated@@75 $generated@@76)) $generated@@6)
 :pattern ( ($generated@@29 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 ($generated@@29 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@29 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@80 ($generated@@29 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@29 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@46 ($generated@@33 $generated@@83 $generated@@84)) $generated@@7)
 :pattern ( ($generated@@33 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@33 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@33 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@33 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@33 $generated@@89 $generated@@90))
)))
(assert  (=> (<= 3 $generated@@37) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@39 $generated@@91 $generated@@92) (and (< 3 $generated@@37) (and ($generated@@27 $generated@@28 $generated@@91 $generated@@30) ($generated@@27 $generated@@28 $generated@@92 $generated@@30)))) (= ($generated@@38 $generated@@91 $generated@@92) (ite ($generated@@45 $generated@@91) (ite ($generated@@70 $generated@@91) $generated@@92 $generated@@91) (ite ($generated@@45 $generated@@92) (ite ($generated@@70 $generated@@92) $generated@@91 $generated@@92) ($generated@@29 $generated@@91 $generated@@92)))))
 :pattern ( ($generated@@38 $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@93 Bool) ) (! (= ($generated@@46 ($generated@@64 $generated@@93)) $generated@@4)
 :pattern ( ($generated@@64 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@46 ($generated@@67 $generated@@94)) $generated@@5)
 :pattern ( ($generated@@67 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 ($generated@@67 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@67 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@54 $generated@@98 ($generated@@55 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@55 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (< ($generated@@99 $generated@@100) ($generated@@99 ($generated@@29 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@29 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@99 $generated@@103) ($generated@@99 ($generated@@29 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@29 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (< ($generated@@99 $generated@@104) ($generated@@99 ($generated@@33 $generated@@104 $generated@@105)))
 :pattern ( ($generated@@33 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (< ($generated@@99 $generated@@107) ($generated@@99 ($generated@@33 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@33 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 Bool) ) (! (= ($generated@@27 $generated@@28 ($generated@@64 $generated@@108) $generated@@30) ($generated@@27 $generated@@11 ($generated@@14 $generated@@108) $generated))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@64 $generated@@108) $generated@@30))
)))
(assert (forall (($generated@@109 T@U) ) (! (< ($generated@@99 $generated@@109) ($generated@@99 ($generated@@67 $generated@@109)))
 :pattern ( ($generated@@67 $generated@@109))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@110 $generated@@121 $generated@@122 $generated@@123 ($generated@@117 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@126 $generated@@127) $generated@@124)
 :weight 0
)) (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@110 $generated@@128 $generated@@129 $generated@@130 ($generated@@117 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@110 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@110 $generated@@137 $generated@@138 $generated@@139 ($generated@@117 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@110 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))) (= ($generated@@10 $generated@@111) 4)) (= ($generated@@10 $generated@@112) 5)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@114 $generated@@146 $generated@@147 ($generated@@118 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@148) $generated@@150) $generated@@148)
 :weight 0
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@155 $generated@@156) (= ($generated@@114 $generated@@151 $generated@@152 ($generated@@118 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@153) $generated@@156) ($generated@@114 $generated@@151 $generated@@152 $generated@@154 $generated@@156)))
 :weight 0
))) (= ($generated@@10 $generated@@115) 6)) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (= ($generated@@10 ($generated@@116 $generated@@157 $generated@@158)) 7))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@119 ($generated@@116 $generated@@159 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@116 $generated@@159 $generated@@160))
))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@120 ($generated@@116 $generated@@161 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@116 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Bool) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@15 ($generated@@110 $generated@@111 $generated@@112 $generated@@11 ($generated@@113 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))  (=> (and (or (not (= $generated@@167 $generated@@163)) (not true)) ($generated@@15 ($generated@@54 $generated@@11 ($generated@@114 $generated@@112 $generated@@115 ($generated@@114 $generated@@111 ($generated@@116 $generated@@112 $generated@@115) $generated@@164 $generated@@167) $generated@@165)))) $generated@@166))
 :pattern ( ($generated@@110 $generated@@111 $generated@@112 $generated@@11 ($generated@@113 $generated@@163 $generated@@164 $generated@@165 $generated@@166) $generated@@167 $generated@@168))
)))
(assert (= ($generated@@26 $generated@@34) $generated@@2))
(assert (= ($generated@@169 $generated@@34) $generated@@8))
(assert (= ($generated@@26 $generated@@30) $generated@@3))
(assert (= ($generated@@169 $generated@@30) $generated@@9))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@29 ($generated@@42 $generated@@28 $generated@@170) ($generated@@42 $generated@@28 $generated@@171)) ($generated@@42 $generated@@28 ($generated@@29 $generated@@170 $generated@@171)))
 :pattern ( ($generated@@29 ($generated@@42 $generated@@28 $generated@@170) ($generated@@42 $generated@@28 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@33 ($generated@@42 $generated@@28 $generated@@172) ($generated@@42 $generated@@28 $generated@@173)) ($generated@@42 $generated@@28 ($generated@@33 $generated@@172 $generated@@173)))
 :pattern ( ($generated@@33 ($generated@@42 $generated@@28 $generated@@172) ($generated@@42 $generated@@28 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@64 ($generated@@15 ($generated@@42 $generated@@11 $generated@@174))) ($generated@@42 $generated@@28 ($generated@@64 ($generated@@15 $generated@@174))))
 :pattern ( ($generated@@64 ($generated@@15 ($generated@@42 $generated@@11 $generated@@174))))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@67 ($generated@@42 $generated@@28 $generated@@175)) ($generated@@42 $generated@@28 ($generated@@67 $generated@@175)))
 :pattern ( ($generated@@67 ($generated@@42 $generated@@28 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@55 $generated@@177 ($generated@@42 $generated@@177 $generated@@176)) ($generated@@42 $generated@@115 ($generated@@55 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@55 $generated@@177 ($generated@@42 $generated@@177 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@178 $generated@@30) (or (or (or ($generated@@45 $generated@@178) ($generated@@48 $generated@@178)) ($generated@@50 $generated@@178)) ($generated@@52 $generated@@178)))
 :pattern ( ($generated@@52 $generated@@178) ($generated@@27 $generated@@28 $generated@@178 $generated@@30))
 :pattern ( ($generated@@50 $generated@@178) ($generated@@27 $generated@@28 $generated@@178 $generated@@30))
 :pattern ( ($generated@@48 $generated@@178) ($generated@@27 $generated@@28 $generated@@178 $generated@@30))
 :pattern ( ($generated@@45 $generated@@178) ($generated@@27 $generated@@28 $generated@@178 $generated@@30))
)))
(assert (forall (($generated@@179 T@U) ) (! ($generated@@27 $generated@@11 $generated@@179 $generated)
 :pattern ( ($generated@@27 $generated@@11 $generated@@179 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@187 true))
(let (($generated@@188 true))
(let (($generated@@189  (=> ($generated@@45 $generated@@180) (and (=> (= (ControlFlow 0 10) (- 0 11)) ($generated@@45 $generated@@180)) (=> ($generated@@45 $generated@@180) (and (=> (= (ControlFlow 0 10) 8) $generated@@188) (=> (= (ControlFlow 0 10) 9) $generated@@187)))))))
(let (($generated@@190 true))
(let (($generated@@191 true))
(let (($generated@@192  (=> ($generated@@45 $generated@@181) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@45 $generated@@181)) (=> ($generated@@45 $generated@@181) (and (=> (= (ControlFlow 0 5) 3) $generated@@191) (=> (= (ControlFlow 0 5) 4) $generated@@190)))))))
(let (($generated@@193 true))
(let (($generated@@194  (=> (not ($generated@@45 $generated@@180)) (and (=> (= (ControlFlow 0 7) 5) $generated@@192) (=> (= (ControlFlow 0 7) 2) $generated@@193)))))
(let (($generated@@195 true))
(let (($generated@@196  (=> (= $generated@@182 ($generated@@113 $generated@@183 $generated@@184 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@195) (=> (= (ControlFlow 0 12) 10) $generated@@189)) (=> (= (ControlFlow 0 12) 7) $generated@@194)))))
(let (($generated@@197  (=> (and ($generated@@185 $generated@@184) ($generated@@186 $generated@@184)) (=> (and (and ($generated@@27 $generated@@28 $generated@@180 $generated@@30) ($generated@@27 $generated@@28 $generated@@181 $generated@@30)) (and (= 3 $generated@@37) (= (ControlFlow 0 13) 12))) $generated@@196))))
$generated@@197))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
