(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@19 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@T T@T) T@T)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@25 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@T) T@T)
(declare-fun $generated@@27 (T@T) T@T)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@64 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@66 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert  (and (and (and (and (and (and (and (forall (($generated@@28 T@T) ($generated@@29 T@T) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@19 $generated@@28 $generated@@29 ($generated@@25 $generated@@28 $generated@@29 $generated@@31 $generated@@32 $generated@@30) $generated@@32) $generated@@30)
 :weight 0
)) (forall (($generated@@33 T@T) ($generated@@34 T@T) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (or (= $generated@@37 $generated@@38) (= ($generated@@19 $generated@@33 $generated@@34 ($generated@@25 $generated@@33 $generated@@34 $generated@@36 $generated@@37 $generated@@35) $generated@@38) ($generated@@19 $generated@@33 $generated@@34 $generated@@36 $generated@@38)))
 :weight 0
))) (= ($generated@@2 $generated@@20) 3)) (= ($generated@@2 $generated@@21) 4)) (= ($generated@@2 $generated@@22) 5)) (forall (($generated@@39 T@T) ($generated@@40 T@T) ) (= ($generated@@2 ($generated@@23 $generated@@39 $generated@@40)) 6))) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (! (= ($generated@@26 ($generated@@23 $generated@@41 $generated@@42)) $generated@@41)
 :pattern ( ($generated@@23 $generated@@41 $generated@@42))
))) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (! (= ($generated@@27 ($generated@@23 $generated@@43 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@23 $generated@@43 $generated@@44))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@18 $generated@@45 $generated@@46) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@45 $generated@@47) $generated))) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@46 $generated@@47) $generated))))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@46 $generated@@47) $generated))
)))
 :pattern ( ($generated@@18 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@24 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@24 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@56 $generated@@4 $generated@@58 $generated@@57) (<= ($generated@@48 1) ($generated@@9 $generated@@58)))
 :pattern ( ($generated@@56 $generated@@4 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or (not (= $generated@@59 $generated@@61)) (not true)) (=> (and ($generated@@18 $generated@@59 $generated@@60) ($generated@@18 $generated@@60 $generated@@61)) ($generated@@18 $generated@@59 $generated@@61)))
 :pattern ( ($generated@@18 $generated@@59 $generated@@60) ($generated@@18 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@24 $generated@@63 ($generated@@53 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@53 $generated@@63 $generated@@62))
)))
(assert  (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@64 $generated@@67 $generated@@68 $generated@@69 ($generated@@66 $generated@@67 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@73 $generated@@70) $generated@@72 $generated@@73) $generated@@70)
 :weight 0
)) (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@79 $generated@@81) (= ($generated@@64 $generated@@74 $generated@@75 $generated@@76 ($generated@@66 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@80 $generated@@77) $generated@@81 $generated@@82) ($generated@@64 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@81 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or (= $generated@@89 $generated@@91) (= ($generated@@64 $generated@@83 $generated@@84 $generated@@85 ($generated@@66 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86) $generated@@90 $generated@@91) ($generated@@64 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@90 $generated@@91)))
 :weight 0
)))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 Bool) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@7 ($generated@@64 $generated@@22 $generated@@20 $generated@@3 ($generated@@65 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@96 $generated@@97))  (=> (and (or (not (= $generated@@96 $generated@@92)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@93 $generated@@96) $generated@@94)))) $generated@@95))
 :pattern ( ($generated@@64 $generated@@22 $generated@@20 $generated@@3 ($generated@@65 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (= ($generated@@98 $generated@@57) $generated@@0))
(assert (= ($generated@@99 $generated@@57) $generated@@1))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@53 $generated@@4 ($generated@@8 ($generated@@48 $generated@@100))) ($generated@@50 $generated@@21 ($generated@@53 $generated@@4 ($generated@@8 $generated@@100))))
 :pattern ( ($generated@@53 $generated@@4 ($generated@@8 ($generated@@48 $generated@@100))))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@53 $generated@@102 ($generated@@50 $generated@@102 $generated@@101)) ($generated@@50 $generated@@21 ($generated@@53 $generated@@102 $generated@@101)))
 :pattern ( ($generated@@53 $generated@@102 ($generated@@50 $generated@@102 $generated@@101)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@103 () T@U)
(declare-fun $generated@@104 () T@U)
(declare-fun $generated@@105 () T@U)
(declare-fun $generated@@106 () Int)
(declare-fun $generated@@107 () Int)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@109 () T@U)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@111 () Int)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 () T@U)
(declare-fun $generated@@114 () Int)
(declare-fun $generated@@115 () Int)
(declare-fun $generated@@116 () T@U)
(declare-fun $generated@@117 () Int)
(declare-fun $generated@@118 () Int)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@120 () Int)
(declare-fun $generated@@121 () Int)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 () Int)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () T@U)
(declare-fun $generated@@126 () Int)
(declare-fun $generated@@127 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@128  (=> (= $generated@@103 ($generated@@65 $generated@@104 $generated@@105 $generated false)) (and (=> (= (ControlFlow 0 2) (- 0 15)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 15)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 15)) $generated@@57) (=> (= $generated@@106 ($generated@@48 15)) (and (=> (= (ControlFlow 0 2) (- 0 14)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 9)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 9)) $generated@@57) (=> (= $generated@@107 ($generated@@48 9)) (=> (and (and ($generated@@108 $generated@@109) ($generated@@110 $generated@@109)) (and (forall (($generated@@129 T@U) ) (!  (=> (and (or (not (= $generated@@129 $generated@@104)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@105 $generated@@129) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@109 $generated@@129) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@105 $generated@@129)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@109 $generated@@129))
)) ($generated@@18 $generated@@105 $generated@@109))) (and (=> (= (ControlFlow 0 2) (- 0 13)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 14)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 14)) $generated@@57) (=> (= $generated@@111 ($generated@@48 14)) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 22)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 22)) $generated@@57) (=> (= $generated@@112 ($generated@@48 22)) (=> (and (and ($generated@@108 $generated@@113) ($generated@@110 $generated@@113)) (and (forall (($generated@@130 T@U) ) (!  (=> (and (or (not (= $generated@@130 $generated@@104)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@109 $generated@@130) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@113 $generated@@130) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@109 $generated@@130)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@113 $generated@@130))
)) ($generated@@18 $generated@@109 $generated@@113))) (and (=> (= (ControlFlow 0 2) (- 0 11)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 371)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 371)) $generated@@57) (=> (= $generated@@114 ($generated@@48 371)) (and (=> (= (ControlFlow 0 2) (- 0 10)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 1)) $generated@@57) (=> (= $generated@@115 ($generated@@48 1)) (=> (and (and ($generated@@108 $generated@@116) ($generated@@110 $generated@@116)) (and (forall (($generated@@131 T@U) ) (!  (=> (and (or (not (= $generated@@131 $generated@@104)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@113 $generated@@131) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@116 $generated@@131) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@113 $generated@@131)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@116 $generated@@131))
)) ($generated@@18 $generated@@113 $generated@@116))) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 1)) $generated@@57) (=> (= $generated@@117 ($generated@@48 1)) (and (=> (= (ControlFlow 0 2) (- 0 8)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 2)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 2)) $generated@@57) (=> (= $generated@@118 ($generated@@48 2)) (=> (and (and ($generated@@108 $generated@@119) ($generated@@110 $generated@@119)) (and (forall (($generated@@132 T@U) ) (!  (=> (and (or (not (= $generated@@132 $generated@@104)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@116 $generated@@132) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@119 $generated@@132) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@116 $generated@@132)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@119 $generated@@132))
)) ($generated@@18 $generated@@116 $generated@@119))) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 1)) $generated@@57) (=> (= $generated@@120 ($generated@@48 1)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 1)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 1)) $generated@@57) (=> (= $generated@@121 ($generated@@48 1)) (=> (and (and ($generated@@108 $generated@@122) ($generated@@110 $generated@@122)) (and (forall (($generated@@133 T@U) ) (!  (=> (and (or (not (= $generated@@133 $generated@@104)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@119 $generated@@133) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@122 $generated@@133) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@119 $generated@@133)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@122 $generated@@133))
)) ($generated@@18 $generated@@119 $generated@@122))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 13)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 13)) $generated@@57) (=> (= $generated@@123 ($generated@@48 13)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 13)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 13)) $generated@@57) (=> (= $generated@@124 ($generated@@48 13)) (=> (and (and ($generated@@108 $generated@@125) ($generated@@110 $generated@@125)) (and (forall (($generated@@134 T@U) ) (!  (=> (and (or (not (= $generated@@134 $generated@@104)) (not true)) ($generated@@7 ($generated@@24 $generated@@3 ($generated@@19 $generated@@20 $generated@@21 ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@122 $generated@@134) $generated)))) (= ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@125 $generated@@134) ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@122 $generated@@134)))
 :pattern ( ($generated@@19 $generated@@22 ($generated@@23 $generated@@20 $generated@@21) $generated@@125 $generated@@134))
)) ($generated@@18 $generated@@122 $generated@@125))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 60)) $generated@@57)) (=> ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 60)) $generated@@57) (=> (and (= $generated@@126 ($generated@@48 60)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@56 $generated@@4 ($generated@@8 ($generated@@48 60)) $generated@@57)))))))))))))))))))))))))))))))))))))))))))))))))
(let (($generated@@135  (=> (and (and ($generated@@108 $generated@@105) ($generated@@110 $generated@@105)) (and (= 8 $generated@@127) (= (ControlFlow 0 16) 2))) $generated@@128)))
$generated@@135)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
