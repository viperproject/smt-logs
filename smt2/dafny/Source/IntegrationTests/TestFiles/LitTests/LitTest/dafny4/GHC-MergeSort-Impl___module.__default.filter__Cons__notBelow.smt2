(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@58 () Int)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Int)
(declare-fun $generated@@66 (T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@U) Int)
(declare-fun $generated@@130 (T@U) Int)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T) T@T)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@147 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert ($generated@@20 $generated@@21))
(assert (= ($generated@@22 $generated@@23) $generated@@1))
(assert (= ($generated@@4 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@27 $generated@@29) ($generated@@24 $generated@@25 $generated@@23 ($generated@@26 $generated@@28) $generated@@29))
 :pattern ( ($generated@@24 $generated@@25 $generated@@23 ($generated@@26 $generated@@28) $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ) (! ($generated@@30 $generated@@25 $generated@@23 ($generated@@26 $generated@@31))
 :pattern ( ($generated@@30 $generated@@25 $generated@@23 ($generated@@26 $generated@@31)))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@34) (= $generated@@33 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@35 $generated@@38) ($generated@@35 $generated@@39)) (= ($generated@@32 $generated@@38 $generated@@39)  (and (= ($generated@@36 $generated@@38) ($generated@@36 $generated@@39)) ($generated@@32 ($generated@@37 $generated@@38) ($generated@@37 $generated@@39)))))
 :pattern ( ($generated@@32 $generated@@38 $generated@@39) ($generated@@35 $generated@@38))
 :pattern ( ($generated@@32 $generated@@38 $generated@@39) ($generated@@35 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@30 $generated@@25 ($generated@@43 $generated@@46 $generated@@47) ($generated@@26 $generated@@45))  (and ($generated@@44 $generated@@46 $generated@@45) ($generated@@30 $generated@@25 $generated@@47 ($generated@@26 $generated@@45))))
 :pattern ( ($generated@@30 $generated@@25 ($generated@@43 $generated@@46 $generated@@47) ($generated@@26 $generated@@45)))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@48 $generated@@49) (= ($generated@@22 $generated@@49) $generated@@1))
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@35 $generated@@50) (= ($generated@@22 $generated@@50) $generated@@2))
 :pattern ( ($generated@@35 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 ($generated@@51 $generated@@54 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@51 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@35 $generated@@55) (exists (($generated@@56 T@U) ($generated@@57 T@U) ) (= $generated@@55 ($generated@@43 $generated@@56 $generated@@57))))
 :pattern ( ($generated@@35 $generated@@55))
)))
(assert (= ($generated@@4 $generated@@60) 4))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@61 ($generated@@40 $generated@@60 $generated@@64) ($generated@@40 $generated@@60 $generated@@65)) (and (< 1 $generated@@58) (and ($generated@@44 $generated@@64 $generated@@21) ($generated@@44 $generated@@65 $generated@@21)))) (and (and ($generated@@62 ($generated@@40 $generated@@60 $generated@@64)) ($generated@@62 ($generated@@40 $generated@@60 $generated@@65))) (= ($generated@@59 ($generated@@40 $generated@@60 $generated@@64) ($generated@@40 $generated@@60 $generated@@65)) (<= ($generated@@63 ($generated@@40 $generated@@60 $generated@@64)) ($generated@@63 ($generated@@40 $generated@@60 $generated@@65))))))
 :weight 3
 :pattern ( ($generated@@59 ($generated@@40 $generated@@60 $generated@@64) ($generated@@40 $generated@@60 $generated@@65)))
))))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@68 $generated@@70 ($generated@@40 $generated@@25 $generated@@71)) (and (< 1 $generated@@58) (and ($generated@@44 $generated@@70 $generated@@21) ($generated@@30 $generated@@25 $generated@@71 ($generated@@26 $generated@@21))))) (and (=> (not ($generated@@9 ($generated@@40 $generated@@5 ($generated@@8 ($generated@@48 ($generated@@40 $generated@@25 $generated@@71)))))) (let (($generated@@72 ($generated@@40 $generated@@25 ($generated@@37 ($generated@@40 $generated@@25 $generated@@71)))))
(let (($generated@@73 ($generated@@40 $generated@@60 ($generated@@36 ($generated@@40 $generated@@25 $generated@@71)))))
 (and (and (and ($generated@@62 $generated@@70) ($generated@@62 $generated@@73)) (=> (= ($generated@@63 $generated@@70) ($generated@@63 $generated@@73)) ($generated@@68 $generated@@70 $generated@@72))) (=> (or (not (= ($generated@@63 $generated@@70) ($generated@@63 $generated@@73))) (not true)) ($generated@@68 $generated@@70 $generated@@72)))))) (= ($generated@@66 ($generated@@67 $generated@@69) $generated@@70 ($generated@@40 $generated@@25 $generated@@71)) (ite ($generated@@48 ($generated@@40 $generated@@25 $generated@@71)) $generated@@23 (let (($generated@@74 ($generated@@40 $generated@@25 ($generated@@37 ($generated@@40 $generated@@25 $generated@@71)))))
(let (($generated@@75 ($generated@@40 $generated@@60 ($generated@@36 ($generated@@40 $generated@@25 $generated@@71)))))
(ite (= ($generated@@63 $generated@@70) ($generated@@63 $generated@@75)) ($generated@@43 $generated@@75 ($generated@@66 ($generated@@67 $generated@@69) $generated@@70 $generated@@74)) ($generated@@66 ($generated@@67 $generated@@69) $generated@@70 $generated@@74))))))))
 :weight 3
 :pattern ( ($generated@@66 ($generated@@67 $generated@@69) $generated@@70 ($generated@@40 $generated@@25 $generated@@71)))
))))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@48 $generated@@76) (= $generated@@76 $generated@@23))
 :pattern ( ($generated@@48 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@77 ($generated@@52 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@24 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@77 ($generated@@52 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@82 ($generated@@26 $generated@@84)) $generated@@0) (= ($generated@@83 ($generated@@26 $generated@@84)) $generated@@3))
 :pattern ( ($generated@@26 $generated@@84))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@61 $generated@@85 $generated@@86) (and (< 1 $generated@@58) (and ($generated@@44 $generated@@85 $generated@@21) ($generated@@44 $generated@@86 $generated@@21)))) (and (and ($generated@@62 $generated@@85) ($generated@@62 $generated@@86)) (= ($generated@@59 $generated@@85 $generated@@86) (<= ($generated@@63 $generated@@85) ($generated@@63 $generated@@86)))))
 :pattern ( ($generated@@59 $generated@@85 $generated@@86))
))))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or ($generated@@68 ($generated@@40 $generated@@60 $generated@@88) ($generated@@40 $generated@@25 $generated@@89)) (and (< 1 $generated@@58) (and ($generated@@44 $generated@@88 $generated@@21) ($generated@@30 $generated@@25 $generated@@89 ($generated@@26 $generated@@21))))) (and (=> (not ($generated@@9 ($generated@@40 $generated@@5 ($generated@@8 ($generated@@48 ($generated@@40 $generated@@25 $generated@@89)))))) (let (($generated@@90 ($generated@@40 $generated@@25 ($generated@@37 ($generated@@40 $generated@@25 $generated@@89)))))
(let (($generated@@91 ($generated@@40 $generated@@60 ($generated@@36 ($generated@@40 $generated@@25 $generated@@89)))))
 (and (and (and ($generated@@62 ($generated@@40 $generated@@60 $generated@@88)) ($generated@@62 $generated@@91)) (=> (= ($generated@@63 ($generated@@40 $generated@@60 $generated@@88)) ($generated@@63 $generated@@91)) ($generated@@68 ($generated@@40 $generated@@60 $generated@@88) $generated@@90))) (=> (or (not (= ($generated@@63 ($generated@@40 $generated@@60 $generated@@88)) ($generated@@63 $generated@@91))) (not true)) ($generated@@68 ($generated@@40 $generated@@60 $generated@@88) $generated@@90)))))) (= ($generated@@66 ($generated@@67 $generated@@87) ($generated@@40 $generated@@60 $generated@@88) ($generated@@40 $generated@@25 $generated@@89)) (ite ($generated@@48 ($generated@@40 $generated@@25 $generated@@89)) $generated@@23 (let (($generated@@92 ($generated@@40 $generated@@25 ($generated@@37 ($generated@@40 $generated@@25 $generated@@89)))))
(let (($generated@@93 ($generated@@40 $generated@@60 ($generated@@36 ($generated@@40 $generated@@25 $generated@@89)))))
(ite (= ($generated@@63 ($generated@@40 $generated@@60 $generated@@88)) ($generated@@63 $generated@@93)) ($generated@@43 $generated@@93 ($generated@@40 $generated@@25 ($generated@@66 ($generated@@67 $generated@@87) ($generated@@40 $generated@@60 $generated@@88) $generated@@92))) ($generated@@66 ($generated@@67 $generated@@87) ($generated@@40 $generated@@60 $generated@@88) $generated@@92))))))))
 :weight 3
 :pattern ( ($generated@@66 ($generated@@67 $generated@@87) ($generated@@40 $generated@@60 $generated@@88) ($generated@@40 $generated@@25 $generated@@89)))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@66 ($generated@@67 $generated@@94) $generated@@95 $generated@@96) ($generated@@66 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@97 $generated@@98) (or ($generated@@48 $generated@@98) ($generated@@35 $generated@@98)))
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@68 $generated@@100 $generated@@101) (and (< 1 $generated@@58) (and ($generated@@44 $generated@@100 $generated@@21) ($generated@@30 $generated@@25 $generated@@101 ($generated@@26 $generated@@21))))) (and (=> (not ($generated@@48 $generated@@101)) (let (($generated@@102 ($generated@@37 $generated@@101)))
(let (($generated@@103 ($generated@@36 $generated@@101)))
 (and (and (and ($generated@@62 $generated@@100) ($generated@@62 $generated@@103)) (=> (= ($generated@@63 $generated@@100) ($generated@@63 $generated@@103)) ($generated@@68 $generated@@100 $generated@@102))) (=> (or (not (= ($generated@@63 $generated@@100) ($generated@@63 $generated@@103))) (not true)) ($generated@@68 $generated@@100 $generated@@102)))))) (= ($generated@@66 ($generated@@67 $generated@@99) $generated@@100 $generated@@101) (ite ($generated@@48 $generated@@101) $generated@@23 (let (($generated@@104 ($generated@@37 $generated@@101)))
(let (($generated@@105 ($generated@@36 $generated@@101)))
(ite (= ($generated@@63 $generated@@100) ($generated@@63 $generated@@105)) ($generated@@43 $generated@@105 ($generated@@66 $generated@@99 $generated@@100 $generated@@104)) ($generated@@66 $generated@@99 $generated@@100 $generated@@104))))))))
 :pattern ( ($generated@@66 ($generated@@67 $generated@@99) $generated@@100 $generated@@101))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@30 $generated@@25 $generated@@107 ($generated@@26 $generated@@106)) (or ($generated@@48 $generated@@107) ($generated@@35 $generated@@107)))
 :pattern ( ($generated@@35 $generated@@107) ($generated@@30 $generated@@25 $generated@@107 ($generated@@26 $generated@@106)))
 :pattern ( ($generated@@48 $generated@@107) ($generated@@30 $generated@@25 $generated@@107 ($generated@@26 $generated@@106)))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@68 $generated@@109 $generated@@110) (and (< 1 $generated@@58) (and ($generated@@44 $generated@@109 $generated@@21) ($generated@@30 $generated@@25 $generated@@110 ($generated@@26 $generated@@21))))) ($generated@@30 $generated@@25 ($generated@@66 $generated@@108 $generated@@109 $generated@@110) ($generated@@26 $generated@@21)))
 :pattern ( ($generated@@66 $generated@@108 $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@44 ($generated@@52 $generated@@113 $generated@@111) $generated@@112) ($generated@@30 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@44 ($generated@@52 $generated@@113 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@20 $generated@@114) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@44 $generated@@116 $generated@@114) ($generated@@77 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@77 $generated@@116 $generated@@114 $generated@@115))
)))
 :pattern ( ($generated@@20 $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@48 $generated@@117) ($generated@@48 $generated@@118)) ($generated@@32 $generated@@117 $generated@@118))
 :pattern ( ($generated@@32 $generated@@117 $generated@@118) ($generated@@48 $generated@@117))
 :pattern ( ($generated@@32 $generated@@117 $generated@@118) ($generated@@48 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@22 ($generated@@43 $generated@@119 $generated@@120)) $generated@@2)
 :pattern ( ($generated@@43 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@36 ($generated@@43 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@43 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@37 ($generated@@43 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@43 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@26 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@26 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@51 $generated@@128 ($generated@@52 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@52 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@129 $generated@@131) ($generated@@130 ($generated@@43 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@43 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (< ($generated@@130 $generated@@134) ($generated@@130 ($generated@@43 $generated@@133 $generated@@134)))
 :pattern ( ($generated@@43 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and ($generated@@27 $generated@@137) (and ($generated@@35 $generated@@135) ($generated@@24 $generated@@25 $generated@@135 ($generated@@26 $generated@@136) $generated@@137))) ($generated@@77 ($generated@@36 $generated@@135) $generated@@136 $generated@@137))
 :pattern ( ($generated@@77 ($generated@@36 $generated@@135) $generated@@136 $generated@@137))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@138 $generated@@148 $generated@@149 $generated@@150 ($generated@@144 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@153 $generated@@154) $generated@@151)
 :weight 0
)) (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@138 $generated@@155 $generated@@156 $generated@@157 ($generated@@144 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@138 $generated@@164 $generated@@165 $generated@@166 ($generated@@144 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@138 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)))) (= ($generated@@4 $generated@@139) 5)) (= ($generated@@4 $generated@@140) 6)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@142 $generated@@173 $generated@@174 ($generated@@145 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@175) $generated@@177) $generated@@175)
 :weight 0
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@182 $generated@@183) (= ($generated@@142 $generated@@178 $generated@@179 ($generated@@145 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@180) $generated@@183) ($generated@@142 $generated@@178 $generated@@179 $generated@@181 $generated@@183)))
 :weight 0
))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (= ($generated@@4 ($generated@@143 $generated@@184 $generated@@185)) 7))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@146 ($generated@@143 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@143 $generated@@186 $generated@@187))
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@147 ($generated@@143 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@143 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 Bool) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@9 ($generated@@138 $generated@@139 $generated@@140 $generated@@5 ($generated@@141 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@194 $generated@@195))  (=> (and (or (not (= $generated@@194 $generated@@190)) (not true)) ($generated@@9 ($generated@@51 $generated@@5 ($generated@@142 $generated@@140 $generated@@60 ($generated@@142 $generated@@139 ($generated@@143 $generated@@140 $generated@@60) $generated@@191 $generated@@194) $generated@@192)))) $generated@@193))
 :pattern ( ($generated@@138 $generated@@139 $generated@@140 $generated@@5 ($generated@@141 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@129 ($generated@@52 $generated@@25 $generated@@196)) ($generated@@130 $generated@@196))
 :pattern ( ($generated@@129 ($generated@@52 $generated@@25 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@44 $generated@@198 ($generated@@26 $generated@@197)) (and (= ($generated@@52 $generated@@25 ($generated@@51 $generated@@25 $generated@@198)) $generated@@198) ($generated@@30 $generated@@25 ($generated@@51 $generated@@25 $generated@@198) ($generated@@26 $generated@@197))))
 :pattern ( ($generated@@44 $generated@@198 ($generated@@26 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@27 $generated@@201) (and ($generated@@35 $generated@@199) ($generated@@24 $generated@@25 $generated@@199 ($generated@@26 $generated@@200) $generated@@201))) ($generated@@24 $generated@@25 ($generated@@37 $generated@@199) ($generated@@26 $generated@@200) $generated@@201))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@37 $generated@@199) ($generated@@26 $generated@@200) $generated@@201))
)))
(assert (= $generated@@23 ($generated@@40 $generated@@25 $generated@@23)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@43 ($generated@@40 $generated@@60 $generated@@202) ($generated@@40 $generated@@25 $generated@@203)) ($generated@@40 $generated@@25 ($generated@@43 $generated@@202 $generated@@203)))
 :pattern ( ($generated@@43 ($generated@@40 $generated@@60 $generated@@202) ($generated@@40 $generated@@25 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@T) ) (! (= ($generated@@52 $generated@@205 ($generated@@40 $generated@@205 $generated@@204)) ($generated@@40 $generated@@60 ($generated@@52 $generated@@205 $generated@@204)))
 :pattern ( ($generated@@52 $generated@@205 ($generated@@40 $generated@@205 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@27 $generated@@209) (= ($generated@@24 $generated@@25 ($generated@@43 $generated@@207 $generated@@208) ($generated@@26 $generated@@206) $generated@@209)  (and ($generated@@77 $generated@@207 $generated@@206 $generated@@209) ($generated@@24 $generated@@25 $generated@@208 ($generated@@26 $generated@@206) $generated@@209))))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@43 $generated@@207 $generated@@208) ($generated@@26 $generated@@206) $generated@@209))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@220  (=> (and (= $generated@@210 ($generated@@141 $generated@@211 $generated@@212 $generated false)) ($generated@@97 $generated@@213)) (=> (and (and (and ($generated@@27 $generated@@214) ($generated@@215 $generated@@214)) (= $generated@@212 $generated@@214)) (and (forall (($generated@@221 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@25 $generated@@221 ($generated@@26 $generated@@21)) (not ($generated@@59 $generated@@216 $generated@@217))) (< ($generated@@130 $generated@@221) ($generated@@130 $generated@@213))) ($generated@@32 ($generated@@66 ($generated@@67 $generated@@218) $generated@@219 ($generated@@43 $generated@@217 ($generated@@43 $generated@@216 $generated@@221))) ($generated@@66 ($generated@@67 $generated@@218) $generated@@219 ($generated@@43 $generated@@216 ($generated@@43 $generated@@217 $generated@@221)))))
 :pattern ( ($generated@@43 $generated@@216 ($generated@@43 $generated@@217 $generated@@221)))
 :pattern ( ($generated@@43 $generated@@217 ($generated@@43 $generated@@216 $generated@@221)))
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@32 ($generated@@66 ($generated@@67 ($generated@@67 $generated@@218)) $generated@@219 ($generated@@43 $generated@@217 ($generated@@43 $generated@@216 $generated@@213))) ($generated@@66 ($generated@@67 ($generated@@67 $generated@@218)) $generated@@219 ($generated@@43 $generated@@216 ($generated@@43 $generated@@217 $generated@@213))))))))
(let (($generated@@222  (=> (and (and (and ($generated@@27 $generated@@212) ($generated@@215 $generated@@212)) (and ($generated@@44 $generated@@219 $generated@@21) ($generated@@77 $generated@@219 $generated@@21 $generated@@212))) (and (and ($generated@@44 $generated@@217 $generated@@21) ($generated@@77 $generated@@217 $generated@@21 $generated@@212)) (and ($generated@@44 $generated@@216 $generated@@21) ($generated@@77 $generated@@216 $generated@@21 $generated@@212)))) (=> (and (and (and (and ($generated@@30 $generated@@25 $generated@@213 ($generated@@26 $generated@@21)) ($generated@@24 $generated@@25 $generated@@213 ($generated@@26 $generated@@21) $generated@@212)) ($generated@@97 $generated@@213)) (= 2 $generated@@58)) (and (not ($generated@@59 $generated@@216 $generated@@217)) (= (ControlFlow 0 3) 2))) $generated@@220))))
$generated@@222)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
