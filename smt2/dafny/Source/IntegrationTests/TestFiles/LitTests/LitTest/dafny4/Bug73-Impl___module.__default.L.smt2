(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@128 () T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)) ($generated@@24 $generated@@30))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@31 $generated@@35 $generated@@36) ($generated@@27 $generated@@33 $generated@@34))  (and ($generated@@32 $generated@@35 $generated@@33) ($generated@@32 $generated@@36 $generated@@34)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@31 $generated@@35 $generated@@36) ($generated@@27 $generated@@33 $generated@@34)))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@38 $generated@@44) (= ($generated@@37 $generated@@26 ($generated@@31 $generated@@42 $generated@@43) ($generated@@27 $generated@@40 $generated@@41) $generated@@44)  (and ($generated@@39 $generated@@42 $generated@@40 $generated@@44) ($generated@@39 $generated@@43 $generated@@41 $generated@@44))))
 :pattern ( ($generated@@37 $generated@@26 ($generated@@31 $generated@@42 $generated@@43) ($generated@@27 $generated@@40 $generated@@41) $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@24 $generated@@46) (= ($generated@@45 $generated@@46) $generated@@4))
 :pattern ( ($generated@@24 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 ($generated@@47 $generated@@50 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@47 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@24 $generated@@51) (exists (($generated@@52 T@U) ($generated@@53 T@U) ) (= $generated@@51 ($generated@@31 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@24 $generated@@51))
)))
(assert (= ($generated@@7 $generated@@54) 4))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@25 $generated@@54 $generated@@57 ($generated@@55 $generated@@58)) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@59) ($generated@@32 $generated@@59 $generated@@58))
 :pattern ( ($generated@@56 $generated@@57 $generated@@59))
)))
 :pattern ( ($generated@@25 $generated@@54 $generated@@57 ($generated@@55 $generated@@58)))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@39 ($generated@@48 $generated@@63 $generated@@60) $generated@@61 $generated@@62) ($generated@@37 $generated@@63 $generated@@60 $generated@@61 $generated@@62))
 :pattern ( ($generated@@39 ($generated@@48 $generated@@63 $generated@@60) $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@32 $generated@@64 $generated) (and (= ($generated@@48 $generated@@9 ($generated@@47 $generated@@9 $generated@@64)) $generated@@64) ($generated@@25 $generated@@9 ($generated@@47 $generated@@9 $generated@@64) $generated)))
 :pattern ( ($generated@@32 $generated@@64 $generated))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@32 ($generated@@48 $generated@@67 $generated@@65) $generated@@66) ($generated@@25 $generated@@67 $generated@@65 $generated@@66))
 :pattern ( ($generated@@32 ($generated@@48 $generated@@67 $generated@@65) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@37 $generated@@54 $generated@@68 ($generated@@55 $generated@@69) $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@56 $generated@@68 $generated@@71) ($generated@@39 $generated@@71 $generated@@69 $generated@@70))
 :pattern ( ($generated@@56 $generated@@68 $generated@@71))
)))
 :pattern ( ($generated@@37 $generated@@54 $generated@@68 ($generated@@55 $generated@@69) $generated@@70))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@73 ($generated@@72 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@72 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@76 ($generated@@72 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@72 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@23 ($generated@@72 $generated@@79 $generated@@80)) $generated@@2)
 :pattern ( ($generated@@72 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@45 ($generated@@31 $generated@@81 $generated@@82)) $generated@@4)
 :pattern ( ($generated@@31 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@83 ($generated@@27 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@27 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 ($generated@@27 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@27 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 ($generated@@31 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@31 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@92 ($generated@@31 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@31 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@95 ($generated@@55 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@55 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@23 ($generated@@55 $generated@@97)) $generated@@1)
 :pattern ( ($generated@@55 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@47 $generated@@99 ($generated@@48 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@48 $generated@@99 $generated@@98))
)))
(assert  (and (and (and (= ($generated@@7 $generated@@100) 5) (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@101 $generated@@106 $generated@@107 ($generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@108) $generated@@110) $generated@@108)
 :weight 0
))) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@115 $generated@@116) (= ($generated@@101 $generated@@111 $generated@@112 ($generated@@105 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@113) $generated@@116) ($generated@@101 $generated@@111 $generated@@112 $generated@@114 $generated@@116)))
 :weight 0
))) (= ($generated@@7 $generated@@102) 6)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@37 $generated@@100 $generated@@117 ($generated@@72 $generated@@118 $generated@@119) $generated@@120) (forall (($generated@@121 T@U) ) (!  (=> ($generated@@56 ($generated@@104 $generated@@117) $generated@@121) (and ($generated@@39 ($generated@@101 $generated@@102 $generated@@102 ($generated@@103 $generated@@117) $generated@@121) $generated@@119 $generated@@120) ($generated@@39 $generated@@121 $generated@@118 $generated@@120)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@102 ($generated@@103 $generated@@117) $generated@@121))
 :pattern ( ($generated@@56 ($generated@@104 $generated@@117) $generated@@121))
)))
 :pattern ( ($generated@@37 $generated@@100 $generated@@117 ($generated@@72 $generated@@118 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (< ($generated@@122 $generated@@124) ($generated@@123 ($generated@@31 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@31 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (< ($generated@@122 $generated@@127) ($generated@@123 ($generated@@31 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@31 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (!  (not ($generated@@56 ($generated@@104 $generated@@128) $generated@@129))
 :pattern ( ($generated@@56 ($generated@@104 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@32 $generated@@130 ($generated@@72 $generated@@131 $generated@@132)) (and (= ($generated@@48 $generated@@100 ($generated@@47 $generated@@100 $generated@@130)) $generated@@130) ($generated@@25 $generated@@100 ($generated@@47 $generated@@100 $generated@@130) ($generated@@72 $generated@@131 $generated@@132))))
 :pattern ( ($generated@@32 $generated@@130 ($generated@@72 $generated@@131 $generated@@132)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@32 $generated@@135 ($generated@@27 $generated@@133 $generated@@134)) (and (= ($generated@@48 $generated@@26 ($generated@@47 $generated@@26 $generated@@135)) $generated@@135) ($generated@@25 $generated@@26 ($generated@@47 $generated@@26 $generated@@135) ($generated@@27 $generated@@133 $generated@@134))))
 :pattern ( ($generated@@32 $generated@@135 ($generated@@27 $generated@@133 $generated@@134)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@136 $generated@@144 $generated@@145 $generated@@146 ($generated@@141 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@136 $generated@@151 $generated@@152 $generated@@153 ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@136 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@136 $generated@@160 $generated@@161 $generated@@162 ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@136 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))) (= ($generated@@7 $generated@@137) 7)) (= ($generated@@7 $generated@@138) 8)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@7 ($generated@@140 $generated@@169 $generated@@170)) 9))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@142 ($generated@@140 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@140 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@140 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@12 ($generated@@136 $generated@@137 $generated@@138 $generated@@8 ($generated@@139 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@12 ($generated@@47 $generated@@8 ($generated@@101 $generated@@138 $generated@@102 ($generated@@101 $generated@@137 ($generated@@140 $generated@@138 $generated@@102) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@8 ($generated@@139 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (and (= ($generated@@23 ($generated@@27 $generated@@182 $generated@@183)) $generated@@5) (= ($generated@@181 ($generated@@27 $generated@@182 $generated@@183)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (!  (or (= $generated@@184 $generated@@128) (exists (($generated@@185 T@U) ) ($generated@@56 ($generated@@104 $generated@@184) $generated@@185)))
 :pattern ( ($generated@@104 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ) (!  (or (= $generated@@187 $generated@@128) (exists (($generated@@188 T@U) ) ($generated@@56 ($generated@@186 $generated@@187) $generated@@188)))
 :pattern ( ($generated@@186 $generated@@187))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@56 ($generated@@189 $generated@@190) $generated@@191)  (and ($generated@@56 ($generated@@104 $generated@@190) ($generated@@89 ($generated@@47 $generated@@26 $generated@@191))) (= ($generated@@101 $generated@@102 $generated@@102 ($generated@@103 $generated@@190) ($generated@@89 ($generated@@47 $generated@@26 $generated@@191))) ($generated@@92 ($generated@@47 $generated@@26 $generated@@191)))))
 :pattern ( ($generated@@56 ($generated@@189 $generated@@190) $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@56 ($generated@@186 $generated@@192) $generated@@193) (exists (($generated@@194 T@U) ) (!  (and ($generated@@56 ($generated@@104 $generated@@192) $generated@@194) (= $generated@@193 ($generated@@101 $generated@@102 $generated@@102 ($generated@@103 $generated@@192) $generated@@194)))
 :pattern ( ($generated@@56 ($generated@@104 $generated@@192) $generated@@194))
 :pattern ( ($generated@@101 $generated@@102 $generated@@102 ($generated@@103 $generated@@192) $generated@@194))
)))
 :pattern ( ($generated@@56 ($generated@@186 $generated@@192) $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@122 ($generated@@48 $generated@@26 $generated@@195)) ($generated@@123 $generated@@195))
 :pattern ( ($generated@@122 ($generated@@48 $generated@@26 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@32 $generated@@196 ($generated@@55 $generated@@197)) (and (= ($generated@@48 $generated@@54 ($generated@@47 $generated@@54 $generated@@196)) $generated@@196) ($generated@@25 $generated@@54 ($generated@@47 $generated@@54 $generated@@196) ($generated@@55 $generated@@197))))
 :pattern ( ($generated@@32 $generated@@196 ($generated@@55 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@25 $generated@@100 $generated@@198 ($generated@@72 $generated@@199 $generated@@200)) (forall (($generated@@201 T@U) ) (!  (=> ($generated@@56 ($generated@@104 $generated@@198) $generated@@201) (and ($generated@@32 ($generated@@101 $generated@@102 $generated@@102 ($generated@@103 $generated@@198) $generated@@201) $generated@@200) ($generated@@32 $generated@@201 $generated@@199)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@102 ($generated@@103 $generated@@198) $generated@@201))
 :pattern ( ($generated@@56 ($generated@@104 $generated@@198) $generated@@201))
)))
 :pattern ( ($generated@@25 $generated@@100 $generated@@198 ($generated@@72 $generated@@199 $generated@@200)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@38 $generated@@204) (and ($generated@@24 $generated@@202) (exists (($generated@@205 T@U) ) (! ($generated@@37 $generated@@26 $generated@@202 ($generated@@27 $generated@@203 $generated@@205) $generated@@204)
 :pattern ( ($generated@@37 $generated@@26 $generated@@202 ($generated@@27 $generated@@203 $generated@@205) $generated@@204))
)))) ($generated@@39 ($generated@@89 $generated@@202) $generated@@203 $generated@@204))
 :pattern ( ($generated@@39 ($generated@@89 $generated@@202) $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@38 $generated@@208) (and ($generated@@24 $generated@@206) (exists (($generated@@209 T@U) ) (! ($generated@@37 $generated@@26 $generated@@206 ($generated@@27 $generated@@209 $generated@@207) $generated@@208)
 :pattern ( ($generated@@37 $generated@@26 $generated@@206 ($generated@@27 $generated@@209 $generated@@207) $generated@@208))
)))) ($generated@@39 ($generated@@92 $generated@@206) $generated@@207 $generated@@208))
 :pattern ( ($generated@@39 ($generated@@92 $generated@@206) $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! ($generated@@37 $generated@@9 $generated@@211 $generated $generated@@210)
 :pattern ( ($generated@@37 $generated@@9 $generated@@211 $generated $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ) (!  (or (= $generated@@212 $generated@@128) (exists (($generated@@213 T@U) ($generated@@214 T@U) ) ($generated@@56 ($generated@@189 $generated@@212) ($generated@@48 $generated@@26 ($generated@@31 $generated@@213 $generated@@214)))))
 :pattern ( ($generated@@189 $generated@@212))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@25 $generated@@100 $generated@@215 ($generated@@72 $generated@@216 $generated@@217)) (and (and ($generated@@25 $generated@@54 ($generated@@104 $generated@@215) ($generated@@55 $generated@@216)) ($generated@@25 $generated@@54 ($generated@@186 $generated@@215) ($generated@@55 $generated@@217))) ($generated@@25 $generated@@54 ($generated@@189 $generated@@215) ($generated@@55 ($generated@@27 $generated@@216 $generated@@217)))))
 :pattern ( ($generated@@25 $generated@@100 $generated@@215 ($generated@@72 $generated@@216 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ) (! ($generated@@25 $generated@@9 $generated@@218 $generated)
 :pattern ( ($generated@@25 $generated@@9 $generated@@218 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@227  (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@56 ($generated@@104 $generated@@219) ($generated@@48 $generated@@9 ($generated@@13 $generated@@220)))) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@220 $generated@@221)) (not true))))))
(let (($generated@@228  (=> (and (not ($generated@@56 ($generated@@104 $generated@@219) ($generated@@48 $generated@@9 ($generated@@13 $generated@@220)))) (= (ControlFlow 0 5) 2)) $generated@@227)))
(let (($generated@@229  (=> (and ($generated@@56 ($generated@@104 $generated@@219) ($generated@@48 $generated@@9 ($generated@@13 $generated@@220))) (= (ControlFlow 0 4) 2)) $generated@@227)))
(let (($generated@@230  (=> (= $generated@@222 ($generated@@139 $generated@@223 $generated@@224 $generated@@3 false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@229) (=> (= (ControlFlow 0 6) 5) $generated@@228)))))
(let (($generated@@231  (=> (and ($generated@@38 $generated@@224) ($generated@@225 $generated@@224)) (=> (and (and (and ($generated@@25 $generated@@100 $generated@@219 ($generated@@72 $generated $generated)) ($generated@@37 $generated@@100 $generated@@219 ($generated@@72 $generated $generated) $generated@@224)) (= 0 $generated@@226)) (and (or (not (= $generated@@220 $generated@@221)) (not true)) (= (ControlFlow 0 7) 6))) $generated@@230))))
$generated@@231))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
