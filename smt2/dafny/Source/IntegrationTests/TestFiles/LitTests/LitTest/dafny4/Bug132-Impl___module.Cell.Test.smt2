(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@110 () Int)
(declare-fun $generated@@116 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@26 $generated@@1) $generated@@2))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36) ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@34 $generated@@36))
 :pattern ( ($generated@@33 $generated@@28 $generated@@35 $generated@@29 $generated@@36))
)))
(assert (= ($generated@@24 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@3 $generated@@7) $generated@@37))
(assert  (not ($generated@@39 $generated@@37)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@8 $generated@@42) 4)) (= ($generated@@8 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@8 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@33 $generated@@28 $generated@@65 $generated@@29 $generated@@66)  (or (= $generated@@65 $generated@@30) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@66 $generated@@65) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@28 $generated@@65 $generated@@29 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@68 $generated@@70) $generated@@1))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@70) $generated@@1))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@70) $generated@@1))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@40 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@40 $generated@@76 $generated@@75))
)))
(assert ($generated@@39 $generated@@1))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and ($generated@@77 $generated@@78) (and (or (not (= $generated@@79 $generated@@30)) (not true)) (= ($generated@@31 $generated@@79) $generated@@29))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@78 $generated@@79) $generated@@1)))) ($generated@@33 $generated@@10 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@78 $generated@@79) $generated@@37)) $generated $generated@@78))
 :pattern ( ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@78 $generated@@79) $generated@@37)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@74 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@33 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 ($generated@@74 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@67 $generated@@85 $generated@@86) (=> ($generated@@80 $generated@@87 $generated@@88 $generated@@85) ($generated@@80 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@67 $generated@@85 $generated@@86) ($generated@@80 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (!  (=> ($generated@@67 $generated@@89 $generated@@90) (=> ($generated@@33 $generated@@93 $generated@@91 $generated@@92 $generated@@89) ($generated@@33 $generated@@93 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@67 $generated@@89 $generated@@90) ($generated@@33 $generated@@93 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@94 $generated@@34)  (and ($generated@@27 $generated@@28 $generated@@94 $generated@@29) (or (not (= $generated@@94 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@94 $generated@@34))
 :pattern ( ($generated@@27 $generated@@28 $generated@@94 $generated@@29))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and (and (and (and ($generated@@77 $generated@@98) ($generated@@77 $generated@@99)) (and (or (not (= $generated@@100 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@100 $generated@@34))) (or ($generated@@97 $generated@@98 $generated@@100 $generated@@101) ($generated@@27 $generated@@28 $generated@@101 $generated@@29))) (and ($generated@@95 $generated@@98) ($generated@@67 $generated@@98 $generated@@99))) (=> (forall (($generated@@102 T@U) ($generated@@103 T@U) )  (=> (and (or (not (= $generated@@102 $generated@@30)) (not true)) (or (= $generated@@102 $generated@@100) (= $generated@@102 $generated@@101))) (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@98 $generated@@102) $generated@@103) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@99 $generated@@102) $generated@@103)))) (= ($generated@@96 $generated@@98 $generated@@100 $generated@@101) ($generated@@96 $generated@@99 $generated@@100 $generated@@101))))
 :pattern ( ($generated@@95 $generated@@98) ($generated@@67 $generated@@98 $generated@@99) ($generated@@96 $generated@@99 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or (not (= $generated@@104 $generated@@106)) (not true)) (=> (and ($generated@@67 $generated@@104 $generated@@105) ($generated@@67 $generated@@105 $generated@@106)) ($generated@@67 $generated@@104 $generated@@106)))
 :pattern ( ($generated@@67 $generated@@104 $generated@@105) ($generated@@67 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (and (= ($generated@@107 ($generated@@38 $generated@@108 $generated@@109)) $generated@@108) (= ($generated@@26 ($generated@@38 $generated@@108 $generated@@109)) $generated@@109))
 :pattern ( ($generated@@38 $generated@@108 $generated@@109))
)))
(assert  (=> (<= 0 $generated@@110) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@97 $generated@@111 $generated@@112 $generated@@113) (and (< 0 $generated@@110) (and (and ($generated@@77 $generated@@111) (and (or (not (= $generated@@112 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@112 $generated@@34) ($generated@@33 $generated@@28 $generated@@112 $generated@@34 $generated@@111)))) ($generated@@27 $generated@@28 $generated@@113 $generated@@29)))) (= ($generated@@96 $generated@@111 $generated@@112 $generated@@113)  (=> (or (not (= $generated@@113 $generated@@30)) (not true)) (= ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@111 $generated@@113) $generated@@37))) ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@111 $generated@@112) $generated@@37)))))))
 :pattern ( ($generated@@96 $generated@@111 $generated@@112 $generated@@113) ($generated@@77 $generated@@111))
))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@40 $generated@@115 ($generated@@74 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@74 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and (and (and ($generated@@77 $generated@@117) ($generated@@77 $generated@@118)) (and (or (not (= $generated@@119 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@119 $generated@@34))) (and ($generated@@95 $generated@@117) ($generated@@67 $generated@@117 $generated@@118))) (=> (forall (($generated@@120 T@U) ($generated@@121 T@U) )  (=> (and (or (not (= $generated@@120 $generated@@30)) (not true)) (= $generated@@120 $generated@@119)) (= ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@117 $generated@@120) $generated@@121) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@118 $generated@@120) $generated@@121)))) (= ($generated@@116 $generated@@117 $generated@@119) ($generated@@116 $generated@@118 $generated@@119))))
 :pattern ( ($generated@@95 $generated@@117) ($generated@@67 $generated@@117 $generated@@118) ($generated@@116 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@77 $generated@@122) (and (or (not (= $generated@@123 $generated@@30)) (not true)) (= ($generated@@31 $generated@@123) $generated@@29))) ($generated@@27 $generated@@10 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@122 $generated@@123) $generated@@37)) $generated))
 :pattern ( ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@122 $generated@@123) $generated@@37)))
)))
(assert  (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@124 $generated@@127 $generated@@128 $generated@@129 ($generated@@126 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@124 $generated@@134 $generated@@135 $generated@@136 ($generated@@126 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@124 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@124 $generated@@143 $generated@@144 $generated@@145 ($generated@@126 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@124 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 Bool) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@13 ($generated@@124 $generated@@28 $generated@@42 $generated@@9 ($generated@@125 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))  (=> (and (or (not (= $generated@@156 $generated@@152)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@153 $generated@@156) $generated@@154)))) $generated@@155))
 :pattern ( ($generated@@124 $generated@@28 $generated@@42 $generated@@9 ($generated@@125 $generated@@152 $generated@@153 $generated@@154 $generated@@155) $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@77 ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@158 $generated@@159 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@158 $generated@@159) $generated@@160 $generated@@161))) ($generated@@67 $generated@@158 ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@158 $generated@@159 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@158 $generated@@159) $generated@@160 $generated@@161))))
 :pattern ( ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@158 $generated@@159 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@158 $generated@@159) $generated@@160 $generated@@161)))
)))
(assert (= ($generated@@25 $generated@@29) $generated@@4))
(assert (= ($generated@@162 $generated@@29) $generated@@6))
(assert (= ($generated@@25 $generated@@34) $generated@@5))
(assert (= ($generated@@162 $generated@@34) $generated@@6))
(assert  (=> (<= 0 $generated@@110) (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or ($generated@@163 $generated@@164 $generated@@165) (and (< 0 $generated@@110) (and ($generated@@77 $generated@@164) (and (or (not (= $generated@@165 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@165 $generated@@34) ($generated@@33 $generated@@28 $generated@@165 $generated@@34 $generated@@164)))))) (= ($generated@@116 $generated@@164 $generated@@165) (< ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@164 $generated@@165) $generated@@37))) 0)))
 :pattern ( ($generated@@116 $generated@@164 $generated@@165) ($generated@@77 $generated@@164))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@74 $generated@@167 ($generated@@71 $generated@@167 $generated@@166)) ($generated@@71 $generated@@43 ($generated@@74 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@74 $generated@@167 ($generated@@71 $generated@@167 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@33 $generated@@10 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@33 $generated@@10 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@27 $generated@@10 $generated@@170 $generated)
 :pattern ( ($generated@@27 $generated@@10 $generated@@170 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Bool)
(declare-fun $generated@@177 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 44) (let (($generated@@178  (=> (and (and (and (and (and (and (and (and (and (and (and (and (and (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true)))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (not ($generated@@13 ($generated@@71 $generated@@9 ($generated@@12 true))))) (= (ControlFlow 0 42) (- 0 41))) false)))
(let (($generated@@179  (and (=> (= (ControlFlow 0 36) (- 0 40)) true) (and (=> (= (ControlFlow 0 36) (- 0 39)) (or (not (= $generated@@171 $generated@@30)) (not true))) (=> (or (not (= $generated@@171 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 36) (- 0 38)) true) (and (=> (= (ControlFlow 0 36) (- 0 37)) ($generated@@33 $generated@@28 $generated@@171 $generated@@34 $generated@@172)) (=> ($generated@@33 $generated@@28 $generated@@171 $generated@@34 $generated@@172) (=> (= (ControlFlow 0 36) (- 0 35)) ($generated@@33 $generated@@28 $generated@@171 $generated@@34 $generated@@172))))))))))
(let (($generated@@180  (and (=> (= (ControlFlow 0 32) (- 0 34)) true) (and (=> (= (ControlFlow 0 32) (- 0 33)) ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172)) (=> ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172) (=> (= (ControlFlow 0 32) (- 0 31)) ($generated@@33 $generated@@28 $generated@@171 $generated@@34 $generated@@172)))))))
(let (($generated@@181  (and (=> (= (ControlFlow 0 27) (- 0 30)) true) (and (=> (= (ControlFlow 0 27) (- 0 29)) (or (not (= $generated@@171 $generated@@30)) (not true))) (=> (or (not (= $generated@@171 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 27) (- 0 28)) ($generated@@33 $generated@@28 $generated@@171 $generated@@34 $generated@@172)) (=> ($generated@@33 $generated@@28 $generated@@171 $generated@@34 $generated@@172) (=> (= (ControlFlow 0 27) (- 0 26)) ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172)))))))))
(let (($generated@@182  (and (=> (= (ControlFlow 0 23) (- 0 25)) true) (and (=> (= (ControlFlow 0 23) (- 0 24)) (or (not (= $generated@@171 $generated@@30)) (not true))) (=> (or (not (= $generated@@171 $generated@@30)) (not true)) (=> (= (ControlFlow 0 23) (- 0 22)) ($generated@@33 $generated@@28 $generated@@171 $generated@@34 $generated@@172)))))))
(let (($generated@@183  (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172)) (=> ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172) (=> (= (ControlFlow 0 20) (- 0 19)) ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172))))))
(let (($generated@@184  (=> (= (ControlFlow 0 18) (- 0 17)) ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172))))
(let (($generated@@185  (=> (= (ControlFlow 0 16) (- 0 15)) ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172))))
(let (($generated@@186  (and (=> (= (ControlFlow 0 12) (- 0 14)) true) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (not (= $generated@@171 $generated@@30)) (not true))) (=> (or (not (= $generated@@171 $generated@@30)) (not true)) (=> (and ($generated@@80 ($generated@@74 $generated@@28 $generated@@171) $generated@@29 $generated@@174) (= (ControlFlow 0 12) (- 0 11))) true))))))
(let (($generated@@187  (and (=> (= (ControlFlow 0 9) (- 0 10)) true) (=> (= (ControlFlow 0 9) (- 0 8)) (or (not (= $generated@@171 $generated@@30)) (not true))))))
(let (($generated@@188  (=> (and ($generated@@80 ($generated@@74 $generated@@28 $generated@@173) $generated@@29 $generated@@174) (= (ControlFlow 0 7) (- 0 6))) true)))
(let (($generated@@189 true))
(let (($generated@@190  (and (=> (= (ControlFlow 0 3) (- 0 4)) true) (=> (= (ControlFlow 0 3) (- 0 2)) (or (not (= $generated@@171 $generated@@30)) (not true))))))
(let (($generated@@191 true))
(let (($generated@@192  (=> (= $generated@@175 ($generated@@125 $generated@@30 $generated@@172 $generated@@1 false)) (=> (and (or (not (= $generated@@171 $generated@@30)) (not true)) ($generated@@27 $generated@@28 $generated@@171 $generated@@29)) (=> (and (and (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@172 $generated@@171) $generated@@1)))) (= $generated@@174 ($generated@@45 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@172 $generated@@171 ($generated@@45 $generated@@42 $generated@@43 ($generated@@41 $generated@@28 ($generated@@44 $generated@@42 $generated@@43) $generated@@172 $generated@@171) $generated@@1 ($generated@@74 $generated@@9 ($generated@@12 true)))))) (and ($generated@@77 $generated@@174) ($generated@@95 $generated@@174))) (and (and (and (and (and (and (and (and (and (and (and (and (and (=> (= (ControlFlow 0 43) 1) $generated@@191) (=> (= (ControlFlow 0 43) 3) $generated@@190)) (=> (= (ControlFlow 0 43) 5) $generated@@189)) (=> (= (ControlFlow 0 43) 7) $generated@@188)) (=> (= (ControlFlow 0 43) 9) $generated@@187)) (=> (= (ControlFlow 0 43) 12) $generated@@186)) (=> (= (ControlFlow 0 43) 16) $generated@@185)) (=> (= (ControlFlow 0 43) 18) $generated@@184)) (=> (= (ControlFlow 0 43) 20) $generated@@183)) (=> (= (ControlFlow 0 43) 23) $generated@@182)) (=> (= (ControlFlow 0 43) 27) $generated@@181)) (=> (= (ControlFlow 0 43) 32) $generated@@180)) (=> (= (ControlFlow 0 43) 36) $generated@@179)) (=> (= (ControlFlow 0 43) 42) $generated@@178)))))))
(let (($generated@@193  (=> (and (and (and ($generated@@77 $generated@@172) ($generated@@95 $generated@@172)) (and (or (not (= $generated@@173 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@173 $generated@@34) ($generated@@33 $generated@@28 $generated@@173 $generated@@34 $generated@@172)))) (and (and (=> $generated@@176 (and ($generated@@27 $generated@@28 $generated@@177 $generated@@34) ($generated@@33 $generated@@28 $generated@@177 $generated@@34 $generated@@172))) true) (and (= 1 $generated@@110) (= (ControlFlow 0 44) 43)))) $generated@@192)))
$generated@@193)))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 23) (- 22))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 27) (- 28))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 32) (- 31))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 36) (- 37))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
