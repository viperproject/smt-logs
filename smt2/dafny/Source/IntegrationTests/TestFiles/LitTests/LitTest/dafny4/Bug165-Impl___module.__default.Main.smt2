(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@T T@T) T@T)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@32 (T@T) T@T)
(declare-fun $generated@@33 (T@T) T@T)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Int)
(declare-fun $generated@@78 (T@U Int) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@101 () T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert ($generated@@17 $generated@@18))
(assert (= ($generated@@19 $generated@@20) 0))
(assert (forall (($generated@@23 T@U) ) (! ($generated@@22 ($generated@@21 $generated@@23))
 :pattern ( ($generated@@21 $generated@@23))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@34 T@T) ($generated@@35 T@T) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@25 $generated@@34 $generated@@35 ($generated@@31 $generated@@34 $generated@@35 $generated@@37 $generated@@38 $generated@@36) $generated@@38) $generated@@36)
 :weight 0
)) (forall (($generated@@39 T@T) ($generated@@40 T@T) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (or (= $generated@@43 $generated@@44) (= ($generated@@25 $generated@@39 $generated@@40 ($generated@@31 $generated@@39 $generated@@40 $generated@@42 $generated@@43 $generated@@41) $generated@@44) ($generated@@25 $generated@@39 $generated@@40 $generated@@42 $generated@@44)))
 :weight 0
))) (= ($generated@@1 $generated@@26) 3)) (= ($generated@@1 $generated@@27) 4)) (= ($generated@@1 $generated@@28) 5)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ) (= ($generated@@1 ($generated@@29 $generated@@45 $generated@@46)) 6))) (forall (($generated@@47 T@T) ($generated@@48 T@T) ) (! (= ($generated@@32 ($generated@@29 $generated@@47 $generated@@48)) $generated@@47)
 :pattern ( ($generated@@29 $generated@@47 $generated@@48))
))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (! (= ($generated@@33 ($generated@@29 $generated@@49 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@29 $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@24 $generated@@51 $generated@@52) (forall (($generated@@53 T@U) ) (!  (=> ($generated@@6 ($generated@@30 $generated@@2 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@51 $generated@@53) $generated@@0))) ($generated@@6 ($generated@@30 $generated@@2 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@52 $generated@@53) $generated@@0))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@52 $generated@@53) $generated@@0))
)))
 :pattern ( ($generated@@24 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 Int) ) (! (= ($generated@@54 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 ($generated@@30 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@30 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@62 ($generated@@59 $generated@@67 $generated@@64) $generated@@65 $generated@@66) ($generated@@63 $generated@@67 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@62 ($generated@@59 $generated@@67 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@24 $generated@@68 $generated@@69) (=> ($generated@@62 $generated@@70 $generated@@71 $generated@@68) ($generated@@62 $generated@@70 $generated@@71 $generated@@69)))
 :pattern ( ($generated@@24 $generated@@68 $generated@@69) ($generated@@62 $generated@@70 $generated@@71 $generated@@68))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (!  (=> ($generated@@24 $generated@@72 $generated@@73) (=> ($generated@@63 $generated@@76 $generated@@74 $generated@@75 $generated@@72) ($generated@@63 $generated@@76 $generated@@74 $generated@@75 $generated@@73)))
 :pattern ( ($generated@@24 $generated@@72 $generated@@73) ($generated@@63 $generated@@76 $generated@@74 $generated@@75 $generated@@72))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= (exists (($generated@@81 Int) ) (!  (and (and (<= 0 $generated@@81) (< $generated@@81 ($generated@@19 $generated@@79))) (= $generated@@80 ($generated@@78 $generated@@79 $generated@@81)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@81))
)) (< 0 ($generated@@77 ($generated@@21 $generated@@79) $generated@@80)))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@82 $generated@@83 $generated@@84) (= $generated@@83 $generated@@84))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or (not (= $generated@@85 $generated@@87)) (not true)) (=> (and ($generated@@24 $generated@@85 $generated@@86) ($generated@@24 $generated@@86 $generated@@87)) ($generated@@24 $generated@@85 $generated@@87)))
 :pattern ( ($generated@@24 $generated@@85 $generated@@86) ($generated@@24 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@59 $generated@@92 $generated@@90) $generated@@91) ($generated@@89 $generated@@92 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@59 $generated@@92 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@22 $generated@@94) (forall (($generated@@95 T@U) ) (!  (and (<= 0 ($generated@@77 $generated@@94 $generated@@95)) (<= ($generated@@77 $generated@@94 $generated@@95) ($generated@@93 $generated@@94)))
 :pattern ( ($generated@@77 $generated@@94 $generated@@95))
)))
 :pattern ( ($generated@@22 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@93 $generated@@96))
 :pattern ( ($generated@@93 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (! (<= 0 ($generated@@19 $generated@@97))
 :pattern ( ($generated@@19 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@17 $generated@@98) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@88 $generated@@100 $generated@@98) ($generated@@62 $generated@@100 $generated@@98 $generated@@99))
 :pattern ( ($generated@@62 $generated@@100 $generated@@98 $generated@@99))
)))
 :pattern ( ($generated@@17 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@77 $generated@@101 $generated@@102) 0)
 :pattern ( ($generated@@77 $generated@@101 $generated@@102))
)))
(assert (= ($generated@@1 $generated@@103) 7))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@63 $generated@@103 $generated@@105 ($generated@@104 $generated@@106) $generated@@107) (forall (($generated@@108 Int) ) (!  (=> (and (<= 0 $generated@@108) (< $generated@@108 ($generated@@19 $generated@@105))) ($generated@@62 ($generated@@78 $generated@@105 $generated@@108) $generated@@106 $generated@@107))
 :pattern ( ($generated@@78 $generated@@105 $generated@@108))
)))
 :pattern ( ($generated@@63 $generated@@103 $generated@@105 ($generated@@104 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 ($generated@@104 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@104 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@104 $generated@@112)) $generated)
 :pattern ( ($generated@@104 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@30 $generated@@114 ($generated@@59 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@59 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (!  (and (= (= ($generated@@93 $generated@@115) 0) (= $generated@@115 $generated@@101)) (=> (or (not (= ($generated@@93 $generated@@115) 0)) (not true)) (exists (($generated@@116 T@U) ) (! (< 0 ($generated@@77 $generated@@115 $generated@@116))
 :pattern ( ($generated@@77 $generated@@115 $generated@@116))
))))
 :pattern ( ($generated@@93 $generated@@115))
)))
(assert  (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@117 $generated@@120 $generated@@121 $generated@@122 ($generated@@119 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@125 $generated@@126) $generated@@123)
 :weight 0
)) (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@117 $generated@@127 $generated@@128 $generated@@129 ($generated@@119 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@117 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@117 $generated@@136 $generated@@137 $generated@@138 ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@117 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@6 ($generated@@117 $generated@@28 $generated@@26 $generated@@2 ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@6 ($generated@@30 $generated@@2 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@117 $generated@@28 $generated@@26 $generated@@2 ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@93 ($generated@@21 $generated@@151)) ($generated@@19 $generated@@151))
 :pattern ( ($generated@@93 ($generated@@21 $generated@@151)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@88 $generated@@152 ($generated@@104 $generated@@153)) (and (= ($generated@@59 $generated@@103 ($generated@@30 $generated@@103 $generated@@152)) $generated@@152) ($generated@@89 $generated@@103 ($generated@@30 $generated@@103 $generated@@152) ($generated@@104 $generated@@153))))
 :pattern ( ($generated@@88 $generated@@152 ($generated@@104 $generated@@153)))
)))
(assert (= ($generated@@21 $generated@@20) $generated@@101))
(assert (forall (($generated@@154 Int) ) (! (= ($generated@@59 $generated@@3 ($generated@@7 ($generated@@54 $generated@@154))) ($generated@@56 $generated@@27 ($generated@@59 $generated@@3 ($generated@@7 $generated@@154))))
 :pattern ( ($generated@@59 $generated@@3 ($generated@@7 ($generated@@54 $generated@@154))))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@59 $generated@@156 ($generated@@56 $generated@@156 $generated@@155)) ($generated@@56 $generated@@27 ($generated@@59 $generated@@156 $generated@@155)))
 :pattern ( ($generated@@59 $generated@@156 ($generated@@56 $generated@@156 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= ($generated@@19 $generated@@157) 0) (= $generated@@157 $generated@@20))
 :pattern ( ($generated@@19 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@82 $generated@@158 $generated@@159) (forall (($generated@@160 T@U) ) (! (= ($generated@@77 $generated@@158 $generated@@160) ($generated@@77 $generated@@159 $generated@@160))
 :pattern ( ($generated@@77 $generated@@158 $generated@@160))
 :pattern ( ($generated@@77 $generated@@159 $generated@@160))
)))
 :pattern ( ($generated@@82 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@89 $generated@@103 $generated@@161 ($generated@@104 $generated@@162)) (forall (($generated@@163 Int) ) (!  (=> (and (<= 0 $generated@@163) (< $generated@@163 ($generated@@19 $generated@@161))) ($generated@@88 ($generated@@78 $generated@@161 $generated@@163) $generated@@162))
 :pattern ( ($generated@@78 $generated@@161 $generated@@163))
)))
 :pattern ( ($generated@@89 $generated@@103 $generated@@161 ($generated@@104 $generated@@162)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@183  (=> (= $generated@@164 ($generated@@118 $generated@@165 $generated@@166 $generated@@0 false)) (=> (and (and ($generated@@89 $generated@@103 $generated@@167 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@167 ($generated@@104 $generated@@18) $generated@@166)) (and ($generated@@89 $generated@@103 $generated@@168 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@168 ($generated@@104 $generated@@18) $generated@@166))) (=> (and (and (and (and (and ($generated@@89 $generated@@103 $generated@@169 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@169 ($generated@@104 $generated@@18) $generated@@166)) (and ($generated@@170 $generated@@171) ($generated@@172 $generated@@171))) (and (and ($generated@@89 $generated@@103 $generated@@173 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@173 ($generated@@104 $generated@@18) $generated@@171)) (and (forall (($generated@@184 T@U) ) (!  (=> ($generated@@88 $generated@@184 $generated@@18) ($generated@@176 $generated@@184))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@173) $generated@@184))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@174) $generated@@184))
 :pattern ( ($generated@@175 $generated@@184))
)) (forall (($generated@@185 T@U) ) (!  (=> ($generated@@88 $generated@@185 $generated@@18) (=> ($generated@@175 $generated@@185) (= ($generated@@77 ($generated@@21 $generated@@174) $generated@@185) ($generated@@77 ($generated@@21 $generated@@173) $generated@@185))))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@173) $generated@@185))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@174) $generated@@185))
 :pattern ( ($generated@@175 $generated@@185))
))))) (and (and (and (forall (($generated@@186 T@U) ) (!  (=> ($generated@@88 $generated@@186 $generated@@18) ($generated@@176 $generated@@186))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@173) $generated@@186))
 :pattern ( ($generated@@175 $generated@@186))
)) (forall (($generated@@187 T@U) ) (!  (=> ($generated@@88 $generated@@187 $generated@@18) (=> (not ($generated@@175 $generated@@187)) (= ($generated@@54 0) ($generated@@77 ($generated@@21 $generated@@173) $generated@@187))))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@173) $generated@@187))
 :pattern ( ($generated@@175 $generated@@187))
))) (and (forall (($generated@@188 T@U) ) (!  (=> (and (or (not (= $generated@@188 $generated@@165)) (not true)) ($generated@@6 ($generated@@30 $generated@@2 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@166 $generated@@188) $generated@@0)))) (= ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@171 $generated@@188) ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@166 $generated@@188)))
 :pattern ( ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@171 $generated@@188))
)) ($generated@@24 $generated@@166 $generated@@171))) (and (and ($generated@@89 $generated@@103 $generated@@177 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@177 ($generated@@104 $generated@@18) $generated@@166)) (and ($generated@@170 $generated@@178) ($generated@@172 $generated@@178))))) (and (and (and (and ($generated@@89 $generated@@103 $generated@@179 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@179 ($generated@@104 $generated@@18) $generated@@178)) (forall (($generated@@189 T@U) ) (!  (=> ($generated@@88 $generated@@189 $generated@@18) ($generated@@176 $generated@@189))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@179) $generated@@189))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@174) $generated@@189))
 :pattern ( ($generated@@175 $generated@@189))
))) (and (forall (($generated@@190 T@U) ) (!  (=> ($generated@@88 $generated@@190 $generated@@18) (=> ($generated@@175 $generated@@190) (= ($generated@@77 ($generated@@21 $generated@@174) $generated@@190) ($generated@@77 ($generated@@21 $generated@@179) $generated@@190))))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@179) $generated@@190))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@174) $generated@@190))
 :pattern ( ($generated@@175 $generated@@190))
)) (forall (($generated@@191 T@U) ) (!  (=> ($generated@@88 $generated@@191 $generated@@18) ($generated@@176 $generated@@191))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@179) $generated@@191))
 :pattern ( ($generated@@175 $generated@@191))
)))) (and (and (forall (($generated@@192 T@U) ) (!  (=> ($generated@@88 $generated@@192 $generated@@18) (=> (not ($generated@@175 $generated@@192)) (= ($generated@@54 0) ($generated@@77 ($generated@@21 $generated@@179) $generated@@192))))
 :pattern ( ($generated@@77 ($generated@@21 $generated@@179) $generated@@192))
 :pattern ( ($generated@@175 $generated@@192))
)) (forall (($generated@@193 T@U) ) (!  (=> (and (or (not (= $generated@@193 $generated@@165)) (not true)) ($generated@@6 ($generated@@30 $generated@@2 ($generated@@25 $generated@@26 $generated@@27 ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@171 $generated@@193) $generated@@0)))) (= ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@178 $generated@@193) ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@171 $generated@@193)))
 :pattern ( ($generated@@25 $generated@@28 ($generated@@29 $generated@@26 $generated@@27) $generated@@178 $generated@@193))
))) (and ($generated@@24 $generated@@171 $generated@@178) (= (ControlFlow 0 2) (- 0 1)))))) ($generated@@82 ($generated@@21 $generated@@173) ($generated@@21 $generated@@179)))))))
(let (($generated@@194  (=> (and (and (and (and ($generated@@170 $generated@@166) ($generated@@172 $generated@@166)) (and ($generated@@89 $generated@@103 $generated@@174 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@174 ($generated@@104 $generated@@18) $generated@@166))) (and (and ($generated@@89 $generated@@103 $generated@@180 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@180 ($generated@@104 $generated@@18) $generated@@166)) true)) (and (and (and ($generated@@89 $generated@@103 $generated@@181 ($generated@@104 $generated@@18)) ($generated@@63 $generated@@103 $generated@@181 ($generated@@104 $generated@@18) $generated@@166)) true) (and (= 2 $generated@@182) (= (ControlFlow 0 3) 2)))) $generated@@183)))
$generated@@194)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
