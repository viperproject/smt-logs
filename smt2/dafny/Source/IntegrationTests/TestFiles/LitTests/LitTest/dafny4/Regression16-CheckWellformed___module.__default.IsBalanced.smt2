(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (Int T@U T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Int)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (Int) Int)
(declare-fun $generated@@61 (T@U T@U) T@U)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Int)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@102 () T@U)
(declare-fun $generated@@114 (T@U T@U T@U) Bool)
(declare-fun $generated@@115 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@122 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@229 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@26) 3))
(assert (forall (($generated@@29 Int) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@27 $generated@@29 $generated@@30 $generated@@31) $generated@@28)  (and (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@29) $generated@@0) ($generated@@25 $generated@@26 $generated@@30 $generated@@28)) ($generated@@25 $generated@@26 $generated@@31 $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@27 $generated@@29 $generated@@30 $generated@@31) $generated@@28))
)))
(assert (= ($generated@@9 $generated@@35) 4))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (or ($generated@@34 $generated@@38) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@38 $generated@@28))) ($generated@@25 $generated@@35 ($generated@@33 $generated@@37 $generated@@38) ($generated@@36 $generated@@0)))
 :pattern ( ($generated@@33 $generated@@37 $generated@@38))
))))
(assert (= ($generated@@39 $generated) $generated@@1))
(assert (= ($generated@@39 $generated@@0) $generated@@2))
(assert (forall (($generated@@41 Int) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 ($generated@@27 $generated@@41 $generated@@42 $generated@@43)) $generated@@7)
 :pattern ( ($generated@@27 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 Int) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@44 ($generated@@27 $generated@@45 $generated@@46 $generated@@47)) $generated@@45)
 :pattern ( ($generated@@27 $generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 Int) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@48 ($generated@@27 $generated@@49 $generated@@50 $generated@@51)) $generated@@50)
 :pattern ( ($generated@@27 $generated@@49 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 Int) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@52 ($generated@@27 $generated@@53 $generated@@54 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@27 $generated@@53 $generated@@54 $generated@@55))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@34 ($generated@@57 $generated@@26 $generated@@65)) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@65 $generated@@28))) (and (=> (not ($generated@@14 ($generated@@57 $generated@@10 ($generated@@13 ($generated@@58 ($generated@@57 $generated@@26 $generated@@65)))))) (let (($generated@@66 ($generated@@57 $generated@@26 ($generated@@52 ($generated@@57 $generated@@26 $generated@@65)))))
(let (($generated@@67 ($generated@@57 $generated@@26 ($generated@@48 ($generated@@57 $generated@@26 $generated@@65)))))
 (and ($generated@@34 $generated@@67) ($generated@@34 $generated@@66))))) (= ($generated@@33 ($generated@@56 $generated@@64) ($generated@@57 $generated@@26 $generated@@65)) (ite ($generated@@58 ($generated@@57 $generated@@26 $generated@@65)) $generated@@59 (let (($generated@@68 ($generated@@57 $generated@@26 ($generated@@52 ($generated@@57 $generated@@26 $generated@@65)))))
(let (($generated@@69 ($generated@@57 $generated@@26 ($generated@@48 ($generated@@57 $generated@@26 $generated@@65)))))
(let (($generated@@70 ($generated@@60 ($generated@@44 ($generated@@57 $generated@@26 $generated@@65)))))
($generated@@61 ($generated@@61 ($generated@@62 $generated@@59 ($generated@@63 $generated@@11 ($generated@@15 $generated@@70))) ($generated@@33 ($generated@@56 $generated@@64) $generated@@69)) ($generated@@33 ($generated@@56 $generated@@64) $generated@@68)))))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@56 $generated@@64) ($generated@@57 $generated@@26 $generated@@65)))
))))
(assert (= ($generated@@40 $generated@@71) $generated@@6))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@25 $generated@@35 $generated@@73 ($generated@@36 $generated@@74)) ($generated@@72 $generated@@73))
 :pattern ( ($generated@@25 $generated@@35 $generated@@73 ($generated@@36 $generated@@74)))
)))
(assert ($generated@@25 $generated@@26 $generated@@71 $generated@@28))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@60 $generated@@75) $generated@@75)
 :pattern ( ($generated@@60 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@57 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@57 $generated@@77 $generated@@76))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@34 $generated@@79) (and (< 1 $generated@@32) ($generated@@25 $generated@@26 $generated@@79 $generated@@28))) (and (=> (not ($generated@@58 $generated@@79)) (let (($generated@@80 ($generated@@52 $generated@@79)))
(let (($generated@@81 ($generated@@48 $generated@@79)))
 (and ($generated@@34 $generated@@81) ($generated@@34 $generated@@80))))) (= ($generated@@33 ($generated@@56 $generated@@78) $generated@@79) (ite ($generated@@58 $generated@@79) $generated@@59 (let (($generated@@82 ($generated@@52 $generated@@79)))
(let (($generated@@83 ($generated@@48 $generated@@79)))
(let (($generated@@84 ($generated@@44 $generated@@79)))
($generated@@61 ($generated@@61 ($generated@@62 $generated@@59 ($generated@@63 $generated@@11 ($generated@@15 $generated@@84))) ($generated@@33 $generated@@78 $generated@@83)) ($generated@@33 $generated@@78 $generated@@82)))))))))
 :pattern ( ($generated@@33 ($generated@@56 $generated@@78) $generated@@79))
))))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@58 $generated@@85) (= ($generated@@40 $generated@@85) $generated@@6))
 :pattern ( ($generated@@58 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@87) (= ($generated@@40 $generated@@87) $generated@@7))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@63 $generated@@90 ($generated@@88 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@88 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@86 $generated@@91) (exists (($generated@@92 Int) ($generated@@93 T@U) ($generated@@94 T@U) ) (= $generated@@91 ($generated@@27 $generated@@92 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@86 $generated@@91))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or (not (= $generated@@97 $generated@@98)) (not true)) (= ($generated@@95 $generated@@96 $generated@@98) ($generated@@95 ($generated@@62 $generated@@96 $generated@@97) $generated@@98)))
 :pattern ( ($generated@@62 $generated@@96 $generated@@97) ($generated@@95 $generated@@96 $generated@@98))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@100 ($generated@@57 $generated@@26 $generated@@104)) (and (< 2 $generated@@32) ($generated@@25 $generated@@26 $generated@@104 $generated@@28))) (and (=> (not ($generated@@14 ($generated@@57 $generated@@10 ($generated@@13 ($generated@@58 ($generated@@57 $generated@@26 $generated@@104)))))) (let (($generated@@105 ($generated@@57 $generated@@26 ($generated@@52 ($generated@@57 $generated@@26 $generated@@104)))))
(let (($generated@@106 ($generated@@57 $generated@@26 ($generated@@48 ($generated@@57 $generated@@26 $generated@@104)))))
 (and ($generated@@100 $generated@@106) (=> ($generated@@99 ($generated@@56 $generated@@103) $generated@@106) (and ($generated@@100 $generated@@105) (=> ($generated@@99 ($generated@@56 $generated@@103) $generated@@105) (and ($generated@@34 $generated@@106) ($generated@@34 $generated@@105))))))))) (= ($generated@@99 ($generated@@56 $generated@@103) ($generated@@57 $generated@@26 $generated@@104)) (ite ($generated@@58 ($generated@@57 $generated@@26 $generated@@104)) true (let (($generated@@107 ($generated@@57 $generated@@26 ($generated@@52 ($generated@@57 $generated@@26 $generated@@104)))))
(let (($generated@@108 ($generated@@57 $generated@@26 ($generated@@48 ($generated@@57 $generated@@26 $generated@@104)))))
 (and (and ($generated@@99 ($generated@@56 $generated@@103) $generated@@108) ($generated@@99 ($generated@@56 $generated@@103) $generated@@107)) (let (($generated@@109 ($generated@@101 ($generated@@57 $generated@@35 ($generated@@33 ($generated@@56 $generated@@102) $generated@@107)))))
(let (($generated@@110 ($generated@@101 ($generated@@57 $generated@@35 ($generated@@33 ($generated@@56 $generated@@102) $generated@@108)))))
 (or (= $generated@@110 $generated@@109) (= $generated@@110 (+ $generated@@109 1))))))))))))
 :weight 3
 :pattern ( ($generated@@99 ($generated@@56 $generated@@103) ($generated@@57 $generated@@26 $generated@@104)))
))))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@58 $generated@@111) (= $generated@@111 $generated@@71))
 :pattern ( ($generated@@58 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@101 ($generated@@62 $generated@@112 $generated@@113)) (+ ($generated@@101 $generated@@112) 1))
 :pattern ( ($generated@@101 ($generated@@62 $generated@@112 $generated@@113)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@114 ($generated@@63 $generated@@119 $generated@@116) $generated@@117 $generated@@118) ($generated@@115 $generated@@119 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@114 ($generated@@63 $generated@@119 $generated@@116) $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@101 ($generated@@61 $generated@@120 $generated@@121)) (+ ($generated@@101 $generated@@120) ($generated@@101 $generated@@121)))
 :pattern ( ($generated@@101 ($generated@@61 $generated@@120 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@122 $generated@@123 $generated@@28) (and (= ($generated@@63 $generated@@26 ($generated@@88 $generated@@26 $generated@@123)) $generated@@123) ($generated@@25 $generated@@26 ($generated@@88 $generated@@26 $generated@@123) $generated@@28)))
 :pattern ( ($generated@@122 $generated@@123 $generated@@28))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@25 $generated@@35 $generated@@124 ($generated@@36 $generated@@125)) (forall (($generated@@126 T@U) ) (!  (=> (< 0 ($generated@@95 $generated@@124 $generated@@126)) ($generated@@122 $generated@@126 $generated@@125))
 :pattern ( ($generated@@95 $generated@@124 $generated@@126))
)))
 :pattern ( ($generated@@25 $generated@@35 $generated@@124 ($generated@@36 $generated@@125)))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@127 $generated@@28) (or ($generated@@58 $generated@@127) ($generated@@86 $generated@@127)))
 :pattern ( ($generated@@86 $generated@@127) ($generated@@25 $generated@@26 $generated@@127 $generated@@28))
 :pattern ( ($generated@@58 $generated@@127) ($generated@@25 $generated@@26 $generated@@127 $generated@@28))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@122 $generated@@128 $generated@@0) (and (= ($generated@@63 $generated@@11 ($generated@@88 $generated@@11 $generated@@128)) $generated@@128) ($generated@@25 $generated@@11 ($generated@@88 $generated@@11 $generated@@128) $generated@@0)))
 :pattern ( ($generated@@122 $generated@@128 $generated@@0))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@122 $generated@@129 $generated) (and (= ($generated@@63 $generated@@10 ($generated@@88 $generated@@10 $generated@@129)) $generated@@129) ($generated@@25 $generated@@10 ($generated@@88 $generated@@10 $generated@@129) $generated)))
 :pattern ( ($generated@@122 $generated@@129 $generated))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@99 ($generated@@56 $generated@@130) $generated@@131) ($generated@@99 $generated@@130 $generated@@131))
 :pattern ( ($generated@@99 ($generated@@56 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@122 ($generated@@63 $generated@@134 $generated@@132) $generated@@133) ($generated@@25 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@122 ($generated@@63 $generated@@134 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@72 $generated@@135) (forall (($generated@@136 T@U) ) (!  (and (<= 0 ($generated@@95 $generated@@135 $generated@@136)) (<= ($generated@@95 $generated@@135 $generated@@136) ($generated@@101 $generated@@135)))
 :pattern ( ($generated@@95 $generated@@135 $generated@@136))
)))
 :pattern ( ($generated@@72 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (<= 0 ($generated@@101 $generated@@137))
 :pattern ( ($generated@@101 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@95 $generated@@59 $generated@@138) 0)
 :pattern ( ($generated@@95 $generated@@59 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@95 ($generated@@62 $generated@@139 $generated@@140) $generated@@140) (+ ($generated@@95 $generated@@139 $generated@@140) 1))
 :pattern ( ($generated@@62 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 Int) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@27 ($generated@@60 $generated@@141) ($generated@@57 $generated@@26 $generated@@142) ($generated@@57 $generated@@26 $generated@@143)) ($generated@@57 $generated@@26 ($generated@@27 $generated@@141 $generated@@142 $generated@@143)))
 :pattern ( ($generated@@27 ($generated@@60 $generated@@141) ($generated@@57 $generated@@26 $generated@@142) ($generated@@57 $generated@@26 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@36 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@36 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@39 ($generated@@36 $generated@@146)) $generated@@3)
 :pattern ( ($generated@@36 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@88 $generated@@148 ($generated@@63 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@63 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@150 Int) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (< ($generated@@149 $generated@@151) ($generated@@149 ($generated@@27 $generated@@150 $generated@@151 $generated@@152)))
 :pattern ( ($generated@@27 $generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 Int) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@149 $generated@@155) ($generated@@149 ($generated@@27 $generated@@153 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@27 $generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@33 ($generated@@56 $generated@@156) $generated@@157) ($generated@@33 $generated@@156 $generated@@157))
 :pattern ( ($generated@@33 ($generated@@56 $generated@@156) $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (!  (and (= (= ($generated@@101 $generated@@158) 0) (= $generated@@158 $generated@@59)) (=> (or (not (= ($generated@@101 $generated@@158) 0)) (not true)) (exists (($generated@@159 T@U) ) (! (< 0 ($generated@@95 $generated@@158 $generated@@159))
 :pattern ( ($generated@@95 $generated@@158 $generated@@159))
))))
 :pattern ( ($generated@@101 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@95 ($generated@@61 $generated@@160 $generated@@161) $generated@@162) (+ ($generated@@95 $generated@@160 $generated@@162) ($generated@@95 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@95 ($generated@@61 $generated@@160 $generated@@161) $generated@@162))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@163 $generated@@174 $generated@@175 $generated@@176 ($generated@@170 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@179 $generated@@180) $generated@@177)
 :weight 0
)) (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@163 $generated@@181 $generated@@182 $generated@@183 ($generated@@170 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@163 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@163 $generated@@190 $generated@@191 $generated@@192 ($generated@@170 $generated@@190 $generated@@191 $generated@@192 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@163 $generated@@190 $generated@@191 $generated@@192 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)))) (= ($generated@@9 $generated@@164) 5)) (= ($generated@@9 $generated@@165) 6)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@167 $generated@@199 $generated@@200 ($generated@@171 $generated@@199 $generated@@200 $generated@@202 $generated@@203 $generated@@201) $generated@@203) $generated@@201)
 :weight 0
))) (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (or (= $generated@@208 $generated@@209) (= ($generated@@167 $generated@@204 $generated@@205 ($generated@@171 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@206) $generated@@209) ($generated@@167 $generated@@204 $generated@@205 $generated@@207 $generated@@209)))
 :weight 0
))) (= ($generated@@9 $generated@@168) 7)) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (= ($generated@@9 ($generated@@169 $generated@@210 $generated@@211)) 8))) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (! (= ($generated@@172 ($generated@@169 $generated@@212 $generated@@213)) $generated@@212)
 :pattern ( ($generated@@169 $generated@@212 $generated@@213))
))) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@173 ($generated@@169 $generated@@214 $generated@@215)) $generated@@215)
 :pattern ( ($generated@@169 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 Bool) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@14 ($generated@@163 $generated@@164 $generated@@165 $generated@@10 ($generated@@166 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))  (=> (and (or (not (= $generated@@220 $generated@@216)) (not true)) ($generated@@14 ($generated@@88 $generated@@10 ($generated@@167 $generated@@165 $generated@@168 ($generated@@167 $generated@@164 ($generated@@169 $generated@@165 $generated@@168) $generated@@217 $generated@@220) $generated@@218)))) $generated@@219))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165 $generated@@10 ($generated@@166 $generated@@216 $generated@@217 $generated@@218 $generated@@219) $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and ($generated@@222 $generated@@224) (and ($generated@@86 $generated@@223) ($generated@@115 $generated@@26 $generated@@223 $generated@@28 $generated@@224))) ($generated@@115 $generated@@11 ($generated@@15 ($generated@@44 $generated@@223)) $generated@@0 $generated@@224))
 :pattern ( ($generated@@115 $generated@@11 ($generated@@15 ($generated@@44 $generated@@223)) $generated@@0 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> ($generated@@122 $generated@@225 ($generated@@36 $generated@@226)) (and (= ($generated@@63 $generated@@35 ($generated@@88 $generated@@35 $generated@@225)) $generated@@225) ($generated@@25 $generated@@35 ($generated@@88 $generated@@35 $generated@@225) ($generated@@36 $generated@@226))))
 :pattern ( ($generated@@122 $generated@@225 ($generated@@36 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and ($generated@@222 $generated@@228) ($generated@@25 $generated@@26 $generated@@227 $generated@@28)) ($generated@@115 $generated@@26 $generated@@227 $generated@@28 $generated@@228))
 :pattern ( ($generated@@115 $generated@@26 $generated@@227 $generated@@28 $generated@@228))
)))
(assert (= ($generated@@39 $generated@@28) $generated@@5))
(assert (= ($generated@@229 $generated@@28) $generated@@8))
(assert (= $generated@@71 ($generated@@57 $generated@@26 $generated@@71)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and ($generated@@222 $generated@@231) (and ($generated@@86 $generated@@230) ($generated@@115 $generated@@26 $generated@@230 $generated@@28 $generated@@231))) ($generated@@115 $generated@@26 ($generated@@48 $generated@@230) $generated@@28 $generated@@231))
 :pattern ( ($generated@@115 $generated@@26 ($generated@@48 $generated@@230) $generated@@28 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and ($generated@@222 $generated@@233) (and ($generated@@86 $generated@@232) ($generated@@115 $generated@@26 $generated@@232 $generated@@28 $generated@@233))) ($generated@@115 $generated@@26 ($generated@@52 $generated@@232) $generated@@28 $generated@@233))
 :pattern ( ($generated@@115 $generated@@26 ($generated@@52 $generated@@232) $generated@@28 $generated@@233))
)))
(assert (forall (($generated@@234 Int) ) (! (= ($generated@@63 $generated@@11 ($generated@@15 ($generated@@60 $generated@@234))) ($generated@@57 $generated@@168 ($generated@@63 $generated@@11 ($generated@@15 $generated@@234))))
 :pattern ( ($generated@@63 $generated@@11 ($generated@@15 ($generated@@60 $generated@@234))))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@T) ) (! (= ($generated@@63 $generated@@236 ($generated@@57 $generated@@236 $generated@@235)) ($generated@@57 $generated@@168 ($generated@@63 $generated@@236 $generated@@235)))
 :pattern ( ($generated@@63 $generated@@236 ($generated@@57 $generated@@236 $generated@@235)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (< 0 ($generated@@95 $generated@@237 $generated@@239)) (< 0 ($generated@@95 ($generated@@62 $generated@@237 $generated@@238) $generated@@239)))
 :pattern ( ($generated@@62 $generated@@237 $generated@@238) ($generated@@95 $generated@@237 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= (< 0 ($generated@@95 ($generated@@62 $generated@@240 $generated@@241) $generated@@242))  (or (= $generated@@242 $generated@@241) (< 0 ($generated@@95 $generated@@240 $generated@@242))))
 :pattern ( ($generated@@95 ($generated@@62 $generated@@240 $generated@@241) $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (! (= ($generated@@115 $generated@@35 $generated@@243 ($generated@@36 $generated@@244) $generated@@245) (forall (($generated@@246 T@U) ) (!  (=> (< 0 ($generated@@95 $generated@@243 $generated@@246)) ($generated@@114 $generated@@246 $generated@@244 $generated@@245))
 :pattern ( ($generated@@95 $generated@@243 $generated@@246))
)))
 :pattern ( ($generated@@115 $generated@@35 $generated@@243 ($generated@@36 $generated@@244) $generated@@245))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (! ($generated@@115 $generated@@11 $generated@@248 $generated@@0 $generated@@247)
 :pattern ( ($generated@@115 $generated@@11 $generated@@248 $generated@@0 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! ($generated@@115 $generated@@10 $generated@@250 $generated $generated@@249)
 :pattern ( ($generated@@115 $generated@@10 $generated@@250 $generated $generated@@249))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (or ($generated@@100 $generated@@252) (and (< 2 $generated@@32) ($generated@@25 $generated@@26 $generated@@252 $generated@@28))) (and (=> (not ($generated@@58 $generated@@252)) (let (($generated@@253 ($generated@@52 $generated@@252)))
(let (($generated@@254 ($generated@@48 $generated@@252)))
 (and ($generated@@100 $generated@@254) (=> ($generated@@99 $generated@@251 $generated@@254) (and ($generated@@100 $generated@@253) (=> ($generated@@99 $generated@@251 $generated@@253) (and ($generated@@34 $generated@@254) ($generated@@34 $generated@@253))))))))) (= ($generated@@99 ($generated@@56 $generated@@251) $generated@@252) (ite ($generated@@58 $generated@@252) true (let (($generated@@255 ($generated@@52 $generated@@252)))
(let (($generated@@256 ($generated@@48 $generated@@252)))
 (and (and ($generated@@99 $generated@@251 $generated@@256) ($generated@@99 $generated@@251 $generated@@255)) (let (($generated@@257 ($generated@@101 ($generated@@33 ($generated@@56 $generated@@102) $generated@@255))))
(let (($generated@@258 ($generated@@101 ($generated@@33 ($generated@@56 $generated@@102) $generated@@256))))
 (or (= $generated@@258 $generated@@257) (= $generated@@258 (+ $generated@@257 1))))))))))))
 :pattern ( ($generated@@99 ($generated@@56 $generated@@251) $generated@@252))
))))
(assert (forall (($generated@@259 T@U) ) (! ($generated@@25 $generated@@11 $generated@@259 $generated@@0)
 :pattern ( ($generated@@25 $generated@@11 $generated@@259 $generated@@0))
)))
(assert (forall (($generated@@260 T@U) ) (! ($generated@@25 $generated@@10 $generated@@260 $generated)
 :pattern ( ($generated@@25 $generated@@10 $generated@@260 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@261 () Int)
(declare-fun $generated@@262 () Int)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () Int)
(declare-fun $generated@@267 () Int)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () Int)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@277 true))
(let (($generated@@278  (=> (and (= $generated@@261 $generated@@262) (= (ControlFlow 0 7) 4)) $generated@@277)))
(let (($generated@@279  (=> (and (or (not (= $generated@@261 $generated@@262)) (not true)) (= (ControlFlow 0 6) 4)) $generated@@277)))
(let (($generated@@280  (=> (and ($generated@@99 ($generated@@56 $generated@@102) $generated@@263) ($generated@@99 ($generated@@56 $generated@@102) $generated@@264)) (=> (and (and ($generated@@115 $generated@@26 $generated@@263 $generated@@28 $generated@@265) ($generated@@34 $generated@@263)) (and (= $generated@@266 ($generated@@101 ($generated@@33 ($generated@@56 $generated@@102) $generated@@263))) ($generated@@34 $generated@@263))) (=> (and (and (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@266) $generated@@0) (= $generated@@261 $generated@@266)) (and ($generated@@115 $generated@@26 $generated@@264 $generated@@28 $generated@@265) ($generated@@34 $generated@@264))) (and (and (= $generated@@267 ($generated@@101 ($generated@@33 ($generated@@56 $generated@@102) $generated@@264))) ($generated@@34 $generated@@264)) (and ($generated@@25 $generated@@11 ($generated@@15 $generated@@267) $generated@@0) (= $generated@@262 $generated@@267)))) (and (=> (= (ControlFlow 0 8) 6) $generated@@279) (=> (= (ControlFlow 0 8) 7) $generated@@278)))))))
(let (($generated@@281  (=> (and (not (and ($generated@@99 ($generated@@56 $generated@@102) $generated@@263) ($generated@@99 ($generated@@56 $generated@@102) $generated@@264))) (= (ControlFlow 0 5) 4)) $generated@@277)))
(let (($generated@@282  (=> (not ($generated@@99 ($generated@@56 $generated@@102) $generated@@263)) (and (=> (= (ControlFlow 0 11) 8) $generated@@280) (=> (= (ControlFlow 0 11) 5) $generated@@281)))))
(let (($generated@@283  (=> (and ($generated@@99 ($generated@@56 $generated@@102) $generated@@263) ($generated@@115 $generated@@26 $generated@@264 $generated@@28 $generated@@265)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (< ($generated@@149 $generated@@264) ($generated@@149 $generated@@268))) (=> (< ($generated@@149 $generated@@264) ($generated@@149 $generated@@268)) (=> ($generated@@100 $generated@@264) (and (=> (= (ControlFlow 0 9) 8) $generated@@280) (=> (= (ControlFlow 0 9) 5) $generated@@281))))))))
(let (($generated@@284  (=> (and (= $generated@@268 ($generated@@27 $generated@@269 $generated@@270 $generated@@271)) ($generated@@25 $generated@@26 $generated@@270 $generated@@28)) (=> (and (and (and ($generated@@25 $generated@@26 $generated@@271 $generated@@28) (= $generated@@272 $generated@@271)) (and ($generated@@25 $generated@@26 $generated@@272 $generated@@28) (= $generated@@264 $generated@@272))) (and (and (= $generated@@273 $generated@@270) ($generated@@25 $generated@@26 $generated@@273 $generated@@28)) (and (= $generated@@263 $generated@@273) ($generated@@115 $generated@@26 $generated@@263 $generated@@28 $generated@@265)))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (< ($generated@@149 $generated@@263) ($generated@@149 $generated@@268))) (=> (< ($generated@@149 $generated@@263) ($generated@@149 $generated@@268)) (=> ($generated@@100 $generated@@263) (and (=> (= (ControlFlow 0 12) 9) $generated@@283) (=> (= (ControlFlow 0 12) 11) $generated@@282)))))))))
(let (($generated@@285 true))
(let (($generated@@286  (=> (or (not (= $generated@@268 $generated@@71)) (not true)) (and (=> (= (ControlFlow 0 14) 12) $generated@@284) (=> (= (ControlFlow 0 14) 3) $generated@@285)))))
(let (($generated@@287 true))
(let (($generated@@288 true))
(let (($generated@@289  (=> (= $generated@@274 ($generated@@166 $generated@@275 $generated@@265 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 15) 1) $generated@@288) (=> (= (ControlFlow 0 15) 2) $generated@@287)) (=> (= (ControlFlow 0 15) 14) $generated@@286)))))
(let (($generated@@290  (=> (and (and (and ($generated@@222 $generated@@265) ($generated@@276 $generated@@265)) ($generated@@25 $generated@@26 $generated@@268 $generated@@28)) (and (= 2 $generated@@32) (= (ControlFlow 0 16) 15))) $generated@@289)))
$generated@@290)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
