(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@45 () Int)
(declare-fun $generated@@46 (T@U Int T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (Int T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@70 (T@U Int) Bool)
(declare-fun $generated@@71 (T@U Int) Bool)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@85 (T@U Int T@U) Int)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@109 (Int T@U) Bool)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@132 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@T T@T) T@T)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@187 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (= ($generated@@25 $generated@@26) $generated@@5))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
 :pattern ( ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34))
 :pattern ( ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@33 $generated@@28 ($generated@@40 $generated@@43 $generated@@44) ($generated@@29 $generated@@42))  (and ($generated@@41 $generated@@43 $generated@@42) ($generated@@33 $generated@@28 $generated@@44 ($generated@@29 $generated@@42))))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@40 $generated@@43 $generated@@44) ($generated@@29 $generated@@42)))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@54 T@U) ($generated@@55 Int) ($generated@@56 T@U) ) (!  (=> (or ($generated@@48 ($generated@@35 $generated@@55) ($generated@@37 $generated@@28 $generated@@56)) (and (< 1 $generated@@45) ($generated@@33 $generated@@28 $generated@@56 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@13 ($generated@@37 $generated@@9 ($generated@@12 ($generated@@49 ($generated@@37 $generated@@28 $generated@@56)))))) (let (($generated@@57 ($generated@@37 $generated@@28 ($generated@@50 ($generated@@37 $generated@@28 $generated@@56)))))
(let (($generated@@58 ($generated@@35 ($generated@@15 ($generated@@51 $generated@@10 ($generated@@52 ($generated@@37 $generated@@28 $generated@@56)))))))
 (=> (< $generated@@58 ($generated@@35 $generated@@55)) ($generated@@48 ($generated@@35 $generated@@55) $generated@@57))))) (= ($generated@@46 ($generated@@47 $generated@@54) ($generated@@35 $generated@@55) ($generated@@37 $generated@@28 $generated@@56)) (ite ($generated@@49 ($generated@@37 $generated@@28 $generated@@56)) ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 ($generated@@35 $generated@@55))) ($generated@@37 $generated@@28 $generated@@26)) (let (($generated@@59 ($generated@@37 $generated@@28 ($generated@@50 ($generated@@37 $generated@@28 $generated@@56)))))
(let (($generated@@60 ($generated@@35 ($generated@@15 ($generated@@51 $generated@@10 ($generated@@52 ($generated@@37 $generated@@28 $generated@@56)))))))
(ite (<= ($generated@@35 $generated@@55) $generated@@60) ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 ($generated@@35 $generated@@55))) ($generated@@37 $generated@@28 $generated@@56)) ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@60)) ($generated@@37 $generated@@28 ($generated@@46 ($generated@@47 $generated@@54) ($generated@@35 $generated@@55) $generated@@59))))))))))
 :weight 3
 :pattern ( ($generated@@46 ($generated@@47 $generated@@54) ($generated@@35 $generated@@55) ($generated@@37 $generated@@28 $generated@@56)))
))))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@49 $generated@@61) (= ($generated@@25 $generated@@61) $generated@@5))
 :pattern ( ($generated@@49 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@25 $generated@@63) $generated@@6))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@53 $generated@@65 ($generated@@51 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@51 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@62 $generated@@66) (exists (($generated@@67 T@U) ($generated@@68 T@U) ) (= $generated@@66 ($generated@@40 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@62 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@49 $generated@@69) (= $generated@@69 $generated@@26))
 :pattern ( ($generated@@49 $generated@@69))
)))
(assert  (=> (<= 4 $generated@@45) (forall (($generated@@74 T@U) ($generated@@75 Int) ) (!  (=> (or ($generated@@71 $generated@@74 $generated@@75) (and (< 4 $generated@@45) ($generated@@33 $generated@@28 $generated@@74 ($generated@@29 $generated@@0)))) ($generated@@72 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@75)) $generated@@74) ($generated@@46 ($generated@@47 $generated@@73) $generated@@75 $generated@@74)))
 :pattern ( ($generated@@70 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@53 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@27 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@76 ($generated@@53 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ) (!  (and (= ($generated@@24 ($generated@@29 $generated@@82)) $generated@@4) (= ($generated@@81 ($generated@@29 $generated@@82)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@82))
)))
(assert  (=> (<= 4 $generated@@45) (forall (($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (or ($generated@@71 ($generated@@37 $generated@@28 $generated@@83) ($generated@@35 $generated@@84)) (and (< 4 $generated@@45) ($generated@@33 $generated@@28 $generated@@83 ($generated@@29 $generated@@0)))) (= ($generated@@70 ($generated@@37 $generated@@28 $generated@@83) ($generated@@35 $generated@@84)) ($generated@@13 ($generated@@37 $generated@@9 ($generated@@12 true)))))
 :weight 3
 :pattern ( ($generated@@70 ($generated@@37 $generated@@28 $generated@@83) ($generated@@35 $generated@@84)))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 T@U) ) (! (= ($generated@@85 ($generated@@47 $generated@@86) $generated@@87 $generated@@88) ($generated@@85 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 T@U) ) (! (= ($generated@@46 ($generated@@47 $generated@@89) $generated@@90 $generated@@91) ($generated@@46 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@33 $generated@@28 $generated@@93 ($generated@@29 $generated@@92)) (or ($generated@@49 $generated@@93) ($generated@@62 $generated@@93)))
 :pattern ( ($generated@@62 $generated@@93) ($generated@@33 $generated@@28 $generated@@93 ($generated@@29 $generated@@92)))
 :pattern ( ($generated@@49 $generated@@93) ($generated@@33 $generated@@28 $generated@@93 ($generated@@29 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@41 $generated@@94 $generated@@0) (and (= ($generated@@53 $generated@@10 ($generated@@51 $generated@@10 $generated@@94)) $generated@@94) ($generated@@33 $generated@@10 ($generated@@51 $generated@@10 $generated@@94) $generated@@0)))
 :pattern ( ($generated@@41 $generated@@94 $generated@@0))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@41 $generated@@95 $generated) (and (= ($generated@@53 $generated@@9 ($generated@@51 $generated@@9 $generated@@95)) $generated@@95) ($generated@@33 $generated@@9 ($generated@@51 $generated@@9 $generated@@95) $generated)))
 :pattern ( ($generated@@41 $generated@@95 $generated))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@41 ($generated@@53 $generated@@98 $generated@@96) $generated@@97) ($generated@@33 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@41 ($generated@@53 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@25 ($generated@@40 $generated@@99 $generated@@100)) $generated@@6)
 :pattern ( ($generated@@40 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@52 ($generated@@40 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@40 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@50 ($generated@@40 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@40 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@105 ($generated@@29 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@29 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@51 $generated@@108 ($generated@@53 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@53 $generated@@108 $generated@@107))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 T@U) ) (!  (=> (or ($generated@@109 $generated@@111 $generated@@112) (and (< 1 $generated@@45) ($generated@@33 $generated@@28 $generated@@112 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@49 $generated@@112)) (let (($generated@@113 ($generated@@50 $generated@@112)))
($generated@@109 $generated@@111 $generated@@113))) (= ($generated@@85 ($generated@@47 $generated@@110) $generated@@111 $generated@@112) (ite ($generated@@49 $generated@@112) 0 (let (($generated@@114 ($generated@@50 $generated@@112)))
(let (($generated@@115 ($generated@@15 ($generated@@51 $generated@@10 ($generated@@52 $generated@@112)))))
(+ (ite (= $generated@@111 $generated@@115) 1 0) ($generated@@85 $generated@@110 $generated@@111 $generated@@114))))))))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@110) $generated@@111 $generated@@112))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (< ($generated@@116 $generated@@118) ($generated@@117 ($generated@@40 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@40 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (< ($generated@@117 $generated@@121) ($generated@@117 ($generated@@40 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@40 $generated@@120 $generated@@121))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@122 T@U) ($generated@@123 Int) ($generated@@124 T@U) ) (!  (=> (or ($generated@@48 $generated@@123 $generated@@124) (and (< 1 $generated@@45) ($generated@@33 $generated@@28 $generated@@124 ($generated@@29 $generated@@0)))) ($generated@@33 $generated@@28 ($generated@@46 $generated@@122 $generated@@123 $generated@@124) ($generated@@29 $generated@@0)))
 :pattern ( ($generated@@46 $generated@@122 $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@30 $generated@@127) (and ($generated@@62 $generated@@125) ($generated@@27 $generated@@28 $generated@@125 ($generated@@29 $generated@@126) $generated@@127))) ($generated@@76 ($generated@@52 $generated@@125) $generated@@126 $generated@@127))
 :pattern ( ($generated@@76 ($generated@@52 $generated@@125) $generated@@126 $generated@@127))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@128 $generated@@139 $generated@@140 $generated@@141 ($generated@@135 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@128 $generated@@146 $generated@@147 $generated@@148 ($generated@@135 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@128 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@128 $generated@@155 $generated@@156 $generated@@157 ($generated@@135 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@128 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))) (= ($generated@@8 $generated@@129) 4)) (= ($generated@@8 $generated@@130) 5)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@132 $generated@@164 $generated@@165 ($generated@@136 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@168) $generated@@166)
 :weight 0
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@173 $generated@@174) (= ($generated@@132 $generated@@169 $generated@@170 ($generated@@136 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@171) $generated@@174) ($generated@@132 $generated@@169 $generated@@170 $generated@@172 $generated@@174)))
 :weight 0
))) (= ($generated@@8 $generated@@133) 6)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@8 ($generated@@134 $generated@@175 $generated@@176)) 7))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@137 ($generated@@134 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@134 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@138 ($generated@@134 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@134 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@13 ($generated@@128 $generated@@129 $generated@@130 $generated@@9 ($generated@@131 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@13 ($generated@@51 $generated@@9 ($generated@@132 $generated@@130 $generated@@133 ($generated@@132 $generated@@129 ($generated@@134 $generated@@130 $generated@@133) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@128 $generated@@129 $generated@@130 $generated@@9 ($generated@@131 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or ($generated@@187 ($generated@@37 $generated@@28 $generated@@188) ($generated@@37 $generated@@28 $generated@@189)) (and (< 2 $generated@@45) (and ($generated@@33 $generated@@28 $generated@@188 ($generated@@29 $generated@@0)) ($generated@@33 $generated@@28 $generated@@189 ($generated@@29 $generated@@0))))) (and (forall (($generated@@190 Int) ) (!  (and ($generated@@109 $generated@@190 ($generated@@37 $generated@@28 $generated@@188)) ($generated@@109 $generated@@190 ($generated@@37 $generated@@28 $generated@@189)))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@190 $generated@@189))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@190 $generated@@188))
)) (= ($generated@@72 ($generated@@37 $generated@@28 $generated@@188) ($generated@@37 $generated@@28 $generated@@189)) (forall (($generated@@191 Int) ) (! (= ($generated@@85 ($generated@@47 $generated@@73) $generated@@191 ($generated@@37 $generated@@28 $generated@@188)) ($generated@@85 ($generated@@47 $generated@@73) $generated@@191 ($generated@@37 $generated@@28 $generated@@189)))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@191 $generated@@189))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@191 $generated@@188))
)))))
 :weight 3
 :pattern ( ($generated@@72 ($generated@@37 $generated@@28 $generated@@188) ($generated@@37 $generated@@28 $generated@@189)))
))))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@116 ($generated@@53 $generated@@28 $generated@@192)) ($generated@@117 $generated@@192))
 :pattern ( ($generated@@116 ($generated@@53 $generated@@28 $generated@@192)))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@193 T@U) ($generated@@194 Int) ($generated@@195 T@U) ) (!  (=> (or ($generated@@109 ($generated@@35 $generated@@194) ($generated@@37 $generated@@28 $generated@@195)) (and (< 1 $generated@@45) ($generated@@33 $generated@@28 $generated@@195 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@13 ($generated@@37 $generated@@9 ($generated@@12 ($generated@@49 ($generated@@37 $generated@@28 $generated@@195)))))) (let (($generated@@196 ($generated@@37 $generated@@28 ($generated@@50 ($generated@@37 $generated@@28 $generated@@195)))))
($generated@@109 ($generated@@35 $generated@@194) $generated@@196))) (= ($generated@@85 ($generated@@47 $generated@@193) ($generated@@35 $generated@@194) ($generated@@37 $generated@@28 $generated@@195)) (ite ($generated@@49 ($generated@@37 $generated@@28 $generated@@195)) 0 (let (($generated@@197 ($generated@@37 $generated@@28 ($generated@@50 ($generated@@37 $generated@@28 $generated@@195)))))
(let (($generated@@198 ($generated@@35 ($generated@@15 ($generated@@51 $generated@@10 ($generated@@52 ($generated@@37 $generated@@28 $generated@@195)))))))
(+ (ite (= ($generated@@35 $generated@@194) $generated@@198) 1 0) ($generated@@85 ($generated@@47 $generated@@193) ($generated@@35 $generated@@194) $generated@@197))))))))
 :weight 3
 :pattern ( ($generated@@85 ($generated@@47 $generated@@193) ($generated@@35 $generated@@194) ($generated@@37 $generated@@28 $generated@@195)))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@41 $generated@@200 ($generated@@29 $generated@@199)) (and (= ($generated@@53 $generated@@28 ($generated@@51 $generated@@28 $generated@@200)) $generated@@200) ($generated@@33 $generated@@28 ($generated@@51 $generated@@28 $generated@@200) ($generated@@29 $generated@@199))))
 :pattern ( ($generated@@41 $generated@@200 ($generated@@29 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and ($generated@@30 $generated@@203) (and ($generated@@62 $generated@@201) ($generated@@27 $generated@@28 $generated@@201 ($generated@@29 $generated@@202) $generated@@203))) ($generated@@27 $generated@@28 ($generated@@50 $generated@@201) ($generated@@29 $generated@@202) $generated@@203))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@50 $generated@@201) ($generated@@29 $generated@@202) $generated@@203))
)))
(assert (= $generated@@26 ($generated@@37 $generated@@28 $generated@@26)))
(assert  (=> (<= 4 $generated@@45) (forall (($generated@@204 T@U) ($generated@@205 Int) ) (!  (=> (or ($generated@@71 $generated@@204 $generated@@205) (and (< 4 $generated@@45) ($generated@@33 $generated@@28 $generated@@204 ($generated@@29 $generated@@0)))) (= ($generated@@70 $generated@@204 $generated@@205) ($generated@@13 ($generated@@37 $generated@@9 ($generated@@12 true)))))
 :pattern ( ($generated@@70 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@40 ($generated@@37 $generated@@133 $generated@@206) ($generated@@37 $generated@@28 $generated@@207)) ($generated@@37 $generated@@28 ($generated@@40 $generated@@206 $generated@@207)))
 :pattern ( ($generated@@40 ($generated@@37 $generated@@133 $generated@@206) ($generated@@37 $generated@@28 $generated@@207)))
)))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@53 $generated@@10 ($generated@@14 ($generated@@35 $generated@@208))) ($generated@@37 $generated@@133 ($generated@@53 $generated@@10 ($generated@@14 $generated@@208))))
 :pattern ( ($generated@@53 $generated@@10 ($generated@@14 ($generated@@35 $generated@@208))))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@T) ) (! (= ($generated@@53 $generated@@210 ($generated@@37 $generated@@210 $generated@@209)) ($generated@@37 $generated@@133 ($generated@@53 $generated@@210 $generated@@209)))
 :pattern ( ($generated@@53 $generated@@210 ($generated@@37 $generated@@210 $generated@@209)))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@211 T@U) ($generated@@212 Int) ($generated@@213 T@U) ) (!  (=> (or ($generated@@109 $generated@@212 $generated@@213) (and (< 1 $generated@@45) ($generated@@33 $generated@@28 $generated@@213 ($generated@@29 $generated@@0)))) (<= ($generated@@35 0) ($generated@@85 $generated@@211 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@85 $generated@@211 $generated@@212 $generated@@213))
))))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (or ($generated@@187 $generated@@214 $generated@@215) (and (< 2 $generated@@45) (and ($generated@@33 $generated@@28 $generated@@214 ($generated@@29 $generated@@0)) ($generated@@33 $generated@@28 $generated@@215 ($generated@@29 $generated@@0))))) (and (forall (($generated@@216 Int) ) (!  (and ($generated@@109 $generated@@216 $generated@@214) ($generated@@109 $generated@@216 $generated@@215))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@216 $generated@@215))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@216 $generated@@214))
)) (= ($generated@@72 $generated@@214 $generated@@215) (forall (($generated@@217 Int) ) (! (= ($generated@@85 ($generated@@47 $generated@@73) $generated@@217 $generated@@214) ($generated@@85 ($generated@@47 $generated@@73) $generated@@217 $generated@@215))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@217 $generated@@215))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@217 $generated@@214))
)))))
 :pattern ( ($generated@@72 $generated@@214 $generated@@215))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! ($generated@@27 $generated@@10 $generated@@219 $generated@@0 $generated@@218)
 :pattern ( ($generated@@27 $generated@@10 $generated@@219 $generated@@0 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! ($generated@@27 $generated@@9 $generated@@221 $generated $generated@@220)
 :pattern ( ($generated@@27 $generated@@9 $generated@@221 $generated $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> ($generated@@30 $generated@@225) (= ($generated@@27 $generated@@28 ($generated@@40 $generated@@223 $generated@@224) ($generated@@29 $generated@@222) $generated@@225)  (and ($generated@@76 $generated@@223 $generated@@222 $generated@@225) ($generated@@27 $generated@@28 $generated@@224 ($generated@@29 $generated@@222) $generated@@225))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@40 $generated@@223 $generated@@224) ($generated@@29 $generated@@222) $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ) (! ($generated@@33 $generated@@10 $generated@@226 $generated@@0)
 :pattern ( ($generated@@33 $generated@@10 $generated@@226 $generated@@0))
)))
(assert (forall (($generated@@227 T@U) ) (! ($generated@@33 $generated@@9 $generated@@227 $generated)
 :pattern ( ($generated@@33 $generated@@9 $generated@@227 $generated))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@228 T@U) ($generated@@229 Int) ($generated@@230 T@U) ) (!  (=> (or ($generated@@48 $generated@@229 $generated@@230) (and (< 1 $generated@@45) ($generated@@33 $generated@@28 $generated@@230 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@49 $generated@@230)) (let (($generated@@231 ($generated@@50 $generated@@230)))
(let (($generated@@232 ($generated@@15 ($generated@@51 $generated@@10 ($generated@@52 $generated@@230)))))
 (=> (< $generated@@232 $generated@@229) ($generated@@48 $generated@@229 $generated@@231))))) (= ($generated@@46 ($generated@@47 $generated@@228) $generated@@229 $generated@@230) (ite ($generated@@49 $generated@@230) ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@229)) ($generated@@37 $generated@@28 $generated@@26)) (let (($generated@@233 ($generated@@50 $generated@@230)))
(let (($generated@@234 ($generated@@15 ($generated@@51 $generated@@10 ($generated@@52 $generated@@230)))))
(ite (<= $generated@@229 $generated@@234) ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@229)) $generated@@230) ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@234)) ($generated@@46 $generated@@228 $generated@@229 $generated@@233)))))))))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@228) $generated@@229 $generated@@230))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 (T@U) Bool)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@242  (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@187 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236) ($generated@@46 ($generated@@47 $generated@@73) $generated@@235 $generated@@236)) (or ($generated@@72 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236) ($generated@@46 ($generated@@47 $generated@@73) $generated@@235 $generated@@236)) (forall (($generated@@243 Int) ) (! (= ($generated@@85 ($generated@@47 ($generated@@47 $generated@@73)) $generated@@243 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236)) ($generated@@85 ($generated@@47 ($generated@@47 $generated@@73)) $generated@@243 ($generated@@46 ($generated@@47 ($generated@@47 $generated@@73)) $generated@@235 $generated@@236)))
 :pattern ( ($generated@@85 ($generated@@47 ($generated@@47 $generated@@73)) $generated@@243 ($generated@@46 ($generated@@47 ($generated@@47 $generated@@73)) $generated@@235 $generated@@236)))
 :pattern ( ($generated@@85 ($generated@@47 ($generated@@47 $generated@@73)) $generated@@243 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236)))
)))))))
(let (($generated@@244  (=> (and ($generated@@30 $generated@@237) ($generated@@238 $generated@@237)) (=> (and (and (and ($generated@@48 $generated@@235 $generated@@236) ($generated@@187 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236) ($generated@@46 ($generated@@47 $generated@@73) $generated@@235 $generated@@236))) (and ($generated@@187 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236) ($generated@@46 ($generated@@47 $generated@@73) $generated@@235 $generated@@236)) (and ($generated@@72 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236) ($generated@@46 ($generated@@47 $generated@@73) $generated@@235 $generated@@236)) (forall (($generated@@245 Int) ) (! (= ($generated@@85 ($generated@@47 $generated@@73) $generated@@245 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236)) ($generated@@85 ($generated@@47 $generated@@73) $generated@@245 ($generated@@46 ($generated@@47 $generated@@73) $generated@@235 $generated@@236)))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@245 ($generated@@46 ($generated@@47 $generated@@73) $generated@@235 $generated@@236)))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@73) $generated@@245 ($generated@@40 ($generated@@53 $generated@@10 ($generated@@14 $generated@@235)) $generated@@236)))
))))) (and (and (= $generated@@239 $generated@@237) (= ($generated@@70 $generated@@236 $generated@@235) ($generated@@13 ($generated@@37 $generated@@9 ($generated@@12 true))))) (and ($generated@@33 $generated@@9 ($generated@@12 ($generated@@70 $generated@@236 $generated@@235)) $generated) (= (ControlFlow 0 4) 3)))) $generated@@242))))
(let (($generated@@246 true))
(let (($generated@@247  (=> (= $generated@@240 ($generated@@131 $generated@@241 $generated@@239 $generated@@3 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@246) (=> (= (ControlFlow 0 5) 4) $generated@@244)))))
(let (($generated@@248  (=> (and (and (and ($generated@@30 $generated@@239) ($generated@@238 $generated@@239)) ($generated@@33 $generated@@28 $generated@@236 ($generated@@29 $generated@@0))) (and (= 4 $generated@@45) (= (ControlFlow 0 6) 5))) $generated@@247)))
$generated@@248))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
