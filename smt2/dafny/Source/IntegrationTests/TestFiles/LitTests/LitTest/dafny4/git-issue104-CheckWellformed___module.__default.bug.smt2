(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (Int) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 (T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@U T@U) Bool)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@3) 0))
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@25 $generated@@31)) $generated@@0))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (= ($generated@@7 $generated@@33) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37) ($generated@@32 $generated@@33 $generated@@36 ($generated@@26 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@26 $generated@@35) $generated@@37))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@39 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@39 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@39 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@7 $generated@@40) 4)) (= ($generated@@7 $generated@@41) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@7 ($generated@@42 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@42 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@42 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@42 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@64 ($generated@@26 $generated@@63) $generated@@65)  (or (= $generated@@64 $generated@@27) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@65 $generated@@64) $generated@@3)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@64 ($generated@@26 $generated@@63) $generated@@65))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@66 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (and (and (and ($generated@@72 $generated@@75) (and (or (not (= $generated@@76 $generated@@27)) (not true)) (= ($generated@@28 $generated@@76) ($generated@@26 $generated@@74)))) (and (<= 0 $generated@@77) (< $generated@@77 ($generated@@25 $generated@@76)))) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@75 $generated@@76) $generated@@3)))) ($generated@@73 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@75 $generated@@76) ($generated@@71 $generated@@77)) $generated@@74 $generated@@75))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@75 $generated@@76) ($generated@@71 $generated@@77)) ($generated@@26 $generated@@74))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@38 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@38 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@82 ($generated@@34 $generated@@81))  (and ($generated@@29 $generated@@33 $generated@@82 ($generated@@26 $generated@@81)) (or (not (= $generated@@82 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@82 ($generated@@34 $generated@@81)))
 :pattern ( ($generated@@29 $generated@@33 $generated@@82 ($generated@@26 $generated@@81)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@73 ($generated@@78 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@32 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@73 ($generated@@78 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@88)) $generated@@4) (= ($generated@@87 ($generated@@26 $generated@@88)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (!  (and (= ($generated@@24 ($generated@@34 $generated@@89)) $generated@@5) (= ($generated@@87 ($generated@@34 $generated@@89)) $generated@@6))
 :pattern ( ($generated@@34 $generated@@89))
)))
(assert  (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@90 $generated@@93 $generated@@94 $generated@@95 ($generated@@92 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@98 $generated@@99) $generated@@96)
 :weight 0
)) (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@90 $generated@@100 $generated@@101 $generated@@102 ($generated@@92 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@90 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@115 $generated@@117) (= ($generated@@90 $generated@@109 $generated@@110 $generated@@111 ($generated@@92 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@90 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@12 ($generated@@90 $generated@@33 $generated@@40 $generated@@8 ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))  (=> (and (or (not (= $generated@@122 $generated@@118)) (not true)) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@119 $generated@@122) $generated@@120)))) (= $generated@@122 $generated@@121)))
 :pattern ( ($generated@@90 $generated@@33 $generated@@40 $generated@@8 ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@121) $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@125 ($generated@@26 $generated@@124))  (or (= $generated@@125 $generated@@27) (= ($generated@@28 $generated@@125) ($generated@@26 $generated@@124))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@125 ($generated@@26 $generated@@124)))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@126 $generated@@127 $generated@@0) (and (= ($generated@@78 $generated@@9 ($generated@@38 $generated@@9 $generated@@127)) $generated@@127) ($generated@@29 $generated@@9 ($generated@@38 $generated@@9 $generated@@127) $generated@@0)))
 :pattern ( ($generated@@126 $generated@@127 $generated@@0))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@126 $generated@@128 $generated) (and (= ($generated@@78 $generated@@8 ($generated@@38 $generated@@8 $generated@@128)) $generated@@128) ($generated@@29 $generated@@8 ($generated@@38 $generated@@8 $generated@@128) $generated)))
 :pattern ( ($generated@@126 $generated@@128 $generated))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@126 ($generated@@78 $generated@@131 $generated@@129) $generated@@130) ($generated@@29 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@126 ($generated@@78 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (<= 0 ($generated@@25 $generated@@132))
 :pattern ( ($generated@@25 $generated@@132))
)))
(assert (forall (($generated@@133 Int) ) (! (= ($generated@@23 ($generated@@71 $generated@@133)) 1)
 :pattern ( ($generated@@71 $generated@@133))
)))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@134 ($generated@@71 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@71 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@26 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@26 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@34 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@34 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@38 $generated@@141 ($generated@@78 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@78 $generated@@141 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and ($generated@@72 $generated@@143) (and (or (not (= $generated@@144 $generated@@27)) (not true)) (= ($generated@@28 $generated@@144) ($generated@@26 $generated@@142)))) ($generated@@12 ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@143 $generated@@144) $generated@@3)))) ($generated@@32 $generated@@9 ($generated@@13 ($generated@@25 $generated@@144)) $generated@@0 $generated@@143))
 :pattern ( ($generated@@25 $generated@@144) ($generated@@38 $generated@@8 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@143 $generated@@144) $generated@@3)) ($generated@@26 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Int) ) (!  (=> (and (and ($generated@@72 $generated@@146) (and (or (not (= $generated@@147 $generated@@27)) (not true)) (= ($generated@@28 $generated@@147) ($generated@@26 $generated@@145)))) (and (<= 0 $generated@@148) (< $generated@@148 ($generated@@25 $generated@@147)))) ($generated@@126 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@146 $generated@@147) ($generated@@71 $generated@@148)) $generated@@145))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@146 $generated@@147) ($generated@@71 $generated@@148)) ($generated@@26 $generated@@145))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@126 $generated@@150 ($generated@@26 $generated@@149)) (and (= ($generated@@78 $generated@@33 ($generated@@38 $generated@@33 $generated@@150)) $generated@@150) ($generated@@29 $generated@@33 ($generated@@38 $generated@@33 $generated@@150) ($generated@@26 $generated@@149))))
 :pattern ( ($generated@@126 $generated@@150 ($generated@@26 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@126 $generated@@152 ($generated@@34 $generated@@151)) (and (= ($generated@@78 $generated@@33 ($generated@@38 $generated@@33 $generated@@152)) $generated@@152) ($generated@@29 $generated@@33 ($generated@@38 $generated@@33 $generated@@152) ($generated@@34 $generated@@151))))
 :pattern ( ($generated@@126 $generated@@152 ($generated@@34 $generated@@151)))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@78 $generated@@9 ($generated@@13 ($generated@@66 $generated@@153))) ($generated@@68 $generated@@41 ($generated@@78 $generated@@9 ($generated@@13 $generated@@153))))
 :pattern ( ($generated@@78 $generated@@9 ($generated@@13 ($generated@@66 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@78 $generated@@155 ($generated@@68 $generated@@155 $generated@@154)) ($generated@@68 $generated@@41 ($generated@@78 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@78 $generated@@155 ($generated@@68 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@32 $generated@@9 $generated@@157 $generated@@0 $generated@@156)
 :pattern ( ($generated@@32 $generated@@9 $generated@@157 $generated@@0 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! ($generated@@32 $generated@@8 $generated@@159 $generated $generated@@158)
 :pattern ( ($generated@@32 $generated@@8 $generated@@159 $generated $generated@@158))
)))
(assert  (=> (<= 0 $generated@@160) (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (or ($generated@@162 $generated@@163 $generated@@164) (and (< 0 $generated@@160) (and ($generated@@72 $generated@@163) ($generated@@29 $generated@@33 $generated@@164 ($generated@@34 $generated@@0))))) (= ($generated@@161 $generated@@163 $generated@@164) (forall (($generated@@165 Int) ($generated@@166 Int) ) (!  (=> (and (and (<= ($generated@@66 0) $generated@@165) (<= $generated@@165 $generated@@166)) (< $generated@@166 ($generated@@25 $generated@@164))) (<= ($generated@@14 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@163 $generated@@164) ($generated@@71 $generated@@165)))) ($generated@@14 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@163 $generated@@164) ($generated@@71 $generated@@166))))))
 :pattern ( ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@163 $generated@@164) ($generated@@71 $generated@@166))) ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@163 $generated@@164) ($generated@@71 $generated@@165))))
))))
 :pattern ( ($generated@@161 $generated@@163 $generated@@164) ($generated@@72 $generated@@163))
))))
(assert (forall (($generated@@167 T@U) ) (! ($generated@@29 $generated@@9 $generated@@167 $generated@@0)
 :pattern ( ($generated@@29 $generated@@9 $generated@@167 $generated@@0))
)))
(assert (forall (($generated@@168 T@U) ) (! ($generated@@29 $generated@@8 $generated@@168 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@168 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Bool)
(declare-fun $generated@@172 () Bool)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Bool)
(declare-fun $generated@@178 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@179  (=> (and (= ($generated@@161 $generated@@169 $generated@@170) (forall (($generated@@180 Int) ($generated@@181 Int) ) (!  (=> (and (and (<= ($generated@@66 0) $generated@@180) (<= $generated@@180 $generated@@181)) (< $generated@@181 ($generated@@25 $generated@@170))) (<= ($generated@@14 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@169 $generated@@170) ($generated@@71 $generated@@180)))) ($generated@@14 ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@169 $generated@@170) ($generated@@71 $generated@@181))))))
 :pattern ( ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@169 $generated@@170) ($generated@@71 $generated@@181))) ($generated@@38 $generated@@9 ($generated@@39 $generated@@40 $generated@@41 ($generated@@39 $generated@@33 ($generated@@42 $generated@@40 $generated@@41) $generated@@169 $generated@@170) ($generated@@71 $generated@@180))))
))) ($generated@@29 $generated@@8 ($generated@@11 ($generated@@161 $generated@@169 $generated@@170)) $generated)) (and (=> (= (ControlFlow 0 4) (- 0 5)) $generated@@171) (=> $generated@@171 (=> (= (ControlFlow 0 4) (- 0 3)) $generated@@172))))))
(let (($generated@@182  (=> (and (and (not (and (and (<= ($generated@@66 0) $generated@@173) (<= $generated@@173 $generated@@174)) (< $generated@@174 ($generated@@25 $generated@@170)))) (= $generated@@171 true)) (and (= $generated@@172 true) (= (ControlFlow 0 11) 4))) $generated@@179)))
(let (($generated@@183  (=> (and (and (<= ($generated@@66 0) $generated@@173) (<= $generated@@173 $generated@@174)) (< $generated@@174 ($generated@@25 $generated@@170))) (and (=> (= (ControlFlow 0 6) (- 0 10)) (or (not (= $generated@@170 $generated@@27)) (not true))) (=> (or (not (= $generated@@170 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 9)) (and (<= 0 $generated@@173) (< $generated@@173 ($generated@@25 $generated@@170)))) (=> (and (<= 0 $generated@@173) (< $generated@@173 ($generated@@25 $generated@@170))) (=> (= $generated@@175 ($generated@@12 ($generated@@90 $generated@@33 $generated@@40 $generated@@8 $generated@@176 $generated@@170 ($generated@@71 $generated@@173)))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (not (= $generated@@170 $generated@@27)) (not true))) (=> (or (not (= $generated@@170 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 $generated@@174) (< $generated@@174 ($generated@@25 $generated@@170)))) (=> (and (<= 0 $generated@@174) (< $generated@@174 ($generated@@25 $generated@@170))) (=> (and (and (= $generated@@177 ($generated@@12 ($generated@@90 $generated@@33 $generated@@40 $generated@@8 $generated@@176 $generated@@170 ($generated@@71 $generated@@174)))) (= $generated@@171 $generated@@175)) (and (= $generated@@172 $generated@@177) (= (ControlFlow 0 6) 4))) $generated@@179)))))))))))))
(let (($generated@@184  (=> (not (and (<= ($generated@@66 0) $generated@@173) (<= $generated@@173 $generated@@174))) (and (=> (= (ControlFlow 0 14) 6) $generated@@183) (=> (= (ControlFlow 0 14) 11) $generated@@182)))))
(let (($generated@@185  (=> (and (<= ($generated@@66 0) $generated@@173) (<= $generated@@173 $generated@@174)) (and (=> (= (ControlFlow 0 12) (- 0 13)) (or (not (= $generated@@170 $generated@@27)) (not true))) (=> (or (not (= $generated@@170 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 12) 6) $generated@@183) (=> (= (ControlFlow 0 12) 11) $generated@@182)))))))
(let (($generated@@186  (=> (< $generated@@173 ($generated@@66 0)) (and (=> (= (ControlFlow 0 16) 12) $generated@@185) (=> (= (ControlFlow 0 16) 14) $generated@@184)))))
(let (($generated@@187  (=> (<= ($generated@@66 0) $generated@@173) (and (=> (= (ControlFlow 0 15) 12) $generated@@185) (=> (= (ControlFlow 0 15) 14) $generated@@184)))))
(let (($generated@@188  (and (=> (= (ControlFlow 0 17) 15) $generated@@187) (=> (= (ControlFlow 0 17) 16) $generated@@186))))
(let (($generated@@189 true))
(let (($generated@@190 true))
(let (($generated@@191  (=> (= $generated@@176 ($generated@@91 $generated@@27 $generated@@169 $generated@@3 $generated@@170)) (and (and (=> (= (ControlFlow 0 18) 1) $generated@@190) (=> (= (ControlFlow 0 18) 17) $generated@@188)) (=> (= (ControlFlow 0 18) 2) $generated@@189)))))
(let (($generated@@192  (=> (and (and (and ($generated@@72 $generated@@169) ($generated@@178 $generated@@169)) ($generated@@29 $generated@@33 $generated@@170 ($generated@@34 $generated@@0))) (and (= 0 $generated@@160) (= (ControlFlow 0 19) 18))) $generated@@191)))
$generated@@192)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
