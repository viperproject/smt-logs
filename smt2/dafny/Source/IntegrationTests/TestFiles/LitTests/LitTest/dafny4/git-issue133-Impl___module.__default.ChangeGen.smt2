(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@33 (T@U Int T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@T T@U T@U) Bool)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@193 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@27) ($generated@@25 $generated@@28)) (= ($generated@@24 $generated@@27 $generated@@28) (= ($generated@@26 $generated@@27) ($generated@@26 $generated@@28))))
 :pattern ( ($generated@@24 $generated@@27 $generated@@28) ($generated@@25 $generated@@27))
 :pattern ( ($generated@@24 $generated@@27 $generated@@28) ($generated@@25 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@29 $generated@@31) ($generated@@29 $generated@@32)) (= ($generated@@24 $generated@@31 $generated@@32) (= ($generated@@30 $generated@@31) ($generated@@30 $generated@@32))))
 :pattern ( ($generated@@24 $generated@@31 $generated@@32) ($generated@@29 $generated@@31))
 :pattern ( ($generated@@24 $generated@@31 $generated@@32) ($generated@@29 $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 Int) ($generated@@37 T@U) ) (! (= ($generated@@34 ($generated@@33 $generated@@35 $generated@@36 $generated@@37)) $generated@@4)
 :pattern ( ($generated@@33 $generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 Int) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@33 $generated@@39 $generated@@40 $generated@@41)) $generated@@39)
 :pattern ( ($generated@@33 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@33 $generated@@43 $generated@@44 $generated@@45)) $generated@@44)
 :pattern ( ($generated@@33 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 Int) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@33 $generated@@47 $generated@@48 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@33 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (= ($generated@@7 $generated@@51) 3))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Int) ($generated@@58 T@U) ) (! (= ($generated@@50 $generated@@51 ($generated@@33 $generated@@56 $generated@@57 $generated@@58) ($generated@@52 $generated@@54 $generated@@55))  (and (and ($generated@@53 $generated@@56 $generated@@54) ($generated@@50 $generated@@9 ($generated@@13 $generated@@57) $generated)) ($generated@@53 $generated@@58 $generated@@55)))
 :pattern ( ($generated@@50 $generated@@51 ($generated@@33 $generated@@56 $generated@@57 $generated@@58) ($generated@@52 $generated@@54 $generated@@55)))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@24 $generated@@59 $generated@@60) (= $generated@@59 $generated@@60))
 :pattern ( ($generated@@24 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@25 $generated@@61) (= ($generated@@34 $generated@@61) $generated@@3))
 :pattern ( ($generated@@25 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@34 $generated@@63) $generated@@4))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@29 $generated@@64) (= ($generated@@34 $generated@@64) $generated@@5))
 :pattern ( ($generated@@29 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@62 $generated@@69) (exists (($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 T@U) ) (= $generated@@69 ($generated@@33 $generated@@70 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@62 $generated@@69))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@25 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@25 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@29 $generated@@77) (exists (($generated@@78 T@U) ) (= $generated@@77 ($generated@@76 $generated@@78))))
 :pattern ( ($generated@@29 $generated@@77))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@79 ($generated@@66 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@80 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@79 ($generated@@66 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@85 $generated@@91) (= ($generated@@80 $generated@@51 ($generated@@33 $generated@@88 $generated@@89 $generated@@90) ($generated@@52 $generated@@86 $generated@@87) $generated@@91)  (and (and ($generated@@79 $generated@@88 $generated@@86 $generated@@91) ($generated@@80 $generated@@9 ($generated@@13 $generated@@89) $generated $generated@@91)) ($generated@@79 $generated@@90 $generated@@87 $generated@@91))))
 :pattern ( ($generated@@80 $generated@@51 ($generated@@33 $generated@@88 $generated@@89 $generated@@90) ($generated@@52 $generated@@86 $generated@@87) $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@62 $generated@@92) ($generated@@62 $generated@@93)) (= ($generated@@24 $generated@@92 $generated@@93)  (and (and (= ($generated@@38 $generated@@92) ($generated@@38 $generated@@93)) (= ($generated@@42 $generated@@92) ($generated@@42 $generated@@93))) (= ($generated@@46 $generated@@92) ($generated@@46 $generated@@93)))))
 :pattern ( ($generated@@24 $generated@@92 $generated@@93) ($generated@@62 $generated@@92))
 :pattern ( ($generated@@24 $generated@@92 $generated@@93) ($generated@@62 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@53 $generated@@94 $generated) (and (= ($generated@@66 $generated@@9 ($generated@@65 $generated@@9 $generated@@94)) $generated@@94) ($generated@@50 $generated@@9 ($generated@@65 $generated@@9 $generated@@94) $generated)))
 :pattern ( ($generated@@53 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@53 ($generated@@66 $generated@@97 $generated@@95) $generated@@96) ($generated@@50 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@53 ($generated@@66 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 ($generated@@52 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@52 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 ($generated@@52 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@52 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@50 $generated@@51 ($generated@@73 $generated@@106) ($generated@@52 $generated@@104 $generated@@105)) ($generated@@53 $generated@@106 $generated@@104))
 :pattern ( ($generated@@50 $generated@@51 ($generated@@73 $generated@@106) ($generated@@52 $generated@@104 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@50 $generated@@51 ($generated@@76 $generated@@109) ($generated@@52 $generated@@107 $generated@@108)) ($generated@@53 $generated@@109 $generated@@108))
 :pattern ( ($generated@@50 $generated@@51 ($generated@@76 $generated@@109) ($generated@@52 $generated@@107 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@34 ($generated@@73 $generated@@110)) $generated@@3)
 :pattern ( ($generated@@73 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@26 ($generated@@73 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@73 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@34 ($generated@@76 $generated@@112)) $generated@@5)
 :pattern ( ($generated@@76 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@30 ($generated@@76 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@76 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@65 $generated@@115 ($generated@@66 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@66 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 Int) ($generated@@120 T@U) ) (! (< ($generated@@116 $generated@@118) ($generated@@117 ($generated@@33 $generated@@118 $generated@@119 $generated@@120)))
 :pattern ( ($generated@@33 $generated@@118 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 Int) ($generated@@123 T@U) ) (! (< ($generated@@116 $generated@@123) ($generated@@117 ($generated@@33 $generated@@121 $generated@@122 $generated@@123)))
 :pattern ( ($generated@@33 $generated@@121 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@124 $generated@@125) (or (or ($generated@@25 $generated@@125) ($generated@@62 $generated@@125)) ($generated@@29 $generated@@125)))
 :pattern ( ($generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@50 $generated@@51 $generated@@128 ($generated@@52 $generated@@126 $generated@@127)) (or (or ($generated@@25 $generated@@128) ($generated@@62 $generated@@128)) ($generated@@29 $generated@@128)))
 :pattern ( ($generated@@29 $generated@@128) ($generated@@50 $generated@@51 $generated@@128 ($generated@@52 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@62 $generated@@128) ($generated@@50 $generated@@51 $generated@@128 ($generated@@52 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@25 $generated@@128) ($generated@@50 $generated@@51 $generated@@128 ($generated@@52 $generated@@126 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@53 $generated@@131 ($generated@@52 $generated@@129 $generated@@130)) (and (= ($generated@@66 $generated@@51 ($generated@@65 $generated@@51 $generated@@131)) $generated@@131) ($generated@@50 $generated@@51 ($generated@@65 $generated@@51 $generated@@131) ($generated@@52 $generated@@129 $generated@@130))))
 :pattern ( ($generated@@53 $generated@@131 ($generated@@52 $generated@@129 $generated@@130)))
)))
(assert (forall (($generated@@132 T@U) ) (! (< ($generated@@116 $generated@@132) ($generated@@117 ($generated@@73 $generated@@132)))
 :pattern ( ($generated@@73 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (< ($generated@@116 $generated@@133) ($generated@@117 ($generated@@76 $generated@@133)))
 :pattern ( ($generated@@76 $generated@@133))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@134 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@134 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@134 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@134 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@7 $generated@@135) 4)) (= ($generated@@7 $generated@@136) 5)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@138 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@138 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@138 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (= ($generated@@7 $generated@@139) 6)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@7 ($generated@@140 $generated@@181 $generated@@182)) 7))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@12 ($generated@@134 $generated@@135 $generated@@136 $generated@@8 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@12 ($generated@@65 $generated@@8 ($generated@@138 $generated@@136 $generated@@139 ($generated@@138 $generated@@135 ($generated@@140 $generated@@136 $generated@@139) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136 $generated@@8 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (and (= ($generated@@23 ($generated@@52 $generated@@194 $generated@@195)) $generated@@2) (= ($generated@@193 ($generated@@52 $generated@@194 $generated@@195)) $generated@@6))
 :pattern ( ($generated@@52 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@116 ($generated@@66 $generated@@51 $generated@@196)) ($generated@@117 $generated@@196))
 :pattern ( ($generated@@116 ($generated@@66 $generated@@51 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@85 $generated@@199) (and ($generated@@25 $generated@@197) (exists (($generated@@200 T@U) ) (! ($generated@@80 $generated@@51 $generated@@197 ($generated@@52 $generated@@198 $generated@@200) $generated@@199)
 :pattern ( ($generated@@80 $generated@@51 $generated@@197 ($generated@@52 $generated@@198 $generated@@200) $generated@@199))
)))) ($generated@@79 ($generated@@26 $generated@@197) $generated@@198 $generated@@199))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@197) $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and ($generated@@85 $generated@@203) (and ($generated@@62 $generated@@201) (exists (($generated@@204 T@U) ) (! ($generated@@80 $generated@@51 $generated@@201 ($generated@@52 $generated@@202 $generated@@204) $generated@@203)
 :pattern ( ($generated@@80 $generated@@51 $generated@@201 ($generated@@52 $generated@@202 $generated@@204) $generated@@203))
)))) ($generated@@79 ($generated@@38 $generated@@201) $generated@@202 $generated@@203))
 :pattern ( ($generated@@79 ($generated@@38 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@85 $generated@@207) (and ($generated@@62 $generated@@205) (exists (($generated@@208 T@U) ) (! ($generated@@80 $generated@@51 $generated@@205 ($generated@@52 $generated@@208 $generated@@206) $generated@@207)
 :pattern ( ($generated@@80 $generated@@51 $generated@@205 ($generated@@52 $generated@@208 $generated@@206) $generated@@207))
)))) ($generated@@79 ($generated@@46 $generated@@205) $generated@@206 $generated@@207))
 :pattern ( ($generated@@79 ($generated@@46 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@85 $generated@@211) (and ($generated@@29 $generated@@209) (exists (($generated@@212 T@U) ) (! ($generated@@80 $generated@@51 $generated@@209 ($generated@@52 $generated@@212 $generated@@210) $generated@@211)
 :pattern ( ($generated@@80 $generated@@51 $generated@@209 ($generated@@52 $generated@@212 $generated@@210) $generated@@211))
)))) ($generated@@79 ($generated@@30 $generated@@209) $generated@@210 $generated@@211))
 :pattern ( ($generated@@79 ($generated@@30 $generated@@209) $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and ($generated@@85 $generated@@214) (and ($generated@@62 $generated@@213) (exists (($generated@@215 T@U) ($generated@@216 T@U) ) (! ($generated@@80 $generated@@51 $generated@@213 ($generated@@52 $generated@@215 $generated@@216) $generated@@214)
 :pattern ( ($generated@@80 $generated@@51 $generated@@213 ($generated@@52 $generated@@215 $generated@@216) $generated@@214))
)))) ($generated@@80 $generated@@9 ($generated@@13 ($generated@@42 $generated@@213)) $generated $generated@@214))
 :pattern ( ($generated@@80 $generated@@9 ($generated@@13 ($generated@@42 $generated@@213)) $generated $generated@@214))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> ($generated@@85 $generated@@220) (= ($generated@@80 $generated@@51 ($generated@@73 $generated@@219) ($generated@@52 $generated@@217 $generated@@218) $generated@@220) ($generated@@79 $generated@@219 $generated@@217 $generated@@220)))
 :pattern ( ($generated@@80 $generated@@51 ($generated@@73 $generated@@219) ($generated@@52 $generated@@217 $generated@@218) $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> ($generated@@85 $generated@@224) (= ($generated@@80 $generated@@51 ($generated@@76 $generated@@223) ($generated@@52 $generated@@221 $generated@@222) $generated@@224) ($generated@@79 $generated@@223 $generated@@222 $generated@@224)))
 :pattern ( ($generated@@80 $generated@@51 ($generated@@76 $generated@@223) ($generated@@52 $generated@@221 $generated@@222) $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! ($generated@@80 $generated@@9 $generated@@226 $generated $generated@@225)
 :pattern ( ($generated@@80 $generated@@9 $generated@@226 $generated $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! ($generated@@50 $generated@@9 $generated@@227 $generated)
 :pattern ( ($generated@@50 $generated@@9 $generated@@227 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () Bool)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@250 true))
(let (($generated@@251  (=> (= $generated@@228 ($generated@@76 $generated@@229)) (=> (and ($generated@@53 $generated@@229 $generated@@230) ($generated@@79 $generated@@229 $generated@@230 $generated@@231)) (=> (and (and (and ($generated@@53 $generated@@232 $generated@@230) ($generated@@79 $generated@@232 $generated@@230 $generated@@231)) (= $generated@@233 $generated@@229)) (and ($generated@@53 $generated@@233 $generated@@230) (= $generated@@232 $generated@@233))) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@29 $generated@@228)) (=> ($generated@@29 $generated@@228) (=> (= $generated@@234 $generated@@228) (=> (and ($generated@@50 $generated@@51 $generated@@234 ($generated@@52 $generated@@235 $generated@@230)) (= $generated@@236 $generated@@234)) (=> (and (and (= $generated@@237 $generated@@232) ($generated@@53 $generated@@237 $generated@@230)) (and (= $generated@@238 $generated@@237) (= $generated@@239 (let (($generated@@252 $generated@@232))
($generated@@76 $generated@@252))))) (and (=> (= (ControlFlow 0 4) (- 0 5)) true) (=> (and (and ($generated@@124 $generated@@228) ($generated@@124 $generated@@239)) (= (ControlFlow 0 4) (- 0 3))) ($generated@@24 $generated@@228 $generated@@239)))))))))))))
(let (($generated@@253  (=> (or (not (= $generated@@228 ($generated@@33 $generated@@240 $generated@@241 $generated@@242))) (not true)) (and (=> (= (ControlFlow 0 8) 4) $generated@@251) (=> (= (ControlFlow 0 8) 7) $generated@@250)))))
(let (($generated@@254 true))
(let (($generated@@255  (=> (or (not (= $generated@@228 ($generated@@73 $generated@@243))) (not true)) (and (=> (= (ControlFlow 0 9) 2) $generated@@254) (=> (= (ControlFlow 0 9) 8) $generated@@253)))))
(let (($generated@@256 true))
(let (($generated@@257  (=> (= $generated@@244 ($generated@@137 $generated@@245 $generated@@231 $generated@@1 false)) (and (=> (= (ControlFlow 0 10) 1) $generated@@256) (=> (= (ControlFlow 0 10) 9) $generated@@255)))))
(let (($generated@@258  (=> (and ($generated@@85 $generated@@231) ($generated@@246 $generated@@231)) (=> (and (and (and ($generated@@50 $generated@@51 $generated@@228 ($generated@@52 $generated@@235 $generated@@230)) ($generated@@80 $generated@@51 $generated@@228 ($generated@@52 $generated@@235 $generated@@230) $generated@@231)) ($generated@@124 $generated@@228)) (and (and (=> $generated@@247 (and ($generated@@50 $generated@@51 $generated@@248 ($generated@@52 $generated@@235 $generated@@230)) ($generated@@80 $generated@@51 $generated@@248 ($generated@@52 $generated@@235 $generated@@230) $generated@@231))) true) (and (= 1 $generated@@249) (= (ControlFlow 0 11) 10)))) $generated@@257))))
$generated@@258)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
