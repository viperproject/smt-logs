(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@62 (T@U Int T@U) Int)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@87 () Int)
(declare-fun $generated@@88 (Int T@U) Bool)
(declare-fun $generated@@95 (T@U) Int)
(declare-fun $generated@@96 (T@U) Int)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@165 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert (forall (($generated@@34 Int) ) (! (= ($generated@@33 $generated@@34) $generated@@34)
 :pattern ( ($generated@@33 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@35 $generated@@37 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@38 $generated@@41 $generated@@42) ($generated@@27 $generated@@40))  (and ($generated@@39 $generated@@41 $generated@@40) ($generated@@31 $generated@@26 $generated@@42 ($generated@@27 $generated@@40))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@38 $generated@@41 $generated@@42) ($generated@@27 $generated@@40)))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@43 $generated@@44) (= ($generated@@23 $generated@@44) $generated@@3))
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@45 $generated@@46) (= ($generated@@23 $generated@@46) $generated@@4))
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 ($generated@@47 $generated@@50 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@47 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@45 $generated@@51) (exists (($generated@@52 T@U) ($generated@@53 T@U) ) (= $generated@@51 ($generated@@38 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@45 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@43 $generated@@54) (= $generated@@54 $generated@@24))
 :pattern ( ($generated@@43 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@55 ($generated@@48 $generated@@59 $generated@@56) $generated@@57 $generated@@58) ($generated@@25 $generated@@59 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@55 ($generated@@48 $generated@@59 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@61)) $generated@@2) (= ($generated@@60 ($generated@@27 $generated@@61)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 Int) ($generated@@66 T@U) ) (! (= ($generated@@62 ($generated@@63 $generated@@64) $generated@@65 $generated@@66) ($generated@@62 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@67 $generated@@68) (or ($generated@@43 $generated@@68) ($generated@@45 $generated@@68)))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@70 ($generated@@27 $generated@@69)) (or ($generated@@43 $generated@@70) ($generated@@45 $generated@@70)))
 :pattern ( ($generated@@45 $generated@@70) ($generated@@31 $generated@@26 $generated@@70 ($generated@@27 $generated@@69)))
 :pattern ( ($generated@@43 $generated@@70) ($generated@@31 $generated@@26 $generated@@70 ($generated@@27 $generated@@69)))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@39 $generated@@71 $generated) (and (= ($generated@@48 $generated@@8 ($generated@@47 $generated@@8 $generated@@71)) $generated@@71) ($generated@@31 $generated@@8 ($generated@@47 $generated@@8 $generated@@71) $generated)))
 :pattern ( ($generated@@39 $generated@@71 $generated))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@39 ($generated@@48 $generated@@74 $generated@@72) $generated@@73) ($generated@@31 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@39 ($generated@@48 $generated@@74 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@23 ($generated@@38 $generated@@75 $generated@@76)) $generated@@4)
 :pattern ( ($generated@@38 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 ($generated@@38 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@38 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@80 ($generated@@38 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@38 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 ($generated@@27 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@27 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@47 $generated@@86 ($generated@@48 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@48 $generated@@86 $generated@@85))
)))
(assert  (=> (<= 1 $generated@@87) (forall (($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 T@U) ) (!  (=> (or ($generated@@88 $generated@@90 $generated@@91) (and (< 1 $generated@@87) ($generated@@31 $generated@@26 $generated@@91 ($generated@@27 $generated)))) (and (=> (not ($generated@@43 $generated@@91)) (let (($generated@@92 ($generated@@80 $generated@@91)))
($generated@@88 $generated@@90 $generated@@92))) (= ($generated@@62 ($generated@@63 $generated@@89) $generated@@90 $generated@@91) (ite ($generated@@43 $generated@@91) 0 (let (($generated@@93 ($generated@@80 $generated@@91)))
(let (($generated@@94 ($generated@@13 ($generated@@47 $generated@@8 ($generated@@77 $generated@@91)))))
(+ (ite (= $generated@@90 $generated@@94) 1 0) ($generated@@62 $generated@@89 $generated@@90 $generated@@93))))))))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@89) $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (< ($generated@@95 $generated@@97) ($generated@@96 ($generated@@38 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@38 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (< ($generated@@96 $generated@@100) ($generated@@96 ($generated@@38 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@38 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@28 $generated@@103) (and ($generated@@45 $generated@@101) ($generated@@25 $generated@@26 $generated@@101 ($generated@@27 $generated@@102) $generated@@103))) ($generated@@55 ($generated@@77 $generated@@101) $generated@@102 $generated@@103))
 :pattern ( ($generated@@55 ($generated@@77 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@104 $generated@@115 $generated@@116 $generated@@117 ($generated@@111 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@104 $generated@@122 $generated@@123 $generated@@124 ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@104 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@104 $generated@@131 $generated@@132 $generated@@133 ($generated@@111 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))) (= ($generated@@6 $generated@@105) 4)) (= ($generated@@6 $generated@@106) 5)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@108 $generated@@140 $generated@@141 ($generated@@112 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@144) $generated@@142)
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@108 $generated@@145 $generated@@146 ($generated@@112 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@108 $generated@@145 $generated@@146 $generated@@148 $generated@@150)))
 :weight 0
))) (= ($generated@@6 $generated@@109) 6)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (= ($generated@@6 ($generated@@110 $generated@@151 $generated@@152)) 7))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@153 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@110 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@110 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@11 ($generated@@104 $generated@@105 $generated@@106 $generated@@7 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@11 ($generated@@47 $generated@@7 ($generated@@108 $generated@@106 $generated@@109 ($generated@@108 $generated@@105 ($generated@@110 $generated@@106 $generated@@109) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106 $generated@@7 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert  (=> (<= 2 $generated@@87) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (or ($generated@@164 ($generated@@35 $generated@@26 $generated@@166) ($generated@@35 $generated@@26 $generated@@167)) (and (< 2 $generated@@87) (and ($generated@@31 $generated@@26 $generated@@166 ($generated@@27 $generated)) ($generated@@31 $generated@@26 $generated@@167 ($generated@@27 $generated))))) (and (forall (($generated@@168 Int) ) (!  (and ($generated@@88 $generated@@168 ($generated@@35 $generated@@26 $generated@@166)) ($generated@@88 $generated@@168 ($generated@@35 $generated@@26 $generated@@167)))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@168 $generated@@167))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@168 $generated@@166))
)) (= ($generated@@163 ($generated@@35 $generated@@26 $generated@@166) ($generated@@35 $generated@@26 $generated@@167)) (forall (($generated@@169 Int) ) (! (= ($generated@@62 ($generated@@63 $generated@@165) $generated@@169 ($generated@@35 $generated@@26 $generated@@166)) ($generated@@62 ($generated@@63 $generated@@165) $generated@@169 ($generated@@35 $generated@@26 $generated@@167)))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@169 $generated@@167))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@169 $generated@@166))
)))))
 :weight 3
 :pattern ( ($generated@@163 ($generated@@35 $generated@@26 $generated@@166) ($generated@@35 $generated@@26 $generated@@167)))
))))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@95 ($generated@@48 $generated@@26 $generated@@170)) ($generated@@96 $generated@@170))
 :pattern ( ($generated@@95 ($generated@@48 $generated@@26 $generated@@170)))
)))
(assert  (=> (<= 1 $generated@@87) (forall (($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 T@U) ) (!  (=> (or ($generated@@88 ($generated@@33 $generated@@172) ($generated@@35 $generated@@26 $generated@@173)) (and (< 1 $generated@@87) ($generated@@31 $generated@@26 $generated@@173 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@35 $generated@@7 ($generated@@10 ($generated@@43 ($generated@@35 $generated@@26 $generated@@173)))))) (let (($generated@@174 ($generated@@35 $generated@@26 ($generated@@80 ($generated@@35 $generated@@26 $generated@@173)))))
($generated@@88 ($generated@@33 $generated@@172) $generated@@174))) (= ($generated@@62 ($generated@@63 $generated@@171) ($generated@@33 $generated@@172) ($generated@@35 $generated@@26 $generated@@173)) (ite ($generated@@43 ($generated@@35 $generated@@26 $generated@@173)) 0 (let (($generated@@175 ($generated@@35 $generated@@26 ($generated@@80 ($generated@@35 $generated@@26 $generated@@173)))))
(let (($generated@@176 ($generated@@33 ($generated@@13 ($generated@@47 $generated@@8 ($generated@@77 ($generated@@35 $generated@@26 $generated@@173)))))))
(+ (ite (= ($generated@@33 $generated@@172) $generated@@176) 1 0) ($generated@@62 ($generated@@63 $generated@@171) ($generated@@33 $generated@@172) $generated@@175))))))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@63 $generated@@171) ($generated@@33 $generated@@172) ($generated@@35 $generated@@26 $generated@@173)))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@39 $generated@@178 ($generated@@27 $generated@@177)) (and (= ($generated@@48 $generated@@26 ($generated@@47 $generated@@26 $generated@@178)) $generated@@178) ($generated@@31 $generated@@26 ($generated@@47 $generated@@26 $generated@@178) ($generated@@27 $generated@@177))))
 :pattern ( ($generated@@39 $generated@@178 ($generated@@27 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@28 $generated@@181) (and ($generated@@45 $generated@@179) ($generated@@25 $generated@@26 $generated@@179 ($generated@@27 $generated@@180) $generated@@181))) ($generated@@25 $generated@@26 ($generated@@80 $generated@@179) ($generated@@27 $generated@@180) $generated@@181))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@80 $generated@@179) ($generated@@27 $generated@@180) $generated@@181))
)))
(assert (= $generated@@24 ($generated@@35 $generated@@26 $generated@@24)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@38 ($generated@@35 $generated@@109 $generated@@182) ($generated@@35 $generated@@26 $generated@@183)) ($generated@@35 $generated@@26 ($generated@@38 $generated@@182 $generated@@183)))
 :pattern ( ($generated@@38 ($generated@@35 $generated@@109 $generated@@182) ($generated@@35 $generated@@26 $generated@@183)))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@48 $generated@@8 ($generated@@12 ($generated@@33 $generated@@184))) ($generated@@35 $generated@@109 ($generated@@48 $generated@@8 ($generated@@12 $generated@@184))))
 :pattern ( ($generated@@48 $generated@@8 ($generated@@12 ($generated@@33 $generated@@184))))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@48 $generated@@186 ($generated@@35 $generated@@186 $generated@@185)) ($generated@@35 $generated@@109 ($generated@@48 $generated@@186 $generated@@185)))
 :pattern ( ($generated@@48 $generated@@186 ($generated@@35 $generated@@186 $generated@@185)))
)))
(assert  (=> (<= 1 $generated@@87) (forall (($generated@@187 T@U) ($generated@@188 Int) ($generated@@189 T@U) ) (!  (=> (or ($generated@@88 $generated@@188 $generated@@189) (and (< 1 $generated@@87) ($generated@@31 $generated@@26 $generated@@189 ($generated@@27 $generated)))) (<= ($generated@@33 0) ($generated@@62 $generated@@187 $generated@@188 $generated@@189)))
 :pattern ( ($generated@@62 $generated@@187 $generated@@188 $generated@@189))
))))
(assert  (=> (<= 2 $generated@@87) (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (or ($generated@@164 $generated@@190 $generated@@191) (and (< 2 $generated@@87) (and ($generated@@31 $generated@@26 $generated@@190 ($generated@@27 $generated)) ($generated@@31 $generated@@26 $generated@@191 ($generated@@27 $generated))))) (and (forall (($generated@@192 Int) ) (!  (and ($generated@@88 $generated@@192 $generated@@190) ($generated@@88 $generated@@192 $generated@@191))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@192 $generated@@191))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@192 $generated@@190))
)) (= ($generated@@163 $generated@@190 $generated@@191) (forall (($generated@@193 Int) ) (! (= ($generated@@62 ($generated@@63 $generated@@165) $generated@@193 $generated@@190) ($generated@@62 ($generated@@63 $generated@@165) $generated@@193 $generated@@191))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@193 $generated@@191))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@193 $generated@@190))
)))))
 :pattern ( ($generated@@163 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@25 $generated@@8 $generated@@195 $generated $generated@@194)
 :pattern ( ($generated@@25 $generated@@8 $generated@@195 $generated $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@28 $generated@@199) (= ($generated@@25 $generated@@26 ($generated@@38 $generated@@197 $generated@@198) ($generated@@27 $generated@@196) $generated@@199)  (and ($generated@@55 $generated@@197 $generated@@196 $generated@@199) ($generated@@25 $generated@@26 $generated@@198 ($generated@@27 $generated@@196) $generated@@199))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@38 $generated@@197 $generated@@198) ($generated@@27 $generated@@196) $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! ($generated@@31 $generated@@8 $generated@@200 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@200 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@207  (=> (and (and (= $generated@@201 ($generated@@107 $generated@@202 $generated@@203 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@164 $generated@@204 $generated@@205)) (or ($generated@@163 $generated@@204 $generated@@205) (forall (($generated@@208 Int) ) (! (= ($generated@@62 ($generated@@63 ($generated@@63 $generated@@165)) $generated@@208 $generated@@204) ($generated@@62 ($generated@@63 ($generated@@63 $generated@@165)) $generated@@208 $generated@@205))
 :pattern ( ($generated@@62 ($generated@@63 ($generated@@63 $generated@@165)) $generated@@208 $generated@@205))
 :pattern ( ($generated@@62 ($generated@@63 ($generated@@63 $generated@@165)) $generated@@208 $generated@@204))
))))))
(let (($generated@@209  (=> (and ($generated@@28 $generated@@203) ($generated@@206 $generated@@203)) (=> (and (and ($generated@@31 $generated@@26 $generated@@205 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@205 ($generated@@27 $generated) $generated@@203)) ($generated@@67 $generated@@205)) (=> (and (and (and (and ($generated@@31 $generated@@26 $generated@@204 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@204 ($generated@@27 $generated) $generated@@203)) ($generated@@67 $generated@@204)) (= 3 $generated@@87)) (and (and ($generated@@164 $generated@@205 $generated@@204) (and ($generated@@163 $generated@@205 $generated@@204) (forall (($generated@@210 Int) ) (! (= ($generated@@62 ($generated@@63 $generated@@165) $generated@@210 $generated@@205) ($generated@@62 ($generated@@63 $generated@@165) $generated@@210 $generated@@204))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@210 $generated@@204))
 :pattern ( ($generated@@62 ($generated@@63 $generated@@165) $generated@@210 $generated@@205))
)))) (= (ControlFlow 0 3) 2))) $generated@@207)))))
$generated@@209)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
