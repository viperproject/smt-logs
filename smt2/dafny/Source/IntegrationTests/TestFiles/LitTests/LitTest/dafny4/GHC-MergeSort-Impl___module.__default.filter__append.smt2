(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@U) Int)
(declare-fun $generated@@89 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@156 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert ($generated@@40 $generated@@41))
(assert (= ($generated@@42 $generated@@43) $generated@@1))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@45 $generated@@47) ($generated@@44 $generated@@24 $generated@@43 ($generated@@27 $generated@@46) $generated@@47))
 :pattern ( ($generated@@44 $generated@@24 $generated@@43 ($generated@@27 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ) (! ($generated@@26 $generated@@24 $generated@@43 ($generated@@27 $generated@@48))
 :pattern ( ($generated@@26 $generated@@24 $generated@@43 ($generated@@27 $generated@@48)))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@51) (= $generated@@50 $generated@@51))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (and ($generated@@52 $generated@@53) ($generated@@52 $generated@@54)) (= ($generated@@49 $generated@@53 $generated@@54)  (and (= ($generated@@31 $generated@@53) ($generated@@31 $generated@@54)) ($generated@@49 ($generated@@29 $generated@@53) ($generated@@29 $generated@@54)))))
 :pattern ( ($generated@@49 $generated@@53 $generated@@54) ($generated@@52 $generated@@53))
 :pattern ( ($generated@@49 $generated@@53 $generated@@54) ($generated@@52 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@23 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@23 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@59 $generated@@60) ($generated@@27 $generated@@58))  (and ($generated@@57 $generated@@59 $generated@@58) ($generated@@26 $generated@@24 $generated@@60 ($generated@@27 $generated@@58))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@59 $generated@@60) ($generated@@27 $generated@@58)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@25 $generated@@61 $generated@@63 $generated@@64) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@63 ($generated@@27 $generated@@61)) ($generated@@26 $generated@@24 $generated@@64 ($generated@@27 $generated@@61))))) (and (=> (not ($generated@@28 $generated@@63)) (let (($generated@@65 ($generated@@29 $generated@@63)))
($generated@@25 $generated@@61 $generated@@65 $generated@@64))) (= ($generated@@21 $generated@@61 ($generated@@22 $generated@@62) $generated@@63 $generated@@64) (ite ($generated@@28 $generated@@63) $generated@@64 (let (($generated@@66 ($generated@@29 $generated@@63)))
(let (($generated@@67 ($generated@@31 $generated@@63)))
($generated@@32 $generated@@67 ($generated@@21 $generated@@61 $generated@@62 $generated@@66 $generated@@64))))))))
 :pattern ( ($generated@@21 $generated@@61 ($generated@@22 $generated@@62) $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@28 $generated@@68) (= ($generated@@42 $generated@@68) $generated@@1))
 :pattern ( ($generated@@28 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@52 $generated@@69) (= ($generated@@42 $generated@@69) $generated@@2))
 :pattern ( ($generated@@52 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@70 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@70 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@52 $generated@@74) (exists (($generated@@75 T@U) ($generated@@76 T@U) ) (= $generated@@74 ($generated@@32 $generated@@75 $generated@@76))))
 :pattern ( ($generated@@52 $generated@@74))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@78 $generated@@82 ($generated@@23 $generated@@24 $generated@@83)) (and (< 1 $generated@@20) (and ($generated@@57 $generated@@82 $generated@@41) ($generated@@26 $generated@@24 $generated@@83 ($generated@@27 $generated@@41))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@83)))))) (let (($generated@@84 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@83)))))
(let (($generated@@85 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@83)))))
 (and (and (and ($generated@@79 $generated@@82) ($generated@@79 $generated@@85)) (=> (= ($generated@@80 $generated@@82) ($generated@@80 $generated@@85)) ($generated@@78 $generated@@82 $generated@@84))) (=> (or (not (= ($generated@@80 $generated@@82) ($generated@@80 $generated@@85))) (not true)) ($generated@@78 $generated@@82 $generated@@84)))))) (= ($generated@@77 ($generated@@22 $generated@@81) $generated@@82 ($generated@@23 $generated@@24 $generated@@83)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@83)) $generated@@43 (let (($generated@@86 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@83)))))
(let (($generated@@87 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@83)))))
(ite (= ($generated@@80 $generated@@82) ($generated@@80 $generated@@87)) ($generated@@32 $generated@@87 ($generated@@77 ($generated@@22 $generated@@81) $generated@@82 $generated@@86)) ($generated@@77 ($generated@@22 $generated@@81) $generated@@82 $generated@@86))))))))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@22 $generated@@81) $generated@@82 ($generated@@23 $generated@@24 $generated@@83)))
))))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@28 $generated@@88) (= $generated@@88 $generated@@43))
 :pattern ( ($generated@@28 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@89 ($generated@@71 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@44 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@89 ($generated@@71 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@94 ($generated@@27 $generated@@96)) $generated@@0) (= ($generated@@95 ($generated@@27 $generated@@96)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@96))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@78 ($generated@@23 $generated@@30 $generated@@98) ($generated@@23 $generated@@24 $generated@@99)) (and (< 1 $generated@@20) (and ($generated@@57 $generated@@98 $generated@@41) ($generated@@26 $generated@@24 $generated@@99 ($generated@@27 $generated@@41))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@99)))))) (let (($generated@@100 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@99)))))
(let (($generated@@101 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@99)))))
 (and (and (and ($generated@@79 ($generated@@23 $generated@@30 $generated@@98)) ($generated@@79 $generated@@101)) (=> (= ($generated@@80 ($generated@@23 $generated@@30 $generated@@98)) ($generated@@80 $generated@@101)) ($generated@@78 ($generated@@23 $generated@@30 $generated@@98) $generated@@100))) (=> (or (not (= ($generated@@80 ($generated@@23 $generated@@30 $generated@@98)) ($generated@@80 $generated@@101))) (not true)) ($generated@@78 ($generated@@23 $generated@@30 $generated@@98) $generated@@100)))))) (= ($generated@@77 ($generated@@22 $generated@@97) ($generated@@23 $generated@@30 $generated@@98) ($generated@@23 $generated@@24 $generated@@99)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@99)) $generated@@43 (let (($generated@@102 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@99)))))
(let (($generated@@103 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@99)))))
(ite (= ($generated@@80 ($generated@@23 $generated@@30 $generated@@98)) ($generated@@80 $generated@@103)) ($generated@@32 $generated@@103 ($generated@@23 $generated@@24 ($generated@@77 ($generated@@22 $generated@@97) ($generated@@23 $generated@@30 $generated@@98) $generated@@102))) ($generated@@77 ($generated@@22 $generated@@97) ($generated@@23 $generated@@30 $generated@@98) $generated@@102))))))))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@22 $generated@@97) ($generated@@23 $generated@@30 $generated@@98) ($generated@@23 $generated@@24 $generated@@99)))
))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@77 ($generated@@22 $generated@@104) $generated@@105 $generated@@106) ($generated@@77 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@77 ($generated@@22 $generated@@104) $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@107 $generated@@108) (or ($generated@@28 $generated@@108) ($generated@@52 $generated@@108)))
 :pattern ( ($generated@@107 $generated@@108))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@78 $generated@@110 $generated@@111) (and (< 1 $generated@@20) (and ($generated@@57 $generated@@110 $generated@@41) ($generated@@26 $generated@@24 $generated@@111 ($generated@@27 $generated@@41))))) (and (=> (not ($generated@@28 $generated@@111)) (let (($generated@@112 ($generated@@29 $generated@@111)))
(let (($generated@@113 ($generated@@31 $generated@@111)))
 (and (and (and ($generated@@79 $generated@@110) ($generated@@79 $generated@@113)) (=> (= ($generated@@80 $generated@@110) ($generated@@80 $generated@@113)) ($generated@@78 $generated@@110 $generated@@112))) (=> (or (not (= ($generated@@80 $generated@@110) ($generated@@80 $generated@@113))) (not true)) ($generated@@78 $generated@@110 $generated@@112)))))) (= ($generated@@77 ($generated@@22 $generated@@109) $generated@@110 $generated@@111) (ite ($generated@@28 $generated@@111) $generated@@43 (let (($generated@@114 ($generated@@29 $generated@@111)))
(let (($generated@@115 ($generated@@31 $generated@@111)))
(ite (= ($generated@@80 $generated@@110) ($generated@@80 $generated@@115)) ($generated@@32 $generated@@115 ($generated@@77 $generated@@109 $generated@@110 $generated@@114)) ($generated@@77 $generated@@109 $generated@@110 $generated@@114))))))))
 :pattern ( ($generated@@77 ($generated@@22 $generated@@109) $generated@@110 $generated@@111))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@117 ($generated@@27 $generated@@116)) (or ($generated@@28 $generated@@117) ($generated@@52 $generated@@117)))
 :pattern ( ($generated@@52 $generated@@117) ($generated@@26 $generated@@24 $generated@@117 ($generated@@27 $generated@@116)))
 :pattern ( ($generated@@28 $generated@@117) ($generated@@26 $generated@@24 $generated@@117 ($generated@@27 $generated@@116)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or ($generated@@78 $generated@@119 $generated@@120) (and (< 1 $generated@@20) (and ($generated@@57 $generated@@119 $generated@@41) ($generated@@26 $generated@@24 $generated@@120 ($generated@@27 $generated@@41))))) ($generated@@26 $generated@@24 ($generated@@77 $generated@@118 $generated@@119 $generated@@120) ($generated@@27 $generated@@41)))
 :pattern ( ($generated@@77 $generated@@118 $generated@@119 $generated@@120))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@57 ($generated@@71 $generated@@123 $generated@@121) $generated@@122) ($generated@@26 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@57 ($generated@@71 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@40 $generated@@124) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@57 $generated@@126 $generated@@124) ($generated@@89 $generated@@126 $generated@@124 $generated@@125))
 :pattern ( ($generated@@89 $generated@@126 $generated@@124 $generated@@125))
)))
 :pattern ( ($generated@@40 $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@28 $generated@@127) ($generated@@28 $generated@@128)) ($generated@@49 $generated@@127 $generated@@128))
 :pattern ( ($generated@@49 $generated@@127 $generated@@128) ($generated@@28 $generated@@127))
 :pattern ( ($generated@@49 $generated@@127 $generated@@128) ($generated@@28 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@42 ($generated@@32 $generated@@129 $generated@@130)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@32 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@32 $generated@@133 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or ($generated@@25 $generated@@135 $generated@@137 $generated@@138) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@137 ($generated@@27 $generated@@135)) ($generated@@26 $generated@@24 $generated@@138 ($generated@@27 $generated@@135))))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@135 $generated@@136 $generated@@137 $generated@@138) ($generated@@27 $generated@@135)))
 :pattern ( ($generated@@21 $generated@@135 $generated@@136 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@27 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@27 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@70 $generated@@142 ($generated@@71 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@71 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (< ($generated@@143 $generated@@145) ($generated@@144 ($generated@@32 $generated@@145 $generated@@146)))
 :pattern ( ($generated@@32 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (< ($generated@@144 $generated@@148) ($generated@@144 ($generated@@32 $generated@@147 $generated@@148)))
 :pattern ( ($generated@@32 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@45 $generated@@151) (and ($generated@@52 $generated@@149) ($generated@@44 $generated@@24 $generated@@149 ($generated@@27 $generated@@150) $generated@@151))) ($generated@@89 ($generated@@31 $generated@@149) $generated@@150 $generated@@151))
 :pattern ( ($generated@@89 ($generated@@31 $generated@@149) $generated@@150 $generated@@151))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@158 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@152 $generated@@169 $generated@@170 $generated@@171 ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@152 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@152 $generated@@178 $generated@@179 $generated@@180 ($generated@@158 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@152 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))) (= ($generated@@4 $generated@@153) 5)) (= ($generated@@4 $generated@@154) 6)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@156 $generated@@187 $generated@@188 ($generated@@159 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@189) $generated@@191) $generated@@189)
 :weight 0
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@196 $generated@@197) (= ($generated@@156 $generated@@192 $generated@@193 ($generated@@159 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@194) $generated@@197) ($generated@@156 $generated@@192 $generated@@193 $generated@@195 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@4 ($generated@@157 $generated@@198 $generated@@199)) 7))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@160 ($generated@@157 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@157 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@161 ($generated@@157 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@157 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@9 ($generated@@152 $generated@@153 $generated@@154 $generated@@5 ($generated@@155 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (or (not (= $generated@@208 $generated@@204)) (not true)) ($generated@@9 ($generated@@70 $generated@@5 ($generated@@156 $generated@@154 $generated@@30 ($generated@@156 $generated@@153 ($generated@@157 $generated@@154 $generated@@30) $generated@@205 $generated@@208) $generated@@206)))) $generated@@207))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154 $generated@@5 ($generated@@155 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@211 $generated@@213 $generated@@214) (and (< 1 $generated@@20) (and (and ($generated@@26 $generated@@24 $generated@@213 ($generated@@27 $generated@@211)) ($generated@@44 $generated@@24 $generated@@213 ($generated@@27 $generated@@211) $generated@@210)) (and ($generated@@26 $generated@@24 $generated@@214 ($generated@@27 $generated@@211)) ($generated@@44 $generated@@24 $generated@@214 ($generated@@27 $generated@@211) $generated@@210))))) ($generated@@45 $generated@@210)) ($generated@@44 $generated@@24 ($generated@@21 $generated@@211 $generated@@212 $generated@@213 $generated@@214) ($generated@@27 $generated@@211) $generated@@210))
 :pattern ( ($generated@@44 $generated@@24 ($generated@@21 $generated@@211 $generated@@212 $generated@@213 $generated@@214) ($generated@@27 $generated@@211) $generated@@210))
))))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@143 ($generated@@71 $generated@@24 $generated@@215)) ($generated@@144 $generated@@215))
 :pattern ( ($generated@@143 ($generated@@71 $generated@@24 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@21 $generated@@216 ($generated@@22 $generated@@217) $generated@@218 $generated@@219) ($generated@@21 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
 :pattern ( ($generated@@21 $generated@@216 ($generated@@22 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> ($generated@@57 $generated@@221 ($generated@@27 $generated@@220)) (and (= ($generated@@71 $generated@@24 ($generated@@70 $generated@@24 $generated@@221)) $generated@@221) ($generated@@26 $generated@@24 ($generated@@70 $generated@@24 $generated@@221) ($generated@@27 $generated@@220))))
 :pattern ( ($generated@@57 $generated@@221 ($generated@@27 $generated@@220)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and ($generated@@45 $generated@@224) (and ($generated@@52 $generated@@222) ($generated@@44 $generated@@24 $generated@@222 ($generated@@27 $generated@@223) $generated@@224))) ($generated@@44 $generated@@24 ($generated@@29 $generated@@222) ($generated@@27 $generated@@223) $generated@@224))
 :pattern ( ($generated@@44 $generated@@24 ($generated@@29 $generated@@222) ($generated@@27 $generated@@223) $generated@@224))
)))
(assert (= $generated@@43 ($generated@@23 $generated@@24 $generated@@43)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@225) ($generated@@23 $generated@@24 $generated@@226)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@225 $generated@@226)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@225) ($generated@@23 $generated@@24 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@71 $generated@@228 ($generated@@23 $generated@@228 $generated@@227)) ($generated@@23 $generated@@30 ($generated@@71 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@71 $generated@@228 ($generated@@23 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@45 $generated@@232) (= ($generated@@44 $generated@@24 ($generated@@32 $generated@@230 $generated@@231) ($generated@@27 $generated@@229) $generated@@232)  (and ($generated@@89 $generated@@230 $generated@@229 $generated@@232) ($generated@@44 $generated@@24 $generated@@231 ($generated@@27 $generated@@229) $generated@@232))))
 :pattern ( ($generated@@44 $generated@@24 ($generated@@32 $generated@@230 $generated@@231) ($generated@@27 $generated@@229) $generated@@232))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U) Bool)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@242  (=> (= $generated@@233 ($generated@@155 $generated@@234 $generated@@235 $generated false)) (=> (and ($generated@@107 $generated@@236) ($generated@@107 $generated@@237)) (=> (and (and (and ($generated@@45 $generated@@238) ($generated@@239 $generated@@238)) (= $generated@@235 $generated@@238)) (and (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (and (and ($generated@@26 $generated@@24 $generated@@243 ($generated@@27 $generated@@41)) ($generated@@26 $generated@@24 $generated@@244 ($generated@@27 $generated@@41))) ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 true)))) (or (< ($generated@@144 $generated@@243) ($generated@@144 $generated@@236)) (and (= ($generated@@144 $generated@@243) ($generated@@144 $generated@@236)) (< ($generated@@144 $generated@@244) ($generated@@144 $generated@@237))))) ($generated@@49 ($generated@@77 ($generated@@22 $generated@@240) $generated@@241 ($generated@@21 $generated@@41 ($generated@@22 $generated@@240) $generated@@243 $generated@@244)) ($generated@@21 $generated@@41 ($generated@@22 $generated@@240) ($generated@@77 ($generated@@22 $generated@@240) $generated@@241 $generated@@243) ($generated@@77 ($generated@@22 $generated@@240) $generated@@241 $generated@@244))))
 :pattern ( ($generated@@21 $generated@@41 ($generated@@22 $generated@@240) ($generated@@77 ($generated@@22 $generated@@240) $generated@@241 $generated@@243) ($generated@@77 ($generated@@22 $generated@@240) $generated@@241 $generated@@244)))
 :pattern ( ($generated@@77 ($generated@@22 $generated@@240) $generated@@241 ($generated@@21 $generated@@41 ($generated@@22 $generated@@240) $generated@@243 $generated@@244)))
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@49 ($generated@@77 ($generated@@22 ($generated@@22 $generated@@240)) $generated@@241 ($generated@@21 $generated@@41 ($generated@@22 ($generated@@22 $generated@@240)) $generated@@236 $generated@@237)) ($generated@@21 $generated@@41 ($generated@@22 ($generated@@22 $generated@@240)) ($generated@@77 ($generated@@22 ($generated@@22 $generated@@240)) $generated@@241 $generated@@236) ($generated@@77 ($generated@@22 ($generated@@22 $generated@@240)) $generated@@241 $generated@@237))))))))
(let (($generated@@245  (=> (and (and (and (and ($generated@@45 $generated@@235) ($generated@@239 $generated@@235)) (and ($generated@@57 $generated@@241 $generated@@41) ($generated@@89 $generated@@241 $generated@@41 $generated@@235))) (and (and ($generated@@26 $generated@@24 $generated@@236 ($generated@@27 $generated@@41)) ($generated@@44 $generated@@24 $generated@@236 ($generated@@27 $generated@@41) $generated@@235)) ($generated@@107 $generated@@236))) (and (and (and ($generated@@26 $generated@@24 $generated@@237 ($generated@@27 $generated@@41)) ($generated@@44 $generated@@24 $generated@@237 ($generated@@27 $generated@@41) $generated@@235)) ($generated@@107 $generated@@237)) (and (= 2 $generated@@20) (= (ControlFlow 0 3) 2)))) $generated@@242)))
$generated@@245)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
