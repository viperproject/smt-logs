(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@130 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (T@T T@T) T@T)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@186 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@187 (T@U) Bool)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@30) 3))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@28 $generated@@43) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@43 $generated@@31))) (and (=> (not ($generated@@32 $generated@@43)) (and (=> ($generated@@33 $generated@@43) (let (($generated@@44 ($generated@@34 $generated@@43)))
 (and ($generated@@28 $generated@@44) (let (($generated@@45 ($generated@@26 $generated@@42 $generated@@44)))
($generated@@35 $generated@@45 $generated@@45))))) (=> (not ($generated@@33 $generated@@43)) (let (($generated@@46 ($generated@@36 $generated@@43)))
 (and ($generated@@28 $generated@@46) (let (($generated@@47 ($generated@@26 $generated@@42 $generated@@46)))
 (and ($generated@@35 $generated@@47 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))) ($generated@@35 $generated@@47 ($generated@@40 ($generated@@27 $generated@@41) $generated@@47 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))))))))))) (= ($generated@@26 ($generated@@27 $generated@@42) $generated@@43) (ite ($generated@@32 $generated@@43) $generated@@39 (ite ($generated@@33 $generated@@43) (let (($generated@@48 ($generated@@34 $generated@@43)))
(let (($generated@@49 ($generated@@26 $generated@@42 $generated@@48)))
($generated@@40 ($generated@@27 $generated@@41) $generated@@49 $generated@@49))) (let (($generated@@50 ($generated@@36 $generated@@43)))
(let (($generated@@51 ($generated@@26 $generated@@42 $generated@@50)))
($generated@@40 ($generated@@27 $generated@@41) $generated@@51 ($generated@@40 ($generated@@27 $generated@@41) $generated@@51 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@42) $generated@@43))
))))
(assert (= ($generated@@52 $generated@@39) $generated@@2))
(assert (= ($generated@@52 $generated@@53) $generated@@4))
(assert ($generated@@29 $generated@@30 $generated@@39 $generated@@54))
(assert ($generated@@29 $generated@@30 $generated@@53 $generated@@31))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@37 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@37 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@52 $generated@@58) $generated@@2))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@59 $generated@@60) (= ($generated@@52 $generated@@60) $generated@@3))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@32 $generated@@61) (= ($generated@@52 $generated@@61) $generated@@4))
 :pattern ( ($generated@@32 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@33 $generated@@62) (= ($generated@@52 $generated@@62) $generated@@5))
 :pattern ( ($generated@@33 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@52 $generated@@64) $generated@@6))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@57 $generated@@69) (= $generated@@69 $generated@@39))
 :pattern ( ($generated@@57 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@32 $generated@@70) (= $generated@@70 $generated@@53))
 :pattern ( ($generated@@32 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@59 $generated@@71) (exists (($generated@@72 T@U) ) (= $generated@@71 ($generated@@38 $generated@@72))))
 :pattern ( ($generated@@59 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@33 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@33 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@63 $generated@@77) (exists (($generated@@78 T@U) ) (= $generated@@77 ($generated@@76 $generated@@78))))
 :pattern ( ($generated@@63 $generated@@77))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@35 ($generated@@37 $generated@@30 $generated@@81) ($generated@@37 $generated@@30 $generated@@82)) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@81 $generated@@54) ($generated@@29 $generated@@30 $generated@@82 $generated@@54)))) (and (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@57 ($generated@@37 $generated@@30 $generated@@81)))))) (let (($generated@@83 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@81)))))
($generated@@35 $generated@@83 ($generated@@37 $generated@@30 $generated@@82)))) (= ($generated@@40 ($generated@@27 $generated@@80) ($generated@@37 $generated@@30 $generated@@81) ($generated@@37 $generated@@30 $generated@@82)) (ite ($generated@@57 ($generated@@37 $generated@@30 $generated@@81)) $generated@@82 (let (($generated@@84 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@81)))))
($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@80) $generated@@84 ($generated@@37 $generated@@30 $generated@@82))))))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@27 $generated@@80) ($generated@@37 $generated@@30 $generated@@81) ($generated@@37 $generated@@30 $generated@@82)))
))))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@38 $generated@@85) $generated@@54) ($generated@@29 $generated@@30 $generated@@85 $generated@@54))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@38 $generated@@85) $generated@@54))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@73 $generated@@86) $generated@@31) ($generated@@29 $generated@@30 $generated@@86 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@73 $generated@@86) $generated@@31))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@76 $generated@@87) $generated@@31) ($generated@@29 $generated@@30 $generated@@87 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@76 $generated@@87) $generated@@31))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@35 $generated@@89 $generated@@90) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@89 $generated@@54) ($generated@@29 $generated@@30 $generated@@90 $generated@@54)))) ($generated@@29 $generated@@30 ($generated@@40 $generated@@88 $generated@@89 $generated@@90) $generated@@54))
 :pattern ( ($generated@@40 $generated@@88 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@40 ($generated@@27 $generated@@91) $generated@@92 $generated@@93) ($generated@@40 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@40 ($generated@@27 $generated@@91) $generated@@92 $generated@@93))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@28 $generated@@95) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@95 $generated@@31))) ($generated@@29 $generated@@30 ($generated@@26 $generated@@94 $generated@@95) $generated@@54))
 :pattern ( ($generated@@26 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@96 $generated@@54) (or ($generated@@57 $generated@@96) ($generated@@59 $generated@@96)))
 :pattern ( ($generated@@59 $generated@@96) ($generated@@29 $generated@@30 $generated@@96 $generated@@54))
 :pattern ( ($generated@@57 $generated@@96) ($generated@@29 $generated@@30 $generated@@96 $generated@@54))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@52 ($generated@@38 $generated@@97)) $generated@@3)
 :pattern ( ($generated@@38 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@79 ($generated@@38 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@38 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@52 ($generated@@73 $generated@@99)) $generated@@5)
 :pattern ( ($generated@@73 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@34 ($generated@@73 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@73 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@52 ($generated@@76 $generated@@101)) $generated@@6)
 :pattern ( ($generated@@76 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@36 ($generated@@76 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@76 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@65 $generated@@104 ($generated@@66 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@66 $generated@@104 $generated@@103))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or ($generated@@35 $generated@@106 $generated@@107) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@106 $generated@@54) ($generated@@29 $generated@@30 $generated@@107 $generated@@54)))) (and (=> (not ($generated@@57 $generated@@106)) (let (($generated@@108 ($generated@@79 $generated@@106)))
($generated@@35 $generated@@108 $generated@@107))) (= ($generated@@40 ($generated@@27 $generated@@105) $generated@@106 $generated@@107) (ite ($generated@@57 $generated@@106) $generated@@107 (let (($generated@@109 ($generated@@79 $generated@@106)))
($generated@@38 ($generated@@40 $generated@@105 $generated@@109 $generated@@107)))))))
 :pattern ( ($generated@@40 ($generated@@27 $generated@@105) $generated@@106 $generated@@107))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@110) $generated@@111) ($generated@@26 $generated@@110 $generated@@111))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@110) $generated@@111))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@28 ($generated@@37 $generated@@30 $generated@@113)) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@113 $generated@@31))) (and (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@32 ($generated@@37 $generated@@30 $generated@@113)))))) (and (=> ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@33 ($generated@@37 $generated@@30 $generated@@113))))) (let (($generated@@114 ($generated@@37 $generated@@30 ($generated@@34 ($generated@@37 $generated@@30 $generated@@113)))))
 (and ($generated@@28 $generated@@114) (let (($generated@@115 ($generated@@26 ($generated@@27 $generated@@112) $generated@@114)))
($generated@@35 $generated@@115 $generated@@115))))) (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@33 ($generated@@37 $generated@@30 $generated@@113)))))) (let (($generated@@116 ($generated@@37 $generated@@30 ($generated@@36 ($generated@@37 $generated@@30 $generated@@113)))))
 (and ($generated@@28 $generated@@116) (let (($generated@@117 ($generated@@26 ($generated@@27 $generated@@112) $generated@@116)))
 (and ($generated@@35 $generated@@117 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))) ($generated@@35 $generated@@117 ($generated@@40 ($generated@@27 $generated@@41) $generated@@117 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))))))))))) (= ($generated@@26 ($generated@@27 $generated@@112) ($generated@@37 $generated@@30 $generated@@113)) (ite ($generated@@32 ($generated@@37 $generated@@30 $generated@@113)) $generated@@39 (ite ($generated@@33 ($generated@@37 $generated@@30 $generated@@113)) (let (($generated@@118 ($generated@@37 $generated@@30 ($generated@@34 ($generated@@37 $generated@@30 $generated@@113)))))
(let (($generated@@119 ($generated@@37 $generated@@30 ($generated@@26 ($generated@@27 $generated@@112) $generated@@118))))
($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@119 $generated@@119)))) (let (($generated@@120 ($generated@@37 $generated@@30 ($generated@@36 ($generated@@37 $generated@@30 $generated@@113)))))
(let (($generated@@121 ($generated@@37 $generated@@30 ($generated@@26 ($generated@@27 $generated@@112) $generated@@120))))
($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@121 ($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@121 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@112) ($generated@@37 $generated@@30 $generated@@113)))
))))
(assert (forall (($generated@@123 T@U) ) (! (< ($generated@@122 $generated@@123) ($generated@@122 ($generated@@38 $generated@@123)))
 :pattern ( ($generated@@38 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (< ($generated@@122 $generated@@124) ($generated@@122 ($generated@@73 $generated@@124)))
 :pattern ( ($generated@@73 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (< ($generated@@122 $generated@@125) ($generated@@122 ($generated@@76 $generated@@125)))
 :pattern ( ($generated@@76 $generated@@125))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@126 $generated@@137 $generated@@138 $generated@@139 ($generated@@133 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@126 $generated@@144 $generated@@145 $generated@@146 ($generated@@133 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@126 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@126 $generated@@153 $generated@@154 $generated@@155 ($generated@@133 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@126 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))) (= ($generated@@9 $generated@@127) 4)) (= ($generated@@9 $generated@@128) 5)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@130 $generated@@162 $generated@@163 ($generated@@134 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@164) $generated@@166) $generated@@164)
 :weight 0
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@171 $generated@@172) (= ($generated@@130 $generated@@167 $generated@@168 ($generated@@134 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@169) $generated@@172) ($generated@@130 $generated@@167 $generated@@168 $generated@@170 $generated@@172)))
 :weight 0
))) (= ($generated@@9 $generated@@131) 6)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@9 ($generated@@132 $generated@@173 $generated@@174)) 7))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@135 ($generated@@132 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@132 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@136 ($generated@@132 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@132 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@14 ($generated@@126 $generated@@127 $generated@@128 $generated@@10 ($generated@@129 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))  (=> (and (or (not (= $generated@@183 $generated@@179)) (not true)) ($generated@@14 ($generated@@65 $generated@@10 ($generated@@130 $generated@@128 $generated@@131 ($generated@@130 $generated@@127 ($generated@@132 $generated@@128 $generated@@131) $generated@@180 $generated@@183) $generated@@181)))) $generated@@182))
 :pattern ( ($generated@@126 $generated@@127 $generated@@128 $generated@@10 ($generated@@129 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@185 $generated@@31) (or (or ($generated@@32 $generated@@185) ($generated@@33 $generated@@185)) ($generated@@63 $generated@@185)))
 :pattern ( ($generated@@63 $generated@@185) ($generated@@29 $generated@@30 $generated@@185 $generated@@31))
 :pattern ( ($generated@@33 $generated@@185) ($generated@@29 $generated@@30 $generated@@185 $generated@@31))
 :pattern ( ($generated@@32 $generated@@185) ($generated@@29 $generated@@30 $generated@@185 $generated@@31))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and ($generated@@187 $generated@@189) ($generated@@29 $generated@@30 $generated@@188 $generated@@54)) ($generated@@186 $generated@@30 $generated@@188 $generated@@54 $generated@@189))
 :pattern ( ($generated@@186 $generated@@30 $generated@@188 $generated@@54 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@187 $generated@@191) ($generated@@29 $generated@@30 $generated@@190 $generated@@31)) ($generated@@186 $generated@@30 $generated@@190 $generated@@31 $generated@@191))
 :pattern ( ($generated@@186 $generated@@30 $generated@@190 $generated@@31 $generated@@191))
)))
(assert (= ($generated@@192 $generated@@54) $generated@@0))
(assert (= ($generated@@193 $generated@@54) $generated@@7))
(assert (= ($generated@@192 $generated@@31) $generated@@1))
(assert (= ($generated@@193 $generated@@31) $generated@@8))
(assert (= $generated@@39 ($generated@@37 $generated@@30 $generated@@39)))
(assert (= $generated@@53 ($generated@@37 $generated@@30 $generated@@53)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and ($generated@@187 $generated@@195) (and ($generated@@59 $generated@@194) ($generated@@186 $generated@@30 $generated@@194 $generated@@54 $generated@@195))) ($generated@@186 $generated@@30 ($generated@@79 $generated@@194) $generated@@54 $generated@@195))
 :pattern ( ($generated@@186 $generated@@30 ($generated@@79 $generated@@194) $generated@@54 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@187 $generated@@197) (and ($generated@@33 $generated@@196) ($generated@@186 $generated@@30 $generated@@196 $generated@@31 $generated@@197))) ($generated@@186 $generated@@30 ($generated@@34 $generated@@196) $generated@@31 $generated@@197))
 :pattern ( ($generated@@186 $generated@@30 ($generated@@34 $generated@@196) $generated@@31 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@187 $generated@@199) (and ($generated@@63 $generated@@198) ($generated@@186 $generated@@30 $generated@@198 $generated@@31 $generated@@199))) ($generated@@186 $generated@@30 ($generated@@36 $generated@@198) $generated@@31 $generated@@199))
 :pattern ( ($generated@@186 $generated@@30 ($generated@@36 $generated@@198) $generated@@31 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@38 ($generated@@37 $generated@@30 $generated@@200)) ($generated@@37 $generated@@30 ($generated@@38 $generated@@200)))
 :pattern ( ($generated@@38 ($generated@@37 $generated@@30 $generated@@200)))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@73 ($generated@@37 $generated@@30 $generated@@201)) ($generated@@37 $generated@@30 ($generated@@73 $generated@@201)))
 :pattern ( ($generated@@73 ($generated@@37 $generated@@30 $generated@@201)))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@76 ($generated@@37 $generated@@30 $generated@@202)) ($generated@@37 $generated@@30 ($generated@@76 $generated@@202)))
 :pattern ( ($generated@@76 ($generated@@37 $generated@@30 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@66 $generated@@204 ($generated@@37 $generated@@204 $generated@@203)) ($generated@@37 $generated@@131 ($generated@@66 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@66 $generated@@204 ($generated@@37 $generated@@204 $generated@@203)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@216 true))
(let (($generated@@217  (=> (= $generated@@205 ($generated@@76 $generated@@206)) (=> (and ($generated@@29 $generated@@30 $generated@@206 $generated@@31) (= $generated@@207 $generated@@206)) (=> (and (and ($generated@@29 $generated@@30 $generated@@207 $generated@@31) (= $generated@@208 $generated@@207)) (and ($generated@@186 $generated@@30 $generated@@208 $generated@@31 $generated@@209) (= (ControlFlow 0 6) (- 0 5)))) (< ($generated@@122 $generated@@208) ($generated@@122 $generated@@205)))))))
(let (($generated@@218  (=> (or (not (= $generated@@205 ($generated@@73 $generated@@210))) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@217) (=> (= (ControlFlow 0 8) 7) $generated@@216)))))
(let (($generated@@219  (=> (= $generated@@205 ($generated@@73 $generated@@210)) (=> (and ($generated@@29 $generated@@30 $generated@@210 $generated@@31) (= $generated@@211 $generated@@210)) (=> (and (and ($generated@@29 $generated@@30 $generated@@211 $generated@@31) (= $generated@@212 $generated@@211)) (and ($generated@@186 $generated@@30 $generated@@212 $generated@@31 $generated@@209) (= (ControlFlow 0 4) (- 0 3)))) (< ($generated@@122 $generated@@212) ($generated@@122 $generated@@205)))))))
(let (($generated@@220  (=> (or (not (= $generated@@205 $generated@@53)) (not true)) (and (=> (= (ControlFlow 0 9) 4) $generated@@219) (=> (= (ControlFlow 0 9) 8) $generated@@218)))))
(let (($generated@@221 true))
(let (($generated@@222 true))
(let (($generated@@223  (=> (= $generated@@213 ($generated@@129 $generated@@214 $generated@@209 $generated false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@222) (=> (= (ControlFlow 0 10) 2) $generated@@221)) (=> (= (ControlFlow 0 10) 9) $generated@@220)))))
(let (($generated@@224  (=> (and (and (and ($generated@@187 $generated@@209) ($generated@@215 $generated@@209)) ($generated@@29 $generated@@30 $generated@@205 $generated@@31)) (and (= 2 $generated@@25) (= (ControlFlow 0 11) 10))) $generated@@223)))
$generated@@224))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
