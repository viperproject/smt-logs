(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (Int) T@U)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@42 (Int) Bool)
(declare-fun $generated@@43 (T@U T@U Int) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U Int) T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@63 (T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T) T@T)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@210 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@11 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@25 $generated@@11 $generated@@30 $generated@@29 $generated@@31)
 :pattern ( ($generated@@25 $generated@@11 $generated@@30 $generated@@29 $generated@@31))
)))
(assert (= ($generated@@9 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@36 $generated@@37)) ($generated@@32 $generated@@38))
 :pattern ( ($generated@@32 $generated@@38) ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@36 $generated@@37)))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@46 Int) ) (!  (=> (or ($generated@@42 ($generated@@41 $generated@@46)) (and (< 1 $generated@@39) (<= ($generated@@41 0) $generated@@46))) (and ($generated@@43 $generated@@29 ($generated@@44 $generated@@11 ($generated@@15 ($generated@@41 5))) ($generated@@41 $generated@@46)) (= ($generated@@40 ($generated@@41 $generated@@46)) ($generated@@45 $generated@@29 ($generated@@44 $generated@@11 ($generated@@15 ($generated@@41 5))) ($generated@@41 $generated@@46)))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@41 $generated@@46)))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@47 $generated@@51 $generated@@52) ($generated@@35 $generated@@49 $generated@@50))  (and ($generated@@48 $generated@@51 $generated@@49) ($generated@@48 $generated@@52 $generated@@50)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@47 $generated@@51 $generated@@52) ($generated@@35 $generated@@49 $generated@@50)))
)))
(assert (= ($generated@@9 $generated@@53) 4))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (or ($generated@@43 $generated@@55 $generated@@56 $generated@@57) (and (< 0 $generated@@39) (and ($generated@@48 $generated@@56 $generated@@55) (<= ($generated@@41 0) $generated@@57)))) ($generated@@33 $generated@@53 ($generated@@45 $generated@@55 $generated@@56 $generated@@57) ($generated@@54 $generated@@55 $generated@@55)))
 :pattern ( ($generated@@45 $generated@@55 $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@41 $generated@@58) $generated@@58)
 :pattern ( ($generated@@41 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@62 $generated@@68) (= ($generated@@25 $generated@@34 ($generated@@47 $generated@@66 $generated@@67) ($generated@@35 $generated@@64 $generated@@65) $generated@@68)  (and ($generated@@63 $generated@@66 $generated@@64 $generated@@68) ($generated@@63 $generated@@67 $generated@@65 $generated@@68))))
 :pattern ( ($generated@@25 $generated@@34 ($generated@@47 $generated@@66 $generated@@67) ($generated@@35 $generated@@64 $generated@@65) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@32 $generated@@70) (= ($generated@@69 $generated@@70) $generated@@3))
 :pattern ( ($generated@@32 $generated@@70))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@71 Int) ) (!  (=> (or ($generated@@42 $generated@@71) (and (< 1 $generated@@39) (<= ($generated@@41 0) $generated@@71))) ($generated@@33 $generated@@53 ($generated@@40 $generated@@71) ($generated@@54 $generated@@29 $generated@@29)))
 :pattern ( ($generated@@40 $generated@@71))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@44 $generated@@74 ($generated@@72 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@32 $generated@@75) (exists (($generated@@76 T@U) ($generated@@77 T@U) ) (= $generated@@75 ($generated@@47 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@32 $generated@@75))
)))
(assert (= ($generated@@9 $generated@@78) 5))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@33 $generated@@78 $generated@@81 ($generated@@79 $generated@@82)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@80 $generated@@81 $generated@@83) ($generated@@48 $generated@@83 $generated@@82))
 :pattern ( ($generated@@80 $generated@@81 $generated@@83))
)))
 :pattern ( ($generated@@33 $generated@@78 $generated@@81 ($generated@@79 $generated@@82)))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@33 $generated@@11 $generated@@84 $generated@@26) (<= ($generated@@41 0) ($generated@@16 $generated@@84)))
 :pattern ( ($generated@@33 $generated@@11 $generated@@84 $generated@@26))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@63 ($generated@@44 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@25 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@63 ($generated@@44 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@48 $generated@@89 $generated@@26) (and (= ($generated@@44 $generated@@11 ($generated@@72 $generated@@11 $generated@@89)) $generated@@89) ($generated@@33 $generated@@11 ($generated@@72 $generated@@11 $generated@@89) $generated@@26)))
 :pattern ( ($generated@@48 $generated@@89 $generated@@26))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@48 $generated@@90 $generated@@29) (and (= ($generated@@44 $generated@@11 ($generated@@72 $generated@@11 $generated@@90)) $generated@@90) ($generated@@33 $generated@@11 ($generated@@72 $generated@@11 $generated@@90) $generated@@29)))
 :pattern ( ($generated@@48 $generated@@90 $generated@@29))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ) (!  (=> (and (or ($generated@@43 $generated@@92 $generated@@93 $generated@@94) (and (< 0 $generated@@39) (and (and ($generated@@48 $generated@@93 $generated@@92) ($generated@@63 $generated@@93 $generated@@92 $generated@@91)) (<= ($generated@@41 0) $generated@@94)))) ($generated@@62 $generated@@91)) ($generated@@25 $generated@@53 ($generated@@45 $generated@@92 $generated@@93 $generated@@94) ($generated@@54 $generated@@92 $generated@@92) $generated@@91))
 :pattern ( ($generated@@25 $generated@@53 ($generated@@45 $generated@@92 $generated@@93 $generated@@94) ($generated@@54 $generated@@92 $generated@@92) $generated@@91))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@48 ($generated@@44 $generated@@97 $generated@@95) $generated@@96) ($generated@@33 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@48 ($generated@@44 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@25 $generated@@78 $generated@@98 ($generated@@79 $generated@@99) $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@80 $generated@@98 $generated@@101) ($generated@@63 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@80 $generated@@98 $generated@@101))
)))
 :pattern ( ($generated@@25 $generated@@78 $generated@@98 ($generated@@79 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@102 ($generated@@54 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@54 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@54 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@54 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@54 $generated@@109 $generated@@110)) $generated@@0)
 :pattern ( ($generated@@54 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@69 ($generated@@47 $generated@@111 $generated@@112)) $generated@@3)
 :pattern ( ($generated@@47 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 ($generated@@35 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@35 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@116 ($generated@@35 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@35 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 ($generated@@47 $generated@@120 $generated@@121)) $generated@@120)
 :pattern ( ($generated@@47 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@122 ($generated@@47 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@47 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@79 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@79 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@108 ($generated@@79 $generated@@127)) $generated)
 :pattern ( ($generated@@79 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@72 $generated@@129 ($generated@@44 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@44 $generated@@129 $generated@@128))
)))
(assert  (and (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@130 $generated@@135 $generated@@136 ($generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@137) $generated@@139) $generated@@137)
 :weight 0
)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@144 $generated@@145) (= ($generated@@130 $generated@@140 $generated@@141 ($generated@@134 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@145) ($generated@@130 $generated@@140 $generated@@141 $generated@@143 $generated@@145)))
 :weight 0
))) (= ($generated@@9 $generated@@131) 6)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@25 $generated@@53 $generated@@146 ($generated@@54 $generated@@147 $generated@@148) $generated@@149) (forall (($generated@@150 T@U) ) (!  (=> ($generated@@80 ($generated@@133 $generated@@146) $generated@@150) (and ($generated@@63 ($generated@@130 $generated@@131 $generated@@131 ($generated@@132 $generated@@146) $generated@@150) $generated@@148 $generated@@149) ($generated@@63 $generated@@150 $generated@@147 $generated@@149)))
 :pattern ( ($generated@@130 $generated@@131 $generated@@131 ($generated@@132 $generated@@146) $generated@@150))
 :pattern ( ($generated@@80 ($generated@@133 $generated@@146) $generated@@150))
)))
 :pattern ( ($generated@@25 $generated@@53 $generated@@146 ($generated@@54 $generated@@147 $generated@@148) $generated@@149))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (< ($generated@@151 $generated@@153) ($generated@@152 ($generated@@47 $generated@@153 $generated@@154)))
 :pattern ( ($generated@@47 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (< ($generated@@151 $generated@@156) ($generated@@152 ($generated@@47 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@47 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (!  (not ($generated@@80 ($generated@@133 $generated@@157) $generated@@158))
 :pattern ( ($generated@@80 ($generated@@133 $generated@@157) $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@48 $generated@@159 ($generated@@54 $generated@@160 $generated@@161)) (and (= ($generated@@44 $generated@@53 ($generated@@72 $generated@@53 $generated@@159)) $generated@@159) ($generated@@33 $generated@@53 ($generated@@72 $generated@@53 $generated@@159) ($generated@@54 $generated@@160 $generated@@161))))
 :pattern ( ($generated@@48 $generated@@159 ($generated@@54 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@48 $generated@@164 ($generated@@35 $generated@@162 $generated@@163)) (and (= ($generated@@44 $generated@@34 ($generated@@72 $generated@@34 $generated@@164)) $generated@@164) ($generated@@33 $generated@@34 ($generated@@72 $generated@@34 $generated@@164) ($generated@@35 $generated@@162 $generated@@163))))
 :pattern ( ($generated@@48 $generated@@164 ($generated@@35 $generated@@162 $generated@@163)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@165 $generated@@173 $generated@@174 $generated@@175 ($generated@@170 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@178 $generated@@179) $generated@@176)
 :weight 0
)) (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@165 $generated@@180 $generated@@181 $generated@@182 ($generated@@170 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@165 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@165 $generated@@189 $generated@@190 $generated@@191 ($generated@@170 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@165 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (= ($generated@@9 $generated@@166) 7)) (= ($generated@@9 $generated@@167) 8)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@9 ($generated@@169 $generated@@198 $generated@@199)) 9))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@171 ($generated@@169 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@169 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@172 ($generated@@169 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@169 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@14 ($generated@@165 $generated@@166 $generated@@167 $generated@@10 ($generated@@168 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (or (not (= $generated@@208 $generated@@204)) (not true)) ($generated@@14 ($generated@@72 $generated@@10 ($generated@@130 $generated@@167 $generated@@131 ($generated@@130 $generated@@166 ($generated@@169 $generated@@167 $generated@@131) $generated@@205 $generated@@208) $generated@@206)))) $generated@@207))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167 $generated@@10 ($generated@@168 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (and (= ($generated@@108 ($generated@@35 $generated@@211 $generated@@212)) $generated@@4) (= ($generated@@210 ($generated@@35 $generated@@211 $generated@@212)) $generated@@7))
 :pattern ( ($generated@@35 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ) (!  (or (= $generated@@213 $generated@@157) (exists (($generated@@214 T@U) ) ($generated@@80 ($generated@@133 $generated@@213) $generated@@214)))
 :pattern ( ($generated@@133 $generated@@213))
)))
(assert (forall (($generated@@216 T@U) ) (!  (or (= $generated@@216 $generated@@157) (exists (($generated@@217 T@U) ) ($generated@@80 ($generated@@215 $generated@@216) $generated@@217)))
 :pattern ( ($generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@80 ($generated@@218 $generated@@219) $generated@@220)  (and ($generated@@80 ($generated@@133 $generated@@219) ($generated@@119 ($generated@@72 $generated@@34 $generated@@220))) (= ($generated@@130 $generated@@131 $generated@@131 ($generated@@132 $generated@@219) ($generated@@119 ($generated@@72 $generated@@34 $generated@@220))) ($generated@@122 ($generated@@72 $generated@@34 $generated@@220)))))
 :pattern ( ($generated@@80 ($generated@@218 $generated@@219) $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@80 ($generated@@215 $generated@@221) $generated@@222) (exists (($generated@@223 T@U) ) (!  (and ($generated@@80 ($generated@@133 $generated@@221) $generated@@223) (= $generated@@222 ($generated@@130 $generated@@131 $generated@@131 ($generated@@132 $generated@@221) $generated@@223)))
 :pattern ( ($generated@@80 ($generated@@133 $generated@@221) $generated@@223))
 :pattern ( ($generated@@130 $generated@@131 $generated@@131 ($generated@@132 $generated@@221) $generated@@223))
)))
 :pattern ( ($generated@@80 ($generated@@215 $generated@@221) $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@151 ($generated@@44 $generated@@34 $generated@@224)) ($generated@@152 $generated@@224))
 :pattern ( ($generated@@151 ($generated@@44 $generated@@34 $generated@@224)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> ($generated@@48 $generated@@225 ($generated@@79 $generated@@226)) (and (= ($generated@@44 $generated@@78 ($generated@@72 $generated@@78 $generated@@225)) $generated@@225) ($generated@@33 $generated@@78 ($generated@@72 $generated@@78 $generated@@225) ($generated@@79 $generated@@226))))
 :pattern ( ($generated@@48 $generated@@225 ($generated@@79 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (= ($generated@@33 $generated@@53 $generated@@227 ($generated@@54 $generated@@228 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> ($generated@@80 ($generated@@133 $generated@@227) $generated@@230) (and ($generated@@48 ($generated@@130 $generated@@131 $generated@@131 ($generated@@132 $generated@@227) $generated@@230) $generated@@229) ($generated@@48 $generated@@230 $generated@@228)))
 :pattern ( ($generated@@130 $generated@@131 $generated@@131 ($generated@@132 $generated@@227) $generated@@230))
 :pattern ( ($generated@@80 ($generated@@133 $generated@@227) $generated@@230))
)))
 :pattern ( ($generated@@33 $generated@@53 $generated@@227 ($generated@@54 $generated@@228 $generated@@229)))
)))
(assert (= ($generated@@108 $generated@@26) $generated@@2))
(assert (= ($generated@@210 $generated@@26) $generated@@6))
(assert (= ($generated@@108 $generated@@29) $generated@@5))
(assert (= ($generated@@210 $generated@@29) $generated@@8))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@231 Int) ) (!  (=> (or ($generated@@42 $generated@@231) (and (< 1 $generated@@39) (<= ($generated@@41 0) $generated@@231))) (and ($generated@@43 $generated@@29 ($generated@@44 $generated@@11 ($generated@@15 ($generated@@41 5))) $generated@@231) (= ($generated@@40 $generated@@231) ($generated@@45 $generated@@29 ($generated@@44 $generated@@11 ($generated@@15 ($generated@@41 5))) $generated@@231))))
 :pattern ( ($generated@@40 $generated@@231))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@62 $generated@@234) (and ($generated@@32 $generated@@232) (exists (($generated@@235 T@U) ) (! ($generated@@25 $generated@@34 $generated@@232 ($generated@@35 $generated@@233 $generated@@235) $generated@@234)
 :pattern ( ($generated@@25 $generated@@34 $generated@@232 ($generated@@35 $generated@@233 $generated@@235) $generated@@234))
)))) ($generated@@63 ($generated@@119 $generated@@232) $generated@@233 $generated@@234))
 :pattern ( ($generated@@63 ($generated@@119 $generated@@232) $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and ($generated@@62 $generated@@238) (and ($generated@@32 $generated@@236) (exists (($generated@@239 T@U) ) (! ($generated@@25 $generated@@34 $generated@@236 ($generated@@35 $generated@@239 $generated@@237) $generated@@238)
 :pattern ( ($generated@@25 $generated@@34 $generated@@236 ($generated@@35 $generated@@239 $generated@@237) $generated@@238))
)))) ($generated@@63 ($generated@@122 $generated@@236) $generated@@237 $generated@@238))
 :pattern ( ($generated@@63 ($generated@@122 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! (= ($generated@@33 $generated@@11 $generated@@240 $generated@@29)  (and (<= ($generated@@41 0) ($generated@@16 $generated@@240)) (< ($generated@@16 $generated@@240) 4294967296)))
 :pattern ( ($generated@@33 $generated@@11 $generated@@240 $generated@@29))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@47 ($generated@@59 $generated@@131 $generated@@241) ($generated@@59 $generated@@131 $generated@@242)) ($generated@@59 $generated@@34 ($generated@@47 $generated@@241 $generated@@242)))
 :pattern ( ($generated@@47 ($generated@@59 $generated@@131 $generated@@241) ($generated@@59 $generated@@131 $generated@@242)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@44 $generated@@11 ($generated@@15 ($generated@@41 $generated@@243))) ($generated@@59 $generated@@131 ($generated@@44 $generated@@11 ($generated@@15 $generated@@243))))
 :pattern ( ($generated@@44 $generated@@11 ($generated@@15 ($generated@@41 $generated@@243))))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (= ($generated@@44 $generated@@245 ($generated@@59 $generated@@245 $generated@@244)) ($generated@@59 $generated@@131 ($generated@@44 $generated@@245 $generated@@244)))
 :pattern ( ($generated@@44 $generated@@245 ($generated@@59 $generated@@245 $generated@@244)))
)))
(assert (forall (($generated@@246 T@U) ) (!  (or (= $generated@@246 $generated@@157) (exists (($generated@@247 T@U) ($generated@@248 T@U) ) ($generated@@80 ($generated@@218 $generated@@246) ($generated@@44 $generated@@34 ($generated@@47 $generated@@247 $generated@@248)))))
 :pattern ( ($generated@@218 $generated@@246))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> ($generated@@33 $generated@@53 $generated@@249 ($generated@@54 $generated@@250 $generated@@251)) (and (and ($generated@@33 $generated@@78 ($generated@@133 $generated@@249) ($generated@@79 $generated@@250)) ($generated@@33 $generated@@78 ($generated@@215 $generated@@249) ($generated@@79 $generated@@251))) ($generated@@33 $generated@@78 ($generated@@218 $generated@@249) ($generated@@79 ($generated@@35 $generated@@250 $generated@@251)))))
 :pattern ( ($generated@@33 $generated@@53 $generated@@249 ($generated@@54 $generated@@250 $generated@@251)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) Bool)
(declare-fun $generated@@258 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@259  (=> (= $generated@@252 ($generated@@41 5)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@41 0) $generated@@252) (< $generated@@252 4294967296))) (=> (and (<= ($generated@@41 0) $generated@@252) (< $generated@@252 4294967296)) (=> (and (= $generated@@253 ($generated@@41 5)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@41 0) $generated@@253) (< $generated@@253 4294967296))))))))
(let (($generated@@260 true))
(let (($generated@@261  (=> (= $generated@@254 ($generated@@168 $generated@@255 $generated@@256 $generated@@1 false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@260) (=> (= (ControlFlow 0 5) 3) $generated@@259)))))
(let (($generated@@262  (=> (and (and (and ($generated@@62 $generated@@256) ($generated@@257 $generated@@256)) (<= ($generated@@41 0) $generated@@258)) (and (= 1 $generated@@39) (= (ControlFlow 0 6) 5))) $generated@@261)))
$generated@@262)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
