(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@58 () Int)
(declare-fun $generated@@59 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@91 (T@U) Int)
(declare-fun $generated@@92 (T@U) Int)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T) T@T)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) $generated@@1))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@25 $generated@@27) ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
 :pattern ( ($generated@@22 $generated@@23 $generated@@21 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ) (! ($generated@@28 $generated@@23 $generated@@21 ($generated@@24 $generated@@29))
 :pattern ( ($generated@@28 $generated@@23 $generated@@21 ($generated@@24 $generated@@29)))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@28 $generated@@23 ($generated@@33 $generated@@36 $generated@@37) ($generated@@24 $generated@@35))  (and ($generated@@34 $generated@@36 $generated@@35) ($generated@@28 $generated@@23 $generated@@37 ($generated@@24 $generated@@35))))
 :pattern ( ($generated@@28 $generated@@23 ($generated@@33 $generated@@36 $generated@@37) ($generated@@24 $generated@@35)))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@38 $generated@@39) (= ($generated@@20 $generated@@39) $generated@@1))
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@40 $generated@@41) (= ($generated@@20 $generated@@41) $generated@@2))
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 ($generated@@42 $generated@@45 $generated@@44)) $generated@@44)
 :pattern ( ($generated@@42 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (!  (=> ($generated@@40 $generated@@46) (exists (($generated@@47 T@U) ($generated@@48 T@U) ) (= $generated@@46 ($generated@@33 $generated@@47 $generated@@48))))
 :pattern ( ($generated@@40 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ) (!  (=> ($generated@@38 $generated@@49) (= $generated@@49 $generated@@21))
 :pattern ( ($generated@@38 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@50 ($generated@@43 $generated@@54 $generated@@51) $generated@@52 $generated@@53) ($generated@@22 $generated@@54 $generated@@51 $generated@@52 $generated@@53))
 :pattern ( ($generated@@50 ($generated@@43 $generated@@54 $generated@@51) $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@57 T@U) ) (!  (and (= ($generated@@55 ($generated@@24 $generated@@57)) $generated@@0) (= ($generated@@56 ($generated@@24 $generated@@57)) $generated@@3))
 :pattern ( ($generated@@24 $generated@@57))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@61 $generated@@64 $generated@@66 $generated@@67) (and (< 1 $generated@@58) (and ($generated@@28 $generated@@23 $generated@@66 ($generated@@24 $generated@@64)) ($generated@@28 $generated@@23 $generated@@67 ($generated@@24 $generated@@64))))) (and (=> (not ($generated@@38 $generated@@66)) (let (($generated@@68 ($generated@@62 $generated@@66)))
(let (($generated@@69 ($generated@@63 $generated@@66)))
($generated@@61 $generated@@64 $generated@@68 ($generated@@33 $generated@@69 $generated@@67))))) (= ($generated@@59 $generated@@64 ($generated@@60 $generated@@65) $generated@@66 $generated@@67) (ite ($generated@@38 $generated@@66) $generated@@67 (let (($generated@@70 ($generated@@62 $generated@@66)))
(let (($generated@@71 ($generated@@63 $generated@@66)))
($generated@@59 $generated@@64 $generated@@65 $generated@@70 ($generated@@33 $generated@@71 $generated@@67))))))))
 :pattern ( ($generated@@59 $generated@@64 ($generated@@60 $generated@@65) $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@28 $generated@@23 $generated@@73 ($generated@@24 $generated@@72)) (or ($generated@@38 $generated@@73) ($generated@@40 $generated@@73)))
 :pattern ( ($generated@@40 $generated@@73) ($generated@@28 $generated@@23 $generated@@73 ($generated@@24 $generated@@72)))
 :pattern ( ($generated@@38 $generated@@73) ($generated@@28 $generated@@23 $generated@@73 ($generated@@24 $generated@@72)))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@34 ($generated@@43 $generated@@76 $generated@@74) $generated@@75) ($generated@@28 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@34 ($generated@@43 $generated@@76 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@20 ($generated@@33 $generated@@77 $generated@@78)) $generated@@2)
 :pattern ( ($generated@@33 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@63 ($generated@@33 $generated@@79 $generated@@80)) $generated@@79)
 :pattern ( ($generated@@33 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@62 ($generated@@33 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@33 $generated@@81 $generated@@82))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@61 $generated@@83 $generated@@85 $generated@@86) (and (< 1 $generated@@58) (and ($generated@@28 $generated@@23 $generated@@85 ($generated@@24 $generated@@83)) ($generated@@28 $generated@@23 $generated@@86 ($generated@@24 $generated@@83))))) ($generated@@28 $generated@@23 ($generated@@59 $generated@@83 $generated@@84 $generated@@85 $generated@@86) ($generated@@24 $generated@@83)))
 :pattern ( ($generated@@59 $generated@@83 $generated@@84 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 ($generated@@24 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@24 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@42 $generated@@90 ($generated@@43 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@43 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (< ($generated@@91 $generated@@93) ($generated@@92 ($generated@@33 $generated@@93 $generated@@94)))
 :pattern ( ($generated@@33 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (< ($generated@@92 $generated@@96) ($generated@@92 ($generated@@33 $generated@@95 $generated@@96)))
 :pattern ( ($generated@@33 $generated@@95 $generated@@96))
)))
(assert (= ($generated@@4 $generated@@97) 4))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@61 $generated@@98 ($generated@@30 $generated@@23 $generated@@100) ($generated@@30 $generated@@23 $generated@@101)) (and (< 1 $generated@@58) (and ($generated@@28 $generated@@23 $generated@@100 ($generated@@24 $generated@@98)) ($generated@@28 $generated@@23 $generated@@101 ($generated@@24 $generated@@98))))) (and (=> (not ($generated@@9 ($generated@@30 $generated@@5 ($generated@@8 ($generated@@38 ($generated@@30 $generated@@23 $generated@@100)))))) (let (($generated@@102 ($generated@@30 $generated@@23 ($generated@@62 ($generated@@30 $generated@@23 $generated@@100)))))
(let (($generated@@103 ($generated@@30 $generated@@97 ($generated@@63 ($generated@@30 $generated@@23 $generated@@100)))))
($generated@@61 $generated@@98 $generated@@102 ($generated@@33 $generated@@103 ($generated@@30 $generated@@23 $generated@@101)))))) (= ($generated@@59 $generated@@98 ($generated@@60 $generated@@99) ($generated@@30 $generated@@23 $generated@@100) ($generated@@30 $generated@@23 $generated@@101)) (ite ($generated@@38 ($generated@@30 $generated@@23 $generated@@100)) $generated@@101 (let (($generated@@104 ($generated@@30 $generated@@23 ($generated@@62 ($generated@@30 $generated@@23 $generated@@100)))))
(let (($generated@@105 ($generated@@30 $generated@@97 ($generated@@63 ($generated@@30 $generated@@23 $generated@@100)))))
($generated@@30 $generated@@23 ($generated@@59 $generated@@98 ($generated@@60 $generated@@99) $generated@@104 ($generated@@30 $generated@@23 ($generated@@33 $generated@@105 ($generated@@30 $generated@@23 $generated@@101)))))))))))
 :weight 3
 :pattern ( ($generated@@59 $generated@@98 ($generated@@60 $generated@@99) ($generated@@30 $generated@@23 $generated@@100) ($generated@@30 $generated@@23 $generated@@101)))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and ($generated@@25 $generated@@108) (and ($generated@@40 $generated@@106) ($generated@@22 $generated@@23 $generated@@106 ($generated@@24 $generated@@107) $generated@@108))) ($generated@@50 ($generated@@63 $generated@@106) $generated@@107 $generated@@108))
 :pattern ( ($generated@@50 ($generated@@63 $generated@@106) $generated@@107 $generated@@108))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@109 $generated@@119 $generated@@120 $generated@@121 ($generated@@115 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@109 $generated@@126 $generated@@127 $generated@@128 ($generated@@115 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@109 $generated@@135 $generated@@136 $generated@@137 ($generated@@115 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@109 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))) (= ($generated@@4 $generated@@110) 5)) (= ($generated@@4 $generated@@111) 6)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@113 $generated@@144 $generated@@145 ($generated@@116 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@148) $generated@@146)
 :weight 0
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@113 $generated@@149 $generated@@150 ($generated@@116 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@113 $generated@@149 $generated@@150 $generated@@152 $generated@@154)))
 :weight 0
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@4 ($generated@@114 $generated@@155 $generated@@156)) 7))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@117 ($generated@@114 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@114 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@118 ($generated@@114 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@114 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@9 ($generated@@109 $generated@@110 $generated@@111 $generated@@5 ($generated@@112 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@113 $generated@@111 $generated@@97 ($generated@@113 $generated@@110 ($generated@@114 $generated@@111 $generated@@97) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@109 $generated@@110 $generated@@111 $generated@@5 ($generated@@112 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (or ($generated@@61 $generated@@168 $generated@@170 $generated@@171) (and (< 1 $generated@@58) (and (and ($generated@@28 $generated@@23 $generated@@170 ($generated@@24 $generated@@168)) ($generated@@22 $generated@@23 $generated@@170 ($generated@@24 $generated@@168) $generated@@167)) (and ($generated@@28 $generated@@23 $generated@@171 ($generated@@24 $generated@@168)) ($generated@@22 $generated@@23 $generated@@171 ($generated@@24 $generated@@168) $generated@@167))))) ($generated@@25 $generated@@167)) ($generated@@22 $generated@@23 ($generated@@59 $generated@@168 $generated@@169 $generated@@170 $generated@@171) ($generated@@24 $generated@@168) $generated@@167))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@59 $generated@@168 $generated@@169 $generated@@170 $generated@@171) ($generated@@24 $generated@@168) $generated@@167))
))))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@91 ($generated@@43 $generated@@23 $generated@@172)) ($generated@@92 $generated@@172))
 :pattern ( ($generated@@91 ($generated@@43 $generated@@23 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@59 $generated@@173 ($generated@@60 $generated@@174) $generated@@175 $generated@@176) ($generated@@59 $generated@@173 $generated@@174 $generated@@175 $generated@@176))
 :pattern ( ($generated@@59 $generated@@173 ($generated@@60 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@34 $generated@@178 ($generated@@24 $generated@@177)) (and (= ($generated@@43 $generated@@23 ($generated@@42 $generated@@23 $generated@@178)) $generated@@178) ($generated@@28 $generated@@23 ($generated@@42 $generated@@23 $generated@@178) ($generated@@24 $generated@@177))))
 :pattern ( ($generated@@34 $generated@@178 ($generated@@24 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@25 $generated@@181) (and ($generated@@40 $generated@@179) ($generated@@22 $generated@@23 $generated@@179 ($generated@@24 $generated@@180) $generated@@181))) ($generated@@22 $generated@@23 ($generated@@62 $generated@@179) ($generated@@24 $generated@@180) $generated@@181))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@62 $generated@@179) ($generated@@24 $generated@@180) $generated@@181))
)))
(assert (= $generated@@21 ($generated@@30 $generated@@23 $generated@@21)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@33 ($generated@@30 $generated@@97 $generated@@182) ($generated@@30 $generated@@23 $generated@@183)) ($generated@@30 $generated@@23 ($generated@@33 $generated@@182 $generated@@183)))
 :pattern ( ($generated@@33 ($generated@@30 $generated@@97 $generated@@182) ($generated@@30 $generated@@23 $generated@@183)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@43 $generated@@185 ($generated@@30 $generated@@185 $generated@@184)) ($generated@@30 $generated@@97 ($generated@@43 $generated@@185 $generated@@184)))
 :pattern ( ($generated@@43 $generated@@185 ($generated@@30 $generated@@185 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@25 $generated@@189) (= ($generated@@22 $generated@@23 ($generated@@33 $generated@@187 $generated@@188) ($generated@@24 $generated@@186) $generated@@189)  (and ($generated@@50 $generated@@187 $generated@@186 $generated@@189) ($generated@@22 $generated@@23 $generated@@188 ($generated@@24 $generated@@186) $generated@@189))))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@33 $generated@@187 $generated@@188) ($generated@@24 $generated@@186) $generated@@189))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@204 true))
(let (($generated@@205  (=> (= $generated@@190 ($generated@@33 $generated@@191 $generated@@192)) (=> (and (and ($generated@@34 $generated@@191 $generated@@193) ($generated@@28 $generated@@23 $generated@@192 ($generated@@24 $generated@@193))) (and (= $generated@@194 $generated@@192) ($generated@@28 $generated@@23 $generated@@194 ($generated@@24 $generated@@193)))) (=> (and (and (and (= $generated@@195 $generated@@194) (= $generated@@196 $generated@@191)) (and ($generated@@34 $generated@@196 $generated@@193) (= $generated@@197 $generated@@196))) (and (and ($generated@@22 $generated@@23 $generated@@195 ($generated@@24 $generated@@193) $generated@@198) (= $generated@@199 ($generated@@33 $generated@@197 $generated@@200))) (and ($generated@@22 $generated@@23 $generated@@199 ($generated@@24 $generated@@193) $generated@@198) (= (ControlFlow 0 4) (- 0 3))))) (or (< ($generated@@92 $generated@@195) ($generated@@92 $generated@@190)) (and (= ($generated@@92 $generated@@195) ($generated@@92 $generated@@190)) (< ($generated@@92 $generated@@199) ($generated@@92 $generated@@200)))))))))
(let (($generated@@206  (=> (or (not (= $generated@@190 $generated@@21)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@205) (=> (= (ControlFlow 0 6) 5) $generated@@204)))))
(let (($generated@@207 true))
(let (($generated@@208 true))
(let (($generated@@209  (=> (= $generated@@201 ($generated@@112 $generated@@202 $generated@@198 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@208) (=> (= (ControlFlow 0 7) 2) $generated@@207)) (=> (= (ControlFlow 0 7) 6) $generated@@206)))))
(let (($generated@@210  (=> (and ($generated@@25 $generated@@198) ($generated@@203 $generated@@198)) (=> (and (and ($generated@@28 $generated@@23 $generated@@190 ($generated@@24 $generated@@193)) ($generated@@28 $generated@@23 $generated@@200 ($generated@@24 $generated@@193))) (and (= 1 $generated@@58) (= (ControlFlow 0 8) 7))) $generated@@209))))
$generated@@210))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
