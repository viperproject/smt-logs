(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@45 () Int)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@U T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) Int)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@89 (T@U) Int)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@102 (T@U T@U) Bool)
(declare-fun $generated@@115 () T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (! (= ($generated@@21 $generated@@23 ($generated@@22 $generated@@24) $generated@@25) ($generated@@21 $generated@@23 $generated@@24 $generated@@25))
 :pattern ( ($generated@@21 $generated@@23 ($generated@@22 $generated@@24) $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@26 $generated@@27 ($generated@@22 $generated@@28) $generated@@29) ($generated@@26 $generated@@27 $generated@@28 $generated@@29))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@22 $generated@@28) $generated@@29))
)))
(assert (= ($generated@@30 $generated@@31) $generated@@2))
(assert (= ($generated@@5 $generated@@33) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@35 $generated@@36))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@37)))
)))
(assert (= ($generated@@5 $generated@@39) 4))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@41 $generated@@43) ($generated@@38 $generated@@39 $generated@@31 ($generated@@40 $generated@@42) $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@31 ($generated@@40 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ) (! ($generated@@32 $generated@@39 $generated@@31 ($generated@@40 $generated@@44))
 :pattern ( ($generated@@32 $generated@@39 $generated@@31 ($generated@@40 $generated@@44)))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (or ($generated@@46 $generated@@53 $generated@@55) (and (< 1 $generated@@45) ($generated@@32 $generated@@39 $generated@@55 ($generated@@40 $generated@@53)))) (and (=> (not ($generated@@47 $generated@@55)) (let (($generated@@56 ($generated@@48 $generated@@55)))
($generated@@46 $generated@@53 $generated@@56))) (= ($generated@@21 $generated@@53 ($generated@@22 $generated@@54) $generated@@55) (ite ($generated@@47 $generated@@55) $generated@@49 (let (($generated@@57 ($generated@@48 $generated@@55)))
(let (($generated@@58 ($generated@@50 $generated@@55)))
($generated@@51 ($generated@@52 $generated@@49 $generated@@58) ($generated@@21 $generated@@53 $generated@@54 $generated@@57))))))))
 :pattern ( ($generated@@21 $generated@@53 ($generated@@22 $generated@@54) $generated@@55))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@32 $generated@@39 ($generated@@62 $generated@@65 $generated@@66) ($generated@@40 $generated@@64))  (and ($generated@@63 $generated@@65 $generated@@64) ($generated@@32 $generated@@39 $generated@@66 ($generated@@40 $generated@@64))))
 :pattern ( ($generated@@32 $generated@@39 ($generated@@62 $generated@@65 $generated@@66) ($generated@@40 $generated@@64)))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@47 $generated@@67) (= ($generated@@30 $generated@@67) $generated@@2))
 :pattern ( ($generated@@47 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 $generated@@69) (= ($generated@@30 $generated@@69) $generated@@3))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@70 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@70 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or (not (= $generated@@76 $generated@@77)) (not true)) (= ($generated@@74 $generated@@75 $generated@@77) ($generated@@74 ($generated@@52 $generated@@75 $generated@@76) $generated@@77)))
 :pattern ( ($generated@@52 $generated@@75 $generated@@76) ($generated@@74 $generated@@75 $generated@@77))
)))
(assert (= ($generated@@5 $generated@@78) 5))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@46 $generated@@79 ($generated@@59 $generated@@39 $generated@@81)) (and (< 1 $generated@@45) ($generated@@32 $generated@@39 $generated@@81 ($generated@@40 $generated@@79)))) (and (=> (not ($generated@@10 ($generated@@59 $generated@@6 ($generated@@9 ($generated@@47 ($generated@@59 $generated@@39 $generated@@81)))))) (let (($generated@@82 ($generated@@59 $generated@@39 ($generated@@48 ($generated@@59 $generated@@39 $generated@@81)))))
($generated@@46 $generated@@79 $generated@@82))) (= ($generated@@21 $generated@@79 ($generated@@22 $generated@@80) ($generated@@59 $generated@@39 $generated@@81)) (ite ($generated@@47 ($generated@@59 $generated@@39 $generated@@81)) $generated@@49 (let (($generated@@83 ($generated@@59 $generated@@39 ($generated@@48 ($generated@@59 $generated@@39 $generated@@81)))))
(let (($generated@@84 ($generated@@59 $generated@@78 ($generated@@50 ($generated@@59 $generated@@39 $generated@@81)))))
($generated@@51 ($generated@@52 $generated@@49 $generated@@84) ($generated@@21 $generated@@79 ($generated@@22 $generated@@80) $generated@@83))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@79 ($generated@@22 $generated@@80) ($generated@@59 $generated@@39 $generated@@81)))
))))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@68 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@62 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@68 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@47 $generated@@88) (= $generated@@88 $generated@@31))
 :pattern ( ($generated@@47 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 ($generated@@52 $generated@@90 $generated@@91)) (+ ($generated@@89 $generated@@90) 1))
 :pattern ( ($generated@@89 ($generated@@52 $generated@@90 $generated@@91)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@92 ($generated@@71 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@38 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@92 ($generated@@71 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@97 ($generated@@40 $generated@@99)) $generated@@1) (= ($generated@@98 ($generated@@40 $generated@@99)) $generated@@4))
 :pattern ( ($generated@@40 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@89 ($generated@@51 $generated@@100 $generated@@101)) (+ ($generated@@89 $generated@@100) ($generated@@89 $generated@@101)))
 :pattern ( ($generated@@89 ($generated@@51 $generated@@100 $generated@@101)))
)))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (or ($generated@@102 $generated@@104 $generated@@106) (and (< 2 $generated@@45) (and ($generated@@32 $generated@@39 $generated@@106 ($generated@@40 ($generated@@40 $generated@@104))) ($generated@@38 $generated@@39 $generated@@106 ($generated@@40 ($generated@@40 $generated@@104)) $generated@@103)))) ($generated@@41 $generated@@103)) ($generated@@38 $generated@@33 ($generated@@26 $generated@@104 $generated@@105 $generated@@106) ($generated@@34 $generated@@104) $generated@@103))
 :pattern ( ($generated@@38 $generated@@33 ($generated@@26 $generated@@104 $generated@@105 $generated@@106) ($generated@@34 $generated@@104) $generated@@103))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@32 $generated@@39 $generated@@108 ($generated@@40 $generated@@107)) (or ($generated@@47 $generated@@108) ($generated@@68 $generated@@108)))
 :pattern ( ($generated@@68 $generated@@108) ($generated@@32 $generated@@39 $generated@@108 ($generated@@40 $generated@@107)))
 :pattern ( ($generated@@47 $generated@@108) ($generated@@32 $generated@@39 $generated@@108 ($generated@@40 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@109 ($generated@@34 $generated@@110)) (forall (($generated@@111 T@U) ) (!  (=> (< 0 ($generated@@74 $generated@@109 $generated@@111)) ($generated@@63 $generated@@111 $generated@@110))
 :pattern ( ($generated@@74 $generated@@109 $generated@@111))
)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@109 ($generated@@34 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@63 ($generated@@71 $generated@@114 $generated@@112) $generated@@113) ($generated@@32 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@63 ($generated@@71 $generated@@114 $generated@@112) $generated@@113))
)))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@102 $generated@@116 $generated@@118) (and (< 2 $generated@@45) ($generated@@32 $generated@@39 $generated@@118 ($generated@@40 ($generated@@40 $generated@@116))))) (and (=> (not ($generated@@47 $generated@@118)) (let (($generated@@119 ($generated@@48 $generated@@118)))
(let (($generated@@120 ($generated@@70 $generated@@39 ($generated@@50 $generated@@118))))
 (and ($generated@@46 $generated@@116 $generated@@120) ($generated@@102 $generated@@116 $generated@@119))))) (= ($generated@@26 $generated@@116 ($generated@@22 $generated@@117) $generated@@118) (ite ($generated@@47 $generated@@118) $generated@@49 (let (($generated@@121 ($generated@@48 $generated@@118)))
(let (($generated@@122 ($generated@@70 $generated@@39 ($generated@@50 $generated@@118))))
($generated@@51 ($generated@@21 $generated@@116 ($generated@@22 $generated@@115) $generated@@122) ($generated@@26 $generated@@116 $generated@@117 $generated@@121))))))))
 :pattern ( ($generated@@26 $generated@@116 ($generated@@22 $generated@@117) $generated@@118))
))))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@35 $generated@@123) (forall (($generated@@124 T@U) ) (!  (and (<= 0 ($generated@@74 $generated@@123 $generated@@124)) (<= ($generated@@74 $generated@@123 $generated@@124) ($generated@@89 $generated@@123)))
 :pattern ( ($generated@@74 $generated@@123 $generated@@124))
)))
 :pattern ( ($generated@@35 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (<= 0 ($generated@@89 $generated@@125))
 :pattern ( ($generated@@89 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@74 $generated@@49 $generated@@126) 0)
 :pattern ( ($generated@@74 $generated@@49 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@30 ($generated@@62 $generated@@127 $generated@@128)) $generated@@3)
 :pattern ( ($generated@@62 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@50 ($generated@@62 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@62 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@48 ($generated@@62 $generated@@131 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@62 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@74 ($generated@@52 $generated@@133 $generated@@134) $generated@@134) (+ ($generated@@74 $generated@@133 $generated@@134) 1))
 :pattern ( ($generated@@52 $generated@@133 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (or ($generated@@46 $generated@@136 $generated@@138) (and (< 1 $generated@@45) (and ($generated@@32 $generated@@39 $generated@@138 ($generated@@40 $generated@@136)) ($generated@@38 $generated@@39 $generated@@138 ($generated@@40 $generated@@136) $generated@@135)))) ($generated@@41 $generated@@135)) ($generated@@38 $generated@@33 ($generated@@21 $generated@@136 $generated@@137 $generated@@138) ($generated@@34 $generated@@136) $generated@@135))
 :pattern ( ($generated@@38 $generated@@33 ($generated@@21 $generated@@136 $generated@@137 $generated@@138) ($generated@@34 $generated@@136) $generated@@135))
))))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@34 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@34 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@97 ($generated@@34 $generated@@141)) $generated)
 :pattern ( ($generated@@34 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@40 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@40 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@70 $generated@@145 ($generated@@71 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@71 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (< ($generated@@146 $generated@@148) ($generated@@147 ($generated@@62 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@62 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (< ($generated@@147 $generated@@151) ($generated@@147 ($generated@@62 $generated@@150 $generated@@151)))
 :pattern ( ($generated@@62 $generated@@150 $generated@@151))
)))
(assert  (=> (<= 1 $generated@@45) (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (or ($generated@@46 $generated@@152 $generated@@154) (and (< 1 $generated@@45) ($generated@@32 $generated@@39 $generated@@154 ($generated@@40 $generated@@152)))) ($generated@@32 $generated@@33 ($generated@@21 $generated@@152 $generated@@153 $generated@@154) ($generated@@34 $generated@@152)))
 :pattern ( ($generated@@21 $generated@@152 $generated@@153 $generated@@154))
))))
(assert (forall (($generated@@155 T@U) ) (!  (and (= (= ($generated@@89 $generated@@155) 0) (= $generated@@155 $generated@@49)) (=> (or (not (= ($generated@@89 $generated@@155) 0)) (not true)) (exists (($generated@@156 T@U) ) (! (< 0 ($generated@@74 $generated@@155 $generated@@156))
 :pattern ( ($generated@@74 $generated@@155 $generated@@156))
))))
 :pattern ( ($generated@@89 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@74 ($generated@@51 $generated@@157 $generated@@158) $generated@@159) (+ ($generated@@74 $generated@@157 $generated@@159) ($generated@@74 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@74 ($generated@@51 $generated@@157 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@41 $generated@@162) (and ($generated@@68 $generated@@160) ($generated@@38 $generated@@39 $generated@@160 ($generated@@40 $generated@@161) $generated@@162))) ($generated@@92 ($generated@@50 $generated@@160) $generated@@161 $generated@@162))
 :pattern ( ($generated@@92 ($generated@@50 $generated@@160) $generated@@161 $generated@@162))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@163 $generated@@173 $generated@@174 $generated@@175 ($generated@@169 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@178 $generated@@179) $generated@@176)
 :weight 0
)) (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@163 $generated@@180 $generated@@181 $generated@@182 ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@163 $generated@@189 $generated@@190 $generated@@191 ($generated@@169 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@163 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (= ($generated@@5 $generated@@164) 6)) (= ($generated@@5 $generated@@165) 7)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@167 $generated@@198 $generated@@199 ($generated@@170 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@200) $generated@@202) $generated@@200)
 :weight 0
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@207 $generated@@208) (= ($generated@@167 $generated@@203 $generated@@204 ($generated@@170 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@205) $generated@@208) ($generated@@167 $generated@@203 $generated@@204 $generated@@206 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@5 ($generated@@168 $generated@@209 $generated@@210)) 8))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@171 ($generated@@168 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@168 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@172 ($generated@@168 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@168 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@10 ($generated@@163 $generated@@164 $generated@@165 $generated@@6 ($generated@@166 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (or (not (= $generated@@219 $generated@@215)) (not true)) ($generated@@10 ($generated@@70 $generated@@6 ($generated@@167 $generated@@165 $generated@@78 ($generated@@167 $generated@@164 ($generated@@168 $generated@@165 $generated@@78) $generated@@216 $generated@@219) $generated@@217)))) $generated@@218))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165 $generated@@6 ($generated@@166 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (or ($generated@@102 $generated@@221 $generated@@223) (and (< 2 $generated@@45) ($generated@@32 $generated@@39 $generated@@223 ($generated@@40 ($generated@@40 $generated@@221))))) ($generated@@32 $generated@@33 ($generated@@26 $generated@@221 $generated@@222 $generated@@223) ($generated@@34 $generated@@221)))
 :pattern ( ($generated@@26 $generated@@221 $generated@@222 $generated@@223))
))))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@146 ($generated@@71 $generated@@39 $generated@@224)) ($generated@@147 $generated@@224))
 :pattern ( ($generated@@146 ($generated@@71 $generated@@39 $generated@@224)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> ($generated@@63 $generated@@225 ($generated@@34 $generated@@226)) (and (= ($generated@@71 $generated@@33 ($generated@@70 $generated@@33 $generated@@225)) $generated@@225) ($generated@@32 $generated@@33 ($generated@@70 $generated@@33 $generated@@225) ($generated@@34 $generated@@226))))
 :pattern ( ($generated@@63 $generated@@225 ($generated@@34 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> ($generated@@63 $generated@@228 ($generated@@40 $generated@@227)) (and (= ($generated@@71 $generated@@39 ($generated@@70 $generated@@39 $generated@@228)) $generated@@228) ($generated@@32 $generated@@39 ($generated@@70 $generated@@39 $generated@@228) ($generated@@40 $generated@@227))))
 :pattern ( ($generated@@63 $generated@@228 ($generated@@40 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and ($generated@@41 $generated@@231) (and ($generated@@68 $generated@@229) ($generated@@38 $generated@@39 $generated@@229 ($generated@@40 $generated@@230) $generated@@231))) ($generated@@38 $generated@@39 ($generated@@48 $generated@@229) ($generated@@40 $generated@@230) $generated@@231))
 :pattern ( ($generated@@38 $generated@@39 ($generated@@48 $generated@@229) ($generated@@40 $generated@@230) $generated@@231))
)))
(assert (= $generated@@31 ($generated@@59 $generated@@39 $generated@@31)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= ($generated@@62 ($generated@@59 $generated@@78 $generated@@232) ($generated@@59 $generated@@39 $generated@@233)) ($generated@@59 $generated@@39 ($generated@@62 $generated@@232 $generated@@233)))
 :pattern ( ($generated@@62 ($generated@@59 $generated@@78 $generated@@232) ($generated@@59 $generated@@39 $generated@@233)))
)))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (or ($generated@@102 $generated@@234 ($generated@@59 $generated@@39 $generated@@236)) (and (< 2 $generated@@45) ($generated@@32 $generated@@39 $generated@@236 ($generated@@40 ($generated@@40 $generated@@234))))) (and (=> (not ($generated@@10 ($generated@@59 $generated@@6 ($generated@@9 ($generated@@47 ($generated@@59 $generated@@39 $generated@@236)))))) (let (($generated@@237 ($generated@@59 $generated@@39 ($generated@@48 ($generated@@59 $generated@@39 $generated@@236)))))
(let (($generated@@238 ($generated@@59 $generated@@39 ($generated@@70 $generated@@39 ($generated@@50 ($generated@@59 $generated@@39 $generated@@236))))))
 (and ($generated@@46 $generated@@234 $generated@@238) ($generated@@102 $generated@@234 $generated@@237))))) (= ($generated@@26 $generated@@234 ($generated@@22 $generated@@235) ($generated@@59 $generated@@39 $generated@@236)) (ite ($generated@@47 ($generated@@59 $generated@@39 $generated@@236)) $generated@@49 (let (($generated@@239 ($generated@@59 $generated@@39 ($generated@@48 ($generated@@59 $generated@@39 $generated@@236)))))
(let (($generated@@240 ($generated@@59 $generated@@39 ($generated@@70 $generated@@39 ($generated@@50 ($generated@@59 $generated@@39 $generated@@236))))))
($generated@@51 ($generated@@21 $generated@@234 ($generated@@22 $generated@@115) $generated@@240) ($generated@@26 $generated@@234 ($generated@@22 $generated@@235) $generated@@239))))))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@234 ($generated@@22 $generated@@235) ($generated@@59 $generated@@39 $generated@@236)))
))))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@T) ) (! (= ($generated@@71 $generated@@242 ($generated@@59 $generated@@242 $generated@@241)) ($generated@@59 $generated@@78 ($generated@@71 $generated@@242 $generated@@241)))
 :pattern ( ($generated@@71 $generated@@242 ($generated@@59 $generated@@242 $generated@@241)))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> (< 0 ($generated@@74 $generated@@243 $generated@@245)) (< 0 ($generated@@74 ($generated@@52 $generated@@243 $generated@@244) $generated@@245)))
 :pattern ( ($generated@@52 $generated@@243 $generated@@244) ($generated@@74 $generated@@243 $generated@@245))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (! (= (< 0 ($generated@@74 ($generated@@52 $generated@@246 $generated@@247) $generated@@248))  (or (= $generated@@248 $generated@@247) (< 0 ($generated@@74 $generated@@246 $generated@@248))))
 :pattern ( ($generated@@74 ($generated@@52 $generated@@246 $generated@@247) $generated@@248))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= ($generated@@38 $generated@@33 $generated@@249 ($generated@@34 $generated@@250) $generated@@251) (forall (($generated@@252 T@U) ) (!  (=> (< 0 ($generated@@74 $generated@@249 $generated@@252)) ($generated@@92 $generated@@252 $generated@@250 $generated@@251))
 :pattern ( ($generated@@74 $generated@@249 $generated@@252))
)))
 :pattern ( ($generated@@38 $generated@@33 $generated@@249 ($generated@@34 $generated@@250) $generated@@251))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> ($generated@@41 $generated@@256) (= ($generated@@38 $generated@@39 ($generated@@62 $generated@@254 $generated@@255) ($generated@@40 $generated@@253) $generated@@256)  (and ($generated@@92 $generated@@254 $generated@@253 $generated@@256) ($generated@@38 $generated@@39 $generated@@255 ($generated@@40 $generated@@253) $generated@@256))))
 :pattern ( ($generated@@38 $generated@@39 ($generated@@62 $generated@@254 $generated@@255) ($generated@@40 $generated@@253) $generated@@256))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@269 true))
(let (($generated@@270  (=> (= $generated@@257 ($generated@@62 ($generated@@71 $generated@@39 $generated@@258) $generated@@259)) (=> (and (and ($generated@@32 $generated@@39 $generated@@258 ($generated@@40 $generated@@260)) ($generated@@32 $generated@@39 $generated@@259 ($generated@@40 ($generated@@40 $generated@@260)))) (and (= $generated@@261 $generated@@259) ($generated@@32 $generated@@39 $generated@@261 ($generated@@40 ($generated@@40 $generated@@260))))) (=> (and (and (and (= $generated@@262 $generated@@261) (= $generated@@263 $generated@@258)) (and ($generated@@32 $generated@@39 $generated@@263 ($generated@@40 $generated@@260)) (= $generated@@264 $generated@@263))) (and (and ($generated@@38 $generated@@39 $generated@@264 ($generated@@40 $generated@@260) $generated@@265) ($generated@@46 $generated@@260 $generated@@264)) (and ($generated@@38 $generated@@39 $generated@@262 ($generated@@40 ($generated@@40 $generated@@260)) $generated@@265) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@147 $generated@@262) ($generated@@147 $generated@@257)))))))
(let (($generated@@271  (=> (or (not (= $generated@@257 $generated@@31)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@270) (=> (= (ControlFlow 0 6) 5) $generated@@269)))))
(let (($generated@@272 true))
(let (($generated@@273 true))
(let (($generated@@274  (=> (= $generated@@266 ($generated@@166 $generated@@267 $generated@@265 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@273) (=> (= (ControlFlow 0 7) 2) $generated@@272)) (=> (= (ControlFlow 0 7) 6) $generated@@271)))))
(let (($generated@@275  (=> (and (and (and ($generated@@41 $generated@@265) ($generated@@268 $generated@@265)) ($generated@@32 $generated@@39 $generated@@257 ($generated@@40 ($generated@@40 $generated@@260)))) (and (= 2 $generated@@45) (= (ControlFlow 0 8) 7))) $generated@@274)))
$generated@@275))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
