(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@69 (Int) Int)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U Int) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (Int) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@154 (T@U) Int)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@3) 0))
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@25 $generated@@31)) $generated@@0))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@27)) (not true)) (= ($generated@@28 $generated@@34) ($generated@@26 $generated@@33))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@32 $generated@@34)) $generated@@0))
 :pattern ( ($generated@@32 $generated@@34) ($generated@@26 $generated@@33))
)))
(assert (= ($generated@@7 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@35 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@7 $generated@@43) 4)) (= ($generated@@7 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@7 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@67 ($generated@@26 $generated@@66) $generated@@68)  (or (= $generated@@67 $generated@@27) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@68 $generated@@67) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@67 ($generated@@26 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@69 $generated@@70) $generated@@70)
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@41 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@41 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 Int) ) (! (= ($generated@@23 ($generated@@77 $generated@@78 $generated@@79)) (+ ($generated@@23 $generated@@78) 1))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@81 ($generated@@37 $generated@@80))  (and ($generated@@29 $generated@@36 $generated@@81 ($generated@@26 $generated@@80)) (or (not (= $generated@@81 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@81 ($generated@@37 $generated@@80)))
 :pattern ( ($generated@@29 $generated@@36 $generated@@81 ($generated@@26 $generated@@80)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@74 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@35 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@74 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 Int) ) (!  (=> (and (and (and ($generated@@88 $generated@@90) (and (or (not (= $generated@@91 $generated@@27)) (not true)) (= ($generated@@28 $generated@@91) ($generated@@26 $generated@@89)))) (and (and (<= 0 $generated@@92) (< $generated@@92 ($generated@@25 $generated@@91))) (and (<= 0 $generated@@93) (< $generated@@93 ($generated@@32 $generated@@91))))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@90 $generated@@91) $generated@@3)))) ($generated@@82 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@90 $generated@@91) ($generated@@77 ($generated@@87 $generated@@92) $generated@@93)) $generated@@89 $generated@@90))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@90 $generated@@91) ($generated@@77 ($generated@@87 $generated@@92) $generated@@93)) ($generated@@26 $generated@@89))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@95)) $generated@@4) (= ($generated@@94 ($generated@@26 $generated@@95)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (!  (and (= ($generated@@24 ($generated@@37 $generated@@96)) $generated@@5) (= ($generated@@94 ($generated@@37 $generated@@96)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@96))
)))
(assert  (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@97 $generated@@100 $generated@@101 $generated@@102 ($generated@@99 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@97 $generated@@107 $generated@@108 $generated@@109 ($generated@@99 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@97 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@97 $generated@@116 $generated@@117 $generated@@118 ($generated@@99 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@97 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@12 ($generated@@97 $generated@@36 $generated@@43 $generated@@8 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@126 $generated@@129) $generated@@127)))) (= $generated@@129 $generated@@128)))
 :pattern ( ($generated@@97 $generated@@36 $generated@@43 $generated@@8 ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@132 ($generated@@26 $generated@@131))  (or (= $generated@@132 $generated@@27) (= ($generated@@28 $generated@@132) ($generated@@26 $generated@@131))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@132 ($generated@@26 $generated@@131)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Int) ($generated@@138 Int) ) (!  (=> (and (and ($generated@@88 $generated@@135) (and (or (not (= $generated@@136 $generated@@27)) (not true)) (= ($generated@@28 $generated@@136) ($generated@@26 $generated@@134)))) (and (and (<= 0 $generated@@137) (< $generated@@137 ($generated@@25 $generated@@136))) (and (<= 0 $generated@@138) (< $generated@@138 ($generated@@32 $generated@@136))))) ($generated@@133 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@135 $generated@@136) ($generated@@77 ($generated@@87 $generated@@137) $generated@@138)) $generated@@134))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@135 $generated@@136) ($generated@@77 ($generated@@87 $generated@@137) $generated@@138)) ($generated@@26 $generated@@134))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@133 $generated@@139 $generated@@0) (and (= ($generated@@74 $generated@@9 ($generated@@41 $generated@@9 $generated@@139)) $generated@@139) ($generated@@29 $generated@@9 ($generated@@41 $generated@@9 $generated@@139) $generated@@0)))
 :pattern ( ($generated@@133 $generated@@139 $generated@@0))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@133 $generated@@140 $generated) (and (= ($generated@@74 $generated@@8 ($generated@@41 $generated@@8 $generated@@140)) $generated@@140) ($generated@@29 $generated@@8 ($generated@@41 $generated@@8 $generated@@140) $generated)))
 :pattern ( ($generated@@133 $generated@@140 $generated))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@133 ($generated@@74 $generated@@143 $generated@@141) $generated@@142) ($generated@@29 $generated@@143 $generated@@141 $generated@@142))
 :pattern ( ($generated@@133 ($generated@@74 $generated@@143 $generated@@141) $generated@@142))
)))
(assert  (=> (<= 0 $generated@@144) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (or ($generated@@146 $generated@@147 $generated@@148) (and (< 0 $generated@@144) (and ($generated@@88 $generated@@147) ($generated@@29 $generated@@36 $generated@@148 ($generated@@37 $generated))))) (= ($generated@@145 $generated@@147 $generated@@148) (exists (($generated@@149 Int) ($generated@@150 Int) ) (!  (and (and (and (<= ($generated@@69 0) $generated@@149) (< $generated@@149 ($generated@@25 $generated@@148))) (and (<= ($generated@@69 0) $generated@@150) (< $generated@@150 ($generated@@32 $generated@@148)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@147 $generated@@148) ($generated@@77 ($generated@@87 $generated@@149) $generated@@150)))))
 :pattern ( ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@147 $generated@@148) ($generated@@77 ($generated@@87 $generated@@149) $generated@@150))))
))))
 :pattern ( ($generated@@145 $generated@@147 $generated@@148) ($generated@@88 $generated@@147))
))))
(assert (forall (($generated@@151 T@U) ) (! (<= 0 ($generated@@25 $generated@@151))
 :pattern ( ($generated@@25 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (! (<= 0 ($generated@@32 $generated@@152))
 :pattern ( ($generated@@32 $generated@@152))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@23 ($generated@@87 $generated@@153)) 1)
 :pattern ( ($generated@@87 $generated@@153))
)))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@154 ($generated@@87 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@87 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@26 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@26 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@37 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@37 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@41 $generated@@161 ($generated@@74 $generated@@161 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@74 $generated@@161 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and (and ($generated@@88 $generated@@163) (and (or (not (= $generated@@164 $generated@@27)) (not true)) (= ($generated@@28 $generated@@164) ($generated@@26 $generated@@162)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@163 $generated@@164) $generated@@3)))) ($generated@@35 $generated@@9 ($generated@@13 ($generated@@25 $generated@@164)) $generated@@0 $generated@@163))
 :pattern ( ($generated@@25 $generated@@164) ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@163 $generated@@164) $generated@@3)) ($generated@@26 $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and ($generated@@88 $generated@@166) (and (or (not (= $generated@@167 $generated@@27)) (not true)) (= ($generated@@28 $generated@@167) ($generated@@26 $generated@@165)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@166 $generated@@167) $generated@@3)))) ($generated@@35 $generated@@9 ($generated@@13 ($generated@@32 $generated@@167)) $generated@@0 $generated@@166))
 :pattern ( ($generated@@32 $generated@@167) ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@166 $generated@@167) $generated@@3)) ($generated@@26 $generated@@165))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ) (!  (and (= ($generated@@168 ($generated@@77 $generated@@170 $generated@@171)) $generated@@170) (= ($generated@@169 ($generated@@77 $generated@@170 $generated@@171)) $generated@@171))
 :pattern ( ($generated@@77 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@133 $generated@@173 ($generated@@26 $generated@@172)) (and (= ($generated@@74 $generated@@36 ($generated@@41 $generated@@36 $generated@@173)) $generated@@173) ($generated@@29 $generated@@36 ($generated@@41 $generated@@36 $generated@@173) ($generated@@26 $generated@@172))))
 :pattern ( ($generated@@133 $generated@@173 ($generated@@26 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@133 $generated@@175 ($generated@@37 $generated@@174)) (and (= ($generated@@74 $generated@@36 ($generated@@41 $generated@@36 $generated@@175)) $generated@@175) ($generated@@29 $generated@@36 ($generated@@41 $generated@@36 $generated@@175) ($generated@@37 $generated@@174))))
 :pattern ( ($generated@@133 $generated@@175 ($generated@@37 $generated@@174)))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@74 $generated@@9 ($generated@@13 ($generated@@69 $generated@@176))) ($generated@@71 $generated@@44 ($generated@@74 $generated@@9 ($generated@@13 $generated@@176))))
 :pattern ( ($generated@@74 $generated@@9 ($generated@@13 ($generated@@69 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@74 $generated@@178 ($generated@@71 $generated@@178 $generated@@177)) ($generated@@71 $generated@@44 ($generated@@74 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@74 $generated@@178 ($generated@@71 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@35 $generated@@9 $generated@@180 $generated@@0 $generated@@179)
 :pattern ( ($generated@@35 $generated@@9 $generated@@180 $generated@@0 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! ($generated@@35 $generated@@8 $generated@@182 $generated $generated@@181)
 :pattern ( ($generated@@35 $generated@@8 $generated@@182 $generated $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! ($generated@@29 $generated@@9 $generated@@183 $generated@@0)
 :pattern ( ($generated@@29 $generated@@9 $generated@@183 $generated@@0))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@29 $generated@@8 $generated@@184 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@193  (=> (= ($generated@@145 $generated@@185 $generated@@186) (exists (($generated@@194 Int) ($generated@@195 Int) ) (!  (and (and (and (<= ($generated@@69 0) $generated@@194) (< $generated@@194 ($generated@@25 $generated@@186))) (and (<= ($generated@@69 0) $generated@@195) (< $generated@@195 ($generated@@32 $generated@@186)))) ($generated@@12 ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@185 $generated@@186) ($generated@@77 ($generated@@87 $generated@@194) $generated@@195)))))
 :pattern ( ($generated@@41 $generated@@8 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@36 ($generated@@45 $generated@@43 $generated@@44) $generated@@185 $generated@@186) ($generated@@77 ($generated@@87 $generated@@194) $generated@@195))))
))) (=> (and ($generated@@29 $generated@@8 ($generated@@11 ($generated@@145 $generated@@185 $generated@@186)) $generated) (= (ControlFlow 0 4) (- 0 3))) $generated@@187))))
(let (($generated@@196  (=> (not (and (and (<= ($generated@@69 0) $generated@@188) (< $generated@@188 ($generated@@25 $generated@@186))) (and (<= ($generated@@69 0) $generated@@189) (< $generated@@189 ($generated@@32 $generated@@186))))) (=> (and (= $generated@@187 true) (= (ControlFlow 0 9) 4)) $generated@@193))))
(let (($generated@@197  (=> (and (and (<= ($generated@@69 0) $generated@@188) (< $generated@@188 ($generated@@25 $generated@@186))) (and (<= ($generated@@69 0) $generated@@189) (< $generated@@189 ($generated@@32 $generated@@186)))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (not (= $generated@@186 $generated@@27)) (not true))) (=> (or (not (= $generated@@186 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (and (<= 0 $generated@@188) (< $generated@@188 ($generated@@25 $generated@@186)))) (=> (and (<= 0 $generated@@188) (< $generated@@188 ($generated@@25 $generated@@186))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@189) (< $generated@@189 ($generated@@32 $generated@@186)))) (=> (and (<= 0 $generated@@189) (< $generated@@189 ($generated@@32 $generated@@186))) (=> (= $generated@@190 ($generated@@12 ($generated@@97 $generated@@36 $generated@@43 $generated@@8 $generated@@191 $generated@@186 ($generated@@77 ($generated@@87 $generated@@188) $generated@@189)))) (=> (and (= $generated@@187 $generated@@190) (= (ControlFlow 0 5) 4)) $generated@@193)))))))))))
(let (($generated@@198  (=> (< $generated@@189 ($generated@@69 0)) (and (=> (= (ControlFlow 0 13) 5) $generated@@197) (=> (= (ControlFlow 0 13) 9) $generated@@196)))))
(let (($generated@@199  (=> (<= ($generated@@69 0) $generated@@189) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (not (= $generated@@186 $generated@@27)) (not true))) (=> (or (not (= $generated@@186 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 11) 5) $generated@@197) (=> (= (ControlFlow 0 11) 9) $generated@@196)))))))
(let (($generated@@200  (=> (and (<= ($generated@@69 0) $generated@@188) (< $generated@@188 ($generated@@25 $generated@@186))) (and (=> (= (ControlFlow 0 14) 11) $generated@@199) (=> (= (ControlFlow 0 14) 13) $generated@@198)))))
(let (($generated@@201  (=> (not (and (<= ($generated@@69 0) $generated@@188) (< $generated@@188 ($generated@@25 $generated@@186)))) (and (=> (= (ControlFlow 0 10) 5) $generated@@197) (=> (= (ControlFlow 0 10) 9) $generated@@196)))))
(let (($generated@@202  (=> (< $generated@@188 ($generated@@69 0)) (and (=> (= (ControlFlow 0 17) 14) $generated@@200) (=> (= (ControlFlow 0 17) 10) $generated@@201)))))
(let (($generated@@203  (=> (<= ($generated@@69 0) $generated@@188) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (not (= $generated@@186 $generated@@27)) (not true))) (=> (or (not (= $generated@@186 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 15) 14) $generated@@200) (=> (= (ControlFlow 0 15) 10) $generated@@201)))))))
(let (($generated@@204  (and (=> (= (ControlFlow 0 18) 15) $generated@@203) (=> (= (ControlFlow 0 18) 17) $generated@@202))))
(let (($generated@@205 true))
(let (($generated@@206 true))
(let (($generated@@207  (=> (= $generated@@191 ($generated@@98 $generated@@27 $generated@@185 $generated@@3 $generated@@186)) (and (and (=> (= (ControlFlow 0 19) 1) $generated@@206) (=> (= (ControlFlow 0 19) 18) $generated@@204)) (=> (= (ControlFlow 0 19) 2) $generated@@205)))))
(let (($generated@@208  (=> (and (and (and ($generated@@88 $generated@@185) ($generated@@192 $generated@@185)) ($generated@@29 $generated@@36 $generated@@186 ($generated@@37 $generated))) (and (= 0 $generated@@144) (= (ControlFlow 0 20) 19))) $generated@@207)))
$generated@@208)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
