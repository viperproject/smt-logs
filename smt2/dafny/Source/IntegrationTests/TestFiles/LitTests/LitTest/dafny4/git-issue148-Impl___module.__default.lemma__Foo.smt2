(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (Int) Int)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@58 (T@U T@U Int) Int)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@63 () Int)
(declare-fun $generated@@64 (T@U Int) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@151 (T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@24 $generated@@25 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 Int) ) (! (= ($generated@@27 $generated@@28) $generated@@28)
 :pattern ( ($generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@T) ) (! (= ($generated@@29 $generated@@31 $generated@@30) $generated@@30)
 :pattern ( ($generated@@29 $generated@@31 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@T) ) (! (= ($generated@@33 $generated@@35 ($generated@@32 $generated@@35 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@32 $generated@@35 $generated@@34))
)))
(assert (= ($generated@@8 $generated@@40) 3))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@45) ($generated@@39 $generated@@40 $generated@@46 ($generated@@41 $generated@@44))) ($generated@@42 ($generated@@43 $generated@@44 $generated@@37 $generated@@46) $generated@@25)) (= ($generated@@36 $generated@@44 $generated@@37 $generated@@46) ($generated@@36 $generated@@44 $generated@@45 $generated@@46)))
 :pattern ( ($generated@@36 $generated@@44 $generated@@37 $generated@@46) ($generated@@38 $generated@@45))
 :pattern ( ($generated@@36 $generated@@44 $generated@@45 $generated@@46))
)))
(assert ($generated@@38 $generated@@37))
(assert (forall (($generated@@49 T@U) ) (!  (and (= ($generated@@47 ($generated@@41 $generated@@49)) $generated@@0) (= ($generated@@48 ($generated@@41 $generated@@49)) $generated@@4))
 :pattern ( ($generated@@41 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (!  (and (= ($generated@@47 ($generated@@50 $generated@@51)) $generated@@1) (= ($generated@@48 ($generated@@50 $generated@@51)) $generated@@5))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (!  (and (= ($generated@@47 ($generated@@52 $generated@@53)) $generated@@2) (= ($generated@@48 ($generated@@52 $generated@@53)) $generated@@6))
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (= ($generated@@8 $generated@@56) 4))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@54 $generated@@57 $generated@@55) (and (= ($generated@@33 $generated@@56 ($generated@@32 $generated@@56 $generated@@57)) $generated@@57) ($generated@@39 $generated@@56 ($generated@@32 $generated@@56 $generated@@57) $generated@@55)))
 :pattern ( ($generated@@54 $generated@@57 $generated@@55))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 Int) ) (! (= ($generated@@58 ($generated@@59 $generated@@60) $generated@@61 $generated@@62) ($generated@@58 $generated@@60 $generated@@61 $generated@@62))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@60) $generated@@61 $generated@@62))
)))
(assert  (=> (<= 0 $generated@@63) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (or ($generated@@64 ($generated@@29 $generated@@40 $generated@@66) ($generated@@27 $generated@@67)) (and (< 0 $generated@@63) (and ($generated@@39 $generated@@40 $generated@@66 ($generated@@52 $generated@@55)) (<= ($generated@@27 0) $generated@@67)))) (and (=> (or (not (= ($generated@@27 $generated@@67) ($generated@@27 0))) (not true)) ($generated@@64 ($generated@@29 $generated@@40 $generated@@66) ($generated@@27 (- $generated@@67 1)))) (= ($generated@@58 ($generated@@59 $generated@@65) ($generated@@29 $generated@@40 $generated@@66) ($generated@@27 $generated@@67)) (ite (= ($generated@@27 $generated@@67) ($generated@@27 0)) $generated@@67 ($generated@@58 ($generated@@59 $generated@@65) ($generated@@29 $generated@@40 $generated@@66) ($generated@@27 (- $generated@@67 1)))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@59 $generated@@65) ($generated@@29 $generated@@40 $generated@@66) ($generated@@27 $generated@@67)))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@38 $generated@@69) ($generated@@39 $generated@@40 $generated@@70 ($generated@@41 $generated@@68))) (= ($generated@@42 ($generated@@43 $generated@@68 $generated@@37 $generated@@70) $generated@@25) ($generated@@42 ($generated@@43 $generated@@68 $generated@@69 $generated@@70) $generated@@25)))
 :pattern ( ($generated@@43 $generated@@68 $generated@@37 $generated@@70) ($generated@@38 $generated@@69))
 :pattern ( ($generated@@43 $generated@@68 $generated@@69 $generated@@70))
)))
(assert  (=> (<= 0 $generated@@63) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (or ($generated@@64 $generated@@72 $generated@@73) (and (< 0 $generated@@63) (and ($generated@@39 $generated@@40 $generated@@72 ($generated@@52 $generated@@55)) (<= ($generated@@27 0) $generated@@73)))) (<= ($generated@@27 0) ($generated@@58 $generated@@71 $generated@@72 $generated@@73)))
 :pattern ( ($generated@@58 $generated@@71 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@42 $generated@@74 $generated@@75) (= $generated@@74 $generated@@75))
 :pattern ( ($generated@@42 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@54 ($generated@@33 $generated@@78 $generated@@76) $generated@@77) ($generated@@39 $generated@@78 $generated@@76 $generated@@77))
 :pattern ( ($generated@@54 ($generated@@33 $generated@@78 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 ($generated@@41 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@41 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@81 ($generated@@50 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@50 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 ($generated@@52 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@52 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@32 $generated@@86 ($generated@@33 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@33 $generated@@86 $generated@@85))
)))
(assert  (=> (<= 0 $generated@@63) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (or ($generated@@64 $generated@@88 $generated@@89) (and (< 0 $generated@@63) (and ($generated@@39 $generated@@40 $generated@@88 ($generated@@52 $generated@@55)) (<= ($generated@@27 0) $generated@@89)))) (and (=> (or (not (= $generated@@89 ($generated@@27 0))) (not true)) ($generated@@64 $generated@@88 (- $generated@@89 1))) (= ($generated@@58 ($generated@@59 $generated@@87) $generated@@88 $generated@@89) (ite (= $generated@@89 ($generated@@27 0)) $generated@@89 ($generated@@58 $generated@@87 $generated@@88 (- $generated@@89 1))))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@87) $generated@@88 $generated@@89))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@90 $generated@@101 $generated@@102 $generated@@103 ($generated@@97 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@90 $generated@@108 $generated@@109 $generated@@110 ($generated@@97 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@90 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@90 $generated@@117 $generated@@118 $generated@@119 ($generated@@97 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))) (= ($generated@@8 $generated@@91) 5)) (= ($generated@@8 $generated@@92) 6)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@94 $generated@@126 $generated@@127 ($generated@@98 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@94 $generated@@131 $generated@@132 ($generated@@98 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@94 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (= ($generated@@8 $generated@@95) 7)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@8 ($generated@@96 $generated@@137 $generated@@138)) 8))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@13 ($generated@@90 $generated@@91 $generated@@92 $generated@@9 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@94 $generated@@92 $generated@@95 ($generated@@94 $generated@@91 ($generated@@96 $generated@@92 $generated@@95) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92 $generated@@9 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@150 ($generated@@52 $generated@@149))  (and ($generated@@39 $generated@@40 $generated@@150 ($generated@@50 $generated@@149)) ($generated@@36 $generated@@149 $generated@@37 $generated@@150)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@150 ($generated@@52 $generated@@149)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@152 ($generated@@41 $generated@@153)) (forall (($generated@@154 T@U) ) (!  (=> (and ($generated@@38 $generated@@154) ($generated@@36 $generated@@153 $generated@@154 $generated@@152)) ($generated@@54 ($generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@153))
 :pattern ( ($generated@@151 $generated@@153 $generated@@154 $generated@@152))
)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@152 ($generated@@41 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@54 $generated@@156 ($generated@@41 $generated@@155)) (and (= ($generated@@33 $generated@@40 ($generated@@32 $generated@@40 $generated@@156)) $generated@@156) ($generated@@39 $generated@@40 ($generated@@32 $generated@@40 $generated@@156) ($generated@@41 $generated@@155))))
 :pattern ( ($generated@@54 $generated@@156 ($generated@@41 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@54 $generated@@158 ($generated@@50 $generated@@157)) (and (= ($generated@@33 $generated@@40 ($generated@@32 $generated@@40 $generated@@158)) $generated@@158) ($generated@@39 $generated@@40 ($generated@@32 $generated@@40 $generated@@158) ($generated@@50 $generated@@157))))
 :pattern ( ($generated@@54 $generated@@158 ($generated@@50 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@54 $generated@@160 ($generated@@52 $generated@@159)) (and (= ($generated@@33 $generated@@40 ($generated@@32 $generated@@40 $generated@@160)) $generated@@160) ($generated@@39 $generated@@40 ($generated@@32 $generated@@40 $generated@@160) ($generated@@52 $generated@@159))))
 :pattern ( ($generated@@54 $generated@@160 ($generated@@52 $generated@@159)))
)))
(assert (= ($generated@@47 $generated@@55) $generated@@3))
(assert (= ($generated@@48 $generated@@55) $generated@@7))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@42 $generated@@161 $generated@@162) (forall (($generated@@163 T@U) ) (! (= ($generated@@24 $generated@@161 $generated@@163) ($generated@@24 $generated@@162 $generated@@163))
 :pattern ( ($generated@@24 $generated@@161 $generated@@163))
 :pattern ( ($generated@@24 $generated@@162 $generated@@163))
)))
 :pattern ( ($generated@@42 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@164 ($generated@@41 $generated@@165)) (forall (($generated@@167 T@U) ) (!  (=> ($generated@@54 $generated@@167 $generated@@165) ($generated@@54 $generated@@167 $generated@@166))
 :pattern ( ($generated@@54 $generated@@167 $generated@@165))
 :pattern ( ($generated@@54 $generated@@167 $generated@@166))
))) ($generated@@39 $generated@@40 $generated@@164 ($generated@@41 $generated@@166)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@164 ($generated@@41 $generated@@165)) ($generated@@39 $generated@@40 $generated@@164 ($generated@@41 $generated@@166)))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@33 $generated@@10 ($generated@@14 ($generated@@27 $generated@@168))) ($generated@@29 $generated@@95 ($generated@@33 $generated@@10 ($generated@@14 $generated@@168))))
 :pattern ( ($generated@@33 $generated@@10 ($generated@@14 ($generated@@27 $generated@@168))))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@33 $generated@@170 ($generated@@29 $generated@@170 $generated@@169)) ($generated@@29 $generated@@95 ($generated@@33 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@33 $generated@@170 ($generated@@29 $generated@@170 $generated@@169)))
)))
(assert  (=> (<= 0 $generated@@63) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Int) ) (!  (=> (or ($generated@@64 $generated@@172 ($generated@@27 $generated@@173)) (and (< 0 $generated@@63) (and ($generated@@39 $generated@@40 $generated@@172 ($generated@@52 $generated@@55)) (<= ($generated@@27 0) $generated@@173)))) (and (=> (or (not (= ($generated@@27 $generated@@173) ($generated@@27 0))) (not true)) ($generated@@64 $generated@@172 ($generated@@27 (- $generated@@173 1)))) (= ($generated@@58 ($generated@@59 $generated@@171) $generated@@172 ($generated@@27 $generated@@173)) (ite (= ($generated@@27 $generated@@173) ($generated@@27 0)) $generated@@173 ($generated@@58 ($generated@@59 $generated@@171) $generated@@172 ($generated@@27 (- $generated@@173 1)))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@59 $generated@@171) $generated@@172 ($generated@@27 $generated@@173)))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@175 ($generated@@50 $generated@@174))  (and ($generated@@39 $generated@@40 $generated@@175 ($generated@@41 $generated@@174)) ($generated@@42 ($generated@@43 $generated@@174 $generated@@37 $generated@@175) $generated@@25)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@175 ($generated@@50 $generated@@174)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (and (= $generated@@176 ($generated@@93 $generated@@177 $generated@@178 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@182 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@182 ($generated@@52 $generated@@55)) (= ($generated@@58 ($generated@@59 ($generated@@59 $generated@@179)) $generated@@182 ($generated@@27 0)) ($generated@@27 0)))
 :pattern ( ($generated@@58 ($generated@@59 ($generated@@59 $generated@@179)) $generated@@182 0))
)))))
(let (($generated@@183  (=> (and (and ($generated@@38 $generated@@178) ($generated@@180 $generated@@178)) (and (= 1 $generated@@63) (= (ControlFlow 0 3) 2))) $generated@@181)))
$generated@@183)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
