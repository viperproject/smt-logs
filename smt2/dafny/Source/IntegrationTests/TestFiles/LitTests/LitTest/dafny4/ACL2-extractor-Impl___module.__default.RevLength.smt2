(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U) Int)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (Int) Int)
(declare-fun $generated@@51 (T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Int)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@157 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@158 (T@T T@T) T@T)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@162 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@41 $generated@@43 ($generated@@23 $generated@@24 $generated@@45)) (and (< 1 $generated@@20) ($generated@@26 $generated@@24 $generated@@45 ($generated@@27 $generated@@43)))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@45)))))) (let (($generated@@46 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@45)))))
($generated@@41 $generated@@43 $generated@@46))) (= ($generated@@40 $generated@@43 ($generated@@22 $generated@@44) ($generated@@23 $generated@@24 $generated@@45)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@45)) 0 (let (($generated@@47 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@45)))))
($generated@@42 (+ 1 ($generated@@40 $generated@@43 ($generated@@22 $generated@@44) $generated@@47))))))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@43 ($generated@@22 $generated@@44) ($generated@@23 $generated@@24 $generated@@45)))
))))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@40 $generated@@48 ($generated@@22 $generated@@49) $generated@@50) ($generated@@40 $generated@@48 $generated@@49 $generated@@50))
 :pattern ( ($generated@@40 $generated@@48 ($generated@@22 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@51 $generated@@52 ($generated@@22 $generated@@53) $generated@@54) ($generated@@51 $generated@@52 $generated@@53 $generated@@54))
 :pattern ( ($generated@@51 $generated@@52 ($generated@@22 $generated@@53) $generated@@54))
)))
(assert (= ($generated@@55 $generated@@56) $generated@@1))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@58 $generated@@60) ($generated@@57 $generated@@24 $generated@@56 ($generated@@27 $generated@@59) $generated@@60))
 :pattern ( ($generated@@57 $generated@@24 $generated@@56 ($generated@@27 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ) (! ($generated@@26 $generated@@24 $generated@@56 ($generated@@27 $generated@@61))
 :pattern ( ($generated@@26 $generated@@24 $generated@@56 ($generated@@27 $generated@@61)))
)))
(assert (forall (($generated@@62 Int) ) (! (= ($generated@@42 $generated@@62) $generated@@62)
 :pattern ( ($generated@@42 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@23 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@23 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@67 $generated@@68) ($generated@@27 $generated@@66))  (and ($generated@@65 $generated@@67 $generated@@66) ($generated@@26 $generated@@24 $generated@@68 ($generated@@27 $generated@@66))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@67 $generated@@68) ($generated@@27 $generated@@66)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@25 $generated@@69 $generated@@71 $generated@@72) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@71 ($generated@@27 $generated@@69)) ($generated@@26 $generated@@24 $generated@@72 ($generated@@27 $generated@@69))))) (and (=> (not ($generated@@28 $generated@@71)) (let (($generated@@73 ($generated@@29 $generated@@71)))
($generated@@25 $generated@@69 $generated@@73 $generated@@72))) (= ($generated@@21 $generated@@69 ($generated@@22 $generated@@70) $generated@@71 $generated@@72) (ite ($generated@@28 $generated@@71) $generated@@72 (let (($generated@@74 ($generated@@29 $generated@@71)))
(let (($generated@@75 ($generated@@31 $generated@@71)))
($generated@@32 $generated@@75 ($generated@@21 $generated@@69 $generated@@70 $generated@@74 $generated@@72))))))))
 :pattern ( ($generated@@21 $generated@@69 ($generated@@22 $generated@@70) $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@28 $generated@@76) (= ($generated@@55 $generated@@76) $generated@@1))
 :pattern ( ($generated@@28 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@77 $generated@@78) (= ($generated@@55 $generated@@78) $generated@@2))
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@79 $generated@@81 $generated@@83) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@83 ($generated@@27 $generated@@81)))) (and (=> (not ($generated@@28 $generated@@83)) (let (($generated@@84 ($generated@@29 $generated@@83)))
(let (($generated@@85 ($generated@@31 $generated@@83)))
 (and ($generated@@79 $generated@@81 $generated@@84) ($generated@@25 $generated@@81 ($generated@@51 $generated@@81 $generated@@82 $generated@@84) ($generated@@32 $generated@@85 ($generated@@23 $generated@@24 $generated@@56))))))) (= ($generated@@51 $generated@@81 ($generated@@22 $generated@@82) $generated@@83) (ite ($generated@@28 $generated@@83) $generated@@56 (let (($generated@@86 ($generated@@29 $generated@@83)))
(let (($generated@@87 ($generated@@31 $generated@@83)))
($generated@@21 $generated@@81 ($generated@@22 $generated@@80) ($generated@@51 $generated@@81 $generated@@82 $generated@@86) ($generated@@32 $generated@@87 ($generated@@23 $generated@@24 $generated@@56)))))))))
 :pattern ( ($generated@@51 $generated@@81 ($generated@@22 $generated@@82) $generated@@83))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@88 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@88 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@77 $generated@@92) (exists (($generated@@93 T@U) ($generated@@94 T@U) ) (= $generated@@92 ($generated@@32 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@77 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@28 $generated@@95) (= $generated@@95 $generated@@56))
 :pattern ( ($generated@@28 $generated@@95))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@41 $generated@@96 $generated@@98) (and (< 1 $generated@@20) ($generated@@26 $generated@@24 $generated@@98 ($generated@@27 $generated@@96)))) (and (=> (not ($generated@@28 $generated@@98)) (let (($generated@@99 ($generated@@29 $generated@@98)))
($generated@@41 $generated@@96 $generated@@99))) (= ($generated@@40 $generated@@96 ($generated@@22 $generated@@97) $generated@@98) (ite ($generated@@28 $generated@@98) 0 (let (($generated@@100 ($generated@@29 $generated@@98)))
(+ 1 ($generated@@40 $generated@@96 $generated@@97 $generated@@100)))))))
 :pattern ( ($generated@@40 $generated@@96 ($generated@@22 $generated@@97) $generated@@98))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@101 ($generated@@89 $generated@@105 $generated@@102) $generated@@103 $generated@@104) ($generated@@57 $generated@@105 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@101 ($generated@@89 $generated@@105 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@108 T@U) ) (!  (and (= ($generated@@106 ($generated@@27 $generated@@108)) $generated@@0) (= ($generated@@107 ($generated@@27 $generated@@108)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@109 $generated@@110) (or ($generated@@28 $generated@@110) ($generated@@77 $generated@@110)))
 :pattern ( ($generated@@109 $generated@@110))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@79 $generated@@111 ($generated@@23 $generated@@24 $generated@@113)) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@113 ($generated@@27 $generated@@111)))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@113)))))) (let (($generated@@114 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@113)))))
(let (($generated@@115 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@113)))))
 (and ($generated@@79 $generated@@111 $generated@@114) ($generated@@25 $generated@@111 ($generated@@51 $generated@@111 ($generated@@22 $generated@@112) $generated@@114) ($generated@@32 $generated@@115 ($generated@@23 $generated@@24 $generated@@56))))))) (= ($generated@@51 $generated@@111 ($generated@@22 $generated@@112) ($generated@@23 $generated@@24 $generated@@113)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@113)) $generated@@56 (let (($generated@@116 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@113)))))
(let (($generated@@117 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@113)))))
($generated@@23 $generated@@24 ($generated@@21 $generated@@111 ($generated@@22 $generated@@80) ($generated@@23 $generated@@24 ($generated@@51 $generated@@111 ($generated@@22 $generated@@112) $generated@@116)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@117 ($generated@@23 $generated@@24 $generated@@56)))))))))))
 :weight 3
 :pattern ( ($generated@@51 $generated@@111 ($generated@@22 $generated@@112) ($generated@@23 $generated@@24 $generated@@113)))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@119 ($generated@@27 $generated@@118)) (or ($generated@@28 $generated@@119) ($generated@@77 $generated@@119)))
 :pattern ( ($generated@@77 $generated@@119) ($generated@@26 $generated@@24 $generated@@119 ($generated@@27 $generated@@118)))
 :pattern ( ($generated@@28 $generated@@119) ($generated@@26 $generated@@24 $generated@@119 ($generated@@27 $generated@@118)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@65 ($generated@@89 $generated@@122 $generated@@120) $generated@@121) ($generated@@26 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@65 ($generated@@89 $generated@@122 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@55 ($generated@@32 $generated@@123 $generated@@124)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@32 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@32 $generated@@127 $generated@@128))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@25 $generated@@129 $generated@@131 $generated@@132) (and (< 1 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@131 ($generated@@27 $generated@@129)) ($generated@@26 $generated@@24 $generated@@132 ($generated@@27 $generated@@129))))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@129 $generated@@130 $generated@@131 $generated@@132) ($generated@@27 $generated@@129)))
 :pattern ( ($generated@@21 $generated@@129 $generated@@130 $generated@@131 $generated@@132))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (or ($generated@@79 $generated@@134 $generated@@136) (and (< 2 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@136 ($generated@@27 $generated@@134)) ($generated@@57 $generated@@24 $generated@@136 ($generated@@27 $generated@@134) $generated@@133)))) ($generated@@58 $generated@@133)) ($generated@@57 $generated@@24 ($generated@@51 $generated@@134 $generated@@135 $generated@@136) ($generated@@27 $generated@@134) $generated@@133))
 :pattern ( ($generated@@57 $generated@@24 ($generated@@51 $generated@@134 $generated@@135 $generated@@136) ($generated@@27 $generated@@134) $generated@@133))
))))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@137 ($generated@@27 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@27 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@88 $generated@@140 ($generated@@89 $generated@@140 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@89 $generated@@140 $generated@@139))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (< ($generated@@141 $generated@@143) ($generated@@142 ($generated@@32 $generated@@143 $generated@@144)))
 :pattern ( ($generated@@32 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (< ($generated@@142 $generated@@146) ($generated@@142 ($generated@@32 $generated@@145 $generated@@146)))
 :pattern ( ($generated@@32 $generated@@145 $generated@@146))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (or ($generated@@79 $generated@@147 $generated@@149) (and (< 2 $generated@@20) ($generated@@26 $generated@@24 $generated@@149 ($generated@@27 $generated@@147)))) ($generated@@26 $generated@@24 ($generated@@51 $generated@@147 $generated@@148 $generated@@149) ($generated@@27 $generated@@147)))
 :pattern ( ($generated@@51 $generated@@147 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and ($generated@@58 $generated@@152) (and ($generated@@77 $generated@@150) ($generated@@57 $generated@@24 $generated@@150 ($generated@@27 $generated@@151) $generated@@152))) ($generated@@101 ($generated@@31 $generated@@150) $generated@@151 $generated@@152))
 :pattern ( ($generated@@101 ($generated@@31 $generated@@150) $generated@@151 $generated@@152))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@153 $generated@@163 $generated@@164 $generated@@165 ($generated@@159 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@168 $generated@@169) $generated@@166)
 :weight 0
)) (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@153 $generated@@170 $generated@@171 $generated@@172 ($generated@@159 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@153 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@153 $generated@@179 $generated@@180 $generated@@181 ($generated@@159 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@153 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))) (= ($generated@@4 $generated@@154) 5)) (= ($generated@@4 $generated@@155) 6)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@157 $generated@@188 $generated@@189 ($generated@@160 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@190) $generated@@192) $generated@@190)
 :weight 0
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@197 $generated@@198) (= ($generated@@157 $generated@@193 $generated@@194 ($generated@@160 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@195) $generated@@198) ($generated@@157 $generated@@193 $generated@@194 $generated@@196 $generated@@198)))
 :weight 0
))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (= ($generated@@4 ($generated@@158 $generated@@199 $generated@@200)) 7))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@161 ($generated@@158 $generated@@201 $generated@@202)) $generated@@201)
 :pattern ( ($generated@@158 $generated@@201 $generated@@202))
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@162 ($generated@@158 $generated@@203 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@158 $generated@@203 $generated@@204))
))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@9 ($generated@@153 $generated@@154 $generated@@155 $generated@@5 ($generated@@156 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))  (=> (and (or (not (= $generated@@209 $generated@@205)) (not true)) ($generated@@9 ($generated@@88 $generated@@5 ($generated@@157 $generated@@155 $generated@@30 ($generated@@157 $generated@@154 ($generated@@158 $generated@@155 $generated@@30) $generated@@206 $generated@@209) $generated@@207)))) $generated@@208))
 :pattern ( ($generated@@153 $generated@@154 $generated@@155 $generated@@5 ($generated@@156 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@212 $generated@@214 $generated@@215) (and (< 1 $generated@@20) (and (and ($generated@@26 $generated@@24 $generated@@214 ($generated@@27 $generated@@212)) ($generated@@57 $generated@@24 $generated@@214 ($generated@@27 $generated@@212) $generated@@211)) (and ($generated@@26 $generated@@24 $generated@@215 ($generated@@27 $generated@@212)) ($generated@@57 $generated@@24 $generated@@215 ($generated@@27 $generated@@212) $generated@@211))))) ($generated@@58 $generated@@211)) ($generated@@57 $generated@@24 ($generated@@21 $generated@@212 $generated@@213 $generated@@214 $generated@@215) ($generated@@27 $generated@@212) $generated@@211))
 :pattern ( ($generated@@57 $generated@@24 ($generated@@21 $generated@@212 $generated@@213 $generated@@214 $generated@@215) ($generated@@27 $generated@@212) $generated@@211))
))))
(assert (forall (($generated@@216 T@U) ) (! (= ($generated@@141 ($generated@@89 $generated@@24 $generated@@216)) ($generated@@142 $generated@@216))
 :pattern ( ($generated@@141 ($generated@@89 $generated@@24 $generated@@216)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@21 $generated@@217 ($generated@@22 $generated@@218) $generated@@219 $generated@@220) ($generated@@21 $generated@@217 $generated@@218 $generated@@219 $generated@@220))
 :pattern ( ($generated@@21 $generated@@217 ($generated@@22 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> ($generated@@65 $generated@@222 ($generated@@27 $generated@@221)) (and (= ($generated@@89 $generated@@24 ($generated@@88 $generated@@24 $generated@@222)) $generated@@222) ($generated@@26 $generated@@24 ($generated@@88 $generated@@24 $generated@@222) ($generated@@27 $generated@@221))))
 :pattern ( ($generated@@65 $generated@@222 ($generated@@27 $generated@@221)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@58 $generated@@225) (and ($generated@@77 $generated@@223) ($generated@@57 $generated@@24 $generated@@223 ($generated@@27 $generated@@224) $generated@@225))) ($generated@@57 $generated@@24 ($generated@@29 $generated@@223) ($generated@@27 $generated@@224) $generated@@225))
 :pattern ( ($generated@@57 $generated@@24 ($generated@@29 $generated@@223) ($generated@@27 $generated@@224) $generated@@225))
)))
(assert (= $generated@@56 ($generated@@23 $generated@@24 $generated@@56)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@226) ($generated@@23 $generated@@24 $generated@@227)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@226 $generated@@227)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@226) ($generated@@23 $generated@@24 $generated@@227)))
)))
(assert (forall (($generated@@228 Int) ) (! (= ($generated@@89 $generated@@6 ($generated@@10 ($generated@@42 $generated@@228))) ($generated@@23 $generated@@30 ($generated@@89 $generated@@6 ($generated@@10 $generated@@228))))
 :pattern ( ($generated@@89 $generated@@6 ($generated@@10 ($generated@@42 $generated@@228))))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (= ($generated@@89 $generated@@230 ($generated@@23 $generated@@230 $generated@@229)) ($generated@@23 $generated@@30 ($generated@@89 $generated@@230 $generated@@229)))
 :pattern ( ($generated@@89 $generated@@230 ($generated@@23 $generated@@230 $generated@@229)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (or ($generated@@41 $generated@@231 $generated@@233) (and (< 1 $generated@@20) ($generated@@26 $generated@@24 $generated@@233 ($generated@@27 $generated@@231)))) (<= ($generated@@42 0) ($generated@@40 $generated@@231 $generated@@232 $generated@@233)))
 :pattern ( ($generated@@40 $generated@@231 $generated@@232 $generated@@233))
))))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> ($generated@@58 $generated@@237) (= ($generated@@57 $generated@@24 ($generated@@32 $generated@@235 $generated@@236) ($generated@@27 $generated@@234) $generated@@237)  (and ($generated@@101 $generated@@235 $generated@@234 $generated@@237) ($generated@@57 $generated@@24 $generated@@236 ($generated@@27 $generated@@234) $generated@@237))))
 :pattern ( ($generated@@57 $generated@@24 ($generated@@32 $generated@@235 $generated@@236) ($generated@@27 $generated@@234) $generated@@237))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@262  (=> (= (ControlFlow 0 8) (- 0 7)) (= ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@51 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@239)) ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@239)))))
(let (($generated@@263  (=> (and (= ($generated@@40 $generated@@238 ($generated@@22 $generated@@80) ($generated@@21 $generated@@238 ($generated@@22 $generated@@80) ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) (+ ($generated@@40 $generated@@238 ($generated@@22 $generated@@80) ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240)) 1)) (= (ControlFlow 0 10) 8)) $generated@@262)))
(let (($generated@@264  (=> (and (= $generated@@239 $generated@@56) (= (ControlFlow 0 9) 8)) $generated@@262)))
(let (($generated@@265  (=> (and (and (and ($generated@@57 $generated@@24 $generated@@240 ($generated@@27 $generated@@238) $generated@@242) ($generated@@79 $generated@@238 $generated@@240)) (and (= $generated@@243 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240)) ($generated@@57 $generated@@24 $generated@@243 ($generated@@27 $generated@@238) $generated@@242))) (and (and ($generated@@41 $generated@@238 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240)) (= $generated@@244 ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) (and ($generated@@57 $generated@@24 $generated@@244 ($generated@@27 $generated@@238) $generated@@242) ($generated@@41 $generated@@238 ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))))) (=> (and (and (and (and ($generated@@79 $generated@@238 $generated@@240) ($generated@@41 $generated@@238 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240))) ($generated@@41 $generated@@238 ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) ($generated@@57 $generated@@24 $generated@@240 ($generated@@27 $generated@@238) $generated@@242)) (and (and (and ($generated@@79 $generated@@238 $generated@@240) (= $generated@@245 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240))) (and ($generated@@57 $generated@@24 $generated@@245 ($generated@@27 $generated@@238) $generated@@242) ($generated@@41 $generated@@238 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240)))) (and (and ($generated@@79 $generated@@238 $generated@@240) ($generated@@41 $generated@@238 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240))) (= (ControlFlow 0 6) (- 0 5))))) (= (+ ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@51 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@240)) ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) (+ ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@51 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@240)) 1))))))
(let (($generated@@266  (=> (and ($generated@@57 $generated@@24 $generated@@240 ($generated@@27 $generated@@238) $generated@@242) ($generated@@79 $generated@@238 $generated@@240)) (=> (and (and (and (= $generated@@246 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240)) ($generated@@57 $generated@@24 $generated@@246 ($generated@@27 $generated@@238) $generated@@242)) (and (= $generated@@247 ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56))) ($generated@@57 $generated@@24 $generated@@247 ($generated@@27 $generated@@238) $generated@@242))) (and (and ($generated@@25 $generated@@238 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56))) (= $generated@@248 ($generated@@21 $generated@@238 ($generated@@22 $generated@@80) ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56))))) (and ($generated@@57 $generated@@24 $generated@@248 ($generated@@27 $generated@@238) $generated@@242) ($generated@@41 $generated@@238 ($generated@@21 $generated@@238 ($generated@@22 $generated@@80) ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56))))))) (=> (and (and (and (and (and (and (and ($generated@@79 $generated@@238 $generated@@240) ($generated@@25 $generated@@238 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) ($generated@@41 $generated@@238 ($generated@@21 $generated@@238 ($generated@@22 $generated@@80) ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56))))) ($generated@@57 $generated@@24 $generated@@240 ($generated@@27 $generated@@238) $generated@@242)) (and ($generated@@79 $generated@@238 $generated@@240) ($generated@@79 $generated@@238 $generated@@240))) (and (and (= $generated@@249 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240)) (= $generated@@250 ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) (and ($generated@@58 $generated@@251) ($generated@@252 $generated@@251)))) (and (and (and ($generated@@25 $generated@@238 $generated@@249 $generated@@250) ($generated@@41 $generated@@238 ($generated@@21 $generated@@238 ($generated@@22 $generated@@80) $generated@@249 $generated@@250))) (and ($generated@@41 $generated@@238 $generated@@249) ($generated@@41 $generated@@238 $generated@@250))) (and (= ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@21 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@249 $generated@@250)) (+ ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@249) ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@250))) (= $generated@@242 $generated@@251)))) (and (and (and (and ($generated@@57 $generated@@24 $generated@@240 ($generated@@27 $generated@@238) $generated@@251) ($generated@@79 $generated@@238 $generated@@240)) (and (= $generated@@253 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240)) ($generated@@57 $generated@@24 $generated@@253 ($generated@@27 $generated@@238) $generated@@251))) (and (and ($generated@@41 $generated@@238 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240)) (= $generated@@254 ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) (and ($generated@@57 $generated@@24 $generated@@254 ($generated@@27 $generated@@238) $generated@@251) ($generated@@41 $generated@@238 ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))))) (and (and (and ($generated@@79 $generated@@238 $generated@@240) ($generated@@41 $generated@@238 ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@240))) ($generated@@41 $generated@@238 ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) (= (ControlFlow 0 4) (- 0 3))))) (= ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@21 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@51 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@240) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56)))) (+ ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@51 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) $generated@@240)) ($generated@@40 $generated@@238 ($generated@@22 ($generated@@22 $generated@@80)) ($generated@@32 $generated@@241 ($generated@@23 $generated@@24 $generated@@56))))))))))
(let (($generated@@267 true))
(let (($generated@@268  (=> (= $generated@@239 ($generated@@32 $generated@@255 $generated@@256)) (=> (and ($generated@@65 $generated@@255 $generated@@238) ($generated@@26 $generated@@24 $generated@@256 ($generated@@27 $generated@@238))) (=> (and (and (and (and ($generated@@26 $generated@@24 $generated@@240 ($generated@@27 $generated@@238)) ($generated@@57 $generated@@24 $generated@@240 ($generated@@27 $generated@@238) $generated@@242)) (= $generated@@257 $generated@@256)) (and ($generated@@26 $generated@@24 $generated@@257 ($generated@@27 $generated@@238)) (= $generated@@240 $generated@@257))) (and (and (and ($generated@@65 $generated@@241 $generated@@238) ($generated@@101 $generated@@241 $generated@@238 $generated@@242)) (= $generated@@258 $generated@@255)) (and ($generated@@65 $generated@@258 $generated@@238) (= $generated@@241 $generated@@258)))) (and (and (and (=> (= (ControlFlow 0 11) 2) $generated@@267) (=> (= (ControlFlow 0 11) 4) $generated@@266)) (=> (= (ControlFlow 0 11) 6) $generated@@265)) (=> (= (ControlFlow 0 11) 10) $generated@@263)))))))
(let (($generated@@269 true))
(let (($generated@@270  (=> (or (not (= $generated@@239 $generated@@56)) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@268) (=> (= (ControlFlow 0 12) 1) $generated@@269)))))
(let (($generated@@271  (=> (and (= $generated@@259 ($generated@@156 $generated@@260 $generated@@261 $generated false)) ($generated@@109 $generated@@239)) (=> (and (and ($generated@@58 $generated@@242) ($generated@@252 $generated@@242)) (and (= $generated@@261 $generated@@242) (forall (($generated@@272 T@U) ) (!  (=> (and (and ($generated@@26 $generated@@24 $generated@@272 ($generated@@27 $generated@@238)) ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 true)))) (< ($generated@@142 $generated@@272) ($generated@@142 $generated@@239))) (= ($generated@@40 $generated@@238 ($generated@@22 $generated@@80) ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@272)) ($generated@@40 $generated@@238 ($generated@@22 $generated@@80) $generated@@272)))
 :pattern ( ($generated@@51 $generated@@238 ($generated@@22 $generated@@80) $generated@@272))
)))) (and (=> (= (ControlFlow 0 13) 9) $generated@@264) (=> (= (ControlFlow 0 13) 12) $generated@@270))))))
(let (($generated@@273  (=> (and ($generated@@58 $generated@@261) ($generated@@252 $generated@@261)) (=> (and (and (and ($generated@@26 $generated@@24 $generated@@239 ($generated@@27 $generated@@238)) ($generated@@57 $generated@@24 $generated@@239 ($generated@@27 $generated@@238) $generated@@261)) ($generated@@109 $generated@@239)) (and (= 3 $generated@@20) (= (ControlFlow 0 14) 13))) $generated@@271))))
$generated@@273))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
