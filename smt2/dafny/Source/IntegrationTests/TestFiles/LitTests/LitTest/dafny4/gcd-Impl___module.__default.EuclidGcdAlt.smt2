(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@26 () Int)
(declare-fun $generated@@27 (Int Int) Bool)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 (Int Int) Bool)
(declare-fun $generated@@30 (Int Int) Int)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@40 (Bool Int Int) Int)
(declare-fun $generated@@41 (Int Int) Bool)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@75 (Int) T@U)
(declare-fun $generated@@76 (Int) Bool)
(declare-fun $generated@@77 (T@T T@U T@U) Bool)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U Int Int) T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U T@U T@U) Bool)
(declare-fun $generated@@122 (T@U) Bool)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@125 (T@U) Int)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert (forall (($generated@@25 T@U) ) (!  (not ($generated@@23 $generated@@24 $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25))
)))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (or ($generated@@29 ($generated@@28 $generated@@31) ($generated@@28 $generated@@32)) (and (< 1 $generated@@26) (and (<= ($generated@@28 1) $generated@@31) (<= ($generated@@28 1) $generated@@32)))) (= ($generated@@27 ($generated@@28 $generated@@31) ($generated@@28 $generated@@32)) (exists (($generated@@33 Int) ) (! (= ($generated@@30 ($generated@@28 $generated@@31) $generated@@33) ($generated@@28 $generated@@32))
 :pattern ( ($generated@@30 $generated@@31 $generated@@33))
))))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@28 $generated@@31) ($generated@@28 $generated@@32)))
))))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@23 ($generated@@34 $generated@@35 $generated@@36) $generated@@37)  (and ($generated@@23 $generated@@35 $generated@@37) ($generated@@23 $generated@@36 $generated@@37)))
 :pattern ( ($generated@@23 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@34 ($generated@@34 $generated@@38 $generated@@39) $generated@@39) ($generated@@34 $generated@@38 $generated@@39))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@38 $generated@@39) $generated@@39))
)))
(assert  (=> (<= 4 $generated@@26) (forall (($generated@@42 Bool) ($generated@@43 Int) ($generated@@44 Int) ) (!  (=> (or ($generated@@41 $generated@@43 $generated@@44) (and (< 4 $generated@@26) (and (<= ($generated@@28 1) $generated@@43) (<= ($generated@@28 1) $generated@@44)))) (<= ($generated@@28 1) ($generated@@40 $generated@@42 $generated@@43 $generated@@44)))
 :pattern ( ($generated@@40 $generated@@42 $generated@@43 $generated@@44))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@46 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@46 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@46 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@3 $generated@@47) 3)) (= ($generated@@3 $generated@@48) 4)) (= ($generated@@3 $generated@@49) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@3 ($generated@@50 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@50 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@50 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@50 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@45 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@8 ($generated@@51 $generated@@4 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@72 $generated@@74) $generated@@0))) ($generated@@8 ($generated@@51 $generated@@4 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@73 $generated@@74) $generated@@0))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@73 $generated@@74) $generated@@0))
)))
 :pattern ( ($generated@@45 $generated@@72 $generated@@73))
)))
(assert (= ($generated@@3 $generated@@78) 7))
(assert  (=> (<= 2 $generated@@26) (forall (($generated@@80 Int) ) (!  (=> (or ($generated@@76 $generated@@80) (and (< 2 $generated@@26) (<= ($generated@@28 1) $generated@@80))) ($generated@@77 $generated@@78 ($generated@@75 $generated@@80) ($generated@@79 $generated@@20)))
 :pattern ( ($generated@@75 $generated@@80))
))))
(assert (forall (($generated@@81 Int) ) (! (= ($generated@@28 $generated@@81) $generated@@81)
 :pattern ( ($generated@@28 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@84 $generated@@83))
)))
(assert  (=> (<= 4 $generated@@26) (forall (($generated@@87 Int) ($generated@@88 Int) ) (!  (=> (or ($generated@@41 $generated@@87 $generated@@88) (and (< 4 $generated@@26) (and (<= ($generated@@28 1) $generated@@87) (<= ($generated@@28 1) $generated@@88)))) (and (and (and ($generated@@76 $generated@@87) ($generated@@76 $generated@@88)) (let (($generated@@89 ($generated@@34 ($generated@@75 $generated@@87) ($generated@@75 $generated@@88))))
($generated@@85 $generated@@89))) (= ($generated@@40 true $generated@@87 $generated@@88) (let (($generated@@90 ($generated@@34 ($generated@@75 $generated@@87) ($generated@@75 $generated@@88))))
($generated@@86 $generated@@90)))))
 :pattern ( ($generated@@40 true $generated@@87 $generated@@88))
))))
(assert  (=> (<= 2 $generated@@26) (forall (($generated@@93 Int) ) (!  (=> (or ($generated@@76 ($generated@@28 $generated@@93)) (and (< 2 $generated@@26) (<= ($generated@@28 1) $generated@@93))) (and (forall (($generated@@94 Int) ) (!  (=> (<= ($generated@@28 1) $generated@@94) (=> (<= $generated@@94 ($generated@@28 $generated@@93)) ($generated@@29 $generated@@94 ($generated@@28 $generated@@93))))
 :pattern ( ($generated@@27 $generated@@94 $generated@@93))
)) (= ($generated@@75 ($generated@@28 $generated@@93)) ($generated@@91 ($generated@@92 $generated@@20 ($generated@@28 $generated@@93) ($generated@@28 $generated@@93))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@28 $generated@@93)))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@51 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@51 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@23 ($generated@@91 $generated@@98) $generated@@99) ($generated@@8 ($generated@@46 $generated@@48 $generated@@4 $generated@@98 $generated@@99)))
 :pattern ( ($generated@@23 ($generated@@91 $generated@@98) $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@77 $generated@@78 $generated@@101 ($generated@@79 $generated@@102)) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@23 $generated@@101 $generated@@103) ($generated@@100 $generated@@103 $generated@@102))
 :pattern ( ($generated@@23 $generated@@101 $generated@@103))
)))
 :pattern ( ($generated@@77 $generated@@78 $generated@@101 ($generated@@79 $generated@@102)))
)))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@104 Int) ($generated@@105 Int) ) (!  (=> (or ($generated@@29 $generated@@104 $generated@@105) (and (< 1 $generated@@26) (and (<= ($generated@@28 1) $generated@@104) (<= ($generated@@28 1) $generated@@105)))) (= ($generated@@27 $generated@@104 $generated@@105) (exists (($generated@@106 Int) ) (! (= ($generated@@30 $generated@@104 $generated@@106) $generated@@105)
 :pattern ( ($generated@@30 $generated@@104 $generated@@106))
))))
 :pattern ( ($generated@@27 $generated@@104 $generated@@105))
))))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@77 $generated@@5 $generated@@107 $generated@@20) (<= ($generated@@28 1) ($generated@@10 $generated@@107)))
 :pattern ( ($generated@@77 $generated@@5 $generated@@107 $generated@@20))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@108 ($generated@@95 $generated@@112 $generated@@109) $generated@@110 $generated@@111) ($generated@@19 $generated@@112 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@108 ($generated@@95 $generated@@112 $generated@@109) $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@45 $generated@@113 $generated@@114) (=> ($generated@@108 $generated@@115 $generated@@116 $generated@@113) ($generated@@108 $generated@@115 $generated@@116 $generated@@114)))
 :pattern ( ($generated@@45 $generated@@113 $generated@@114) ($generated@@108 $generated@@115 $generated@@116 $generated@@113))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (!  (=> ($generated@@45 $generated@@117 $generated@@118) (=> ($generated@@19 $generated@@121 $generated@@119 $generated@@120 $generated@@117) ($generated@@19 $generated@@121 $generated@@119 $generated@@120 $generated@@118)))
 :pattern ( ($generated@@45 $generated@@117 $generated@@118) ($generated@@19 $generated@@121 $generated@@119 $generated@@120 $generated@@117))
)))
(assert  (=> (<= 3 $generated@@26) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or ($generated@@85 $generated@@127) (and (< 3 $generated@@26) (and (and ($generated@@122 $generated@@126) ($generated@@77 $generated@@78 $generated@@127 ($generated@@79 $generated@@20))) (not ($generated@@123 $generated@@127 $generated@@24))))) (and ($generated@@124 $generated@@127) (= ($generated@@86 $generated@@127) (let (($generated@@128 ($generated@@125 $generated@@127)))
$generated@@128))))
 :pattern ( ($generated@@86 $generated@@127) ($generated@@122 $generated@@126))
))))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@100 $generated@@129 $generated@@20) (and (= ($generated@@95 $generated@@5 ($generated@@51 $generated@@5 $generated@@129)) $generated@@129) ($generated@@77 $generated@@5 ($generated@@51 $generated@@5 $generated@@129) $generated@@20)))
 :pattern ( ($generated@@100 $generated@@129 $generated@@20))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@123 $generated@@130 $generated@@131) (= $generated@@130 $generated@@131))
 :pattern ( ($generated@@123 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 Int) ($generated@@134 Int) ($generated@@135 T@U) ) (! (= ($generated@@8 ($generated@@46 $generated@@48 $generated@@4 ($generated@@92 $generated@@132 $generated@@133 $generated@@134) $generated@@135))  (and ($generated@@100 $generated@@135 $generated@@132) (and (<= ($generated@@10 ($generated@@51 $generated@@5 $generated@@135)) $generated@@133) ($generated@@27 ($generated@@10 ($generated@@51 $generated@@5 $generated@@135)) $generated@@134))))
 :pattern ( ($generated@@46 $generated@@48 $generated@@4 ($generated@@92 $generated@@132 $generated@@133 $generated@@134) $generated@@135))
)))
(assert  (=> (<= 4 $generated@@26) (forall (($generated@@136 Int) ($generated@@137 Int) ) (!  (=> (or ($generated@@41 ($generated@@28 $generated@@136) ($generated@@28 $generated@@137)) (and (< 4 $generated@@26) (and (<= ($generated@@28 1) $generated@@136) (<= ($generated@@28 1) $generated@@137)))) (and (and (and ($generated@@76 ($generated@@28 $generated@@136)) ($generated@@76 ($generated@@28 $generated@@137))) (let (($generated@@138 ($generated@@34 ($generated@@75 ($generated@@28 $generated@@136)) ($generated@@75 ($generated@@28 $generated@@137)))))
($generated@@85 $generated@@138))) (= ($generated@@40 true ($generated@@28 $generated@@136) ($generated@@28 $generated@@137)) (let (($generated@@139 ($generated@@34 ($generated@@75 ($generated@@28 $generated@@136)) ($generated@@75 ($generated@@28 $generated@@137)))))
($generated@@86 $generated@@139)))))
 :weight 3
 :pattern ( ($generated@@40 true ($generated@@28 $generated@@136) ($generated@@28 $generated@@137)))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (or (not (= $generated@@140 $generated@@142)) (not true)) (=> (and ($generated@@45 $generated@@140 $generated@@141) ($generated@@45 $generated@@141 $generated@@142)) ($generated@@45 $generated@@140 $generated@@142)))
 :pattern ( ($generated@@45 $generated@@140 $generated@@141) ($generated@@45 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@100 ($generated@@95 $generated@@145 $generated@@143) $generated@@144) ($generated@@77 $generated@@145 $generated@@143 $generated@@144))
 :pattern ( ($generated@@100 ($generated@@95 $generated@@145 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@124 $generated@@146) (and ($generated@@23 $generated@@146 ($generated@@95 $generated@@5 ($generated@@9 ($generated@@125 $generated@@146)))) (forall (($generated@@147 T@U) ) (!  (=> ($generated@@23 $generated@@146 ($generated@@95 $generated@@5 $generated@@147)) (<= ($generated@@10 $generated@@147) ($generated@@125 $generated@@146)))
 :pattern ( ($generated@@23 $generated@@146 ($generated@@95 $generated@@5 $generated@@147)))
))))
 :pattern ( ($generated@@125 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@19 $generated@@78 $generated@@148 ($generated@@79 $generated@@149) $generated@@150) (forall (($generated@@151 T@U) ) (!  (=> ($generated@@23 $generated@@148 $generated@@151) ($generated@@108 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@23 $generated@@148 $generated@@151))
)))
 :pattern ( ($generated@@19 $generated@@78 $generated@@148 ($generated@@79 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@79 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@79 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@79 $generated@@155)) $generated)
 :pattern ( ($generated@@79 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@51 $generated@@157 ($generated@@95 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@95 $generated@@157 $generated@@156))
)))
(assert  (=> (<= 3 $generated@@26) (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or ($generated@@85 ($generated@@82 $generated@@78 $generated@@159)) (and (< 3 $generated@@26) (and (and ($generated@@122 $generated@@158) ($generated@@77 $generated@@78 $generated@@159 ($generated@@79 $generated@@20))) (not ($generated@@123 $generated@@159 $generated@@24))))) (and ($generated@@124 ($generated@@82 $generated@@78 $generated@@159)) (= ($generated@@86 ($generated@@82 $generated@@78 $generated@@159)) (let (($generated@@160 ($generated@@125 ($generated@@82 $generated@@78 $generated@@159))))
$generated@@160))))
 :weight 3
 :pattern ( ($generated@@86 ($generated@@82 $generated@@78 $generated@@159)) ($generated@@122 $generated@@158))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@34 $generated@@161 ($generated@@34 $generated@@161 $generated@@162)) ($generated@@34 $generated@@161 $generated@@162))
 :pattern ( ($generated@@34 $generated@@161 ($generated@@34 $generated@@161 $generated@@162)))
)))
(assert  (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@163 $generated@@166 $generated@@167 $generated@@168 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@171 $generated@@172) $generated@@169)
 :weight 0
)) (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@163 $generated@@173 $generated@@174 $generated@@175 ($generated@@165 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@163 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@163 $generated@@182 $generated@@183 $generated@@184 ($generated@@165 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@163 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Bool) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@8 ($generated@@163 $generated@@49 $generated@@47 $generated@@4 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))  (=> (and (or (not (= $generated@@195 $generated@@191)) (not true)) ($generated@@8 ($generated@@51 $generated@@4 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@192 $generated@@195) $generated@@193)))) $generated@@194))
 :pattern ( ($generated@@163 $generated@@49 $generated@@47 $generated@@4 ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 Int) ($generated@@198 Int) ) (! (= ($generated@@30 $generated@@197 $generated@@198) (* $generated@@197 $generated@@198))
 :pattern ( ($generated@@30 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@100 $generated@@199 ($generated@@79 $generated@@200)) (and (= ($generated@@95 $generated@@78 ($generated@@51 $generated@@78 $generated@@199)) $generated@@199) ($generated@@77 $generated@@78 ($generated@@51 $generated@@78 $generated@@199) ($generated@@79 $generated@@200))))
 :pattern ( ($generated@@100 $generated@@199 ($generated@@79 $generated@@200)))
)))
(assert (= ($generated@@154 $generated@@20) $generated@@1))
(assert (= ($generated@@201 $generated@@20) $generated@@2))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@123 $generated@@202 $generated@@203) (forall (($generated@@204 T@U) ) (! (= ($generated@@23 $generated@@202 $generated@@204) ($generated@@23 $generated@@203 $generated@@204))
 :pattern ( ($generated@@23 $generated@@202 $generated@@204))
 :pattern ( ($generated@@23 $generated@@203 $generated@@204))
)))
 :pattern ( ($generated@@123 $generated@@202 $generated@@203))
)))
(assert  (=> (<= 2 $generated@@26) (forall (($generated@@205 Int) ) (!  (=> (or ($generated@@76 $generated@@205) (and (< 2 $generated@@26) (<= ($generated@@28 1) $generated@@205))) (and (forall (($generated@@206 Int) ) (!  (=> (<= ($generated@@28 1) $generated@@206) (=> (<= $generated@@206 $generated@@205) ($generated@@29 $generated@@206 $generated@@205)))
 :pattern ( ($generated@@27 $generated@@206 $generated@@205))
)) (= ($generated@@75 $generated@@205) ($generated@@91 ($generated@@92 $generated@@20 $generated@@205 $generated@@205)))))
 :pattern ( ($generated@@75 $generated@@205))
))))
(assert (forall (($generated@@207 Int) ) (! (= ($generated@@95 $generated@@5 ($generated@@9 ($generated@@28 $generated@@207))) ($generated@@82 $generated@@48 ($generated@@95 $generated@@5 ($generated@@9 $generated@@207))))
 :pattern ( ($generated@@95 $generated@@5 ($generated@@9 ($generated@@28 $generated@@207))))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@T) ) (! (= ($generated@@95 $generated@@209 ($generated@@82 $generated@@209 $generated@@208)) ($generated@@82 $generated@@48 ($generated@@95 $generated@@209 $generated@@208)))
 :pattern ( ($generated@@95 $generated@@209 ($generated@@82 $generated@@209 $generated@@208)))
)))
(assert  (=> (<= 3 $generated@@26) (forall (($generated@@210 T@U) ) (!  (=> (or ($generated@@85 $generated@@210) (and (< 3 $generated@@26) (and ($generated@@77 $generated@@78 $generated@@210 ($generated@@79 $generated@@20)) (not ($generated@@123 $generated@@210 $generated@@24))))) (<= ($generated@@28 1) ($generated@@86 $generated@@210)))
 :pattern ( ($generated@@86 $generated@@210))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 (T@U) Bool)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 25) (let (($generated@@238  (and (=> (= (ControlFlow 0 9) (- 0 11)) (or (<= 0 $generated@@211) (= (+ $generated@@212 $generated@@213) $generated@@211))) (=> (or (<= 0 $generated@@211) (= (+ $generated@@212 $generated@@213) $generated@@211)) (and (=> (= (ControlFlow 0 9) (- 0 10)) (< (+ $generated@@212 $generated@@213) $generated@@211)) (=> (< (+ $generated@@212 $generated@@213) $generated@@211) (=> (and (and (and ($generated@@41 $generated@@212 $generated@@213) ($generated@@41 $generated@@214 $generated@@215)) (= (ControlFlow 0 9) (- 0 8))) $generated@@216) (= ($generated@@40 $generated@@217 $generated@@212 $generated@@213) ($generated@@40 $generated@@217 $generated@@214 $generated@@215)))))))))
(let (($generated@@239  (=> (< $generated@@218 $generated@@219) (and (=> (= (ControlFlow 0 15) (- 0 18)) ($generated@@77 $generated@@5 ($generated@@9 (- $generated@@219 $generated@@218)) $generated@@20)) (=> ($generated@@77 $generated@@5 ($generated@@9 (- $generated@@219 $generated@@218)) $generated@@20) (=> (= $generated@@220 (- $generated@@219 $generated@@218)) (=> (and ($generated@@122 $generated@@221) ($generated@@222 $generated@@221)) (=> (and (and ($generated@@41 $generated@@220 $generated@@218) ($generated@@41 $generated@@218 $generated@@220)) (and (= ($generated@@40 $generated@@217 $generated@@220 $generated@@218) ($generated@@40 $generated@@217 $generated@@218 $generated@@220)) (= $generated@@223 $generated@@221))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (< $generated@@218 $generated@@219)) (=> (< $generated@@218 $generated@@219) (=> (and ($generated@@122 $generated@@224) ($generated@@222 $generated@@224)) (=> (and (and ($generated@@41 $generated@@219 $generated@@218) ($generated@@41 $generated@@218 (- $generated@@219 $generated@@218))) (and (= ($generated@@40 $generated@@217 $generated@@219 $generated@@218) ($generated@@40 $generated@@217 $generated@@218 (- $generated@@219 $generated@@218))) (= $generated@@221 $generated@@224))) (and (=> (= (ControlFlow 0 15) (- 0 16)) ($generated@@77 $generated@@5 ($generated@@9 (- $generated@@219 $generated@@218)) $generated@@20)) (=> ($generated@@77 $generated@@5 ($generated@@9 (- $generated@@219 $generated@@218)) $generated@@20) (=> (and (and (= $generated@@225 (- $generated@@219 $generated@@218)) (= $generated@@212 $generated@@225)) (and (= $generated@@213 $generated@@218) (= (ControlFlow 0 15) 9))) $generated@@238)))))))))))))))
(let (($generated@@240  (=> (< $generated@@219 $generated@@218) (and (=> (= (ControlFlow 0 12) (- 0 14)) (< $generated@@219 $generated@@218)) (=> (< $generated@@219 $generated@@218) (=> (and (and ($generated@@122 $generated@@226) ($generated@@222 $generated@@226)) (and ($generated@@41 $generated@@218 $generated@@219) ($generated@@41 $generated@@219 (- $generated@@218 $generated@@219)))) (=> (and (and (and (= ($generated@@40 $generated@@217 $generated@@218 $generated@@219) ($generated@@40 $generated@@217 $generated@@219 (- $generated@@218 $generated@@219))) (= $generated@@223 $generated@@226)) (and ($generated@@122 $generated@@227) ($generated@@222 $generated@@227))) (and (and ($generated@@41 $generated@@218 $generated@@219) ($generated@@41 $generated@@219 $generated@@218)) (and (= ($generated@@40 $generated@@217 $generated@@218 $generated@@219) ($generated@@40 $generated@@217 $generated@@219 $generated@@218)) (= $generated@@226 $generated@@227)))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@77 $generated@@5 ($generated@@9 (- $generated@@218 $generated@@219)) $generated@@20)) (=> ($generated@@77 $generated@@5 ($generated@@9 (- $generated@@218 $generated@@219)) $generated@@20) (=> (and (and (= $generated@@228 (- $generated@@218 $generated@@219)) (= $generated@@212 $generated@@219)) (and (= $generated@@213 $generated@@228) (= (ControlFlow 0 12) 9))) $generated@@238))))))))))
(let (($generated@@241  (=> (= (ControlFlow 0 4) (- 0 3)) (= $generated@@229 ($generated@@40 $generated@@217 $generated@@214 $generated@@215)))))
(let (($generated@@242  (=> (and (and (and ($generated@@122 $generated@@230) ($generated@@222 $generated@@230)) ($generated@@41 $generated@@219 $generated@@219)) (and (and (= ($generated@@40 $generated@@217 $generated@@219 $generated@@219) $generated@@219) (= $generated@@223 $generated@@230)) (and (= $generated@@229 $generated@@219) (= (ControlFlow 0 5) 4)))) $generated@@241)))
(let (($generated@@243  (=> (and (and (<= $generated@@218 $generated@@219) (<= $generated@@219 $generated@@218)) (= (ControlFlow 0 7) 5)) $generated@@242)))
(let (($generated@@244  (=> (and ($generated@@8 ($generated@@82 $generated@@4 ($generated@@7 true))) (= $generated@@211 (+ $generated@@219 $generated@@218))) (and (and (=> (= (ControlFlow 0 19) 12) $generated@@240) (=> (= (ControlFlow 0 19) 15) $generated@@239)) (=> (= (ControlFlow 0 19) 7) $generated@@243)))))
(let (($generated@@245  (=> (and (not ($generated@@8 ($generated@@82 $generated@@4 ($generated@@7 true)))) (= (ControlFlow 0 6) 5)) $generated@@242)))
(let (($generated@@246  (=> $generated@@216 (and (=> (= (ControlFlow 0 20) 6) $generated@@245) (=> (= (ControlFlow 0 20) 19) $generated@@244)))))
(let (($generated@@247 true))
(let (($generated@@248  (and (=> (= (ControlFlow 0 21) 2) $generated@@247) (=> (= (ControlFlow 0 21) 20) $generated@@246))))
(let (($generated@@249 true))
(let (($generated@@250  (=> (and (and ($generated@@122 $generated@@223) ($generated@@222 $generated@@223)) (<= ($generated@@28 1) $generated@@219)) (=> (and (and (and (<= ($generated@@28 1) $generated@@218) (not false)) (and (=> $generated@@216 (and ($generated@@41 $generated@@219 $generated@@218) ($generated@@41 $generated@@214 $generated@@215))) (=> $generated@@216 (= ($generated@@40 $generated@@217 $generated@@219 $generated@@218) ($generated@@40 $generated@@217 $generated@@214 $generated@@215))))) (and (and (forall (($generated@@251 T@U) ) (!  (=> (and (or (not (= $generated@@251 $generated@@231)) (not true)) ($generated@@8 ($generated@@51 $generated@@4 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@232 $generated@@251) $generated@@0)))) (= ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@223 $generated@@251) ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@232 $generated@@251)))
 :pattern ( ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@223 $generated@@251))
)) ($generated@@45 $generated@@232 $generated@@223)) (and (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (or (not (= $generated@@252 $generated@@231)) (not true)) ($generated@@8 ($generated@@51 $generated@@4 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@232 $generated@@252) $generated@@0)))) (or (= ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@223 $generated@@252) $generated@@253) ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@232 $generated@@252) $generated@@253)) ($generated@@8 ($generated@@163 $generated@@49 $generated@@47 $generated@@4 $generated@@233 $generated@@252 $generated@@253))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@49 ($generated@@50 $generated@@47 $generated@@48) $generated@@223 $generated@@252) $generated@@253))
)) (<= (+ $generated@@219 $generated@@218) $generated@@234)))) (and (=> (= (ControlFlow 0 22) 1) $generated@@249) (=> (= (ControlFlow 0 22) 21) $generated@@248))))))
(let (($generated@@254  (=> (and (= $generated@@233 ($generated@@164 $generated@@231 $generated@@232 $generated@@0 false)) (= $generated@@234 (+ $generated@@214 $generated@@215))) (and (=> (= (ControlFlow 0 23) (- 0 24)) (=> $generated@@216 (= ($generated@@40 $generated@@217 $generated@@214 $generated@@215) ($generated@@40 $generated@@217 $generated@@214 $generated@@215)))) (=> (=> $generated@@216 (= ($generated@@40 $generated@@217 $generated@@214 $generated@@215) ($generated@@40 $generated@@217 $generated@@214 $generated@@215))) (=> (= (ControlFlow 0 23) 22) $generated@@250))))))
(let (($generated@@255  (=> (and (and ($generated@@122 $generated@@232) ($generated@@222 $generated@@232)) (<= ($generated@@28 1) $generated@@214)) (=> (and (and (and (<= ($generated@@28 1) $generated@@215) (<= ($generated@@28 1) $generated@@235)) (and (<= ($generated@@28 1) $generated@@236) true)) (and (and (<= ($generated@@28 1) $generated@@237) true) (and (= 7 $generated@@26) (= (ControlFlow 0 25) 23)))) $generated@@254))))
$generated@@255))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
