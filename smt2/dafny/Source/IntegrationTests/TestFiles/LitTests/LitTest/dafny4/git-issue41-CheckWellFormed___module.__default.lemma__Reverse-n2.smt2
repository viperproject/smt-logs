(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 () Int)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 (T@T T@U T@U) Bool)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U Int) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U Int) T@U)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (= ($generated@@1 $generated@@21) 3))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> (or ($generated@@19 $generated@@24 $generated@@25) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@25 ($generated@@22 $generated@@24)) (> ($generated@@23 $generated@@25) 0)))) (and (= ($generated@@23 ($generated@@18 $generated@@24 $generated@@25)) (- ($generated@@23 $generated@@25) 1)) ($generated@@20 $generated@@21 ($generated@@18 $generated@@24 $generated@@25) ($generated@@22 $generated@@24))))
 :pattern ( ($generated@@18 $generated@@24 $generated@@25))
))))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@26 $generated@@28 ($generated@@27 $generated@@29) $generated@@30) ($generated@@26 $generated@@28 $generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@28 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (= ($generated@@23 $generated@@31) 0))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (= $generated@@37 ($generated@@23 $generated@@35)) (and (= ($generated@@32 ($generated@@33 $generated@@35 $generated@@36) $generated@@37) $generated@@35) (= ($generated@@34 ($generated@@33 $generated@@35 $generated@@36) $generated@@37) $generated@@36)))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@34 ($generated@@33 $generated@@35 $generated@@36) $generated@@37))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@40 $generated@@42 ($generated@@39 $generated@@21 $generated@@43)) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@43 ($generated@@22 $generated@@42)) (> ($generated@@23 ($generated@@39 $generated@@21 $generated@@43)) 0)))) (= ($generated@@38 $generated@@42 ($generated@@39 $generated@@21 $generated@@43)) ($generated@@41 ($generated@@39 $generated@@21 $generated@@43) (- ($generated@@23 ($generated@@39 $generated@@21 $generated@@43)) 1))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@42 ($generated@@39 $generated@@21 $generated@@43)))
))))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@19 $generated@@44 ($generated@@39 $generated@@21 $generated@@45)) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@45 ($generated@@22 $generated@@44)) (> ($generated@@23 ($generated@@39 $generated@@21 $generated@@45)) 0)))) (= ($generated@@18 $generated@@44 ($generated@@39 $generated@@21 $generated@@45)) ($generated@@32 ($generated@@39 $generated@@21 $generated@@45) (- ($generated@@23 ($generated@@39 $generated@@21 $generated@@45)) 1))))
 :weight 3
 :pattern ( ($generated@@18 $generated@@44 ($generated@@39 $generated@@21 $generated@@45)))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (= $generated@@47 0) (= ($generated@@34 $generated@@46 $generated@@47) $generated@@46))
 :pattern ( ($generated@@34 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@39 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@39 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 Int) ) (!  (=> (and (and (<= 0 $generated@@54) (< $generated@@54 $generated@@53)) (< $generated@@54 ($generated@@23 $generated@@52))) (= ($generated@@41 ($generated@@32 $generated@@52 $generated@@53) $generated@@54) ($generated@@41 $generated@@52 $generated@@54)))
 :weight 25
 :pattern ( ($generated@@41 ($generated@@32 $generated@@52 $generated@@53) $generated@@54))
 :pattern ( ($generated@@41 $generated@@52 $generated@@54) ($generated@@32 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ) (!  (=> (and (<= 0 $generated@@56) (<= $generated@@56 ($generated@@23 $generated@@55))) (= ($generated@@23 ($generated@@34 $generated@@55 $generated@@56)) (- ($generated@@23 $generated@@55) $generated@@56)))
 :pattern ( ($generated@@23 ($generated@@34 $generated@@55 $generated@@56)))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@59)  (and (= ($generated@@23 $generated@@58) ($generated@@23 $generated@@59)) (forall (($generated@@60 Int) ) (!  (=> (and (<= 0 $generated@@60) (< $generated@@60 ($generated@@23 $generated@@58))) (= ($generated@@41 $generated@@58 $generated@@60) ($generated@@41 $generated@@59 $generated@@60)))
 :pattern ( ($generated@@41 $generated@@58 $generated@@60))
 :pattern ( ($generated@@41 $generated@@59 $generated@@60))
))))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@61 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@61 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@70 $generated@@67) $generated@@68 $generated@@69) ($generated@@66 $generated@@70 $generated@@67 $generated@@68 $generated@@69))
 :pattern ( ($generated@@65 ($generated@@62 $generated@@70 $generated@@67) $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 Int) ($generated@@73 Int) ) (!  (=> (and (and (<= 0 $generated@@72) (<= 0 $generated@@73)) (< $generated@@73 (- ($generated@@23 $generated@@71) $generated@@72))) (= ($generated@@41 ($generated@@34 $generated@@71 $generated@@72) $generated@@73) ($generated@@41 $generated@@71 (+ $generated@@73 $generated@@72))))
 :weight 25
 :pattern ( ($generated@@41 ($generated@@34 $generated@@71 $generated@@72) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@23 ($generated@@33 $generated@@74 $generated@@75)) (+ ($generated@@23 $generated@@74) ($generated@@23 $generated@@75)))
 :pattern ( ($generated@@23 ($generated@@33 $generated@@74 $generated@@75)))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@40 $generated@@77 $generated@@78) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@78 ($generated@@22 $generated@@77)) (> ($generated@@23 $generated@@78) 0)))) ($generated@@76 ($generated@@38 $generated@@77 $generated@@78) $generated@@77))
 :pattern ( ($generated@@38 $generated@@77 $generated@@78))
))))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@79 $generated@@80 $generated@@82) (and (< 0 $generated@@17) ($generated@@20 $generated@@21 $generated@@82 ($generated@@22 ($generated@@22 $generated@@80))))) (and (=> (or (not (= ($generated@@23 $generated@@82) ($generated@@48 0))) (not true)) ($generated@@79 $generated@@80 ($generated@@34 $generated@@82 ($generated@@48 1)))) (= ($generated@@26 $generated@@80 ($generated@@27 $generated@@81) $generated@@82) (ite (= ($generated@@23 $generated@@82) ($generated@@48 0)) $generated@@31 ($generated@@33 ($generated@@61 $generated@@21 ($generated@@41 $generated@@82 ($generated@@48 0))) ($generated@@26 $generated@@80 $generated@@81 ($generated@@34 $generated@@82 ($generated@@48 1))))))))
 :pattern ( ($generated@@26 $generated@@80 ($generated@@27 $generated@@81) $generated@@82))
))))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and (or ($generated@@79 $generated@@85 $generated@@87) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@87 ($generated@@22 ($generated@@22 $generated@@85))) ($generated@@66 $generated@@21 $generated@@87 ($generated@@22 ($generated@@22 $generated@@85)) $generated@@84)))) ($generated@@83 $generated@@84)) ($generated@@66 $generated@@21 ($generated@@26 $generated@@85 $generated@@86 $generated@@87) ($generated@@22 $generated@@85) $generated@@84))
 :pattern ( ($generated@@66 $generated@@21 ($generated@@26 $generated@@85 $generated@@86 $generated@@87) ($generated@@22 $generated@@85) $generated@@84))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@57 $generated@@88 $generated@@89) (= $generated@@88 $generated@@89))
 :pattern ( ($generated@@57 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (and (<= 0 $generated@@91) (<= $generated@@91 ($generated@@23 $generated@@90))) (= ($generated@@23 ($generated@@32 $generated@@90 $generated@@91)) $generated@@91))
 :pattern ( ($generated@@23 ($generated@@32 $generated@@90 $generated@@91)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@76 ($generated@@62 $generated@@94 $generated@@92) $generated@@93) ($generated@@20 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@76 ($generated@@62 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (<= 0 ($generated@@23 $generated@@95))
 :pattern ( ($generated@@23 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@66 $generated@@21 $generated@@96 ($generated@@22 $generated@@97) $generated@@98) (forall (($generated@@99 Int) ) (!  (=> (and (<= 0 $generated@@99) (< $generated@@99 ($generated@@23 $generated@@96))) ($generated@@65 ($generated@@41 $generated@@96 $generated@@99) $generated@@97 $generated@@98))
 :pattern ( ($generated@@41 $generated@@96 $generated@@99))
)))
 :pattern ( ($generated@@66 $generated@@21 $generated@@96 ($generated@@22 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@100 ($generated@@22 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@22 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 ($generated@@22 $generated@@103)) $generated)
 :pattern ( ($generated@@22 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@61 $generated@@105 ($generated@@62 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@62 $generated@@105 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@106 $generated@@117 $generated@@118 $generated@@119 ($generated@@113 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@122 $generated@@123) $generated@@120)
 :weight 0
)) (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@106 $generated@@124 $generated@@125 $generated@@126 ($generated@@113 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@106 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@106 $generated@@133 $generated@@134 $generated@@135 ($generated@@113 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)))) (= ($generated@@1 $generated@@107) 4)) (= ($generated@@1 $generated@@108) 5)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@110 $generated@@142 $generated@@143 ($generated@@114 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@146) $generated@@144)
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@151 $generated@@152) (= ($generated@@110 $generated@@147 $generated@@148 ($generated@@114 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@110 $generated@@147 $generated@@148 $generated@@150 $generated@@152)))
 :weight 0
))) (= ($generated@@1 $generated@@111) 6)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@1 ($generated@@112 $generated@@153 $generated@@154)) 7))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@112 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@112 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@6 ($generated@@106 $generated@@107 $generated@@108 $generated@@2 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@6 ($generated@@61 $generated@@2 ($generated@@110 $generated@@108 $generated@@111 ($generated@@110 $generated@@107 ($generated@@112 $generated@@108 $generated@@111) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@106 $generated@@107 $generated@@108 $generated@@2 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (or ($generated@@79 $generated@@165 $generated@@167) (and (< 0 $generated@@17) ($generated@@20 $generated@@21 $generated@@167 ($generated@@22 ($generated@@22 $generated@@165))))) ($generated@@20 $generated@@21 ($generated@@26 $generated@@165 $generated@@166 $generated@@167) ($generated@@22 $generated@@165)))
 :pattern ( ($generated@@26 $generated@@165 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@76 $generated@@168 ($generated@@22 $generated@@169)) (and (= ($generated@@62 $generated@@21 ($generated@@61 $generated@@21 $generated@@168)) $generated@@168) ($generated@@20 $generated@@21 ($generated@@61 $generated@@21 $generated@@168) ($generated@@22 $generated@@169))))
 :pattern ( ($generated@@76 $generated@@168 ($generated@@22 $generated@@169)))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and (or ($generated@@40 $generated@@171 $generated@@172) (and (< 0 $generated@@17) (and (and ($generated@@20 $generated@@21 $generated@@172 ($generated@@22 $generated@@171)) ($generated@@66 $generated@@21 $generated@@172 ($generated@@22 $generated@@171) $generated@@170)) (> ($generated@@23 $generated@@172) 0)))) ($generated@@83 $generated@@170)) ($generated@@65 ($generated@@38 $generated@@171 $generated@@172) $generated@@171 $generated@@170))
 :pattern ( ($generated@@65 ($generated@@38 $generated@@171 $generated@@172) $generated@@171 $generated@@170))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 Int) ($generated@@175 Int) ) (!  (=> (and (and (<= 0 $generated@@174) (<= $generated@@174 $generated@@175)) (< $generated@@175 ($generated@@23 $generated@@173))) (= ($generated@@41 ($generated@@34 $generated@@173 $generated@@174) (- $generated@@175 $generated@@174)) ($generated@@41 $generated@@173 $generated@@175)))
 :weight 25
 :pattern ( ($generated@@41 $generated@@173 $generated@@175) ($generated@@34 $generated@@173 $generated@@174))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (or ($generated@@40 $generated@@176 $generated@@177) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@177 ($generated@@22 $generated@@176)) (> ($generated@@23 $generated@@177) 0)))) (= ($generated@@38 $generated@@176 $generated@@177) ($generated@@41 $generated@@177 (- ($generated@@23 $generated@@177) 1))))
 :pattern ( ($generated@@38 $generated@@176 $generated@@177))
))))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (or ($generated@@19 $generated@@178 $generated@@179) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@179 ($generated@@22 $generated@@178)) (> ($generated@@23 $generated@@179) 0)))) (= ($generated@@18 $generated@@178 $generated@@179) ($generated@@32 $generated@@179 (- ($generated@@23 $generated@@179) 1))))
 :pattern ( ($generated@@18 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 Int) ($generated@@182 Int) ) (!  (=> (and (and (<= 0 $generated@@181) (<= 0 $generated@@182)) (<= (+ $generated@@181 $generated@@182) ($generated@@23 $generated@@180))) (= ($generated@@34 ($generated@@34 $generated@@180 $generated@@181) $generated@@182) ($generated@@34 $generated@@180 (+ $generated@@181 $generated@@182))))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@180 $generated@@181) $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Int) ) (!  (and (=> (< $generated@@185 ($generated@@23 $generated@@183)) (= ($generated@@41 ($generated@@33 $generated@@183 $generated@@184) $generated@@185) ($generated@@41 $generated@@183 $generated@@185))) (=> (<= ($generated@@23 $generated@@183) $generated@@185) (= ($generated@@41 ($generated@@33 $generated@@183 $generated@@184) $generated@@185) ($generated@@41 $generated@@184 (- $generated@@185 ($generated@@23 $generated@@183))))))
 :pattern ( ($generated@@41 ($generated@@33 $generated@@183 $generated@@184) $generated@@185))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (or ($generated@@19 $generated@@187 $generated@@188) (and (< 0 $generated@@17) (and (and ($generated@@20 $generated@@21 $generated@@188 ($generated@@22 $generated@@187)) ($generated@@66 $generated@@21 $generated@@188 ($generated@@22 $generated@@187) $generated@@186)) (> ($generated@@23 $generated@@188) 0)))) ($generated@@83 $generated@@186)) ($generated@@66 $generated@@21 ($generated@@18 $generated@@187 $generated@@188) ($generated@@22 $generated@@187) $generated@@186))
 :pattern ( ($generated@@66 $generated@@21 ($generated@@18 $generated@@187 $generated@@188) ($generated@@22 $generated@@187) $generated@@186))
))))
(assert (forall (($generated@@189 Int) ) (! (= ($generated@@62 $generated@@3 ($generated@@7 ($generated@@48 $generated@@189))) ($generated@@39 $generated@@111 ($generated@@62 $generated@@3 ($generated@@7 $generated@@189))))
 :pattern ( ($generated@@62 $generated@@3 ($generated@@7 ($generated@@48 $generated@@189))))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@62 $generated@@191 ($generated@@39 $generated@@191 $generated@@190)) ($generated@@39 $generated@@111 ($generated@@62 $generated@@191 $generated@@190)))
 :pattern ( ($generated@@62 $generated@@191 ($generated@@39 $generated@@191 $generated@@190)))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (or ($generated@@79 $generated@@192 ($generated@@39 $generated@@21 $generated@@194)) (and (< 0 $generated@@17) ($generated@@20 $generated@@21 $generated@@194 ($generated@@22 ($generated@@22 $generated@@192))))) (and (=> (or (not (= ($generated@@23 ($generated@@39 $generated@@21 $generated@@194)) ($generated@@48 0))) (not true)) ($generated@@79 $generated@@192 ($generated@@39 $generated@@21 ($generated@@34 ($generated@@39 $generated@@21 $generated@@194) ($generated@@48 1))))) (= ($generated@@26 $generated@@192 ($generated@@27 $generated@@193) ($generated@@39 $generated@@21 $generated@@194)) (ite (= ($generated@@23 ($generated@@39 $generated@@21 $generated@@194)) ($generated@@48 0)) $generated@@31 ($generated@@33 ($generated@@61 $generated@@21 ($generated@@41 ($generated@@39 $generated@@21 $generated@@194) ($generated@@48 0))) ($generated@@26 $generated@@192 ($generated@@27 $generated@@193) ($generated@@39 $generated@@21 ($generated@@34 ($generated@@39 $generated@@21 $generated@@194) ($generated@@48 1)))))))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@192 ($generated@@27 $generated@@193) ($generated@@39 $generated@@21 $generated@@194)))
))))
(assert (forall (($generated@@195 T@U) ) (!  (=> (= ($generated@@23 $generated@@195) 0) (= $generated@@195 $generated@@31))
 :pattern ( ($generated@@23 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 Int) ) (!  (=> (= $generated@@197 0) (= ($generated@@32 $generated@@196 $generated@@197) $generated@@31))
 :pattern ( ($generated@@32 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@20 $generated@@21 $generated@@198 ($generated@@22 $generated@@199)) (forall (($generated@@200 Int) ) (!  (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@23 $generated@@198))) ($generated@@76 ($generated@@41 $generated@@198 $generated@@200) $generated@@199))
 :pattern ( ($generated@@41 $generated@@198 $generated@@200))
)))
 :pattern ( ($generated@@20 $generated@@21 $generated@@198 ($generated@@22 $generated@@199)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@209  (=> (and (and (and (= $generated@@201 ($generated@@109 $generated@@202 $generated@@203 $generated@@0 false)) (> ($generated@@23 $generated@@204) 0)) (and ($generated@@83 $generated@@205) ($generated@@206 $generated@@205))) (and (and (= $generated@@203 $generated@@205) ($generated@@66 $generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@207)) $generated@@205)) (and ($generated@@79 $generated@@207 $generated@@204) ($generated@@66 $generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@207)) $generated@@205)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated@@23 $generated@@204) 0)) (=> (> ($generated@@23 $generated@@204) 0) (=> (and ($generated@@19 ($generated@@22 $generated@@207) $generated@@204) (= $generated@@208 ($generated@@18 ($generated@@22 $generated@@207) $generated@@204))) (=> (and (and ($generated@@66 $generated@@21 $generated@@208 ($generated@@22 ($generated@@22 $generated@@207)) $generated@@205) ($generated@@79 $generated@@207 ($generated@@18 ($generated@@22 $generated@@207) $generated@@204))) (and ($generated@@66 $generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@207)) $generated@@205) (= (ControlFlow 0 2) (- 0 1)))) (> ($generated@@23 $generated@@204) 0))))))))
(let (($generated@@210  (=> (and ($generated@@83 $generated@@203) ($generated@@206 $generated@@203)) (=> (and (and ($generated@@20 $generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@207))) ($generated@@66 $generated@@21 $generated@@204 ($generated@@22 ($generated@@22 $generated@@207)) $generated@@203)) (and (= 1 $generated@@17) (= (ControlFlow 0 4) 2))) $generated@@209))))
$generated@@210)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
