(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U Int) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (Int) Bool)
(declare-fun $generated@@26 (Int) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U Bool Int T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U Int T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@U T@U T@U) Int)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U Int T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@51 (T@U T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@151 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (or ($generated@@25 $generated@@31) (and (< 1 $generated@@22) (<= ($generated@@26 0) $generated@@31))) (and (=> (or (not (= $generated@@31 ($generated@@26 0))) (not true)) ($generated@@25 (- $generated@@31 1))) (= ($generated@@23 ($generated@@24 $generated@@30) $generated@@31) (ite (= $generated@@31 ($generated@@26 0)) $generated@@27 ($generated@@28 ($generated@@29 $generated@@8 ($generated@@12 (- $generated@@31 1))) ($generated@@23 $generated@@30 (- $generated@@31 1)))))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@30) $generated@@31))
))))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@37) 3))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 Int) ($generated@@49 T@U) ) (!  (=> (or ($generated@@35 $generated@@46 $generated@@48 $generated@@49) (and (< 3 $generated@@22) (and ($generated@@34 $generated@@47) ($generated@@36 $generated@@37 $generated@@49 ($generated@@38 $generated@@46))))) (and (and (and (=> (<= ($generated@@26 0) $generated@@48) ($generated@@39 $generated@@46 $generated@@49)) (=> (and (<= ($generated@@26 0) $generated@@48) (< $generated@@48 ($generated@@40 $generated@@46 ($generated@@24 $generated@@41) $generated@@49))) ($generated@@42 $generated@@46 $generated@@48 $generated@@49))) (=> (not (and (<= ($generated@@26 0) $generated@@48) (< $generated@@48 ($generated@@40 $generated@@46 ($generated@@24 $generated@@41) $generated@@49)))) ($generated@@43 $generated@@46))) (= ($generated@@33 $generated@@46 true $generated@@48 $generated@@49) (ite  (and (<= ($generated@@26 0) $generated@@48) (< $generated@@48 ($generated@@40 $generated@@46 ($generated@@24 $generated@@41) $generated@@49))) ($generated@@44 $generated@@46 ($generated@@24 $generated@@41) $generated@@48 $generated@@49) (let (($generated@@50 ($generated@@45 $generated@@46)))
$generated@@50)))))
 :pattern ( ($generated@@33 $generated@@46 true $generated@@48 $generated@@49) ($generated@@34 $generated@@47))
))))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Bool) ($generated@@56 Int) ($generated@@57 T@U) ) (!  (=> (and (or ($generated@@35 $generated@@54 $generated@@56 $generated@@57) (and (< 3 $generated@@22) (and ($generated@@36 $generated@@37 $generated@@57 ($generated@@38 $generated@@54)) ($generated@@52 $generated@@37 $generated@@57 ($generated@@38 $generated@@54) $generated@@53)))) ($generated@@34 $generated@@53)) ($generated@@51 ($generated@@33 $generated@@54 $generated@@55 $generated@@56 $generated@@57) $generated@@54 $generated@@53))
 :pattern ( ($generated@@51 ($generated@@33 $generated@@54 $generated@@55 $generated@@56 $generated@@57) $generated@@54 $generated@@53))
))))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@43 $generated@@59) ($generated@@11 ($generated@@58 $generated@@7 ($generated@@10 true))))
 :pattern ( ($generated@@45 $generated@@59))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@39 $generated@@62 ($generated@@58 $generated@@37 $generated@@64)) (and (< 1 $generated@@22) ($generated@@36 $generated@@37 $generated@@64 ($generated@@38 $generated@@62)))) (and (=> (not ($generated@@11 ($generated@@58 $generated@@7 ($generated@@10 ($generated@@60 ($generated@@58 $generated@@37 $generated@@64)))))) (let (($generated@@65 ($generated@@58 $generated@@37 ($generated@@61 ($generated@@58 $generated@@37 $generated@@64)))))
($generated@@39 $generated@@62 $generated@@65))) (= ($generated@@40 $generated@@62 ($generated@@24 $generated@@63) ($generated@@58 $generated@@37 $generated@@64)) (ite ($generated@@60 ($generated@@58 $generated@@37 $generated@@64)) 0 (let (($generated@@66 ($generated@@58 $generated@@37 ($generated@@61 ($generated@@58 $generated@@37 $generated@@64)))))
($generated@@26 (+ 1 ($generated@@40 $generated@@62 ($generated@@24 $generated@@63) $generated@@66))))))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@62 ($generated@@24 $generated@@63) ($generated@@58 $generated@@37 $generated@@64)))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@40 $generated@@67 ($generated@@24 $generated@@68) $generated@@69) ($generated@@40 $generated@@67 $generated@@68 $generated@@69))
 :pattern ( ($generated@@40 $generated@@67 ($generated@@24 $generated@@68) $generated@@69))
)))
(assert (= ($generated@@70 $generated@@27) $generated@@3))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@34 $generated@@72) ($generated@@52 $generated@@37 $generated@@27 ($generated@@38 $generated@@71) $generated@@72))
 :pattern ( ($generated@@52 $generated@@37 $generated@@27 ($generated@@38 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! ($generated@@36 $generated@@37 $generated@@27 ($generated@@38 $generated@@73))
 :pattern ( ($generated@@36 $generated@@37 $generated@@27 ($generated@@38 $generated@@73)))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 Int) ($generated@@78 T@U) ) (!  (=> (or ($generated@@42 $generated@@75 $generated@@77 $generated@@78) (and (< 2 $generated@@22) (and ($generated@@36 $generated@@37 $generated@@78 ($generated@@38 $generated@@75)) (and (<= ($generated@@26 0) $generated@@77) (< $generated@@77 ($generated@@40 $generated@@75 ($generated@@24 $generated@@41) $generated@@78)))))) (and (=> (or (not (= $generated@@77 ($generated@@26 0))) (not true)) ($generated@@42 $generated@@75 (- $generated@@77 1) ($generated@@61 $generated@@78))) (= ($generated@@44 $generated@@75 ($generated@@24 $generated@@76) $generated@@77 $generated@@78) (ite (= $generated@@77 ($generated@@26 0)) ($generated@@74 $generated@@78) ($generated@@44 $generated@@75 $generated@@76 (- $generated@@77 1) ($generated@@61 $generated@@78))))))
 :pattern ( ($generated@@44 $generated@@75 ($generated@@24 $generated@@76) $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@26 $generated@@79) $generated@@79)
 :pattern ( ($generated@@26 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@58 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@58 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@36 $generated@@37 ($generated@@28 $generated@@84 $generated@@85) ($generated@@38 $generated@@83))  (and ($generated@@82 $generated@@84 $generated@@83) ($generated@@36 $generated@@37 $generated@@85 ($generated@@38 $generated@@83))))
 :pattern ( ($generated@@36 $generated@@37 ($generated@@28 $generated@@84 $generated@@85) ($generated@@38 $generated@@83)))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@60 $generated@@86) (= ($generated@@70 $generated@@86) $generated@@3))
 :pattern ( ($generated@@60 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@70 $generated@@88) $generated@@4))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@29 $generated@@91 ($generated@@89 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@89 $generated@@91 $generated@@90))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 T@U) ) (!  (=> (or ($generated@@42 $generated@@92 ($generated@@26 $generated@@94) ($generated@@58 $generated@@37 $generated@@95)) (and (< 2 $generated@@22) (and ($generated@@36 $generated@@37 $generated@@95 ($generated@@38 $generated@@92)) (and (<= ($generated@@26 0) ($generated@@26 $generated@@94)) (< $generated@@94 ($generated@@40 $generated@@92 ($generated@@24 $generated@@41) ($generated@@58 $generated@@37 $generated@@95))))))) (and (=> (or (not (= ($generated@@26 $generated@@94) ($generated@@26 0))) (not true)) ($generated@@42 $generated@@92 ($generated@@26 (- $generated@@94 1)) ($generated@@58 $generated@@37 ($generated@@61 ($generated@@58 $generated@@37 $generated@@95))))) (= ($generated@@44 $generated@@92 ($generated@@24 $generated@@93) ($generated@@26 $generated@@94) ($generated@@58 $generated@@37 $generated@@95)) (ite (= ($generated@@26 $generated@@94) ($generated@@26 0)) ($generated@@74 ($generated@@58 $generated@@37 $generated@@95)) ($generated@@44 $generated@@92 ($generated@@24 $generated@@93) ($generated@@26 (- $generated@@94 1)) ($generated@@58 $generated@@37 ($generated@@61 ($generated@@58 $generated@@37 $generated@@95))))))))
 :weight 3
 :pattern ( ($generated@@44 $generated@@92 ($generated@@24 $generated@@93) ($generated@@26 $generated@@94) ($generated@@58 $generated@@37 $generated@@95)))
))))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@87 $generated@@96) (exists (($generated@@97 T@U) ($generated@@98 T@U) ) (= $generated@@96 ($generated@@28 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@87 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@60 $generated@@99) (= $generated@@99 $generated@@27))
 :pattern ( ($generated@@60 $generated@@99))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@100 T@U) ($generated@@101 Int) ) (!  (=> (or ($generated@@25 ($generated@@26 $generated@@101)) (and (< 1 $generated@@22) (<= ($generated@@26 0) $generated@@101))) (and (=> (or (not (= ($generated@@26 $generated@@101) ($generated@@26 0))) (not true)) ($generated@@25 ($generated@@26 (- $generated@@101 1)))) (= ($generated@@23 ($generated@@24 $generated@@100) ($generated@@26 $generated@@101)) (ite (= ($generated@@26 $generated@@101) ($generated@@26 0)) $generated@@27 ($generated@@28 ($generated@@29 $generated@@8 ($generated@@12 ($generated@@26 (- $generated@@101 1)))) ($generated@@58 $generated@@37 ($generated@@23 ($generated@@24 $generated@@100) ($generated@@26 (- $generated@@101 1)))))))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@100) ($generated@@26 $generated@@101)))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@39 $generated@@102 $generated@@104) (and (< 1 $generated@@22) ($generated@@36 $generated@@37 $generated@@104 ($generated@@38 $generated@@102)))) (and (=> (not ($generated@@60 $generated@@104)) (let (($generated@@105 ($generated@@61 $generated@@104)))
($generated@@39 $generated@@102 $generated@@105))) (= ($generated@@40 $generated@@102 ($generated@@24 $generated@@103) $generated@@104) (ite ($generated@@60 $generated@@104) 0 (let (($generated@@106 ($generated@@61 $generated@@104)))
(+ 1 ($generated@@40 $generated@@102 $generated@@103 $generated@@106)))))))
 :pattern ( ($generated@@40 $generated@@102 ($generated@@24 $generated@@103) $generated@@104))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@51 ($generated@@29 $generated@@110 $generated@@107) $generated@@108 $generated@@109) ($generated@@52 $generated@@110 $generated@@107 $generated@@108 $generated@@109))
 :pattern ( ($generated@@51 ($generated@@29 $generated@@110 $generated@@107) $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (!  (and (= ($generated@@32 ($generated@@38 $generated@@112)) $generated@@2) (= ($generated@@111 ($generated@@38 $generated@@112)) $generated@@5))
 :pattern ( ($generated@@38 $generated@@112))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@113 T@U) ($generated@@114 Int) ) (!  (=> (or ($generated@@25 $generated@@114) (and (< 1 $generated@@22) (<= ($generated@@26 0) $generated@@114))) ($generated@@36 $generated@@37 ($generated@@23 $generated@@113 $generated@@114) ($generated@@38 $generated)))
 :pattern ( ($generated@@23 $generated@@113 $generated@@114))
))))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@115 T@U) ($generated@@116 Bool) ($generated@@117 Int) ($generated@@118 T@U) ) (!  (=> (or ($generated@@35 $generated@@115 $generated@@117 $generated@@118) (and (< 3 $generated@@22) ($generated@@36 $generated@@37 $generated@@118 ($generated@@38 $generated@@115)))) ($generated@@82 ($generated@@33 $generated@@115 $generated@@116 $generated@@117 $generated@@118) $generated@@115))
 :pattern ( ($generated@@33 $generated@@115 $generated@@116 $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@36 $generated@@37 $generated@@120 ($generated@@38 $generated@@119)) (or ($generated@@60 $generated@@120) ($generated@@87 $generated@@120)))
 :pattern ( ($generated@@87 $generated@@120) ($generated@@36 $generated@@37 $generated@@120 ($generated@@38 $generated@@119)))
 :pattern ( ($generated@@60 $generated@@120) ($generated@@36 $generated@@37 $generated@@120 ($generated@@38 $generated@@119)))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@82 $generated@@121 $generated) (and (= ($generated@@29 $generated@@8 ($generated@@89 $generated@@8 $generated@@121)) $generated@@121) ($generated@@36 $generated@@8 ($generated@@89 $generated@@8 $generated@@121) $generated)))
 :pattern ( ($generated@@82 $generated@@121 $generated))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@82 ($generated@@29 $generated@@124 $generated@@122) $generated@@123) ($generated@@36 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@82 ($generated@@29 $generated@@124 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@70 ($generated@@28 $generated@@125 $generated@@126)) $generated@@4)
 :pattern ( ($generated@@28 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@74 ($generated@@28 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@28 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@61 ($generated@@28 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@28 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@131 ($generated@@38 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@38 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@89 $generated@@134 ($generated@@29 $generated@@134 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@29 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (< ($generated@@135 $generated@@137) ($generated@@136 ($generated@@28 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@28 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (< ($generated@@136 $generated@@140) ($generated@@136 ($generated@@28 $generated@@139 $generated@@140)))
 :pattern ( ($generated@@28 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 Int) ) (! (= ($generated@@23 ($generated@@24 $generated@@141) $generated@@142) ($generated@@23 $generated@@141 $generated@@142))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@141) $generated@@142))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Int) ($generated@@147 T@U) ) (!  (=> (and (or ($generated@@42 $generated@@144 $generated@@146 $generated@@147) (and (< 2 $generated@@22) (and (and ($generated@@36 $generated@@37 $generated@@147 ($generated@@38 $generated@@144)) ($generated@@52 $generated@@37 $generated@@147 ($generated@@38 $generated@@144) $generated@@143)) (and (<= ($generated@@26 0) $generated@@146) (< $generated@@146 ($generated@@40 $generated@@144 ($generated@@24 $generated@@41) $generated@@147)))))) ($generated@@34 $generated@@143)) ($generated@@51 ($generated@@44 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@144 $generated@@143))
 :pattern ( ($generated@@51 ($generated@@44 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@144 $generated@@143))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@34 $generated@@150) (and ($generated@@87 $generated@@148) ($generated@@52 $generated@@37 $generated@@148 ($generated@@38 $generated@@149) $generated@@150))) ($generated@@51 ($generated@@74 $generated@@148) $generated@@149 $generated@@150))
 :pattern ( ($generated@@51 ($generated@@74 $generated@@148) $generated@@149 $generated@@150))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@151 $generated@@162 $generated@@163 $generated@@164 ($generated@@158 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@151 $generated@@169 $generated@@170 $generated@@171 ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@151 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@151 $generated@@178 $generated@@179 $generated@@180 ($generated@@158 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))) (= ($generated@@6 $generated@@152) 4)) (= ($generated@@6 $generated@@153) 5)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@155 $generated@@187 $generated@@188 ($generated@@159 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@189) $generated@@191) $generated@@189)
 :weight 0
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@196 $generated@@197) (= ($generated@@155 $generated@@192 $generated@@193 ($generated@@159 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@194) $generated@@197) ($generated@@155 $generated@@192 $generated@@193 $generated@@195 $generated@@197)))
 :weight 0
))) (= ($generated@@6 $generated@@156) 6)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@6 ($generated@@157 $generated@@198 $generated@@199)) 7))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@160 ($generated@@157 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@157 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@161 ($generated@@157 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@157 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@11 ($generated@@151 $generated@@152 $generated@@153 $generated@@7 ($generated@@154 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (or (not (= $generated@@208 $generated@@204)) (not true)) ($generated@@11 ($generated@@89 $generated@@7 ($generated@@155 $generated@@153 $generated@@156 ($generated@@155 $generated@@152 ($generated@@157 $generated@@153 $generated@@156) $generated@@205 $generated@@208) $generated@@206)))) $generated@@207))
 :pattern ( ($generated@@151 $generated@@152 $generated@@153 $generated@@7 ($generated@@154 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Int) ($generated@@213 T@U) ) (!  (=> (or ($generated@@35 $generated@@210 ($generated@@26 $generated@@212) ($generated@@58 $generated@@37 $generated@@213)) (and (< 3 $generated@@22) (and ($generated@@34 $generated@@211) ($generated@@36 $generated@@37 $generated@@213 ($generated@@38 $generated@@210))))) (and (and (and (=> (<= ($generated@@26 0) ($generated@@26 $generated@@212)) ($generated@@39 $generated@@210 ($generated@@58 $generated@@37 $generated@@213))) (=> (and (<= ($generated@@26 0) ($generated@@26 $generated@@212)) (< $generated@@212 ($generated@@40 $generated@@210 ($generated@@24 $generated@@41) ($generated@@58 $generated@@37 $generated@@213)))) ($generated@@42 $generated@@210 ($generated@@26 $generated@@212) ($generated@@58 $generated@@37 $generated@@213)))) (=> (not (and (<= ($generated@@26 0) ($generated@@26 $generated@@212)) (< $generated@@212 ($generated@@40 $generated@@210 ($generated@@24 $generated@@41) ($generated@@58 $generated@@37 $generated@@213))))) ($generated@@43 $generated@@210))) (= ($generated@@33 $generated@@210 true ($generated@@26 $generated@@212) ($generated@@58 $generated@@37 $generated@@213)) (ite  (and (<= ($generated@@26 0) ($generated@@26 $generated@@212)) (< $generated@@212 ($generated@@40 $generated@@210 ($generated@@24 $generated@@41) ($generated@@58 $generated@@37 $generated@@213)))) ($generated@@44 $generated@@210 ($generated@@24 $generated@@41) ($generated@@26 $generated@@212) ($generated@@58 $generated@@37 $generated@@213)) (let (($generated@@214 ($generated@@45 $generated@@210)))
$generated@@214)))))
 :weight 3
 :pattern ( ($generated@@33 $generated@@210 true ($generated@@26 $generated@@212) ($generated@@58 $generated@@37 $generated@@213)) ($generated@@34 $generated@@211))
))))
(assert (forall (($generated@@215 T@U) ) (! (= ($generated@@135 ($generated@@29 $generated@@37 $generated@@215)) ($generated@@136 $generated@@215))
 :pattern ( ($generated@@135 ($generated@@29 $generated@@37 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Int) ($generated@@219 T@U) ) (! (= ($generated@@44 $generated@@216 ($generated@@24 $generated@@217) $generated@@218 $generated@@219) ($generated@@44 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
 :pattern ( ($generated@@44 $generated@@216 ($generated@@24 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> ($generated@@82 $generated@@221 ($generated@@38 $generated@@220)) (and (= ($generated@@29 $generated@@37 ($generated@@89 $generated@@37 $generated@@221)) $generated@@221) ($generated@@36 $generated@@37 ($generated@@89 $generated@@37 $generated@@221) ($generated@@38 $generated@@220))))
 :pattern ( ($generated@@82 $generated@@221 ($generated@@38 $generated@@220)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and ($generated@@34 $generated@@224) (and ($generated@@87 $generated@@222) ($generated@@52 $generated@@37 $generated@@222 ($generated@@38 $generated@@223) $generated@@224))) ($generated@@52 $generated@@37 ($generated@@61 $generated@@222) ($generated@@38 $generated@@223) $generated@@224))
 :pattern ( ($generated@@52 $generated@@37 ($generated@@61 $generated@@222) ($generated@@38 $generated@@223) $generated@@224))
)))
(assert (= $generated@@27 ($generated@@58 $generated@@37 $generated@@27)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@28 ($generated@@58 $generated@@156 $generated@@225) ($generated@@58 $generated@@37 $generated@@226)) ($generated@@58 $generated@@37 ($generated@@28 $generated@@225 $generated@@226)))
 :pattern ( ($generated@@28 ($generated@@58 $generated@@156 $generated@@225) ($generated@@58 $generated@@37 $generated@@226)))
)))
(assert (forall (($generated@@227 Int) ) (! (= ($generated@@29 $generated@@8 ($generated@@12 ($generated@@26 $generated@@227))) ($generated@@58 $generated@@156 ($generated@@29 $generated@@8 ($generated@@12 $generated@@227))))
 :pattern ( ($generated@@29 $generated@@8 ($generated@@12 ($generated@@26 $generated@@227))))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@T) ) (! (= ($generated@@29 $generated@@229 ($generated@@58 $generated@@229 $generated@@228)) ($generated@@58 $generated@@156 ($generated@@29 $generated@@229 $generated@@228)))
 :pattern ( ($generated@@29 $generated@@229 ($generated@@58 $generated@@229 $generated@@228)))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (or ($generated@@39 $generated@@230 $generated@@232) (and (< 1 $generated@@22) ($generated@@36 $generated@@37 $generated@@232 ($generated@@38 $generated@@230)))) (<= ($generated@@26 0) ($generated@@40 $generated@@230 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@40 $generated@@230 $generated@@231 $generated@@232))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 Int) ($generated@@236 T@U) ) (!  (=> (or ($generated@@42 $generated@@233 $generated@@235 $generated@@236) (and (< 2 $generated@@22) (and ($generated@@36 $generated@@37 $generated@@236 ($generated@@38 $generated@@233)) (and (<= ($generated@@26 0) $generated@@235) (< $generated@@235 ($generated@@40 $generated@@233 ($generated@@24 $generated@@41) $generated@@236)))))) ($generated@@82 ($generated@@44 $generated@@233 $generated@@234 $generated@@235 $generated@@236) $generated@@233))
 :pattern ( ($generated@@44 $generated@@233 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! ($generated@@52 $generated@@8 $generated@@238 $generated $generated@@237)
 :pattern ( ($generated@@52 $generated@@8 $generated@@238 $generated $generated@@237))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> ($generated@@34 $generated@@242) (= ($generated@@52 $generated@@37 ($generated@@28 $generated@@240 $generated@@241) ($generated@@38 $generated@@239) $generated@@242)  (and ($generated@@51 $generated@@240 $generated@@239 $generated@@242) ($generated@@52 $generated@@37 $generated@@241 ($generated@@38 $generated@@239) $generated@@242))))
 :pattern ( ($generated@@52 $generated@@37 ($generated@@28 $generated@@240 $generated@@241) ($generated@@38 $generated@@239) $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ) (! ($generated@@36 $generated@@8 $generated@@243 $generated)
 :pattern ( ($generated@@36 $generated@@8 $generated@@243 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@249 () Int)
(declare-fun $generated@@250 () Int)
(declare-fun $generated@@251 () Bool)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@255  (=> (= $generated@@244 ($generated@@154 $generated@@245 $generated@@246 $generated@@1 false)) (=> (and ($generated@@34 $generated@@247) ($generated@@248 $generated@@247)) (=> (and (and (= $generated@@246 $generated@@247) (forall (($generated@@256 Int) ) (!  (=> (and (and (<= ($generated@@26 0) $generated@@256) (and (<= ($generated@@26 0) $generated@@249) (< $generated@@249 $generated@@256))) (or (and (<= 0 $generated@@249) (< $generated@@249 $generated@@249)) (and (= $generated@@249 $generated@@249) (and (<= 0 $generated@@256) (< $generated@@256 $generated@@250))))) (= ($generated@@13 ($generated@@89 $generated@@8 ($generated@@33 $generated $generated@@251 $generated@@249 ($generated@@23 ($generated@@24 $generated@@41) $generated@@256)))) (- (- $generated@@256 1) $generated@@249)))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@41) $generated@@256))
))) (and ($generated@@34 $generated@@252) ($generated@@248 $generated@@252))) (=> (and (and (and (= $generated@@247 $generated@@252) $generated@@251) (and ($generated@@34 $generated@@253) ($generated@@248 $generated@@253))) (and (and ($generated@@25 $generated@@250) ($generated@@39 $generated ($generated@@23 ($generated@@24 $generated@@41) $generated@@250))) (and (= ($generated@@40 $generated ($generated@@24 ($generated@@24 $generated@@41)) ($generated@@23 ($generated@@24 ($generated@@24 $generated@@41)) $generated@@250)) $generated@@250) (= $generated@@252 $generated@@253)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@26 0) $generated@@249)) (=> (<= ($generated@@26 0) $generated@@249) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< $generated@@249 $generated@@250)) (=> (< $generated@@249 $generated@@250) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@40 $generated ($generated@@24 ($generated@@24 $generated@@41)) ($generated@@23 ($generated@@24 ($generated@@24 $generated@@41)) $generated@@250)) $generated@@250)) (=> (= ($generated@@40 $generated ($generated@@24 ($generated@@24 $generated@@41)) ($generated@@23 ($generated@@24 ($generated@@24 $generated@@41)) $generated@@250)) $generated@@250) (=> (and ($generated@@34 $generated@@254) ($generated@@248 $generated@@254)) (=> (and (and (and ($generated@@25 $generated@@250) ($generated@@42 $generated $generated@@249 ($generated@@23 ($generated@@24 $generated@@41) $generated@@250))) (= ($generated@@13 ($generated@@89 $generated@@8 ($generated@@44 $generated ($generated@@24 ($generated@@24 $generated@@41)) $generated@@249 ($generated@@23 ($generated@@24 ($generated@@24 $generated@@41)) $generated@@250)))) (- (- $generated@@250 1) $generated@@249))) (and (= $generated@@253 $generated@@254) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@13 ($generated@@89 $generated@@8 ($generated@@33 $generated $generated@@251 $generated@@249 ($generated@@23 ($generated@@24 ($generated@@24 $generated@@41)) $generated@@250)))) (- (- $generated@@250 1) $generated@@249))))))))))))))))
(let (($generated@@257  (=> (and (and (and ($generated@@34 $generated@@246) ($generated@@248 $generated@@246)) (<= ($generated@@26 0) $generated@@250)) (and (and (= 4 $generated@@22) (<= ($generated@@26 0) $generated@@249)) (and (< $generated@@249 $generated@@250) (= (ControlFlow 0 6) 2)))) $generated@@255)))
$generated@@257)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
