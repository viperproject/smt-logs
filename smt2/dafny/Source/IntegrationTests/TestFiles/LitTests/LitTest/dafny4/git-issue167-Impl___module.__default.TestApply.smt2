(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@24 (T@T T@T) T@T)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@33 (T@T) T@T)
(declare-fun $generated@@34 (T@T) T@T)
(declare-fun $generated@@80 () Int)
(declare-fun $generated@@81 (Int Int) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@83 (Int Int) Bool)
(declare-fun $generated@@84 (Int Int) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T T@U T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (Int) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (Bool) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@105 (Int) Int)
(declare-fun $generated@@115 (Int Int) Int)
(declare-fun $generated@@120 (T@T T@U T@U) Bool)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@35 T@T) ($generated@@36 T@T) ($generated@@37 T@T) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@23 $generated@@35 $generated@@36 $generated@@37 ($generated@@30 $generated@@35 $generated@@36 $generated@@37 $generated@@39 $generated@@40 $generated@@41 $generated@@38) $generated@@40 $generated@@41) $generated@@38)
 :weight 0
)) (and (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@47 $generated@@49) (= ($generated@@23 $generated@@42 $generated@@43 $generated@@44 ($generated@@30 $generated@@42 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@48 $generated@@45) $generated@@49 $generated@@50) ($generated@@23 $generated@@42 $generated@@43 $generated@@44 $generated@@46 $generated@@49 $generated@@50)))
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@57 $generated@@59) (= ($generated@@23 $generated@@51 $generated@@52 $generated@@53 ($generated@@30 $generated@@51 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@57 $generated@@54) $generated@@58 $generated@@59) ($generated@@23 $generated@@51 $generated@@52 $generated@@53 $generated@@55 $generated@@58 $generated@@59)))
 :weight 0
)))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@31 $generated@@60 $generated@@61 ($generated@@32 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@31 $generated@@65 $generated@@66 ($generated@@32 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@31 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@6 ($generated@@24 $generated@@71 $generated@@72)) 3))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@33 ($generated@@24 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@24 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@34 ($generated@@24 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@24 $generated@@75 $generated@@76))
))) (= ($generated@@6 $generated@@25) 4)) (= ($generated@@6 $generated@@26) 5)) (= ($generated@@6 $generated@@27) 6)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@11 ($generated@@23 ($generated@@24 $generated@@25 ($generated@@24 $generated@@26 $generated@@27)) $generated@@27 $generated@@7 ($generated@@28 $generated@@77) $generated@@78 $generated@@79)) ($generated@@29 $generated@@79 $generated@@77))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@25 ($generated@@24 $generated@@26 $generated@@27)) $generated@@27 $generated@@7 ($generated@@28 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (= ($generated@@6 $generated@@86) 7))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 Int) ) (!  (=> (or ($generated@@83 $generated@@100 $generated@@101) (and (< 1 $generated@@80) ($generated@@82 $generated@@99))) (and (forall (($generated@@102 Int) ) ($generated@@84 $generated@@102 $generated@@100)) (= ($generated@@81 $generated@@100 $generated@@101) (let (($generated@@103 ($generated@@85 $generated@@86 ($generated@@87 $generated@@86 ($generated@@88 ($generated@@89 ($generated@@90 $generated@@100) ($generated@@28 $generated) ($generated@@91 ($generated@@92 ($generated@@93 false))))) ($generated@@94 $generated@@95)))))
(forall (($generated@@104 Int) ) (! (= (+ ($generated@@13 ($generated@@96 $generated@@8 ($generated@@97 $generated $generated $generated@@99 $generated@@103 ($generated@@98 $generated@@8 ($generated@@12 $generated@@104))))) $generated@@101) (+ (+ $generated@@104 $generated@@100) $generated@@101))
 :pattern ( ($generated@@96 $generated@@8 ($generated@@97 $generated $generated $generated@@99 $generated@@103 ($generated@@98 $generated@@8 ($generated@@12 $generated@@104)))))
))))))
 :pattern ( ($generated@@81 $generated@@100 $generated@@101) ($generated@@82 $generated@@99))
))))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@106 T@U) ($generated@@107 Int) ($generated@@108 Int) ) (!  (=> (or ($generated@@83 ($generated@@105 $generated@@107) ($generated@@105 $generated@@108)) (and (< 1 $generated@@80) ($generated@@82 $generated@@106))) (and (forall (($generated@@109 Int) ) ($generated@@84 $generated@@109 ($generated@@105 $generated@@107))) (= ($generated@@81 ($generated@@105 $generated@@107) ($generated@@105 $generated@@108)) (let (($generated@@110 ($generated@@85 $generated@@86 ($generated@@87 $generated@@86 ($generated@@88 ($generated@@89 ($generated@@90 ($generated@@105 $generated@@107)) ($generated@@28 $generated) ($generated@@91 ($generated@@92 ($generated@@93 false))))) ($generated@@94 $generated@@95)))))
(forall (($generated@@111 Int) ) (! (= (+ ($generated@@13 ($generated@@96 $generated@@8 ($generated@@97 $generated $generated $generated@@106 $generated@@110 ($generated@@98 $generated@@8 ($generated@@12 $generated@@111))))) $generated@@108) (+ (+ $generated@@111 $generated@@107) $generated@@108))
 :pattern ( ($generated@@96 $generated@@8 ($generated@@97 $generated $generated $generated@@106 $generated@@110 ($generated@@98 $generated@@8 ($generated@@12 $generated@@111)))))
))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@105 $generated@@107) ($generated@@105 $generated@@108)) ($generated@@82 $generated@@106))
))))
(assert (forall (($generated@@112 Int) ) (! (= ($generated@@105 $generated@@112) $generated@@112)
 :pattern ( ($generated@@105 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@85 $generated@@114 $generated@@113) $generated@@113)
 :pattern ( ($generated@@85 $generated@@114 $generated@@113))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@116 Int) ($generated@@117 Int) ) (!  (=> (or ($generated@@84 ($generated@@105 $generated@@116) ($generated@@105 $generated@@117)) (< 0 $generated@@80)) (= ($generated@@115 ($generated@@105 $generated@@116) ($generated@@105 $generated@@117)) ($generated@@105 (+ $generated@@116 $generated@@117))))
 :weight 3
 :pattern ( ($generated@@115 ($generated@@105 $generated@@116) ($generated@@105 $generated@@117)))
))))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@98 $generated@@119 ($generated@@96 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@96 $generated@@119 $generated@@118))
)))
(assert (= ($generated@@6 $generated@@121) 8))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@120 $generated@@121 $generated@@124 ($generated@@122 $generated@@125)) (forall (($generated@@126 T@U) ) (!  (=> ($generated@@123 $generated@@124 $generated@@126) ($generated@@29 $generated@@126 $generated@@125))
 :pattern ( ($generated@@123 $generated@@124 $generated@@126))
)))
 :pattern ( ($generated@@120 $generated@@121 $generated@@124 ($generated@@122 $generated@@125)))
)))
(assert (= ($generated@@6 $generated@@127) 9))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@87 $generated@@130 $generated@@128 $generated@@129) ($generated@@31 $generated@@127 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@87 $generated@@130 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 ($generated@@92 $generated@@131) $generated@@132) ($generated@@11 ($generated@@31 $generated@@25 $generated@@7 $generated@@131 ($generated@@96 $generated@@25 $generated@@132))))
 :pattern ( ($generated@@123 ($generated@@92 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@97 $generated@@133 $generated@@134 $generated@@135 ($generated@@89 $generated@@136 $generated@@137 $generated@@138) $generated@@139) ($generated@@23 ($generated@@24 $generated@@25 ($generated@@24 $generated@@26 $generated@@27)) $generated@@27 $generated@@27 $generated@@136 $generated@@135 $generated@@139))
 :pattern ( ($generated@@97 $generated@@133 $generated@@134 $generated@@135 ($generated@@89 $generated@@136 $generated@@137 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> ($generated@@29 $generated@@141 $generated@@140) (and (= ($generated@@98 $generated@@25 ($generated@@96 $generated@@25 $generated@@141)) $generated@@141) ($generated@@120 $generated@@25 ($generated@@96 $generated@@25 $generated@@141) $generated@@140)))
 :pattern ( ($generated@@29 $generated@@141 $generated@@140))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@29 $generated@@143 $generated@@142) (and (= ($generated@@98 $generated@@25 ($generated@@96 $generated@@25 $generated@@143)) $generated@@143) ($generated@@120 $generated@@25 ($generated@@96 $generated@@25 $generated@@143) $generated@@142)))
 :pattern ( ($generated@@29 $generated@@143 $generated@@142))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@120 $generated@@25 $generated@@145 $generated@@142)  (and ($generated@@120 $generated@@25 $generated@@145 $generated@@140) (or (not (= $generated@@145 $generated@@144)) (not true))))
 :pattern ( ($generated@@120 $generated@@25 $generated@@145 $generated@@142))
 :pattern ( ($generated@@120 $generated@@25 $generated@@145 $generated@@140))
)))
(assert (forall (($generated@@146 Bool) ($generated@@147 T@U) ) (! (= ($generated@@11 ($generated@@31 $generated@@25 $generated@@7 ($generated@@93 $generated@@146) $generated@@147)) $generated@@146)
 :pattern ( ($generated@@31 $generated@@25 $generated@@7 ($generated@@93 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@31 $generated@@127 $generated@@86 ($generated@@88 $generated@@148) $generated@@149) $generated@@148)
 :pattern ( ($generated@@31 $generated@@127 $generated@@86 ($generated@@88 $generated@@148) $generated@@149))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@150 Int) ($generated@@151 Int) ) (!  (=> (or ($generated@@84 $generated@@150 $generated@@151) (< 0 $generated@@80)) (= ($generated@@115 $generated@@150 $generated@@151) (+ $generated@@150 $generated@@151)))
 :pattern ( ($generated@@115 $generated@@150 $generated@@151))
))))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@29 $generated@@152 $generated) (and (= ($generated@@98 $generated@@8 ($generated@@96 $generated@@8 $generated@@152)) $generated@@152) ($generated@@120 $generated@@8 ($generated@@96 $generated@@8 $generated@@152) $generated)))
 :pattern ( ($generated@@29 $generated@@152 $generated))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@29 ($generated@@98 $generated@@155 $generated@@153) $generated@@154) ($generated@@120 $generated@@155 $generated@@153 $generated@@154))
 :pattern ( ($generated@@29 ($generated@@98 $generated@@155 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@120 $generated@@25 $generated@@156 $generated@@140)
 :pattern ( ($generated@@120 $generated@@25 $generated@@156 $generated@@140))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@122 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@122 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@22 ($generated@@122 $generated@@159)) $generated@@1)
 :pattern ( ($generated@@122 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@96 $generated@@161 ($generated@@98 $generated@@161 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@98 $generated@@161 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@87 $generated@@164 $generated@@162 ($generated@@94 $generated@@163)) ($generated@@87 $generated@@164 $generated@@162 $generated@@163))
 :pattern ( ($generated@@87 $generated@@164 $generated@@162 ($generated@@94 $generated@@163)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@11 ($generated@@23 $generated@@25 $generated@@26 $generated@@7 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@11 ($generated@@96 $generated@@7 ($generated@@31 $generated@@26 $generated@@27 ($generated@@31 $generated@@25 ($generated@@24 $generated@@26 $generated@@27) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@23 $generated@@25 $generated@@26 $generated@@7 ($generated@@165 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 Int) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@25 ($generated@@24 $generated@@26 $generated@@27)) $generated@@27 $generated@@27 ($generated@@90 $generated@@172) $generated@@173 $generated@@174) ($generated@@98 $generated@@8 ($generated@@12 ($generated@@115 ($generated@@13 ($generated@@96 $generated@@8 $generated@@174)) $generated@@172))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@25 ($generated@@24 $generated@@26 $generated@@27)) $generated@@27 $generated@@27 ($generated@@90 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@29 $generated@@175 ($generated@@122 $generated@@176)) (and (= ($generated@@98 $generated@@121 ($generated@@96 $generated@@121 $generated@@175)) $generated@@175) ($generated@@120 $generated@@121 ($generated@@96 $generated@@121 $generated@@175) ($generated@@122 $generated@@176))))
 :pattern ( ($generated@@29 $generated@@175 ($generated@@122 $generated@@176)))
)))
(assert (= ($generated@@22 $generated@@140) $generated@@3))
(assert (= ($generated@@177 $generated@@140) $generated@@5))
(assert (= ($generated@@22 $generated@@142) $generated@@4))
(assert (= ($generated@@177 $generated@@142) $generated@@5))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@120 $generated@@121 ($generated@@92 $generated@@178) ($generated@@122 $generated@@140))
 :pattern ( ($generated@@92 $generated@@178))
)))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@98 $generated@@8 ($generated@@12 ($generated@@105 $generated@@179))) ($generated@@85 $generated@@27 ($generated@@98 $generated@@8 ($generated@@12 $generated@@179))))
 :pattern ( ($generated@@98 $generated@@8 ($generated@@12 ($generated@@105 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@98 $generated@@181 ($generated@@85 $generated@@181 $generated@@180)) ($generated@@85 $generated@@27 ($generated@@98 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@98 $generated@@181 ($generated@@85 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@25 ($generated@@24 $generated@@26 $generated@@27)) $generated@@27 $generated@@121 ($generated@@91 $generated@@182) $generated@@183 $generated@@184) $generated@@182)
 :pattern ( ($generated@@23 ($generated@@24 $generated@@25 ($generated@@24 $generated@@26 $generated@@27)) $generated@@27 $generated@@121 ($generated@@91 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (! ($generated@@120 $generated@@8 $generated@@185 $generated)
 :pattern ( ($generated@@120 $generated@@8 $generated@@185 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@191  (=> (and (and (= $generated@@186 ($generated@@165 $generated@@144 $generated@@187 $generated@@2 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@83 $generated@@188 $generated@@189)) (or ($generated@@81 $generated@@188 $generated@@189) (let (($generated@@192 ($generated@@85 $generated@@86 ($generated@@87 $generated@@86 ($generated@@88 ($generated@@89 ($generated@@90 $generated@@188) ($generated@@28 $generated) ($generated@@91 ($generated@@92 ($generated@@93 false))))) ($generated@@94 $generated@@95)))))
(forall (($generated@@193 Int) ) (! (= (+ ($generated@@13 ($generated@@96 $generated@@8 ($generated@@97 $generated $generated $generated@@187 $generated@@192 ($generated@@98 $generated@@8 ($generated@@12 $generated@@193))))) $generated@@189) (+ (+ $generated@@193 $generated@@188) $generated@@189))
 :pattern ( ($generated@@96 $generated@@8 ($generated@@97 $generated $generated $generated@@187 $generated@@192 ($generated@@98 $generated@@8 ($generated@@12 $generated@@193)))))
)))))))
(let (($generated@@194  (=> (and (and ($generated@@82 $generated@@187) ($generated@@190 $generated@@187)) (and (= 2 $generated@@80) (= (ControlFlow 0 3) 2))) $generated@@191)))
$generated@@194)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
