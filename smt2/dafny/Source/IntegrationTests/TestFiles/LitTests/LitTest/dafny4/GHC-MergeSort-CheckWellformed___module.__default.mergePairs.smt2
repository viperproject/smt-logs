(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@114 (T@U T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert ($generated@@20 $generated@@21))
(assert (= ($generated@@4 $generated@@26) 3))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@27 $generated@@33 ($generated@@25 $generated@@26 $generated@@35)) (and (< 1 $generated@@22) ($generated@@28 $generated@@26 $generated@@35 ($generated@@29 $generated@@33)))) (and (=> (not ($generated@@9 ($generated@@25 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 $generated@@26 $generated@@35)))))) (let (($generated@@36 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@35)))))
($generated@@27 $generated@@33 $generated@@36))) (= ($generated@@23 $generated@@33 ($generated@@24 $generated@@34) ($generated@@25 $generated@@26 $generated@@35)) (ite ($generated@@30 ($generated@@25 $generated@@26 $generated@@35)) 0 (let (($generated@@37 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@35)))))
($generated@@32 (+ 1 ($generated@@23 $generated@@33 ($generated@@24 $generated@@34) $generated@@37))))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@33 ($generated@@24 $generated@@34) ($generated@@25 $generated@@26 $generated@@35)))
))))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@23 $generated@@38 ($generated@@24 $generated@@39) $generated@@40) ($generated@@23 $generated@@38 $generated@@39 $generated@@40))
 :pattern ( ($generated@@23 $generated@@38 ($generated@@24 $generated@@39) $generated@@40))
)))
(assert (= ($generated@@41 $generated@@42) $generated@@1))
(assert (= ($generated@@4 $generated@@45) 4))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@44 ($generated@@25 $generated@@26 $generated@@51) ($generated@@25 $generated@@26 $generated@@52)) (and (< 2 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@51 ($generated@@29 $generated@@21)) ($generated@@28 $generated@@26 $generated@@52 ($generated@@29 $generated@@21))))) (and (=> (not ($generated@@9 ($generated@@25 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 $generated@@26 $generated@@51)))))) (let (($generated@@53 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@51)))))
(let (($generated@@54 ($generated@@25 $generated@@45 ($generated@@46 ($generated@@25 $generated@@26 $generated@@51)))))
 (=> (not ($generated@@9 ($generated@@25 $generated@@5 ($generated@@8 ($generated@@30 ($generated@@25 $generated@@26 $generated@@52)))))) (let (($generated@@55 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@52)))))
(let (($generated@@56 ($generated@@25 $generated@@45 ($generated@@46 ($generated@@25 $generated@@26 $generated@@52)))))
 (and (and ($generated@@47 $generated@@54 $generated@@56) (=> ($generated@@48 $generated@@54 $generated@@56) ($generated@@44 $generated@@53 ($generated@@25 $generated@@26 $generated@@52)))) (=> (not ($generated@@48 $generated@@54 $generated@@56)) ($generated@@44 ($generated@@25 $generated@@26 $generated@@51) $generated@@55))))))))) (= ($generated@@43 ($generated@@24 $generated@@50) ($generated@@25 $generated@@26 $generated@@51) ($generated@@25 $generated@@26 $generated@@52)) (ite ($generated@@30 ($generated@@25 $generated@@26 $generated@@51)) $generated@@52 (let (($generated@@57 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@51)))))
(let (($generated@@58 ($generated@@25 $generated@@45 ($generated@@46 ($generated@@25 $generated@@26 $generated@@51)))))
(ite ($generated@@30 ($generated@@25 $generated@@26 $generated@@52)) $generated@@51 (let (($generated@@59 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@52)))))
(let (($generated@@60 ($generated@@25 $generated@@45 ($generated@@46 ($generated@@25 $generated@@26 $generated@@52)))))
(ite ($generated@@48 $generated@@58 $generated@@60) ($generated@@49 $generated@@58 ($generated@@25 $generated@@26 ($generated@@43 ($generated@@24 $generated@@50) $generated@@57 ($generated@@25 $generated@@26 $generated@@52)))) ($generated@@49 $generated@@60 ($generated@@25 $generated@@26 ($generated@@43 ($generated@@24 $generated@@50) ($generated@@25 $generated@@26 $generated@@51) $generated@@59)))))))))))))
 :weight 3
 :pattern ( ($generated@@43 ($generated@@24 $generated@@50) ($generated@@25 $generated@@26 $generated@@51) ($generated@@25 $generated@@26 $generated@@52)))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@62 $generated@@64) ($generated@@61 $generated@@26 $generated@@42 ($generated@@29 $generated@@63) $generated@@64))
 :pattern ( ($generated@@61 $generated@@26 $generated@@42 ($generated@@29 $generated@@63) $generated@@64))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@66 $generated@@71) (and (< 3 $generated@@22) ($generated@@28 $generated@@26 $generated@@71 ($generated@@29 ($generated@@29 $generated@@21))))) (and (and (and (<= ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) ($generated@@65 $generated@@70 $generated@@71)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) $generated@@71)) (=> (and ($generated@@68 $generated@@71) ($generated@@68 ($generated@@31 $generated@@71))) (< ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) ($generated@@65 $generated@@70 $generated@@71)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) $generated@@71)))) (=> (not ($generated@@69 $generated@@71 $generated@@42)) (not ($generated@@69 ($generated@@65 $generated@@70 $generated@@71) $generated@@42)))) ($generated@@28 $generated@@26 ($generated@@65 $generated@@70 $generated@@71) ($generated@@29 ($generated@@29 $generated@@21)))))
 :pattern ( ($generated@@65 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ) (! ($generated@@28 $generated@@26 $generated@@42 ($generated@@29 $generated@@72))
 :pattern ( ($generated@@28 $generated@@26 $generated@@42 ($generated@@29 $generated@@72)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@69 $generated@@73 $generated@@74) (= $generated@@73 $generated@@74))
 :pattern ( ($generated@@69 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (and ($generated@@68 $generated@@75) ($generated@@68 $generated@@76)) (= ($generated@@69 $generated@@75 $generated@@76)  (and (= ($generated@@46 $generated@@75) ($generated@@46 $generated@@76)) ($generated@@69 ($generated@@31 $generated@@75) ($generated@@31 $generated@@76)))))
 :pattern ( ($generated@@69 $generated@@75 $generated@@76) ($generated@@68 $generated@@75))
 :pattern ( ($generated@@69 $generated@@75 $generated@@76) ($generated@@68 $generated@@76))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@32 $generated@@77) $generated@@77)
 :pattern ( ($generated@@32 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@25 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@25 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@28 $generated@@26 ($generated@@49 $generated@@82 $generated@@83) ($generated@@29 $generated@@81))  (and ($generated@@80 $generated@@82 $generated@@81) ($generated@@28 $generated@@26 $generated@@83 ($generated@@29 $generated@@81))))
 :pattern ( ($generated@@28 $generated@@26 ($generated@@49 $generated@@82 $generated@@83) ($generated@@29 $generated@@81)))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@30 $generated@@84) (= ($generated@@41 $generated@@84) $generated@@1))
 :pattern ( ($generated@@30 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@68 $generated@@85) (= ($generated@@41 $generated@@85) $generated@@2))
 :pattern ( ($generated@@68 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@86 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@86 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@68 $generated@@90) (exists (($generated@@91 T@U) ($generated@@92 T@U) ) (= $generated@@90 ($generated@@49 $generated@@91 $generated@@92))))
 :pattern ( ($generated@@68 $generated@@90))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@47 ($generated@@25 $generated@@45 $generated@@95) ($generated@@25 $generated@@45 $generated@@96)) (and (< 1 $generated@@22) (and ($generated@@80 $generated@@95 $generated@@21) ($generated@@80 $generated@@96 $generated@@21)))) (and (and ($generated@@93 ($generated@@25 $generated@@45 $generated@@95)) ($generated@@93 ($generated@@25 $generated@@45 $generated@@96))) (= ($generated@@48 ($generated@@25 $generated@@45 $generated@@95) ($generated@@25 $generated@@45 $generated@@96)) (<= ($generated@@94 ($generated@@25 $generated@@45 $generated@@95)) ($generated@@94 ($generated@@25 $generated@@45 $generated@@96))))))
 :weight 3
 :pattern ( ($generated@@48 ($generated@@25 $generated@@45 $generated@@95) ($generated@@25 $generated@@45 $generated@@96)))
))))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@30 $generated@@97) (= $generated@@97 $generated@@42))
 :pattern ( ($generated@@30 $generated@@97))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@44 $generated@@99 $generated@@100) (and (< 2 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@99 ($generated@@29 $generated@@21)) ($generated@@28 $generated@@26 $generated@@100 ($generated@@29 $generated@@21))))) (and (=> (not ($generated@@30 $generated@@99)) (let (($generated@@101 ($generated@@31 $generated@@99)))
(let (($generated@@102 ($generated@@46 $generated@@99)))
 (=> (not ($generated@@30 $generated@@100)) (let (($generated@@103 ($generated@@31 $generated@@100)))
(let (($generated@@104 ($generated@@46 $generated@@100)))
 (and (and ($generated@@47 $generated@@102 $generated@@104) (=> ($generated@@48 $generated@@102 $generated@@104) ($generated@@44 $generated@@101 $generated@@100))) (=> (not ($generated@@48 $generated@@102 $generated@@104)) ($generated@@44 $generated@@99 $generated@@103))))))))) (= ($generated@@43 ($generated@@24 $generated@@98) $generated@@99 $generated@@100) (ite ($generated@@30 $generated@@99) $generated@@100 (let (($generated@@105 ($generated@@31 $generated@@99)))
(let (($generated@@106 ($generated@@46 $generated@@99)))
(ite ($generated@@30 $generated@@100) $generated@@99 (let (($generated@@107 ($generated@@31 $generated@@100)))
(let (($generated@@108 ($generated@@46 $generated@@100)))
(ite ($generated@@48 $generated@@106 $generated@@108) ($generated@@49 $generated@@106 ($generated@@43 $generated@@98 $generated@@105 $generated@@100)) ($generated@@49 $generated@@108 ($generated@@43 $generated@@98 $generated@@99 $generated@@107))))))))))))
 :pattern ( ($generated@@43 ($generated@@24 $generated@@98) $generated@@99 $generated@@100))
))))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@27 $generated@@109 $generated@@111) (and (< 1 $generated@@22) ($generated@@28 $generated@@26 $generated@@111 ($generated@@29 $generated@@109)))) (and (=> (not ($generated@@30 $generated@@111)) (let (($generated@@112 ($generated@@31 $generated@@111)))
($generated@@27 $generated@@109 $generated@@112))) (= ($generated@@23 $generated@@109 ($generated@@24 $generated@@110) $generated@@111) (ite ($generated@@30 $generated@@111) 0 (let (($generated@@113 ($generated@@31 $generated@@111)))
(+ 1 ($generated@@23 $generated@@109 $generated@@110 $generated@@113)))))))
 :pattern ( ($generated@@23 $generated@@109 ($generated@@24 $generated@@110) $generated@@111))
))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@114 ($generated@@87 $generated@@118 $generated@@115) $generated@@116 $generated@@117) ($generated@@61 $generated@@118 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@114 ($generated@@87 $generated@@118 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@121 T@U) ) (!  (and (= ($generated@@119 ($generated@@29 $generated@@121)) $generated@@0) (= ($generated@@120 ($generated@@29 $generated@@121)) $generated@@3))
 :pattern ( ($generated@@29 $generated@@121))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or ($generated@@47 $generated@@122 $generated@@123) (and (< 1 $generated@@22) (and ($generated@@80 $generated@@122 $generated@@21) ($generated@@80 $generated@@123 $generated@@21)))) (and (and ($generated@@93 $generated@@122) ($generated@@93 $generated@@123)) (= ($generated@@48 $generated@@122 $generated@@123) (<= ($generated@@94 $generated@@122) ($generated@@94 $generated@@123)))))
 :pattern ( ($generated@@48 $generated@@122 $generated@@123))
))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@43 ($generated@@24 $generated@@124) $generated@@125 $generated@@126) ($generated@@43 $generated@@124 $generated@@125 $generated@@126))
 :pattern ( ($generated@@43 ($generated@@24 $generated@@124) $generated@@125 $generated@@126))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (or ($generated@@66 ($generated@@25 $generated@@26 $generated@@128)) (and (< 3 $generated@@22) ($generated@@28 $generated@@26 $generated@@128 ($generated@@29 ($generated@@29 $generated@@21))))) (and (=> ($generated@@9 ($generated@@25 $generated@@5 ($generated@@8  (and ($generated@@68 ($generated@@25 $generated@@26 $generated@@128)) ($generated@@68 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@128)))))))) (and ($generated@@44 ($generated@@25 $generated@@26 ($generated@@86 $generated@@26 ($generated@@46 ($generated@@25 $generated@@26 $generated@@128)))) ($generated@@25 $generated@@26 ($generated@@86 $generated@@26 ($generated@@46 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@128))))))) ($generated@@66 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@128)))))))) (= ($generated@@65 ($generated@@24 $generated@@127) ($generated@@25 $generated@@26 $generated@@128)) (ite  (and ($generated@@68 ($generated@@25 $generated@@26 $generated@@128)) ($generated@@68 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@128))))) ($generated@@49 ($generated@@87 $generated@@26 ($generated@@25 $generated@@26 ($generated@@43 ($generated@@24 $generated@@67) ($generated@@25 $generated@@26 ($generated@@86 $generated@@26 ($generated@@46 ($generated@@25 $generated@@26 $generated@@128)))) ($generated@@25 $generated@@26 ($generated@@86 $generated@@26 ($generated@@46 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@128))))))))) ($generated@@25 $generated@@26 ($generated@@65 ($generated@@24 $generated@@127) ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@128)))))))) $generated@@128))))
 :weight 3
 :pattern ( ($generated@@65 ($generated@@24 $generated@@127) ($generated@@25 $generated@@26 $generated@@128)))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> ($generated@@28 $generated@@26 $generated@@130 ($generated@@29 $generated@@129)) (or ($generated@@30 $generated@@130) ($generated@@68 $generated@@130)))
 :pattern ( ($generated@@68 $generated@@130) ($generated@@28 $generated@@26 $generated@@130 ($generated@@29 $generated@@129)))
 :pattern ( ($generated@@30 $generated@@130) ($generated@@28 $generated@@26 $generated@@130 ($generated@@29 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@80 ($generated@@87 $generated@@133 $generated@@131) $generated@@132) ($generated@@28 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@80 ($generated@@87 $generated@@133 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@20 $generated@@134) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@80 $generated@@136 $generated@@134) ($generated@@114 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@114 $generated@@136 $generated@@134 $generated@@135))
)))
 :pattern ( ($generated@@20 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@30 $generated@@137) ($generated@@30 $generated@@138)) ($generated@@69 $generated@@137 $generated@@138))
 :pattern ( ($generated@@69 $generated@@137 $generated@@138) ($generated@@30 $generated@@137))
 :pattern ( ($generated@@69 $generated@@137 $generated@@138) ($generated@@30 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@41 ($generated@@49 $generated@@139 $generated@@140)) $generated@@2)
 :pattern ( ($generated@@49 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@46 ($generated@@49 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@49 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@31 ($generated@@49 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@49 $generated@@143 $generated@@144))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (or ($generated@@44 $generated@@146 $generated@@147) (and (< 2 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@146 ($generated@@29 $generated@@21)) ($generated@@28 $generated@@26 $generated@@147 ($generated@@29 $generated@@21))))) ($generated@@28 $generated@@26 ($generated@@43 $generated@@145 $generated@@146 $generated@@147) ($generated@@29 $generated@@21)))
 :pattern ( ($generated@@43 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@29 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@29 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@86 $generated@@151 ($generated@@87 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@87 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@152 $generated@@154) ($generated@@153 ($generated@@49 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@49 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (< ($generated@@153 $generated@@157) ($generated@@153 ($generated@@49 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@49 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@65 ($generated@@24 $generated@@158) $generated@@159) ($generated@@65 $generated@@158 $generated@@159))
 :pattern ( ($generated@@65 ($generated@@24 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@62 $generated@@162) (and ($generated@@68 $generated@@160) ($generated@@61 $generated@@26 $generated@@160 ($generated@@29 $generated@@161) $generated@@162))) ($generated@@114 ($generated@@46 $generated@@160) $generated@@161 $generated@@162))
 :pattern ( ($generated@@114 ($generated@@46 $generated@@160) $generated@@161 $generated@@162))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@163 $generated@@173 $generated@@174 $generated@@175 ($generated@@169 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@178 $generated@@179) $generated@@176)
 :weight 0
)) (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@163 $generated@@180 $generated@@181 $generated@@182 ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@163 $generated@@189 $generated@@190 $generated@@191 ($generated@@169 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@163 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (= ($generated@@4 $generated@@164) 5)) (= ($generated@@4 $generated@@165) 6)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@167 $generated@@198 $generated@@199 ($generated@@170 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@200) $generated@@202) $generated@@200)
 :weight 0
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@207 $generated@@208) (= ($generated@@167 $generated@@203 $generated@@204 ($generated@@170 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@205) $generated@@208) ($generated@@167 $generated@@203 $generated@@204 $generated@@206 $generated@@208)))
 :weight 0
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@4 ($generated@@168 $generated@@209 $generated@@210)) 7))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@171 ($generated@@168 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@168 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@172 ($generated@@168 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@168 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@9 ($generated@@163 $generated@@164 $generated@@165 $generated@@5 ($generated@@166 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (or (not (= $generated@@219 $generated@@215)) (not true)) ($generated@@9 ($generated@@86 $generated@@5 ($generated@@167 $generated@@165 $generated@@45 ($generated@@167 $generated@@164 ($generated@@168 $generated@@165 $generated@@45) $generated@@216 $generated@@219) $generated@@217)))) $generated@@218))
 :pattern ( ($generated@@163 $generated@@164 $generated@@165 $generated@@5 ($generated@@166 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (or ($generated@@66 $generated@@222) (and (< 3 $generated@@22) ($generated@@28 $generated@@26 $generated@@222 ($generated@@29 ($generated@@29 $generated@@21))))) (and (=> (and ($generated@@68 $generated@@222) ($generated@@68 ($generated@@31 $generated@@222))) (and ($generated@@44 ($generated@@86 $generated@@26 ($generated@@46 $generated@@222)) ($generated@@86 $generated@@26 ($generated@@46 ($generated@@31 $generated@@222)))) ($generated@@66 ($generated@@31 ($generated@@31 $generated@@222))))) (= ($generated@@65 ($generated@@24 $generated@@221) $generated@@222) (ite  (and ($generated@@68 $generated@@222) ($generated@@68 ($generated@@31 $generated@@222))) ($generated@@49 ($generated@@87 $generated@@26 ($generated@@43 ($generated@@24 $generated@@67) ($generated@@86 $generated@@26 ($generated@@46 $generated@@222)) ($generated@@86 $generated@@26 ($generated@@46 ($generated@@31 $generated@@222))))) ($generated@@65 $generated@@221 ($generated@@31 ($generated@@31 $generated@@222)))) $generated@@222))))
 :pattern ( ($generated@@65 ($generated@@24 $generated@@221) $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ) (! (= ($generated@@152 ($generated@@87 $generated@@26 $generated@@223)) ($generated@@153 $generated@@223))
 :pattern ( ($generated@@152 ($generated@@87 $generated@@26 $generated@@223)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> ($generated@@80 $generated@@225 ($generated@@29 $generated@@224)) (and (= ($generated@@87 $generated@@26 ($generated@@86 $generated@@26 $generated@@225)) $generated@@225) ($generated@@28 $generated@@26 ($generated@@86 $generated@@26 $generated@@225) ($generated@@29 $generated@@224))))
 :pattern ( ($generated@@80 $generated@@225 ($generated@@29 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and ($generated@@62 $generated@@228) (and ($generated@@68 $generated@@226) ($generated@@61 $generated@@26 $generated@@226 ($generated@@29 $generated@@227) $generated@@228))) ($generated@@61 $generated@@26 ($generated@@31 $generated@@226) ($generated@@29 $generated@@227) $generated@@228))
 :pattern ( ($generated@@61 $generated@@26 ($generated@@31 $generated@@226) ($generated@@29 $generated@@227) $generated@@228))
)))
(assert (= $generated@@42 ($generated@@25 $generated@@26 $generated@@42)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@49 ($generated@@25 $generated@@45 $generated@@229) ($generated@@25 $generated@@26 $generated@@230)) ($generated@@25 $generated@@26 ($generated@@49 $generated@@229 $generated@@230)))
 :pattern ( ($generated@@49 ($generated@@25 $generated@@45 $generated@@229) ($generated@@25 $generated@@26 $generated@@230)))
)))
(assert (forall (($generated@@231 Int) ) (! (= ($generated@@87 $generated@@6 ($generated@@10 ($generated@@32 $generated@@231))) ($generated@@25 $generated@@45 ($generated@@87 $generated@@6 ($generated@@10 $generated@@231))))
 :pattern ( ($generated@@87 $generated@@6 ($generated@@10 ($generated@@32 $generated@@231))))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@T) ) (! (= ($generated@@87 $generated@@233 ($generated@@25 $generated@@233 $generated@@232)) ($generated@@25 $generated@@45 ($generated@@87 $generated@@233 $generated@@232)))
 :pattern ( ($generated@@87 $generated@@233 ($generated@@25 $generated@@233 $generated@@232)))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (or ($generated@@27 $generated@@234 $generated@@236) (and (< 1 $generated@@22) ($generated@@28 $generated@@26 $generated@@236 ($generated@@29 $generated@@234)))) (<= ($generated@@32 0) ($generated@@23 $generated@@234 $generated@@235 $generated@@236)))
 :pattern ( ($generated@@23 $generated@@234 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> ($generated@@62 $generated@@240) (= ($generated@@61 $generated@@26 ($generated@@49 $generated@@238 $generated@@239) ($generated@@29 $generated@@237) $generated@@240)  (and ($generated@@114 $generated@@238 $generated@@237 $generated@@240) ($generated@@61 $generated@@26 $generated@@239 ($generated@@29 $generated@@237) $generated@@240))))
 :pattern ( ($generated@@61 $generated@@26 ($generated@@49 $generated@@238 $generated@@239) ($generated@@29 $generated@@237) $generated@@240))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@251 true))
(let (($generated@@252  (=> (and (=> (not ($generated@@69 $generated@@241 $generated@@42)) (not ($generated@@69 ($generated@@65 ($generated@@24 $generated@@67) $generated@@241) $generated@@42))) (= (ControlFlow 0 19) 16)) $generated@@251)))
(let (($generated@@253  (=> (and (not ($generated@@69 $generated@@241 $generated@@42)) ($generated@@61 $generated@@26 $generated@@241 ($generated@@29 ($generated@@29 $generated@@21)) $generated@@242)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (or ($generated@@69 $generated@@241 $generated@@241) (< ($generated@@153 $generated@@241) ($generated@@153 $generated@@241)))) (=> (or ($generated@@69 $generated@@241 $generated@@241) (< ($generated@@153 $generated@@241) ($generated@@153 $generated@@241))) (=> (or ($generated@@69 $generated@@241 $generated@@241) ($generated@@66 $generated@@241)) (=> (and (not ($generated@@69 ($generated@@65 ($generated@@24 $generated@@67) $generated@@241) $generated@@42)) (= (ControlFlow 0 17) 16)) $generated@@251)))))))
(let (($generated@@254  (=> (=> (and ($generated@@68 $generated@@241) ($generated@@68 ($generated@@31 $generated@@241))) (< ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) ($generated@@65 ($generated@@24 $generated@@67) $generated@@241)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) $generated@@241))) (and (=> (= (ControlFlow 0 23) 17) $generated@@253) (=> (= (ControlFlow 0 23) 19) $generated@@252)))))
(let (($generated@@255  (=> ($generated@@68 $generated@@241) (and (=> (= (ControlFlow 0 20) (- 0 22)) ($generated@@68 $generated@@241)) (=> ($generated@@68 $generated@@241) (=> (and ($generated@@68 ($generated@@31 $generated@@241)) ($generated@@61 $generated@@26 $generated@@241 ($generated@@29 ($generated@@29 $generated@@21)) $generated@@242)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (or ($generated@@69 $generated@@241 $generated@@241) (< ($generated@@153 $generated@@241) ($generated@@153 $generated@@241)))) (=> (or ($generated@@69 $generated@@241 $generated@@241) (< ($generated@@153 $generated@@241) ($generated@@153 $generated@@241))) (=> (or ($generated@@69 $generated@@241 $generated@@241) ($generated@@66 $generated@@241)) (=> (and (= $generated@@243 ($generated@@65 ($generated@@24 $generated@@67) $generated@@241)) ($generated@@61 $generated@@26 $generated@@243 ($generated@@29 ($generated@@29 $generated@@21)) $generated@@242)) (=> (and (and ($generated@@27 ($generated@@29 $generated@@21) ($generated@@65 ($generated@@24 $generated@@67) $generated@@241)) ($generated@@61 $generated@@26 $generated@@241 ($generated@@29 ($generated@@29 $generated@@21)) $generated@@242)) (and ($generated@@27 ($generated@@29 $generated@@21) $generated@@241) (< ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) ($generated@@65 ($generated@@24 $generated@@67) $generated@@241)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) $generated@@241)))) (and (=> (= (ControlFlow 0 20) 17) $generated@@253) (=> (= (ControlFlow 0 20) 19) $generated@@252)))))))))))))
(let (($generated@@256  (=> (and ($generated@@28 $generated@@26 ($generated@@65 ($generated@@24 $generated@@67) $generated@@241) ($generated@@29 ($generated@@29 $generated@@21))) ($generated@@61 $generated@@26 $generated@@241 ($generated@@29 ($generated@@29 $generated@@21)) $generated@@242)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (or ($generated@@69 $generated@@241 $generated@@241) (< ($generated@@153 $generated@@241) ($generated@@153 $generated@@241)))) (=> (or ($generated@@69 $generated@@241 $generated@@241) (< ($generated@@153 $generated@@241) ($generated@@153 $generated@@241))) (=> (or ($generated@@69 $generated@@241 $generated@@241) ($generated@@66 $generated@@241)) (=> (and (= $generated@@244 ($generated@@65 ($generated@@24 $generated@@67) $generated@@241)) ($generated@@61 $generated@@26 $generated@@244 ($generated@@29 ($generated@@29 $generated@@21)) $generated@@242)) (=> (and (and ($generated@@27 ($generated@@29 $generated@@21) ($generated@@65 ($generated@@24 $generated@@67) $generated@@241)) ($generated@@61 $generated@@26 $generated@@241 ($generated@@29 ($generated@@29 $generated@@21)) $generated@@242)) (and ($generated@@27 ($generated@@29 $generated@@21) $generated@@241) (<= ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) ($generated@@65 ($generated@@24 $generated@@67) $generated@@241)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 $generated@@67) $generated@@241)))) (and (=> (= (ControlFlow 0 24) 20) $generated@@255) (=> (= (ControlFlow 0 24) 23) $generated@@254))))))))))
(let (($generated@@257  (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 ($generated@@24 $generated@@67)) ($generated@@65 ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241))) (=> (<= ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 ($generated@@24 $generated@@67)) ($generated@@65 ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> (and ($generated@@68 $generated@@241) ($generated@@68 ($generated@@31 $generated@@241))) (< ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 ($generated@@24 $generated@@67)) ($generated@@65 ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241)))) (=> (=> (and ($generated@@68 $generated@@241) ($generated@@68 ($generated@@31 $generated@@241))) (< ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 ($generated@@24 $generated@@67)) ($generated@@65 ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241)) ($generated@@23 ($generated@@29 $generated@@21) ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> (not ($generated@@69 $generated@@241 $generated@@42)) (not ($generated@@69 ($generated@@65 ($generated@@24 ($generated@@24 $generated@@67)) $generated@@241) $generated@@42))))))))))
(let (($generated@@258  (=> (and (and (not (and ($generated@@68 $generated@@241) ($generated@@68 ($generated@@31 $generated@@241)))) (= ($generated@@65 ($generated@@24 $generated@@67) $generated@@241) $generated@@241)) (and ($generated@@28 $generated@@26 ($generated@@65 ($generated@@24 $generated@@67) $generated@@241) ($generated@@29 ($generated@@29 $generated@@21))) (= (ControlFlow 0 12) 2))) $generated@@257)))
(let (($generated@@259  (=> (and ($generated@@68 $generated@@241) ($generated@@68 ($generated@@31 $generated@@241))) (and (=> (= (ControlFlow 0 5) (- 0 11)) ($generated@@68 $generated@@241)) (=> ($generated@@68 $generated@@241) (=> (and (= $generated@@245 ($generated@@86 $generated@@26 ($generated@@46 $generated@@241))) ($generated@@61 $generated@@26 $generated@@245 ($generated@@29 $generated@@21) $generated@@242)) (and (=> (= (ControlFlow 0 5) (- 0 10)) ($generated@@68 $generated@@241)) (=> ($generated@@68 $generated@@241) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@68 ($generated@@31 $generated@@241))) (=> ($generated@@68 ($generated@@31 $generated@@241)) (=> (= $generated@@246 ($generated@@86 $generated@@26 ($generated@@46 ($generated@@31 $generated@@241)))) (=> (and ($generated@@61 $generated@@26 $generated@@246 ($generated@@29 $generated@@21) $generated@@242) ($generated@@44 ($generated@@86 $generated@@26 ($generated@@46 $generated@@241)) ($generated@@86 $generated@@26 ($generated@@46 ($generated@@31 $generated@@241))))) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@68 $generated@@241)) (=> ($generated@@68 $generated@@241) (and (=> (= (ControlFlow 0 5) (- 0 7)) ($generated@@68 ($generated@@31 $generated@@241))) (=> ($generated@@68 ($generated@@31 $generated@@241)) (=> (and (= $generated@@247 ($generated@@31 ($generated@@31 $generated@@241))) ($generated@@61 $generated@@26 $generated@@247 ($generated@@29 ($generated@@29 $generated@@21)) $generated@@242)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@153 $generated@@247) ($generated@@153 $generated@@241))) (=> (< ($generated@@153 $generated@@247) ($generated@@153 $generated@@241)) (=> (and ($generated@@66 ($generated@@31 ($generated@@31 $generated@@241))) (= ($generated@@65 ($generated@@24 $generated@@67) $generated@@241) ($generated@@49 ($generated@@87 $generated@@26 ($generated@@43 ($generated@@24 $generated@@67) ($generated@@86 $generated@@26 ($generated@@46 $generated@@241)) ($generated@@86 $generated@@26 ($generated@@46 ($generated@@31 $generated@@241))))) ($generated@@65 ($generated@@24 $generated@@67) ($generated@@31 ($generated@@31 $generated@@241)))))) (=> (and (and ($generated@@44 ($generated@@86 $generated@@26 ($generated@@46 $generated@@241)) ($generated@@86 $generated@@26 ($generated@@46 ($generated@@31 $generated@@241)))) ($generated@@66 ($generated@@31 ($generated@@31 $generated@@241)))) (and ($generated@@28 $generated@@26 ($generated@@65 ($generated@@24 $generated@@67) $generated@@241) ($generated@@29 ($generated@@29 $generated@@21))) (= (ControlFlow 0 5) 2))) $generated@@257)))))))))))))))))))))
(let (($generated@@260  (=> (not ($generated@@68 $generated@@241)) (and (=> (= (ControlFlow 0 15) 5) $generated@@259) (=> (= (ControlFlow 0 15) 12) $generated@@258)))))
(let (($generated@@261  (=> ($generated@@68 $generated@@241) (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@68 $generated@@241)) (=> ($generated@@68 $generated@@241) (and (=> (= (ControlFlow 0 13) 5) $generated@@259) (=> (= (ControlFlow 0 13) 12) $generated@@258)))))))
(let (($generated@@262  (=> (= $generated@@248 ($generated@@166 $generated@@249 $generated@@242 $generated false)) (and (and (=> (= (ControlFlow 0 26) 24) $generated@@256) (=> (= (ControlFlow 0 26) 13) $generated@@261)) (=> (= (ControlFlow 0 26) 15) $generated@@260)))))
(let (($generated@@263  (=> (and (and (and ($generated@@62 $generated@@242) ($generated@@250 $generated@@242)) ($generated@@28 $generated@@26 $generated@@241 ($generated@@29 ($generated@@29 $generated@@21)))) (and (= 3 $generated@@22) (= (ControlFlow 0 27) 26))) $generated@@262)))
$generated@@263))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
