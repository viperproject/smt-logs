(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@45 () Int)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (Int) T@U)
(declare-fun $generated@@50 (Int) Int)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@143 (T@U) Bool)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@1))
(assert (= ($generated@@26 $generated@@0) $generated@@2))
(assert (= ($generated@@10 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@29 $generated@@31 $generated@@32) $generated@@30)  (and ($generated@@27 $generated@@28 $generated@@31 $generated@@30) ($generated@@27 $generated@@28 $generated@@32 $generated@@30)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@29 $generated@@31 $generated@@32) $generated@@30))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and ($generated@@34 $generated@@36) ($generated@@34 $generated@@37)) (= ($generated@@33 $generated@@36 $generated@@37) (= ($generated@@35 $generated@@36) ($generated@@35 $generated@@37))))
 :pattern ( ($generated@@33 $generated@@36 $generated@@37) ($generated@@34 $generated@@36))
 :pattern ( ($generated@@33 $generated@@36 $generated@@37) ($generated@@34 $generated@@37))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (and (<= 0 $generated@@44) (< $generated@@44 ($generated@@40 $generated@@43))) (< ($generated@@41 ($generated@@42 $generated@@28 ($generated@@38 $generated@@43 $generated@@44))) ($generated@@41 ($generated@@39 $generated@@43))))
 :pattern ( ($generated@@38 $generated@@43 $generated@@44) ($generated@@39 $generated@@43))
)))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@48 ($generated@@47 $generated@@28 $generated@@51) ($generated@@47 $generated@@28 $generated@@52)) (and (< 2 $generated@@45) (and ($generated@@27 $generated@@28 $generated@@51 $generated@@30) ($generated@@27 $generated@@28 $generated@@52 $generated@@30)))) (= ($generated@@46 ($generated@@47 $generated@@28 $generated@@51) ($generated@@47 $generated@@28 $generated@@52)) (ite  (and ($generated@@34 ($generated@@47 $generated@@28 $generated@@51)) ($generated@@34 ($generated@@47 $generated@@28 $generated@@52))) ($generated@@49 ($generated@@50 (+ ($generated@@35 ($generated@@47 $generated@@28 $generated@@51)) ($generated@@35 ($generated@@47 $generated@@28 $generated@@52))))) (ite ($generated@@34 ($generated@@47 $generated@@28 $generated@@51)) (ite (= ($generated@@50 ($generated@@35 ($generated@@47 $generated@@28 $generated@@51))) ($generated@@50 0)) $generated@@52 ($generated@@29 ($generated@@47 $generated@@28 $generated@@51) ($generated@@47 $generated@@28 $generated@@52))) (ite ($generated@@34 ($generated@@47 $generated@@28 $generated@@52)) (ite (= ($generated@@50 ($generated@@35 ($generated@@47 $generated@@28 $generated@@52))) ($generated@@50 0)) $generated@@51 ($generated@@29 ($generated@@47 $generated@@28 $generated@@51) ($generated@@47 $generated@@28 $generated@@52))) ($generated@@29 ($generated@@47 $generated@@28 $generated@@51) ($generated@@47 $generated@@28 $generated@@52)))))))
 :weight 3
 :pattern ( ($generated@@46 ($generated@@47 $generated@@28 $generated@@51) ($generated@@47 $generated@@28 $generated@@52)))
))))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (or ($generated@@48 $generated@@53 $generated@@54) (and (< 2 $generated@@45) (and ($generated@@27 $generated@@28 $generated@@53 $generated@@30) ($generated@@27 $generated@@28 $generated@@54 $generated@@30)))) ($generated@@27 $generated@@28 ($generated@@46 $generated@@53 $generated@@54) $generated@@30))
 :pattern ( ($generated@@46 $generated@@53 $generated@@54))
))))
(assert (= ($generated@@40 $generated@@55) 0))
(assert (= ($generated@@10 $generated@@62) 4))
(assert  (=> (<= 3 $generated@@45) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@58 ($generated@@47 $generated@@28 $generated@@64)) (and (< 3 $generated@@45) ($generated@@27 $generated@@28 $generated@@64 $generated@@30))) (and (=> (not ($generated@@15 ($generated@@47 $generated@@11 ($generated@@14 ($generated@@34 ($generated@@47 $generated@@28 $generated@@64)))))) (=> (not ($generated@@15 ($generated@@47 $generated@@11 ($generated@@14 ($generated@@59 ($generated@@47 $generated@@28 $generated@@64)))))) (let (($generated@@65 ($generated@@47 $generated@@28 ($generated@@60 ($generated@@47 $generated@@28 $generated@@64)))))
(let (($generated@@66 ($generated@@47 $generated@@28 ($generated@@61 ($generated@@47 $generated@@28 $generated@@64)))))
 (and (and ($generated@@58 $generated@@66) ($generated@@58 $generated@@65)) ($generated@@48 ($generated@@56 ($generated@@57 $generated@@63) $generated@@66) ($generated@@56 ($generated@@57 $generated@@63) $generated@@65))))))) (= ($generated@@56 ($generated@@57 $generated@@63) ($generated@@47 $generated@@28 $generated@@64)) (ite ($generated@@34 ($generated@@47 $generated@@28 $generated@@64)) ($generated@@47 $generated@@28 $generated@@64) (ite ($generated@@59 ($generated@@47 $generated@@28 $generated@@64)) ($generated@@47 $generated@@28 $generated@@64) (let (($generated@@67 ($generated@@47 $generated@@28 ($generated@@60 ($generated@@47 $generated@@28 $generated@@64)))))
(let (($generated@@68 ($generated@@47 $generated@@28 ($generated@@61 ($generated@@47 $generated@@28 $generated@@64)))))
($generated@@47 $generated@@28 ($generated@@46 ($generated@@47 $generated@@28 ($generated@@56 ($generated@@57 $generated@@63) $generated@@68)) ($generated@@47 $generated@@28 ($generated@@56 ($generated@@57 $generated@@63) $generated@@67)))))))))))
 :weight 3
 :pattern ( ($generated@@56 ($generated@@57 $generated@@63) ($generated@@47 $generated@@28 $generated@@64)))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@33 $generated@@69 $generated@@70) (= $generated@@69 $generated@@70))
 :pattern ( ($generated@@33 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@50 $generated@@71) $generated@@71)
 :pattern ( ($generated@@50 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@47 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@47 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@34 $generated@@75) (= ($generated@@74 $generated@@75) $generated@@6))
 :pattern ( ($generated@@34 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@59 $generated@@76) (= ($generated@@74 $generated@@76) $generated@@7))
 :pattern ( ($generated@@59 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@77 $generated@@78) (= ($generated@@74 $generated@@78) $generated@@8))
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@79 $generated@@80 $generated@@81)  (and (= ($generated@@40 $generated@@80) ($generated@@40 $generated@@81)) (forall (($generated@@82 Int) ) (!  (=> (and (<= 0 $generated@@82) (< $generated@@82 ($generated@@40 $generated@@80))) (= ($generated@@38 $generated@@80 $generated@@82) ($generated@@38 $generated@@81 $generated@@82)))
 :pattern ( ($generated@@38 $generated@@80 $generated@@82))
 :pattern ( ($generated@@38 $generated@@81 $generated@@82))
))))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@42 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@42 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@77 $generated@@86) (exists (($generated@@87 T@U) ($generated@@88 T@U) ) (= $generated@@86 ($generated@@29 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@77 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@34 $generated@@89) (exists (($generated@@90 Int) ) (= $generated@@89 ($generated@@49 $generated@@90))))
 :pattern ( ($generated@@34 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@59 $generated@@91) (exists (($generated@@92 T@U) ) (= $generated@@91 ($generated@@39 $generated@@92))))
 :pattern ( ($generated@@59 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@93 ($generated@@83 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@94 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@93 ($generated@@83 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@99 $generated@@100 $generated@@30) (and (= ($generated@@83 $generated@@28 ($generated@@42 $generated@@28 $generated@@100)) $generated@@100) ($generated@@27 $generated@@28 ($generated@@42 $generated@@28 $generated@@100) $generated@@30)))
 :pattern ( ($generated@@99 $generated@@100 $generated@@30))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@59 $generated@@102) ($generated@@59 $generated@@103)) (= ($generated@@33 $generated@@102 $generated@@103) ($generated@@79 ($generated@@101 $generated@@102) ($generated@@101 $generated@@103))))
 :pattern ( ($generated@@33 $generated@@102 $generated@@103) ($generated@@59 $generated@@102))
 :pattern ( ($generated@@33 $generated@@102 $generated@@103) ($generated@@59 $generated@@103))
)))
(assert  (=> (<= 3 $generated@@45) (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@58 $generated@@105) (and (< 3 $generated@@45) ($generated@@27 $generated@@28 $generated@@105 $generated@@30))) (and (=> (not ($generated@@34 $generated@@105)) (=> (not ($generated@@59 $generated@@105)) (let (($generated@@106 ($generated@@60 $generated@@105)))
(let (($generated@@107 ($generated@@61 $generated@@105)))
 (and (and ($generated@@58 $generated@@107) ($generated@@58 $generated@@106)) ($generated@@48 ($generated@@56 $generated@@104 $generated@@107) ($generated@@56 $generated@@104 $generated@@106))))))) (= ($generated@@56 ($generated@@57 $generated@@104) $generated@@105) (ite ($generated@@34 $generated@@105) $generated@@105 (ite ($generated@@59 $generated@@105) $generated@@105 (let (($generated@@108 ($generated@@60 $generated@@105)))
(let (($generated@@109 ($generated@@61 $generated@@105)))
($generated@@46 ($generated@@56 $generated@@104 $generated@@109) ($generated@@56 $generated@@104 $generated@@108)))))))))
 :pattern ( ($generated@@56 ($generated@@57 $generated@@104) $generated@@105))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@79 $generated@@110 $generated@@111) (= $generated@@110 $generated@@111))
 :pattern ( ($generated@@79 $generated@@110 $generated@@111))
)))
(assert  (=> (<= 3 $generated@@45) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@58 $generated@@113) (and (< 3 $generated@@45) ($generated@@27 $generated@@28 $generated@@113 $generated@@30))) ($generated@@27 $generated@@28 ($generated@@56 $generated@@112 $generated@@113) $generated@@30))
 :pattern ( ($generated@@56 $generated@@112 $generated@@113))
))))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@99 $generated@@114 $generated@@0) (and (= ($generated@@83 $generated@@12 ($generated@@42 $generated@@12 $generated@@114)) $generated@@114) ($generated@@27 $generated@@12 ($generated@@42 $generated@@12 $generated@@114) $generated@@0)))
 :pattern ( ($generated@@99 $generated@@114 $generated@@0))
)))
(assert (= ($generated@@10 $generated@@115) 5))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@99 $generated@@116 $generated) (and (= ($generated@@83 $generated@@115 ($generated@@42 $generated@@115 $generated@@116)) $generated@@116) ($generated@@27 $generated@@115 ($generated@@42 $generated@@115 $generated@@116) $generated)))
 :pattern ( ($generated@@99 $generated@@116 $generated))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@77 $generated@@117) ($generated@@77 $generated@@118)) (= ($generated@@33 $generated@@117 $generated@@118)  (and ($generated@@33 ($generated@@61 $generated@@117) ($generated@@61 $generated@@118)) ($generated@@33 ($generated@@60 $generated@@117) ($generated@@60 $generated@@118)))))
 :pattern ( ($generated@@33 $generated@@117 $generated@@118) ($generated@@77 $generated@@117))
 :pattern ( ($generated@@33 $generated@@117 $generated@@118) ($generated@@77 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@99 ($generated@@83 $generated@@121 $generated@@119) $generated@@120) ($generated@@27 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@99 ($generated@@83 $generated@@121 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (<= 0 ($generated@@40 $generated@@122))
 :pattern ( ($generated@@40 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@74 ($generated@@29 $generated@@123 $generated@@124)) $generated@@8)
 :pattern ( ($generated@@29 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@61 ($generated@@29 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@29 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@60 ($generated@@29 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@29 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@94 $generated@@62 $generated@@130 ($generated@@129 $generated@@131) $generated@@132) (forall (($generated@@133 Int) ) (!  (=> (and (<= 0 $generated@@133) (< $generated@@133 ($generated@@40 $generated@@130))) ($generated@@93 ($generated@@38 $generated@@130 $generated@@133) $generated@@131 $generated@@132))
 :pattern ( ($generated@@38 $generated@@130 $generated@@133))
)))
 :pattern ( ($generated@@94 $generated@@62 $generated@@130 ($generated@@129 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@129 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@129 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@26 ($generated@@129 $generated@@136)) $generated@@3)
 :pattern ( ($generated@@129 $generated@@136))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@74 ($generated@@49 $generated@@137)) $generated@@6)
 :pattern ( ($generated@@49 $generated@@137))
)))
(assert (forall (($generated@@138 Int) ) (! (= ($generated@@35 ($generated@@49 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@49 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@74 ($generated@@39 $generated@@139)) $generated@@7)
 :pattern ( ($generated@@39 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@101 ($generated@@39 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@39 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@42 $generated@@142 ($generated@@83 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@83 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@143 $generated@@144) (or (or ($generated@@34 $generated@@144) ($generated@@59 $generated@@144)) ($generated@@77 $generated@@144)))
 :pattern ( ($generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (< ($generated@@41 $generated@@145) ($generated@@41 ($generated@@29 $generated@@145 $generated@@146)))
 :pattern ( ($generated@@29 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (< ($generated@@41 $generated@@148) ($generated@@41 ($generated@@29 $generated@@147 $generated@@148)))
 :pattern ( ($generated@@29 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@56 ($generated@@57 $generated@@149) $generated@@150) ($generated@@56 $generated@@149 $generated@@150))
 :pattern ( ($generated@@56 ($generated@@57 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@151 Int) ) (! (= ($generated@@27 $generated@@28 ($generated@@49 $generated@@151) $generated@@30) ($generated@@27 $generated@@12 ($generated@@16 $generated@@151) $generated@@0))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@49 $generated@@151) $generated@@30))
)))
(assert (forall (($generated@@153 T@U) ) (! (< ($generated@@152 $generated@@153) ($generated@@41 ($generated@@39 $generated@@153)))
 :pattern ( ($generated@@39 $generated@@153))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@154 $generated@@165 $generated@@166 $generated@@167 ($generated@@161 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@170 $generated@@171) $generated@@168)
 :weight 0
)) (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@154 $generated@@172 $generated@@173 $generated@@174 ($generated@@161 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@154 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@154 $generated@@181 $generated@@182 $generated@@183 ($generated@@161 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)))) (= ($generated@@10 $generated@@155) 6)) (= ($generated@@10 $generated@@156) 7)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@158 $generated@@190 $generated@@191 ($generated@@162 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@192) $generated@@194) $generated@@192)
 :weight 0
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@199 $generated@@200) (= ($generated@@158 $generated@@195 $generated@@196 ($generated@@162 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@197) $generated@@200) ($generated@@158 $generated@@195 $generated@@196 $generated@@198 $generated@@200)))
 :weight 0
))) (= ($generated@@10 $generated@@159) 8)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@10 ($generated@@160 $generated@@201 $generated@@202)) 9))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@163 ($generated@@160 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@160 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@164 ($generated@@160 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@160 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@15 ($generated@@154 $generated@@155 $generated@@156 $generated@@11 ($generated@@157 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (or (not (= $generated@@211 $generated@@207)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@158 $generated@@156 $generated@@159 ($generated@@158 $generated@@155 ($generated@@160 $generated@@156 $generated@@159) $generated@@208 $generated@@211) $generated@@209)))) $generated@@210))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156 $generated@@11 ($generated@@157 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@213 $generated@@215) (and ($generated@@34 $generated@@214) ($generated@@94 $generated@@28 $generated@@214 $generated@@30 $generated@@215))) ($generated@@94 $generated@@12 ($generated@@16 ($generated@@35 $generated@@214)) $generated@@0 $generated@@215))
 :pattern ( ($generated@@94 $generated@@12 ($generated@@16 ($generated@@35 $generated@@214)) $generated@@0 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@216 $generated@@30) (or (or ($generated@@34 $generated@@216) ($generated@@59 $generated@@216)) ($generated@@77 $generated@@216)))
 :pattern ( ($generated@@77 $generated@@216) ($generated@@27 $generated@@28 $generated@@216 $generated@@30))
 :pattern ( ($generated@@59 $generated@@216) ($generated@@27 $generated@@28 $generated@@216 $generated@@30))
 :pattern ( ($generated@@34 $generated@@216) ($generated@@27 $generated@@28 $generated@@216 $generated@@30))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@99 $generated@@217 ($generated@@129 $generated@@218)) (and (= ($generated@@83 $generated@@62 ($generated@@42 $generated@@62 $generated@@217)) $generated@@217) ($generated@@27 $generated@@62 ($generated@@42 $generated@@62 $generated@@217) ($generated@@129 $generated@@218))))
 :pattern ( ($generated@@99 $generated@@217 ($generated@@129 $generated@@218)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and ($generated@@213 $generated@@220) ($generated@@27 $generated@@28 $generated@@219 $generated@@30)) ($generated@@94 $generated@@28 $generated@@219 $generated@@30 $generated@@220))
 :pattern ( ($generated@@94 $generated@@28 $generated@@219 $generated@@30 $generated@@220))
)))
(assert (= ($generated@@26 $generated@@30) $generated@@5))
(assert (= ($generated@@221 $generated@@30) $generated@@9))
(assert (forall (($generated@@222 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@39 $generated@@222) $generated@@30) ($generated@@27 $generated@@62 $generated@@222 ($generated@@129 $generated)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@39 $generated@@222) $generated@@30))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and ($generated@@213 $generated@@224) (and ($generated@@59 $generated@@223) ($generated@@94 $generated@@28 $generated@@223 $generated@@30 $generated@@224))) ($generated@@94 $generated@@62 ($generated@@101 $generated@@223) ($generated@@129 $generated) $generated@@224))
 :pattern ( ($generated@@94 $generated@@62 ($generated@@101 $generated@@223) ($generated@@129 $generated) $generated@@224))
)))
(assert  (=> (<= 2 $generated@@45) (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (or ($generated@@48 $generated@@225 $generated@@226) (and (< 2 $generated@@45) (and ($generated@@27 $generated@@28 $generated@@225 $generated@@30) ($generated@@27 $generated@@28 $generated@@226 $generated@@30)))) (= ($generated@@46 $generated@@225 $generated@@226) (ite  (and ($generated@@34 $generated@@225) ($generated@@34 $generated@@226)) ($generated@@49 (+ ($generated@@35 $generated@@225) ($generated@@35 $generated@@226))) (ite ($generated@@34 $generated@@225) (ite (= ($generated@@35 $generated@@225) ($generated@@50 0)) $generated@@226 ($generated@@29 $generated@@225 $generated@@226)) (ite ($generated@@34 $generated@@226) (ite (= ($generated@@35 $generated@@226) ($generated@@50 0)) $generated@@225 ($generated@@29 $generated@@225 $generated@@226)) ($generated@@29 $generated@@225 $generated@@226))))))
 :pattern ( ($generated@@46 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and ($generated@@213 $generated@@228) (and ($generated@@77 $generated@@227) ($generated@@94 $generated@@28 $generated@@227 $generated@@30 $generated@@228))) ($generated@@94 $generated@@28 ($generated@@61 $generated@@227) $generated@@30 $generated@@228))
 :pattern ( ($generated@@94 $generated@@28 ($generated@@61 $generated@@227) $generated@@30 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (and ($generated@@213 $generated@@230) (and ($generated@@77 $generated@@229) ($generated@@94 $generated@@28 $generated@@229 $generated@@30 $generated@@230))) ($generated@@94 $generated@@28 ($generated@@60 $generated@@229) $generated@@30 $generated@@230))
 :pattern ( ($generated@@94 $generated@@28 ($generated@@60 $generated@@229) $generated@@30 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= ($generated@@29 ($generated@@47 $generated@@28 $generated@@231) ($generated@@47 $generated@@28 $generated@@232)) ($generated@@47 $generated@@28 ($generated@@29 $generated@@231 $generated@@232)))
 :pattern ( ($generated@@29 ($generated@@47 $generated@@28 $generated@@231) ($generated@@47 $generated@@28 $generated@@232)))
)))
(assert (forall (($generated@@233 Int) ) (! (= ($generated@@83 $generated@@12 ($generated@@16 ($generated@@50 $generated@@233))) ($generated@@47 $generated@@159 ($generated@@83 $generated@@12 ($generated@@16 $generated@@233))))
 :pattern ( ($generated@@83 $generated@@12 ($generated@@16 ($generated@@50 $generated@@233))))
)))
(assert (forall (($generated@@234 Int) ) (! (= ($generated@@49 ($generated@@50 $generated@@234)) ($generated@@47 $generated@@28 ($generated@@49 $generated@@234)))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@234)))
)))
(assert (forall (($generated@@235 T@U) ) (! (= ($generated@@39 ($generated@@47 $generated@@62 $generated@@235)) ($generated@@47 $generated@@28 ($generated@@39 $generated@@235)))
 :pattern ( ($generated@@39 ($generated@@47 $generated@@62 $generated@@235)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@T) ) (! (= ($generated@@83 $generated@@237 ($generated@@47 $generated@@237 $generated@@236)) ($generated@@47 $generated@@159 ($generated@@83 $generated@@237 $generated@@236)))
 :pattern ( ($generated@@83 $generated@@237 ($generated@@47 $generated@@237 $generated@@236)))
)))
(assert (forall (($generated@@238 T@U) ) (!  (=> (= ($generated@@40 $generated@@238) 0) (= $generated@@238 $generated@@55))
 :pattern ( ($generated@@40 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! ($generated@@94 $generated@@12 $generated@@240 $generated@@0 $generated@@239)
 :pattern ( ($generated@@94 $generated@@12 $generated@@240 $generated@@0 $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! ($generated@@94 $generated@@115 $generated@@242 $generated $generated@@241)
 :pattern ( ($generated@@94 $generated@@115 $generated@@242 $generated $generated@@241))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= ($generated@@27 $generated@@62 $generated@@243 ($generated@@129 $generated@@244)) (forall (($generated@@245 Int) ) (!  (=> (and (<= 0 $generated@@245) (< $generated@@245 ($generated@@40 $generated@@243))) ($generated@@99 ($generated@@38 $generated@@243 $generated@@245) $generated@@244))
 :pattern ( ($generated@@38 $generated@@243 $generated@@245))
)))
 :pattern ( ($generated@@27 $generated@@62 $generated@@243 ($generated@@129 $generated@@244)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 Int) ) (!  (=> (and (<= 0 $generated@@247) (< $generated@@247 ($generated@@40 $generated@@246))) (< ($generated@@41 ($generated@@42 $generated@@28 ($generated@@38 $generated@@246 $generated@@247))) ($generated@@152 $generated@@246)))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@28 ($generated@@38 $generated@@246 $generated@@247))))
)))
(assert (forall (($generated@@248 T@U) ) (! ($generated@@27 $generated@@12 $generated@@248 $generated@@0)
 :pattern ( ($generated@@27 $generated@@12 $generated@@248 $generated@@0))
)))
(assert (forall (($generated@@249 T@U) ) (! ($generated@@27 $generated@@115 $generated@@249 $generated)
 :pattern ( ($generated@@27 $generated@@115 $generated@@249 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 (T@U) Bool)
(declare-fun $generated@@256 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@257  (=> (and (= $generated@@250 ($generated@@157 $generated@@251 $generated@@252 $generated@@4 false)) ($generated@@143 $generated@@253)) (=> (and (and (and ($generated@@213 $generated@@254) ($generated@@255 $generated@@254)) (= $generated@@252 $generated@@254)) (and (forall (($generated@@258 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@28 $generated@@258 $generated@@30) ($generated@@15 ($generated@@47 $generated@@11 ($generated@@14 true)))) (< ($generated@@41 $generated@@258) ($generated@@41 $generated@@253))) ($generated@@33 ($generated@@56 ($generated@@57 $generated@@256) ($generated@@56 ($generated@@57 $generated@@256) $generated@@258)) ($generated@@56 ($generated@@57 $generated@@256) $generated@@258)))
 :pattern ( ($generated@@56 ($generated@@57 $generated@@256) ($generated@@56 ($generated@@57 $generated@@256) $generated@@258)))
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@33 ($generated@@56 ($generated@@57 ($generated@@57 $generated@@256)) ($generated@@56 ($generated@@57 ($generated@@57 $generated@@256)) $generated@@253)) ($generated@@56 ($generated@@57 ($generated@@57 $generated@@256)) $generated@@253))))))
(let (($generated@@259  (=> (and ($generated@@213 $generated@@252) ($generated@@255 $generated@@252)) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@253 $generated@@30) ($generated@@94 $generated@@28 $generated@@253 $generated@@30 $generated@@252)) ($generated@@143 $generated@@253)) (and (= 4 $generated@@45) (= (ControlFlow 0 3) 2))) $generated@@257))))
$generated@@259)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
