(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@T T@T) T@T)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@T) T@T)
(declare-fun $generated@@37 (T@T) T@T)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U T@U) Bool)
(declare-fun $generated@@68 (T@U T@U Int) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@73 (T@U T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@89 () Int)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@U Int) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U Int) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) 0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@38 T@T) ($generated@@39 T@T) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@29 $generated@@38 $generated@@39 ($generated@@35 $generated@@38 $generated@@39 $generated@@41 $generated@@42 $generated@@40) $generated@@42) $generated@@40)
 :weight 0
)) (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (or (= $generated@@47 $generated@@48) (= ($generated@@29 $generated@@43 $generated@@44 ($generated@@35 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@48) ($generated@@29 $generated@@43 $generated@@44 $generated@@46 $generated@@48)))
 :weight 0
))) (= ($generated@@5 $generated@@30) 3)) (= ($generated@@5 $generated@@31) 4)) (= ($generated@@5 $generated@@32) 5)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ) (= ($generated@@5 ($generated@@33 $generated@@49 $generated@@50)) 6))) (forall (($generated@@51 T@T) ($generated@@52 T@T) ) (! (= ($generated@@36 ($generated@@33 $generated@@51 $generated@@52)) $generated@@51)
 :pattern ( ($generated@@33 $generated@@51 $generated@@52))
))) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (! (= ($generated@@37 ($generated@@33 $generated@@53 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@33 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@28 $generated@@55 $generated@@56) (forall (($generated@@57 T@U) ) (!  (=> ($generated@@10 ($generated@@34 $generated@@6 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@55 $generated@@57) $generated@@2))) ($generated@@10 ($generated@@34 $generated@@6 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@56 $generated@@57) $generated@@2))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@56 $generated@@57) $generated@@2))
)))
 :pattern ( ($generated@@28 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@59 Int) ) (! (= ($generated@@58 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@34 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@34 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@7 $generated@@67 $generated@@23) (<= ($generated@@58 0) ($generated@@12 $generated@@67)))
 :pattern ( ($generated@@66 $generated@@7 $generated@@67 $generated@@23))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 Int) ) (! (= ($generated@@68 ($generated@@69 $generated@@70) $generated@@71 $generated@@72) ($generated@@68 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@68 ($generated@@69 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@63 $generated@@77 $generated@@74) $generated@@75 $generated@@76) ($generated@@22 $generated@@77 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@73 ($generated@@63 $generated@@77 $generated@@74) $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@28 $generated@@78 $generated@@79) (=> ($generated@@73 $generated@@80 $generated@@81 $generated@@78) ($generated@@73 $generated@@80 $generated@@81 $generated@@79)))
 :pattern ( ($generated@@28 $generated@@78 $generated@@79) ($generated@@73 $generated@@80 $generated@@81 $generated@@78))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (!  (=> ($generated@@28 $generated@@82 $generated@@83) (=> ($generated@@22 $generated@@86 $generated@@84 $generated@@85 $generated@@82) ($generated@@22 $generated@@86 $generated@@84 $generated@@85 $generated@@83)))
 :pattern ( ($generated@@28 $generated@@82 $generated@@83) ($generated@@22 $generated@@86 $generated@@84 $generated@@85 $generated@@82))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@23) (and (= ($generated@@63 $generated@@7 ($generated@@34 $generated@@7 $generated@@88)) $generated@@88) ($generated@@66 $generated@@7 ($generated@@34 $generated@@7 $generated@@88) $generated@@23)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@23))
)))
(assert (= ($generated@@5 $generated@@90) 7))
(assert  (=> (<= 0 $generated@@89) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 Int) ) (!  (=> (or ($generated@@91 ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 $generated@@96)) (and (< 0 $generated@@89) (and (and ($generated@@66 $generated@@90 $generated@@95 ($generated@@92 $generated)) (<= ($generated@@58 0) $generated@@96)) (<= ($generated@@58 $generated@@96) ($generated@@26 ($generated@@60 $generated@@90 $generated@@95)))))) (and (=> (not ($generated@@10 ($generated@@60 $generated@@6 ($generated@@9 (< $generated@@96 2))))) (=> (< ($generated@@12 ($generated@@34 $generated@@7 ($generated@@93 ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 (- $generated@@96 2))))) ($generated@@12 ($generated@@34 $generated@@7 ($generated@@93 ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 (- $generated@@96 1)))))) ($generated@@91 ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 (- $generated@@96 1))))) (= ($generated@@68 ($generated@@69 $generated@@94) ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 $generated@@96))  (or (< $generated@@96 2) (and (< ($generated@@12 ($generated@@34 $generated@@7 ($generated@@93 ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 (- $generated@@96 2))))) ($generated@@12 ($generated@@34 $generated@@7 ($generated@@93 ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 (- $generated@@96 1)))))) ($generated@@68 ($generated@@69 $generated@@94) ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 (- $generated@@96 1))))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@69 $generated@@94) ($generated@@60 $generated@@90 $generated@@95) ($generated@@58 $generated@@96)))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or (not (= $generated@@97 $generated@@99)) (not true)) (=> (and ($generated@@28 $generated@@97 $generated@@98) ($generated@@28 $generated@@98 $generated@@99)) ($generated@@28 $generated@@97 $generated@@99)))
 :pattern ( ($generated@@28 $generated@@97 $generated@@98) ($generated@@28 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@87 $generated@@100 $generated) (and (= ($generated@@63 $generated@@7 ($generated@@34 $generated@@7 $generated@@100)) $generated@@100) ($generated@@66 $generated@@7 ($generated@@34 $generated@@7 $generated@@100) $generated)))
 :pattern ( ($generated@@87 $generated@@100 $generated))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@87 ($generated@@63 $generated@@103 $generated@@101) $generated@@102) ($generated@@66 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@87 ($generated@@63 $generated@@103 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (<= 0 ($generated@@26 $generated@@104))
 :pattern ( ($generated@@26 $generated@@104))
)))
(assert  (=> (<= 0 $generated@@89) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 Int) ) (!  (=> (or ($generated@@91 $generated@@106 $generated@@107) (and (< 0 $generated@@89) (and (and ($generated@@66 $generated@@90 $generated@@106 ($generated@@92 $generated)) (<= ($generated@@58 0) $generated@@107)) (<= $generated@@107 ($generated@@26 $generated@@106))))) (and (=> (<= 2 $generated@@107) (=> (< ($generated@@12 ($generated@@34 $generated@@7 ($generated@@93 $generated@@106 (- $generated@@107 2)))) ($generated@@12 ($generated@@34 $generated@@7 ($generated@@93 $generated@@106 (- $generated@@107 1))))) ($generated@@91 $generated@@106 (- $generated@@107 1)))) (= ($generated@@68 ($generated@@69 $generated@@105) $generated@@106 $generated@@107)  (or (< $generated@@107 2) (and (< ($generated@@12 ($generated@@34 $generated@@7 ($generated@@93 $generated@@106 (- $generated@@107 2)))) ($generated@@12 ($generated@@34 $generated@@7 ($generated@@93 $generated@@106 (- $generated@@107 1))))) ($generated@@68 $generated@@105 $generated@@106 (- $generated@@107 1)))))))
 :pattern ( ($generated@@68 ($generated@@69 $generated@@105) $generated@@106 $generated@@107))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@22 $generated@@90 $generated@@108 ($generated@@92 $generated@@109) $generated@@110) (forall (($generated@@111 Int) ) (!  (=> (and (<= 0 $generated@@111) (< $generated@@111 ($generated@@26 $generated@@108))) ($generated@@73 ($generated@@93 $generated@@108 $generated@@111) $generated@@109 $generated@@110))
 :pattern ( ($generated@@93 $generated@@108 $generated@@111))
)))
 :pattern ( ($generated@@22 $generated@@90 $generated@@108 ($generated@@92 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@92 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@92 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@21 ($generated@@92 $generated@@114)) $generated@@1)
 :pattern ( ($generated@@92 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@34 $generated@@116 ($generated@@63 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@63 $generated@@116 $generated@@115))
)))
(assert  (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@117 $generated@@120 $generated@@121 $generated@@122 ($generated@@119 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@125 $generated@@126) $generated@@123)
 :weight 0
)) (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@117 $generated@@127 $generated@@128 $generated@@129 ($generated@@119 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@117 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@117 $generated@@136 $generated@@137 $generated@@138 ($generated@@119 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@117 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Bool) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@10 ($generated@@117 $generated@@32 $generated@@30 $generated@@6 ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))  (=> (and (or (not (= $generated@@149 $generated@@145)) (not true)) ($generated@@10 ($generated@@34 $generated@@6 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@146 $generated@@149) $generated@@147)))) $generated@@148))
 :pattern ( ($generated@@117 $generated@@32 $generated@@30 $generated@@6 ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@87 $generated@@151 ($generated@@92 $generated@@152)) (and (= ($generated@@63 $generated@@90 ($generated@@34 $generated@@90 $generated@@151)) $generated@@151) ($generated@@66 $generated@@90 ($generated@@34 $generated@@90 $generated@@151) ($generated@@92 $generated@@152))))
 :pattern ( ($generated@@87 $generated@@151 ($generated@@92 $generated@@152)))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@153 $generated@@23) $generated@@4))
(assert (forall (($generated@@154 Int) ) (! (= ($generated@@63 $generated@@7 ($generated@@11 ($generated@@58 $generated@@154))) ($generated@@60 $generated@@31 ($generated@@63 $generated@@7 ($generated@@11 $generated@@154))))
 :pattern ( ($generated@@63 $generated@@7 ($generated@@11 ($generated@@58 $generated@@154))))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@63 $generated@@156 ($generated@@60 $generated@@156 $generated@@155)) ($generated@@60 $generated@@31 ($generated@@63 $generated@@156 $generated@@155)))
 :pattern ( ($generated@@63 $generated@@156 ($generated@@60 $generated@@156 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> (= ($generated@@26 $generated@@157) 0) (= $generated@@157 $generated@@27))
 :pattern ( ($generated@@26 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! ($generated@@22 $generated@@7 $generated@@159 $generated $generated@@158)
 :pattern ( ($generated@@22 $generated@@7 $generated@@159 $generated $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@66 $generated@@90 $generated@@160 ($generated@@92 $generated@@161)) (forall (($generated@@162 Int) ) (!  (=> (and (<= 0 $generated@@162) (< $generated@@162 ($generated@@26 $generated@@160))) ($generated@@87 ($generated@@93 $generated@@160 $generated@@162) $generated@@161))
 :pattern ( ($generated@@93 $generated@@160 $generated@@162))
)))
 :pattern ( ($generated@@66 $generated@@90 $generated@@160 ($generated@@92 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! ($generated@@66 $generated@@7 $generated@@163 $generated)
 :pattern ( ($generated@@66 $generated@@7 $generated@@163 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 (T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@177 true))
(let (($generated@@178  (=> (and (and (<= ($generated@@58 0) $generated@@164) (< $generated@@164 $generated@@165)) ($generated@@22 $generated@@90 $generated@@166 ($generated@@92 $generated) $generated@@167)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@66 $generated@@7 ($generated@@11 $generated@@164) $generated@@23)) (=> ($generated@@66 $generated@@7 ($generated@@11 $generated@@164) $generated@@23) (=> ($generated@@22 $generated@@7 ($generated@@11 $generated@@164) $generated@@23 $generated@@167) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= $generated@@164 ($generated@@26 $generated@@166))) (=> (and (and (<= $generated@@164 ($generated@@26 $generated@@166)) ($generated@@91 $generated@@166 $generated@@164)) (and ($generated@@68 ($generated@@69 $generated@@168) $generated@@166 $generated@@164) (= (ControlFlow 0 3) 1))) $generated@@177))))))))
(let (($generated@@179  (=> (and (< $generated@@164 ($generated@@58 0)) (= (ControlFlow 0 7) 3)) $generated@@178)))
(let (($generated@@180  (=> (and (<= ($generated@@58 0) $generated@@164) (= (ControlFlow 0 6) 3)) $generated@@178)))
(let (($generated@@181  (=> (and (=> (and (<= ($generated@@58 0) $generated@@164) (< $generated@@164 $generated@@165)) ($generated@@68 ($generated@@69 $generated@@168) $generated@@166 $generated@@164)) (= (ControlFlow 0 2) 1)) $generated@@177)))
(let (($generated@@182  (=> (and (<= $generated@@169 $generated@@165) (<= $generated@@165 ($generated@@26 $generated@@166))) (and (and (=> (= (ControlFlow 0 8) 2) $generated@@181) (=> (= (ControlFlow 0 8) 6) $generated@@180)) (=> (= (ControlFlow 0 8) 7) $generated@@179)))))
(let (($generated@@183  (=> (and (< $generated@@165 $generated@@169) (= (ControlFlow 0 10) 8)) $generated@@182)))
(let (($generated@@184  (=> (and (<= $generated@@169 $generated@@165) (= (ControlFlow 0 9) 8)) $generated@@182)))
(let (($generated@@185  (=> (forall (($generated@@186 Int) ) (!  (=> (and (<= ($generated@@58 0) $generated@@186) (< $generated@@186 $generated@@169)) ($generated@@68 ($generated@@69 $generated@@168) $generated@@166 $generated@@186))
 :pattern ( ($generated@@68 ($generated@@69 $generated@@168) $generated@@166 $generated@@186))
)) (=> (and (and (and ($generated@@170 $generated@@167) ($generated@@171 $generated@@167)) (forall (($generated@@187 T@U) ) (!  (=> (and (or (not (= $generated@@187 $generated@@172)) (not true)) ($generated@@10 ($generated@@34 $generated@@6 ($generated@@29 $generated@@30 $generated@@31 ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@173 $generated@@187) $generated@@2)))) (= ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@167 $generated@@187) ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@173 $generated@@187)))
 :pattern ( ($generated@@29 $generated@@32 ($generated@@33 $generated@@30 $generated@@31) $generated@@167 $generated@@187))
))) (and ($generated@@28 $generated@@173 $generated@@167) (<= ($generated@@58 0) $generated@@165))) (and (=> (= (ControlFlow 0 11) 9) $generated@@184) (=> (= (ControlFlow 0 11) 10) $generated@@183))))))
(let (($generated@@188  (=> (and (and (<= ($generated@@58 0) $generated@@174) (< $generated@@174 $generated@@169)) ($generated@@22 $generated@@90 $generated@@166 ($generated@@92 $generated) $generated@@173)) (and (=> (= (ControlFlow 0 13) (- 0 15)) ($generated@@66 $generated@@7 ($generated@@11 $generated@@174) $generated@@23)) (=> ($generated@@66 $generated@@7 ($generated@@11 $generated@@174) $generated@@23) (=> ($generated@@22 $generated@@7 ($generated@@11 $generated@@174) $generated@@23 $generated@@173) (and (=> (= (ControlFlow 0 13) (- 0 14)) (<= $generated@@174 ($generated@@26 $generated@@166))) (=> (and (and (<= $generated@@174 ($generated@@26 $generated@@166)) ($generated@@91 $generated@@166 $generated@@174)) (and ($generated@@68 ($generated@@69 $generated@@168) $generated@@166 $generated@@174) (= (ControlFlow 0 13) 11))) $generated@@185))))))))
(let (($generated@@189  (=> (and (< $generated@@174 ($generated@@58 0)) (= (ControlFlow 0 17) 13)) $generated@@188)))
(let (($generated@@190  (=> (and (<= ($generated@@58 0) $generated@@174) (= (ControlFlow 0 16) 13)) $generated@@188)))
(let (($generated@@191  (=> (and (=> (and (<= ($generated@@58 0) $generated@@174) (< $generated@@174 $generated@@169)) ($generated@@68 ($generated@@69 $generated@@168) $generated@@166 $generated@@174)) (= (ControlFlow 0 12) 11)) $generated@@185)))
(let (($generated@@192  (=> (and (= $generated@@175 ($generated@@118 $generated@@172 $generated@@173 $generated@@2 false)) (< $generated@@169 ($generated@@26 $generated@@166))) (and (and (=> (= (ControlFlow 0 18) 12) $generated@@191) (=> (= (ControlFlow 0 18) 16) $generated@@190)) (=> (= (ControlFlow 0 18) 17) $generated@@189)))))
(let (($generated@@193  (=> (and (and (and ($generated@@170 $generated@@173) ($generated@@171 $generated@@173)) (and ($generated@@66 $generated@@90 $generated@@166 ($generated@@92 $generated)) ($generated@@22 $generated@@90 $generated@@166 ($generated@@92 $generated) $generated@@173))) (and (and (<= ($generated@@58 0) $generated@@169) (<= ($generated@@58 0) $generated@@176)) (and (= 1 $generated@@89) (= (ControlFlow 0 19) 18)))) $generated@@192)))
$generated@@193))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
