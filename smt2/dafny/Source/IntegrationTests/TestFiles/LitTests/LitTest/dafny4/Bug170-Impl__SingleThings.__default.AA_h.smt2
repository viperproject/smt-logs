(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U Int) Bool)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@34 (Int) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@42 (Int) Int)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@U Int) Bool)
(declare-fun $generated@@61 (Int) Bool)
(declare-fun $generated@@62 (Int) Bool)
(declare-fun $generated@@82 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@86 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@151 (T@T T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@24 T@U) ($generated@@25 Int) ($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@27) (=> ($generated@@21 $generated@@24 $generated@@26 $generated@@25) ($generated@@21 $generated@@24 $generated@@27 $generated@@25)))
 :pattern ( ($generated@@21 $generated@@24 $generated@@26 $generated@@25) ($generated@@22 $generated@@26 $generated@@28) ($generated@@22 $generated@@27 $generated@@28))
))))
(assert (= ($generated@@29 $generated) $generated@@1))
(assert (= ($generated@@29 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32)) ($generated@@23 $generated@@30 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@31 $generated@@32))
 :pattern ( ($generated@@23 $generated@@30 $generated@@31) ($generated@@23 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 Int) ($generated@@38 Int) ) (!  (=> (and (and (<= 0 $generated@@37) (<= 0 $generated@@38)) (<= (+ $generated@@37 $generated@@38) ($generated@@35 $generated@@36))) (= ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)) ($generated@@33 $generated@@36 ($generated@@34 (+ $generated@@37 $generated@@38)))))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@36 ($generated@@34 $generated@@37)) ($generated@@34 $generated@@38)))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@39 T@U) ($generated@@40 Int) ($generated@@41 T@U) ) (!  (=> (= $generated@@41 ($generated@@34 0)) (not ($generated@@21 $generated@@39 $generated@@41 $generated@@40)))
 :pattern ( ($generated@@21 $generated@@39 $generated@@41 $generated@@40))
))))
(assert (forall (($generated@@43 Int) ) (! (= ($generated@@42 $generated@@43) $generated@@43)
 :pattern ( ($generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 ($generated@@47 $generated@@50 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@47 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 Int) ) (! (= ($generated@@21 ($generated@@51 $generated@@52) $generated@@53 $generated@@54) ($generated@@21 $generated@@52 $generated@@53 $generated@@54))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@52) $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (and ($generated@@55 $generated@@57) (<= ($generated@@35 $generated@@57) ($generated@@35 $generated@@56))) (and (= ($generated@@55 ($generated@@33 $generated@@56 $generated@@57)) ($generated@@55 $generated@@56)) (= ($generated@@35 ($generated@@33 $generated@@56 $generated@@57)) (- ($generated@@35 $generated@@56) ($generated@@35 $generated@@57)))))
 :pattern ( ($generated@@33 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@58 Int) ) (!  (=> (<= 0 $generated@@58) (and ($generated@@55 ($generated@@34 $generated@@58)) (= ($generated@@35 ($generated@@34 $generated@@58)) $generated@@58)))
 :pattern ( ($generated@@34 $generated@@58))
)))
(assert (= ($generated@@4 $generated@@59) 3))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 Int) ) (!  (=> (or ($generated@@60 ($generated@@44 $generated@@59 $generated@@64) ($generated@@42 $generated@@65)) (< 2 $generated@@20)) (and (and (=> (< 0 ($generated@@35 $generated@@64)) (and ($generated@@61 ($generated@@42 $generated@@65)) (=> (not ($generated@@62 ($generated@@42 $generated@@65))) ($generated@@60 ($generated@@33 $generated@@64 ($generated@@34 1)) ($generated@@42 (+ $generated@@65 1)))))) (=> (=> (< 0 ($generated@@35 $generated@@64)) (or ($generated@@62 ($generated@@42 $generated@@65)) ($generated@@21 ($generated@@51 $generated@@63) ($generated@@33 $generated@@64 ($generated@@34 1)) ($generated@@42 (+ $generated@@65 1))))) (=> (= ($generated@@42 0) ($generated@@35 $generated@@64)) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@22 $generated@@66 $generated@@64) ($generated@@60 $generated@@66 $generated@@65))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@63) $generated@@66 $generated@@65))
))))) (= ($generated@@21 ($generated@@51 $generated@@63) ($generated@@44 $generated@@59 $generated@@64) ($generated@@42 $generated@@65))  (and (=> (< 0 ($generated@@35 $generated@@64)) (or ($generated@@62 ($generated@@42 $generated@@65)) ($generated@@21 ($generated@@51 $generated@@63) ($generated@@33 $generated@@64 ($generated@@34 1)) ($generated@@42 (+ $generated@@65 1))))) (=> (= ($generated@@42 0) ($generated@@35 $generated@@64)) (exists (($generated@@67 T@U) ) (!  (and ($generated@@22 $generated@@67 $generated@@64) ($generated@@21 ($generated@@51 $generated@@63) $generated@@67 $generated@@65))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@63) $generated@@67 $generated@@65))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@51 $generated@@63) ($generated@@44 $generated@@59 $generated@@64) ($generated@@42 $generated@@65)))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 Int) ) (!  (=> (or ($generated@@60 $generated@@69 $generated@@70) (< 2 $generated@@20)) (and (and (=> (< 0 ($generated@@35 $generated@@69)) (and ($generated@@61 $generated@@70) (=> (not ($generated@@62 $generated@@70)) ($generated@@60 ($generated@@33 $generated@@69 ($generated@@34 1)) (+ $generated@@70 1))))) (=> (=> (< 0 ($generated@@35 $generated@@69)) (or ($generated@@62 $generated@@70) ($generated@@21 $generated@@68 ($generated@@33 $generated@@69 ($generated@@34 1)) (+ $generated@@70 1)))) (=> (= ($generated@@42 0) ($generated@@35 $generated@@69)) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@22 $generated@@71 $generated@@69) ($generated@@60 $generated@@71 $generated@@70))
 :pattern ( ($generated@@21 $generated@@68 $generated@@71 $generated@@70))
))))) (= ($generated@@21 ($generated@@51 $generated@@68) $generated@@69 $generated@@70)  (and (=> (< 0 ($generated@@35 $generated@@69)) (or ($generated@@62 $generated@@70) ($generated@@21 $generated@@68 ($generated@@33 $generated@@69 ($generated@@34 1)) (+ $generated@@70 1)))) (=> (= ($generated@@42 0) ($generated@@35 $generated@@69)) (exists (($generated@@72 T@U) ) (!  (and ($generated@@22 $generated@@72 $generated@@69) ($generated@@21 $generated@@68 $generated@@72 $generated@@70))
 :pattern ( ($generated@@21 $generated@@68 $generated@@72 $generated@@70))
)))))))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@68) $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (or ($generated@@23 $generated@@73 $generated@@74) (= $generated@@73 $generated@@74)) ($generated@@23 $generated@@74 $generated@@73))
 :pattern ( ($generated@@23 $generated@@73 $generated@@74) ($generated@@23 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@22 $generated@@75 $generated@@76) ($generated@@23 $generated@@75 $generated@@76))
 :pattern ( ($generated@@22 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ) (! (<= 0 ($generated@@35 $generated@@77))
 :pattern ( ($generated@@35 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@47 $generated@@79 ($generated@@48 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@48 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (and (and (and (=> ($generated@@23 $generated@@80 $generated@@81) (or (not (= $generated@@80 $generated@@81)) (not true))) (=> (and ($generated@@55 $generated@@80) (not ($generated@@55 $generated@@81))) ($generated@@23 $generated@@80 $generated@@81))) (=> (and ($generated@@55 $generated@@80) ($generated@@55 $generated@@81)) (= ($generated@@23 $generated@@80 $generated@@81) (< ($generated@@35 $generated@@80) ($generated@@35 $generated@@81))))) (=> (and ($generated@@23 $generated@@80 $generated@@81) ($generated@@55 $generated@@81)) ($generated@@55 $generated@@80)))
 :pattern ( ($generated@@23 $generated@@80 $generated@@81))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@82 $generated@@92 $generated@@93 $generated@@94 ($generated@@88 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@97 $generated@@98) $generated@@95)
 :weight 0
)) (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@104 $generated@@106) (= ($generated@@82 $generated@@99 $generated@@100 $generated@@101 ($generated@@88 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@82 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@82 $generated@@108 $generated@@109 $generated@@110 ($generated@@88 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@82 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)))) (= ($generated@@4 $generated@@83) 4)) (= ($generated@@4 $generated@@84) 5)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@86 $generated@@117 $generated@@118 ($generated@@89 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@121) $generated@@119)
 :weight 0
))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@86 $generated@@122 $generated@@123 ($generated@@89 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@86 $generated@@122 $generated@@123 $generated@@125 $generated@@127)))
 :weight 0
))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (= ($generated@@4 ($generated@@87 $generated@@128 $generated@@129)) 6))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@130 $generated@@131)) $generated@@130)
 :pattern ( ($generated@@87 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@132 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@87 $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Bool) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@9 ($generated@@82 $generated@@83 $generated@@84 $generated@@5 ($generated@@85 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@9 ($generated@@47 $generated@@5 ($generated@@86 $generated@@84 $generated@@59 ($generated@@86 $generated@@83 ($generated@@87 $generated@@84 $generated@@59) $generated@@135 $generated@@138) $generated@@136)))) $generated@@137))
 :pattern ( ($generated@@82 $generated@@83 $generated@@84 $generated@@5 ($generated@@85 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (!  (=> ($generated@@55 $generated@@140) (= $generated@@140 ($generated@@34 ($generated@@35 $generated@@140))))
 :pattern ( ($generated@@35 $generated@@140))
 :pattern ( ($generated@@55 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@55 $generated@@142) (<= ($generated@@35 $generated@@142) ($generated@@35 $generated@@141))) (or (and (= $generated@@142 ($generated@@34 0)) (= ($generated@@33 $generated@@141 $generated@@142) $generated@@141)) (and (or (not (= $generated@@142 ($generated@@34 0))) (not true)) ($generated@@23 ($generated@@33 $generated@@141 $generated@@142) $generated@@141))))
 :pattern ( ($generated@@33 $generated@@141 $generated@@142))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (or ($generated@@60 ($generated@@44 $generated@@59 $generated@@144) $generated@@145) (< 2 $generated@@20)) (and (and (=> (< 0 ($generated@@35 $generated@@144)) (and ($generated@@61 $generated@@145) (=> (not ($generated@@62 $generated@@145)) ($generated@@60 ($generated@@33 $generated@@144 ($generated@@34 1)) (+ $generated@@145 1))))) (=> (=> (< 0 ($generated@@35 $generated@@144)) (or ($generated@@62 $generated@@145) ($generated@@21 ($generated@@51 $generated@@143) ($generated@@33 $generated@@144 ($generated@@34 1)) (+ $generated@@145 1)))) (=> (= ($generated@@42 0) ($generated@@35 $generated@@144)) (forall (($generated@@146 T@U) ) (!  (=> ($generated@@22 $generated@@146 $generated@@144) ($generated@@60 $generated@@146 $generated@@145))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@143) $generated@@146 $generated@@145))
))))) (= ($generated@@21 ($generated@@51 $generated@@143) ($generated@@44 $generated@@59 $generated@@144) $generated@@145)  (and (=> (< 0 ($generated@@35 $generated@@144)) (or ($generated@@62 $generated@@145) ($generated@@21 ($generated@@51 $generated@@143) ($generated@@33 $generated@@144 ($generated@@34 1)) (+ $generated@@145 1)))) (=> (= ($generated@@42 0) ($generated@@35 $generated@@144)) (exists (($generated@@147 T@U) ) (!  (and ($generated@@22 $generated@@147 $generated@@144) ($generated@@21 ($generated@@51 $generated@@143) $generated@@147 $generated@@145))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@143) $generated@@147 $generated@@145))
)))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@51 $generated@@143) ($generated@@44 $generated@@59 $generated@@144) $generated@@145))
))))
(assert (forall (($generated@@148 Int) ) (! (= ($generated@@48 $generated@@6 ($generated@@10 ($generated@@42 $generated@@148))) ($generated@@44 $generated@@59 ($generated@@48 $generated@@6 ($generated@@10 $generated@@148))))
 :pattern ( ($generated@@48 $generated@@6 ($generated@@10 ($generated@@42 $generated@@148))))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@48 $generated@@150 ($generated@@44 $generated@@150 $generated@@149)) ($generated@@44 $generated@@59 ($generated@@48 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@48 $generated@@150 ($generated@@44 $generated@@150 $generated@@149)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! ($generated@@151 $generated@@6 $generated@@153 $generated $generated@@152)
 :pattern ( ($generated@@151 $generated@@6 $generated@@153 $generated $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! ($generated@@151 $generated@@59 $generated@@155 $generated@@0 $generated@@154)
 :pattern ( ($generated@@151 $generated@@59 $generated@@155 $generated@@0 $generated@@154))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@168 true))
(let (($generated@@169  (=> ($generated@@21 ($generated@@51 $generated@@156) ($generated@@33 $generated@@157 ($generated@@34 1)) (+ $generated@@158 1)) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@55 ($generated@@44 $generated@@59 ($generated@@34 1)))) (=> ($generated@@55 ($generated@@44 $generated@@59 ($generated@@34 1))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@35 ($generated@@44 $generated@@59 ($generated@@34 1))) ($generated@@35 $generated@@157))) (=> (<= ($generated@@35 ($generated@@44 $generated@@59 ($generated@@34 1))) ($generated@@35 $generated@@157)) (=> (and (= $generated@@159 ($generated@@33 $generated@@157 ($generated@@34 1))) (= $generated@@160 (+ $generated@@158 1))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@60 $generated@@159 $generated@@160) (or ($generated@@21 ($generated@@51 $generated@@156) $generated@@159 $generated@@160) (=> (< 0 ($generated@@35 $generated@@159)) (or ($generated@@62 $generated@@160) ($generated@@21 ($generated@@51 ($generated@@51 $generated@@156)) ($generated@@33 $generated@@159 ($generated@@34 1)) (+ $generated@@160 1))))))) (=> (=> ($generated@@60 $generated@@159 $generated@@160) (or ($generated@@21 ($generated@@51 $generated@@156) $generated@@159 $generated@@160) (=> (< 0 ($generated@@35 $generated@@159)) (or ($generated@@62 $generated@@160) ($generated@@21 ($generated@@51 ($generated@@51 $generated@@156)) ($generated@@33 $generated@@159 ($generated@@34 1)) (+ $generated@@160 1)))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@60 $generated@@159 $generated@@160) (or ($generated@@21 ($generated@@51 $generated@@156) $generated@@159 $generated@@160) (=> (= ($generated@@42 0) ($generated@@35 $generated@@159)) (exists (($generated@@170 T@U) ) (!  (and ($generated@@22 $generated@@170 $generated@@159) ($generated@@21 ($generated@@51 $generated@@156) $generated@@170 $generated@@160))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@156) $generated@@170 $generated@@160))
))))))))))))))))
(let (($generated@@171  (=> (< 0 ($generated@@35 $generated@@157)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@55 ($generated@@44 $generated@@59 ($generated@@34 1)))) (=> ($generated@@55 ($generated@@44 $generated@@59 ($generated@@34 1))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= ($generated@@35 ($generated@@44 $generated@@59 ($generated@@34 1))) ($generated@@35 $generated@@157))) (=> (<= ($generated@@35 ($generated@@44 $generated@@59 ($generated@@34 1))) ($generated@@35 $generated@@157)) (=> (and (= $generated@@161 ($generated@@33 $generated@@157 ($generated@@34 1))) ($generated@@151 $generated@@59 $generated@@161 $generated@@0 $generated@@162)) (=> (and (and (= $generated@@163 (+ $generated@@158 1)) ($generated@@151 $generated@@6 ($generated@@10 $generated@@163) $generated $generated@@162)) (and ($generated@@60 ($generated@@33 $generated@@157 ($generated@@34 1)) (+ $generated@@158 1)) ($generated@@60 ($generated@@33 $generated@@157 ($generated@@34 1)) (+ $generated@@158 1)))) (and (=> (= (ControlFlow 0 8) 3) $generated@@169) (=> (= (ControlFlow 0 8) 7) $generated@@168)))))))))))
(let (($generated@@172 true))
(let (($generated@@173  (=> (= $generated@@164 ($generated@@85 $generated@@165 $generated@@162 $generated@@3 false)) (and (=> (= (ControlFlow 0 11) 8) $generated@@171) (=> (= (ControlFlow 0 11) 1) $generated@@172)))))
(let (($generated@@174  (=> (and (and (and ($generated@@166 $generated@@162) ($generated@@167 $generated@@162)) (= 3 $generated@@20)) (and (and ($generated@@60 $generated@@157 $generated@@158) (and ($generated@@21 ($generated@@51 $generated@@156) $generated@@157 $generated@@158) (and (=> (< 0 ($generated@@35 $generated@@157)) (or ($generated@@62 $generated@@158) ($generated@@21 ($generated@@51 $generated@@156) ($generated@@33 $generated@@157 ($generated@@34 1)) (+ $generated@@158 1)))) (=> (= ($generated@@42 0) ($generated@@35 $generated@@157)) (exists (($generated@@175 T@U) ) (!  (and ($generated@@22 $generated@@175 $generated@@157) ($generated@@21 ($generated@@51 $generated@@156) $generated@@175 $generated@@158))
 :pattern ( ($generated@@21 ($generated@@51 $generated@@156) $generated@@175 $generated@@158))
)))))) (= (ControlFlow 0 12) 11))) $generated@@173)))
$generated@@174)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
