(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 (T@U T@U Int) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@51 () Int)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U Int) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U Int) T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@76 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@80 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@T T@T) T@T)
(declare-fun $generated@@83 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@86 (T@T) T@T)
(declare-fun $generated@@137 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) 0))
(assert (forall (($generated@@29 Int) ) (! (= ($generated@@28 $generated@@29) $generated@@29)
 :pattern ( ($generated@@28 $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 ($generated@@33 $generated@@36 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@33 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@37 $generated@@7 $generated@@38 $generated@@23) (<= ($generated@@28 0) ($generated@@12 $generated@@38)))
 :pattern ( ($generated@@37 $generated@@7 $generated@@38 $generated@@23))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 Int) ) (! (= ($generated@@39 ($generated@@40 $generated@@41) $generated@@42 $generated@@43) ($generated@@39 $generated@@41 $generated@@42 $generated@@43))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@41) $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@44 ($generated@@34 $generated@@48 $generated@@45) $generated@@46 $generated@@47) ($generated@@22 $generated@@48 $generated@@45 $generated@@46 $generated@@47))
 :pattern ( ($generated@@44 ($generated@@34 $generated@@48 $generated@@45) $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@49 $generated@@50 $generated@@23) (and (= ($generated@@34 $generated@@7 ($generated@@33 $generated@@7 $generated@@50)) $generated@@50) ($generated@@37 $generated@@7 ($generated@@33 $generated@@7 $generated@@50) $generated@@23)))
 :pattern ( ($generated@@49 $generated@@50 $generated@@23))
)))
(assert (= ($generated@@5 $generated@@52) 3))
(assert  (=> (<= 0 $generated@@51) (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 Int) ) (!  (=> (or ($generated@@53 ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 $generated@@58)) (and (< 0 $generated@@51) (and (and ($generated@@37 $generated@@52 $generated@@57 ($generated@@54 $generated)) (<= ($generated@@28 0) $generated@@58)) (<= ($generated@@28 $generated@@58) ($generated@@26 ($generated@@30 $generated@@52 $generated@@57)))))) (and (=> (not ($generated@@10 ($generated@@30 $generated@@6 ($generated@@9 (< $generated@@58 2))))) (=> (< ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 (- $generated@@58 2))))) ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 (- $generated@@58 1)))))) ($generated@@53 ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 (- $generated@@58 1))))) (= ($generated@@39 ($generated@@40 $generated@@56) ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 $generated@@58))  (or (< $generated@@58 2) (and (< ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 (- $generated@@58 2))))) ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 (- $generated@@58 1)))))) ($generated@@39 ($generated@@40 $generated@@56) ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 (- $generated@@58 1))))))))
 :weight 3
 :pattern ( ($generated@@39 ($generated@@40 $generated@@56) ($generated@@30 $generated@@52 $generated@@57) ($generated@@28 $generated@@58)))
))))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@49 $generated@@59 $generated) (and (= ($generated@@34 $generated@@7 ($generated@@33 $generated@@7 $generated@@59)) $generated@@59) ($generated@@37 $generated@@7 ($generated@@33 $generated@@7 $generated@@59) $generated)))
 :pattern ( ($generated@@49 $generated@@59 $generated))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@49 ($generated@@34 $generated@@62 $generated@@60) $generated@@61) ($generated@@37 $generated@@62 $generated@@60 $generated@@61))
 :pattern ( ($generated@@49 ($generated@@34 $generated@@62 $generated@@60) $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (<= 0 ($generated@@26 $generated@@63))
 :pattern ( ($generated@@26 $generated@@63))
)))
(assert  (=> (<= 0 $generated@@51) (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 Int) ) (!  (=> (or ($generated@@53 $generated@@65 $generated@@66) (and (< 0 $generated@@51) (and (and ($generated@@37 $generated@@52 $generated@@65 ($generated@@54 $generated)) (<= ($generated@@28 0) $generated@@66)) (<= $generated@@66 ($generated@@26 $generated@@65))))) (and (=> (<= 2 $generated@@66) (=> (< ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 $generated@@65 (- $generated@@66 2)))) ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 $generated@@65 (- $generated@@66 1))))) ($generated@@53 $generated@@65 (- $generated@@66 1)))) (= ($generated@@39 ($generated@@40 $generated@@64) $generated@@65 $generated@@66)  (or (< $generated@@66 2) (and (< ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 $generated@@65 (- $generated@@66 2)))) ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 $generated@@65 (- $generated@@66 1))))) ($generated@@39 $generated@@64 $generated@@65 (- $generated@@66 1)))))))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@64) $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@22 $generated@@52 $generated@@67 ($generated@@54 $generated@@68) $generated@@69) (forall (($generated@@70 Int) ) (!  (=> (and (<= 0 $generated@@70) (< $generated@@70 ($generated@@26 $generated@@67))) ($generated@@44 ($generated@@55 $generated@@67 $generated@@70) $generated@@68 $generated@@69))
 :pattern ( ($generated@@55 $generated@@67 $generated@@70))
)))
 :pattern ( ($generated@@22 $generated@@52 $generated@@67 ($generated@@54 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 ($generated@@54 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@54 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@21 ($generated@@54 $generated@@73)) $generated@@1)
 :pattern ( ($generated@@54 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@33 $generated@@75 ($generated@@34 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@34 $generated@@75 $generated@@74))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@76 $generated@@87 $generated@@88 $generated@@89 ($generated@@83 $generated@@87 $generated@@88 $generated@@89 $generated@@91 $generated@@92 $generated@@93 $generated@@90) $generated@@92 $generated@@93) $generated@@90)
 :weight 0
)) (and (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@76 $generated@@94 $generated@@95 $generated@@96 ($generated@@83 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@76 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@76 $generated@@103 $generated@@104 $generated@@105 ($generated@@83 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@76 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)))) (= ($generated@@5 $generated@@77) 4)) (= ($generated@@5 $generated@@78) 5)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@80 $generated@@112 $generated@@113 ($generated@@84 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@114) $generated@@116) $generated@@114)
 :weight 0
))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@121 $generated@@122) (= ($generated@@80 $generated@@117 $generated@@118 ($generated@@84 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@122) ($generated@@80 $generated@@117 $generated@@118 $generated@@120 $generated@@122)))
 :weight 0
))) (= ($generated@@5 $generated@@81) 6)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (= ($generated@@5 ($generated@@82 $generated@@123 $generated@@124)) 7))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@85 ($generated@@82 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@82 $generated@@125 $generated@@126))
))) (forall (($generated@@127 T@T) ($generated@@128 T@T) ) (! (= ($generated@@86 ($generated@@82 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@82 $generated@@127 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Bool) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@10 ($generated@@76 $generated@@77 $generated@@78 $generated@@6 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))  (=> (and (or (not (= $generated@@133 $generated@@129)) (not true)) ($generated@@10 ($generated@@33 $generated@@6 ($generated@@80 $generated@@78 $generated@@81 ($generated@@80 $generated@@77 ($generated@@82 $generated@@78 $generated@@81) $generated@@130 $generated@@133) $generated@@131)))) $generated@@132))
 :pattern ( ($generated@@76 $generated@@77 $generated@@78 $generated@@6 ($generated@@79 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> ($generated@@49 $generated@@135 ($generated@@54 $generated@@136)) (and (= ($generated@@34 $generated@@52 ($generated@@33 $generated@@52 $generated@@135)) $generated@@135) ($generated@@37 $generated@@52 ($generated@@33 $generated@@52 $generated@@135) ($generated@@54 $generated@@136))))
 :pattern ( ($generated@@49 $generated@@135 ($generated@@54 $generated@@136)))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@137 $generated@@23) $generated@@4))
(assert (forall (($generated@@138 Int) ) (! (= ($generated@@34 $generated@@7 ($generated@@11 ($generated@@28 $generated@@138))) ($generated@@30 $generated@@81 ($generated@@34 $generated@@7 ($generated@@11 $generated@@138))))
 :pattern ( ($generated@@34 $generated@@7 ($generated@@11 ($generated@@28 $generated@@138))))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@34 $generated@@140 ($generated@@30 $generated@@140 $generated@@139)) ($generated@@30 $generated@@81 ($generated@@34 $generated@@140 $generated@@139)))
 :pattern ( ($generated@@34 $generated@@140 ($generated@@30 $generated@@140 $generated@@139)))
)))
(assert (forall (($generated@@141 T@U) ) (!  (=> (= ($generated@@26 $generated@@141) 0) (= $generated@@141 $generated@@27))
 :pattern ( ($generated@@26 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! ($generated@@22 $generated@@7 $generated@@143 $generated $generated@@142)
 :pattern ( ($generated@@22 $generated@@7 $generated@@143 $generated $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@37 $generated@@52 $generated@@144 ($generated@@54 $generated@@145)) (forall (($generated@@146 Int) ) (!  (=> (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@26 $generated@@144))) ($generated@@49 ($generated@@55 $generated@@144 $generated@@146) $generated@@145))
 :pattern ( ($generated@@55 $generated@@144 $generated@@146))
)))
 :pattern ( ($generated@@37 $generated@@52 $generated@@144 ($generated@@54 $generated@@145)))
)))
(assert (forall (($generated@@147 T@U) ) (! ($generated@@37 $generated@@7 $generated@@147 $generated)
 :pattern ( ($generated@@37 $generated@@7 $generated@@147 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@159  (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= $generated@@148 $generated@@149)) (=> (<= $generated@@148 $generated@@149) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= $generated@@149 ($generated@@26 $generated@@150))) (=> (<= $generated@@149 ($generated@@26 $generated@@150)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@160 Int) ) (!  (=> (and (<= ($generated@@28 0) $generated@@160) (< $generated@@160 $generated@@149)) ($generated@@39 ($generated@@40 ($generated@@40 $generated@@151)) $generated@@150 $generated@@160))
 :pattern ( ($generated@@39 ($generated@@40 ($generated@@40 $generated@@151)) $generated@@150 $generated@@160))
)))))))))
(let (($generated@@161  (=> (not (and (<= ($generated@@28 2) $generated@@148) (< ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 $generated@@150 (- $generated@@148 2)))) ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 $generated@@150 (- $generated@@148 1))))))) (=> (and (= $generated@@149 $generated@@148) (= (ControlFlow 0 7) 2)) $generated@@159))))
(let (($generated@@162  (=> (and (<= ($generated@@28 2) $generated@@148) (< ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 $generated@@150 (- $generated@@148 2)))) ($generated@@12 ($generated@@33 $generated@@7 ($generated@@55 $generated@@150 (- $generated@@148 1)))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@37 $generated@@7 ($generated@@11 (+ $generated@@148 1)) $generated@@23)) (=> ($generated@@37 $generated@@7 ($generated@@11 (+ $generated@@148 1)) $generated@@23) (=> (= $generated@@152 (+ $generated@@148 1)) (=> (and (= $generated@@149 $generated@@152) (= (ControlFlow 0 5) 2)) $generated@@159)))))))
(let (($generated@@163  (and (=> (= (ControlFlow 0 8) 5) $generated@@162) (=> (= (ControlFlow 0 8) 7) $generated@@161))))
(let (($generated@@164  (=> (and (< $generated@@148 ($generated@@28 2)) (= (ControlFlow 0 12) 8)) $generated@@163)))
(let (($generated@@165  (=> (<= ($generated@@28 2) $generated@@148) (and (=> (= (ControlFlow 0 9) (- 0 11)) (and (<= 0 (- $generated@@148 2)) (< (- $generated@@148 2) ($generated@@26 $generated@@150)))) (=> (and (<= 0 (- $generated@@148 2)) (< (- $generated@@148 2) ($generated@@26 $generated@@150))) (and (=> (= (ControlFlow 0 9) (- 0 10)) (and (<= 0 (- $generated@@148 1)) (< (- $generated@@148 1) ($generated@@26 $generated@@150)))) (=> (and (<= 0 (- $generated@@148 1)) (< (- $generated@@148 1) ($generated@@26 $generated@@150))) (=> (= (ControlFlow 0 9) 8) $generated@@163))))))))
(let (($generated@@166  (=> (= $generated@@153 ($generated@@79 $generated@@154 $generated@@155 $generated@@2 false)) (and (=> (= (ControlFlow 0 13) 9) $generated@@165) (=> (= (ControlFlow 0 13) 12) $generated@@164)))))
(let (($generated@@167  (=> (and ($generated@@156 $generated@@155) ($generated@@157 $generated@@155)) (=> (and (and (and ($generated@@37 $generated@@52 $generated@@150 ($generated@@54 $generated)) ($generated@@22 $generated@@52 $generated@@150 ($generated@@54 $generated) $generated@@155)) (and (<= ($generated@@28 0) $generated@@148) (<= ($generated@@28 0) $generated@@158))) (and (and (= 1 $generated@@51) (< $generated@@148 ($generated@@26 $generated@@150))) (and (forall (($generated@@168 Int) ) (!  (=> (and (<= ($generated@@28 0) $generated@@168) (< $generated@@168 $generated@@148)) ($generated@@39 ($generated@@40 $generated@@151) $generated@@150 $generated@@168))
 :pattern ( ($generated@@39 ($generated@@40 $generated@@151) $generated@@150 $generated@@168))
)) (= (ControlFlow 0 14) 13)))) $generated@@166))))
$generated@@167)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
