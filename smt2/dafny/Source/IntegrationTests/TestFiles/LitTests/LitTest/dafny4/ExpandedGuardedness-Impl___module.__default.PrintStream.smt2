(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T) T@T)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@65 (Int) Int)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@120 (T@U Int) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@132 (T@U) Bool)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@27 T@U) ) (!  (=> ($generated@@25 $generated@@27) ($generated@@26 $generated@@27))
 :pattern ( ($generated@@25 $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) 0))
(assert (= ($generated@@8 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33)) ($generated@@26 $generated@@34))
 :pattern ( ($generated@@26 $generated@@34) ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@36 $generated@@45 $generated@@46 ($generated@@42 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@49) $generated@@47)
 :weight 0
)) (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (or (= $generated@@54 $generated@@55) (= ($generated@@36 $generated@@50 $generated@@51 ($generated@@42 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@55) ($generated@@36 $generated@@50 $generated@@51 $generated@@53 $generated@@55)))
 :weight 0
))) (= ($generated@@8 $generated@@37) 4)) (= ($generated@@8 $generated@@38) 5)) (= ($generated@@8 $generated@@39) 6)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (= ($generated@@8 ($generated@@40 $generated@@56 $generated@@57)) 7))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@58 $generated@@59)) $generated@@58)
 :pattern ( ($generated@@40 $generated@@58 $generated@@59))
))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@44 ($generated@@40 $generated@@60 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@40 $generated@@60 $generated@@61))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@35 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@13 ($generated@@41 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@62 $generated@@64) $generated@@4))) ($generated@@13 ($generated@@41 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@63 $generated@@64) $generated@@4))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@63 $generated@@64) $generated@@4))
)))
 :pattern ( ($generated@@35 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@65 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@70 $generated@@73 $generated@@74) ($generated@@32 $generated@@72))  (and ($generated@@71 $generated@@73 $generated@@72) ($generated@@30 $generated@@31 $generated@@74 ($generated@@32 $generated@@72))))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@70 $generated@@73 $generated@@74) ($generated@@32 $generated@@72)))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@26 $generated@@76) (= ($generated@@75 $generated@@76) $generated@@6))
 :pattern ( ($generated@@26 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@41 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@41 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@26 $generated@@80) (exists (($generated@@81 T@U) ($generated@@82 T@U) ) (= $generated@@80 ($generated@@70 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@26 $generated@@80))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@83 ($generated@@77 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@84 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@83 ($generated@@77 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@35 $generated@@89 $generated@@90) (=> ($generated@@83 $generated@@91 $generated@@92 $generated@@89) ($generated@@83 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@35 $generated@@89 $generated@@90) ($generated@@83 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (!  (=> ($generated@@35 $generated@@93 $generated@@94) (=> ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@93) ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@35 $generated@@93 $generated@@94) ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@93))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@24 ($generated@@32 $generated@@99)) $generated@@5) (= ($generated@@98 ($generated@@32 $generated@@99)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or (not (= $generated@@100 $generated@@102)) (not true)) (=> (and ($generated@@35 $generated@@100 $generated@@101) ($generated@@35 $generated@@101 $generated@@102)) ($generated@@35 $generated@@100 $generated@@102)))
 :pattern ( ($generated@@35 $generated@@100 $generated@@101) ($generated@@35 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@71 $generated@@103 $generated@@0) (and (= ($generated@@77 $generated@@10 ($generated@@41 $generated@@10 $generated@@103)) $generated@@103) ($generated@@30 $generated@@10 ($generated@@41 $generated@@10 $generated@@103) $generated@@0)))
 :pattern ( ($generated@@71 $generated@@103 $generated@@0))
)))
(assert (= ($generated@@8 $generated@@104) 8))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@71 $generated@@105 $generated) (and (= ($generated@@77 $generated@@104 ($generated@@41 $generated@@104 $generated@@105)) $generated@@105) ($generated@@30 $generated@@104 ($generated@@41 $generated@@104 $generated@@105) $generated)))
 :pattern ( ($generated@@71 $generated@@105 $generated))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@71 ($generated@@77 $generated@@108 $generated@@106) $generated@@107) ($generated@@30 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@71 ($generated@@77 $generated@@108 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (<= 0 ($generated@@28 $generated@@109))
 :pattern ( ($generated@@28 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@75 ($generated@@70 $generated@@110 $generated@@111)) $generated@@6)
 :pattern ( ($generated@@70 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@70 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@70 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@70 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@70 $generated@@116 $generated@@117))
)))
(assert (= ($generated@@8 $generated@@118) 9))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@84 $generated@@118 $generated@@121 ($generated@@119 $generated@@122) $generated@@123) (forall (($generated@@124 Int) ) (!  (=> (and (<= 0 $generated@@124) (< $generated@@124 ($generated@@28 $generated@@121))) ($generated@@83 ($generated@@120 $generated@@121 $generated@@124) $generated@@122 $generated@@123))
 :pattern ( ($generated@@120 $generated@@121 $generated@@124))
)))
 :pattern ( ($generated@@84 $generated@@118 $generated@@121 ($generated@@119 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@119 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@119 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@24 ($generated@@119 $generated@@127)) $generated@@3)
 :pattern ( ($generated@@119 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@32 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@32 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@41 $generated@@131 ($generated@@77 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@77 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@132 $generated@@135) (and ($generated@@26 $generated@@133) ($generated@@84 $generated@@31 $generated@@133 ($generated@@32 $generated@@134) $generated@@135))) ($generated@@83 ($generated@@112 $generated@@133) $generated@@134 $generated@@135))
 :pattern ( ($generated@@83 ($generated@@112 $generated@@133) $generated@@134 $generated@@135))
)))
(assert  (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@136 $generated@@139 $generated@@140 $generated@@141 ($generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@138 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@136 $generated@@155 $generated@@156 $generated@@157 ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@13 ($generated@@136 $generated@@39 $generated@@37 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@13 ($generated@@41 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@136 $generated@@39 $generated@@37 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@71 $generated@@170 ($generated@@119 $generated@@171)) (and (= ($generated@@77 $generated@@118 ($generated@@41 $generated@@118 $generated@@170)) $generated@@170) ($generated@@30 $generated@@118 ($generated@@41 $generated@@118 $generated@@170) ($generated@@119 $generated@@171))))
 :pattern ( ($generated@@71 $generated@@170 ($generated@@119 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@71 $generated@@173 ($generated@@32 $generated@@172)) (and (= ($generated@@77 $generated@@31 ($generated@@41 $generated@@31 $generated@@173)) $generated@@173) ($generated@@30 $generated@@31 ($generated@@41 $generated@@31 $generated@@173) ($generated@@32 $generated@@172))))
 :pattern ( ($generated@@71 $generated@@173 ($generated@@32 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@132 $generated@@176) (and ($generated@@26 $generated@@174) ($generated@@84 $generated@@31 $generated@@174 ($generated@@32 $generated@@175) $generated@@176))) ($generated@@84 $generated@@31 ($generated@@115 $generated@@174) ($generated@@32 $generated@@175) $generated@@176))
 :pattern ( ($generated@@84 $generated@@31 ($generated@@115 $generated@@174) ($generated@@32 $generated@@175) $generated@@176))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@77 $generated@@10 ($generated@@14 ($generated@@65 $generated@@177))) ($generated@@67 $generated@@38 ($generated@@77 $generated@@10 ($generated@@14 $generated@@177))))
 :pattern ( ($generated@@77 $generated@@10 ($generated@@14 ($generated@@65 $generated@@177))))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@77 $generated@@179 ($generated@@67 $generated@@179 $generated@@178)) ($generated@@67 $generated@@38 ($generated@@77 $generated@@179 $generated@@178)))
 :pattern ( ($generated@@77 $generated@@179 ($generated@@67 $generated@@179 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (!  (=> (= ($generated@@28 $generated@@180) 0) (= $generated@@180 $generated@@29))
 :pattern ( ($generated@@28 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! ($generated@@84 $generated@@10 $generated@@182 $generated@@0 $generated@@181)
 :pattern ( ($generated@@84 $generated@@10 $generated@@182 $generated@@0 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! ($generated@@84 $generated@@104 $generated@@184 $generated $generated@@183)
 :pattern ( ($generated@@84 $generated@@104 $generated@@184 $generated $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@132 $generated@@188) (= ($generated@@84 $generated@@31 ($generated@@70 $generated@@186 $generated@@187) ($generated@@32 $generated@@185) $generated@@188)  (and ($generated@@83 $generated@@186 $generated@@185 $generated@@188) ($generated@@84 $generated@@31 $generated@@187 ($generated@@32 $generated@@185) $generated@@188))))
 :pattern ( ($generated@@84 $generated@@31 ($generated@@70 $generated@@186 $generated@@187) ($generated@@32 $generated@@185) $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@30 $generated@@118 $generated@@189 ($generated@@119 $generated@@190)) (forall (($generated@@191 Int) ) (!  (=> (and (<= 0 $generated@@191) (< $generated@@191 ($generated@@28 $generated@@189))) ($generated@@71 ($generated@@120 $generated@@189 $generated@@191) $generated@@190))
 :pattern ( ($generated@@120 $generated@@189 $generated@@191))
)))
 :pattern ( ($generated@@30 $generated@@118 $generated@@189 ($generated@@119 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ) (! ($generated@@30 $generated@@10 $generated@@192 $generated@@0)
 :pattern ( ($generated@@30 $generated@@10 $generated@@192 $generated@@0))
)))
(assert (forall (($generated@@193 T@U) ) (! ($generated@@30 $generated@@104 $generated@@193 $generated)
 :pattern ( ($generated@@30 $generated@@104 $generated@@193 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@210  (=> (and (and (and (< $generated@@194 5) (= $generated@@195 (- 5 $generated@@194))) (and ($generated@@26 $generated@@196) ($generated@@26 $generated@@196))) (and (and ($generated@@26 $generated@@196) ($generated@@26 $generated@@196)) (and (= $generated@@197 ($generated@@115 $generated@@196)) (= $generated@@198 (+ $generated@@194 1))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@195) (= (- 5 $generated@@198) $generated@@195))) (=> (or (<= 0 $generated@@195) (= (- 5 $generated@@198) $generated@@195)) (=> (= (ControlFlow 0 5) (- 0 4)) (< (- 5 $generated@@198) $generated@@195)))))))
(let (($generated@@211 true))
(let (($generated@@212  (=> $generated@@199 (and (=> (= (ControlFlow 0 7) 3) $generated@@211) (=> (= (ControlFlow 0 7) 5) $generated@@210)))))
(let (($generated@@213 true))
(let (($generated@@214  (and (=> (= (ControlFlow 0 8) 2) $generated@@213) (=> (= (ControlFlow 0 8) 7) $generated@@212))))
(let (($generated@@215 true))
(let (($generated@@216  (=> (and ($generated@@30 $generated@@31 $generated@@196 ($generated@@32 $generated@@0)) ($generated@@84 $generated@@31 $generated@@196 ($generated@@32 $generated@@0) $generated@@200)) (=> (and (and (and (and (not false) (and (<= 0 $generated@@194) (< $generated@@194 6))) (= $generated@@201 0)) (= $generated@@202 5)) (and (and (forall (($generated@@217 T@U) ) (!  (=> (and (or (not (= $generated@@217 $generated@@203)) (not true)) ($generated@@13 ($generated@@41 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@200 $generated@@217) $generated@@4)))) (= ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@200 $generated@@217) ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@200 $generated@@217)))
 :pattern ( ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@200 $generated@@217))
)) ($generated@@35 $generated@@200 $generated@@200)) (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (or (not (= $generated@@218 $generated@@203)) (not true)) ($generated@@13 ($generated@@41 $generated@@9 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@200 $generated@@218) $generated@@4)))) (or (= ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@200 $generated@@218) $generated@@219) ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@200 $generated@@218) $generated@@219)) ($generated@@13 ($generated@@136 $generated@@39 $generated@@37 $generated@@9 $generated@@204 $generated@@218 $generated@@219))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@39 ($generated@@40 $generated@@37 $generated@@38) $generated@@200 $generated@@218) $generated@@219))
)) (<= (- 5 $generated@@194) $generated@@202)))) (and (=> (= (ControlFlow 0 9) 1) $generated@@215) (=> (= (ControlFlow 0 9) 8) $generated@@214))))))
(let (($generated@@220  (=> (and (and (= $generated@@204 ($generated@@137 $generated@@203 $generated@@200 $generated@@4 false)) (= $generated@@201 ($generated@@65 0))) (and (= $generated@@202 (- 5 $generated@@201)) (= (ControlFlow 0 10) 9))) $generated@@216)))
(let (($generated@@221  (=> (and (and (and (and ($generated@@132 $generated@@200) ($generated@@205 $generated@@200)) (and ($generated@@30 $generated@@118 $generated@@206 ($generated@@119 $generated)) ($generated@@84 $generated@@118 $generated@@206 ($generated@@119 $generated) $generated@@200))) (and (and ($generated@@30 $generated@@31 $generated@@207 ($generated@@32 $generated@@0)) ($generated@@84 $generated@@31 $generated@@207 ($generated@@32 $generated@@0) $generated@@200)) ($generated@@25 $generated@@207))) (and (and (and ($generated@@30 $generated@@31 $generated@@208 ($generated@@32 $generated@@0)) ($generated@@84 $generated@@31 $generated@@208 ($generated@@32 $generated@@0) $generated@@200)) true) (and (= 1 $generated@@209) (= (ControlFlow 0 11) 10)))) $generated@@220)))
$generated@@221))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
