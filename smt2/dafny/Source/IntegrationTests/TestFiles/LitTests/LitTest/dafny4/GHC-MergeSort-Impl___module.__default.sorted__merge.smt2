(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@23 (T@U T@U T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U T@U T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Int)
(declare-fun $generated@@91 () T@U)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@114 (T@U) Int)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@132 (T@U T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@197 (T@U) Int)
(declare-fun $generated@@198 (T@U) Int)
(declare-fun $generated@@214 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@215 () T@T)
(declare-fun $generated@@216 () T@T)
(declare-fun $generated@@217 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@218 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@219 (T@T T@T) T@T)
(declare-fun $generated@@220 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@221 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@222 (T@T) T@T)
(declare-fun $generated@@223 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert ($generated@@21 $generated@@22))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27) ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) $generated@@2))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@35)) ($generated@@33 $generated@@34))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@35)))
)))
(assert  (and (= ($generated@@5 $generated@@39) 4) (= ($generated@@5 $generated@@44) 5)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@40 ($generated@@38 $generated@@39 $generated@@50) ($generated@@38 $generated@@39 $generated@@51)) (and (< 2 $generated@@36) (and ($generated@@30 $generated@@39 $generated@@50 ($generated@@41 $generated@@22)) ($generated@@30 $generated@@39 $generated@@51 ($generated@@41 $generated@@22))))) (and (=> (not ($generated@@10 ($generated@@38 $generated@@6 ($generated@@9 ($generated@@42 ($generated@@38 $generated@@39 $generated@@50)))))) (let (($generated@@52 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@50)))))
(let (($generated@@53 ($generated@@38 $generated@@44 ($generated@@45 ($generated@@38 $generated@@39 $generated@@50)))))
 (=> (not ($generated@@10 ($generated@@38 $generated@@6 ($generated@@9 ($generated@@42 ($generated@@38 $generated@@39 $generated@@51)))))) (let (($generated@@54 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@51)))))
(let (($generated@@55 ($generated@@38 $generated@@44 ($generated@@45 ($generated@@38 $generated@@39 $generated@@51)))))
 (and (and ($generated@@46 $generated@@53 $generated@@55) (=> ($generated@@47 $generated@@53 $generated@@55) ($generated@@40 $generated@@52 ($generated@@38 $generated@@39 $generated@@51)))) (=> (not ($generated@@47 $generated@@53 $generated@@55)) ($generated@@40 ($generated@@38 $generated@@39 $generated@@50) $generated@@54))))))))) (= ($generated@@37 ($generated@@24 $generated@@49) ($generated@@38 $generated@@39 $generated@@50) ($generated@@38 $generated@@39 $generated@@51)) (ite ($generated@@42 ($generated@@38 $generated@@39 $generated@@50)) $generated@@51 (let (($generated@@56 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@50)))))
(let (($generated@@57 ($generated@@38 $generated@@44 ($generated@@45 ($generated@@38 $generated@@39 $generated@@50)))))
(ite ($generated@@42 ($generated@@38 $generated@@39 $generated@@51)) $generated@@50 (let (($generated@@58 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@51)))))
(let (($generated@@59 ($generated@@38 $generated@@44 ($generated@@45 ($generated@@38 $generated@@39 $generated@@51)))))
(ite ($generated@@47 $generated@@57 $generated@@59) ($generated@@48 $generated@@57 ($generated@@38 $generated@@39 ($generated@@37 ($generated@@24 $generated@@49) $generated@@56 ($generated@@38 $generated@@39 $generated@@51)))) ($generated@@48 $generated@@59 ($generated@@38 $generated@@39 ($generated@@37 ($generated@@24 $generated@@49) ($generated@@38 $generated@@39 $generated@@50) $generated@@58)))))))))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@24 $generated@@49) ($generated@@38 $generated@@39 $generated@@50) ($generated@@38 $generated@@39 $generated@@51)))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@61 $generated@@63) ($generated@@60 $generated@@39 $generated@@29 ($generated@@41 $generated@@62) $generated@@63))
 :pattern ( ($generated@@60 $generated@@39 $generated@@29 ($generated@@41 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ) (! ($generated@@30 $generated@@39 $generated@@29 ($generated@@41 $generated@@64))
 :pattern ( ($generated@@30 $generated@@39 $generated@@29 ($generated@@41 $generated@@64)))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@65 $generated@@69 $generated@@71) (and (< 1 $generated@@36) ($generated@@30 $generated@@39 $generated@@71 ($generated@@41 $generated@@69)))) (and (=> (not ($generated@@42 $generated@@71)) (let (($generated@@72 ($generated@@43 $generated@@71)))
($generated@@65 $generated@@69 $generated@@72))) (= ($generated@@23 $generated@@69 ($generated@@24 $generated@@70) $generated@@71) (ite ($generated@@42 $generated@@71) $generated@@66 (let (($generated@@73 ($generated@@43 $generated@@71)))
(let (($generated@@74 ($generated@@45 $generated@@71)))
($generated@@67 ($generated@@68 $generated@@66 $generated@@74) ($generated@@23 $generated@@69 $generated@@70 $generated@@73))))))))
 :pattern ( ($generated@@23 $generated@@69 ($generated@@24 $generated@@70) $generated@@71))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@38 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@38 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@30 $generated@@39 ($generated@@48 $generated@@79 $generated@@80) ($generated@@41 $generated@@78))  (and ($generated@@77 $generated@@79 $generated@@78) ($generated@@30 $generated@@39 $generated@@80 ($generated@@41 $generated@@78))))
 :pattern ( ($generated@@30 $generated@@39 ($generated@@48 $generated@@79 $generated@@80) ($generated@@41 $generated@@78)))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@42 $generated@@81) (= ($generated@@28 $generated@@81) $generated@@2))
 :pattern ( ($generated@@42 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@83) (= ($generated@@28 $generated@@83) $generated@@3))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@84 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@84 $generated@@87 $generated@@86))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@89 ($generated@@38 $generated@@39 $generated@@93)) (and (< 2 $generated@@36) ($generated@@30 $generated@@39 $generated@@93 ($generated@@41 $generated@@22)))) (and (=> (not ($generated@@10 ($generated@@38 $generated@@6 ($generated@@9 ($generated@@42 ($generated@@38 $generated@@39 $generated@@93)))))) (let (($generated@@94 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@93)))))
(let (($generated@@95 ($generated@@38 $generated@@44 ($generated@@45 ($generated@@38 $generated@@39 $generated@@93)))))
 (and (forall (($generated@@96 T@U) ) (!  (=> ($generated@@77 $generated@@96 $generated@@22) (and ($generated@@65 $generated@@22 $generated@@94) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@94) $generated@@96) 0) ($generated@@46 $generated@@95 $generated@@96))))
 :pattern ( ($generated@@47 $generated@@95 $generated@@96))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@94) $generated@@96))
)) (=> (forall (($generated@@97 T@U) ) (!  (=> ($generated@@77 $generated@@97 $generated@@22) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@94) $generated@@97) 0) ($generated@@47 $generated@@95 $generated@@97)))
 :pattern ( ($generated@@47 $generated@@95 $generated@@97))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@94) $generated@@97))
)) ($generated@@89 $generated@@94)))))) (= ($generated@@88 ($generated@@24 $generated@@92) ($generated@@38 $generated@@39 $generated@@93)) (ite ($generated@@42 ($generated@@38 $generated@@39 $generated@@93)) true (let (($generated@@98 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@93)))))
(let (($generated@@99 ($generated@@38 $generated@@44 ($generated@@45 ($generated@@38 $generated@@39 $generated@@93)))))
 (and (forall (($generated@@100 T@U) ) (!  (=> ($generated@@77 $generated@@100 $generated@@22) (=> (> ($generated@@90 ($generated@@38 $generated@@31 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@98)) $generated@@100) 0) ($generated@@47 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@47 $generated@@99 $generated@@100))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@98) $generated@@100))
)) ($generated@@88 ($generated@@24 $generated@@92) $generated@@98))))))))
 :weight 3
 :pattern ( ($generated@@88 ($generated@@24 $generated@@92) ($generated@@38 $generated@@39 $generated@@93)))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or (not (= $generated@@102 $generated@@103)) (not true)) (= ($generated@@90 $generated@@101 $generated@@103) ($generated@@90 ($generated@@68 $generated@@101 $generated@@102) $generated@@103)))
 :pattern ( ($generated@@68 $generated@@101 $generated@@102) ($generated@@90 $generated@@101 $generated@@103))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@65 $generated@@104 ($generated@@38 $generated@@39 $generated@@106)) (and (< 1 $generated@@36) ($generated@@30 $generated@@39 $generated@@106 ($generated@@41 $generated@@104)))) (and (=> (not ($generated@@10 ($generated@@38 $generated@@6 ($generated@@9 ($generated@@42 ($generated@@38 $generated@@39 $generated@@106)))))) (let (($generated@@107 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@106)))))
($generated@@65 $generated@@104 $generated@@107))) (= ($generated@@23 $generated@@104 ($generated@@24 $generated@@105) ($generated@@38 $generated@@39 $generated@@106)) (ite ($generated@@42 ($generated@@38 $generated@@39 $generated@@106)) $generated@@66 (let (($generated@@108 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@106)))))
(let (($generated@@109 ($generated@@38 $generated@@44 ($generated@@45 ($generated@@38 $generated@@39 $generated@@106)))))
($generated@@67 ($generated@@68 $generated@@66 $generated@@109) ($generated@@23 $generated@@104 ($generated@@24 $generated@@105) $generated@@108))))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@104 ($generated@@24 $generated@@105) ($generated@@38 $generated@@39 $generated@@106)))
))))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@82 $generated@@110) (exists (($generated@@111 T@U) ($generated@@112 T@U) ) (= $generated@@110 ($generated@@48 $generated@@111 $generated@@112))))
 :pattern ( ($generated@@82 $generated@@110))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or ($generated@@46 ($generated@@38 $generated@@44 $generated@@115) ($generated@@38 $generated@@44 $generated@@116)) (and (< 1 $generated@@36) (and ($generated@@77 $generated@@115 $generated@@22) ($generated@@77 $generated@@116 $generated@@22)))) (and (and ($generated@@113 ($generated@@38 $generated@@44 $generated@@115)) ($generated@@113 ($generated@@38 $generated@@44 $generated@@116))) (= ($generated@@47 ($generated@@38 $generated@@44 $generated@@115) ($generated@@38 $generated@@44 $generated@@116)) (<= ($generated@@114 ($generated@@38 $generated@@44 $generated@@115)) ($generated@@114 ($generated@@38 $generated@@44 $generated@@116))))))
 :weight 3
 :pattern ( ($generated@@47 ($generated@@38 $generated@@44 $generated@@115) ($generated@@38 $generated@@44 $generated@@116)))
))))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@42 $generated@@117) (= $generated@@117 $generated@@29))
 :pattern ( ($generated@@42 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@68 $generated@@119 $generated@@120)) (+ ($generated@@118 $generated@@119) 1))
 :pattern ( ($generated@@118 ($generated@@68 $generated@@119 $generated@@120)))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or ($generated@@40 $generated@@122 $generated@@123) (and (< 2 $generated@@36) (and ($generated@@30 $generated@@39 $generated@@122 ($generated@@41 $generated@@22)) ($generated@@30 $generated@@39 $generated@@123 ($generated@@41 $generated@@22))))) (and (=> (not ($generated@@42 $generated@@122)) (let (($generated@@124 ($generated@@43 $generated@@122)))
(let (($generated@@125 ($generated@@45 $generated@@122)))
 (=> (not ($generated@@42 $generated@@123)) (let (($generated@@126 ($generated@@43 $generated@@123)))
(let (($generated@@127 ($generated@@45 $generated@@123)))
 (and (and ($generated@@46 $generated@@125 $generated@@127) (=> ($generated@@47 $generated@@125 $generated@@127) ($generated@@40 $generated@@124 $generated@@123))) (=> (not ($generated@@47 $generated@@125 $generated@@127)) ($generated@@40 $generated@@122 $generated@@126))))))))) (= ($generated@@37 ($generated@@24 $generated@@121) $generated@@122 $generated@@123) (ite ($generated@@42 $generated@@122) $generated@@123 (let (($generated@@128 ($generated@@43 $generated@@122)))
(let (($generated@@129 ($generated@@45 $generated@@122)))
(ite ($generated@@42 $generated@@123) $generated@@122 (let (($generated@@130 ($generated@@43 $generated@@123)))
(let (($generated@@131 ($generated@@45 $generated@@123)))
(ite ($generated@@47 $generated@@129 $generated@@131) ($generated@@48 $generated@@129 ($generated@@37 $generated@@121 $generated@@128 $generated@@123)) ($generated@@48 $generated@@131 ($generated@@37 $generated@@121 $generated@@122 $generated@@130))))))))))))
 :pattern ( ($generated@@37 ($generated@@24 $generated@@121) $generated@@122 $generated@@123))
))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@132 ($generated@@85 $generated@@136 $generated@@133) $generated@@134 $generated@@135) ($generated@@60 $generated@@136 $generated@@133 $generated@@134 $generated@@135))
 :pattern ( ($generated@@132 ($generated@@85 $generated@@136 $generated@@133) $generated@@134 $generated@@135))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or ($generated@@89 $generated@@138) (and (< 2 $generated@@36) ($generated@@30 $generated@@39 $generated@@138 ($generated@@41 $generated@@22)))) (and (=> (not ($generated@@42 $generated@@138)) (let (($generated@@139 ($generated@@43 $generated@@138)))
(let (($generated@@140 ($generated@@45 $generated@@138)))
 (and (forall (($generated@@141 T@U) ) (!  (=> ($generated@@77 $generated@@141 $generated@@22) (and ($generated@@65 $generated@@22 $generated@@139) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@139) $generated@@141) 0) ($generated@@46 $generated@@140 $generated@@141))))
 :pattern ( ($generated@@47 $generated@@140 $generated@@141))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@139) $generated@@141))
)) (=> (forall (($generated@@142 T@U) ) (!  (=> ($generated@@77 $generated@@142 $generated@@22) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@139) $generated@@142) 0) ($generated@@47 $generated@@140 $generated@@142)))
 :pattern ( ($generated@@47 $generated@@140 $generated@@142))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@139) $generated@@142))
)) ($generated@@89 $generated@@139)))))) (= ($generated@@88 ($generated@@24 $generated@@137) $generated@@138) (ite ($generated@@42 $generated@@138) true (let (($generated@@143 ($generated@@43 $generated@@138)))
(let (($generated@@144 ($generated@@45 $generated@@138)))
 (and (forall (($generated@@145 T@U) ) (!  (=> ($generated@@77 $generated@@145 $generated@@22) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@143) $generated@@145) 0) ($generated@@47 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@47 $generated@@144 $generated@@145))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@143) $generated@@145))
)) ($generated@@88 $generated@@137 $generated@@143))))))))
 :pattern ( ($generated@@88 ($generated@@24 $generated@@137) $generated@@138))
))))
(assert (forall (($generated@@148 T@U) ) (!  (and (= ($generated@@146 ($generated@@41 $generated@@148)) $generated@@1) (= ($generated@@147 ($generated@@41 $generated@@148)) $generated@@4))
 :pattern ( ($generated@@41 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@118 ($generated@@67 $generated@@149 $generated@@150)) (+ ($generated@@118 $generated@@149) ($generated@@118 $generated@@150)))
 :pattern ( ($generated@@118 ($generated@@67 $generated@@149 $generated@@150)))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or ($generated@@46 $generated@@151 $generated@@152) (and (< 1 $generated@@36) (and ($generated@@77 $generated@@151 $generated@@22) ($generated@@77 $generated@@152 $generated@@22)))) (and (and ($generated@@113 $generated@@151) ($generated@@113 $generated@@152)) (= ($generated@@47 $generated@@151 $generated@@152) (<= ($generated@@114 $generated@@151) ($generated@@114 $generated@@152)))))
 :pattern ( ($generated@@47 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@37 ($generated@@24 $generated@@153) $generated@@154 $generated@@155) ($generated@@37 $generated@@153 $generated@@154 $generated@@155))
 :pattern ( ($generated@@37 ($generated@@24 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> ($generated@@156 $generated@@157) (or ($generated@@42 $generated@@157) ($generated@@82 $generated@@157)))
 :pattern ( ($generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@30 $generated@@39 $generated@@159 ($generated@@41 $generated@@158)) (or ($generated@@42 $generated@@159) ($generated@@82 $generated@@159)))
 :pattern ( ($generated@@82 $generated@@159) ($generated@@30 $generated@@39 $generated@@159 ($generated@@41 $generated@@158)))
 :pattern ( ($generated@@42 $generated@@159) ($generated@@30 $generated@@39 $generated@@159 ($generated@@41 $generated@@158)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@160 ($generated@@32 $generated@@161)) (forall (($generated@@162 T@U) ) (!  (=> (< 0 ($generated@@90 $generated@@160 $generated@@162)) ($generated@@77 $generated@@162 $generated@@161))
 :pattern ( ($generated@@90 $generated@@160 $generated@@162))
)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@160 ($generated@@32 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@88 ($generated@@24 $generated@@163) $generated@@164) ($generated@@88 $generated@@163 $generated@@164))
 :pattern ( ($generated@@88 ($generated@@24 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@77 ($generated@@85 $generated@@167 $generated@@165) $generated@@166) ($generated@@30 $generated@@167 $generated@@165 $generated@@166))
 :pattern ( ($generated@@77 ($generated@@85 $generated@@167 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@33 $generated@@168) (forall (($generated@@169 T@U) ) (!  (and (<= 0 ($generated@@90 $generated@@168 $generated@@169)) (<= ($generated@@90 $generated@@168 $generated@@169) ($generated@@118 $generated@@168)))
 :pattern ( ($generated@@90 $generated@@168 $generated@@169))
)))
 :pattern ( ($generated@@33 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! (<= 0 ($generated@@118 $generated@@170))
 :pattern ( ($generated@@118 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@21 $generated@@171) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@77 $generated@@173 $generated@@171) ($generated@@132 $generated@@173 $generated@@171 $generated@@172))
 :pattern ( ($generated@@132 $generated@@173 $generated@@171 $generated@@172))
)))
 :pattern ( ($generated@@21 $generated@@171))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@90 $generated@@66 $generated@@174) 0)
 :pattern ( ($generated@@90 $generated@@66 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@28 ($generated@@48 $generated@@175 $generated@@176)) $generated@@3)
 :pattern ( ($generated@@48 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@45 ($generated@@48 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@48 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@43 ($generated@@48 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@48 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@90 ($generated@@68 $generated@@181 $generated@@182) $generated@@182) (+ ($generated@@90 $generated@@181 $generated@@182) 1))
 :pattern ( ($generated@@68 $generated@@181 $generated@@182))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (or ($generated@@40 $generated@@184 $generated@@185) (and (< 2 $generated@@36) (and ($generated@@30 $generated@@39 $generated@@184 ($generated@@41 $generated@@22)) ($generated@@30 $generated@@39 $generated@@185 ($generated@@41 $generated@@22))))) ($generated@@30 $generated@@39 ($generated@@37 $generated@@183 $generated@@184 $generated@@185) ($generated@@41 $generated@@22)))
 :pattern ( ($generated@@37 $generated@@183 $generated@@184 $generated@@185))
))))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (or ($generated@@65 $generated@@187 $generated@@189) (and (< 1 $generated@@36) (and ($generated@@30 $generated@@39 $generated@@189 ($generated@@41 $generated@@187)) ($generated@@60 $generated@@39 $generated@@189 ($generated@@41 $generated@@187) $generated@@186)))) ($generated@@61 $generated@@186)) ($generated@@60 $generated@@31 ($generated@@23 $generated@@187 $generated@@188 $generated@@189) ($generated@@32 $generated@@187) $generated@@186))
 :pattern ( ($generated@@60 $generated@@31 ($generated@@23 $generated@@187 $generated@@188 $generated@@189) ($generated@@32 $generated@@187) $generated@@186))
))))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@190 ($generated@@32 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@32 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@146 ($generated@@32 $generated@@192)) $generated)
 :pattern ( ($generated@@32 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@193 ($generated@@41 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@41 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@84 $generated@@196 ($generated@@85 $generated@@196 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@85 $generated@@196 $generated@@195))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (< ($generated@@197 $generated@@199) ($generated@@198 ($generated@@48 $generated@@199 $generated@@200)))
 :pattern ( ($generated@@48 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (< ($generated@@198 $generated@@202) ($generated@@198 ($generated@@48 $generated@@201 $generated@@202)))
 :pattern ( ($generated@@48 $generated@@201 $generated@@202))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (or ($generated@@65 $generated@@203 $generated@@205) (and (< 1 $generated@@36) ($generated@@30 $generated@@39 $generated@@205 ($generated@@41 $generated@@203)))) ($generated@@30 $generated@@31 ($generated@@23 $generated@@203 $generated@@204 $generated@@205) ($generated@@32 $generated@@203)))
 :pattern ( ($generated@@23 $generated@@203 $generated@@204 $generated@@205))
))))
(assert (forall (($generated@@206 T@U) ) (!  (and (= (= ($generated@@118 $generated@@206) 0) (= $generated@@206 $generated@@66)) (=> (or (not (= ($generated@@118 $generated@@206) 0)) (not true)) (exists (($generated@@207 T@U) ) (! (< 0 ($generated@@90 $generated@@206 $generated@@207))
 :pattern ( ($generated@@90 $generated@@206 $generated@@207))
))))
 :pattern ( ($generated@@118 $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@90 ($generated@@67 $generated@@208 $generated@@209) $generated@@210) (+ ($generated@@90 $generated@@208 $generated@@210) ($generated@@90 $generated@@209 $generated@@210)))
 :pattern ( ($generated@@90 ($generated@@67 $generated@@208 $generated@@209) $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@61 $generated@@213) (and ($generated@@82 $generated@@211) ($generated@@60 $generated@@39 $generated@@211 ($generated@@41 $generated@@212) $generated@@213))) ($generated@@132 ($generated@@45 $generated@@211) $generated@@212 $generated@@213))
 :pattern ( ($generated@@132 ($generated@@45 $generated@@211) $generated@@212 $generated@@213))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@224 T@T) ($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@214 $generated@@224 $generated@@225 $generated@@226 ($generated@@220 $generated@@224 $generated@@225 $generated@@226 $generated@@228 $generated@@229 $generated@@230 $generated@@227) $generated@@229 $generated@@230) $generated@@227)
 :weight 0
)) (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ($generated@@233 T@T) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (or (= $generated@@236 $generated@@238) (= ($generated@@214 $generated@@231 $generated@@232 $generated@@233 ($generated@@220 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@238 $generated@@239) ($generated@@214 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@238 $generated@@239)))
 :weight 0
)) (forall (($generated@@240 T@T) ($generated@@241 T@T) ($generated@@242 T@T) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@246 $generated@@248) (= ($generated@@214 $generated@@240 $generated@@241 $generated@@242 ($generated@@220 $generated@@240 $generated@@241 $generated@@242 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@214 $generated@@240 $generated@@241 $generated@@242 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
)))) (= ($generated@@5 $generated@@215) 6)) (= ($generated@@5 $generated@@216) 7)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ) (! (= ($generated@@218 $generated@@249 $generated@@250 ($generated@@221 $generated@@249 $generated@@250 $generated@@252 $generated@@253 $generated@@251) $generated@@253) $generated@@251)
 :weight 0
))) (forall (($generated@@254 T@T) ($generated@@255 T@T) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (or (= $generated@@258 $generated@@259) (= ($generated@@218 $generated@@254 $generated@@255 ($generated@@221 $generated@@254 $generated@@255 $generated@@257 $generated@@258 $generated@@256) $generated@@259) ($generated@@218 $generated@@254 $generated@@255 $generated@@257 $generated@@259)))
 :weight 0
))) (forall (($generated@@260 T@T) ($generated@@261 T@T) ) (= ($generated@@5 ($generated@@219 $generated@@260 $generated@@261)) 8))) (forall (($generated@@262 T@T) ($generated@@263 T@T) ) (! (= ($generated@@222 ($generated@@219 $generated@@262 $generated@@263)) $generated@@262)
 :pattern ( ($generated@@219 $generated@@262 $generated@@263))
))) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (! (= ($generated@@223 ($generated@@219 $generated@@264 $generated@@265)) $generated@@265)
 :pattern ( ($generated@@219 $generated@@264 $generated@@265))
))))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 Bool) ($generated@@270 T@U) ($generated@@271 T@U) ) (! (= ($generated@@10 ($generated@@214 $generated@@215 $generated@@216 $generated@@6 ($generated@@217 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))  (=> (and (or (not (= $generated@@270 $generated@@266)) (not true)) ($generated@@10 ($generated@@84 $generated@@6 ($generated@@218 $generated@@216 $generated@@44 ($generated@@218 $generated@@215 ($generated@@219 $generated@@216 $generated@@44) $generated@@267 $generated@@270) $generated@@268)))) $generated@@269))
 :pattern ( ($generated@@214 $generated@@215 $generated@@216 $generated@@6 ($generated@@217 $generated@@266 $generated@@267 $generated@@268 $generated@@269) $generated@@270 $generated@@271))
)))
(assert (forall (($generated@@272 T@U) ) (! (= ($generated@@197 ($generated@@85 $generated@@39 $generated@@272)) ($generated@@198 $generated@@272))
 :pattern ( ($generated@@197 ($generated@@85 $generated@@39 $generated@@272)))
)))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ) (!  (=> ($generated@@77 $generated@@273 ($generated@@32 $generated@@274)) (and (= ($generated@@85 $generated@@31 ($generated@@84 $generated@@31 $generated@@273)) $generated@@273) ($generated@@30 $generated@@31 ($generated@@84 $generated@@31 $generated@@273) ($generated@@32 $generated@@274))))
 :pattern ( ($generated@@77 $generated@@273 ($generated@@32 $generated@@274)))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (!  (=> ($generated@@77 $generated@@276 ($generated@@41 $generated@@275)) (and (= ($generated@@85 $generated@@39 ($generated@@84 $generated@@39 $generated@@276)) $generated@@276) ($generated@@30 $generated@@39 ($generated@@84 $generated@@39 $generated@@276) ($generated@@41 $generated@@275))))
 :pattern ( ($generated@@77 $generated@@276 ($generated@@41 $generated@@275)))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and ($generated@@61 $generated@@279) (and ($generated@@82 $generated@@277) ($generated@@60 $generated@@39 $generated@@277 ($generated@@41 $generated@@278) $generated@@279))) ($generated@@60 $generated@@39 ($generated@@43 $generated@@277) ($generated@@41 $generated@@278) $generated@@279))
 :pattern ( ($generated@@60 $generated@@39 ($generated@@43 $generated@@277) ($generated@@41 $generated@@278) $generated@@279))
)))
(assert (= $generated@@29 ($generated@@38 $generated@@39 $generated@@29)))
(assert (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (! (= ($generated@@48 ($generated@@38 $generated@@44 $generated@@280) ($generated@@38 $generated@@39 $generated@@281)) ($generated@@38 $generated@@39 ($generated@@48 $generated@@280 $generated@@281)))
 :pattern ( ($generated@@48 ($generated@@38 $generated@@44 $generated@@280) ($generated@@38 $generated@@39 $generated@@281)))
)))
(assert (forall (($generated@@282 T@U) ($generated@@283 T@T) ) (! (= ($generated@@85 $generated@@283 ($generated@@38 $generated@@283 $generated@@282)) ($generated@@38 $generated@@44 ($generated@@85 $generated@@283 $generated@@282)))
 :pattern ( ($generated@@85 $generated@@283 ($generated@@38 $generated@@283 $generated@@282)))
)))
(assert (forall (($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> (< 0 ($generated@@90 $generated@@284 $generated@@286)) (< 0 ($generated@@90 ($generated@@68 $generated@@284 $generated@@285) $generated@@286)))
 :pattern ( ($generated@@68 $generated@@284 $generated@@285) ($generated@@90 $generated@@284 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ) (! (= (< 0 ($generated@@90 ($generated@@68 $generated@@287 $generated@@288) $generated@@289))  (or (= $generated@@289 $generated@@288) (< 0 ($generated@@90 $generated@@287 $generated@@289))))
 :pattern ( ($generated@@90 ($generated@@68 $generated@@287 $generated@@288) $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ) (! (= ($generated@@60 $generated@@31 $generated@@290 ($generated@@32 $generated@@291) $generated@@292) (forall (($generated@@293 T@U) ) (!  (=> (< 0 ($generated@@90 $generated@@290 $generated@@293)) ($generated@@132 $generated@@293 $generated@@291 $generated@@292))
 :pattern ( ($generated@@90 $generated@@290 $generated@@293))
)))
 :pattern ( ($generated@@60 $generated@@31 $generated@@290 ($generated@@32 $generated@@291) $generated@@292))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> ($generated@@61 $generated@@297) (= ($generated@@60 $generated@@39 ($generated@@48 $generated@@295 $generated@@296) ($generated@@41 $generated@@294) $generated@@297)  (and ($generated@@132 $generated@@295 $generated@@294 $generated@@297) ($generated@@60 $generated@@39 $generated@@296 ($generated@@41 $generated@@294) $generated@@297))))
 :pattern ( ($generated@@60 $generated@@39 ($generated@@48 $generated@@295 $generated@@296) ($generated@@41 $generated@@294) $generated@@297))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@298 () T@U)
(declare-fun $generated@@299 () T@U)
(declare-fun $generated@@300 () T@U)
(declare-fun $generated@@301 () T@U)
(declare-fun $generated@@302 () T@U)
(declare-fun $generated@@303 () T@U)
(declare-fun $generated@@304 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@305  (=> (= $generated@@298 ($generated@@217 $generated@@299 $generated@@300 $generated@@0 false)) (=> (and ($generated@@156 $generated@@301) ($generated@@156 $generated@@302)) (=> (and (and ($generated@@61 $generated@@303) ($generated@@304 $generated@@303)) (and (= $generated@@300 $generated@@303) (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (and (and (and ($generated@@30 $generated@@39 $generated@@306 ($generated@@41 $generated@@22)) ($generated@@30 $generated@@39 $generated@@307 ($generated@@41 $generated@@22))) (and ($generated@@88 ($generated@@24 $generated@@91) $generated@@306) ($generated@@88 ($generated@@24 $generated@@91) $generated@@307))) (or (< ($generated@@198 $generated@@306) ($generated@@198 $generated@@301)) (and (= ($generated@@198 $generated@@306) ($generated@@198 $generated@@301)) (< ($generated@@198 $generated@@307) ($generated@@198 $generated@@302))))) ($generated@@88 ($generated@@24 $generated@@91) ($generated@@37 ($generated@@24 $generated@@91) $generated@@306 $generated@@307)))
 :pattern ( ($generated@@37 ($generated@@24 $generated@@91) $generated@@306 $generated@@307))
)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@89 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (or ($generated@@88 ($generated@@24 $generated@@91) ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (=> ($generated@@42 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@9 true))))))) (=> (=> ($generated@@89 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (or ($generated@@88 ($generated@@24 $generated@@91) ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (=> ($generated@@42 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) ($generated@@10 ($generated@@38 $generated@@6 ($generated@@9 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@89 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (or ($generated@@88 ($generated@@24 $generated@@91) ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (=> (not ($generated@@42 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302))) (let (($generated@@308 ($generated@@43 ($generated@@37 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@301 $generated@@302))))
(let (($generated@@309 ($generated@@45 ($generated@@37 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@301 $generated@@302))))
(forall (($generated@@310 T@U) ) (!  (=> ($generated@@77 $generated@@310 $generated@@22) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@308) $generated@@310) 0) ($generated@@47 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@47 $generated@@309 $generated@@310))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@308) $generated@@310))
)))))))) (=> (=> ($generated@@89 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (or ($generated@@88 ($generated@@24 $generated@@91) ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (=> (not ($generated@@42 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302))) (let (($generated@@311 ($generated@@43 ($generated@@37 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@301 $generated@@302))))
(let (($generated@@312 ($generated@@45 ($generated@@37 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@301 $generated@@302))))
(forall (($generated@@313 T@U) ) (!  (=> ($generated@@77 $generated@@313 $generated@@22) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@311) $generated@@313) 0) ($generated@@47 $generated@@312 $generated@@313)))
 :pattern ( ($generated@@47 $generated@@312 $generated@@313))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@311) $generated@@313))
))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@89 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (or ($generated@@88 ($generated@@24 $generated@@91) ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302)) (=> (not ($generated@@42 ($generated@@37 ($generated@@24 $generated@@91) $generated@@301 $generated@@302))) (let (($generated@@314 ($generated@@43 ($generated@@37 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@301 $generated@@302))))
($generated@@88 ($generated@@24 ($generated@@24 $generated@@91)) $generated@@314)))))))))))))))
(let (($generated@@315  (=> (and ($generated@@61 $generated@@300) ($generated@@304 $generated@@300)) (=> (and (and ($generated@@30 $generated@@39 $generated@@301 ($generated@@41 $generated@@22)) ($generated@@60 $generated@@39 $generated@@301 ($generated@@41 $generated@@22) $generated@@300)) ($generated@@156 $generated@@301)) (=> (and (and (and (and (and ($generated@@30 $generated@@39 $generated@@302 ($generated@@41 $generated@@22)) ($generated@@60 $generated@@39 $generated@@302 ($generated@@41 $generated@@22) $generated@@300)) ($generated@@156 $generated@@302)) (= 3 $generated@@36)) (and ($generated@@89 $generated@@301) (and ($generated@@88 ($generated@@24 $generated@@91) $generated@@301) (ite ($generated@@42 $generated@@301) true (let (($generated@@316 ($generated@@43 $generated@@301)))
(let (($generated@@317 ($generated@@45 $generated@@301)))
 (and (forall (($generated@@318 T@U) ) (!  (=> ($generated@@77 $generated@@318 $generated@@22) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@316) $generated@@318) 0) ($generated@@47 $generated@@317 $generated@@318)))
 :pattern ( ($generated@@47 $generated@@317 $generated@@318))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@316) $generated@@318))
)) ($generated@@88 ($generated@@24 $generated@@91) $generated@@316)))))))) (and (and ($generated@@89 $generated@@302) (and ($generated@@88 ($generated@@24 $generated@@91) $generated@@302) (ite ($generated@@42 $generated@@302) true (let (($generated@@319 ($generated@@43 $generated@@302)))
(let (($generated@@320 ($generated@@45 $generated@@302)))
 (and (forall (($generated@@321 T@U) ) (!  (=> ($generated@@77 $generated@@321 $generated@@22) (=> (> ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@319) $generated@@321) 0) ($generated@@47 $generated@@320 $generated@@321)))
 :pattern ( ($generated@@47 $generated@@320 $generated@@321))
 :pattern ( ($generated@@90 ($generated@@23 $generated@@22 ($generated@@24 $generated@@91) $generated@@319) $generated@@321))
)) ($generated@@88 ($generated@@24 $generated@@91) $generated@@319))))))) (= (ControlFlow 0 5) 2))) $generated@@305)))))
$generated@@315)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
