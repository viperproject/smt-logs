(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U T@U Int Int) Int)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (Int) T@U)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 (T@U T@U Int Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ($generated@@42 Int) ) (! (= ($generated@@36 ($generated@@37 $generated@@38) $generated@@39 $generated@@40 $generated@@41 $generated@@42) ($generated@@36 $generated@@38 $generated@@39 $generated@@40 $generated@@41 $generated@@42))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@38) $generated@@39 $generated@@40 $generated@@41 $generated@@42))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@5 $generated@@45) 4)) (= ($generated@@5 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@5 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@69 ($generated@@24 $generated@@68) $generated@@70)  (or (= $generated@@69 $generated@@25) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@70 $generated@@69) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@69 ($generated@@24 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 Int) ) (!  (=> (and (and (and ($generated@@77 $generated@@80) (and (or (not (= $generated@@81 $generated@@25)) (not true)) (= ($generated@@26 $generated@@81) ($generated@@24 $generated@@79)))) (and (<= 0 $generated@@82) (< $generated@@82 ($generated@@23 $generated@@81)))) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@80 $generated@@81) $generated@@1)))) ($generated@@78 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@80 $generated@@81) ($generated@@76 $generated@@82)) $generated@@79 $generated@@80))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@80 $generated@@81) ($generated@@76 $generated@@82)) ($generated@@24 $generated@@79))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@43 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@43 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@87 ($generated@@32 $generated@@86))  (and ($generated@@27 $generated@@31 $generated@@87 ($generated@@24 $generated@@86)) (or (not (= $generated@@87 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@87 ($generated@@32 $generated@@86)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@87 ($generated@@24 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@78 ($generated@@83 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@30 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@78 ($generated@@83 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@93)) $generated@@2) (= ($generated@@92 ($generated@@24 $generated@@93)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@94)) $generated@@3) (= ($generated@@92 ($generated@@32 $generated@@94)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@94))
)))
(assert  (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@95 $generated@@98 $generated@@99 $generated@@100 ($generated@@97 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@103 $generated@@104) $generated@@101)
 :weight 0
)) (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@95 $generated@@105 $generated@@106 $generated@@107 ($generated@@97 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@95 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@95 $generated@@114 $generated@@115 $generated@@116 ($generated@@97 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@95 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)))))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@10 ($generated@@95 $generated@@31 $generated@@45 $generated@@6 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))  (=> (and (or (not (= $generated@@127 $generated@@123)) (not true)) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@124 $generated@@127) $generated@@125)))) (= $generated@@127 $generated@@126)))
 :pattern ( ($generated@@95 $generated@@31 $generated@@45 $generated@@6 ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@130 ($generated@@24 $generated@@129))  (or (= $generated@@130 $generated@@25) (= ($generated@@26 $generated@@130) ($generated@@24 $generated@@129))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@130 ($generated@@24 $generated@@129)))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@131 $generated@@132 $generated) (and (= ($generated@@83 $generated@@7 ($generated@@43 $generated@@7 $generated@@132)) $generated@@132) ($generated@@27 $generated@@7 ($generated@@43 $generated@@7 $generated@@132) $generated)))
 :pattern ( ($generated@@131 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@131 ($generated@@83 $generated@@135 $generated@@133) $generated@@134) ($generated@@27 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@131 ($generated@@83 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@23 $generated@@136))
 :pattern ( ($generated@@23 $generated@@136))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@21 ($generated@@76 $generated@@137)) 1)
 :pattern ( ($generated@@76 $generated@@137))
)))
(assert (forall (($generated@@139 Int) ) (! (= ($generated@@138 ($generated@@76 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@76 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@24 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@24 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@32 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@32 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@43 $generated@@145 ($generated@@83 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@83 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and ($generated@@77 $generated@@147) (and (or (not (= $generated@@148 $generated@@25)) (not true)) (= ($generated@@26 $generated@@148) ($generated@@24 $generated@@146)))) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@147 $generated@@148) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@148)) $generated $generated@@147))
 :pattern ( ($generated@@23 $generated@@148) ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@147 $generated@@148) $generated@@1)) ($generated@@24 $generated@@146))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Int) ) (!  (=> (and (and ($generated@@77 $generated@@150) (and (or (not (= $generated@@151 $generated@@25)) (not true)) (= ($generated@@26 $generated@@151) ($generated@@24 $generated@@149)))) (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@23 $generated@@151)))) ($generated@@131 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@150 $generated@@151) ($generated@@76 $generated@@152)) $generated@@149))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@150 $generated@@151) ($generated@@76 $generated@@152)) ($generated@@24 $generated@@149))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@131 $generated@@154 ($generated@@24 $generated@@153)) (and (= ($generated@@83 $generated@@31 ($generated@@43 $generated@@31 $generated@@154)) $generated@@154) ($generated@@27 $generated@@31 ($generated@@43 $generated@@31 $generated@@154) ($generated@@24 $generated@@153))))
 :pattern ( ($generated@@131 $generated@@154 ($generated@@24 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@131 $generated@@156 ($generated@@32 $generated@@155)) (and (= ($generated@@83 $generated@@31 ($generated@@43 $generated@@31 $generated@@156)) $generated@@156) ($generated@@27 $generated@@31 ($generated@@43 $generated@@31 $generated@@156) ($generated@@32 $generated@@155))))
 :pattern ( ($generated@@131 $generated@@156 ($generated@@32 $generated@@155)))
)))
(assert (forall (($generated@@157 Int) ) (! (= ($generated@@83 $generated@@7 ($generated@@11 ($generated@@71 $generated@@157))) ($generated@@73 $generated@@46 ($generated@@83 $generated@@7 ($generated@@11 $generated@@157))))
 :pattern ( ($generated@@83 $generated@@7 ($generated@@11 ($generated@@71 $generated@@157))))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@83 $generated@@159 ($generated@@73 $generated@@159 $generated@@158)) ($generated@@73 $generated@@46 ($generated@@83 $generated@@159 $generated@@158)))
 :pattern ( ($generated@@83 $generated@@159 ($generated@@73 $generated@@159 $generated@@158)))
)))
(assert  (=> (<= 0 $generated@@160) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ($generated@@166 Int) ) (!  (=> (or ($generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@166) (and (< 0 $generated@@160) (and (and ($generated@@77 $generated@@163) ($generated@@27 $generated@@31 $generated@@164 ($generated@@32 $generated))) (and (and (<= ($generated@@71 0) $generated@@165) (<= $generated@@165 $generated@@166)) (<= $generated@@166 ($generated@@23 $generated@@164)))))) (and (=> (or (not (= $generated@@165 $generated@@166)) (not true)) ($generated@@161 $generated@@163 $generated@@164 (+ $generated@@165 1) $generated@@166)) (= ($generated@@36 ($generated@@37 $generated@@162) $generated@@163 $generated@@164 $generated@@165 $generated@@166) (ite (= $generated@@165 $generated@@166) 0 (+ ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@163 $generated@@164) ($generated@@76 $generated@@165)))) ($generated@@36 $generated@@162 $generated@@163 $generated@@164 (+ $generated@@165 1) $generated@@166))))))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@162) $generated@@163 $generated@@164 $generated@@165 $generated@@166) ($generated@@77 $generated@@163))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! ($generated@@30 $generated@@7 $generated@@168 $generated $generated@@167)
 :pattern ( ($generated@@30 $generated@@7 $generated@@168 $generated $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@27 $generated@@7 $generated@@169 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@169 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 () Bool)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@180  (=> (or (not (= $generated@@170 $generated@@171)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 12)) (or (not (= $generated@@172 $generated@@25)) (not true))) (=> (or (not (= $generated@@172 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 11)) (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@23 $generated@@172)))) (=> (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@23 $generated@@172))) (=> (= $generated@@173 ($generated@@10 ($generated@@95 $generated@@31 $generated@@45 $generated@@6 $generated@@174 $generated@@172 ($generated@@76 $generated@@170)))) (=> (and (and ($generated@@30 $generated@@31 $generated@@172 ($generated@@32 $generated) $generated@@175) (= $generated@@176 (+ $generated@@170 1))) (and ($generated@@30 $generated@@7 ($generated@@11 $generated@@176) $generated $generated@@175) ($generated@@30 $generated@@7 ($generated@@11 $generated@@171) $generated $generated@@175))) (and (=> (= (ControlFlow 0 4) (- 0 10)) (<= ($generated@@71 0) $generated@@176)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (<= $generated@@176 $generated@@171)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (<= $generated@@171 ($generated@@23 $generated@@172))) (=> (and (and (and (<= ($generated@@71 0) $generated@@176) (<= $generated@@176 $generated@@171)) (<= $generated@@171 ($generated@@23 $generated@@172))) (= $generated@@177 (forall (($generated@@181 T@U) ($generated@@182 T@U) )  (=> (and (and (or (not (= $generated@@181 $generated@@25)) (not true)) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@175 $generated@@181) $generated@@1)))) (= $generated@@181 $generated@@172)) ($generated@@10 ($generated@@95 $generated@@31 $generated@@45 $generated@@6 $generated@@174 $generated@@181 $generated@@182)))))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 (- $generated@@171 $generated@@170)) (= (- $generated@@171 $generated@@176) (- $generated@@171 $generated@@170)))) (=> (or (<= 0 (- $generated@@171 $generated@@170)) (= (- $generated@@171 $generated@@176) (- $generated@@171 $generated@@170))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (< (- $generated@@171 $generated@@176) (- $generated@@171 $generated@@170))) (=> (< (- $generated@@171 $generated@@176) (- $generated@@171 $generated@@170)) (=> (and (and ($generated@@161 $generated@@175 $generated@@172 (+ $generated@@170 1) $generated@@171) (= ($generated@@36 ($generated@@37 $generated@@178) $generated@@175 $generated@@172 $generated@@170 $generated@@171) (+ ($generated@@12 ($generated@@43 $generated@@7 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@175 $generated@@172) ($generated@@76 $generated@@170)))) ($generated@@36 ($generated@@37 $generated@@178) $generated@@175 $generated@@172 (+ $generated@@170 1) $generated@@171)))) (and ($generated@@161 $generated@@175 $generated@@172 (+ $generated@@170 1) $generated@@171) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@36 ($generated@@37 $generated@@178) $generated@@175 $generated@@172 $generated@@170 $generated@@171)) $generated))) (and (=> (= (ControlFlow 0 4) (- 0 5)) $generated@@173) (=> $generated@@173 (=> (= (ControlFlow 0 4) (- 0 3)) $generated@@177)))))))))))))))))))))
(let (($generated@@183 true))
(let (($generated@@184 true))
(let (($generated@@185  (=> (and (and (<= ($generated@@71 0) $generated@@170) (<= $generated@@170 $generated@@171)) (<= $generated@@171 ($generated@@23 $generated@@172))) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@184) (=> (= (ControlFlow 0 13) 2) $generated@@183)) (=> (= (ControlFlow 0 13) 4) $generated@@180)))))
(let (($generated@@186  (=> (and (not (and (<= ($generated@@71 0) $generated@@170) (<= $generated@@170 $generated@@171))) (= (ControlFlow 0 16) 13)) $generated@@185)))
(let (($generated@@187  (=> (and (<= ($generated@@71 0) $generated@@170) (<= $generated@@170 $generated@@171)) (and (=> (= (ControlFlow 0 14) (- 0 15)) (or (not (= $generated@@172 $generated@@25)) (not true))) (=> (or (not (= $generated@@172 $generated@@25)) (not true)) (=> (= (ControlFlow 0 14) 13) $generated@@185))))))
(let (($generated@@188  (=> (< $generated@@170 ($generated@@71 0)) (and (=> (= (ControlFlow 0 18) 14) $generated@@187) (=> (= (ControlFlow 0 18) 16) $generated@@186)))))
(let (($generated@@189  (=> (<= ($generated@@71 0) $generated@@170) (and (=> (= (ControlFlow 0 17) 14) $generated@@187) (=> (= (ControlFlow 0 17) 16) $generated@@186)))))
(let (($generated@@190  (=> (= $generated@@174 ($generated@@96 $generated@@25 $generated@@175 $generated@@1 $generated@@172)) (and (=> (= (ControlFlow 0 19) 17) $generated@@189) (=> (= (ControlFlow 0 19) 18) $generated@@188)))))
(let (($generated@@191  (=> (and (and (and ($generated@@77 $generated@@175) ($generated@@179 $generated@@175)) ($generated@@27 $generated@@31 $generated@@172 ($generated@@32 $generated))) (and (= 0 $generated@@160) (= (ControlFlow 0 20) 19))) $generated@@190)))
$generated@@191)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
