(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U Int) Bool)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@41 (T@U Int) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (Int) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (Int) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (Bool T@U) Int)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U) Int)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@U Bool T@U) Int)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 () Bool)
(declare-fun $generated@@93 (Int Int) Int)
(declare-fun $generated@@94 () Bool)
(declare-fun $generated@@102 (Int Int) Int)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@27 $generated@@28) $generated@@29)  (or (= $generated@@29 $generated@@28) ($generated@@21 $generated@@27 $generated@@29)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@27 $generated@@28) $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@21 $generated@@32 $generated@@33) (not ($generated@@21 ($generated@@30 $generated@@31 $generated@@32) $generated@@33)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@32) ($generated@@21 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ) (!  (not ($generated@@21 $generated@@34 $generated@@35))
 :pattern ( ($generated@@21 $generated@@34 $generated@@35))
)))
(assert (= ($generated@@3 $generated@@39) 3))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@47 T@U) ($generated@@48 Int) ) (!  (=> (or ($generated@@41 ($generated@@38 $generated@@39 $generated@@47) ($generated@@40 $generated@@48)) (and (< 1 $generated@@36) ($generated@@42 $generated@@39 $generated@@47 ($generated@@43 $generated)))) (and (and (forall (($generated@@49 Int) ) (!  (=> ($generated@@21 ($generated@@38 $generated@@39 $generated@@47) ($generated@@45 $generated@@5 ($generated@@9 $generated@@49))) ($generated@@46 $generated@@49))
 :pattern ( ($generated@@44 $generated@@49))
 :pattern ( ($generated@@21 $generated@@47 ($generated@@45 $generated@@5 ($generated@@9 $generated@@49))))
)) (=> (forall (($generated@@50 Int) ) (!  (=> ($generated@@21 ($generated@@38 $generated@@39 $generated@@47) ($generated@@45 $generated@@5 ($generated@@9 $generated@@50))) ($generated@@44 $generated@@50))
 :pattern ( ($generated@@44 $generated@@50))
 :pattern ( ($generated@@21 $generated@@47 ($generated@@45 $generated@@5 ($generated@@9 $generated@@50))))
)) (forall (($generated@@51 Int) ) (! ($generated@@46 $generated@@51)
 :pattern ( ($generated@@21 $generated@@47 ($generated@@45 $generated@@5 ($generated@@9 $generated@@51))))
 :pattern ( ($generated@@44 $generated@@51))
)))) (= ($generated@@37 ($generated@@38 $generated@@39 $generated@@47) ($generated@@40 $generated@@48))  (and (forall (($generated@@52 Int) ) (!  (=> ($generated@@21 ($generated@@38 $generated@@39 $generated@@47) ($generated@@45 $generated@@5 ($generated@@9 $generated@@52))) ($generated@@44 $generated@@52))
 :pattern ( ($generated@@44 $generated@@52))
 :pattern ( ($generated@@21 $generated@@47 ($generated@@45 $generated@@5 ($generated@@9 $generated@@52))))
)) (forall (($generated@@53 Int) ) (!  (=> (and ($generated@@44 $generated@@53) (<= $generated@@53 ($generated@@40 $generated@@48))) ($generated@@21 ($generated@@38 $generated@@39 $generated@@47) ($generated@@45 $generated@@5 ($generated@@9 $generated@@53))))
 :pattern ( ($generated@@21 $generated@@47 ($generated@@45 $generated@@5 ($generated@@9 $generated@@53))))
 :pattern ( ($generated@@44 $generated@@53))
))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@38 $generated@@39 $generated@@47) ($generated@@40 $generated@@48)))
))))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@21 ($generated@@30 $generated@@54 $generated@@55) $generated@@56)  (and ($generated@@21 $generated@@54 $generated@@56) (not ($generated@@21 $generated@@55 $generated@@56))))
 :pattern ( ($generated@@21 ($generated@@30 $generated@@54 $generated@@55) $generated@@56))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@57 T@U) ($generated@@58 Int) ) (!  (=> (or ($generated@@41 $generated@@57 $generated@@58) (and (< 1 $generated@@36) ($generated@@42 $generated@@39 $generated@@57 ($generated@@43 $generated)))) (and (and (forall (($generated@@59 Int) ) (!  (=> ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@59))) ($generated@@46 $generated@@59))
 :pattern ( ($generated@@44 $generated@@59))
 :pattern ( ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@59))))
)) (=> (forall (($generated@@60 Int) ) (!  (=> ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@60))) ($generated@@44 $generated@@60))
 :pattern ( ($generated@@44 $generated@@60))
 :pattern ( ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@60))))
)) (forall (($generated@@61 Int) ) (! ($generated@@46 $generated@@61)
 :pattern ( ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@61))))
 :pattern ( ($generated@@44 $generated@@61))
)))) (= ($generated@@37 $generated@@57 $generated@@58)  (and (forall (($generated@@62 Int) ) (!  (=> ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@62))) ($generated@@44 $generated@@62))
 :pattern ( ($generated@@44 $generated@@62))
 :pattern ( ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@62))))
)) (forall (($generated@@63 Int) ) (!  (=> (and ($generated@@44 $generated@@63) (<= $generated@@63 $generated@@58)) ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@63))))
 :pattern ( ($generated@@21 $generated@@57 ($generated@@45 $generated@@5 ($generated@@9 $generated@@63))))
 :pattern ( ($generated@@44 $generated@@63))
))))))
 :pattern ( ($generated@@37 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@64 Int) ) (! (= ($generated@@40 $generated@@64) $generated@@64)
 :pattern ( ($generated@@40 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@38 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@38 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@45 $generated@@69 ($generated@@67 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@42 $generated@@39 $generated@@71 ($generated@@43 $generated@@72)) (forall (($generated@@73 T@U) ) (!  (=> ($generated@@21 $generated@@71 $generated@@73) ($generated@@70 $generated@@73 $generated@@72))
 :pattern ( ($generated@@21 $generated@@71 $generated@@73))
)))
 :pattern ( ($generated@@42 $generated@@39 $generated@@71 ($generated@@43 $generated@@72)))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@76 $generated@@81) (and (< 1 $generated@@36) (and (and ($generated@@75 $generated@@80) ($generated@@42 $generated@@39 $generated@@81 ($generated@@43 $generated))) (not ($generated@@77 $generated@@81 $generated@@34))))) (and ($generated@@78 $generated@@81) (= ($generated@@74 true $generated@@81) (let (($generated@@82 ($generated@@79 $generated@@81)))
$generated@@82))))
 :pattern ( ($generated@@74 true $generated@@81) ($generated@@75 $generated@@80))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@83 ($generated@@45 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@84 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@83 ($generated@@45 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@91 ($generated@@38 $generated@@39 $generated@@96)) (and (< 2 $generated@@36) ($generated@@42 $generated@@39 $generated@@96 ($generated@@43 $generated)))) (and (=> (not ($generated@@77 $generated@@96 $generated@@34)) (and ($generated@@76 ($generated@@38 $generated@@39 $generated@@96)) (let (($generated@@97 ($generated@@74 $generated@@92 ($generated@@38 $generated@@39 $generated@@96))))
($generated@@91 ($generated@@30 $generated@@96 ($generated@@20 $generated@@34 ($generated@@45 $generated@@5 ($generated@@9 $generated@@97)))))))) (= ($generated@@89 ($generated@@90 $generated@@95) true ($generated@@38 $generated@@39 $generated@@96)) (ite ($generated@@77 $generated@@96 $generated@@34) 1 (let (($generated@@98 ($generated@@74 $generated@@92 ($generated@@38 $generated@@39 $generated@@96))))
($generated@@93 $generated@@98 ($generated@@89 ($generated@@90 $generated@@95) $generated@@94 ($generated@@30 $generated@@96 ($generated@@20 $generated@@34 ($generated@@45 $generated@@5 ($generated@@9 $generated@@98)))))))))))
 :weight 3
 :pattern ( ($generated@@89 ($generated@@90 $generated@@95) true ($generated@@38 $generated@@39 $generated@@96)))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 Bool) ($generated@@101 T@U) ) (! (= ($generated@@89 ($generated@@90 $generated@@99) $generated@@100 $generated@@101) ($generated@@89 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@89 ($generated@@90 $generated@@99) $generated@@100 $generated@@101))
)))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@103 Int) ) (!  (=> (or ($generated@@46 $generated@@103) (< 0 $generated@@36)) (= ($generated@@44 $generated@@103)  (and (<= ($generated@@40 2) $generated@@103) (forall (($generated@@104 Int) ) (!  (=> (and (<= ($generated@@40 2) $generated@@104) (< $generated@@104 $generated@@103)) (or (not (= ($generated@@102 $generated@@103 $generated@@104) 0)) (not true)))
 :pattern ( ($generated@@102 $generated@@103 $generated@@104))
)))))
 :pattern ( ($generated@@44 $generated@@103))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@77 $generated@@105 $generated@@106) (= $generated@@105 $generated@@106))
 :pattern ( ($generated@@77 $generated@@105 $generated@@106))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@76 ($generated@@38 $generated@@39 $generated@@108)) (and (< 1 $generated@@36) (and (and ($generated@@75 $generated@@107) ($generated@@42 $generated@@39 $generated@@108 ($generated@@43 $generated))) (not ($generated@@77 $generated@@108 $generated@@34))))) (and ($generated@@78 ($generated@@38 $generated@@39 $generated@@108)) (= ($generated@@74 true ($generated@@38 $generated@@39 $generated@@108)) (let (($generated@@109 ($generated@@79 ($generated@@38 $generated@@39 $generated@@108))))
$generated@@109))))
 :weight 3
 :pattern ( ($generated@@74 true ($generated@@38 $generated@@39 $generated@@108)) ($generated@@75 $generated@@107))
))))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@70 $generated@@110 $generated) (and (= ($generated@@45 $generated@@5 ($generated@@67 $generated@@5 $generated@@110)) $generated@@110) ($generated@@42 $generated@@5 ($generated@@67 $generated@@5 $generated@@110) $generated)))
 :pattern ( ($generated@@70 $generated@@110 $generated))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@70 ($generated@@45 $generated@@113 $generated@@111) $generated@@112) ($generated@@42 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@70 ($generated@@45 $generated@@113 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@78 $generated@@114) (and ($generated@@21 $generated@@114 ($generated@@45 $generated@@5 ($generated@@9 ($generated@@79 $generated@@114)))) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@21 $generated@@114 ($generated@@45 $generated@@5 $generated@@115)) (<= ($generated@@10 $generated@@115) ($generated@@79 $generated@@114)))
 :pattern ( ($generated@@21 $generated@@114 ($generated@@45 $generated@@5 $generated@@115)))
))))
 :pattern ( ($generated@@79 $generated@@114))
)))
(assert  (=> (<= 2 $generated@@36) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@91 $generated@@117) (and (< 2 $generated@@36) ($generated@@42 $generated@@39 $generated@@117 ($generated@@43 $generated)))) (and (=> (not ($generated@@77 $generated@@117 $generated@@34)) (and ($generated@@76 $generated@@117) (let (($generated@@118 ($generated@@74 $generated@@92 $generated@@117)))
($generated@@91 ($generated@@30 $generated@@117 ($generated@@20 $generated@@34 ($generated@@45 $generated@@5 ($generated@@9 $generated@@118)))))))) (= ($generated@@89 ($generated@@90 $generated@@116) true $generated@@117) (ite ($generated@@77 $generated@@117 $generated@@34) 1 (let (($generated@@119 ($generated@@74 $generated@@92 $generated@@117)))
($generated@@93 $generated@@119 ($generated@@89 $generated@@116 $generated@@94 ($generated@@30 $generated@@117 ($generated@@20 $generated@@34 ($generated@@45 $generated@@5 ($generated@@9 $generated@@119)))))))))))
 :pattern ( ($generated@@89 ($generated@@90 $generated@@116) true $generated@@117))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@84 $generated@@39 $generated@@120 ($generated@@43 $generated@@121) $generated@@122) (forall (($generated@@123 T@U) ) (!  (=> ($generated@@21 $generated@@120 $generated@@123) ($generated@@83 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@21 $generated@@120 $generated@@123))
)))
 :pattern ( ($generated@@84 $generated@@39 $generated@@120 ($generated@@43 $generated@@121) $generated@@122))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@124 Bool) ($generated@@125 T@U) ) (!  (=> (or ($generated@@76 $generated@@125) (and (< 1 $generated@@36) (and ($generated@@42 $generated@@39 $generated@@125 ($generated@@43 $generated)) (not ($generated@@77 $generated@@125 $generated@@34))))) (and ($generated@@21 $generated@@125 ($generated@@45 $generated@@5 ($generated@@9 ($generated@@74 $generated@@124 $generated@@125)))) (forall (($generated@@126 T@U) ) (!  (=> ($generated@@21 $generated@@125 ($generated@@45 $generated@@5 $generated@@126)) (<= ($generated@@10 $generated@@126) ($generated@@74 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@21 $generated@@125 ($generated@@45 $generated@@5 $generated@@126)))
))))
 :pattern ( ($generated@@74 $generated@@124 $generated@@125))
))))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@43 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@43 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@19 ($generated@@43 $generated@@129)) $generated@@1)
 :pattern ( ($generated@@43 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@67 $generated@@131 ($generated@@45 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@45 $generated@@131 $generated@@130))
)))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@132 Int) ) (!  (=> (or ($generated@@46 ($generated@@40 $generated@@132)) (< 0 $generated@@36)) (= ($generated@@44 ($generated@@40 $generated@@132))  (and (<= ($generated@@40 2) ($generated@@40 $generated@@132)) (forall (($generated@@133 Int) ) (!  (=> (and (<= ($generated@@40 2) $generated@@133) (< $generated@@133 $generated@@132)) (or (not (= ($generated@@102 $generated@@132 $generated@@133) 0)) (not true)))
 :pattern ( ($generated@@102 $generated@@132 $generated@@133))
)))))
 :weight 3
 :pattern ( ($generated@@44 ($generated@@40 $generated@@132)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@134 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@134 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@134 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@134 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@3 $generated@@135) 4)) (= ($generated@@3 $generated@@136) 5)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@138 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@138 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@138 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (= ($generated@@3 $generated@@139) 6)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@3 ($generated@@140 $generated@@181 $generated@@182)) 7))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@8 ($generated@@134 $generated@@135 $generated@@136 $generated@@4 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@8 ($generated@@67 $generated@@4 ($generated@@138 $generated@@136 $generated@@139 ($generated@@138 $generated@@135 ($generated@@140 $generated@@136 $generated@@139) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136 $generated@@4 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 Int) ($generated@@194 Int) ) (! (= ($generated@@102 $generated@@193 $generated@@194) (mod $generated@@193 $generated@@194))
 :pattern ( ($generated@@102 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 Int) ($generated@@196 Int) ) (! (= ($generated@@93 $generated@@195 $generated@@196) (* $generated@@195 $generated@@196))
 :pattern ( ($generated@@93 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@70 $generated@@197 ($generated@@43 $generated@@198)) (and (= ($generated@@45 $generated@@39 ($generated@@67 $generated@@39 $generated@@197)) $generated@@197) ($generated@@42 $generated@@39 ($generated@@67 $generated@@39 $generated@@197) ($generated@@43 $generated@@198))))
 :pattern ( ($generated@@70 $generated@@197 ($generated@@43 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@77 $generated@@199 $generated@@200) (forall (($generated@@201 T@U) ) (! (= ($generated@@21 $generated@@199 $generated@@201) ($generated@@21 $generated@@200 $generated@@201))
 :pattern ( ($generated@@21 $generated@@199 $generated@@201))
 :pattern ( ($generated@@21 $generated@@200 $generated@@201))
)))
 :pattern ( ($generated@@77 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@45 $generated@@5 ($generated@@9 ($generated@@40 $generated@@202))) ($generated@@38 $generated@@139 ($generated@@45 $generated@@5 ($generated@@9 $generated@@202))))
 :pattern ( ($generated@@45 $generated@@5 ($generated@@9 ($generated@@40 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@45 $generated@@204 ($generated@@38 $generated@@204 $generated@@203)) ($generated@@38 $generated@@139 ($generated@@45 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@45 $generated@@204 ($generated@@38 $generated@@204 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! ($generated@@84 $generated@@5 $generated@@206 $generated $generated@@205)
 :pattern ( ($generated@@84 $generated@@5 $generated@@206 $generated $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ) (! ($generated@@42 $generated@@5 $generated@@207 $generated)
 :pattern ( ($generated@@42 $generated@@5 $generated@@207 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 31) (let (($generated@@223 true))
(let (($generated@@224  (and (=> (= (ControlFlow 0 3) (- 0 5)) (< $generated@@208 $generated@@209)) (=> (< $generated@@208 $generated@@209) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@46 $generated@@209) (or ($generated@@44 $generated@@209) (<= ($generated@@40 2) $generated@@209)))) (=> (=> ($generated@@46 $generated@@209) (or ($generated@@44 $generated@@209) (<= ($generated@@40 2) $generated@@209))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@46 $generated@@209) (or ($generated@@44 $generated@@209) (forall (($generated@@225 Int) ) (!  (=> (and (<= ($generated@@40 2) $generated@@225) (< $generated@@225 $generated@@209)) (or (not (= ($generated@@102 $generated@@209 $generated@@225) 0)) (not true)))
 :pattern ( ($generated@@102 $generated@@209 $generated@@225))
)))))))))))
(let (($generated@@226  (=> (=> (< $generated@@208 $generated@@210) (=> (<= $generated@@210 $generated@@211) ($generated@@46 $generated@@210))) (and (=> (= (ControlFlow 0 16) (- 0 17)) (or (and ($generated@@42 $generated@@5 ($generated@@9 (- (+ $generated@@211 1) 1)) $generated) (and (and (< $generated@@208 (- (+ $generated@@211 1) 1)) (<= (- (+ $generated@@211 1) 1) $generated@@211)) ($generated@@44 (- (+ $generated@@211 1) 1)))) (or (and ($generated@@42 $generated@@5 ($generated@@9 (+ $generated@@208 1)) $generated) (and (and (< $generated@@208 (+ $generated@@208 1)) (<= (+ $generated@@208 1) $generated@@211)) ($generated@@44 (+ $generated@@208 1)))) (or (and ($generated@@42 $generated@@5 ($generated@@9 ($generated@@40 0)) $generated) (and (and (< $generated@@208 0) (<= ($generated@@40 0) $generated@@211)) ($generated@@44 ($generated@@40 0)))) (exists (($generated@@227 Int) )  (and (and (< $generated@@208 $generated@@227) (<= $generated@@227 $generated@@211)) ($generated@@44 $generated@@227))))))) (=> (or (and ($generated@@42 $generated@@5 ($generated@@9 (- (+ $generated@@211 1) 1)) $generated) (and (and (< $generated@@208 (- (+ $generated@@211 1) 1)) (<= (- (+ $generated@@211 1) 1) $generated@@211)) ($generated@@44 (- (+ $generated@@211 1) 1)))) (or (and ($generated@@42 $generated@@5 ($generated@@9 (+ $generated@@208 1)) $generated) (and (and (< $generated@@208 (+ $generated@@208 1)) (<= (+ $generated@@208 1) $generated@@211)) ($generated@@44 (+ $generated@@208 1)))) (or (and ($generated@@42 $generated@@5 ($generated@@9 ($generated@@40 0)) $generated) (and (and (< $generated@@208 0) (<= ($generated@@40 0) $generated@@211)) ($generated@@44 ($generated@@40 0)))) (exists (($generated@@228 Int) )  (and (and (< $generated@@208 $generated@@228) (<= $generated@@228 $generated@@211)) ($generated@@44 $generated@@228)))))) (=> (and (and (and (< $generated@@208 $generated@@212) (<= $generated@@212 $generated@@211)) ($generated@@44 $generated@@212)) (and (= $generated@@209 $generated@@212) (= (ControlFlow 0 16) 3))) $generated@@224))))))
(let (($generated@@229  (=> (and (not (and (< $generated@@208 $generated@@210) (<= $generated@@210 $generated@@211))) (= (ControlFlow 0 19) 16)) $generated@@226)))
(let (($generated@@230  (=> (and (and (and (< $generated@@208 $generated@@210) (<= $generated@@210 $generated@@211)) ($generated@@84 $generated@@5 ($generated@@9 $generated@@210) $generated $generated@@213)) (and ($generated@@46 $generated@@210) (= (ControlFlow 0 18) 16))) $generated@@226)))
(let (($generated@@231  (=> (<= $generated@@210 $generated@@208) (and (=> (= (ControlFlow 0 21) 18) $generated@@230) (=> (= (ControlFlow 0 21) 19) $generated@@229)))))
(let (($generated@@232  (=> (< $generated@@208 $generated@@210) (and (=> (= (ControlFlow 0 20) 18) $generated@@230) (=> (= (ControlFlow 0 20) 19) $generated@@229)))))
(let (($generated@@233  (and (=> (= (ControlFlow 0 22) 20) $generated@@232) (=> (= (ControlFlow 0 22) 21) $generated@@231))))
(let (($generated@@234  (=> (exists (($generated@@235 Int) ) (!  (and (and (< $generated@@208 $generated@@235) (<= $generated@@235 $generated@@211)) ($generated@@44 $generated@@235))
 :pattern ( ($generated@@44 $generated@@235))
)) (and (=> (= (ControlFlow 0 23) 22) $generated@@233) (=> (= (ControlFlow 0 23) 15) $generated@@223)))))
(let (($generated@@236  (=> (< $generated@@208 $generated@@214) (=> (and (= $generated@@209 $generated@@214) (= (ControlFlow 0 10) 3)) $generated@@224))))
(let (($generated@@237  (=> (<= $generated@@214 $generated@@208) (and (=> (= (ControlFlow 0 6) (- 0 9)) ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@214)))) (=> ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@214))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (forall (($generated@@238 Int) ) (!  (=> ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@238))) (<= ($generated@@40 1) $generated@@238))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@238))))
))) (=> (forall (($generated@@239 T@U) ) (!  (=> ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 $generated@@239)) (<= ($generated@@40 1) ($generated@@10 $generated@@239)))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 $generated@@239)))
)) (=> (and ($generated@@75 $generated@@216) ($generated@@217 $generated@@216)) (=> (and (and (and ($generated@@91 $generated@@215) (=> (<= ($generated@@40 1) ($generated@@89 ($generated@@90 $generated@@218) $generated@@94 $generated@@215)) (forall (($generated@@240 T@U) ) (!  (=> ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 $generated@@240)) ($generated@@91 $generated@@215))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 $generated@@240)))
)))) (<= ($generated@@40 1) ($generated@@89 ($generated@@90 ($generated@@90 $generated@@218)) $generated@@94 $generated@@215))) (and (forall (($generated@@241 T@U) ) (!  (=> ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 $generated@@241)) (<= ($generated@@10 $generated@@241) ($generated@@89 ($generated@@90 $generated@@218) $generated@@94 $generated@@215)))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 $generated@@241)))
)) (= $generated@@219 $generated@@216))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@8 ($generated@@38 $generated@@4 ($generated@@7 false)))) (=> ($generated@@8 ($generated@@38 $generated@@4 ($generated@@7 false))) (=> (and (= $generated@@209 $generated@@214) (= (ControlFlow 0 6) 3)) $generated@@224))))))))))))
(let (($generated@@242  (=> (not (exists (($generated@@243 Int) ) (!  (and (and (< $generated@@208 $generated@@243) (<= $generated@@243 $generated@@211)) ($generated@@44 $generated@@243))
 :pattern ( ($generated@@44 $generated@@243))
))) (and (=> (= (ControlFlow 0 11) (- 0 14)) (=> ($generated@@41 $generated@@215 $generated@@211) (or ($generated@@37 $generated@@215 $generated@@211) (forall (($generated@@244 Int) ) (!  (=> ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@244))) ($generated@@44 $generated@@244))
 :pattern ( ($generated@@44 $generated@@244))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@244))))
))))) (=> (=> ($generated@@41 $generated@@215 $generated@@211) (or ($generated@@37 $generated@@215 $generated@@211) (forall (($generated@@245 Int) ) (!  (=> ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@245))) ($generated@@44 $generated@@245))
 :pattern ( ($generated@@44 $generated@@245))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@245))))
)))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (=> ($generated@@41 $generated@@215 $generated@@211) (or ($generated@@37 $generated@@215 $generated@@211) (forall (($generated@@246 Int) ) (!  (=> (and ($generated@@44 $generated@@246) (<= $generated@@246 $generated@@211)) ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@246))))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@246))))
 :pattern ( ($generated@@44 $generated@@246))
))))) (=> (=> ($generated@@41 $generated@@215 $generated@@211) (or ($generated@@37 $generated@@215 $generated@@211) (forall (($generated@@247 Int) ) (!  (=> (and ($generated@@44 $generated@@247) (<= $generated@@247 $generated@@211)) ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@247))))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@247))))
 :pattern ( ($generated@@44 $generated@@247))
)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (= $generated@@211 ($generated@@89 ($generated@@90 ($generated@@90 $generated@@218)) $generated@@94 $generated@@215))) (=> (= $generated@@211 ($generated@@89 ($generated@@90 ($generated@@90 $generated@@218)) $generated@@94 $generated@@215)) (=> (and (and (and ($generated@@75 $generated@@219) ($generated@@217 $generated@@219)) ($generated@@46 (+ $generated@@211 1))) (and (and ($generated@@46 (+ $generated@@211 1)) ($generated@@44 (+ $generated@@211 1))) (and (= $generated@@213 $generated@@219) (= $generated@@214 (+ $generated@@211 1))))) (and (=> (= (ControlFlow 0 11) 6) $generated@@237) (=> (= (ControlFlow 0 11) 10) $generated@@236))))))))))))
(let (($generated@@248  (=> (forall (($generated@@249 Int) ) (!  (=> (and (< $generated@@208 $generated@@249) (<= $generated@@249 $generated@@211)) ($generated@@46 $generated@@249))
 :pattern ( ($generated@@44 $generated@@249))
)) (and (=> (= (ControlFlow 0 24) 23) $generated@@234) (=> (= (ControlFlow 0 24) 11) $generated@@242)))))
(let (($generated@@250  (=> (and (not (and (< $generated@@208 $generated@@220) (<= $generated@@220 $generated@@211))) (= (ControlFlow 0 26) 24)) $generated@@248)))
(let (($generated@@251  (=> (and (and (and (< $generated@@208 $generated@@220) (<= $generated@@220 $generated@@211)) ($generated@@84 $generated@@5 ($generated@@9 $generated@@220) $generated $generated@@213)) (and ($generated@@46 $generated@@220) (= (ControlFlow 0 25) 24))) $generated@@248)))
(let (($generated@@252  (=> (<= $generated@@220 $generated@@208) (and (=> (= (ControlFlow 0 28) 25) $generated@@251) (=> (= (ControlFlow 0 28) 26) $generated@@250)))))
(let (($generated@@253  (=> (< $generated@@208 $generated@@220) (and (=> (= (ControlFlow 0 27) 25) $generated@@251) (=> (= (ControlFlow 0 27) 26) $generated@@250)))))
(let (($generated@@254  (and (=> (= (ControlFlow 0 29) 27) $generated@@253) (=> (= (ControlFlow 0 29) 28) $generated@@252))))
(let (($generated@@255 true))
(let (($generated@@256  (=> (= $generated@@221 ($generated@@137 $generated@@222 $generated@@213 $generated@@2 false)) (=> (and (and ($generated@@84 $generated@@39 $generated@@215 ($generated@@43 $generated) $generated@@213) ($generated@@91 $generated@@215)) (and ($generated@@91 $generated@@215) (= $generated@@211 ($generated@@89 ($generated@@90 $generated@@218) $generated@@94 $generated@@215)))) (and (=> (= (ControlFlow 0 30) 29) $generated@@254) (=> (= (ControlFlow 0 30) 1) $generated@@255))))))
(let (($generated@@257  (=> (and ($generated@@75 $generated@@213) ($generated@@217 $generated@@213)) (=> (and (and (and ($generated@@42 $generated@@39 $generated@@215 ($generated@@43 $generated)) ($generated@@84 $generated@@39 $generated@@215 ($generated@@43 $generated) $generated@@213)) (= 5 $generated@@36)) (and (and ($generated@@41 $generated@@215 $generated@@208) (and ($generated@@37 $generated@@215 $generated@@208) (and (forall (($generated@@258 Int) ) (!  (=> ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@258))) ($generated@@44 $generated@@258))
 :pattern ( ($generated@@44 $generated@@258))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@258))))
)) (forall (($generated@@259 Int) ) (!  (=> (and ($generated@@44 $generated@@259) (<= $generated@@259 $generated@@208)) ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@259))))
 :pattern ( ($generated@@21 $generated@@215 ($generated@@45 $generated@@5 ($generated@@9 $generated@@259))))
 :pattern ( ($generated@@44 $generated@@259))
))))) (= (ControlFlow 0 31) 30))) $generated@@256))))
$generated@@257))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
