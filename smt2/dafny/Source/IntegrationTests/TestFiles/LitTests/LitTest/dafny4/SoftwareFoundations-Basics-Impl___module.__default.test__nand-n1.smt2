(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@67 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@71 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@72 () T@T)
(declare-fun $generated@@73 (T@T T@T) T@T)
(declare-fun $generated@@74 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@75 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@T) T@T)
(declare-fun $generated@@77 (T@T) T@T)
(declare-fun $generated@@129 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U) Bool)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@4 $generated@@24) 3))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (or ($generated@@22 $generated@@26 $generated@@27) (and (< 1 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@26 $generated@@25) ($generated@@23 $generated@@24 $generated@@27 $generated@@25)))) ($generated@@23 $generated@@24 ($generated@@21 $generated@@26 $generated@@27) $generated@@25))
 :pattern ( ($generated@@21 $generated@@26 $generated@@27))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (or ($generated@@29 $generated@@30 $generated@@31) (and (< 2 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@30 $generated@@25) ($generated@@23 $generated@@24 $generated@@31 $generated@@25)))) ($generated@@23 $generated@@24 ($generated@@28 $generated@@30 $generated@@31) $generated@@25))
 :pattern ( ($generated@@28 $generated@@30 $generated@@31))
))))
(assert (= ($generated@@32 $generated@@33) $generated@@1))
(assert (= ($generated@@32 $generated@@34) $generated@@2))
(assert ($generated@@23 $generated@@24 $generated@@33 $generated@@25))
(assert ($generated@@23 $generated@@24 $generated@@34 $generated@@25))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@22 $generated@@36 $generated@@37) (and (< 1 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@36 $generated@@25) ($generated@@23 $generated@@24 $generated@@37 $generated@@25)))) (= ($generated@@21 $generated@@36 $generated@@37) (ite ($generated@@35 $generated@@36) $generated@@37 $generated@@34)))
 :pattern ( ($generated@@21 $generated@@36 $generated@@37))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@40) (= $generated@@39 $generated@@40))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@35 $generated@@44) (= ($generated@@32 $generated@@44) $generated@@1))
 :pattern ( ($generated@@35 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@45 $generated@@46) (= ($generated@@32 $generated@@46) $generated@@2))
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 ($generated@@47 $generated@@50 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@47 $generated@@50 $generated@@49))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (or ($generated@@29 $generated@@53 $generated@@54) (and (< 2 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@53 $generated@@25) ($generated@@23 $generated@@24 $generated@@54 $generated@@25)))) (and (and ($generated@@22 $generated@@53 $generated@@54) ($generated@@51 ($generated@@21 $generated@@53 $generated@@54))) (= ($generated@@28 $generated@@53 $generated@@54) ($generated@@52 ($generated@@21 $generated@@53 $generated@@54)))))
 :pattern ( ($generated@@28 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@35 $generated@@55) (= $generated@@55 $generated@@33))
 :pattern ( ($generated@@35 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@45 $generated@@56) (= $generated@@56 $generated@@34))
 :pattern ( ($generated@@45 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@57 $generated@@58) (or ($generated@@35 $generated@@58) ($generated@@45 $generated@@58)))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@59 T@U) ) (!  (=> (or ($generated@@51 $generated@@59) (and (< 1 $generated@@20) ($generated@@23 $generated@@24 $generated@@59 $generated@@25))) ($generated@@23 $generated@@24 ($generated@@52 $generated@@59) $generated@@25))
 :pattern ( ($generated@@52 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@60 $generated@@25) (or ($generated@@35 $generated@@60) ($generated@@45 $generated@@60)))
 :pattern ( ($generated@@45 $generated@@60) ($generated@@23 $generated@@24 $generated@@60 $generated@@25))
 :pattern ( ($generated@@35 $generated@@60) ($generated@@23 $generated@@24 $generated@@60 $generated@@25))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@35 $generated@@61) ($generated@@35 $generated@@62)) ($generated@@38 $generated@@61 $generated@@62))
 :pattern ( ($generated@@38 $generated@@61 $generated@@62) ($generated@@35 $generated@@61))
 :pattern ( ($generated@@38 $generated@@61 $generated@@62) ($generated@@35 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (and ($generated@@45 $generated@@63) ($generated@@45 $generated@@64)) ($generated@@38 $generated@@63 $generated@@64))
 :pattern ( ($generated@@38 $generated@@63 $generated@@64) ($generated@@45 $generated@@63))
 :pattern ( ($generated@@38 $generated@@63 $generated@@64) ($generated@@45 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@47 $generated@@66 ($generated@@48 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@66 $generated@@65))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@67 $generated@@78 $generated@@79 $generated@@80 ($generated@@74 $generated@@78 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@84 $generated@@81) $generated@@83 $generated@@84) $generated@@81)
 :weight 0
)) (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (or (= $generated@@90 $generated@@92) (= ($generated@@67 $generated@@85 $generated@@86 $generated@@87 ($generated@@74 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@92 $generated@@93) ($generated@@67 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@92 $generated@@93)))
 :weight 0
)) (forall (($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@100 $generated@@102) (= ($generated@@67 $generated@@94 $generated@@95 $generated@@96 ($generated@@74 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@99 $generated@@100 $generated@@97) $generated@@101 $generated@@102) ($generated@@67 $generated@@94 $generated@@95 $generated@@96 $generated@@98 $generated@@101 $generated@@102)))
 :weight 0
)))) (= ($generated@@4 $generated@@68) 4)) (= ($generated@@4 $generated@@69) 5)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@71 $generated@@103 $generated@@104 ($generated@@75 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@105) $generated@@107) $generated@@105)
 :weight 0
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@112 $generated@@113) (= ($generated@@71 $generated@@108 $generated@@109 ($generated@@75 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@110) $generated@@113) ($generated@@71 $generated@@108 $generated@@109 $generated@@111 $generated@@113)))
 :weight 0
))) (= ($generated@@4 $generated@@72) 6)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ) (= ($generated@@4 ($generated@@73 $generated@@114 $generated@@115)) 7))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ) (! (= ($generated@@76 ($generated@@73 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@73 $generated@@116 $generated@@117))
))) (forall (($generated@@118 T@T) ($generated@@119 T@T) ) (! (= ($generated@@77 ($generated@@73 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@73 $generated@@118 $generated@@119))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 Bool) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@9 ($generated@@67 $generated@@68 $generated@@69 $generated@@5 ($generated@@70 $generated@@120 $generated@@121 $generated@@122 $generated@@123) $generated@@124 $generated@@125))  (=> (and (or (not (= $generated@@124 $generated@@120)) (not true)) ($generated@@9 ($generated@@47 $generated@@5 ($generated@@71 $generated@@69 $generated@@72 ($generated@@71 $generated@@68 ($generated@@73 $generated@@69 $generated@@72) $generated@@121 $generated@@124) $generated@@122)))) $generated@@123))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69 $generated@@5 ($generated@@70 $generated@@120 $generated@@121 $generated@@122 $generated@@123) $generated@@124 $generated@@125))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@126 T@U) ) (!  (=> (or ($generated@@51 $generated@@126) (and (< 1 $generated@@20) ($generated@@23 $generated@@24 $generated@@126 $generated@@25))) (= ($generated@@52 $generated@@126) (ite ($generated@@35 $generated@@126) $generated@@34 $generated@@33)))
 :pattern ( ($generated@@52 $generated@@126))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (or ($generated@@22 ($generated@@41 $generated@@24 $generated@@127) ($generated@@41 $generated@@24 $generated@@128)) (and (< 1 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@127 $generated@@25) ($generated@@23 $generated@@24 $generated@@128 $generated@@25)))) (= ($generated@@21 ($generated@@41 $generated@@24 $generated@@127) ($generated@@41 $generated@@24 $generated@@128)) (ite ($generated@@35 ($generated@@41 $generated@@24 $generated@@127)) $generated@@128 $generated@@34)))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@41 $generated@@24 $generated@@127) ($generated@@41 $generated@@24 $generated@@128)))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@130 $generated@@132) ($generated@@23 $generated@@24 $generated@@131 $generated@@25)) ($generated@@129 $generated@@24 $generated@@131 $generated@@25 $generated@@132))
 :pattern ( ($generated@@129 $generated@@24 $generated@@131 $generated@@25 $generated@@132))
)))
(assert (= ($generated@@133 $generated@@25) $generated@@0))
(assert (= ($generated@@134 $generated@@25) $generated@@3))
(assert (= $generated@@33 ($generated@@41 $generated@@24 $generated@@33)))
(assert (= $generated@@34 ($generated@@41 $generated@@24 $generated@@34)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@48 $generated@@136 ($generated@@41 $generated@@136 $generated@@135)) ($generated@@41 $generated@@72 ($generated@@48 $generated@@136 $generated@@135)))
 :pattern ( ($generated@@48 $generated@@136 ($generated@@41 $generated@@136 $generated@@135)))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or ($generated@@29 ($generated@@41 $generated@@24 $generated@@137) ($generated@@41 $generated@@24 $generated@@138)) (and (< 2 $generated@@20) (and ($generated@@23 $generated@@24 $generated@@137 $generated@@25) ($generated@@23 $generated@@24 $generated@@138 $generated@@25)))) (and (and ($generated@@22 ($generated@@41 $generated@@24 $generated@@137) ($generated@@41 $generated@@24 $generated@@138)) ($generated@@51 ($generated@@41 $generated@@24 ($generated@@21 ($generated@@41 $generated@@24 $generated@@137) ($generated@@41 $generated@@24 $generated@@138))))) (= ($generated@@28 ($generated@@41 $generated@@24 $generated@@137) ($generated@@41 $generated@@24 $generated@@138)) ($generated@@41 $generated@@24 ($generated@@52 ($generated@@41 $generated@@24 ($generated@@21 ($generated@@41 $generated@@24 $generated@@137) ($generated@@41 $generated@@24 $generated@@138))))))))
 :weight 3
 :pattern ( ($generated@@28 ($generated@@41 $generated@@24 $generated@@137) ($generated@@41 $generated@@24 $generated@@138)))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@139 T@U) ) (!  (=> (or ($generated@@51 ($generated@@41 $generated@@24 $generated@@139)) (and (< 1 $generated@@20) ($generated@@23 $generated@@24 $generated@@139 $generated@@25))) (= ($generated@@52 ($generated@@41 $generated@@24 $generated@@139)) (ite ($generated@@35 ($generated@@41 $generated@@24 $generated@@139)) $generated@@34 $generated@@33)))
 :weight 3
 :pattern ( ($generated@@52 ($generated@@41 $generated@@24 $generated@@139)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 () T@U)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@152  (=> (and (and (and (= $generated@@140 ($generated@@70 $generated@@141 $generated@@142 $generated false)) (= $generated@@143 ($generated@@41 $generated@@24 $generated@@33))) (and ($generated@@129 $generated@@24 $generated@@143 $generated@@25 $generated@@142) (= $generated@@144 ($generated@@41 $generated@@24 $generated@@34)))) (and (and ($generated@@129 $generated@@24 $generated@@144 $generated@@25 $generated@@142) ($generated@@29 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@34))) (and ($generated@@57 ($generated@@41 $generated@@24 ($generated@@28 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@34)))) ($generated@@29 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@34))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@38 ($generated@@28 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@34)) $generated@@33)) (=> ($generated@@38 ($generated@@28 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@34)) $generated@@33) (=> (= $generated@@145 ($generated@@41 $generated@@24 $generated@@34)) (=> (and ($generated@@129 $generated@@24 $generated@@145 $generated@@25 $generated@@142) (= $generated@@146 ($generated@@41 $generated@@24 $generated@@34))) (=> (and (and ($generated@@129 $generated@@24 $generated@@146 $generated@@25 $generated@@142) ($generated@@29 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@34))) (and ($generated@@57 ($generated@@41 $generated@@24 ($generated@@28 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@34)))) ($generated@@29 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@34)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@38 ($generated@@28 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@34)) $generated@@33)) (=> ($generated@@38 ($generated@@28 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@34)) $generated@@33) (=> (= $generated@@147 ($generated@@41 $generated@@24 $generated@@34)) (=> (and ($generated@@129 $generated@@24 $generated@@147 $generated@@25 $generated@@142) (= $generated@@148 ($generated@@41 $generated@@24 $generated@@33))) (=> (and (and ($generated@@129 $generated@@24 $generated@@148 $generated@@25 $generated@@142) ($generated@@29 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@33))) (and ($generated@@57 ($generated@@41 $generated@@24 ($generated@@28 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@33)))) ($generated@@29 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@33)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@38 ($generated@@28 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@33)) $generated@@33)) (=> ($generated@@38 ($generated@@28 ($generated@@41 $generated@@24 $generated@@34) ($generated@@41 $generated@@24 $generated@@33)) $generated@@33) (=> (= $generated@@149 ($generated@@41 $generated@@24 $generated@@33)) (=> (and (and (and ($generated@@129 $generated@@24 $generated@@149 $generated@@25 $generated@@142) (= $generated@@150 ($generated@@41 $generated@@24 $generated@@33))) (and ($generated@@129 $generated@@24 $generated@@150 $generated@@25 $generated@@142) ($generated@@29 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@33)))) (and (and ($generated@@57 ($generated@@41 $generated@@24 ($generated@@28 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@33)))) ($generated@@29 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@33))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@38 ($generated@@28 ($generated@@41 $generated@@24 $generated@@33) ($generated@@41 $generated@@24 $generated@@33)) $generated@@34))))))))))))))))))
(let (($generated@@153  (=> (and (and ($generated@@130 $generated@@142) ($generated@@151 $generated@@142)) (and (= 3 $generated@@20) (= (ControlFlow 0 6) 2))) $generated@@152)))
$generated@@153)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
