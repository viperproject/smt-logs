(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@57 () Int)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@94 (T@U) Int)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@100 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 (T@T T@T) T@T)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@155 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@25) $generated@@2))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@24 $generated@@27) $generated@@4))
(assert (= ($generated@@8 $generated@@29) 3))
(assert ($generated@@28 $generated@@29 $generated@@25 $generated@@30))
(assert ($generated@@28 $generated@@29 $generated@@26 $generated@@30))
(assert ($generated@@28 $generated@@29 $generated@@27 $generated@@31))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@34) (= $generated@@33 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@35 $generated@@37 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@38 $generated@@39) (= ($generated@@24 $generated@@39) $generated@@2))
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@40 $generated@@41) (= ($generated@@24 $generated@@41) $generated@@3))
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@42 $generated@@43) (= ($generated@@24 $generated@@43) $generated@@4))
 :pattern ( ($generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@44 $generated@@45) (= ($generated@@24 $generated@@45) $generated@@5))
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 ($generated@@46 $generated@@49 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@38 $generated@@50) (= $generated@@50 $generated@@25))
 :pattern ( ($generated@@38 $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ) (!  (=> ($generated@@40 $generated@@51) (= $generated@@51 $generated@@26))
 :pattern ( ($generated@@40 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@42 $generated@@52) (= $generated@@52 $generated@@27))
 :pattern ( ($generated@@42 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@44 $generated@@54) (exists (($generated@@55 T@U) ) (= $generated@@54 ($generated@@53 $generated@@55))))
 :pattern ( ($generated@@44 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@53 $generated@@56) $generated@@31) ($generated@@28 $generated@@29 $generated@@56 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@53 $generated@@56) $generated@@31))
)))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@59 $generated@@61 $generated@@62) (and (< 1 $generated@@57) (and ($generated@@28 $generated@@29 $generated@@61 $generated@@31) ($generated@@28 $generated@@29 $generated@@62 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@58 $generated@@60 $generated@@61 $generated@@62) $generated@@30))
 :pattern ( ($generated@@58 $generated@@60 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@58 ($generated@@63 $generated@@64) $generated@@65 $generated@@66) ($generated@@58 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@58 ($generated@@63 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@67 $generated@@68) (or ($generated@@38 $generated@@68) ($generated@@40 $generated@@68)))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@59 ($generated@@35 $generated@@29 $generated@@71) ($generated@@35 $generated@@29 $generated@@72)) (and (< 1 $generated@@57) (and ($generated@@28 $generated@@29 $generated@@71 $generated@@31) ($generated@@28 $generated@@29 $generated@@72 $generated@@31)))) (and (=> (not ($generated@@13 ($generated@@35 $generated@@9 ($generated@@12 ($generated@@42 ($generated@@35 $generated@@29 $generated@@71)))))) (let (($generated@@73 ($generated@@35 $generated@@29 ($generated@@69 ($generated@@35 $generated@@29 $generated@@71)))))
 (=> (not ($generated@@13 ($generated@@35 $generated@@9 ($generated@@12 ($generated@@42 ($generated@@35 $generated@@29 $generated@@72)))))) (let (($generated@@74 ($generated@@35 $generated@@29 ($generated@@69 ($generated@@35 $generated@@29 $generated@@72)))))
($generated@@59 $generated@@73 $generated@@74))))) (= ($generated@@58 ($generated@@63 $generated@@70) ($generated@@35 $generated@@29 $generated@@71) ($generated@@35 $generated@@29 $generated@@72)) (ite ($generated@@42 ($generated@@35 $generated@@29 $generated@@71)) $generated@@25 (let (($generated@@75 ($generated@@35 $generated@@29 ($generated@@69 ($generated@@35 $generated@@29 $generated@@71)))))
(ite ($generated@@42 ($generated@@35 $generated@@29 $generated@@72)) $generated@@26 (let (($generated@@76 ($generated@@35 $generated@@29 ($generated@@69 ($generated@@35 $generated@@29 $generated@@72)))))
($generated@@35 $generated@@29 ($generated@@58 ($generated@@63 $generated@@70) $generated@@75 $generated@@76)))))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@63 $generated@@70) ($generated@@35 $generated@@29 $generated@@71) ($generated@@35 $generated@@29 $generated@@72)))
))))
(assert  (=> (<= 1 $generated@@57) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@59 $generated@@78 $generated@@79) (and (< 1 $generated@@57) (and ($generated@@28 $generated@@29 $generated@@78 $generated@@31) ($generated@@28 $generated@@29 $generated@@79 $generated@@31)))) (and (=> (not ($generated@@42 $generated@@78)) (let (($generated@@80 ($generated@@69 $generated@@78)))
 (=> (not ($generated@@42 $generated@@79)) (let (($generated@@81 ($generated@@69 $generated@@79)))
($generated@@59 $generated@@80 $generated@@81))))) (= ($generated@@58 ($generated@@63 $generated@@77) $generated@@78 $generated@@79) (ite ($generated@@42 $generated@@78) $generated@@25 (let (($generated@@82 ($generated@@69 $generated@@78)))
(ite ($generated@@42 $generated@@79) $generated@@26 (let (($generated@@83 ($generated@@69 $generated@@79)))
($generated@@58 $generated@@77 $generated@@82 $generated@@83))))))))
 :pattern ( ($generated@@58 ($generated@@63 $generated@@77) $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@84 $generated@@30) (or ($generated@@38 $generated@@84) ($generated@@40 $generated@@84)))
 :pattern ( ($generated@@40 $generated@@84) ($generated@@28 $generated@@29 $generated@@84 $generated@@30))
 :pattern ( ($generated@@38 $generated@@84) ($generated@@28 $generated@@29 $generated@@84 $generated@@30))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@85 $generated@@31) (or ($generated@@42 $generated@@85) ($generated@@44 $generated@@85)))
 :pattern ( ($generated@@44 $generated@@85) ($generated@@28 $generated@@29 $generated@@85 $generated@@31))
 :pattern ( ($generated@@42 $generated@@85) ($generated@@28 $generated@@29 $generated@@85 $generated@@31))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (and ($generated@@38 $generated@@86) ($generated@@38 $generated@@87)) ($generated@@32 $generated@@86 $generated@@87))
 :pattern ( ($generated@@32 $generated@@86 $generated@@87) ($generated@@38 $generated@@86))
 :pattern ( ($generated@@32 $generated@@86 $generated@@87) ($generated@@38 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and ($generated@@40 $generated@@88) ($generated@@40 $generated@@89)) ($generated@@32 $generated@@88 $generated@@89))
 :pattern ( ($generated@@32 $generated@@88 $generated@@89) ($generated@@40 $generated@@88))
 :pattern ( ($generated@@32 $generated@@88 $generated@@89) ($generated@@40 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@24 ($generated@@53 $generated@@90)) $generated@@5)
 :pattern ( ($generated@@53 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@69 ($generated@@53 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@53 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@46 $generated@@93 ($generated@@47 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@47 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ) (! (< ($generated@@94 $generated@@95) ($generated@@94 ($generated@@53 $generated@@95)))
 :pattern ( ($generated@@53 $generated@@95))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@96 $generated@@107 $generated@@108 $generated@@109 ($generated@@103 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@96 $generated@@114 $generated@@115 $generated@@116 ($generated@@103 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@96 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@96 $generated@@123 $generated@@124 $generated@@125 ($generated@@103 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@96 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))) (= ($generated@@8 $generated@@97) 4)) (= ($generated@@8 $generated@@98) 5)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@100 $generated@@132 $generated@@133 ($generated@@104 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@136) $generated@@134)
 :weight 0
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@141 $generated@@142) (= ($generated@@100 $generated@@137 $generated@@138 ($generated@@104 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@142) ($generated@@100 $generated@@137 $generated@@138 $generated@@140 $generated@@142)))
 :weight 0
))) (= ($generated@@8 $generated@@101) 6)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (= ($generated@@8 ($generated@@102 $generated@@143 $generated@@144)) 7))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (! (= ($generated@@105 ($generated@@102 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@102 $generated@@145 $generated@@146))
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@106 ($generated@@102 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@102 $generated@@147 $generated@@148))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 Bool) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@13 ($generated@@96 $generated@@97 $generated@@98 $generated@@9 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))  (=> (and (or (not (= $generated@@153 $generated@@149)) (not true)) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@100 $generated@@98 $generated@@101 ($generated@@100 $generated@@97 ($generated@@102 $generated@@98 $generated@@101) $generated@@150 $generated@@153) $generated@@151)))) $generated@@152))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98 $generated@@9 ($generated@@99 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@156 $generated@@158) ($generated@@28 $generated@@29 $generated@@157 $generated@@30)) ($generated@@155 $generated@@29 $generated@@157 $generated@@30 $generated@@158))
 :pattern ( ($generated@@155 $generated@@29 $generated@@157 $generated@@30 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and ($generated@@156 $generated@@160) ($generated@@28 $generated@@29 $generated@@159 $generated@@31)) ($generated@@155 $generated@@29 $generated@@159 $generated@@31 $generated@@160))
 :pattern ( ($generated@@155 $generated@@29 $generated@@159 $generated@@31 $generated@@160))
)))
(assert (= ($generated@@161 $generated@@30) $generated@@0))
(assert (= ($generated@@162 $generated@@30) $generated@@6))
(assert (= ($generated@@161 $generated@@31) $generated@@1))
(assert (= ($generated@@162 $generated@@31) $generated@@7))
(assert (= $generated@@25 ($generated@@35 $generated@@29 $generated@@25)))
(assert (= $generated@@26 ($generated@@35 $generated@@29 $generated@@26)))
(assert (= $generated@@27 ($generated@@35 $generated@@29 $generated@@27)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@156 $generated@@164) (and ($generated@@44 $generated@@163) ($generated@@155 $generated@@29 $generated@@163 $generated@@31 $generated@@164))) ($generated@@155 $generated@@29 ($generated@@69 $generated@@163) $generated@@31 $generated@@164))
 :pattern ( ($generated@@155 $generated@@29 ($generated@@69 $generated@@163) $generated@@31 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@53 ($generated@@35 $generated@@29 $generated@@165)) ($generated@@35 $generated@@29 ($generated@@53 $generated@@165)))
 :pattern ( ($generated@@53 ($generated@@35 $generated@@29 $generated@@165)))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@47 $generated@@167 ($generated@@35 $generated@@167 $generated@@166)) ($generated@@35 $generated@@101 ($generated@@47 $generated@@167 $generated@@166)))
 :pattern ( ($generated@@47 $generated@@167 ($generated@@35 $generated@@167 $generated@@166)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@177  (=> (and (and (and (= $generated@@168 ($generated@@99 $generated@@169 $generated@@170 $generated false)) (= $generated@@171 ($generated@@35 $generated@@29 ($generated@@53 ($generated@@35 $generated@@29 ($generated@@53 ($generated@@35 $generated@@29 $generated@@27))))))) (and (= $generated@@172 ($generated@@53 ($generated@@53 $generated@@171))) ($generated@@155 $generated@@29 $generated@@171 $generated@@31 $generated@@170))) (and (and ($generated@@155 $generated@@29 $generated@@171 $generated@@31 $generated@@170) ($generated@@59 $generated@@171 $generated@@171)) (and ($generated@@67 ($generated@@58 ($generated@@63 $generated@@173) $generated@@171 $generated@@171)) ($generated@@59 $generated@@171 $generated@@171)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@32 ($generated@@58 ($generated@@63 ($generated@@63 $generated@@173)) $generated@@171 $generated@@171) $generated@@25)) (=> (and ($generated@@32 ($generated@@58 ($generated@@63 $generated@@173) $generated@@171 $generated@@171) $generated@@25) ($generated@@155 $generated@@29 $generated@@171 $generated@@31 $generated@@170)) (=> (and (and ($generated@@155 $generated@@29 $generated@@172 $generated@@31 $generated@@170) ($generated@@59 $generated@@171 $generated@@172)) (and ($generated@@67 ($generated@@58 ($generated@@63 $generated@@173) $generated@@171 $generated@@172)) ($generated@@59 $generated@@171 $generated@@172))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@32 ($generated@@58 ($generated@@63 ($generated@@63 $generated@@173)) $generated@@171 $generated@@172) $generated@@25)) (=> (and (and (and ($generated@@32 ($generated@@58 ($generated@@63 $generated@@173) $generated@@171 $generated@@172) $generated@@25) ($generated@@155 $generated@@29 $generated@@172 $generated@@31 $generated@@170)) (and ($generated@@155 $generated@@29 $generated@@171 $generated@@31 $generated@@170) ($generated@@59 $generated@@172 $generated@@171))) (and (and ($generated@@67 ($generated@@58 ($generated@@63 $generated@@173) $generated@@172 $generated@@171)) ($generated@@59 $generated@@172 $generated@@171)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@32 ($generated@@58 ($generated@@63 ($generated@@63 $generated@@173)) $generated@@172 $generated@@171) $generated@@26)))))))))
(let (($generated@@178  (=> (and ($generated@@156 $generated@@170) ($generated@@174 $generated@@170)) (=> (and (and ($generated@@28 $generated@@29 $generated@@175 $generated@@31) ($generated@@155 $generated@@29 $generated@@175 $generated@@31 $generated@@170)) true) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@176 $generated@@31) ($generated@@155 $generated@@29 $generated@@176 $generated@@31 $generated@@170)) true) (and (= 2 $generated@@57) (= (ControlFlow 0 5) 2))) $generated@@177)))))
$generated@@178)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
