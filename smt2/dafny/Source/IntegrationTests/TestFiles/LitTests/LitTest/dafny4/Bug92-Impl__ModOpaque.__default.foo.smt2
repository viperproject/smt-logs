(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (Int) T@U)
(declare-fun $generated@@27 (Int) Int)
(declare-fun $generated@@28 (Int) Bool)
(declare-fun $generated@@29 (Int) Bool)
(declare-fun $generated@@30 (Bool Int) T@U)
(declare-fun $generated@@31 () Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Int)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@T T@T) T@T)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@T) T@T)
(declare-fun $generated@@168 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ) (!  (=> ($generated@@22 $generated@@24) ($generated@@23 $generated@@24))
 :pattern ( ($generated@@22 $generated@@24))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@32 Int) ) (!  (=> (or ($generated@@28 ($generated@@27 $generated@@32)) (< 1 $generated@@25)) (and ($generated@@29 ($generated@@27 $generated@@32)) (= ($generated@@26 ($generated@@27 $generated@@32)) ($generated@@30 $generated@@31 ($generated@@27 $generated@@32)))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@32)))
))))
(assert (= ($generated@@5 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@36 $generated@@37)) ($generated@@23 $generated@@38))
 :pattern ( ($generated@@23 $generated@@38) ($generated@@33 $generated@@34 $generated@@38 ($generated@@35 $generated@@36 $generated@@37)))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@39 Bool) ($generated@@40 Int) ) (!  (=> (or ($generated@@29 $generated@@40) (< 0 $generated@@25)) ($generated@@33 $generated@@34 ($generated@@30 $generated@@39 $generated@@40) ($generated@@35 $generated $generated)))
 :pattern ( ($generated@@30 $generated@@39 $generated@@40))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@41 $generated@@44 $generated@@45)  (and (= ($generated@@42 $generated@@44) ($generated@@42 $generated@@45)) (= ($generated@@43 $generated@@44) ($generated@@43 $generated@@45))))
 :pattern ( ($generated@@41 $generated@@44 $generated@@45))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@46 Int) ) (!  (=> (or ($generated@@28 $generated@@46) (< 1 $generated@@25)) ($generated@@33 $generated@@34 ($generated@@26 $generated@@46) ($generated@@35 $generated $generated)))
 :pattern ( ($generated@@26 $generated@@46))
))))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@50 Int) ) (!  (=> (or ($generated@@29 $generated@@50) (< 0 $generated@@25)) (= ($generated@@30 true $generated@@50) ($generated@@47 $generated@@34 ($generated@@48 ($generated@@49 $generated@@7 ($generated@@11 ($generated@@27 5))) ($generated@@49 $generated@@7 ($generated@@11 ($generated@@27 7)))))))
 :pattern ( ($generated@@30 true $generated@@50))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@48 $generated@@54 $generated@@55) ($generated@@35 $generated@@52 $generated@@53))  (and ($generated@@51 $generated@@54 $generated@@52) ($generated@@51 $generated@@55 $generated@@53)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@48 $generated@@54 $generated@@55) ($generated@@35 $generated@@52 $generated@@53)))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@41 $generated@@56 $generated@@57) (= $generated@@56 $generated@@57))
 :pattern ( ($generated@@41 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@27 $generated@@58) $generated@@58)
 :pattern ( ($generated@@27 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@47 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@47 $generated@@60 $generated@@59))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@61 Int) ) (!  (=> (or ($generated@@29 ($generated@@27 $generated@@61)) (< 0 $generated@@25)) (= ($generated@@30 true ($generated@@27 $generated@@61)) ($generated@@47 $generated@@34 ($generated@@48 ($generated@@49 $generated@@7 ($generated@@11 ($generated@@27 5))) ($generated@@49 $generated@@7 ($generated@@11 ($generated@@27 7)))))))
 :weight 3
 :pattern ( ($generated@@30 true ($generated@@27 $generated@@61)))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@63 $generated@@69) (= ($generated@@62 $generated@@34 ($generated@@48 $generated@@67 $generated@@68) ($generated@@35 $generated@@65 $generated@@66) $generated@@69)  (and ($generated@@64 $generated@@67 $generated@@65 $generated@@69) ($generated@@64 $generated@@68 $generated@@66 $generated@@69))))
 :pattern ( ($generated@@62 $generated@@34 ($generated@@48 $generated@@67 $generated@@68) ($generated@@35 $generated@@65 $generated@@66) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@23 $generated@@71) (= ($generated@@70 $generated@@71) $generated@@2))
 :pattern ( ($generated@@23 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@49 $generated@@74 ($generated@@72 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@23 $generated@@75) (exists (($generated@@76 T@U) ($generated@@77 T@U) ) (= $generated@@75 ($generated@@48 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@23 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@49 $generated@@81 $generated@@78) $generated@@79 $generated@@80) ($generated@@62 $generated@@81 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@64 ($generated@@49 $generated@@81 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@51 $generated@@82 $generated) (and (= ($generated@@49 $generated@@7 ($generated@@72 $generated@@7 $generated@@82)) $generated@@82) ($generated@@33 $generated@@7 ($generated@@72 $generated@@7 $generated@@82) $generated)))
 :pattern ( ($generated@@51 $generated@@82 $generated))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@85 $generated@@83) $generated@@84) ($generated@@33 $generated@@85 $generated@@83 $generated@@84))
 :pattern ( ($generated@@51 ($generated@@49 $generated@@85 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@70 ($generated@@48 $generated@@86 $generated@@87)) $generated@@2)
 :pattern ( ($generated@@48 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@35 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@35 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 ($generated@@35 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@35 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@42 ($generated@@48 $generated@@94 $generated@@95)) $generated@@94)
 :pattern ( ($generated@@48 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@43 ($generated@@48 $generated@@96 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@48 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@72 $generated@@99 ($generated@@49 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@49 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@100 $generated@@102) ($generated@@101 ($generated@@48 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@48 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (< ($generated@@100 $generated@@105) ($generated@@101 ($generated@@48 $generated@@104 $generated@@105)))
 :pattern ( ($generated@@48 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@51 $generated@@108 ($generated@@35 $generated@@106 $generated@@107)) (and (= ($generated@@49 $generated@@34 ($generated@@72 $generated@@34 $generated@@108)) $generated@@108) ($generated@@33 $generated@@34 ($generated@@72 $generated@@34 $generated@@108) ($generated@@35 $generated@@106 $generated@@107))))
 :pattern ( ($generated@@51 $generated@@108 ($generated@@35 $generated@@106 $generated@@107)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@109 $generated@@120 $generated@@121 $generated@@122 ($generated@@116 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@125 $generated@@126) $generated@@123)
 :weight 0
)) (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@109 $generated@@127 $generated@@128 $generated@@129 ($generated@@116 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@109 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@109 $generated@@136 $generated@@137 $generated@@138 ($generated@@116 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)))) (= ($generated@@5 $generated@@110) 4)) (= ($generated@@5 $generated@@111) 5)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@113 $generated@@145 $generated@@146 ($generated@@117 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@149) $generated@@147)
 :weight 0
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@154 $generated@@155) (= ($generated@@113 $generated@@150 $generated@@151 ($generated@@117 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@113 $generated@@150 $generated@@151 $generated@@153 $generated@@155)))
 :weight 0
))) (= ($generated@@5 $generated@@114) 6)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (= ($generated@@5 ($generated@@115 $generated@@156 $generated@@157)) 7))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@118 ($generated@@115 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@115 $generated@@158 $generated@@159))
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@119 ($generated@@115 $generated@@160 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@115 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@10 ($generated@@109 $generated@@110 $generated@@111 $generated@@6 ($generated@@112 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@10 ($generated@@72 $generated@@6 ($generated@@113 $generated@@111 $generated@@114 ($generated@@113 $generated@@110 ($generated@@115 $generated@@111 $generated@@114) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@109 $generated@@110 $generated@@111 $generated@@6 ($generated@@112 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (and (= ($generated@@21 ($generated@@35 $generated@@169 $generated@@170)) $generated@@3) (= ($generated@@168 ($generated@@35 $generated@@169 $generated@@170)) $generated@@4))
 :pattern ( ($generated@@35 $generated@@169 $generated@@170))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@171 Int) ) (!  (=> (or ($generated@@28 $generated@@171) (< 1 $generated@@25)) (and ($generated@@29 $generated@@171) (= ($generated@@26 $generated@@171) ($generated@@30 $generated@@31 $generated@@171))))
 :pattern ( ($generated@@26 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@100 ($generated@@49 $generated@@34 $generated@@172)) ($generated@@101 $generated@@172))
 :pattern ( ($generated@@100 ($generated@@49 $generated@@34 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@63 $generated@@175) (and ($generated@@23 $generated@@173) (exists (($generated@@176 T@U) ) (! ($generated@@62 $generated@@34 $generated@@173 ($generated@@35 $generated@@174 $generated@@176) $generated@@175)
 :pattern ( ($generated@@62 $generated@@34 $generated@@173 ($generated@@35 $generated@@174 $generated@@176) $generated@@175))
)))) ($generated@@64 ($generated@@42 $generated@@173) $generated@@174 $generated@@175))
 :pattern ( ($generated@@64 ($generated@@42 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@63 $generated@@179) (and ($generated@@23 $generated@@177) (exists (($generated@@180 T@U) ) (! ($generated@@62 $generated@@34 $generated@@177 ($generated@@35 $generated@@180 $generated@@178) $generated@@179)
 :pattern ( ($generated@@62 $generated@@34 $generated@@177 ($generated@@35 $generated@@180 $generated@@178) $generated@@179))
)))) ($generated@@64 ($generated@@43 $generated@@177) $generated@@178 $generated@@179))
 :pattern ( ($generated@@64 ($generated@@43 $generated@@177) $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@48 ($generated@@47 $generated@@114 $generated@@181) ($generated@@47 $generated@@114 $generated@@182)) ($generated@@47 $generated@@34 ($generated@@48 $generated@@181 $generated@@182)))
 :pattern ( ($generated@@48 ($generated@@47 $generated@@114 $generated@@181) ($generated@@47 $generated@@114 $generated@@182)))
)))
(assert (forall (($generated@@183 Int) ) (! (= ($generated@@49 $generated@@7 ($generated@@11 ($generated@@27 $generated@@183))) ($generated@@47 $generated@@114 ($generated@@49 $generated@@7 ($generated@@11 $generated@@183))))
 :pattern ( ($generated@@49 $generated@@7 ($generated@@11 ($generated@@27 $generated@@183))))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@49 $generated@@185 ($generated@@47 $generated@@185 $generated@@184)) ($generated@@47 $generated@@114 ($generated@@49 $generated@@185 $generated@@184)))
 :pattern ( ($generated@@49 $generated@@185 ($generated@@47 $generated@@185 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! ($generated@@62 $generated@@7 $generated@@187 $generated $generated@@186)
 :pattern ( ($generated@@62 $generated@@7 $generated@@187 $generated $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@33 $generated@@7 $generated@@188 $generated)
 :pattern ( ($generated@@33 $generated@@7 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@196  (=> (and (and (and (= $generated@@189 ($generated@@112 $generated@@190 $generated@@191 $generated@@1 false)) ($generated@@62 $generated@@7 ($generated@@11 $generated@@192) $generated $generated@@191)) (and ($generated@@29 $generated@@192) ($generated@@23 ($generated@@30 $generated@@31 $generated@@192)))) (and (and ($generated@@22 ($generated@@30 $generated@@31 $generated@@192)) ($generated@@29 $generated@@192)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@41 ($generated@@48 ($generated@@49 $generated@@7 ($generated@@11 $generated@@193)) ($generated@@49 $generated@@7 ($generated@@11 $generated@@194))) ($generated@@30 $generated@@31 $generated@@192)))))
(let (($generated@@197  (=> (and (and (and ($generated@@63 $generated@@191) ($generated@@195 $generated@@191)) (= 2 $generated@@25)) (and ($generated@@41 ($generated@@48 ($generated@@49 $generated@@7 ($generated@@11 $generated@@193)) ($generated@@49 $generated@@7 ($generated@@11 $generated@@194))) ($generated@@26 $generated@@192)) (= (ControlFlow 0 3) 2))) $generated@@196)))
$generated@@197)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
