(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (Int) T@U)
(declare-fun $generated@@38 (Int) Bool)
(declare-fun $generated@@40 (Int) T@U)
(declare-fun $generated@@41 (Int) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@98 (T@U) Int)
(declare-fun $generated@@99 (T@U) Int)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@T T@T) T@T)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ) (!  (=> ($generated@@22 $generated@@24) ($generated@@23 $generated@@24))
 :pattern ( ($generated@@22 $generated@@24))
)))
(assert (= ($generated@@5 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)) ($generated@@23 $generated@@30))
 :pattern ( ($generated@@23 $generated@@30) ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@31 $generated@@34 $generated@@35)  (and (= ($generated@@32 $generated@@34) ($generated@@32 $generated@@35)) (= ($generated@@33 $generated@@34) ($generated@@33 $generated@@35))))
 :pattern ( ($generated@@31 $generated@@34 $generated@@35))
)))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@39 Int) ) (!  (=> (or ($generated@@38 $generated@@39) (< 0 $generated@@36)) ($generated@@25 $generated@@26 ($generated@@37 $generated@@39) ($generated@@27 $generated $generated)))
 :pattern ( ($generated@@37 $generated@@39))
))))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@42 Int) ) (!  (=> (or ($generated@@41 $generated@@42) (< 1 $generated@@36)) ($generated@@25 $generated@@26 ($generated@@40 $generated@@42) ($generated@@27 $generated $generated)))
 :pattern ( ($generated@@40 $generated@@42))
))))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@47 Int) ) (!  (=> (or ($generated@@38 $generated@@47) (< 0 $generated@@36)) (= ($generated@@37 $generated@@47) ($generated@@43 $generated@@26 ($generated@@44 ($generated@@45 $generated@@7 ($generated@@11 ($generated@@46 5))) ($generated@@45 $generated@@7 ($generated@@11 ($generated@@46 7)))))))
 :pattern ( ($generated@@37 $generated@@47))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@44 $generated@@51 $generated@@52) ($generated@@27 $generated@@49 $generated@@50))  (and ($generated@@48 $generated@@51 $generated@@49) ($generated@@48 $generated@@52 $generated@@50)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@44 $generated@@51 $generated@@52) ($generated@@27 $generated@@49 $generated@@50)))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@31 $generated@@53 $generated@@54) (= $generated@@53 $generated@@54))
 :pattern ( ($generated@@31 $generated@@53 $generated@@54))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@55 Int) ) (!  (=> (or ($generated@@41 ($generated@@46 $generated@@55)) (< 1 $generated@@36)) (and ($generated@@38 ($generated@@46 $generated@@55)) (= ($generated@@40 ($generated@@46 $generated@@55)) ($generated@@43 $generated@@26 ($generated@@37 ($generated@@46 $generated@@55))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@46 $generated@@55)))
))))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@46 $generated@@56) $generated@@56)
 :pattern ( ($generated@@46 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@43 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@43 $generated@@58 $generated@@57))
)))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@59 Int) ) (!  (=> (or ($generated@@38 ($generated@@46 $generated@@59)) (< 0 $generated@@36)) (= ($generated@@37 ($generated@@46 $generated@@59)) ($generated@@43 $generated@@26 ($generated@@44 ($generated@@45 $generated@@7 ($generated@@11 ($generated@@46 5))) ($generated@@45 $generated@@7 ($generated@@11 ($generated@@46 7)))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@46 $generated@@59)))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@61 $generated@@67) (= ($generated@@60 $generated@@26 ($generated@@44 $generated@@65 $generated@@66) ($generated@@27 $generated@@63 $generated@@64) $generated@@67)  (and ($generated@@62 $generated@@65 $generated@@63 $generated@@67) ($generated@@62 $generated@@66 $generated@@64 $generated@@67))))
 :pattern ( ($generated@@60 $generated@@26 ($generated@@44 $generated@@65 $generated@@66) ($generated@@27 $generated@@63 $generated@@64) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@23 $generated@@69) (= ($generated@@68 $generated@@69) $generated@@2))
 :pattern ( ($generated@@23 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@45 $generated@@72 ($generated@@70 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@70 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@23 $generated@@73) (exists (($generated@@74 T@U) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@44 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@23 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@62 ($generated@@45 $generated@@79 $generated@@76) $generated@@77 $generated@@78) ($generated@@60 $generated@@79 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@62 ($generated@@45 $generated@@79 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@48 $generated@@80 $generated) (and (= ($generated@@45 $generated@@7 ($generated@@70 $generated@@7 $generated@@80)) $generated@@80) ($generated@@25 $generated@@7 ($generated@@70 $generated@@7 $generated@@80) $generated)))
 :pattern ( ($generated@@48 $generated@@80 $generated))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@83 $generated@@81) $generated@@82) ($generated@@25 $generated@@83 $generated@@81 $generated@@82))
 :pattern ( ($generated@@48 ($generated@@45 $generated@@83 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@68 ($generated@@44 $generated@@84 $generated@@85)) $generated@@2)
 :pattern ( ($generated@@44 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 ($generated@@27 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@27 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 ($generated@@27 $generated@@90 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@27 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@32 ($generated@@44 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@44 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@33 ($generated@@44 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@44 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@70 $generated@@97 ($generated@@45 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@45 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (< ($generated@@98 $generated@@100) ($generated@@99 ($generated@@44 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@44 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@98 $generated@@103) ($generated@@99 ($generated@@44 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@44 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@48 $generated@@106 ($generated@@27 $generated@@104 $generated@@105)) (and (= ($generated@@45 $generated@@26 ($generated@@70 $generated@@26 $generated@@106)) $generated@@106) ($generated@@25 $generated@@26 ($generated@@70 $generated@@26 $generated@@106) ($generated@@27 $generated@@104 $generated@@105))))
 :pattern ( ($generated@@48 $generated@@106 ($generated@@27 $generated@@104 $generated@@105)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@107 $generated@@118 $generated@@119 $generated@@120 ($generated@@114 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@123 $generated@@124) $generated@@121)
 :weight 0
)) (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@107 $generated@@125 $generated@@126 $generated@@127 ($generated@@114 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@107 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@107 $generated@@134 $generated@@135 $generated@@136 ($generated@@114 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)))) (= ($generated@@5 $generated@@108) 4)) (= ($generated@@5 $generated@@109) 5)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@111 $generated@@143 $generated@@144 ($generated@@115 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@147) $generated@@145)
 :weight 0
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@111 $generated@@148 $generated@@149 ($generated@@115 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@111 $generated@@148 $generated@@149 $generated@@151 $generated@@153)))
 :weight 0
))) (= ($generated@@5 $generated@@112) 6)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (= ($generated@@5 ($generated@@113 $generated@@154 $generated@@155)) 7))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@116 ($generated@@113 $generated@@156 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@113 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@117 ($generated@@113 $generated@@158 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@113 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@10 ($generated@@107 $generated@@108 $generated@@109 $generated@@6 ($generated@@110 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))  (=> (and (or (not (= $generated@@164 $generated@@160)) (not true)) ($generated@@10 ($generated@@70 $generated@@6 ($generated@@111 $generated@@109 $generated@@112 ($generated@@111 $generated@@108 ($generated@@113 $generated@@109 $generated@@112) $generated@@161 $generated@@164) $generated@@162)))) $generated@@163))
 :pattern ( ($generated@@107 $generated@@108 $generated@@109 $generated@@6 ($generated@@110 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (= ($generated@@21 ($generated@@27 $generated@@167 $generated@@168)) $generated@@3) (= ($generated@@166 ($generated@@27 $generated@@167 $generated@@168)) $generated@@4))
 :pattern ( ($generated@@27 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@98 ($generated@@45 $generated@@26 $generated@@169)) ($generated@@99 $generated@@169))
 :pattern ( ($generated@@98 ($generated@@45 $generated@@26 $generated@@169)))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@170 Int) ) (!  (=> (or ($generated@@41 $generated@@170) (< 1 $generated@@36)) (and ($generated@@38 $generated@@170) (= ($generated@@40 $generated@@170) ($generated@@37 $generated@@170))))
 :pattern ( ($generated@@40 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@61 $generated@@173) (and ($generated@@23 $generated@@171) (exists (($generated@@174 T@U) ) (! ($generated@@60 $generated@@26 $generated@@171 ($generated@@27 $generated@@172 $generated@@174) $generated@@173)
 :pattern ( ($generated@@60 $generated@@26 $generated@@171 ($generated@@27 $generated@@172 $generated@@174) $generated@@173))
)))) ($generated@@62 ($generated@@32 $generated@@171) $generated@@172 $generated@@173))
 :pattern ( ($generated@@62 ($generated@@32 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@61 $generated@@177) (and ($generated@@23 $generated@@175) (exists (($generated@@178 T@U) ) (! ($generated@@60 $generated@@26 $generated@@175 ($generated@@27 $generated@@178 $generated@@176) $generated@@177)
 :pattern ( ($generated@@60 $generated@@26 $generated@@175 ($generated@@27 $generated@@178 $generated@@176) $generated@@177))
)))) ($generated@@62 ($generated@@33 $generated@@175) $generated@@176 $generated@@177))
 :pattern ( ($generated@@62 ($generated@@33 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@44 ($generated@@43 $generated@@112 $generated@@179) ($generated@@43 $generated@@112 $generated@@180)) ($generated@@43 $generated@@26 ($generated@@44 $generated@@179 $generated@@180)))
 :pattern ( ($generated@@44 ($generated@@43 $generated@@112 $generated@@179) ($generated@@43 $generated@@112 $generated@@180)))
)))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@45 $generated@@7 ($generated@@11 ($generated@@46 $generated@@181))) ($generated@@43 $generated@@112 ($generated@@45 $generated@@7 ($generated@@11 $generated@@181))))
 :pattern ( ($generated@@45 $generated@@7 ($generated@@11 ($generated@@46 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@45 $generated@@183 ($generated@@43 $generated@@183 $generated@@182)) ($generated@@43 $generated@@112 ($generated@@45 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@45 $generated@@183 ($generated@@43 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! ($generated@@60 $generated@@7 $generated@@185 $generated $generated@@184)
 :pattern ( ($generated@@60 $generated@@7 $generated@@185 $generated $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ) (! ($generated@@25 $generated@@7 $generated@@186 $generated)
 :pattern ( ($generated@@25 $generated@@7 $generated@@186 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@194  (=> (and (and (and (= $generated@@187 ($generated@@110 $generated@@188 $generated@@189 $generated@@1 false)) ($generated@@60 $generated@@7 ($generated@@11 $generated@@190) $generated $generated@@189)) (and ($generated@@38 $generated@@190) ($generated@@23 ($generated@@37 $generated@@190)))) (and (and ($generated@@22 ($generated@@37 $generated@@190)) ($generated@@38 $generated@@190)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@31 ($generated@@44 ($generated@@45 $generated@@7 ($generated@@11 $generated@@191)) ($generated@@45 $generated@@7 ($generated@@11 $generated@@192))) ($generated@@37 $generated@@190)))))
(let (($generated@@195  (=> (and ($generated@@61 $generated@@189) ($generated@@193 $generated@@189)) (=> (and (and (= 2 $generated@@36) (= $generated@@191 ($generated@@12 ($generated@@70 $generated@@7 ($generated@@32 ($generated@@40 $generated@@190)))))) (and (= $generated@@192 ($generated@@12 ($generated@@70 $generated@@7 ($generated@@33 ($generated@@40 $generated@@190))))) (= (ControlFlow 0 3) 2))) $generated@@194))))
$generated@@195)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
