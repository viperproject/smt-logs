(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@82 (Int) Int)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U Int) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (Int) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@123 (T@U T@U) Bool)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@142 (T@U) Int)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@191 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@3) 0))
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and (or (not (= $generated@@31 $generated@@27)) (not true)) (= ($generated@@28 $generated@@31) ($generated@@26 $generated@@30))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@25 $generated@@31)) $generated@@0))
 :pattern ( ($generated@@25 $generated@@31) ($generated@@26 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and (or (not (= $generated@@34 $generated@@27)) (not true)) (= ($generated@@28 $generated@@34) ($generated@@26 $generated@@33))) ($generated@@29 $generated@@9 ($generated@@13 ($generated@@32 $generated@@34)) $generated@@0))
 :pattern ( ($generated@@32 $generated@@34) ($generated@@26 $generated@@33))
)))
(assert (= ($generated@@7 $generated@@36) 3))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40) ($generated@@35 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@35 $generated@@36 $generated@@39 ($generated@@26 $generated@@38) $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@7 $generated@@47) 4)) (= ($generated@@7 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@7 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and (and (and ($generated@@44 $generated@@70) ($generated@@44 $generated@@71)) (or ($generated@@45 $generated@@70 $generated@@72) ($generated@@29 $generated@@36 $generated@@72 ($generated@@37 $generated)))) (and ($generated@@41 $generated@@70) ($generated@@42 $generated@@70 $generated@@71))) (=> (forall (($generated@@73 T@U) ($generated@@74 T@U) )  (=> (and (or (not (= $generated@@73 $generated@@27)) (not true)) (= $generated@@73 $generated@@72)) (= ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@70 $generated@@73) $generated@@74) ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@71 $generated@@73) $generated@@74)))) (= ($generated@@43 $generated@@70 $generated@@72) ($generated@@43 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@41 $generated@@70) ($generated@@42 $generated@@70 $generated@@71) ($generated@@43 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@77 ($generated@@26 $generated@@76) $generated@@78)  (or (= $generated@@77 $generated@@27) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@78 $generated@@77) $generated@@3)))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@77 ($generated@@26 $generated@@76) $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@42 $generated@@79 $generated@@80) (forall (($generated@@81 T@U) ) (!  (=> ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@79 $generated@@81) $generated@@3))) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@80 $generated@@81) $generated@@3))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@80 $generated@@81) $generated@@3))
)))
 :pattern ( ($generated@@42 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@82 $generated@@83) $generated@@83)
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@75 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@75 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 Int) ) (! (= ($generated@@23 ($generated@@90 $generated@@91 $generated@@92)) (+ ($generated@@23 $generated@@91) 1))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@94 ($generated@@37 $generated@@93))  (and ($generated@@29 $generated@@36 $generated@@94 ($generated@@26 $generated@@93)) (or (not (= $generated@@94 $generated@@27)) (not true))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@94 ($generated@@37 $generated@@93)))
 :pattern ( ($generated@@29 $generated@@36 $generated@@94 ($generated@@26 $generated@@93)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@95 ($generated@@87 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@35 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@95 ($generated@@87 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 Int) ($generated@@105 Int) ) (!  (=> (and (and (and ($generated@@44 $generated@@102) (and (or (not (= $generated@@103 $generated@@27)) (not true)) (= ($generated@@28 $generated@@103) ($generated@@26 $generated@@101)))) (and (and (<= 0 $generated@@104) (< $generated@@104 ($generated@@25 $generated@@103))) (and (<= 0 $generated@@105) (< $generated@@105 ($generated@@32 $generated@@103))))) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@102 $generated@@103) $generated@@3)))) ($generated@@95 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@102 $generated@@103) ($generated@@90 ($generated@@100 $generated@@104) $generated@@105)) $generated@@101 $generated@@102))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@102 $generated@@103) ($generated@@90 ($generated@@100 $generated@@104) $generated@@105)) ($generated@@26 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@42 $generated@@106 $generated@@107) (=> ($generated@@95 $generated@@108 $generated@@109 $generated@@106) ($generated@@95 $generated@@108 $generated@@109 $generated@@107)))
 :pattern ( ($generated@@42 $generated@@106 $generated@@107) ($generated@@95 $generated@@108 $generated@@109 $generated@@106))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (!  (=> ($generated@@42 $generated@@110 $generated@@111) (=> ($generated@@35 $generated@@114 $generated@@112 $generated@@113 $generated@@110) ($generated@@35 $generated@@114 $generated@@112 $generated@@113 $generated@@111)))
 :pattern ( ($generated@@42 $generated@@110 $generated@@111) ($generated@@35 $generated@@114 $generated@@112 $generated@@113 $generated@@110))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@24 ($generated@@26 $generated@@116)) $generated@@4) (= ($generated@@115 ($generated@@26 $generated@@116)) $generated@@6))
 :pattern ( ($generated@@26 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@24 ($generated@@37 $generated@@117)) $generated@@5) (= ($generated@@115 ($generated@@37 $generated@@117)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@29 $generated@@36 $generated@@119 ($generated@@26 $generated@@118))  (or (= $generated@@119 $generated@@27) (= ($generated@@28 $generated@@119) ($generated@@26 $generated@@118))))
 :pattern ( ($generated@@29 $generated@@36 $generated@@119 ($generated@@26 $generated@@118)))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or (not (= $generated@@120 $generated@@122)) (not true)) (=> (and ($generated@@42 $generated@@120 $generated@@121) ($generated@@42 $generated@@121 $generated@@122)) ($generated@@42 $generated@@120 $generated@@122)))
 :pattern ( ($generated@@42 $generated@@120 $generated@@121) ($generated@@42 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 Int) ($generated@@128 Int) ) (!  (=> (and (and ($generated@@44 $generated@@125) (and (or (not (= $generated@@126 $generated@@27)) (not true)) (= ($generated@@28 $generated@@126) ($generated@@26 $generated@@124)))) (and (and (<= 0 $generated@@127) (< $generated@@127 ($generated@@25 $generated@@126))) (and (<= 0 $generated@@128) (< $generated@@128 ($generated@@32 $generated@@126))))) ($generated@@123 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@125 $generated@@126) ($generated@@90 ($generated@@100 $generated@@127) $generated@@128)) $generated@@124))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@125 $generated@@126) ($generated@@90 ($generated@@100 $generated@@127) $generated@@128)) ($generated@@26 $generated@@124))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@123 $generated@@129 $generated@@0) (and (= ($generated@@87 $generated@@9 ($generated@@75 $generated@@9 $generated@@129)) $generated@@129) ($generated@@29 $generated@@9 ($generated@@75 $generated@@9 $generated@@129) $generated@@0)))
 :pattern ( ($generated@@123 $generated@@129 $generated@@0))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@123 $generated@@130 $generated) (and (= ($generated@@87 $generated@@8 ($generated@@75 $generated@@8 $generated@@130)) $generated@@130) ($generated@@29 $generated@@8 ($generated@@75 $generated@@8 $generated@@130) $generated)))
 :pattern ( ($generated@@123 $generated@@130 $generated))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@123 ($generated@@87 $generated@@133 $generated@@131) $generated@@132) ($generated@@29 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@123 ($generated@@87 $generated@@133 $generated@@131) $generated@@132))
)))
(assert  (=> (<= 0 $generated@@134) (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@45 $generated@@135 $generated@@136) (and (< 0 $generated@@134) (and ($generated@@44 $generated@@135) ($generated@@29 $generated@@36 $generated@@136 ($generated@@37 $generated))))) (= ($generated@@43 $generated@@135 $generated@@136) (exists (($generated@@137 Int) ($generated@@138 Int) ) (!  (and (and (and (<= ($generated@@82 0) $generated@@137) (< $generated@@137 ($generated@@25 $generated@@136))) (and (<= ($generated@@82 0) $generated@@138) (< $generated@@138 ($generated@@32 $generated@@136)))) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@135 $generated@@136) ($generated@@90 ($generated@@100 $generated@@137) $generated@@138)))))
 :pattern ( ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@135 $generated@@136) ($generated@@90 ($generated@@100 $generated@@137) $generated@@138))))
))))
 :pattern ( ($generated@@43 $generated@@135 $generated@@136) ($generated@@44 $generated@@135))
))))
(assert (forall (($generated@@139 T@U) ) (! (<= 0 ($generated@@25 $generated@@139))
 :pattern ( ($generated@@25 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (<= 0 ($generated@@32 $generated@@140))
 :pattern ( ($generated@@32 $generated@@140))
)))
(assert (forall (($generated@@141 Int) ) (! (= ($generated@@23 ($generated@@100 $generated@@141)) 1)
 :pattern ( ($generated@@100 $generated@@141))
)))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@142 ($generated@@100 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@100 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@26 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@26 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@37 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@37 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@75 $generated@@149 ($generated@@87 $generated@@149 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@87 $generated@@149 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@151) (and (or (not (= $generated@@152 $generated@@27)) (not true)) (= ($generated@@28 $generated@@152) ($generated@@26 $generated@@150)))) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@151 $generated@@152) $generated@@3)))) ($generated@@35 $generated@@9 ($generated@@13 ($generated@@25 $generated@@152)) $generated@@0 $generated@@151))
 :pattern ( ($generated@@25 $generated@@152) ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@151 $generated@@152) $generated@@3)) ($generated@@26 $generated@@150))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@154) (and (or (not (= $generated@@155 $generated@@27)) (not true)) (= ($generated@@28 $generated@@155) ($generated@@26 $generated@@153)))) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@154 $generated@@155) $generated@@3)))) ($generated@@35 $generated@@9 ($generated@@13 ($generated@@32 $generated@@155)) $generated@@0 $generated@@154))
 :pattern ( ($generated@@32 $generated@@155) ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@154 $generated@@155) $generated@@3)) ($generated@@26 $generated@@153))
)))
(assert  (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@156 $generated@@159 $generated@@160 $generated@@161 ($generated@@158 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@164 $generated@@165) $generated@@162)
 :weight 0
)) (and (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@156 $generated@@166 $generated@@167 $generated@@168 ($generated@@158 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@156 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@181 $generated@@183) (= ($generated@@156 $generated@@175 $generated@@176 $generated@@177 ($generated@@158 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@156 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 Bool) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@12 ($generated@@156 $generated@@36 $generated@@47 $generated@@8 ($generated@@157 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))  (=> (and (or (not (= $generated@@188 $generated@@184)) (not true)) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@185 $generated@@188) $generated@@186)))) $generated@@187))
 :pattern ( ($generated@@156 $generated@@36 $generated@@47 $generated@@8 ($generated@@157 $generated@@184 $generated@@185 $generated@@186 $generated@@187) $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 Int) ) (!  (and (= ($generated@@190 ($generated@@90 $generated@@192 $generated@@193)) $generated@@192) (= ($generated@@191 ($generated@@90 $generated@@192 $generated@@193)) $generated@@193))
 :pattern ( ($generated@@90 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@123 $generated@@195 ($generated@@26 $generated@@194)) (and (= ($generated@@87 $generated@@36 ($generated@@75 $generated@@36 $generated@@195)) $generated@@195) ($generated@@29 $generated@@36 ($generated@@75 $generated@@36 $generated@@195) ($generated@@26 $generated@@194))))
 :pattern ( ($generated@@123 $generated@@195 ($generated@@26 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@123 $generated@@197 ($generated@@37 $generated@@196)) (and (= ($generated@@87 $generated@@36 ($generated@@75 $generated@@36 $generated@@197)) $generated@@197) ($generated@@29 $generated@@36 ($generated@@75 $generated@@36 $generated@@197) ($generated@@37 $generated@@196))))
 :pattern ( ($generated@@123 $generated@@197 ($generated@@37 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@44 ($generated@@50 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@198 $generated@@199 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@198 $generated@@199) $generated@@200 $generated@@201))) ($generated@@42 $generated@@198 ($generated@@50 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@198 $generated@@199 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@198 $generated@@199) $generated@@200 $generated@@201))))
 :pattern ( ($generated@@50 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@198 $generated@@199 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@198 $generated@@199) $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@87 $generated@@9 ($generated@@13 ($generated@@82 $generated@@202))) ($generated@@84 $generated@@48 ($generated@@87 $generated@@9 ($generated@@13 $generated@@202))))
 :pattern ( ($generated@@87 $generated@@9 ($generated@@13 ($generated@@82 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@87 $generated@@204 ($generated@@84 $generated@@204 $generated@@203)) ($generated@@84 $generated@@48 ($generated@@87 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@87 $generated@@204 ($generated@@84 $generated@@204 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! ($generated@@35 $generated@@9 $generated@@206 $generated@@0 $generated@@205)
 :pattern ( ($generated@@35 $generated@@9 $generated@@206 $generated@@0 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! ($generated@@35 $generated@@8 $generated@@208 $generated $generated@@207)
 :pattern ( ($generated@@35 $generated@@8 $generated@@208 $generated $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@29 $generated@@9 $generated@@209 $generated@@0)
 :pattern ( ($generated@@29 $generated@@9 $generated@@209 $generated@@0))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@29 $generated@@8 $generated@@210 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@210 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Bool)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () Int)
(declare-fun $generated@@228 () Int)
(declare-fun $generated@@229 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 34) (let (($generated@@230 true))
(let (($generated@@231  (=> (and (not ($generated@@43 $generated@@211 $generated@@212)) (= (ControlFlow 0 27) 25)) $generated@@230)))
(let (($generated@@232  (=> (and ($generated@@43 $generated@@211 $generated@@212) (= (ControlFlow 0 26) 25)) $generated@@230)))
(let (($generated@@233  (=> (not $generated@@213) (=> (and ($generated@@35 $generated@@36 $generated@@212 ($generated@@37 $generated) $generated@@211) ($generated@@45 $generated@@211 $generated@@212)) (and (=> (= (ControlFlow 0 28) 26) $generated@@232) (=> (= (ControlFlow 0 28) 27) $generated@@231))))))
(let (($generated@@234  (=> (and (and (<= ($generated@@82 0) $generated@@214) (< $generated@@214 $generated@@215)) (and (<= ($generated@@82 0) $generated@@216) (< $generated@@216 $generated@@215))) (and (=> (= (ControlFlow 0 8) (- 0 12)) (or (not (= $generated@@212 $generated@@27)) (not true))) (=> (or (not (= $generated@@212 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 8) (- 0 11)) (and (<= 0 $generated@@214) (< $generated@@214 ($generated@@25 $generated@@212)))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@32 $generated@@212)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@12 ($generated@@156 $generated@@36 $generated@@47 $generated@@8 $generated@@217 $generated@@212 ($generated@@90 ($generated@@100 $generated@@214) $generated@@216)))) (=> ($generated@@12 ($generated@@156 $generated@@36 $generated@@47 $generated@@8 $generated@@217 $generated@@212 ($generated@@90 ($generated@@100 $generated@@214) $generated@@216))) (=> (and (and (and (<= ($generated@@82 0) $generated@@218) (< $generated@@218 $generated@@215)) (and (<= ($generated@@82 0) $generated@@219) (< $generated@@219 $generated@@215))) (and (not (and (= $generated@@214 $generated@@218) (= $generated@@216 $generated@@219))) (= (ControlFlow 0 8) (- 0 7)))) (or (or (or (not (= $generated@@212 $generated@@212)) (not true)) (or (not (= ($generated@@90 ($generated@@100 $generated@@214) $generated@@216) ($generated@@90 ($generated@@100 $generated@@218) $generated@@219))) (not true))) (= ($generated@@12 ($generated@@84 $generated@@8 ($generated@@11 false))) ($generated@@12 ($generated@@84 $generated@@8 ($generated@@11 false)))))))))))))))
(let (($generated@@235  (=> (and (< $generated@@216 ($generated@@82 0)) (= (ControlFlow 0 15) 8)) $generated@@234)))
(let (($generated@@236  (=> (and (<= ($generated@@82 0) $generated@@216) (= (ControlFlow 0 14) 8)) $generated@@234)))
(let (($generated@@237  (=> (and (<= ($generated@@82 0) $generated@@214) (< $generated@@214 $generated@@215)) (and (=> (= (ControlFlow 0 16) 14) $generated@@236) (=> (= (ControlFlow 0 16) 15) $generated@@235)))))
(let (($generated@@238  (=> (and (not (and (<= ($generated@@82 0) $generated@@214) (< $generated@@214 $generated@@215))) (= (ControlFlow 0 13) 8)) $generated@@234)))
(let (($generated@@239  (=> (< $generated@@214 ($generated@@82 0)) (and (=> (= (ControlFlow 0 18) 16) $generated@@237) (=> (= (ControlFlow 0 18) 13) $generated@@238)))))
(let (($generated@@240  (=> (<= ($generated@@82 0) $generated@@214) (and (=> (= (ControlFlow 0 17) 16) $generated@@237) (=> (= (ControlFlow 0 17) 13) $generated@@238)))))
(let (($generated@@241  (and (=> (= (ControlFlow 0 19) 17) $generated@@240) (=> (= (ControlFlow 0 19) 18) $generated@@239))))
(let (($generated@@242  (=> (and (and (and ($generated@@44 $generated@@220) ($generated@@41 $generated@@220)) (and ($generated@@42 $generated@@211 $generated@@220) (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (or (= ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@220 $generated@@243) $generated@@244) ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@211 $generated@@243) $generated@@244)) (exists (($generated@@245 Int) ($generated@@246 Int) )  (and (and (and (and (<= ($generated@@82 0) $generated@@245) (< $generated@@245 $generated@@215)) (and (<= ($generated@@82 0) $generated@@246) (< $generated@@246 $generated@@215))) (= $generated@@243 $generated@@212)) (= $generated@@244 ($generated@@90 ($generated@@100 $generated@@245) $generated@@246)))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@220 $generated@@243) $generated@@244))
)))) (and (and (forall (($generated@@247 Int) ($generated@@248 Int) )  (=> (and (and (<= ($generated@@82 0) $generated@@247) (< $generated@@247 $generated@@215)) (and (<= ($generated@@82 0) $generated@@248) (< $generated@@248 $generated@@215))) (= ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@220 $generated@@212) ($generated@@90 ($generated@@100 $generated@@247) $generated@@248)) ($generated@@87 $generated@@8 ($generated@@84 $generated@@8 ($generated@@11 false)))))) ($generated@@35 $generated@@36 $generated@@212 ($generated@@37 $generated) $generated@@220)) (and ($generated@@45 $generated@@220 $generated@@212) ($generated@@45 $generated@@220 $generated@@212)))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (=> ($generated@@45 $generated@@220 $generated@@212) (or ($generated@@43 $generated@@220 $generated@@212) (exists (($generated@@249 Int) ($generated@@250 Int) ) (!  (and (and (and (<= ($generated@@82 0) $generated@@249) (< $generated@@249 ($generated@@25 $generated@@212))) (and (<= ($generated@@82 0) $generated@@250) (< $generated@@250 ($generated@@32 $generated@@212)))) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@220 $generated@@212) ($generated@@90 ($generated@@100 $generated@@249) $generated@@250)))))
 :pattern ( ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@220 $generated@@212) ($generated@@90 ($generated@@100 $generated@@249) $generated@@250))))
))))) (=> (and ($generated@@43 $generated@@220 $generated@@212) (= $generated@@221 (+ $generated@@222 1))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@223) (= (ite ($generated@@43 $generated@@220 $generated@@212) (- $generated@@224 $generated@@221) (- 0 1)) $generated@@223))) (=> (or (<= 0 $generated@@223) (= (ite ($generated@@43 $generated@@220 $generated@@212) (- $generated@@224 $generated@@221) (- 0 1)) $generated@@223)) (=> (= (ControlFlow 0 4) (- 0 3)) (< (ite ($generated@@43 $generated@@220 $generated@@212) (- $generated@@224 $generated@@221) (- 0 1)) $generated@@223)))))))))
(let (($generated@@251  (=> (and (and ($generated@@43 $generated@@211 $generated@@212) (< $generated@@222 $generated@@224)) (= $generated@@223 (ite ($generated@@43 $generated@@211 $generated@@212) (- $generated@@224 $generated@@222) (- 0 1)))) (and (=> (= (ControlFlow 0 20) 19) $generated@@241) (=> (= (ControlFlow 0 20) 4) $generated@@242)))))
(let (($generated@@252 true))
(let (($generated@@253  (=> ($generated@@45 $generated@@211 $generated@@212) (and (=> (= (ControlFlow 0 21) 2) $generated@@252) (=> (= (ControlFlow 0 21) 20) $generated@@251)))))
(let (($generated@@254  (=> (and (not ($generated@@43 $generated@@211 $generated@@212)) (= (ControlFlow 0 23) 21)) $generated@@253)))
(let (($generated@@255  (=> (and ($generated@@43 $generated@@211 $generated@@212) (= (ControlFlow 0 22) 21)) $generated@@253)))
(let (($generated@@256  (=> $generated@@213 (=> (and ($generated@@35 $generated@@36 $generated@@212 ($generated@@37 $generated) $generated@@211) ($generated@@45 $generated@@211 $generated@@212)) (and (=> (= (ControlFlow 0 24) 22) $generated@@255) (=> (= (ControlFlow 0 24) 23) $generated@@254))))))
(let (($generated@@257  (and (=> (= (ControlFlow 0 29) 28) $generated@@233) (=> (= (ControlFlow 0 29) 24) $generated@@256))))
(let (($generated@@258 true))
(let (($generated@@259  (=> (and (and (and ($generated@@44 $generated@@211) ($generated@@41 $generated@@211)) (and (not false) (<= 0 $generated@@222))) (and (and (forall (($generated@@260 T@U) ) (!  (=> (and (or (not (= $generated@@260 $generated@@27)) (not true)) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@225 $generated@@260) $generated@@3)))) (= ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@211 $generated@@260) ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@226 $generated@@260)))
 :pattern ( ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@211 $generated@@260))
)) ($generated@@42 $generated@@226 $generated@@211)) (and (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (and (or (not (= $generated@@261 $generated@@27)) (not true)) ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@226 $generated@@261) $generated@@3)))) (or (= ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@211 $generated@@261) $generated@@262) ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@226 $generated@@261) $generated@@262)) ($generated@@12 ($generated@@156 $generated@@36 $generated@@47 $generated@@8 $generated@@217 $generated@@261 $generated@@262))))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@211 $generated@@261) $generated@@262))
)) (<= (ite ($generated@@43 $generated@@211 $generated@@212) (- $generated@@224 $generated@@222) (- 0 1)) $generated@@227)))) (and (=> (= (ControlFlow 0 30) 1) $generated@@258) (=> (= (ControlFlow 0 30) 29) $generated@@257)))))
(let (($generated@@263  (=> (= $generated@@217 ($generated@@157 $generated@@27 $generated@@225 $generated@@3 false)) (and (=> (= (ControlFlow 0 31) (- 0 33)) (<= 0 $generated@@215)) (=> (<= 0 $generated@@215) (and (=> (= (ControlFlow 0 31) (- 0 32)) (<= 0 $generated@@215)) (=> (<= 0 $generated@@215) (=> (and (and (or (not (= $generated@@212 $generated@@27)) (not true)) ($generated@@29 $generated@@36 $generated@@212 ($generated@@26 $generated))) (not ($generated@@12 ($generated@@75 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@225 $generated@@212) $generated@@3))))) (=> (and (and (and (= ($generated@@25 $generated@@212) $generated@@215) (= ($generated@@32 $generated@@212) $generated@@215)) (and (= $generated@@226 ($generated@@50 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@225 $generated@@212 ($generated@@50 $generated@@47 $generated@@48 ($generated@@46 $generated@@36 ($generated@@49 $generated@@47 $generated@@48) $generated@@225 $generated@@212) $generated@@3 ($generated@@87 $generated@@8 ($generated@@11 true))))) ($generated@@44 $generated@@226))) (and (and ($generated@@41 $generated@@226) (= $generated@@228 ($generated@@82 0))) (and (= $generated@@227 (ite ($generated@@43 $generated@@226 $generated@@212) (- $generated@@224 $generated@@228) (- 0 1))) (= (ControlFlow 0 31) 30)))) $generated@@259)))))))))
(let (($generated@@264  (=> (and (and ($generated@@44 $generated@@225) ($generated@@41 $generated@@225)) (and (<= ($generated@@82 0) $generated@@215) (<= ($generated@@82 0) $generated@@224))) (=> (and (and (and (and ($generated@@29 $generated@@36 $generated@@229 ($generated@@37 $generated)) ($generated@@35 $generated@@36 $generated@@229 ($generated@@37 $generated) $generated@@225)) true) (= 1 $generated@@134)) (and (< 0 $generated@@215) (= (ControlFlow 0 34) 31))) $generated@@263))))
$generated@@264)))))))))))))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 6))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
