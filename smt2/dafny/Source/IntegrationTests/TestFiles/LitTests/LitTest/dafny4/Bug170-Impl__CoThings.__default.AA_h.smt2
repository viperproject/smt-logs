(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (Int) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U Int) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U Int) Bool)
(declare-fun $generated@@35 (T@U Int) Bool)
(declare-fun $generated@@36 (T@U T@U Int) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@95 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@155 (T@T T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@1))
(assert (= ($generated@@20 $generated@@0) $generated@@2))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> (and ($generated@@21 $generated@@22 $generated@@23) ($generated@@21 $generated@@23 $generated@@24)) ($generated@@21 $generated@@22 $generated@@24))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23) ($generated@@21 $generated@@23 $generated@@24))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23) ($generated@@21 $generated@@22 $generated@@24))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 Int) ($generated@@30 Int) ) (!  (=> (and (and (<= 0 $generated@@29) (<= 0 $generated@@30)) (<= (+ $generated@@29 $generated@@30) ($generated@@27 $generated@@28))) (= ($generated@@25 ($generated@@25 $generated@@28 ($generated@@26 $generated@@29)) ($generated@@26 $generated@@30)) ($generated@@25 $generated@@28 ($generated@@26 (+ $generated@@29 $generated@@30)))))
 :pattern ( ($generated@@25 ($generated@@25 $generated@@28 ($generated@@26 $generated@@29)) ($generated@@26 $generated@@30)))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (or ($generated@@34 $generated@@40 $generated@@41) (< 1 $generated@@31)) (and (and (=> (< 0 ($generated@@27 $generated@@40)) ($generated@@35 ($generated@@25 $generated@@40 ($generated@@26 1)) (+ $generated@@41 1))) (=> (=> (< 0 ($generated@@27 $generated@@40)) ($generated@@36 ($generated@@33 $generated@@37) ($generated@@25 $generated@@40 ($generated@@26 1)) (+ $generated@@41 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@40)) (forall (($generated@@42 T@U) ) (!  (=> ($generated@@21 $generated@@42 $generated@@40) ($generated@@34 $generated@@42 $generated@@41))
 :pattern ( ($generated@@32 $generated@@39 $generated@@42 $generated@@41))
))))) (= ($generated@@32 ($generated@@33 $generated@@39) $generated@@40 $generated@@41)  (and (=> (< 0 ($generated@@27 $generated@@40)) ($generated@@36 ($generated@@33 $generated@@37) ($generated@@25 $generated@@40 ($generated@@26 1)) (+ $generated@@41 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@40)) (forall (($generated@@43 T@U) ) (!  (=> ($generated@@21 $generated@@43 $generated@@40) ($generated@@32 $generated@@39 $generated@@43 $generated@@41))
 :pattern ( ($generated@@32 $generated@@39 $generated@@43 $generated@@41))
)))))))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@39) $generated@@40 $generated@@41))
))))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (or ($generated@@35 $generated@@45 $generated@@46) (< 1 $generated@@31)) (and (and (=> (< 0 ($generated@@27 $generated@@45)) ($generated@@34 ($generated@@25 $generated@@45 ($generated@@26 1)) (+ $generated@@46 1))) (=> (=> (< 0 ($generated@@27 $generated@@45)) ($generated@@32 ($generated@@33 $generated@@37) ($generated@@25 $generated@@45 ($generated@@26 1)) (+ $generated@@46 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@45)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@21 $generated@@47 $generated@@45) ($generated@@35 $generated@@47 $generated@@46))
 :pattern ( ($generated@@36 $generated@@44 $generated@@47 $generated@@46))
))))) (= ($generated@@36 ($generated@@33 $generated@@44) $generated@@45 $generated@@46)  (and (=> (< 0 ($generated@@27 $generated@@45)) ($generated@@32 ($generated@@33 $generated@@37) ($generated@@25 $generated@@45 ($generated@@26 1)) (+ $generated@@46 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@45)) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@21 $generated@@48 $generated@@45) ($generated@@36 $generated@@44 $generated@@48 $generated@@46))
 :pattern ( ($generated@@36 $generated@@44 $generated@@48 $generated@@46))
)))))))
 :pattern ( ($generated@@36 ($generated@@33 $generated@@44) $generated@@45 $generated@@46))
))))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@49 T@U) ($generated@@50 Int) ($generated@@51 T@U) ) (!  (=> (= $generated@@51 ($generated@@26 0)) ($generated@@32 $generated@@49 $generated@@51 $generated@@50))
 :pattern ( ($generated@@32 $generated@@49 $generated@@51 $generated@@50))
))))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 T@U) ) (!  (=> (= $generated@@54 ($generated@@26 0)) ($generated@@36 $generated@@52 $generated@@54 $generated@@53))
 :pattern ( ($generated@@36 $generated@@52 $generated@@54 $generated@@53))
))))
(assert (forall (($generated@@55 Int) ) (! (= ($generated@@38 $generated@@55) $generated@@55)
 :pattern ( ($generated@@38 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 Int) ) (! (= ($generated@@32 ($generated@@33 $generated@@63) $generated@@64 $generated@@65) ($generated@@32 $generated@@63 $generated@@64 $generated@@65))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@63) $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 Int) ) (! (= ($generated@@36 ($generated@@33 $generated@@66) $generated@@67 $generated@@68) ($generated@@36 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@36 ($generated@@33 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and ($generated@@69 $generated@@71) (<= ($generated@@27 $generated@@71) ($generated@@27 $generated@@70))) (and (= ($generated@@69 ($generated@@25 $generated@@70 $generated@@71)) ($generated@@69 $generated@@70)) (= ($generated@@27 ($generated@@25 $generated@@70 $generated@@71)) (- ($generated@@27 $generated@@70) ($generated@@27 $generated@@71)))))
 :pattern ( ($generated@@25 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 Int) ) (!  (=> (<= 0 $generated@@72) (and ($generated@@69 ($generated@@26 $generated@@72)) (= ($generated@@27 ($generated@@26 $generated@@72)) $generated@@72)))
 :pattern ( ($generated@@26 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (or ($generated@@21 $generated@@73 $generated@@74) (= $generated@@73 $generated@@74)) ($generated@@21 $generated@@74 $generated@@73))
 :pattern ( ($generated@@21 $generated@@73 $generated@@74) ($generated@@21 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (<= 0 ($generated@@27 $generated@@75))
 :pattern ( ($generated@@27 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@59 $generated@@77 ($generated@@60 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@60 $generated@@77 $generated@@76))
)))
(assert (= ($generated@@4 $generated@@78) 3))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 Int) ) (!  (=> (or ($generated@@34 ($generated@@56 $generated@@78 $generated@@80) $generated@@81) (< 1 $generated@@31)) (and (and (=> (< 0 ($generated@@27 $generated@@80)) ($generated@@35 ($generated@@25 $generated@@80 ($generated@@26 1)) (+ $generated@@81 1))) (=> (=> (< 0 ($generated@@27 $generated@@80)) ($generated@@36 ($generated@@33 $generated@@37) ($generated@@25 $generated@@80 ($generated@@26 1)) (+ $generated@@81 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@80)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@21 $generated@@82 $generated@@80) ($generated@@34 $generated@@82 $generated@@81))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@79) $generated@@82 $generated@@81))
))))) (= ($generated@@32 ($generated@@33 $generated@@79) ($generated@@56 $generated@@78 $generated@@80) $generated@@81)  (and (=> (< 0 ($generated@@27 $generated@@80)) ($generated@@36 ($generated@@33 $generated@@37) ($generated@@25 $generated@@80 ($generated@@26 1)) (+ $generated@@81 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@80)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@21 $generated@@83 $generated@@80) ($generated@@32 ($generated@@33 $generated@@79) $generated@@83 $generated@@81))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@79) $generated@@83 $generated@@81))
)))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@33 $generated@@79) ($generated@@56 $generated@@78 $generated@@80) $generated@@81))
))))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 Int) ) (!  (=> (or ($generated@@35 ($generated@@56 $generated@@78 $generated@@85) $generated@@86) (< 1 $generated@@31)) (and (and (=> (< 0 ($generated@@27 $generated@@85)) ($generated@@34 ($generated@@25 $generated@@85 ($generated@@26 1)) (+ $generated@@86 1))) (=> (=> (< 0 ($generated@@27 $generated@@85)) ($generated@@32 ($generated@@33 $generated@@37) ($generated@@25 $generated@@85 ($generated@@26 1)) (+ $generated@@86 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@85)) (forall (($generated@@87 T@U) ) (!  (=> ($generated@@21 $generated@@87 $generated@@85) ($generated@@35 $generated@@87 $generated@@86))
 :pattern ( ($generated@@36 ($generated@@33 $generated@@84) $generated@@87 $generated@@86))
))))) (= ($generated@@36 ($generated@@33 $generated@@84) ($generated@@56 $generated@@78 $generated@@85) $generated@@86)  (and (=> (< 0 ($generated@@27 $generated@@85)) ($generated@@32 ($generated@@33 $generated@@37) ($generated@@25 $generated@@85 ($generated@@26 1)) (+ $generated@@86 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@85)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@21 $generated@@88 $generated@@85) ($generated@@36 ($generated@@33 $generated@@84) $generated@@88 $generated@@86))
 :pattern ( ($generated@@36 ($generated@@33 $generated@@84) $generated@@88 $generated@@86))
)))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@33 $generated@@84) ($generated@@56 $generated@@78 $generated@@85) $generated@@86))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (and (and (and (=> ($generated@@21 $generated@@89 $generated@@90) (or (not (= $generated@@89 $generated@@90)) (not true))) (=> (and ($generated@@69 $generated@@89) (not ($generated@@69 $generated@@90))) ($generated@@21 $generated@@89 $generated@@90))) (=> (and ($generated@@69 $generated@@89) ($generated@@69 $generated@@90)) (= ($generated@@21 $generated@@89 $generated@@90) (< ($generated@@27 $generated@@89) ($generated@@27 $generated@@90))))) (=> (and ($generated@@21 $generated@@89 $generated@@90) ($generated@@69 $generated@@90)) ($generated@@69 $generated@@89)))
 :pattern ( ($generated@@21 $generated@@89 $generated@@90))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@91 $generated@@101 $generated@@102 $generated@@103 ($generated@@97 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@91 $generated@@108 $generated@@109 $generated@@110 ($generated@@97 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@91 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@91 $generated@@117 $generated@@118 $generated@@119 ($generated@@97 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@91 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))) (= ($generated@@4 $generated@@92) 4)) (= ($generated@@4 $generated@@93) 5)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@95 $generated@@126 $generated@@127 ($generated@@98 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@95 $generated@@131 $generated@@132 ($generated@@98 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@95 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@4 ($generated@@96 $generated@@137 $generated@@138)) 6))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@9 ($generated@@91 $generated@@92 $generated@@93 $generated@@5 ($generated@@94 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@9 ($generated@@59 $generated@@5 ($generated@@95 $generated@@93 $generated@@78 ($generated@@95 $generated@@92 ($generated@@96 $generated@@93 $generated@@78) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93 $generated@@5 ($generated@@94 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@69 $generated@@149) (= $generated@@149 ($generated@@26 ($generated@@27 $generated@@149))))
 :pattern ( ($generated@@27 $generated@@149))
 :pattern ( ($generated@@69 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@69 $generated@@151) (<= ($generated@@27 $generated@@151) ($generated@@27 $generated@@150))) (or (and (= $generated@@151 ($generated@@26 0)) (= ($generated@@25 $generated@@150 $generated@@151) $generated@@150)) (and (or (not (= $generated@@151 ($generated@@26 0))) (not true)) ($generated@@21 ($generated@@25 $generated@@150 $generated@@151) $generated@@150))))
 :pattern ( ($generated@@25 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 Int) ) (! (= ($generated@@60 $generated@@6 ($generated@@10 ($generated@@38 $generated@@152))) ($generated@@56 $generated@@78 ($generated@@60 $generated@@6 ($generated@@10 $generated@@152))))
 :pattern ( ($generated@@60 $generated@@6 ($generated@@10 ($generated@@38 $generated@@152))))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@60 $generated@@154 ($generated@@56 $generated@@154 $generated@@153)) ($generated@@56 $generated@@78 ($generated@@60 $generated@@154 $generated@@153)))
 :pattern ( ($generated@@60 $generated@@154 ($generated@@56 $generated@@154 $generated@@153)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@155 $generated@@6 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@155 $generated@@6 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! ($generated@@155 $generated@@78 $generated@@159 $generated@@0 $generated@@158)
 :pattern ( ($generated@@155 $generated@@78 $generated@@159 $generated@@0 $generated@@158))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Int) ) (!  (=> (or ($generated@@34 ($generated@@56 $generated@@78 $generated@@161) ($generated@@38 $generated@@162)) (< 1 $generated@@31)) (and (and (=> (< 0 ($generated@@27 $generated@@161)) ($generated@@35 ($generated@@25 $generated@@161 ($generated@@26 1)) ($generated@@38 (+ $generated@@162 1)))) (=> (=> (< 0 ($generated@@27 $generated@@161)) ($generated@@36 ($generated@@33 $generated@@37) ($generated@@25 $generated@@161 ($generated@@26 1)) ($generated@@38 (+ $generated@@162 1)))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@161)) (forall (($generated@@163 T@U) ) (!  (=> ($generated@@21 $generated@@163 $generated@@161) ($generated@@34 $generated@@163 $generated@@162))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@160) $generated@@163 $generated@@162))
))))) (= ($generated@@32 ($generated@@33 $generated@@160) ($generated@@56 $generated@@78 $generated@@161) ($generated@@38 $generated@@162))  (and (=> (< 0 ($generated@@27 $generated@@161)) ($generated@@36 ($generated@@33 $generated@@37) ($generated@@25 $generated@@161 ($generated@@26 1)) ($generated@@38 (+ $generated@@162 1)))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@161)) (forall (($generated@@164 T@U) ) (!  (=> ($generated@@21 $generated@@164 $generated@@161) ($generated@@32 ($generated@@33 $generated@@160) $generated@@164 $generated@@162))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@160) $generated@@164 $generated@@162))
)))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@33 $generated@@160) ($generated@@56 $generated@@78 $generated@@161) ($generated@@38 $generated@@162)))
))))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Int) ) (!  (=> (or ($generated@@35 ($generated@@56 $generated@@78 $generated@@166) ($generated@@38 $generated@@167)) (< 1 $generated@@31)) (and (and (=> (< 0 ($generated@@27 $generated@@166)) ($generated@@34 ($generated@@25 $generated@@166 ($generated@@26 1)) ($generated@@38 (+ $generated@@167 1)))) (=> (=> (< 0 ($generated@@27 $generated@@166)) ($generated@@32 ($generated@@33 $generated@@37) ($generated@@25 $generated@@166 ($generated@@26 1)) ($generated@@38 (+ $generated@@167 1)))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@166)) (forall (($generated@@168 T@U) ) (!  (=> ($generated@@21 $generated@@168 $generated@@166) ($generated@@35 $generated@@168 $generated@@167))
 :pattern ( ($generated@@36 ($generated@@33 $generated@@165) $generated@@168 $generated@@167))
))))) (= ($generated@@36 ($generated@@33 $generated@@165) ($generated@@56 $generated@@78 $generated@@166) ($generated@@38 $generated@@167))  (and (=> (< 0 ($generated@@27 $generated@@166)) ($generated@@32 ($generated@@33 $generated@@37) ($generated@@25 $generated@@166 ($generated@@26 1)) ($generated@@38 (+ $generated@@167 1)))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@166)) (forall (($generated@@169 T@U) ) (!  (=> ($generated@@21 $generated@@169 $generated@@166) ($generated@@36 ($generated@@33 $generated@@165) $generated@@169 $generated@@167))
 :pattern ( ($generated@@36 ($generated@@33 $generated@@165) $generated@@169 $generated@@167))
)))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@33 $generated@@165) ($generated@@56 $generated@@78 $generated@@166) ($generated@@38 $generated@@167)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@184  (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@34 $generated@@170 $generated@@171) (or ($generated@@32 ($generated@@33 $generated@@37) $generated@@170 $generated@@171) (=> (< 0 ($generated@@27 $generated@@170)) ($generated@@36 ($generated@@33 ($generated@@33 $generated@@37)) ($generated@@25 $generated@@170 ($generated@@26 1)) (+ $generated@@171 1)))))) (=> (=> ($generated@@34 $generated@@170 $generated@@171) (or ($generated@@32 ($generated@@33 $generated@@37) $generated@@170 $generated@@171) (=> (< 0 ($generated@@27 $generated@@170)) ($generated@@36 ($generated@@33 ($generated@@33 $generated@@37)) ($generated@@25 $generated@@170 ($generated@@26 1)) (+ $generated@@171 1))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@34 $generated@@170 $generated@@171) (or ($generated@@32 ($generated@@33 $generated@@37) $generated@@170 $generated@@171) (=> (= ($generated@@38 0) ($generated@@27 $generated@@170)) (forall (($generated@@185 T@U) ) (!  (=> ($generated@@21 $generated@@185 $generated@@170) ($generated@@32 ($generated@@33 ($generated@@33 $generated@@37)) $generated@@185 $generated@@171))
 :pattern ( ($generated@@32 ($generated@@33 ($generated@@33 $generated@@37)) $generated@@185 $generated@@171))
))))))))))
(let (($generated@@186  (=> (<= ($generated@@27 $generated@@170) 0) (=> (and (and (and ($generated@@172 $generated@@173) ($generated@@174 $generated@@173)) (= $generated@@175 $generated@@173)) (and (forall (($generated@@187 T@U) ($generated@@188 Int) ) (!  (=> ($generated@@21 $generated@@187 $generated@@170) ($generated@@32 ($generated@@33 $generated@@37) $generated@@187 $generated@@188))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@37) $generated@@187 $generated@@188))
)) (= (ControlFlow 0 10) 2))) $generated@@184))))
(let (($generated@@189  (=> (< 0 ($generated@@27 $generated@@170)) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@69 ($generated@@56 $generated@@78 ($generated@@26 1)))) (=> ($generated@@69 ($generated@@56 $generated@@78 ($generated@@26 1))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (<= ($generated@@27 ($generated@@56 $generated@@78 ($generated@@26 1))) ($generated@@27 $generated@@170))) (=> (<= ($generated@@27 ($generated@@56 $generated@@78 ($generated@@26 1))) ($generated@@27 $generated@@170)) (=> (and (= $generated@@176 ($generated@@25 $generated@@170 ($generated@@26 1))) (= $generated@@177 (+ $generated@@171 1))) (=> (and (and (and ($generated@@172 $generated@@178) ($generated@@174 $generated@@178)) ($generated@@35 $generated@@176 $generated@@177)) (and (and ($generated@@35 $generated@@176 $generated@@177) (and ($generated@@36 ($generated@@33 $generated@@37) $generated@@176 $generated@@177) (and (=> (< 0 ($generated@@27 $generated@@176)) ($generated@@32 ($generated@@33 $generated@@37) ($generated@@25 $generated@@176 ($generated@@26 1)) (+ $generated@@177 1))) (=> (= ($generated@@38 0) ($generated@@27 $generated@@176)) (forall (($generated@@190 T@U) ) (!  (=> ($generated@@21 $generated@@190 $generated@@176) ($generated@@36 ($generated@@33 $generated@@37) $generated@@190 $generated@@177))
 :pattern ( ($generated@@36 ($generated@@33 $generated@@37) $generated@@190 $generated@@177))
)))))) (= $generated@@175 $generated@@178))) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@69 ($generated@@56 $generated@@78 ($generated@@26 1)))) (=> ($generated@@69 ($generated@@56 $generated@@78 ($generated@@26 1))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@27 ($generated@@56 $generated@@78 ($generated@@26 1))) ($generated@@27 $generated@@170))) (=> (<= ($generated@@27 ($generated@@56 $generated@@78 ($generated@@26 1))) ($generated@@27 $generated@@170)) (=> (and (= $generated@@179 ($generated@@25 $generated@@170 ($generated@@26 1))) ($generated@@155 $generated@@78 $generated@@179 $generated@@0 $generated@@178)) (=> (and (and (= $generated@@180 (+ $generated@@171 1)) ($generated@@155 $generated@@6 ($generated@@10 $generated@@180) $generated $generated@@178)) (and ($generated@@35 ($generated@@25 $generated@@170 ($generated@@26 1)) (+ $generated@@171 1)) ($generated@@35 ($generated@@25 $generated@@170 ($generated@@26 1)) (+ $generated@@171 1)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (=> ($generated@@35 ($generated@@25 $generated@@170 ($generated@@26 1)) (+ $generated@@171 1)) ($generated@@36 ($generated@@33 $generated@@37) ($generated@@25 $generated@@170 ($generated@@26 1)) (+ $generated@@171 1)))) (=> (and ($generated@@36 ($generated@@33 $generated@@37) ($generated@@25 $generated@@170 ($generated@@26 1)) (+ $generated@@171 1)) (= (ControlFlow 0 4) 2)) $generated@@184)))))))))))))))))
(let (($generated@@191  (=> (= $generated@@181 ($generated@@94 $generated@@182 $generated@@183 $generated@@3 false)) (=> (and (and ($generated@@172 $generated@@175) ($generated@@174 $generated@@175)) (and (= $generated@@183 $generated@@175) (forall (($generated@@192 T@U) ($generated@@193 Int) ) (!  (=> (and ($generated@@9 ($generated@@56 $generated@@5 ($generated@@8 true))) (or ($generated@@21 $generated@@192 $generated@@170) (and (= $generated@@192 $generated@@170) (and (<= 0 $generated@@193) (< $generated@@193 $generated@@171))))) ($generated@@32 ($generated@@33 $generated@@37) $generated@@192 $generated@@193))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@37) $generated@@192 $generated@@193))
)))) (and (=> (= (ControlFlow 0 11) 4) $generated@@189) (=> (= (ControlFlow 0 11) 10) $generated@@186))))))
(let (($generated@@194  (=> (and (and ($generated@@172 $generated@@183) ($generated@@174 $generated@@183)) (and (= 2 $generated@@31) (= (ControlFlow 0 12) 11))) $generated@@191)))
$generated@@194))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
