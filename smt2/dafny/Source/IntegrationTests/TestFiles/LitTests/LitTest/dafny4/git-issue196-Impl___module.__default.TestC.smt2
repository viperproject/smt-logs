(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (Int) Int)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (and (or (not (= $generated@@37 $generated@@33)) (not true)) (= ($generated@@34 $generated@@37) ($generated@@32 $generated@@36))) ($generated@@35 $generated@@16 ($generated@@20 ($generated@@31 $generated@@37)) $generated))
 :pattern ( ($generated@@31 $generated@@37) ($generated@@32 $generated@@36))
)))
(assert (= ($generated@@14 $generated@@39) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43) ($generated@@38 $generated@@39 $generated@@42 ($generated@@32 $generated@@41) $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@38 $generated@@39 $generated@@42 ($generated@@32 $generated@@41) $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@47 ($generated@@44 $generated@@46) $generated@@48) ($generated@@38 $generated@@39 $generated@@47 ($generated@@45 $generated@@46) $generated@@48))
 :pattern ( ($generated@@38 $generated@@39 $generated@@47 ($generated@@44 $generated@@46) $generated@@48))
 :pattern ( ($generated@@38 $generated@@39 $generated@@47 ($generated@@45 $generated@@46) $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@52 ($generated@@49 $generated@@51) $generated@@53) ($generated@@38 $generated@@39 $generated@@52 ($generated@@50 $generated@@51) $generated@@53))
 :pattern ( ($generated@@38 $generated@@39 $generated@@52 ($generated@@49 $generated@@51) $generated@@53))
 :pattern ( ($generated@@38 $generated@@39 $generated@@52 ($generated@@50 $generated@@51) $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@57 ($generated@@54 $generated@@56) $generated@@58) ($generated@@38 $generated@@39 $generated@@57 ($generated@@55 $generated@@56) $generated@@58))
 :pattern ( ($generated@@38 $generated@@39 $generated@@57 ($generated@@54 $generated@@56) $generated@@58))
 :pattern ( ($generated@@38 $generated@@39 $generated@@57 ($generated@@55 $generated@@56) $generated@@58))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@14 $generated@@61) 4)) (= ($generated@@14 $generated@@62) 5)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@14 ($generated@@63 $generated@@78 $generated@@79)) 6))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@85 ($generated@@32 $generated@@84) $generated@@86)  (or (= $generated@@85 $generated@@33) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@86 $generated@@85) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@85 ($generated@@32 $generated@@84) $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@88 ($generated@@45 $generated@@87) $generated@@89)  (or (= $generated@@88 $generated@@33) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@89 $generated@@88) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@88 ($generated@@45 $generated@@87) $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@91 ($generated@@50 $generated@@90) $generated@@92)  (or (= $generated@@91 $generated@@33) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@91 ($generated@@50 $generated@@90) $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@94 ($generated@@55 $generated@@93) $generated@@95)  (or (= $generated@@94 $generated@@33) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@95 $generated@@94) $generated@@1)))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@94 ($generated@@55 $generated@@93) $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@96 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@97 $generated@@99) $generated@@1))) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@98 $generated@@99) $generated@@1))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@98 $generated@@99) $generated@@1))
)))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 Int) ) (! (= ($generated@@100 $generated@@101) $generated@@101)
 :pattern ( ($generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 $generated@@103) $generated@@103)
 :pattern ( ($generated@@102 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@59 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@59 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@109 ($generated@@40 $generated@@108))  (and ($generated@@35 $generated@@39 $generated@@109 ($generated@@32 $generated@@108)) (or (not (= $generated@@109 $generated@@33)) (not true))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@109 ($generated@@40 $generated@@108)))
 :pattern ( ($generated@@35 $generated@@39 $generated@@109 ($generated@@32 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@111 ($generated@@44 $generated@@110))  (and ($generated@@35 $generated@@39 $generated@@111 ($generated@@45 $generated@@110)) (or (not (= $generated@@111 $generated@@33)) (not true))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@111 ($generated@@44 $generated@@110)))
 :pattern ( ($generated@@35 $generated@@39 $generated@@111 ($generated@@45 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@113 ($generated@@49 $generated@@112))  (and ($generated@@35 $generated@@39 $generated@@113 ($generated@@50 $generated@@112)) (or (not (= $generated@@113 $generated@@33)) (not true))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@113 ($generated@@49 $generated@@112)))
 :pattern ( ($generated@@35 $generated@@39 $generated@@113 ($generated@@50 $generated@@112)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@115 ($generated@@54 $generated@@114))  (and ($generated@@35 $generated@@39 $generated@@115 ($generated@@55 $generated@@114)) (or (not (= $generated@@115 $generated@@33)) (not true))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@115 ($generated@@54 $generated@@114)))
 :pattern ( ($generated@@35 $generated@@39 $generated@@115 ($generated@@55 $generated@@114)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (!  (=> ($generated@@96 $generated@@116 $generated@@117) (=> ($generated@@38 $generated@@120 $generated@@118 $generated@@119 $generated@@116) ($generated@@38 $generated@@120 $generated@@118 $generated@@119 $generated@@117)))
 :pattern ( ($generated@@96 $generated@@116 $generated@@117) ($generated@@38 $generated@@120 $generated@@118 $generated@@119 $generated@@116))
)))
(assert (forall (($generated@@122 T@U) ) (!  (and (= ($generated@@30 ($generated@@32 $generated@@122)) $generated@@2) (= ($generated@@121 ($generated@@32 $generated@@122)) $generated@@10))
 :pattern ( ($generated@@32 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (!  (and (= ($generated@@30 ($generated@@40 $generated@@123)) $generated@@3) (= ($generated@@121 ($generated@@40 $generated@@123)) $generated@@10))
 :pattern ( ($generated@@40 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (and (= ($generated@@30 ($generated@@45 $generated@@124)) $generated@@4) (= ($generated@@121 ($generated@@45 $generated@@124)) $generated@@11))
 :pattern ( ($generated@@45 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (!  (and (= ($generated@@30 ($generated@@44 $generated@@125)) $generated@@5) (= ($generated@@121 ($generated@@44 $generated@@125)) $generated@@11))
 :pattern ( ($generated@@44 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (and (= ($generated@@30 ($generated@@50 $generated@@126)) $generated@@6) (= ($generated@@121 ($generated@@50 $generated@@126)) $generated@@12))
 :pattern ( ($generated@@50 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (!  (and (= ($generated@@30 ($generated@@49 $generated@@127)) $generated@@7) (= ($generated@@121 ($generated@@49 $generated@@127)) $generated@@12))
 :pattern ( ($generated@@49 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@30 ($generated@@55 $generated@@128)) $generated@@8) (= ($generated@@121 ($generated@@55 $generated@@128)) $generated@@13))
 :pattern ( ($generated@@55 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (and (= ($generated@@30 ($generated@@54 $generated@@129)) $generated@@9) (= ($generated@@121 ($generated@@54 $generated@@129)) $generated@@13))
 :pattern ( ($generated@@54 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@131 ($generated@@32 $generated@@130))  (or (= $generated@@131 $generated@@33) (= ($generated@@34 $generated@@131) ($generated@@32 $generated@@130))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@131 ($generated@@32 $generated@@130)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@133 ($generated@@45 $generated@@132))  (or (= $generated@@133 $generated@@33) (= ($generated@@34 $generated@@133) ($generated@@45 $generated@@132))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@133 ($generated@@45 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@135 ($generated@@50 $generated@@134))  (or (= $generated@@135 $generated@@33) (= ($generated@@34 $generated@@135) ($generated@@50 $generated@@134))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@135 ($generated@@50 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@35 $generated@@39 $generated@@137 ($generated@@55 $generated@@136))  (or (= $generated@@137 $generated@@33) (= ($generated@@34 $generated@@137) ($generated@@55 $generated@@136))))
 :pattern ( ($generated@@35 $generated@@39 $generated@@137 ($generated@@55 $generated@@136)))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or (not (= $generated@@138 $generated@@140)) (not true)) (=> (and ($generated@@96 $generated@@138 $generated@@139) ($generated@@96 $generated@@139 $generated@@140)) ($generated@@96 $generated@@138 $generated@@140)))
 :pattern ( ($generated@@96 $generated@@138 $generated@@139) ($generated@@96 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (<= 0 ($generated@@31 $generated@@141))
 :pattern ( ($generated@@31 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@142 ($generated@@32 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@32 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@144 ($generated@@40 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@40 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@45 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@45 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@44 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@44 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@50 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@50 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@49 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@49 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@154 ($generated@@55 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@55 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@54 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@54 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@59 $generated@@159 ($generated@@105 $generated@@159 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@105 $generated@@159 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and ($generated@@160 $generated@@162) (and (or (not (= $generated@@163 $generated@@33)) (not true)) (= ($generated@@34 $generated@@163) ($generated@@32 $generated@@161)))) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@162 $generated@@163) $generated@@1)))) ($generated@@38 $generated@@16 ($generated@@20 ($generated@@31 $generated@@163)) $generated $generated@@162))
 :pattern ( ($generated@@31 $generated@@163) ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@162 $generated@@163) $generated@@1)) ($generated@@32 $generated@@161))
)))
(assert  (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@164 $generated@@167 $generated@@168 $generated@@169 ($generated@@166 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@172 $generated@@173) $generated@@170)
 :weight 0
)) (and (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@164 $generated@@174 $generated@@175 $generated@@176 ($generated@@166 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@164 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@164 $generated@@183 $generated@@184 $generated@@185 ($generated@@166 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@164 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@19 ($generated@@164 $generated@@39 $generated@@61 $generated@@15 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (or (not (= $generated@@196 $generated@@192)) (not true)) ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@193 $generated@@196) $generated@@194)))) $generated@@195))
 :pattern ( ($generated@@164 $generated@@39 $generated@@61 $generated@@15 ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@160 ($generated@@64 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@198 $generated@@199 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@198 $generated@@199) $generated@@200 $generated@@201))) ($generated@@96 $generated@@198 ($generated@@64 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@198 $generated@@199 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@198 $generated@@199) $generated@@200 $generated@@201))))
 :pattern ( ($generated@@64 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@198 $generated@@199 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@198 $generated@@199) $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@105 $generated@@16 ($generated@@20 ($generated@@100 $generated@@202))) ($generated@@102 $generated@@62 ($generated@@105 $generated@@16 ($generated@@20 $generated@@202))))
 :pattern ( ($generated@@105 $generated@@16 ($generated@@20 ($generated@@100 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@105 $generated@@204 ($generated@@102 $generated@@204 $generated@@203)) ($generated@@102 $generated@@62 ($generated@@105 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@105 $generated@@204 ($generated@@102 $generated@@204 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! ($generated@@38 $generated@@16 $generated@@206 $generated $generated@@205)
 :pattern ( ($generated@@38 $generated@@16 $generated@@206 $generated $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ) (! ($generated@@35 $generated@@16 $generated@@207 $generated)
 :pattern ( ($generated@@35 $generated@@16 $generated@@207 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@225  (=> (= $generated@@208 ($generated@@165 $generated@@33 $generated@@209 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 6)) (<= 0 ($generated@@100 2))) (=> (<= 0 ($generated@@100 2)) (=> (and (and (and (or (not (= $generated@@210 $generated@@33)) (not true)) ($generated@@35 $generated@@39 $generated@@210 ($generated@@32 $generated))) (not ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@209 $generated@@210) $generated@@1))))) (and (and (= ($generated@@31 $generated@@210) ($generated@@100 2)) (= $generated@@211 ($generated@@64 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@209 $generated@@210 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@209 $generated@@210) $generated@@1 ($generated@@105 $generated@@15 ($generated@@18 true)))))) (and ($generated@@160 $generated@@211) ($generated@@212 $generated@@211)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= 0 ($generated@@100 2))) (=> (<= 0 ($generated@@100 2)) (=> (and (and (and (or (not (= $generated@@213 $generated@@33)) (not true)) ($generated@@35 $generated@@39 $generated@@213 ($generated@@32 ($generated@@32 $generated)))) (not ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@211 $generated@@213) $generated@@1))))) (and (and (= ($generated@@31 $generated@@213) ($generated@@100 2)) (= $generated@@214 ($generated@@64 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@211 $generated@@213 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@211 $generated@@213) $generated@@1 ($generated@@105 $generated@@15 ($generated@@18 true)))))) (and ($generated@@160 $generated@@214) ($generated@@212 $generated@@214)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= 0 ($generated@@100 2))) (=> (<= 0 ($generated@@100 2)) (=> (and (and (and (or (not (= $generated@@215 $generated@@33)) (not true)) ($generated@@35 $generated@@39 $generated@@215 ($generated@@32 ($generated@@32 ($generated@@45 $generated))))) (not ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215) $generated@@1))))) (and (and (= ($generated@@31 $generated@@215) ($generated@@100 2)) (= $generated@@216 ($generated@@64 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@214 $generated@@215) $generated@@1 ($generated@@105 $generated@@15 ($generated@@18 true)))))) (and ($generated@@160 $generated@@216) ($generated@@212 $generated@@216)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= 0 ($generated@@100 2))) (=> (<= 0 ($generated@@100 2)) (=> (and (and (and (or (not (= $generated@@217 $generated@@33)) (not true)) ($generated@@35 $generated@@39 $generated@@217 ($generated@@32 ($generated@@45 ($generated@@32 $generated))))) (and (not ($generated@@19 ($generated@@59 $generated@@15 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@216 $generated@@217) $generated@@1)))) (= ($generated@@31 $generated@@217) ($generated@@100 2)))) (and (and (= $generated@@218 ($generated@@64 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@216 $generated@@217 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@39 ($generated@@63 $generated@@61 $generated@@62) $generated@@216 $generated@@217) $generated@@1 ($generated@@105 $generated@@15 ($generated@@18 true))))) ($generated@@160 $generated@@218)) (and ($generated@@212 $generated@@218) (= (ControlFlow 0 2) (- 0 1))))) (<= 0 ($generated@@100 2)))))))))))))))))
(let (($generated@@226  (=> (and ($generated@@160 $generated@@209) ($generated@@212 $generated@@209)) (=> (and (and (and ($generated@@35 $generated@@39 $generated@@219 ($generated@@40 $generated)) ($generated@@38 $generated@@39 $generated@@219 ($generated@@40 $generated) $generated@@209)) true) (and (and ($generated@@35 $generated@@39 $generated@@220 ($generated@@40 ($generated@@32 $generated))) ($generated@@38 $generated@@39 $generated@@220 ($generated@@40 ($generated@@32 $generated)) $generated@@209)) true)) (=> (and (and (and (and ($generated@@35 $generated@@39 $generated@@221 ($generated@@40 ($generated@@32 ($generated@@45 $generated)))) ($generated@@38 $generated@@39 $generated@@221 ($generated@@40 ($generated@@32 ($generated@@45 $generated))) $generated@@209)) true) (and (and ($generated@@35 $generated@@39 $generated@@222 ($generated@@40 ($generated@@45 ($generated@@32 $generated)))) ($generated@@38 $generated@@39 $generated@@222 ($generated@@40 ($generated@@45 ($generated@@32 $generated))) $generated@@209)) true)) (and (and (and ($generated@@35 $generated@@39 $generated@@223 ($generated@@40 ($generated@@55 ($generated@@50 $generated)))) ($generated@@38 $generated@@39 $generated@@223 ($generated@@40 ($generated@@55 ($generated@@50 $generated))) $generated@@209)) true) (and (= 0 $generated@@224) (= (ControlFlow 0 7) 2)))) $generated@@225)))))
$generated@@226)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
