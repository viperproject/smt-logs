(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@50 (T@U Int T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@109 (T@U) Int)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 (T@T T@T) T@T)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T) T@T)
(declare-fun $generated@@132 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@27) 3))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@28 $generated@@34 ($generated@@26 $generated@@27 $generated@@36)) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@36 ($generated@@30 $generated@@34)))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@36)))))) (let (($generated@@37 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@36)))))
($generated@@28 $generated@@34 $generated@@37))) (= ($generated@@24 $generated@@34 ($generated@@25 $generated@@35) ($generated@@26 $generated@@27 $generated@@36)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@36)) 0 (let (($generated@@38 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@36)))))
($generated@@33 (+ 1 ($generated@@24 $generated@@34 ($generated@@25 $generated@@35) $generated@@38))))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@34 ($generated@@25 $generated@@35) ($generated@@26 $generated@@27 $generated@@36)))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@24 $generated@@39 ($generated@@25 $generated@@40) $generated@@41) ($generated@@24 $generated@@39 $generated@@40 $generated@@41))
 :pattern ( ($generated@@24 $generated@@39 ($generated@@25 $generated@@40) $generated@@41))
)))
(assert (= ($generated@@42 $generated@@43) $generated@@3))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@45 $generated@@47) ($generated@@44 $generated@@27 $generated@@43 ($generated@@30 $generated@@46) $generated@@47))
 :pattern ( ($generated@@44 $generated@@27 $generated@@43 ($generated@@30 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ) (! ($generated@@29 $generated@@27 $generated@@43 ($generated@@30 $generated@@48))
 :pattern ( ($generated@@29 $generated@@27 $generated@@43 ($generated@@30 $generated@@48)))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 Int) ($generated@@56 T@U) ) (!  (=> (or ($generated@@50 $generated@@53 $generated@@55 $generated@@56) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@56 ($generated@@30 $generated@@53)) (and (<= ($generated@@33 0) $generated@@55) (< $generated@@55 ($generated@@24 $generated@@53 ($generated@@25 $generated@@51) $generated@@56)))))) (and (=> (or (not (= $generated@@55 ($generated@@33 0))) (not true)) ($generated@@50 $generated@@53 (- $generated@@55 1) ($generated@@32 $generated@@56))) (= ($generated@@49 $generated@@53 ($generated@@25 $generated@@54) $generated@@55 $generated@@56) (ite (= $generated@@55 ($generated@@33 0)) ($generated@@52 $generated@@56) ($generated@@49 $generated@@53 $generated@@54 (- $generated@@55 1) ($generated@@32 $generated@@56))))))
 :pattern ( ($generated@@49 $generated@@53 ($generated@@25 $generated@@54) $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@57 Int) ) (! (= ($generated@@33 $generated@@57) $generated@@57)
 :pattern ( ($generated@@33 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@26 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@26 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@29 $generated@@27 ($generated@@60 $generated@@63 $generated@@64) ($generated@@30 $generated@@62))  (and ($generated@@61 $generated@@63 $generated@@62) ($generated@@29 $generated@@27 $generated@@64 ($generated@@30 $generated@@62))))
 :pattern ( ($generated@@29 $generated@@27 ($generated@@60 $generated@@63 $generated@@64) ($generated@@30 $generated@@62)))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@31 $generated@@65) (= ($generated@@42 $generated@@65) $generated@@3))
 :pattern ( ($generated@@31 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@42 $generated@@67) $generated@@4))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 Int) ($generated@@75 T@U) ) (!  (=> (or ($generated@@50 $generated@@72 ($generated@@33 $generated@@74) ($generated@@26 $generated@@27 $generated@@75)) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@75 ($generated@@30 $generated@@72)) (and (<= ($generated@@33 0) ($generated@@33 $generated@@74)) (< $generated@@74 ($generated@@24 $generated@@72 ($generated@@25 $generated@@51) ($generated@@26 $generated@@27 $generated@@75))))))) (and (=> (or (not (= ($generated@@33 $generated@@74) ($generated@@33 0))) (not true)) ($generated@@50 $generated@@72 ($generated@@33 (- $generated@@74 1)) ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@75))))) (= ($generated@@49 $generated@@72 ($generated@@25 $generated@@73) ($generated@@33 $generated@@74) ($generated@@26 $generated@@27 $generated@@75)) (ite (= ($generated@@33 $generated@@74) ($generated@@33 0)) ($generated@@52 ($generated@@26 $generated@@27 $generated@@75)) ($generated@@49 $generated@@72 ($generated@@25 $generated@@73) ($generated@@33 (- $generated@@74 1)) ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@75))))))))
 :weight 3
 :pattern ( ($generated@@49 $generated@@72 ($generated@@25 $generated@@73) ($generated@@33 $generated@@74) ($generated@@26 $generated@@27 $generated@@75)))
))))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@66 $generated@@76) (exists (($generated@@77 T@U) ($generated@@78 T@U) ) (= $generated@@76 ($generated@@60 $generated@@77 $generated@@78))))
 :pattern ( ($generated@@66 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@31 $generated@@79) (= $generated@@79 $generated@@43))
 :pattern ( ($generated@@31 $generated@@79))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@28 $generated@@80 $generated@@82) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@82 ($generated@@30 $generated@@80)))) (and (=> (not ($generated@@31 $generated@@82)) (let (($generated@@83 ($generated@@32 $generated@@82)))
($generated@@28 $generated@@80 $generated@@83))) (= ($generated@@24 $generated@@80 ($generated@@25 $generated@@81) $generated@@82) (ite ($generated@@31 $generated@@82) 0 (let (($generated@@84 ($generated@@32 $generated@@82)))
(+ 1 ($generated@@24 $generated@@80 $generated@@81 $generated@@84)))))))
 :pattern ( ($generated@@24 $generated@@80 ($generated@@25 $generated@@81) $generated@@82))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@69 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@44 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@69 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= ($generated@@22 ($generated@@30 $generated@@91)) $generated@@2) (= ($generated@@90 ($generated@@30 $generated@@91)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@29 $generated@@27 $generated@@93 ($generated@@30 $generated@@92)) (or ($generated@@31 $generated@@93) ($generated@@66 $generated@@93)))
 :pattern ( ($generated@@66 $generated@@93) ($generated@@29 $generated@@27 $generated@@93 ($generated@@30 $generated@@92)))
 :pattern ( ($generated@@31 $generated@@93) ($generated@@29 $generated@@27 $generated@@93 ($generated@@30 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@61 $generated@@94 $generated) (and (= ($generated@@69 $generated@@8 ($generated@@68 $generated@@8 $generated@@94)) $generated@@94) ($generated@@29 $generated@@8 ($generated@@68 $generated@@8 $generated@@94) $generated)))
 :pattern ( ($generated@@61 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@61 ($generated@@69 $generated@@97 $generated@@95) $generated@@96) ($generated@@29 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@61 ($generated@@69 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@42 ($generated@@60 $generated@@98 $generated@@99)) $generated@@4)
 :pattern ( ($generated@@60 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@52 ($generated@@60 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@60 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@32 ($generated@@60 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@60 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@30 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@30 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@68 $generated@@107 ($generated@@69 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@69 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (< ($generated@@108 $generated@@110) ($generated@@109 ($generated@@60 $generated@@110 $generated@@111)))
 :pattern ( ($generated@@60 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (< ($generated@@109 $generated@@113) ($generated@@109 ($generated@@60 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@60 $generated@@112 $generated@@113))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 Int) ($generated@@118 T@U) ) (!  (=> (and (or ($generated@@50 $generated@@115 $generated@@117 $generated@@118) (and (< 2 $generated@@23) (and (and ($generated@@29 $generated@@27 $generated@@118 ($generated@@30 $generated@@115)) ($generated@@44 $generated@@27 $generated@@118 ($generated@@30 $generated@@115) $generated@@114)) (and (<= ($generated@@33 0) $generated@@117) (< $generated@@117 ($generated@@24 $generated@@115 ($generated@@25 $generated@@51) $generated@@118)))))) ($generated@@45 $generated@@114)) ($generated@@85 ($generated@@49 $generated@@115 $generated@@116 $generated@@117 $generated@@118) $generated@@115 $generated@@114))
 :pattern ( ($generated@@85 ($generated@@49 $generated@@115 $generated@@116 $generated@@117 $generated@@118) $generated@@115 $generated@@114))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and ($generated@@45 $generated@@121) (and ($generated@@66 $generated@@119) ($generated@@44 $generated@@27 $generated@@119 ($generated@@30 $generated@@120) $generated@@121))) ($generated@@85 ($generated@@52 $generated@@119) $generated@@120 $generated@@121))
 :pattern ( ($generated@@85 ($generated@@52 $generated@@119) $generated@@120 $generated@@121))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@122 $generated@@133 $generated@@134 $generated@@135 ($generated@@129 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@138 $generated@@139) $generated@@136)
 :weight 0
)) (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@122 $generated@@140 $generated@@141 $generated@@142 ($generated@@129 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@122 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@122 $generated@@149 $generated@@150 $generated@@151 ($generated@@129 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@122 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)))) (= ($generated@@6 $generated@@123) 4)) (= ($generated@@6 $generated@@124) 5)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@126 $generated@@158 $generated@@159 ($generated@@130 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@160) $generated@@162) $generated@@160)
 :weight 0
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@167 $generated@@168) (= ($generated@@126 $generated@@163 $generated@@164 ($generated@@130 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@165) $generated@@168) ($generated@@126 $generated@@163 $generated@@164 $generated@@166 $generated@@168)))
 :weight 0
))) (= ($generated@@6 $generated@@127) 6)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@6 ($generated@@128 $generated@@169 $generated@@170)) 7))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@131 ($generated@@128 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@128 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@132 ($generated@@128 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@128 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@11 ($generated@@122 $generated@@123 $generated@@124 $generated@@7 ($generated@@125 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@11 ($generated@@68 $generated@@7 ($generated@@126 $generated@@124 $generated@@127 ($generated@@126 $generated@@123 ($generated@@128 $generated@@124 $generated@@127) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@122 $generated@@123 $generated@@124 $generated@@7 ($generated@@125 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@108 ($generated@@69 $generated@@27 $generated@@181)) ($generated@@109 $generated@@181))
 :pattern ( ($generated@@108 ($generated@@69 $generated@@27 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Int) ($generated@@185 T@U) ) (! (= ($generated@@49 $generated@@182 ($generated@@25 $generated@@183) $generated@@184 $generated@@185) ($generated@@49 $generated@@182 $generated@@183 $generated@@184 $generated@@185))
 :pattern ( ($generated@@49 $generated@@182 ($generated@@25 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@61 $generated@@187 ($generated@@30 $generated@@186)) (and (= ($generated@@69 $generated@@27 ($generated@@68 $generated@@27 $generated@@187)) $generated@@187) ($generated@@29 $generated@@27 ($generated@@68 $generated@@27 $generated@@187) ($generated@@30 $generated@@186))))
 :pattern ( ($generated@@61 $generated@@187 ($generated@@30 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and ($generated@@45 $generated@@190) (and ($generated@@66 $generated@@188) ($generated@@44 $generated@@27 $generated@@188 ($generated@@30 $generated@@189) $generated@@190))) ($generated@@44 $generated@@27 ($generated@@32 $generated@@188) ($generated@@30 $generated@@189) $generated@@190))
 :pattern ( ($generated@@44 $generated@@27 ($generated@@32 $generated@@188) ($generated@@30 $generated@@189) $generated@@190))
)))
(assert (= $generated@@43 ($generated@@26 $generated@@27 $generated@@43)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@60 ($generated@@26 $generated@@127 $generated@@191) ($generated@@26 $generated@@27 $generated@@192)) ($generated@@26 $generated@@27 ($generated@@60 $generated@@191 $generated@@192)))
 :pattern ( ($generated@@60 ($generated@@26 $generated@@127 $generated@@191) ($generated@@26 $generated@@27 $generated@@192)))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@69 $generated@@8 ($generated@@12 ($generated@@33 $generated@@193))) ($generated@@26 $generated@@127 ($generated@@69 $generated@@8 ($generated@@12 $generated@@193))))
 :pattern ( ($generated@@69 $generated@@8 ($generated@@12 ($generated@@33 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@T) ) (! (= ($generated@@69 $generated@@195 ($generated@@26 $generated@@195 $generated@@194)) ($generated@@26 $generated@@127 ($generated@@69 $generated@@195 $generated@@194)))
 :pattern ( ($generated@@69 $generated@@195 ($generated@@26 $generated@@195 $generated@@194)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (or ($generated@@28 $generated@@196 $generated@@198) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@198 ($generated@@30 $generated@@196)))) (<= ($generated@@33 0) ($generated@@24 $generated@@196 $generated@@197 $generated@@198)))
 :pattern ( ($generated@@24 $generated@@196 $generated@@197 $generated@@198))
))))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Int) ($generated@@202 T@U) ) (!  (=> (or ($generated@@50 $generated@@199 $generated@@201 $generated@@202) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@202 ($generated@@30 $generated@@199)) (and (<= ($generated@@33 0) $generated@@201) (< $generated@@201 ($generated@@24 $generated@@199 ($generated@@25 $generated@@51) $generated@@202)))))) ($generated@@61 ($generated@@49 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@199))
 :pattern ( ($generated@@49 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! ($generated@@44 $generated@@8 $generated@@204 $generated $generated@@203)
 :pattern ( ($generated@@44 $generated@@8 $generated@@204 $generated $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@45 $generated@@208) (= ($generated@@44 $generated@@27 ($generated@@60 $generated@@206 $generated@@207) ($generated@@30 $generated@@205) $generated@@208)  (and ($generated@@85 $generated@@206 $generated@@205 $generated@@208) ($generated@@44 $generated@@27 $generated@@207 ($generated@@30 $generated@@205) $generated@@208))))
 :pattern ( ($generated@@44 $generated@@27 ($generated@@60 $generated@@206 $generated@@207) ($generated@@30 $generated@@205) $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@29 $generated@@8 $generated@@209 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@209 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@219  (=> (or (not (= $generated@@210 ($generated@@33 0))) (not true)) (=> (and (= $generated@@211 (- $generated@@210 1)) ($generated@@44 $generated@@8 ($generated@@12 $generated@@211) $generated $generated@@212)) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@66 $generated@@213)) (=> ($generated@@66 $generated@@213) (=> (and (= $generated@@214 ($generated@@32 $generated@@213)) ($generated@@44 $generated@@27 $generated@@214 ($generated@@30 $generated@@215) $generated@@212)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (<= ($generated@@33 0) $generated@@211)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (< $generated@@211 ($generated@@24 $generated@@215 ($generated@@25 ($generated@@25 $generated@@51)) $generated@@214))) (=> (and (<= ($generated@@33 0) $generated@@211) (< $generated@@211 ($generated@@24 $generated@@215 ($generated@@25 $generated@@51) $generated@@214))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (<= 0 $generated@@210) (= $generated@@211 $generated@@210))) (=> (or (<= 0 $generated@@210) (= $generated@@211 $generated@@210)) (=> (= (ControlFlow 0 5) (- 0 4)) (or (< $generated@@211 $generated@@210) (and (= $generated@@211 $generated@@210) (< ($generated@@109 $generated@@214) ($generated@@109 $generated@@213)))))))))))))))))
(let (($generated@@220  (=> (and (= $generated@@210 ($generated@@33 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@66 $generated@@213))))
(let (($generated@@221 true))
(let (($generated@@222  (=> (and (<= ($generated@@33 0) $generated@@210) (< $generated@@210 ($generated@@24 $generated@@215 ($generated@@25 $generated@@51) $generated@@213))) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@221) (=> (= (ControlFlow 0 10) 3) $generated@@220)) (=> (= (ControlFlow 0 10) 5) $generated@@219)))))
(let (($generated@@223  (=> (and (< $generated@@210 ($generated@@33 0)) (= (ControlFlow 0 12) 10)) $generated@@222)))
(let (($generated@@224  (=> (and (and (<= ($generated@@33 0) $generated@@210) ($generated@@44 $generated@@27 $generated@@213 ($generated@@30 $generated@@215) $generated@@212)) (and ($generated@@28 $generated@@215 $generated@@213) (= (ControlFlow 0 11) 10))) $generated@@222)))
(let (($generated@@225  (=> (= $generated@@216 ($generated@@125 $generated@@217 $generated@@212 $generated@@1 false)) (and (=> (= (ControlFlow 0 13) 11) $generated@@224) (=> (= (ControlFlow 0 13) 12) $generated@@223)))))
(let (($generated@@226  (=> (and (and (and ($generated@@45 $generated@@212) ($generated@@218 $generated@@212)) ($generated@@29 $generated@@27 $generated@@213 ($generated@@30 $generated@@215))) (and (= 2 $generated@@23) (= (ControlFlow 0 14) 13))) $generated@@225)))
$generated@@226)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
