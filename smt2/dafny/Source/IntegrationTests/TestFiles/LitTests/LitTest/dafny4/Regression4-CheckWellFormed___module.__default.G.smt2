(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@77 (Int) Int)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@130 (T@U Int) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@201 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@28) 3))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and (or ($generated@@26 $generated@@34 $generated@@35) (and (< 1 $generated@@23) (and (and ($generated@@27 $generated@@28 $generated@@35 ($generated@@29 $generated@@34)) ($generated@@30 $generated@@28 $generated@@35 ($generated@@29 $generated@@34) $generated@@33)) ($generated@@31 $generated@@35)))) ($generated@@32 $generated@@33)) ($generated@@24 ($generated@@25 $generated@@34 $generated@@35) $generated@@34 $generated@@33))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@34 $generated@@35) $generated@@34 $generated@@33))
))))
(assert (= ($generated@@36 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@39) $generated@@3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@32 $generated@@41) ($generated@@30 $generated@@28 $generated@@39 ($generated@@29 $generated@@40) $generated@@41))
 :pattern ( ($generated@@30 $generated@@28 $generated@@39 ($generated@@29 $generated@@40) $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ) (! ($generated@@27 $generated@@28 $generated@@39 ($generated@@29 $generated@@42))
 :pattern ( ($generated@@27 $generated@@28 $generated@@39 ($generated@@29 $generated@@42)))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@44 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@44 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@44 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@7 $generated@@45) 4)) (= ($generated@@7 $generated@@46) 5)) (= ($generated@@7 $generated@@47) 6)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@7 ($generated@@48 $generated@@64 $generated@@65)) 7))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@48 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@48 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@48 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@43 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@12 ($generated@@49 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@70 $generated@@72) $generated@@0))) ($generated@@12 ($generated@@49 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@71 $generated@@72) $generated@@0))))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@71 $generated@@72) $generated@@0))
)))
 :pattern ( ($generated@@43 $generated@@70 $generated@@71))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@26 $generated@@74 $generated@@75) (and (< 1 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@75 ($generated@@29 $generated@@74)) ($generated@@31 $generated@@75)))) (= ($generated@@25 $generated@@74 $generated@@75) (let (($generated@@76 ($generated@@73 $generated@@75)))
$generated@@76)))
 :pattern ( ($generated@@25 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@77 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@26 $generated@@83 $generated@@84) (and (< 1 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@84 ($generated@@29 $generated@@83)) ($generated@@31 $generated@@84)))) ($generated@@82 ($generated@@25 $generated@@83 $generated@@84) $generated@@83))
 :pattern ( ($generated@@25 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 $generated@@86) (= ($generated@@38 $generated@@86) $generated@@3))
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@31 $generated@@87) (= ($generated@@38 $generated@@87) $generated@@4))
 :pattern ( ($generated@@31 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@49 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@49 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@85 $generated@@91) (= $generated@@91 $generated@@39))
 :pattern ( ($generated@@85 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@31 $generated@@93) (exists (($generated@@94 T@U) ) (= $generated@@93 ($generated@@92 $generated@@94))))
 :pattern ( ($generated@@31 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@24 ($generated@@88 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@30 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@24 ($generated@@88 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@43 $generated@@99 $generated@@100) (=> ($generated@@24 $generated@@101 $generated@@102 $generated@@99) ($generated@@24 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@43 $generated@@99 $generated@@100) ($generated@@24 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (!  (=> ($generated@@43 $generated@@103 $generated@@104) (=> ($generated@@30 $generated@@107 $generated@@105 $generated@@106 $generated@@103) ($generated@@30 $generated@@107 $generated@@105 $generated@@106 $generated@@104)))
 :pattern ( ($generated@@43 $generated@@103 $generated@@104) ($generated@@30 $generated@@107 $generated@@105 $generated@@106 $generated@@103))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@108 ($generated@@29 $generated@@110)) $generated@@1) (= ($generated@@109 ($generated@@29 $generated@@110)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@82 $generated@@112 $generated@@111) (and (= ($generated@@88 $generated@@28 ($generated@@49 $generated@@28 $generated@@112)) $generated@@112) ($generated@@27 $generated@@28 ($generated@@49 $generated@@28 $generated@@112) $generated@@111)))
 :pattern ( ($generated@@82 $generated@@112 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@32 $generated@@115) (= ($generated@@30 $generated@@28 ($generated@@92 $generated@@114) ($generated@@29 $generated@@113) $generated@@115) ($generated@@24 $generated@@114 $generated@@113 $generated@@115)))
 :pattern ( ($generated@@30 $generated@@28 ($generated@@92 $generated@@114) ($generated@@29 $generated@@113) $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@117 ($generated@@29 $generated@@116)) (or ($generated@@85 $generated@@117) ($generated@@31 $generated@@117)))
 :pattern ( ($generated@@31 $generated@@117) ($generated@@27 $generated@@28 $generated@@117 ($generated@@29 $generated@@116)))
 :pattern ( ($generated@@85 $generated@@117) ($generated@@27 $generated@@28 $generated@@117 ($generated@@29 $generated@@116)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or (not (= $generated@@118 $generated@@120)) (not true)) (=> (and ($generated@@43 $generated@@118 $generated@@119) ($generated@@43 $generated@@119 $generated@@120)) ($generated@@43 $generated@@118 $generated@@120)))
 :pattern ( ($generated@@43 $generated@@118 $generated@@119) ($generated@@43 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@82 ($generated@@88 $generated@@123 $generated@@121) $generated@@122) ($generated@@27 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@82 ($generated@@88 $generated@@123 $generated@@121) $generated@@122))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@26 $generated@@124 ($generated@@79 $generated@@28 $generated@@125)) (and (< 1 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@125 ($generated@@29 $generated@@124)) ($generated@@12 ($generated@@79 $generated@@8 ($generated@@11 ($generated@@31 ($generated@@79 $generated@@28 $generated@@125)))))))) (= ($generated@@25 $generated@@124 ($generated@@79 $generated@@28 $generated@@125)) (let (($generated@@126 ($generated@@79 $generated@@46 ($generated@@73 ($generated@@79 $generated@@28 $generated@@125)))))
$generated@@126)))
 :weight 3
 :pattern ( ($generated@@25 $generated@@124 ($generated@@79 $generated@@28 $generated@@125)))
))))
(assert (forall (($generated@@127 T@U) ) (! (<= 0 ($generated@@36 $generated@@127))
 :pattern ( ($generated@@36 $generated@@127))
)))
(assert (= ($generated@@7 $generated@@128) 8))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@30 $generated@@128 $generated@@131 ($generated@@129 $generated@@132) $generated@@133) (forall (($generated@@134 Int) ) (!  (=> (and (<= 0 $generated@@134) (< $generated@@134 ($generated@@36 $generated@@131))) ($generated@@24 ($generated@@130 $generated@@131 $generated@@134) $generated@@132 $generated@@133))
 :pattern ( ($generated@@130 $generated@@131 $generated@@134))
)))
 :pattern ( ($generated@@30 $generated@@128 $generated@@131 ($generated@@129 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@135 ($generated@@129 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@129 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@108 ($generated@@129 $generated@@137)) $generated)
 :pattern ( ($generated@@129 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@29 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@29 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@38 ($generated@@92 $generated@@140)) $generated@@4)
 :pattern ( ($generated@@92 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@73 ($generated@@92 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@92 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@49 $generated@@143 ($generated@@88 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@88 $generated@@143 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@92 $generated@@145) ($generated@@29 $generated@@144)) ($generated@@82 $generated@@145 $generated@@144))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@92 $generated@@145) ($generated@@29 $generated@@144)))
)))
(assert (forall (($generated@@148 T@U) ) (! (< ($generated@@146 $generated@@148) ($generated@@147 ($generated@@92 $generated@@148)))
 :pattern ( ($generated@@92 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@32 $generated@@151) (and ($generated@@31 $generated@@149) ($generated@@30 $generated@@28 $generated@@149 ($generated@@29 $generated@@150) $generated@@151))) ($generated@@24 ($generated@@73 $generated@@149) $generated@@150 $generated@@151))
 :pattern ( ($generated@@24 ($generated@@73 $generated@@149) $generated@@150 $generated@@151))
)))
(assert  (and (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@152 $generated@@155 $generated@@156 $generated@@157 ($generated@@154 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@160 $generated@@161) $generated@@158)
 :weight 0
)) (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@154 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@152 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@152 $generated@@171 $generated@@172 $generated@@173 ($generated@@154 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@152 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@12 ($generated@@152 $generated@@47 $generated@@45 $generated@@8 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@12 ($generated@@49 $generated@@8 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@47 ($generated@@48 $generated@@45 $generated@@46) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@152 $generated@@47 $generated@@45 $generated@@8 ($generated@@153 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@146 ($generated@@88 $generated@@28 $generated@@186)) ($generated@@147 $generated@@186))
 :pattern ( ($generated@@146 ($generated@@88 $generated@@28 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@82 $generated@@187 ($generated@@129 $generated@@188)) (and (= ($generated@@88 $generated@@128 ($generated@@49 $generated@@128 $generated@@187)) $generated@@187) ($generated@@27 $generated@@128 ($generated@@49 $generated@@128 $generated@@187) ($generated@@129 $generated@@188))))
 :pattern ( ($generated@@82 $generated@@187 ($generated@@129 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@82 $generated@@190 ($generated@@29 $generated@@189)) (and (= ($generated@@88 $generated@@28 ($generated@@49 $generated@@28 $generated@@190)) $generated@@190) ($generated@@27 $generated@@28 ($generated@@49 $generated@@28 $generated@@190) ($generated@@29 $generated@@189))))
 :pattern ( ($generated@@82 $generated@@190 ($generated@@29 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (and ($generated@@32 $generated@@192) ($generated@@27 $generated@@28 $generated@@191 $generated@@111)) ($generated@@30 $generated@@28 $generated@@191 $generated@@111 $generated@@192))
 :pattern ( ($generated@@30 $generated@@28 $generated@@191 $generated@@111 $generated@@192))
)))
(assert (= ($generated@@108 $generated@@111) $generated@@2))
(assert (= ($generated@@109 $generated@@111) $generated@@6))
(assert (= $generated@@39 ($generated@@79 $generated@@28 $generated@@39)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@88 $generated@@9 ($generated@@13 ($generated@@77 $generated@@193))) ($generated@@79 $generated@@46 ($generated@@88 $generated@@9 ($generated@@13 $generated@@193))))
 :pattern ( ($generated@@88 $generated@@9 ($generated@@13 ($generated@@77 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@92 ($generated@@79 $generated@@46 $generated@@194)) ($generated@@79 $generated@@28 ($generated@@92 $generated@@194)))
 :pattern ( ($generated@@92 ($generated@@79 $generated@@46 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@88 $generated@@196 ($generated@@79 $generated@@196 $generated@@195)) ($generated@@79 $generated@@46 ($generated@@88 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@88 $generated@@196 ($generated@@79 $generated@@196 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= ($generated@@36 $generated@@197) 0) (= $generated@@197 $generated@@37))
 :pattern ( ($generated@@36 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@27 $generated@@128 $generated@@198 ($generated@@129 $generated@@199)) (forall (($generated@@200 Int) ) (!  (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@36 $generated@@198))) ($generated@@82 ($generated@@130 $generated@@198 $generated@@200) $generated@@199))
 :pattern ( ($generated@@130 $generated@@198 $generated@@200))
)))
 :pattern ( ($generated@@27 $generated@@128 $generated@@198 ($generated@@129 $generated@@199)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 Int) ) (!  (=> (and (<= 0 $generated@@203) (< $generated@@203 ($generated@@36 $generated@@202))) (< ($generated@@147 ($generated@@49 $generated@@28 ($generated@@130 $generated@@202 $generated@@203))) ($generated@@201 $generated@@202)))
 :pattern ( ($generated@@147 ($generated@@49 $generated@@28 ($generated@@130 $generated@@202 $generated@@203))))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@212 true))
(let (($generated@@213  (=> (and (< $generated@@204 ($generated@@77 0)) (= (ControlFlow 0 5) 1)) $generated@@212)))
(let (($generated@@214  (=> (<= ($generated@@77 0) $generated@@204) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@36 $generated@@206)))) (=> (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@36 $generated@@206))) (=> (and (= $generated@@207 ($generated@@49 $generated@@28 ($generated@@130 $generated@@206 $generated@@205))) ($generated@@30 $generated@@28 $generated@@207 ($generated@@29 ($generated@@129 ($generated@@29 $generated@@111))) $generated@@208)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@31 $generated@@207)) (=> ($generated@@31 $generated@@207) (=> (and ($generated@@26 ($generated@@129 ($generated@@29 $generated@@111)) ($generated@@49 $generated@@28 ($generated@@130 $generated@@206 $generated@@205))) (= (ControlFlow 0 2) 1)) $generated@@212)))))))))
(let (($generated@@215  (=> (and (<= ($generated@@77 0) $generated@@205) (< $generated@@205 ($generated@@36 $generated@@206))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@36 $generated@@206)))) (=> (and (<= 0 $generated@@205) (< $generated@@205 ($generated@@36 $generated@@206))) (=> ($generated@@31 ($generated@@49 $generated@@28 ($generated@@130 $generated@@206 $generated@@205))) (and (=> (= (ControlFlow 0 6) 2) $generated@@214) (=> (= (ControlFlow 0 6) 5) $generated@@213))))))))
(let (($generated@@216  (=> (and (< $generated@@205 ($generated@@77 0)) (= (ControlFlow 0 9) 6)) $generated@@215)))
(let (($generated@@217  (=> (and (<= ($generated@@77 0) $generated@@205) (= (ControlFlow 0 8) 6)) $generated@@215)))
(let (($generated@@218  (=> (= $generated@@209 ($generated@@153 $generated@@210 $generated@@208 $generated@@0 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@217) (=> (= (ControlFlow 0 10) 9) $generated@@216)))))
(let (($generated@@219  (=> (and ($generated@@32 $generated@@208) ($generated@@211 $generated@@208)) (=> (and (and ($generated@@27 $generated@@128 $generated@@206 ($generated@@129 ($generated@@29 ($generated@@129 ($generated@@29 $generated@@111))))) ($generated@@30 $generated@@128 $generated@@206 ($generated@@129 ($generated@@29 ($generated@@129 ($generated@@29 $generated@@111)))) $generated@@208)) (and (= 4 $generated@@23) (= (ControlFlow 0 11) 10))) $generated@@218))))
$generated@@219)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
