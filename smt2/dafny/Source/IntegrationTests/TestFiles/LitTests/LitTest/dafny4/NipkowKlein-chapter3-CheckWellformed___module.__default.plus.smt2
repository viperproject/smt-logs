(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (Int) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@47 (T@U) Int)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@105 (T@U) Int)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@T T@T) T@T)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@1))
(assert (= ($generated@@26 $generated@@0) $generated@@2))
(assert (= ($generated@@10 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@29 $generated@@31 $generated@@32) $generated@@30)  (and ($generated@@27 $generated@@28 $generated@@31 $generated@@30) ($generated@@27 $generated@@28 $generated@@32 $generated@@30)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@29 $generated@@31 $generated@@32) $generated@@30))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (and (<= 0 $generated@@39) (< $generated@@39 ($generated@@35 $generated@@38))) (< ($generated@@36 ($generated@@37 $generated@@28 ($generated@@33 $generated@@38 $generated@@39))) ($generated@@36 ($generated@@34 $generated@@38))))
 :pattern ( ($generated@@33 $generated@@38 $generated@@39) ($generated@@34 $generated@@38))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (or ($generated@@43 ($generated@@42 $generated@@28 $generated@@48) ($generated@@42 $generated@@28 $generated@@49)) (and (< 2 $generated@@40) (and ($generated@@27 $generated@@28 $generated@@48 $generated@@30) ($generated@@27 $generated@@28 $generated@@49 $generated@@30)))) (= ($generated@@41 ($generated@@42 $generated@@28 $generated@@48) ($generated@@42 $generated@@28 $generated@@49)) (ite  (and ($generated@@44 ($generated@@42 $generated@@28 $generated@@48)) ($generated@@44 ($generated@@42 $generated@@28 $generated@@49))) ($generated@@45 ($generated@@46 (+ ($generated@@47 ($generated@@42 $generated@@28 $generated@@48)) ($generated@@47 ($generated@@42 $generated@@28 $generated@@49))))) (ite ($generated@@44 ($generated@@42 $generated@@28 $generated@@48)) (ite (= ($generated@@46 ($generated@@47 ($generated@@42 $generated@@28 $generated@@48))) ($generated@@46 0)) $generated@@49 ($generated@@29 ($generated@@42 $generated@@28 $generated@@48) ($generated@@42 $generated@@28 $generated@@49))) (ite ($generated@@44 ($generated@@42 $generated@@28 $generated@@49)) (ite (= ($generated@@46 ($generated@@47 ($generated@@42 $generated@@28 $generated@@49))) ($generated@@46 0)) $generated@@48 ($generated@@29 ($generated@@42 $generated@@28 $generated@@48) ($generated@@42 $generated@@28 $generated@@49))) ($generated@@29 ($generated@@42 $generated@@28 $generated@@48) ($generated@@42 $generated@@28 $generated@@49)))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@28 $generated@@48) ($generated@@42 $generated@@28 $generated@@49)))
))))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@43 $generated@@50 $generated@@51) (and (< 2 $generated@@40) (and ($generated@@27 $generated@@28 $generated@@50 $generated@@30) ($generated@@27 $generated@@28 $generated@@51 $generated@@30)))) ($generated@@27 $generated@@28 ($generated@@41 $generated@@50 $generated@@51) $generated@@30))
 :pattern ( ($generated@@41 $generated@@50 $generated@@51))
))))
(assert (= ($generated@@35 $generated@@52) 0))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@46 $generated@@53) $generated@@53)
 :pattern ( ($generated@@46 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@42 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@42 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@44 $generated@@57) (= ($generated@@56 $generated@@57) $generated@@6))
 :pattern ( ($generated@@44 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@56 $generated@@59) $generated@@7))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@56 $generated@@61) $generated@@8))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@37 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@37 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@60 $generated@@65) (exists (($generated@@66 T@U) ($generated@@67 T@U) ) (= $generated@@65 ($generated@@29 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@60 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@44 $generated@@68) (exists (($generated@@69 Int) ) (= $generated@@68 ($generated@@45 $generated@@69))))
 :pattern ( ($generated@@44 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@58 $generated@@70) (exists (($generated@@71 T@U) ) (= $generated@@70 ($generated@@34 $generated@@71))))
 :pattern ( ($generated@@58 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@72 $generated@@73 $generated@@30) (and (= ($generated@@62 $generated@@28 ($generated@@37 $generated@@28 $generated@@73)) $generated@@73) ($generated@@27 $generated@@28 ($generated@@37 $generated@@28 $generated@@73) $generated@@30)))
 :pattern ( ($generated@@72 $generated@@73 $generated@@30))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@72 $generated@@74 $generated@@0) (and (= ($generated@@62 $generated@@12 ($generated@@37 $generated@@12 $generated@@74)) $generated@@74) ($generated@@27 $generated@@12 ($generated@@37 $generated@@12 $generated@@74) $generated@@0)))
 :pattern ( ($generated@@72 $generated@@74 $generated@@0))
)))
(assert (= ($generated@@10 $generated@@75) 4))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@72 $generated@@76 $generated) (and (= ($generated@@62 $generated@@75 ($generated@@37 $generated@@75 $generated@@76)) $generated@@76) ($generated@@27 $generated@@75 ($generated@@37 $generated@@75 $generated@@76) $generated)))
 :pattern ( ($generated@@72 $generated@@76 $generated))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@72 ($generated@@62 $generated@@79 $generated@@77) $generated@@78) ($generated@@27 $generated@@79 $generated@@77 $generated@@78))
 :pattern ( ($generated@@72 ($generated@@62 $generated@@79 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (<= 0 ($generated@@35 $generated@@80))
 :pattern ( ($generated@@35 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@56 ($generated@@29 $generated@@81 $generated@@82)) $generated@@8)
 :pattern ( ($generated@@29 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@83 ($generated@@29 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@29 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@86 ($generated@@29 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@29 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 ($generated@@89 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@89 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@26 ($generated@@89 $generated@@92)) $generated@@3)
 :pattern ( ($generated@@89 $generated@@92))
)))
(assert (forall (($generated@@93 Int) ) (! (= ($generated@@56 ($generated@@45 $generated@@93)) $generated@@6)
 :pattern ( ($generated@@45 $generated@@93))
)))
(assert (forall (($generated@@94 Int) ) (! (= ($generated@@47 ($generated@@45 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@45 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@56 ($generated@@34 $generated@@95)) $generated@@7)
 :pattern ( ($generated@@34 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@34 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@34 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@37 $generated@@99 ($generated@@62 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@62 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (< ($generated@@36 $generated@@100) ($generated@@36 ($generated@@29 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@29 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@36 $generated@@103) ($generated@@36 ($generated@@29 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@29 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 Int) ) (! (= ($generated@@27 $generated@@28 ($generated@@45 $generated@@104) $generated@@30) ($generated@@27 $generated@@12 ($generated@@16 $generated@@104) $generated@@0))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@45 $generated@@104) $generated@@30))
)))
(assert (forall (($generated@@106 T@U) ) (! (< ($generated@@105 $generated@@106) ($generated@@36 ($generated@@34 $generated@@106)))
 :pattern ( ($generated@@34 $generated@@106))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@107 $generated@@118 $generated@@119 $generated@@120 ($generated@@114 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@123 $generated@@124) $generated@@121)
 :weight 0
)) (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@107 $generated@@125 $generated@@126 $generated@@127 ($generated@@114 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@107 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@107 $generated@@134 $generated@@135 $generated@@136 ($generated@@114 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)))) (= ($generated@@10 $generated@@108) 5)) (= ($generated@@10 $generated@@109) 6)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@111 $generated@@143 $generated@@144 ($generated@@115 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@145) $generated@@147) $generated@@145)
 :weight 0
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@152 $generated@@153) (= ($generated@@111 $generated@@148 $generated@@149 ($generated@@115 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@150) $generated@@153) ($generated@@111 $generated@@148 $generated@@149 $generated@@151 $generated@@153)))
 :weight 0
))) (= ($generated@@10 $generated@@112) 7)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (= ($generated@@10 ($generated@@113 $generated@@154 $generated@@155)) 8))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@116 ($generated@@113 $generated@@156 $generated@@157)) $generated@@156)
 :pattern ( ($generated@@113 $generated@@156 $generated@@157))
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@117 ($generated@@113 $generated@@158 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@113 $generated@@158 $generated@@159))
))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@15 ($generated@@107 $generated@@108 $generated@@109 $generated@@11 ($generated@@110 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))  (=> (and (or (not (= $generated@@164 $generated@@160)) (not true)) ($generated@@15 ($generated@@37 $generated@@11 ($generated@@111 $generated@@109 $generated@@112 ($generated@@111 $generated@@108 ($generated@@113 $generated@@109 $generated@@112) $generated@@161 $generated@@164) $generated@@162)))) $generated@@163))
 :pattern ( ($generated@@107 $generated@@108 $generated@@109 $generated@@11 ($generated@@110 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@166 $generated@@30) (or (or ($generated@@44 $generated@@166) ($generated@@58 $generated@@166)) ($generated@@60 $generated@@166)))
 :pattern ( ($generated@@60 $generated@@166) ($generated@@27 $generated@@28 $generated@@166 $generated@@30))
 :pattern ( ($generated@@58 $generated@@166) ($generated@@27 $generated@@28 $generated@@166 $generated@@30))
 :pattern ( ($generated@@44 $generated@@166) ($generated@@27 $generated@@28 $generated@@166 $generated@@30))
)))
(assert (= ($generated@@10 $generated@@167) 9))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@72 $generated@@168 ($generated@@89 $generated@@169)) (and (= ($generated@@62 $generated@@167 ($generated@@37 $generated@@167 $generated@@168)) $generated@@168) ($generated@@27 $generated@@167 ($generated@@37 $generated@@167 $generated@@168) ($generated@@89 $generated@@169))))
 :pattern ( ($generated@@72 $generated@@168 ($generated@@89 $generated@@169)))
)))
(assert (= ($generated@@26 $generated@@30) $generated@@5))
(assert (= ($generated@@170 $generated@@30) $generated@@9))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@34 $generated@@171) $generated@@30) ($generated@@27 $generated@@167 $generated@@171 ($generated@@89 $generated)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@34 $generated@@171) $generated@@30))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (or ($generated@@43 $generated@@172 $generated@@173) (and (< 2 $generated@@40) (and ($generated@@27 $generated@@28 $generated@@172 $generated@@30) ($generated@@27 $generated@@28 $generated@@173 $generated@@30)))) (= ($generated@@41 $generated@@172 $generated@@173) (ite  (and ($generated@@44 $generated@@172) ($generated@@44 $generated@@173)) ($generated@@45 (+ ($generated@@47 $generated@@172) ($generated@@47 $generated@@173))) (ite ($generated@@44 $generated@@172) (ite (= ($generated@@47 $generated@@172) ($generated@@46 0)) $generated@@173 ($generated@@29 $generated@@172 $generated@@173)) (ite ($generated@@44 $generated@@173) (ite (= ($generated@@47 $generated@@173) ($generated@@46 0)) $generated@@172 ($generated@@29 $generated@@172 $generated@@173)) ($generated@@29 $generated@@172 $generated@@173))))))
 :pattern ( ($generated@@41 $generated@@172 $generated@@173))
))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@29 ($generated@@42 $generated@@28 $generated@@174) ($generated@@42 $generated@@28 $generated@@175)) ($generated@@42 $generated@@28 ($generated@@29 $generated@@174 $generated@@175)))
 :pattern ( ($generated@@29 ($generated@@42 $generated@@28 $generated@@174) ($generated@@42 $generated@@28 $generated@@175)))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@62 $generated@@12 ($generated@@16 ($generated@@46 $generated@@176))) ($generated@@42 $generated@@112 ($generated@@62 $generated@@12 ($generated@@16 $generated@@176))))
 :pattern ( ($generated@@62 $generated@@12 ($generated@@16 ($generated@@46 $generated@@176))))
)))
(assert (forall (($generated@@177 Int) ) (! (= ($generated@@45 ($generated@@46 $generated@@177)) ($generated@@42 $generated@@28 ($generated@@45 $generated@@177)))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@34 ($generated@@42 $generated@@167 $generated@@178)) ($generated@@42 $generated@@28 ($generated@@34 $generated@@178)))
 :pattern ( ($generated@@34 ($generated@@42 $generated@@167 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@62 $generated@@180 ($generated@@42 $generated@@180 $generated@@179)) ($generated@@42 $generated@@112 ($generated@@62 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@62 $generated@@180 ($generated@@42 $generated@@180 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (!  (=> (= ($generated@@35 $generated@@181) 0) (= $generated@@181 $generated@@52))
 :pattern ( ($generated@@35 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@27 $generated@@167 $generated@@182 ($generated@@89 $generated@@183)) (forall (($generated@@184 Int) ) (!  (=> (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@35 $generated@@182))) ($generated@@72 ($generated@@33 $generated@@182 $generated@@184) $generated@@183))
 :pattern ( ($generated@@33 $generated@@182 $generated@@184))
)))
 :pattern ( ($generated@@27 $generated@@167 $generated@@182 ($generated@@89 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ) (!  (=> (and (<= 0 $generated@@186) (< $generated@@186 ($generated@@35 $generated@@185))) (< ($generated@@36 ($generated@@37 $generated@@28 ($generated@@33 $generated@@185 $generated@@186))) ($generated@@105 $generated@@185)))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@28 ($generated@@33 $generated@@185 $generated@@186))))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@27 $generated@@12 $generated@@187 $generated@@0)
 :pattern ( ($generated@@27 $generated@@12 $generated@@187 $generated@@0))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@27 $generated@@75 $generated@@188 $generated)
 :pattern ( ($generated@@27 $generated@@75 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@196 true))
(let (($generated@@197 true))
(let (($generated@@198  (=> ($generated@@44 $generated@@189) (and (=> (= (ControlFlow 0 13) (- 0 14)) ($generated@@44 $generated@@189)) (=> ($generated@@44 $generated@@189) (and (=> (= (ControlFlow 0 13) 11) $generated@@197) (=> (= (ControlFlow 0 13) 12) $generated@@196)))))))
(let (($generated@@199 true))
(let (($generated@@200 true))
(let (($generated@@201  (=> ($generated@@44 $generated@@190) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@44 $generated@@190)) (=> ($generated@@44 $generated@@190) (and (=> (= (ControlFlow 0 8) 6) $generated@@200) (=> (= (ControlFlow 0 8) 7) $generated@@199)))))))
(let (($generated@@202 true))
(let (($generated@@203  (=> (not ($generated@@44 $generated@@189)) (and (=> (= (ControlFlow 0 10) 8) $generated@@201) (=> (= (ControlFlow 0 10) 5) $generated@@202)))))
(let (($generated@@204  (=> (not (and ($generated@@44 $generated@@189) ($generated@@44 $generated@@190))) (and (=> (= (ControlFlow 0 15) 13) $generated@@198) (=> (= (ControlFlow 0 15) 10) $generated@@203)))))
(let (($generated@@205  (=> (and ($generated@@44 $generated@@189) ($generated@@44 $generated@@190)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@44 $generated@@189)) (=> ($generated@@44 $generated@@189) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@44 $generated@@190)))))))
(let (($generated@@206  (=> (not ($generated@@44 $generated@@189)) (and (=> (= (ControlFlow 0 17) 3) $generated@@205) (=> (= (ControlFlow 0 17) 15) $generated@@204)))))
(let (($generated@@207  (=> ($generated@@44 $generated@@189) (and (=> (= (ControlFlow 0 16) 3) $generated@@205) (=> (= (ControlFlow 0 16) 15) $generated@@204)))))
(let (($generated@@208 true))
(let (($generated@@209  (=> (= $generated@@191 ($generated@@110 $generated@@192 $generated@@193 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 18) 1) $generated@@208) (=> (= (ControlFlow 0 18) 16) $generated@@207)) (=> (= (ControlFlow 0 18) 17) $generated@@206)))))
(let (($generated@@210  (=> (and ($generated@@194 $generated@@193) ($generated@@195 $generated@@193)) (=> (and (and ($generated@@27 $generated@@28 $generated@@189 $generated@@30) ($generated@@27 $generated@@28 $generated@@190 $generated@@30)) (and (= 2 $generated@@40) (= (ControlFlow 0 19) 18))) $generated@@209))))
$generated@@210))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
