(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U Int) T@U)
(declare-fun $generated@@27 (Int) Int)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U T@U Int) Int)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U Int) Bool)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U Int) T@U)
(declare-fun $generated@@41 (Int Int) Int)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@57 (T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@T T@T) T@T)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T) T@T)
(declare-fun $generated@@105 (T@T) T@T)
(declare-fun $generated@@154 (T@U Int Int) Bool)
(declare-fun $generated@@155 (T@U Int Int) Bool)
(declare-fun $generated@@160 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ) (!  (not ($generated@@20 $generated@@21 $generated@@22))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22))
)))
(assert (= ($generated@@23 $generated@@21) 0))
(assert (forall (($generated@@25 T@U) ($generated@@26 Int) ) (!  (=> (= $generated@@26 0) (= ($generated@@24 $generated@@25 $generated@@26) $generated@@25))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 Int) ) (! (= ($generated@@27 $generated@@28) $generated@@28)
 :pattern ( ($generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@T) ) (! (= ($generated@@29 $generated@@31 $generated@@30) $generated@@30)
 :pattern ( ($generated@@29 $generated@@31 $generated@@30))
)))
(assert (= ($generated@@3 $generated@@35) 3))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (or ($generated@@36 ($generated@@29 $generated@@35 $generated@@43) ($generated@@27 $generated@@44)) (and (< 0 $generated@@32) (and ($generated@@37 $generated@@35 $generated@@43 ($generated@@38 $generated)) (<= ($generated@@27 2) ($generated@@27 $generated@@44))))) (and (=> (or (not (= ($generated@@23 ($generated@@29 $generated@@35 $generated@@43)) ($generated@@27 0))) (not true)) ($generated@@36 ($generated@@29 $generated@@35 ($generated@@24 ($generated@@29 $generated@@35 $generated@@43) ($generated@@27 1))) ($generated@@27 $generated@@44))) (= ($generated@@33 ($generated@@34 $generated@@42) ($generated@@29 $generated@@35 $generated@@43) ($generated@@27 $generated@@44)) (ite (= ($generated@@23 ($generated@@29 $generated@@35 $generated@@43)) ($generated@@27 0)) 0 (+ ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 ($generated@@29 $generated@@35 $generated@@43) ($generated@@27 0)))) ($generated@@41 ($generated@@27 $generated@@44) ($generated@@27 ($generated@@33 ($generated@@34 $generated@@42) ($generated@@29 $generated@@35 ($generated@@24 ($generated@@29 $generated@@35 $generated@@43) ($generated@@27 1))) ($generated@@27 $generated@@44)))))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@34 $generated@@42) ($generated@@29 $generated@@35 $generated@@43) ($generated@@27 $generated@@44)))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (and (<= 0 $generated@@46) (<= $generated@@46 ($generated@@23 $generated@@45))) (= ($generated@@23 ($generated@@24 $generated@@45 $generated@@46)) (- ($generated@@23 $generated@@45) $generated@@46)))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@45 $generated@@46)))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@49)  (and (= ($generated@@23 $generated@@48) ($generated@@23 $generated@@49)) (forall (($generated@@50 Int) ) (!  (=> (and (<= 0 $generated@@50) (< $generated@@50 ($generated@@23 $generated@@48))) (= ($generated@@40 $generated@@48 $generated@@50) ($generated@@40 $generated@@49 $generated@@50)))
 :pattern ( ($generated@@40 $generated@@48 $generated@@50))
 :pattern ( ($generated@@40 $generated@@49 $generated@@50))
))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@39 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@39 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ) (!  (=> (and (< 0 $generated@@56) (<= $generated@@56 ($generated@@23 $generated@@55))) (< ($generated@@54 ($generated@@24 $generated@@55 $generated@@56)) ($generated@@54 $generated@@55)))
 :pattern ( ($generated@@54 ($generated@@24 $generated@@55 $generated@@56)))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@57 ($generated@@51 $generated@@62 $generated@@59) $generated@@60 $generated@@61) ($generated@@58 $generated@@62 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@57 ($generated@@51 $generated@@62 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 Int) ($generated@@65 Int) ) (!  (=> (and (and (<= 0 $generated@@64) (<= 0 $generated@@65)) (< $generated@@65 (- ($generated@@23 $generated@@63) $generated@@64))) (= ($generated@@40 ($generated@@24 $generated@@63 $generated@@64) $generated@@65) ($generated@@40 $generated@@63 (+ $generated@@65 $generated@@64))))
 :weight 25
 :pattern ( ($generated@@40 ($generated@@24 $generated@@63 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 Int) ) (! (= ($generated@@33 ($generated@@34 $generated@@66) $generated@@67 $generated@@68) ($generated@@33 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@20 $generated@@69 $generated@@70) (exists (($generated@@71 Int) ) (!  (and (and (<= 0 $generated@@71) (< $generated@@71 ($generated@@23 $generated@@69))) (= ($generated@@40 $generated@@69 $generated@@71) $generated@@70))
 :pattern ( ($generated@@40 $generated@@69 $generated@@71))
)))
 :pattern ( ($generated@@20 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@47 $generated@@72 $generated@@73) (= $generated@@72 $generated@@73))
 :pattern ( ($generated@@47 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@74 $generated@@75 $generated) (and (= ($generated@@51 $generated@@5 ($generated@@39 $generated@@5 $generated@@75)) $generated@@75) ($generated@@37 $generated@@5 ($generated@@39 $generated@@5 $generated@@75) $generated)))
 :pattern ( ($generated@@74 $generated@@75 $generated))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@51 $generated@@78 $generated@@76) $generated@@77) ($generated@@37 $generated@@78 $generated@@76 $generated@@77))
 :pattern ( ($generated@@74 ($generated@@51 $generated@@78 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (<= 0 ($generated@@23 $generated@@79))
 :pattern ( ($generated@@23 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@58 $generated@@35 $generated@@80 ($generated@@38 $generated@@81) $generated@@82) (forall (($generated@@83 Int) ) (!  (=> (and (<= 0 $generated@@83) (< $generated@@83 ($generated@@23 $generated@@80))) ($generated@@57 ($generated@@40 $generated@@80 $generated@@83) $generated@@81 $generated@@82))
 :pattern ( ($generated@@40 $generated@@80 $generated@@83))
)))
 :pattern ( ($generated@@58 $generated@@35 $generated@@80 ($generated@@38 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 ($generated@@38 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@38 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@19 ($generated@@38 $generated@@86)) $generated@@1)
 :pattern ( ($generated@@38 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@39 $generated@@88 ($generated@@51 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@51 $generated@@88 $generated@@87))
)))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 Int) ) (!  (=> (or ($generated@@36 $generated@@90 $generated@@91) (and (< 0 $generated@@32) (and ($generated@@37 $generated@@35 $generated@@90 ($generated@@38 $generated)) (<= ($generated@@27 2) $generated@@91)))) (and (=> (or (not (= ($generated@@23 $generated@@90) ($generated@@27 0))) (not true)) ($generated@@36 ($generated@@24 $generated@@90 ($generated@@27 1)) $generated@@91)) (= ($generated@@33 ($generated@@34 $generated@@89) $generated@@90 $generated@@91) (ite (= ($generated@@23 $generated@@90) ($generated@@27 0)) 0 (+ ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@90 ($generated@@27 0)))) ($generated@@41 $generated@@91 ($generated@@33 $generated@@89 ($generated@@24 $generated@@90 ($generated@@27 1)) $generated@@91)))))))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@89) $generated@@90 $generated@@91))
))))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ) (!  (=> (or ($generated@@36 ($generated@@29 $generated@@35 $generated@@93) $generated@@94) (and (< 0 $generated@@32) (and ($generated@@37 $generated@@35 $generated@@93 ($generated@@38 $generated)) (<= ($generated@@27 2) $generated@@94)))) (and (=> (or (not (= ($generated@@23 ($generated@@29 $generated@@35 $generated@@93)) ($generated@@27 0))) (not true)) ($generated@@36 ($generated@@29 $generated@@35 ($generated@@24 ($generated@@29 $generated@@35 $generated@@93) ($generated@@27 1))) $generated@@94)) (= ($generated@@33 ($generated@@34 $generated@@92) ($generated@@29 $generated@@35 $generated@@93) $generated@@94) (ite (= ($generated@@23 ($generated@@29 $generated@@35 $generated@@93)) ($generated@@27 0)) 0 (+ ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 ($generated@@29 $generated@@35 $generated@@93) ($generated@@27 0)))) ($generated@@41 $generated@@94 ($generated@@33 ($generated@@34 $generated@@92) ($generated@@29 $generated@@35 ($generated@@24 ($generated@@29 $generated@@35 $generated@@93) ($generated@@27 1))) $generated@@94)))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@34 $generated@@92) ($generated@@29 $generated@@35 $generated@@93) $generated@@94))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@95 $generated@@106 $generated@@107 $generated@@108 ($generated@@102 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@111 $generated@@112) $generated@@109)
 :weight 0
)) (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@95 $generated@@113 $generated@@114 $generated@@115 ($generated@@102 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@95 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@95 $generated@@122 $generated@@123 $generated@@124 ($generated@@102 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)))) (= ($generated@@3 $generated@@96) 4)) (= ($generated@@3 $generated@@97) 5)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@99 $generated@@131 $generated@@132 ($generated@@103 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@135) $generated@@133)
 :weight 0
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@140 $generated@@141) (= ($generated@@99 $generated@@136 $generated@@137 ($generated@@103 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@141) ($generated@@99 $generated@@136 $generated@@137 $generated@@139 $generated@@141)))
 :weight 0
))) (= ($generated@@3 $generated@@100) 6)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (= ($generated@@3 ($generated@@101 $generated@@142 $generated@@143)) 7))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (! (= ($generated@@104 ($generated@@101 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@101 $generated@@144 $generated@@145))
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@105 ($generated@@101 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@101 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@8 ($generated@@95 $generated@@96 $generated@@97 $generated@@4 ($generated@@98 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@8 ($generated@@39 $generated@@4 ($generated@@99 $generated@@97 $generated@@100 ($generated@@99 $generated@@96 ($generated@@101 $generated@@97 $generated@@100) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97 $generated@@4 ($generated@@98 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@156 T@U) ($generated@@157 Int) ($generated@@158 Int) ) (!  (=> (or ($generated@@155 $generated@@156 $generated@@157 $generated@@158) (and (< 0 $generated@@32) ($generated@@37 $generated@@35 $generated@@156 ($generated@@38 $generated)))) (= ($generated@@154 $generated@@156 $generated@@157 $generated@@158)  (and (and (<= ($generated@@27 2) $generated@@158) (and (<= $generated@@157 ($generated@@27 0)) (< 0 (+ $generated@@157 $generated@@158)))) (forall (($generated@@159 Int) ) (!  (and (=> (and (<= ($generated@@27 0) $generated@@159) (< $generated@@159 ($generated@@23 $generated@@156))) (<= $generated@@157 ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@156 $generated@@159))))) (=> (and (<= ($generated@@27 0) $generated@@159) (< $generated@@159 ($generated@@23 $generated@@156))) (< ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@156 $generated@@159))) (+ $generated@@157 $generated@@158))))
 :pattern ( ($generated@@39 $generated@@5 ($generated@@40 $generated@@156 $generated@@159)))
)))))
 :pattern ( ($generated@@154 $generated@@156 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@161 Int) ($generated@@162 Int) ) (! (= ($generated@@160 $generated@@161 $generated@@162) (mod $generated@@161 $generated@@162))
 :pattern ( ($generated@@160 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 Int) ($generated@@164 Int) ) (! (= ($generated@@41 $generated@@163 $generated@@164) (* $generated@@163 $generated@@164))
 :pattern ( ($generated@@41 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 Int) ($generated@@167 T@U) ) (! (= ($generated@@20 ($generated@@24 $generated@@165 $generated@@166) $generated@@167) (exists (($generated@@168 Int) ) (!  (and (and (and (<= 0 $generated@@166) (<= $generated@@166 $generated@@168)) (< $generated@@168 ($generated@@23 $generated@@165))) (= ($generated@@40 $generated@@165 $generated@@168) $generated@@167))
 :pattern ( ($generated@@40 $generated@@165 $generated@@168))
)))
 :pattern ( ($generated@@20 ($generated@@24 $generated@@165 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@74 $generated@@169 ($generated@@38 $generated@@170)) (and (= ($generated@@51 $generated@@35 ($generated@@39 $generated@@35 $generated@@169)) $generated@@169) ($generated@@37 $generated@@35 ($generated@@39 $generated@@35 $generated@@169) ($generated@@38 $generated@@170))))
 :pattern ( ($generated@@74 $generated@@169 ($generated@@38 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 Int) ($generated@@173 Int) ) (!  (=> (and (and (<= 0 $generated@@172) (<= $generated@@172 $generated@@173)) (< $generated@@173 ($generated@@23 $generated@@171))) (= ($generated@@40 ($generated@@24 $generated@@171 $generated@@172) (- $generated@@173 $generated@@172)) ($generated@@40 $generated@@171 $generated@@173)))
 :weight 25
 :pattern ( ($generated@@40 $generated@@171 $generated@@173) ($generated@@24 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 Int) ($generated@@176 Int) ) (!  (=> (and (and (<= 0 $generated@@175) (<= 0 $generated@@176)) (<= (+ $generated@@175 $generated@@176) ($generated@@23 $generated@@174))) (= ($generated@@24 ($generated@@24 $generated@@174 $generated@@175) $generated@@176) ($generated@@24 $generated@@174 (+ $generated@@175 $generated@@176))))
 :pattern ( ($generated@@24 ($generated@@24 $generated@@174 $generated@@175) $generated@@176))
)))
(assert  (=> (<= 0 $generated@@32) (forall (($generated@@177 T@U) ($generated@@178 Int) ($generated@@179 Int) ) (!  (=> (or ($generated@@155 ($generated@@29 $generated@@35 $generated@@177) ($generated@@27 $generated@@178) ($generated@@27 $generated@@179)) (and (< 0 $generated@@32) ($generated@@37 $generated@@35 $generated@@177 ($generated@@38 $generated)))) (= ($generated@@154 ($generated@@29 $generated@@35 $generated@@177) ($generated@@27 $generated@@178) ($generated@@27 $generated@@179))  (and (and (<= ($generated@@27 2) ($generated@@27 $generated@@179)) (and (<= ($generated@@27 $generated@@178) ($generated@@27 0)) (< 0 (+ $generated@@178 $generated@@179)))) (forall (($generated@@180 Int) ) (!  (and (=> (and (<= ($generated@@27 0) $generated@@180) (< $generated@@180 ($generated@@23 ($generated@@29 $generated@@35 $generated@@177)))) (<= ($generated@@27 $generated@@178) ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 ($generated@@29 $generated@@35 $generated@@177) $generated@@180))))) (=> (and (<= ($generated@@27 0) $generated@@180) (< $generated@@180 ($generated@@23 ($generated@@29 $generated@@35 $generated@@177)))) (< ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 ($generated@@29 $generated@@35 $generated@@177) $generated@@180))) (+ $generated@@178 $generated@@179))))
 :pattern ( ($generated@@39 $generated@@5 ($generated@@40 $generated@@177 $generated@@180)))
)))))
 :weight 3
 :pattern ( ($generated@@154 ($generated@@29 $generated@@35 $generated@@177) ($generated@@27 $generated@@178) ($generated@@27 $generated@@179)))
))))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@51 $generated@@5 ($generated@@9 ($generated@@27 $generated@@181))) ($generated@@29 $generated@@100 ($generated@@51 $generated@@5 ($generated@@9 $generated@@181))))
 :pattern ( ($generated@@51 $generated@@5 ($generated@@9 ($generated@@27 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@51 $generated@@183 ($generated@@29 $generated@@183 $generated@@182)) ($generated@@29 $generated@@100 ($generated@@51 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@51 $generated@@183 ($generated@@29 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= ($generated@@23 $generated@@184) 0) (= $generated@@184 $generated@@21))
 :pattern ( ($generated@@23 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@58 $generated@@5 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@58 $generated@@5 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@37 $generated@@35 $generated@@187 ($generated@@38 $generated@@188)) (forall (($generated@@189 Int) ) (!  (=> (and (<= 0 $generated@@189) (< $generated@@189 ($generated@@23 $generated@@187))) ($generated@@74 ($generated@@40 $generated@@187 $generated@@189) $generated@@188))
 :pattern ( ($generated@@40 $generated@@187 $generated@@189))
)))
 :pattern ( ($generated@@37 $generated@@35 $generated@@187 ($generated@@38 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@37 $generated@@5 $generated@@190 $generated)
 :pattern ( ($generated@@37 $generated@@5 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@209  (=> (= (ControlFlow 0 22) (- 0 21)) (= ($generated@@160 ($generated@@33 ($generated@@34 ($generated@@34 $generated@@191)) $generated@@192 $generated@@193) $generated@@193) ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0))))))))
(let (($generated@@210  (=> (and (= ($generated@@160 $generated@@194 $generated@@193) ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0))))) (= (ControlFlow 0 23) 22)) $generated@@209)))
(let (($generated@@211  (=> (and (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192))) (or (not (= $generated@@193 0)) (not true))) (and (=> (= (ControlFlow 0 14) (- 0 20)) (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192)))) (and (=> (= (ControlFlow 0 14) (- 0 19)) ($generated@@20 $generated@@192 ($generated@@40 $generated@@192 ($generated@@27 0)))) (=> ($generated@@20 $generated@@192 ($generated@@40 $generated@@192 ($generated@@27 0))) (and (=> (= (ControlFlow 0 14) (- 0 18)) (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192)))) (=> (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192))) (=> (= $generated@@195 ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0))))) (and (=> (= (ControlFlow 0 14) (- 0 17)) (<= ($generated@@27 0) $generated@@195)) (=> (<= ($generated@@27 0) $generated@@195) (and (=> (= (ControlFlow 0 14) (- 0 16)) (< $generated@@195 $generated@@193)) (=> (< $generated@@195 $generated@@193) (=> (and (and ($generated@@196 $generated@@197) ($generated@@198 $generated@@197)) (and (= ($generated@@160 $generated@@195 $generated@@193) $generated@@195) (= $generated@@199 $generated@@197))) (and (=> (= (ControlFlow 0 14) (- 0 15)) (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192)))) (=> (= (ControlFlow 0 14) (- 0 13)) (= ($generated@@160 ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0)))) $generated@@193) ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0)))))))))))))))))))))
(let (($generated@@212  (=> (and (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192))) (or (not (= $generated@@193 0)) (not true))) (and (=> (= (ControlFlow 0 8) (- 0 12)) (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192)))) (=> (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192))) (=> (= $generated@@200 ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0))))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (<= ($generated@@27 2) $generated@@193)) (=> (<= ($generated@@27 2) $generated@@193) (=> (and (and ($generated@@196 $generated@@201) ($generated@@198 $generated@@201)) (and (= ($generated@@160 (+ $generated@@200 ($generated@@41 $generated@@193 $generated@@202)) $generated@@193) ($generated@@160 $generated@@200 $generated@@193)) (= $generated@@199 $generated@@201))) (and (=> (= (ControlFlow 0 8) (- 0 10)) (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= $generated@@193 0)) (not true))) (=> (= (ControlFlow 0 8) (- 0 7)) (= ($generated@@160 (+ ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0)))) ($generated@@41 $generated@@193 $generated@@202)) $generated@@193) ($generated@@160 ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0)))) $generated@@193))))))))))))))
(let (($generated@@213  (=> (or (not (= $generated@@193 0)) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (not (= $generated@@193 0)) (not true))) (=> (= (ControlFlow 0 4) (- 0 3)) (= ($generated@@160 $generated@@194 $generated@@193) ($generated@@160 (+ ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0)))) ($generated@@41 $generated@@193 $generated@@202)) $generated@@193))))))))
(let (($generated@@214  (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@193 0)) (not true)))))
(let (($generated@@215  (=> (= $generated@@203 ($generated@@98 $generated@@204 $generated@@205 $generated@@2 false)) (=> (and ($generated@@196 $generated@@199) ($generated@@198 $generated@@199)) (=> (and (and (= $generated@@205 $generated@@199) (forall (($generated@@216 T@U) ($generated@@217 Int) ) (!  (=> (and (and ($generated@@37 $generated@@35 $generated@@216 ($generated@@38 $generated)) (and ($generated@@154 $generated@@216 $generated@@206 $generated@@217) (and (not ($generated@@47 $generated@@216 $generated@@21)) (<= ($generated@@27 0) ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@216 ($generated@@27 0)))))))) (or (< ($generated@@54 $generated@@216) ($generated@@54 $generated@@192)) (and (= ($generated@@54 $generated@@216) ($generated@@54 $generated@@192)) (or (and (<= 0 $generated@@206) (< $generated@@206 $generated@@206)) (and (= $generated@@206 $generated@@206) (and (<= 0 $generated@@217) (< $generated@@217 $generated@@193))))))) (= ($generated@@160 ($generated@@33 ($generated@@34 $generated@@191) $generated@@216 $generated@@217) $generated@@217) ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@216 ($generated@@27 0))))))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@191) $generated@@216 $generated@@217))
 :pattern ( ($generated@@154 $generated@@216 $generated@@206 $generated@@217))
))) (and ($generated@@58 $generated@@35 $generated@@192 ($generated@@38 $generated) $generated@@199) ($generated@@58 $generated@@5 ($generated@@9 $generated@@193) $generated $generated@@199))) (and (=> (= (ControlFlow 0 24) (- 0 29)) (<= ($generated@@27 2) $generated@@193)) (=> (and (and (<= ($generated@@27 2) $generated@@193) ($generated@@36 $generated@@192 $generated@@193)) (and ($generated@@36 $generated@@192 $generated@@193) (= $generated@@194 ($generated@@33 ($generated@@34 $generated@@191) $generated@@192 $generated@@193)))) (and (=> (= (ControlFlow 0 24) (- 0 28)) (and (<= 0 ($generated@@27 1)) (<= ($generated@@27 1) ($generated@@23 $generated@@192)))) (=> (and (<= 0 ($generated@@27 1)) (<= ($generated@@27 1) ($generated@@23 $generated@@192))) (=> (= $generated@@207 ($generated@@24 $generated@@192 ($generated@@27 1))) (=> (and ($generated@@58 $generated@@35 $generated@@207 ($generated@@38 $generated) $generated@@199) ($generated@@58 $generated@@5 ($generated@@9 $generated@@193) $generated $generated@@199)) (and (=> (= (ControlFlow 0 24) (- 0 27)) (<= ($generated@@27 2) $generated@@193)) (=> (<= ($generated@@27 2) $generated@@193) (=> (and (and ($generated@@36 ($generated@@24 $generated@@192 ($generated@@27 1)) $generated@@193) ($generated@@36 ($generated@@24 $generated@@192 ($generated@@27 1)) $generated@@193)) (and (= $generated@@202 ($generated@@33 ($generated@@34 $generated@@191) ($generated@@24 $generated@@192 ($generated@@27 1)) $generated@@193)) (= $generated@@208 ($generated@@41 $generated@@193 $generated@@202)))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (and (<= 0 ($generated@@27 0)) (< ($generated@@27 0) ($generated@@23 $generated@@192)))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (= (+ ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0)))) $generated@@208) $generated@@194)) (=> (= (+ ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0)))) $generated@@208) $generated@@194) (and (and (and (and (=> (= (ControlFlow 0 24) 2) $generated@@214) (=> (= (ControlFlow 0 24) 4) $generated@@213)) (=> (= (ControlFlow 0 24) 8) $generated@@212)) (=> (= (ControlFlow 0 24) 14) $generated@@211)) (=> (= (ControlFlow 0 24) 23) $generated@@210)))))))))))))))))))
(let (($generated@@218  (=> (and ($generated@@196 $generated@@205) ($generated@@198 $generated@@205)) (=> (and (and ($generated@@37 $generated@@35 $generated@@192 ($generated@@38 $generated)) ($generated@@58 $generated@@35 $generated@@192 ($generated@@38 $generated) $generated@@205)) (= 2 $generated@@32)) (=> (and (and (and ($generated@@155 $generated@@192 $generated@@206 $generated@@193) (and ($generated@@154 $generated@@192 $generated@@206 $generated@@193) (and (and (<= ($generated@@27 2) $generated@@193) (and (<= $generated@@206 ($generated@@27 0)) (< 0 (+ $generated@@206 $generated@@193)))) (forall (($generated@@219 Int) ) (!  (and (=> (and (<= ($generated@@27 0) $generated@@219) (< $generated@@219 ($generated@@23 $generated@@192))) (<= $generated@@206 ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 $generated@@219))))) (=> (and (<= ($generated@@27 0) $generated@@219) (< $generated@@219 ($generated@@23 $generated@@192))) (< ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 $generated@@219))) (+ $generated@@206 $generated@@193))))
 :pattern ( ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 $generated@@219)))
))))) (not ($generated@@47 $generated@@192 $generated@@21))) (and (<= ($generated@@27 0) ($generated@@10 ($generated@@39 $generated@@5 ($generated@@40 $generated@@192 ($generated@@27 0))))) (= (ControlFlow 0 30) 24))) $generated@@215)))))
$generated@@218)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
