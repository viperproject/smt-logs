(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@104 (T@U) Int)
(declare-fun $generated@@105 (T@U) Int)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@117 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@T T@T) T@T)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@T) T@T)
(declare-fun $generated@@123 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (or ($generated@@36 $generated@@42) (and (< 1 $generated@@33) ($generated@@31 $generated@@26 $generated@@42 ($generated@@27 $generated)))) (and (=> (not ($generated@@37 $generated@@42)) (let (($generated@@43 ($generated@@38 $generated@@42)))
(let (($generated@@44 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@42)))))
 (=> (not ($generated@@37 $generated@@43)) (let (($generated@@45 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@43)))))
 (=> (<= $generated@@44 $generated@@45) ($generated@@36 $generated@@43))))))) (= ($generated@@34 ($generated@@35 $generated@@41) $generated@@42) (ite ($generated@@37 $generated@@42) true (let (($generated@@46 ($generated@@38 $generated@@42)))
(let (($generated@@47 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@42)))))
(ite ($generated@@37 $generated@@46) true (let (($generated@@48 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@46)))))
 (and (<= $generated@@47 $generated@@48) ($generated@@34 $generated@@41 $generated@@46))))))))))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@41) $generated@@42))
))))
(assert (forall (($generated@@50 Int) ) (! (= ($generated@@49 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@54 $generated@@57 $generated@@58) ($generated@@27 $generated@@56))  (and ($generated@@55 $generated@@57 $generated@@56) ($generated@@31 $generated@@26 $generated@@58 ($generated@@27 $generated@@56))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@54 $generated@@57 $generated@@58) ($generated@@27 $generated@@56)))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@37 $generated@@59) (= ($generated@@23 $generated@@59) $generated@@3))
 :pattern ( ($generated@@37 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@23 $generated@@61) $generated@@4))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@39 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@39 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@60 $generated@@65) (exists (($generated@@66 T@U) ($generated@@67 T@U) ) (= $generated@@65 ($generated@@54 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@60 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@37 $generated@@68) (= $generated@@68 $generated@@24))
 :pattern ( ($generated@@37 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@62 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@25 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@69 ($generated@@62 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@75)) $generated@@2) (= ($generated@@74 ($generated@@27 $generated@@75)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@75))
)))
(assert  (=> (<= 1 $generated@@33) (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@36 ($generated@@51 $generated@@26 $generated@@77)) (and (< 1 $generated@@33) ($generated@@31 $generated@@26 $generated@@77 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 ($generated@@37 ($generated@@51 $generated@@26 $generated@@77)))))) (let (($generated@@78 ($generated@@51 $generated@@26 ($generated@@38 ($generated@@51 $generated@@26 $generated@@77)))))
(let (($generated@@79 ($generated@@49 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 ($generated@@51 $generated@@26 $generated@@77)))))))
 (=> (not ($generated@@37 $generated@@78)) (let (($generated@@80 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@78)))))
 (=> (<= $generated@@79 $generated@@80) ($generated@@36 $generated@@78))))))) (= ($generated@@34 ($generated@@35 $generated@@76) ($generated@@51 $generated@@26 $generated@@77)) (ite ($generated@@37 ($generated@@51 $generated@@26 $generated@@77)) true (let (($generated@@81 ($generated@@51 $generated@@26 ($generated@@38 ($generated@@51 $generated@@26 $generated@@77)))))
(let (($generated@@82 ($generated@@49 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 ($generated@@51 $generated@@26 $generated@@77)))))))
(ite ($generated@@37 $generated@@81) true (let (($generated@@83 ($generated@@49 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@81))))))
 (and (<= $generated@@82 $generated@@83) ($generated@@34 ($generated@@35 $generated@@76) $generated@@81))))))))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@35 $generated@@76) ($generated@@51 $generated@@26 $generated@@77)))
))))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@84 $generated@@85) (or ($generated@@37 $generated@@85) ($generated@@60 $generated@@85)))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@87 ($generated@@27 $generated@@86)) (or ($generated@@37 $generated@@87) ($generated@@60 $generated@@87)))
 :pattern ( ($generated@@60 $generated@@87) ($generated@@31 $generated@@26 $generated@@87 ($generated@@27 $generated@@86)))
 :pattern ( ($generated@@37 $generated@@87) ($generated@@31 $generated@@26 $generated@@87 ($generated@@27 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@55 $generated@@88 $generated) (and (= ($generated@@62 $generated@@8 ($generated@@39 $generated@@8 $generated@@88)) $generated@@88) ($generated@@31 $generated@@8 ($generated@@39 $generated@@8 $generated@@88) $generated)))
 :pattern ( ($generated@@55 $generated@@88 $generated))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@34 ($generated@@35 $generated@@89) $generated@@90) ($generated@@34 $generated@@89 $generated@@90))
 :pattern ( ($generated@@34 ($generated@@35 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@55 ($generated@@62 $generated@@93 $generated@@91) $generated@@92) ($generated@@31 $generated@@93 $generated@@91 $generated@@92))
 :pattern ( ($generated@@55 ($generated@@62 $generated@@93 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@23 ($generated@@54 $generated@@94 $generated@@95)) $generated@@4)
 :pattern ( ($generated@@54 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@40 ($generated@@54 $generated@@96 $generated@@97)) $generated@@96)
 :pattern ( ($generated@@54 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@38 ($generated@@54 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@54 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@100 ($generated@@27 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@27 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@39 $generated@@103 ($generated@@62 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@62 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (< ($generated@@104 $generated@@106) ($generated@@105 ($generated@@54 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@54 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (< ($generated@@105 $generated@@109) ($generated@@105 ($generated@@54 $generated@@108 $generated@@109)))
 :pattern ( ($generated@@54 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and ($generated@@28 $generated@@112) (and ($generated@@60 $generated@@110) ($generated@@25 $generated@@26 $generated@@110 ($generated@@27 $generated@@111) $generated@@112))) ($generated@@69 ($generated@@40 $generated@@110) $generated@@111 $generated@@112))
 :pattern ( ($generated@@69 ($generated@@40 $generated@@110) $generated@@111 $generated@@112))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@113 $generated@@124 $generated@@125 $generated@@126 ($generated@@120 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@129 $generated@@130) $generated@@127)
 :weight 0
)) (and (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@113 $generated@@131 $generated@@132 $generated@@133 ($generated@@120 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@113 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@113 $generated@@140 $generated@@141 $generated@@142 ($generated@@120 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)))) (= ($generated@@6 $generated@@114) 4)) (= ($generated@@6 $generated@@115) 5)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@117 $generated@@149 $generated@@150 ($generated@@121 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@151) $generated@@153) $generated@@151)
 :weight 0
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@158 $generated@@159) (= ($generated@@117 $generated@@154 $generated@@155 ($generated@@121 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@159) ($generated@@117 $generated@@154 $generated@@155 $generated@@157 $generated@@159)))
 :weight 0
))) (= ($generated@@6 $generated@@118) 6)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (= ($generated@@6 ($generated@@119 $generated@@160 $generated@@161)) 7))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@122 ($generated@@119 $generated@@162 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@119 $generated@@162 $generated@@163))
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@123 ($generated@@119 $generated@@164 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@119 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 Bool) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@11 ($generated@@113 $generated@@114 $generated@@115 $generated@@7 ($generated@@116 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))  (=> (and (or (not (= $generated@@170 $generated@@166)) (not true)) ($generated@@11 ($generated@@39 $generated@@7 ($generated@@117 $generated@@115 $generated@@118 ($generated@@117 $generated@@114 ($generated@@119 $generated@@115 $generated@@118) $generated@@167 $generated@@170) $generated@@168)))) $generated@@169))
 :pattern ( ($generated@@113 $generated@@114 $generated@@115 $generated@@7 ($generated@@116 $generated@@166 $generated@@167 $generated@@168 $generated@@169) $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@104 ($generated@@62 $generated@@26 $generated@@172)) ($generated@@105 $generated@@172))
 :pattern ( ($generated@@104 ($generated@@62 $generated@@26 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@55 $generated@@174 ($generated@@27 $generated@@173)) (and (= ($generated@@62 $generated@@26 ($generated@@39 $generated@@26 $generated@@174)) $generated@@174) ($generated@@31 $generated@@26 ($generated@@39 $generated@@26 $generated@@174) ($generated@@27 $generated@@173))))
 :pattern ( ($generated@@55 $generated@@174 ($generated@@27 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@28 $generated@@177) (and ($generated@@60 $generated@@175) ($generated@@25 $generated@@26 $generated@@175 ($generated@@27 $generated@@176) $generated@@177))) ($generated@@25 $generated@@26 ($generated@@38 $generated@@175) ($generated@@27 $generated@@176) $generated@@177))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@38 $generated@@175) ($generated@@27 $generated@@176) $generated@@177))
)))
(assert (= $generated@@24 ($generated@@51 $generated@@26 $generated@@24)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@54 ($generated@@51 $generated@@118 $generated@@178) ($generated@@51 $generated@@26 $generated@@179)) ($generated@@51 $generated@@26 ($generated@@54 $generated@@178 $generated@@179)))
 :pattern ( ($generated@@54 ($generated@@51 $generated@@118 $generated@@178) ($generated@@51 $generated@@26 $generated@@179)))
)))
(assert (forall (($generated@@180 Int) ) (! (= ($generated@@62 $generated@@8 ($generated@@12 ($generated@@49 $generated@@180))) ($generated@@51 $generated@@118 ($generated@@62 $generated@@8 ($generated@@12 $generated@@180))))
 :pattern ( ($generated@@62 $generated@@8 ($generated@@12 ($generated@@49 $generated@@180))))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@T) ) (! (= ($generated@@62 $generated@@182 ($generated@@51 $generated@@182 $generated@@181)) ($generated@@51 $generated@@118 ($generated@@62 $generated@@182 $generated@@181)))
 :pattern ( ($generated@@62 $generated@@182 ($generated@@51 $generated@@182 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! ($generated@@25 $generated@@8 $generated@@184 $generated $generated@@183)
 :pattern ( ($generated@@25 $generated@@8 $generated@@184 $generated $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@28 $generated@@188) (= ($generated@@25 $generated@@26 ($generated@@54 $generated@@186 $generated@@187) ($generated@@27 $generated@@185) $generated@@188)  (and ($generated@@69 $generated@@186 $generated@@185 $generated@@188) ($generated@@25 $generated@@26 $generated@@187 ($generated@@27 $generated@@185) $generated@@188))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@54 $generated@@186 $generated@@187) ($generated@@27 $generated@@185) $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (! ($generated@@31 $generated@@8 $generated@@189 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@189 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@200  (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@36 $generated@@190) (or ($generated@@34 ($generated@@35 $generated@@191) $generated@@190) (=> ($generated@@37 $generated@@190) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 true))))))) (=> (=> ($generated@@36 $generated@@190) (or ($generated@@34 ($generated@@35 $generated@@191) $generated@@190) (=> ($generated@@37 $generated@@190) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 true)))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> ($generated@@36 $generated@@190) (or ($generated@@34 ($generated@@35 $generated@@191) $generated@@190) (=> (not ($generated@@37 $generated@@190)) (let (($generated@@201 ($generated@@38 $generated@@190)))
 (=> ($generated@@37 $generated@@201) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 true))))))))) (=> (=> ($generated@@36 $generated@@190) (or ($generated@@34 ($generated@@35 $generated@@191) $generated@@190) (=> (not ($generated@@37 $generated@@190)) (let (($generated@@202 ($generated@@38 $generated@@190)))
 (=> ($generated@@37 $generated@@202) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 true)))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> ($generated@@36 $generated@@190) (or ($generated@@34 ($generated@@35 $generated@@191) $generated@@190) (=> (not ($generated@@37 $generated@@190)) (let (($generated@@203 ($generated@@38 $generated@@190)))
(let (($generated@@204 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@190)))))
 (=> (not ($generated@@37 $generated@@203)) (let (($generated@@205 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@203)))))
(<= $generated@@204 $generated@@205))))))))) (=> (=> ($generated@@36 $generated@@190) (or ($generated@@34 ($generated@@35 $generated@@191) $generated@@190) (=> (not ($generated@@37 $generated@@190)) (let (($generated@@206 ($generated@@38 $generated@@190)))
(let (($generated@@207 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@190)))))
 (=> (not ($generated@@37 $generated@@206)) (let (($generated@@208 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@206)))))
(<= $generated@@207 $generated@@208)))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@36 $generated@@190) (or ($generated@@34 ($generated@@35 $generated@@191) $generated@@190) (=> (not ($generated@@37 $generated@@190)) (let (($generated@@209 ($generated@@38 $generated@@190)))
 (=> (not ($generated@@37 $generated@@209)) ($generated@@34 ($generated@@35 ($generated@@35 $generated@@191)) $generated@@209)))))))))))))))
(let (($generated@@210  (=> (= $generated@@190 ($generated@@54 ($generated@@62 $generated@@8 ($generated@@12 $generated@@192)) $generated@@193)) (=> (and ($generated@@31 $generated@@26 $generated@@193 ($generated@@27 $generated)) (= (ControlFlow 0 8) 3)) $generated@@200))))
(let (($generated@@211  (=> (and (= $generated@@190 $generated@@24) (= (ControlFlow 0 7) 3)) $generated@@200)))
(let (($generated@@212 true))
(let (($generated@@213  (=> (or (not (= $generated@@190 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@210) (=> (= (ControlFlow 0 9) 1) $generated@@212)))))
(let (($generated@@214  (=> (and (= $generated@@194 ($generated@@116 $generated@@195 $generated@@196 $generated@@1 false)) ($generated@@84 $generated@@190)) (=> (and (and ($generated@@28 $generated@@197) ($generated@@198 $generated@@197)) (and (= $generated@@196 $generated@@197) (forall (($generated@@215 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@26 $generated@@215 ($generated@@27 $generated)) ($generated@@34 ($generated@@35 $generated@@191) ($generated@@54 ($generated@@62 $generated@@8 ($generated@@12 $generated@@199)) $generated@@215))) (or (and (<= 0 $generated@@199) (< $generated@@199 $generated@@199)) (and (= $generated@@199 $generated@@199) (< ($generated@@105 $generated@@215) ($generated@@105 $generated@@190))))) ($generated@@34 ($generated@@35 $generated@@191) $generated@@215))
 :pattern ( ($generated@@54 ($generated@@62 $generated@@8 ($generated@@12 $generated@@199)) $generated@@215))
)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@211) (=> (= (ControlFlow 0 10) 9) $generated@@213))))))
(let (($generated@@216  (=> (and ($generated@@28 $generated@@196) ($generated@@198 $generated@@196)) (=> (and (and (and (and ($generated@@31 $generated@@26 $generated@@190 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@190 ($generated@@27 $generated) $generated@@196)) ($generated@@84 $generated@@190)) (= 2 $generated@@33)) (and (and ($generated@@36 ($generated@@54 ($generated@@62 $generated@@8 ($generated@@12 $generated@@199)) $generated@@190)) (and ($generated@@34 ($generated@@35 $generated@@191) ($generated@@54 ($generated@@62 $generated@@8 ($generated@@12 $generated@@199)) $generated@@190)) (ite ($generated@@37 ($generated@@54 ($generated@@62 $generated@@8 ($generated@@12 $generated@@199)) $generated@@190)) true (let (($generated@@217 ($generated@@38 ($generated@@54 ($generated@@62 $generated@@8 ($generated@@12 $generated@@199)) $generated@@190))))
(let (($generated@@218 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 ($generated@@54 ($generated@@62 $generated@@8 ($generated@@12 $generated@@199)) $generated@@190))))))
(ite ($generated@@37 $generated@@217) true (let (($generated@@219 ($generated@@13 ($generated@@39 $generated@@8 ($generated@@40 $generated@@217)))))
 (and (<= $generated@@218 $generated@@219) ($generated@@34 ($generated@@35 $generated@@191) $generated@@217))))))))) (= (ControlFlow 0 11) 10))) $generated@@214))))
$generated@@216))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
