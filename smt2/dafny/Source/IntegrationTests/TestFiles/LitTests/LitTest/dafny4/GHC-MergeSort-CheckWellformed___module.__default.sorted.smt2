(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@46 () Int)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Int)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@103 (T@U) Bool)
(declare-fun $generated@@104 (T@U) Int)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@111 (T@U T@U T@U) Bool)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Int)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@187 () T@T)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert ($generated@@24 $generated@@25))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@26 $generated@@28 ($generated@@27 $generated@@29) $generated@@30) ($generated@@26 $generated@@28 $generated@@29 $generated@@30))
 :pattern ( ($generated@@26 $generated@@28 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (= ($generated@@31 $generated@@32) $generated@@4))
(assert (= ($generated@@7 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@38)) ($generated@@36 $generated@@37))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@38)))
)))
(assert (= ($generated@@7 $generated@@40) 4))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@42 $generated@@44) ($generated@@39 $generated@@40 $generated@@32 ($generated@@41 $generated@@43) $generated@@44))
 :pattern ( ($generated@@39 $generated@@40 $generated@@32 ($generated@@41 $generated@@43) $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ) (! ($generated@@33 $generated@@40 $generated@@32 ($generated@@41 $generated@@45))
 :pattern ( ($generated@@33 $generated@@40 $generated@@32 ($generated@@41 $generated@@45)))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (or ($generated@@47 $generated@@54 $generated@@56) (and (< 1 $generated@@46) ($generated@@33 $generated@@40 $generated@@56 ($generated@@41 $generated@@54)))) (and (=> (not ($generated@@48 $generated@@56)) (let (($generated@@57 ($generated@@49 $generated@@56)))
($generated@@47 $generated@@54 $generated@@57))) (= ($generated@@26 $generated@@54 ($generated@@27 $generated@@55) $generated@@56) (ite ($generated@@48 $generated@@56) $generated@@50 (let (($generated@@58 ($generated@@49 $generated@@56)))
(let (($generated@@59 ($generated@@51 $generated@@56)))
($generated@@52 ($generated@@53 $generated@@50 $generated@@59) ($generated@@26 $generated@@54 $generated@@55 $generated@@58))))))))
 :pattern ( ($generated@@26 $generated@@54 ($generated@@27 $generated@@55) $generated@@56))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@33 $generated@@40 ($generated@@63 $generated@@66 $generated@@67) ($generated@@41 $generated@@65))  (and ($generated@@64 $generated@@66 $generated@@65) ($generated@@33 $generated@@40 $generated@@67 ($generated@@41 $generated@@65))))
 :pattern ( ($generated@@33 $generated@@40 ($generated@@63 $generated@@66 $generated@@67) ($generated@@41 $generated@@65)))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@48 $generated@@68) (= ($generated@@31 $generated@@68) $generated@@4))
 :pattern ( ($generated@@48 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@31 $generated@@70) $generated@@5))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@71 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@74 $generated@@73))
)))
(assert (= ($generated@@7 $generated@@77) 5))
(assert  (=> (<= 2 $generated@@46) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@76 ($generated@@60 $generated@@40 $generated@@83)) (and (< 2 $generated@@46) ($generated@@33 $generated@@40 $generated@@83 ($generated@@41 $generated@@25)))) (and (=> (not ($generated@@12 ($generated@@60 $generated@@8 ($generated@@11 ($generated@@48 ($generated@@60 $generated@@40 $generated@@83)))))) (let (($generated@@84 ($generated@@60 $generated@@40 ($generated@@49 ($generated@@60 $generated@@40 $generated@@83)))))
(let (($generated@@85 ($generated@@60 $generated@@77 ($generated@@51 ($generated@@60 $generated@@40 $generated@@83)))))
 (and (forall (($generated@@86 T@U) ) (!  (=> ($generated@@64 $generated@@86 $generated@@25) (and ($generated@@47 $generated@@25 $generated@@84) (=> (> ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@84) $generated@@86) 0) ($generated@@81 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@78 $generated@@85 $generated@@86))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@84) $generated@@86))
)) (=> (forall (($generated@@87 T@U) ) (!  (=> ($generated@@64 $generated@@87 $generated@@25) (=> (> ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@84) $generated@@87) 0) ($generated@@78 $generated@@85 $generated@@87)))
 :pattern ( ($generated@@78 $generated@@85 $generated@@87))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@84) $generated@@87))
)) ($generated@@76 $generated@@84)))))) (= ($generated@@75 ($generated@@27 $generated@@82) ($generated@@60 $generated@@40 $generated@@83)) (ite ($generated@@48 ($generated@@60 $generated@@40 $generated@@83)) true (let (($generated@@88 ($generated@@60 $generated@@40 ($generated@@49 ($generated@@60 $generated@@40 $generated@@83)))))
(let (($generated@@89 ($generated@@60 $generated@@77 ($generated@@51 ($generated@@60 $generated@@40 $generated@@83)))))
 (and (forall (($generated@@90 T@U) ) (!  (=> ($generated@@64 $generated@@90 $generated@@25) (=> (> ($generated@@79 ($generated@@60 $generated@@34 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@88)) $generated@@90) 0) ($generated@@78 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@78 $generated@@89 $generated@@90))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@88) $generated@@90))
)) ($generated@@75 ($generated@@27 $generated@@82) $generated@@88))))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@27 $generated@@82) ($generated@@60 $generated@@40 $generated@@83)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or (not (= $generated@@92 $generated@@93)) (not true)) (= ($generated@@79 $generated@@91 $generated@@93) ($generated@@79 ($generated@@53 $generated@@91 $generated@@92) $generated@@93)))
 :pattern ( ($generated@@53 $generated@@91 $generated@@92) ($generated@@79 $generated@@91 $generated@@93))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@47 $generated@@94 ($generated@@60 $generated@@40 $generated@@96)) (and (< 1 $generated@@46) ($generated@@33 $generated@@40 $generated@@96 ($generated@@41 $generated@@94)))) (and (=> (not ($generated@@12 ($generated@@60 $generated@@8 ($generated@@11 ($generated@@48 ($generated@@60 $generated@@40 $generated@@96)))))) (let (($generated@@97 ($generated@@60 $generated@@40 ($generated@@49 ($generated@@60 $generated@@40 $generated@@96)))))
($generated@@47 $generated@@94 $generated@@97))) (= ($generated@@26 $generated@@94 ($generated@@27 $generated@@95) ($generated@@60 $generated@@40 $generated@@96)) (ite ($generated@@48 ($generated@@60 $generated@@40 $generated@@96)) $generated@@50 (let (($generated@@98 ($generated@@60 $generated@@40 ($generated@@49 ($generated@@60 $generated@@40 $generated@@96)))))
(let (($generated@@99 ($generated@@60 $generated@@77 ($generated@@51 ($generated@@60 $generated@@40 $generated@@96)))))
($generated@@52 ($generated@@53 $generated@@50 $generated@@99) ($generated@@26 $generated@@94 ($generated@@27 $generated@@95) $generated@@98))))))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@94 ($generated@@27 $generated@@95) ($generated@@60 $generated@@40 $generated@@96)))
))))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@69 $generated@@100) (exists (($generated@@101 T@U) ($generated@@102 T@U) ) (= $generated@@100 ($generated@@63 $generated@@101 $generated@@102))))
 :pattern ( ($generated@@69 $generated@@100))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@81 ($generated@@60 $generated@@77 $generated@@105) ($generated@@60 $generated@@77 $generated@@106)) (and (< 1 $generated@@46) (and ($generated@@64 $generated@@105 $generated@@25) ($generated@@64 $generated@@106 $generated@@25)))) (and (and ($generated@@103 ($generated@@60 $generated@@77 $generated@@105)) ($generated@@103 ($generated@@60 $generated@@77 $generated@@106))) (= ($generated@@78 ($generated@@60 $generated@@77 $generated@@105) ($generated@@60 $generated@@77 $generated@@106)) (<= ($generated@@104 ($generated@@60 $generated@@77 $generated@@105)) ($generated@@104 ($generated@@60 $generated@@77 $generated@@106))))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@60 $generated@@77 $generated@@105) ($generated@@60 $generated@@77 $generated@@106)))
))))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@48 $generated@@107) (= $generated@@107 $generated@@32))
 :pattern ( ($generated@@48 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@53 $generated@@109 $generated@@110)) (+ ($generated@@108 $generated@@109) 1))
 :pattern ( ($generated@@108 ($generated@@53 $generated@@109 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@111 ($generated@@72 $generated@@115 $generated@@112) $generated@@113 $generated@@114) ($generated@@39 $generated@@115 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@111 ($generated@@72 $generated@@115 $generated@@112) $generated@@113 $generated@@114))
)))
(assert  (=> (<= 2 $generated@@46) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@76 $generated@@117) (and (< 2 $generated@@46) ($generated@@33 $generated@@40 $generated@@117 ($generated@@41 $generated@@25)))) (and (=> (not ($generated@@48 $generated@@117)) (let (($generated@@118 ($generated@@49 $generated@@117)))
(let (($generated@@119 ($generated@@51 $generated@@117)))
 (and (forall (($generated@@120 T@U) ) (!  (=> ($generated@@64 $generated@@120 $generated@@25) (and ($generated@@47 $generated@@25 $generated@@118) (=> (> ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@118) $generated@@120) 0) ($generated@@81 $generated@@119 $generated@@120))))
 :pattern ( ($generated@@78 $generated@@119 $generated@@120))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@118) $generated@@120))
)) (=> (forall (($generated@@121 T@U) ) (!  (=> ($generated@@64 $generated@@121 $generated@@25) (=> (> ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@118) $generated@@121) 0) ($generated@@78 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@78 $generated@@119 $generated@@121))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@118) $generated@@121))
)) ($generated@@76 $generated@@118)))))) (= ($generated@@75 ($generated@@27 $generated@@116) $generated@@117) (ite ($generated@@48 $generated@@117) true (let (($generated@@122 ($generated@@49 $generated@@117)))
(let (($generated@@123 ($generated@@51 $generated@@117)))
 (and (forall (($generated@@124 T@U) ) (!  (=> ($generated@@64 $generated@@124 $generated@@25) (=> (> ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@122) $generated@@124) 0) ($generated@@78 $generated@@123 $generated@@124)))
 :pattern ( ($generated@@78 $generated@@123 $generated@@124))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@122) $generated@@124))
)) ($generated@@75 $generated@@116 $generated@@122))))))))
 :pattern ( ($generated@@75 ($generated@@27 $generated@@116) $generated@@117))
))))
(assert (forall (($generated@@126 T@U) ) (!  (and (= ($generated@@23 ($generated@@41 $generated@@126)) $generated@@3) (= ($generated@@125 ($generated@@41 $generated@@126)) $generated@@6))
 :pattern ( ($generated@@41 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@108 ($generated@@52 $generated@@127 $generated@@128)) (+ ($generated@@108 $generated@@127) ($generated@@108 $generated@@128)))
 :pattern ( ($generated@@108 ($generated@@52 $generated@@127 $generated@@128)))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (or ($generated@@81 $generated@@129 $generated@@130) (and (< 1 $generated@@46) (and ($generated@@64 $generated@@129 $generated@@25) ($generated@@64 $generated@@130 $generated@@25)))) (and (and ($generated@@103 $generated@@129) ($generated@@103 $generated@@130)) (= ($generated@@78 $generated@@129 $generated@@130) (<= ($generated@@104 $generated@@129) ($generated@@104 $generated@@130)))))
 :pattern ( ($generated@@78 $generated@@129 $generated@@130))
))))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@33 $generated@@40 $generated@@132 ($generated@@41 $generated@@131)) (or ($generated@@48 $generated@@132) ($generated@@69 $generated@@132)))
 :pattern ( ($generated@@69 $generated@@132) ($generated@@33 $generated@@40 $generated@@132 ($generated@@41 $generated@@131)))
 :pattern ( ($generated@@48 $generated@@132) ($generated@@33 $generated@@40 $generated@@132 ($generated@@41 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@133 ($generated@@35 $generated@@134)) (forall (($generated@@135 T@U) ) (!  (=> (< 0 ($generated@@79 $generated@@133 $generated@@135)) ($generated@@64 $generated@@135 $generated@@134))
 :pattern ( ($generated@@79 $generated@@133 $generated@@135))
)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@133 ($generated@@35 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@64 $generated@@136 $generated) (and (= ($generated@@72 $generated@@8 ($generated@@71 $generated@@8 $generated@@136)) $generated@@136) ($generated@@33 $generated@@8 ($generated@@71 $generated@@8 $generated@@136) $generated)))
 :pattern ( ($generated@@64 $generated@@136 $generated))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@75 ($generated@@27 $generated@@137) $generated@@138) ($generated@@75 $generated@@137 $generated@@138))
 :pattern ( ($generated@@75 ($generated@@27 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@64 ($generated@@72 $generated@@141 $generated@@139) $generated@@140) ($generated@@33 $generated@@141 $generated@@139 $generated@@140))
 :pattern ( ($generated@@64 ($generated@@72 $generated@@141 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@36 $generated@@142) (forall (($generated@@143 T@U) ) (!  (and (<= 0 ($generated@@79 $generated@@142 $generated@@143)) (<= ($generated@@79 $generated@@142 $generated@@143) ($generated@@108 $generated@@142)))
 :pattern ( ($generated@@79 $generated@@142 $generated@@143))
)))
 :pattern ( ($generated@@36 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (<= 0 ($generated@@108 $generated@@144))
 :pattern ( ($generated@@108 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@24 $generated@@145) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@64 $generated@@147 $generated@@145) ($generated@@111 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@111 $generated@@147 $generated@@145 $generated@@146))
)))
 :pattern ( ($generated@@24 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@79 $generated@@50 $generated@@148) 0)
 :pattern ( ($generated@@79 $generated@@50 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@31 ($generated@@63 $generated@@149 $generated@@150)) $generated@@5)
 :pattern ( ($generated@@63 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@51 ($generated@@63 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@63 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@49 ($generated@@63 $generated@@153 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@63 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@79 ($generated@@53 $generated@@155 $generated@@156) $generated@@156) (+ ($generated@@79 $generated@@155 $generated@@156) 1))
 :pattern ( ($generated@@53 $generated@@155 $generated@@156))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (or ($generated@@47 $generated@@158 $generated@@160) (and (< 1 $generated@@46) (and ($generated@@33 $generated@@40 $generated@@160 ($generated@@41 $generated@@158)) ($generated@@39 $generated@@40 $generated@@160 ($generated@@41 $generated@@158) $generated@@157)))) ($generated@@42 $generated@@157)) ($generated@@39 $generated@@34 ($generated@@26 $generated@@158 $generated@@159 $generated@@160) ($generated@@35 $generated@@158) $generated@@157))
 :pattern ( ($generated@@39 $generated@@34 ($generated@@26 $generated@@158 $generated@@159 $generated@@160) ($generated@@35 $generated@@158) $generated@@157))
))))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@161 ($generated@@35 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@35 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@23 ($generated@@35 $generated@@163)) $generated@@1)
 :pattern ( ($generated@@35 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@164 ($generated@@41 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@41 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@71 $generated@@167 ($generated@@72 $generated@@167 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@72 $generated@@167 $generated@@166))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (< ($generated@@168 $generated@@170) ($generated@@169 ($generated@@63 $generated@@170 $generated@@171)))
 :pattern ( ($generated@@63 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (< ($generated@@169 $generated@@173) ($generated@@169 ($generated@@63 $generated@@172 $generated@@173)))
 :pattern ( ($generated@@63 $generated@@172 $generated@@173))
)))
(assert  (=> (<= 1 $generated@@46) (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (or ($generated@@47 $generated@@174 $generated@@176) (and (< 1 $generated@@46) ($generated@@33 $generated@@40 $generated@@176 ($generated@@41 $generated@@174)))) ($generated@@33 $generated@@34 ($generated@@26 $generated@@174 $generated@@175 $generated@@176) ($generated@@35 $generated@@174)))
 :pattern ( ($generated@@26 $generated@@174 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ) (!  (and (= (= ($generated@@108 $generated@@177) 0) (= $generated@@177 $generated@@50)) (=> (or (not (= ($generated@@108 $generated@@177) 0)) (not true)) (exists (($generated@@178 T@U) ) (! (< 0 ($generated@@79 $generated@@177 $generated@@178))
 :pattern ( ($generated@@79 $generated@@177 $generated@@178))
))))
 :pattern ( ($generated@@108 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@79 ($generated@@52 $generated@@179 $generated@@180) $generated@@181) (+ ($generated@@79 $generated@@179 $generated@@181) ($generated@@79 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@79 ($generated@@52 $generated@@179 $generated@@180) $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@42 $generated@@184) (and ($generated@@69 $generated@@182) ($generated@@39 $generated@@40 $generated@@182 ($generated@@41 $generated@@183) $generated@@184))) ($generated@@111 ($generated@@51 $generated@@182) $generated@@183 $generated@@184))
 :pattern ( ($generated@@111 ($generated@@51 $generated@@182) $generated@@183 $generated@@184))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@185 $generated@@195 $generated@@196 $generated@@197 ($generated@@191 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@200 $generated@@201) $generated@@198)
 :weight 0
)) (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@185 $generated@@202 $generated@@203 $generated@@204 ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@185 $generated@@211 $generated@@212 $generated@@213 ($generated@@191 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@185 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (= ($generated@@7 $generated@@186) 6)) (= ($generated@@7 $generated@@187) 7)) (forall (($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@189 $generated@@220 $generated@@221 ($generated@@192 $generated@@220 $generated@@221 $generated@@223 $generated@@224 $generated@@222) $generated@@224) $generated@@222)
 :weight 0
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@229 $generated@@230) (= ($generated@@189 $generated@@225 $generated@@226 ($generated@@192 $generated@@225 $generated@@226 $generated@@228 $generated@@229 $generated@@227) $generated@@230) ($generated@@189 $generated@@225 $generated@@226 $generated@@228 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@7 ($generated@@190 $generated@@231 $generated@@232)) 8))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@193 ($generated@@190 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@190 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@194 ($generated@@190 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@190 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@12 ($generated@@185 $generated@@186 $generated@@187 $generated@@8 ($generated@@188 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (or (not (= $generated@@241 $generated@@237)) (not true)) ($generated@@12 ($generated@@71 $generated@@8 ($generated@@189 $generated@@187 $generated@@77 ($generated@@189 $generated@@186 ($generated@@190 $generated@@187 $generated@@77) $generated@@238 $generated@@241) $generated@@239)))) $generated@@240))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187 $generated@@8 ($generated@@188 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@168 ($generated@@72 $generated@@40 $generated@@243)) ($generated@@169 $generated@@243))
 :pattern ( ($generated@@168 ($generated@@72 $generated@@40 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> ($generated@@64 $generated@@244 ($generated@@35 $generated@@245)) (and (= ($generated@@72 $generated@@34 ($generated@@71 $generated@@34 $generated@@244)) $generated@@244) ($generated@@33 $generated@@34 ($generated@@71 $generated@@34 $generated@@244) ($generated@@35 $generated@@245))))
 :pattern ( ($generated@@64 $generated@@244 ($generated@@35 $generated@@245)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> ($generated@@64 $generated@@247 ($generated@@41 $generated@@246)) (and (= ($generated@@72 $generated@@40 ($generated@@71 $generated@@40 $generated@@247)) $generated@@247) ($generated@@33 $generated@@40 ($generated@@71 $generated@@40 $generated@@247) ($generated@@41 $generated@@246))))
 :pattern ( ($generated@@64 $generated@@247 ($generated@@41 $generated@@246)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and ($generated@@42 $generated@@250) (and ($generated@@69 $generated@@248) ($generated@@39 $generated@@40 $generated@@248 ($generated@@41 $generated@@249) $generated@@250))) ($generated@@39 $generated@@40 ($generated@@49 $generated@@248) ($generated@@41 $generated@@249) $generated@@250))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@49 $generated@@248) ($generated@@41 $generated@@249) $generated@@250))
)))
(assert (= $generated@@32 ($generated@@60 $generated@@40 $generated@@32)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (= ($generated@@63 ($generated@@60 $generated@@77 $generated@@251) ($generated@@60 $generated@@40 $generated@@252)) ($generated@@60 $generated@@40 ($generated@@63 $generated@@251 $generated@@252)))
 :pattern ( ($generated@@63 ($generated@@60 $generated@@77 $generated@@251) ($generated@@60 $generated@@40 $generated@@252)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@T) ) (! (= ($generated@@72 $generated@@254 ($generated@@60 $generated@@254 $generated@@253)) ($generated@@60 $generated@@77 ($generated@@72 $generated@@254 $generated@@253)))
 :pattern ( ($generated@@72 $generated@@254 ($generated@@60 $generated@@254 $generated@@253)))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (< 0 ($generated@@79 $generated@@255 $generated@@257)) (< 0 ($generated@@79 ($generated@@53 $generated@@255 $generated@@256) $generated@@257)))
 :pattern ( ($generated@@53 $generated@@255 $generated@@256) ($generated@@79 $generated@@255 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (= (< 0 ($generated@@79 ($generated@@53 $generated@@258 $generated@@259) $generated@@260))  (or (= $generated@@260 $generated@@259) (< 0 ($generated@@79 $generated@@258 $generated@@260))))
 :pattern ( ($generated@@79 ($generated@@53 $generated@@258 $generated@@259) $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@261 ($generated@@35 $generated@@262) $generated@@263) (forall (($generated@@264 T@U) ) (!  (=> (< 0 ($generated@@79 $generated@@261 $generated@@264)) ($generated@@111 $generated@@264 $generated@@262 $generated@@263))
 :pattern ( ($generated@@79 $generated@@261 $generated@@264))
)))
 :pattern ( ($generated@@39 $generated@@34 $generated@@261 ($generated@@35 $generated@@262) $generated@@263))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ) (! ($generated@@39 $generated@@8 $generated@@266 $generated $generated@@265)
 :pattern ( ($generated@@39 $generated@@8 $generated@@266 $generated $generated@@265))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ) (!  (=> ($generated@@42 $generated@@270) (= ($generated@@39 $generated@@40 ($generated@@63 $generated@@268 $generated@@269) ($generated@@41 $generated@@267) $generated@@270)  (and ($generated@@111 $generated@@268 $generated@@267 $generated@@270) ($generated@@39 $generated@@40 $generated@@269 ($generated@@41 $generated@@267) $generated@@270))))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@63 $generated@@268 $generated@@269) ($generated@@41 $generated@@267) $generated@@270))
)))
(assert (forall (($generated@@271 T@U) ) (! ($generated@@33 $generated@@8 $generated@@271 $generated)
 :pattern ( ($generated@@33 $generated@@8 $generated@@271 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@284 true))
(let (($generated@@285  (=> (and (not (forall (($generated@@286 T@U) ) (!  (=> ($generated@@64 $generated@@286 $generated@@25) (=> (> ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@273) $generated@@286) 0) ($generated@@78 $generated@@272 $generated@@286)))
 :pattern ( ($generated@@78 $generated@@272 $generated@@286))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@273) $generated@@286))
))) (= (ControlFlow 0 7) 4)) $generated@@284)))
(let (($generated@@287  (=> (and (forall (($generated@@288 T@U) ) (!  (=> ($generated@@64 $generated@@288 $generated@@25) (=> (> ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@273) $generated@@288) 0) ($generated@@78 $generated@@272 $generated@@288)))
 :pattern ( ($generated@@78 $generated@@272 $generated@@288))
 :pattern ( ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@273) $generated@@288))
)) ($generated@@39 $generated@@40 $generated@@273 ($generated@@41 $generated@@25) $generated@@274)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@169 $generated@@273) ($generated@@169 $generated@@275))) (=> (< ($generated@@169 $generated@@273) ($generated@@169 $generated@@275)) (=> (and ($generated@@76 $generated@@273) (= (ControlFlow 0 5) 4)) $generated@@284))))))
(let (($generated@@289  (=> (>= 0 ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@273) $generated@@276)) (and (=> (= (ControlFlow 0 10) 5) $generated@@287) (=> (= (ControlFlow 0 10) 7) $generated@@285)))))
(let (($generated@@290  (=> (and (and (> ($generated@@79 ($generated@@26 $generated@@25 ($generated@@27 $generated@@80) $generated@@273) $generated@@276) 0) ($generated@@111 $generated@@272 $generated@@25 $generated@@274)) (and ($generated@@111 $generated@@276 $generated@@25 $generated@@274) ($generated@@81 $generated@@272 $generated@@276))) (and (=> (= (ControlFlow 0 9) 5) $generated@@287) (=> (= (ControlFlow 0 9) 7) $generated@@285)))))
(let (($generated@@291  (=> (and (and ($generated@@64 $generated@@276 $generated@@25) ($generated@@111 $generated@@276 $generated@@25 $generated@@274)) (and ($generated@@39 $generated@@40 $generated@@273 ($generated@@41 $generated@@25) $generated@@274) ($generated@@47 $generated@@25 $generated@@273))) (and (=> (= (ControlFlow 0 11) 9) $generated@@290) (=> (= (ControlFlow 0 11) 10) $generated@@289)))))
(let (($generated@@292  (=> (not (and ($generated@@64 $generated@@276 $generated@@25) ($generated@@111 $generated@@276 $generated@@25 $generated@@274))) (and (=> (= (ControlFlow 0 8) 5) $generated@@287) (=> (= (ControlFlow 0 8) 7) $generated@@285)))))
(let (($generated@@293  (=> (= $generated@@275 ($generated@@63 $generated@@277 $generated@@278)) (=> (and (and (and ($generated@@64 $generated@@277 $generated@@25) ($generated@@33 $generated@@40 $generated@@278 ($generated@@41 $generated@@25))) (and (= $generated@@279 $generated@@278) ($generated@@33 $generated@@40 $generated@@279 ($generated@@41 $generated@@25)))) (and (and (= $generated@@273 $generated@@279) (= $generated@@280 $generated@@277)) (and ($generated@@64 $generated@@280 $generated@@25) (= $generated@@272 $generated@@280)))) (and (=> (= (ControlFlow 0 12) 11) $generated@@291) (=> (= (ControlFlow 0 12) 8) $generated@@292))))))
(let (($generated@@294 true))
(let (($generated@@295  (=> (or (not (= $generated@@275 $generated@@32)) (not true)) (and (=> (= (ControlFlow 0 13) 12) $generated@@293) (=> (= (ControlFlow 0 13) 3) $generated@@294)))))
(let (($generated@@296 true))
(let (($generated@@297 true))
(let (($generated@@298  (=> (= $generated@@281 ($generated@@188 $generated@@282 $generated@@274 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 14) 1) $generated@@297) (=> (= (ControlFlow 0 14) 2) $generated@@296)) (=> (= (ControlFlow 0 14) 13) $generated@@295)))))
(let (($generated@@299  (=> (and (and (and ($generated@@42 $generated@@274) ($generated@@283 $generated@@274)) ($generated@@33 $generated@@40 $generated@@275 ($generated@@41 $generated@@25))) (and (= 2 $generated@@46) (= (ControlFlow 0 15) 14))) $generated@@298)))
$generated@@299)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
