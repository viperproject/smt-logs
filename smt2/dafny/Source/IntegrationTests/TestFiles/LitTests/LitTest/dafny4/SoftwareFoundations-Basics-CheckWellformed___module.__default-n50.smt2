(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Int)
(declare-fun $generated@@61 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T T@T) T@T)
(declare-fun $generated@@68 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@120 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) $generated@@1))
(assert (= ($generated@@4 $generated@@23) 3))
(assert ($generated@@22 $generated@@23 $generated@@21 $generated@@24))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@T) ) (! (= ($generated@@25 $generated@@27 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@27 $generated@@26))
)))
(assert (forall (($generated@@29 T@U) ) (! (= ($generated@@28 $generated@@29) (= ($generated@@20 $generated@@29) $generated@@1))
 :pattern ( ($generated@@28 $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ) (! (= ($generated@@30 $generated@@31) (= ($generated@@20 $generated@@31) $generated@@2))
 :pattern ( ($generated@@30 $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@T) ) (! (= ($generated@@33 $generated@@35 ($generated@@32 $generated@@35 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@32 $generated@@35 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ) (!  (=> ($generated@@28 $generated@@36) (= $generated@@36 $generated@@21))
 :pattern ( ($generated@@28 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ) (!  (=> ($generated@@30 $generated@@38) (exists (($generated@@39 T@U) ) (= $generated@@38 ($generated@@37 $generated@@39))))
 :pattern ( ($generated@@30 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@22 $generated@@23 ($generated@@37 $generated@@40) $generated@@24) ($generated@@22 $generated@@23 $generated@@40 $generated@@24))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@37 $generated@@40) $generated@@24))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@43 $generated@@45 $generated@@46 $generated@@47) (and (< 1 $generated@@41) (and (and ($generated@@22 $generated@@23 $generated@@45 $generated@@24) ($generated@@22 $generated@@23 $generated@@46 $generated@@24)) ($generated@@22 $generated@@23 $generated@@47 $generated@@24)))) ($generated@@22 $generated@@23 ($generated@@42 $generated@@44 $generated@@45 $generated@@46 $generated@@47) $generated@@24))
 :pattern ( ($generated@@42 $generated@@44 $generated@@45 $generated@@46 $generated@@47))
))))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@22 $generated@@23 $generated@@48 $generated@@24) (or ($generated@@28 $generated@@48) ($generated@@30 $generated@@48)))
 :pattern ( ($generated@@30 $generated@@48) ($generated@@22 $generated@@23 $generated@@48 $generated@@24))
 :pattern ( ($generated@@28 $generated@@48) ($generated@@22 $generated@@23 $generated@@48 $generated@@24))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@20 ($generated@@37 $generated@@49)) $generated@@2)
 :pattern ( ($generated@@37 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 ($generated@@37 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@37 $generated@@51))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@32 $generated@@53 ($generated@@33 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@33 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@42 ($generated@@54 $generated@@55) $generated@@56 $generated@@57 $generated@@58) ($generated@@42 $generated@@55 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@42 ($generated@@54 $generated@@55) $generated@@56 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (< ($generated@@59 $generated@@60) ($generated@@59 ($generated@@37 $generated@@60)))
 :pattern ( ($generated@@37 $generated@@60))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@61 $generated@@72 $generated@@73 $generated@@74 ($generated@@68 $generated@@72 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@78 $generated@@75) $generated@@77 $generated@@78) $generated@@75)
 :weight 0
)) (and (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (or (= $generated@@84 $generated@@86) (= ($generated@@61 $generated@@79 $generated@@80 $generated@@81 ($generated@@68 $generated@@79 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@82) $generated@@86 $generated@@87) ($generated@@61 $generated@@79 $generated@@80 $generated@@81 $generated@@83 $generated@@86 $generated@@87)))
 :weight 0
)) (forall (($generated@@88 T@T) ($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (or (= $generated@@94 $generated@@96) (= ($generated@@61 $generated@@88 $generated@@89 $generated@@90 ($generated@@68 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91) $generated@@95 $generated@@96) ($generated@@61 $generated@@88 $generated@@89 $generated@@90 $generated@@92 $generated@@95 $generated@@96)))
 :weight 0
)))) (= ($generated@@4 $generated@@62) 4)) (= ($generated@@4 $generated@@63) 5)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@65 $generated@@97 $generated@@98 ($generated@@69 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@99) $generated@@101) $generated@@99)
 :weight 0
))) (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@106 $generated@@107) (= ($generated@@65 $generated@@102 $generated@@103 ($generated@@69 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@104) $generated@@107) ($generated@@65 $generated@@102 $generated@@103 $generated@@105 $generated@@107)))
 :weight 0
))) (= ($generated@@4 $generated@@66) 6)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (= ($generated@@4 ($generated@@67 $generated@@108 $generated@@109)) 7))) (forall (($generated@@110 T@T) ($generated@@111 T@T) ) (! (= ($generated@@70 ($generated@@67 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@67 $generated@@110 $generated@@111))
))) (forall (($generated@@112 T@T) ($generated@@113 T@T) ) (! (= ($generated@@71 ($generated@@67 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@67 $generated@@112 $generated@@113))
))))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 Bool) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@9 ($generated@@61 $generated@@62 $generated@@63 $generated@@5 ($generated@@64 $generated@@114 $generated@@115 $generated@@116 $generated@@117) $generated@@118 $generated@@119))  (=> (and (or (not (= $generated@@118 $generated@@114)) (not true)) ($generated@@9 ($generated@@32 $generated@@5 ($generated@@65 $generated@@63 $generated@@66 ($generated@@65 $generated@@62 ($generated@@67 $generated@@63 $generated@@66) $generated@@115 $generated@@118) $generated@@116)))) $generated@@117))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63 $generated@@5 ($generated@@64 $generated@@114 $generated@@115 $generated@@116 $generated@@117) $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (and ($generated@@121 $generated@@123) ($generated@@22 $generated@@23 $generated@@122 $generated@@24)) ($generated@@120 $generated@@23 $generated@@122 $generated@@24 $generated@@123))
 :pattern ( ($generated@@120 $generated@@23 $generated@@122 $generated@@24 $generated@@123))
)))
(assert (= ($generated@@124 $generated@@24) $generated@@0))
(assert (= ($generated@@125 $generated@@24) $generated@@3))
(assert (= $generated@@21 ($generated@@25 $generated@@23 $generated@@21)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and ($generated@@121 $generated@@127) (and ($generated@@30 $generated@@126) ($generated@@120 $generated@@23 $generated@@126 $generated@@24 $generated@@127))) ($generated@@120 $generated@@23 ($generated@@50 $generated@@126) $generated@@24 $generated@@127))
 :pattern ( ($generated@@120 $generated@@23 ($generated@@50 $generated@@126) $generated@@24 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@37 ($generated@@25 $generated@@23 $generated@@128)) ($generated@@25 $generated@@23 ($generated@@37 $generated@@128)))
 :pattern ( ($generated@@37 ($generated@@25 $generated@@23 $generated@@128)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@33 $generated@@130 ($generated@@25 $generated@@130 $generated@@129)) ($generated@@25 $generated@@66 ($generated@@33 $generated@@130 $generated@@129)))
 :pattern ( ($generated@@33 $generated@@130 ($generated@@25 $generated@@130 $generated@@129)))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (or ($generated@@43 $generated@@132 $generated@@133 $generated@@134) (and (< 1 $generated@@41) (and (and ($generated@@22 $generated@@23 $generated@@132 $generated@@24) ($generated@@22 $generated@@23 $generated@@133 $generated@@24)) ($generated@@22 $generated@@23 $generated@@134 $generated@@24)))) (and (and (=> ($generated@@28 $generated@@134) (=> (not ($generated@@28 $generated@@132)) (let (($generated@@135 ($generated@@50 $generated@@132)))
($generated@@43 $generated@@135 $generated@@133 ($generated@@25 $generated@@23 ($generated@@37 ($generated@@25 $generated@@23 $generated@@21))))))) (=> (not ($generated@@28 $generated@@134)) (=> (not ($generated@@28 $generated@@133)) (let (($generated@@136 ($generated@@50 $generated@@133)))
($generated@@43 $generated@@132 $generated@@136 ($generated@@25 $generated@@23 $generated@@21)))))) (= ($generated@@42 ($generated@@54 $generated@@131) $generated@@132 $generated@@133 $generated@@134) (ite ($generated@@28 $generated@@134) (ite ($generated@@28 $generated@@132) $generated@@21 (let (($generated@@137 ($generated@@50 $generated@@132)))
($generated@@42 $generated@@131 $generated@@137 $generated@@133 ($generated@@25 $generated@@23 ($generated@@37 ($generated@@25 $generated@@23 $generated@@21)))))) (ite ($generated@@28 $generated@@133) ($generated@@37 ($generated@@25 $generated@@23 $generated@@21)) (let (($generated@@138 ($generated@@50 $generated@@133)))
($generated@@42 $generated@@131 $generated@@132 $generated@@138 ($generated@@25 $generated@@23 $generated@@21))))))))
 :pattern ( ($generated@@42 ($generated@@54 $generated@@131) $generated@@132 $generated@@133 $generated@@134))
))))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (or ($generated@@43 ($generated@@25 $generated@@23 $generated@@140) ($generated@@25 $generated@@23 $generated@@141) ($generated@@25 $generated@@23 $generated@@142)) (and (< 1 $generated@@41) (and (and ($generated@@22 $generated@@23 $generated@@140 $generated@@24) ($generated@@22 $generated@@23 $generated@@141 $generated@@24)) ($generated@@22 $generated@@23 $generated@@142 $generated@@24)))) (and (and (=> ($generated@@9 ($generated@@25 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@25 $generated@@23 $generated@@142))))) (=> (not ($generated@@9 ($generated@@25 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@25 $generated@@23 $generated@@140)))))) (let (($generated@@143 ($generated@@25 $generated@@23 ($generated@@50 ($generated@@25 $generated@@23 $generated@@140)))))
($generated@@43 $generated@@143 ($generated@@25 $generated@@23 $generated@@141) ($generated@@25 $generated@@23 ($generated@@37 ($generated@@25 $generated@@23 $generated@@21))))))) (=> (not ($generated@@9 ($generated@@25 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@25 $generated@@23 $generated@@142)))))) (=> (not ($generated@@9 ($generated@@25 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@25 $generated@@23 $generated@@141)))))) (let (($generated@@144 ($generated@@25 $generated@@23 ($generated@@50 ($generated@@25 $generated@@23 $generated@@141)))))
($generated@@43 ($generated@@25 $generated@@23 $generated@@140) $generated@@144 ($generated@@25 $generated@@23 $generated@@21)))))) (= ($generated@@42 ($generated@@54 $generated@@139) ($generated@@25 $generated@@23 $generated@@140) ($generated@@25 $generated@@23 $generated@@141) ($generated@@25 $generated@@23 $generated@@142)) (ite ($generated@@28 ($generated@@25 $generated@@23 $generated@@142)) (ite ($generated@@28 ($generated@@25 $generated@@23 $generated@@140)) $generated@@21 (let (($generated@@145 ($generated@@25 $generated@@23 ($generated@@50 ($generated@@25 $generated@@23 $generated@@140)))))
($generated@@25 $generated@@23 ($generated@@42 ($generated@@54 $generated@@139) $generated@@145 ($generated@@25 $generated@@23 $generated@@141) ($generated@@25 $generated@@23 ($generated@@37 ($generated@@25 $generated@@23 $generated@@21))))))) (ite ($generated@@28 ($generated@@25 $generated@@23 $generated@@141)) ($generated@@37 ($generated@@25 $generated@@23 $generated@@21)) (let (($generated@@146 ($generated@@25 $generated@@23 ($generated@@50 ($generated@@25 $generated@@23 $generated@@141)))))
($generated@@25 $generated@@23 ($generated@@42 ($generated@@54 $generated@@139) ($generated@@25 $generated@@23 $generated@@140) $generated@@146 ($generated@@25 $generated@@23 $generated@@21)))))))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@54 $generated@@139) ($generated@@25 $generated@@23 $generated@@140) ($generated@@25 $generated@@23 $generated@@141) ($generated@@25 $generated@@23 $generated@@142)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@163 true))
(let (($generated@@164  (=> (and (= $generated@@147 ($generated@@37 $generated@@148)) ($generated@@22 $generated@@23 $generated@@148 $generated@@24)) (=> (and (and (and (= $generated@@149 $generated@@148) ($generated@@22 $generated@@23 $generated@@149 $generated@@24)) (and (= $generated@@150 $generated@@149) ($generated@@120 $generated@@23 $generated@@150 $generated@@24 $generated@@151))) (and (and ($generated@@120 $generated@@23 $generated@@152 $generated@@24 $generated@@151) (= $generated@@153 ($generated@@25 $generated@@23 ($generated@@37 ($generated@@25 $generated@@23 $generated@@21))))) (and ($generated@@120 $generated@@23 $generated@@153 $generated@@24 $generated@@151) (= (ControlFlow 0 12) (- 0 11))))) (or (< ($generated@@59 $generated@@150) ($generated@@59 $generated@@147)) (and (= ($generated@@59 $generated@@150) ($generated@@59 $generated@@147)) (or (< ($generated@@59 $generated@@152) ($generated@@59 $generated@@152)) (and (= ($generated@@59 $generated@@152) ($generated@@59 $generated@@152)) (< ($generated@@59 $generated@@153) ($generated@@59 $generated@@154))))))))))
(let (($generated@@165  (=> (or (not (= $generated@@147 $generated@@21)) (not true)) (and (=> (= (ControlFlow 0 14) 12) $generated@@164) (=> (= (ControlFlow 0 14) 13) $generated@@163)))))
(let (($generated@@166 true))
(let (($generated@@167  (=> (= $generated@@154 $generated@@21) (and (=> (= (ControlFlow 0 15) 10) $generated@@166) (=> (= (ControlFlow 0 15) 14) $generated@@165)))))
(let (($generated@@168 true))
(let (($generated@@169  (=> (and (= $generated@@152 ($generated@@37 $generated@@155)) ($generated@@22 $generated@@23 $generated@@155 $generated@@24)) (=> (and (and (and (= $generated@@156 $generated@@155) ($generated@@22 $generated@@23 $generated@@156 $generated@@24)) (and (= $generated@@157 $generated@@156) ($generated@@120 $generated@@23 $generated@@147 $generated@@24 $generated@@151))) (and (and ($generated@@120 $generated@@23 $generated@@157 $generated@@24 $generated@@151) (= $generated@@158 ($generated@@25 $generated@@23 $generated@@21))) (and ($generated@@120 $generated@@23 $generated@@158 $generated@@24 $generated@@151) (= (ControlFlow 0 5) (- 0 4))))) (or (< ($generated@@59 $generated@@147) ($generated@@59 $generated@@147)) (and (= ($generated@@59 $generated@@147) ($generated@@59 $generated@@147)) (or (< ($generated@@59 $generated@@157) ($generated@@59 $generated@@152)) (and (= ($generated@@59 $generated@@157) ($generated@@59 $generated@@152)) (< ($generated@@59 $generated@@158) ($generated@@59 $generated@@154))))))))))
(let (($generated@@170  (=> (or (not (= $generated@@152 $generated@@21)) (not true)) (and (=> (= (ControlFlow 0 7) 5) $generated@@169) (=> (= (ControlFlow 0 7) 6) $generated@@168)))))
(let (($generated@@171 true))
(let (($generated@@172  (=> (and (= $generated@@154 ($generated@@37 $generated@@159)) ($generated@@22 $generated@@23 $generated@@159 $generated@@24)) (and (=> (= (ControlFlow 0 8) 3) $generated@@171) (=> (= (ControlFlow 0 8) 7) $generated@@170)))))
(let (($generated@@173 true))
(let (($generated@@174  (=> (or (not (= $generated@@154 $generated@@21)) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@172) (=> (= (ControlFlow 0 9) 2) $generated@@173)))))
(let (($generated@@175 true))
(let (($generated@@176  (=> (= $generated@@160 ($generated@@64 $generated@@161 $generated@@151 $generated false)) (and (and (=> (= (ControlFlow 0 16) 1) $generated@@175) (=> (= (ControlFlow 0 16) 15) $generated@@167)) (=> (= (ControlFlow 0 16) 9) $generated@@174)))))
(let (($generated@@177  (=> (and (and (and ($generated@@121 $generated@@151) ($generated@@162 $generated@@151)) ($generated@@22 $generated@@23 $generated@@147 $generated@@24)) (and (and ($generated@@22 $generated@@23 $generated@@152 $generated@@24) ($generated@@22 $generated@@23 $generated@@154 $generated@@24)) (and (= 1 $generated@@41) (= (ControlFlow 0 17) 16)))) $generated@@176)))
$generated@@177))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
