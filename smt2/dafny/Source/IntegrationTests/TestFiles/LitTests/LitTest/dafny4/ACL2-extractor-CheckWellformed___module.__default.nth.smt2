(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U Bool Int T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (T@U Int T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (Int) Int)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U Int T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@127 (T@U) Int)
(declare-fun $generated@@128 (T@U) Int)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@T T@T) T@T)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@28) 3))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ($generated@@42 T@U) ) (!  (=> (or ($generated@@26 $generated@@39 $generated@@41 $generated@@42) (and (< 3 $generated@@23) (and ($generated@@25 $generated@@40) ($generated@@27 $generated@@28 $generated@@42 ($generated@@29 $generated@@39))))) (and (and (and (=> (<= ($generated@@30 0) $generated@@41) ($generated@@31 $generated@@39 $generated@@42)) (=> (and (<= ($generated@@30 0) $generated@@41) (< $generated@@41 ($generated@@32 $generated@@39 ($generated@@33 $generated@@34) $generated@@42))) ($generated@@35 $generated@@39 $generated@@41 $generated@@42))) (=> (not (and (<= ($generated@@30 0) $generated@@41) (< $generated@@41 ($generated@@32 $generated@@39 ($generated@@33 $generated@@34) $generated@@42)))) ($generated@@36 $generated@@39))) (= ($generated@@24 $generated@@39 true $generated@@41 $generated@@42) (ite  (and (<= ($generated@@30 0) $generated@@41) (< $generated@@41 ($generated@@32 $generated@@39 ($generated@@33 $generated@@34) $generated@@42))) ($generated@@37 $generated@@39 ($generated@@33 $generated@@34) $generated@@41 $generated@@42) (let (($generated@@43 ($generated@@38 $generated@@39)))
$generated@@43)))))
 :pattern ( ($generated@@24 $generated@@39 true $generated@@41 $generated@@42) ($generated@@25 $generated@@40))
))))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 Bool) ($generated@@49 Int) ($generated@@50 T@U) ) (!  (=> (and (or ($generated@@26 $generated@@47 $generated@@49 $generated@@50) (and (< 3 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@50 ($generated@@29 $generated@@47)) ($generated@@45 $generated@@28 $generated@@50 ($generated@@29 $generated@@47) $generated@@46)))) ($generated@@25 $generated@@46)) ($generated@@44 ($generated@@24 $generated@@47 $generated@@48 $generated@@49 $generated@@50) $generated@@47 $generated@@46))
 :pattern ( ($generated@@44 ($generated@@24 $generated@@47 $generated@@48 $generated@@49 $generated@@50) $generated@@47 $generated@@46))
))))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@36 $generated@@52) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 true))))
 :pattern ( ($generated@@38 $generated@@52))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (or ($generated@@31 $generated@@55 ($generated@@51 $generated@@28 $generated@@57)) (and (< 1 $generated@@23) ($generated@@27 $generated@@28 $generated@@57 ($generated@@29 $generated@@55)))) (and (=> (not ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 ($generated@@53 ($generated@@51 $generated@@28 $generated@@57)))))) (let (($generated@@58 ($generated@@51 $generated@@28 ($generated@@54 ($generated@@51 $generated@@28 $generated@@57)))))
($generated@@31 $generated@@55 $generated@@58))) (= ($generated@@32 $generated@@55 ($generated@@33 $generated@@56) ($generated@@51 $generated@@28 $generated@@57)) (ite ($generated@@53 ($generated@@51 $generated@@28 $generated@@57)) 0 (let (($generated@@59 ($generated@@51 $generated@@28 ($generated@@54 ($generated@@51 $generated@@28 $generated@@57)))))
($generated@@30 (+ 1 ($generated@@32 $generated@@55 ($generated@@33 $generated@@56) $generated@@59))))))))
 :weight 3
 :pattern ( ($generated@@32 $generated@@55 ($generated@@33 $generated@@56) ($generated@@51 $generated@@28 $generated@@57)))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@32 $generated@@60 ($generated@@33 $generated@@61) $generated@@62) ($generated@@32 $generated@@60 $generated@@61 $generated@@62))
 :pattern ( ($generated@@32 $generated@@60 ($generated@@33 $generated@@61) $generated@@62))
)))
(assert (= ($generated@@63 $generated@@64) $generated@@3))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@25 $generated@@66) ($generated@@45 $generated@@28 $generated@@64 ($generated@@29 $generated@@65) $generated@@66))
 :pattern ( ($generated@@45 $generated@@28 $generated@@64 ($generated@@29 $generated@@65) $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (! ($generated@@27 $generated@@28 $generated@@64 ($generated@@29 $generated@@67))
 :pattern ( ($generated@@27 $generated@@28 $generated@@64 ($generated@@29 $generated@@67)))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 T@U) ) (!  (=> (or ($generated@@35 $generated@@69 $generated@@71 $generated@@72) (and (< 2 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@72 ($generated@@29 $generated@@69)) (and (<= ($generated@@30 0) $generated@@71) (< $generated@@71 ($generated@@32 $generated@@69 ($generated@@33 $generated@@34) $generated@@72)))))) (and (=> (or (not (= $generated@@71 ($generated@@30 0))) (not true)) ($generated@@35 $generated@@69 (- $generated@@71 1) ($generated@@54 $generated@@72))) (= ($generated@@37 $generated@@69 ($generated@@33 $generated@@70) $generated@@71 $generated@@72) (ite (= $generated@@71 ($generated@@30 0)) ($generated@@68 $generated@@72) ($generated@@37 $generated@@69 $generated@@70 (- $generated@@71 1) ($generated@@54 $generated@@72))))))
 :pattern ( ($generated@@37 $generated@@69 ($generated@@33 $generated@@70) $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@30 $generated@@73) $generated@@73)
 :pattern ( ($generated@@30 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@51 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@51 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@76 $generated@@79 $generated@@80) ($generated@@29 $generated@@78))  (and ($generated@@77 $generated@@79 $generated@@78) ($generated@@27 $generated@@28 $generated@@80 ($generated@@29 $generated@@78))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@76 $generated@@79 $generated@@80) ($generated@@29 $generated@@78)))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@53 $generated@@81) (= ($generated@@63 $generated@@81) $generated@@3))
 :pattern ( ($generated@@53 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@83) (= ($generated@@63 $generated@@83) $generated@@4))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@84 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@84 $generated@@87 $generated@@86))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 T@U) ) (!  (=> (or ($generated@@35 $generated@@88 ($generated@@30 $generated@@90) ($generated@@51 $generated@@28 $generated@@91)) (and (< 2 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@91 ($generated@@29 $generated@@88)) (and (<= ($generated@@30 0) ($generated@@30 $generated@@90)) (< $generated@@90 ($generated@@32 $generated@@88 ($generated@@33 $generated@@34) ($generated@@51 $generated@@28 $generated@@91))))))) (and (=> (or (not (= ($generated@@30 $generated@@90) ($generated@@30 0))) (not true)) ($generated@@35 $generated@@88 ($generated@@30 (- $generated@@90 1)) ($generated@@51 $generated@@28 ($generated@@54 ($generated@@51 $generated@@28 $generated@@91))))) (= ($generated@@37 $generated@@88 ($generated@@33 $generated@@89) ($generated@@30 $generated@@90) ($generated@@51 $generated@@28 $generated@@91)) (ite (= ($generated@@30 $generated@@90) ($generated@@30 0)) ($generated@@68 ($generated@@51 $generated@@28 $generated@@91)) ($generated@@37 $generated@@88 ($generated@@33 $generated@@89) ($generated@@30 (- $generated@@90 1)) ($generated@@51 $generated@@28 ($generated@@54 ($generated@@51 $generated@@28 $generated@@91))))))))
 :weight 3
 :pattern ( ($generated@@37 $generated@@88 ($generated@@33 $generated@@89) ($generated@@30 $generated@@90) ($generated@@51 $generated@@28 $generated@@91)))
))))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@82 $generated@@92) (exists (($generated@@93 T@U) ($generated@@94 T@U) ) (= $generated@@92 ($generated@@76 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@82 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@53 $generated@@95) (= $generated@@95 $generated@@64))
 :pattern ( ($generated@@53 $generated@@95))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@31 $generated@@96 $generated@@98) (and (< 1 $generated@@23) ($generated@@27 $generated@@28 $generated@@98 ($generated@@29 $generated@@96)))) (and (=> (not ($generated@@53 $generated@@98)) (let (($generated@@99 ($generated@@54 $generated@@98)))
($generated@@31 $generated@@96 $generated@@99))) (= ($generated@@32 $generated@@96 ($generated@@33 $generated@@97) $generated@@98) (ite ($generated@@53 $generated@@98) 0 (let (($generated@@100 ($generated@@54 $generated@@98)))
(+ 1 ($generated@@32 $generated@@96 $generated@@97 $generated@@100)))))))
 :pattern ( ($generated@@32 $generated@@96 ($generated@@33 $generated@@97) $generated@@98))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@44 ($generated@@85 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@45 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@44 ($generated@@85 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@22 ($generated@@29 $generated@@106)) $generated@@2) (= ($generated@@105 ($generated@@29 $generated@@106)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@106))
)))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@107 T@U) ($generated@@108 Bool) ($generated@@109 Int) ($generated@@110 T@U) ) (!  (=> (or ($generated@@26 $generated@@107 $generated@@109 $generated@@110) (and (< 3 $generated@@23) ($generated@@27 $generated@@28 $generated@@110 ($generated@@29 $generated@@107)))) ($generated@@77 ($generated@@24 $generated@@107 $generated@@108 $generated@@109 $generated@@110) $generated@@107))
 :pattern ( ($generated@@24 $generated@@107 $generated@@108 $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@112 ($generated@@29 $generated@@111)) (or ($generated@@53 $generated@@112) ($generated@@82 $generated@@112)))
 :pattern ( ($generated@@82 $generated@@112) ($generated@@27 $generated@@28 $generated@@112 ($generated@@29 $generated@@111)))
 :pattern ( ($generated@@53 $generated@@112) ($generated@@27 $generated@@28 $generated@@112 ($generated@@29 $generated@@111)))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@77 $generated@@113 $generated) (and (= ($generated@@85 $generated@@8 ($generated@@84 $generated@@8 $generated@@113)) $generated@@113) ($generated@@27 $generated@@8 ($generated@@84 $generated@@8 $generated@@113) $generated)))
 :pattern ( ($generated@@77 $generated@@113 $generated))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@77 ($generated@@85 $generated@@116 $generated@@114) $generated@@115) ($generated@@27 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@77 ($generated@@85 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@63 ($generated@@76 $generated@@117 $generated@@118)) $generated@@4)
 :pattern ( ($generated@@76 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@68 ($generated@@76 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@76 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@54 ($generated@@76 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@76 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@29 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@29 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@84 $generated@@126 ($generated@@85 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@85 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (< ($generated@@127 $generated@@129) ($generated@@128 ($generated@@76 $generated@@129 $generated@@130)))
 :pattern ( ($generated@@76 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@128 $generated@@132) ($generated@@128 ($generated@@76 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@76 $generated@@131 $generated@@132))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 Int) ($generated@@137 T@U) ) (!  (=> (and (or ($generated@@35 $generated@@134 $generated@@136 $generated@@137) (and (< 2 $generated@@23) (and (and ($generated@@27 $generated@@28 $generated@@137 ($generated@@29 $generated@@134)) ($generated@@45 $generated@@28 $generated@@137 ($generated@@29 $generated@@134) $generated@@133)) (and (<= ($generated@@30 0) $generated@@136) (< $generated@@136 ($generated@@32 $generated@@134 ($generated@@33 $generated@@34) $generated@@137)))))) ($generated@@25 $generated@@133)) ($generated@@44 ($generated@@37 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@134 $generated@@133))
 :pattern ( ($generated@@44 ($generated@@37 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@134 $generated@@133))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@25 $generated@@140) (and ($generated@@82 $generated@@138) ($generated@@45 $generated@@28 $generated@@138 ($generated@@29 $generated@@139) $generated@@140))) ($generated@@44 ($generated@@68 $generated@@138) $generated@@139 $generated@@140))
 :pattern ( ($generated@@44 ($generated@@68 $generated@@138) $generated@@139 $generated@@140))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@141 $generated@@152 $generated@@153 $generated@@154 ($generated@@148 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@157 $generated@@158) $generated@@155)
 :weight 0
)) (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@141 $generated@@159 $generated@@160 $generated@@161 ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@141 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@141 $generated@@168 $generated@@169 $generated@@170 ($generated@@148 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (= ($generated@@6 $generated@@142) 4)) (= ($generated@@6 $generated@@143) 5)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@145 $generated@@177 $generated@@178 ($generated@@149 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@181) $generated@@179)
 :weight 0
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@186 $generated@@187) (= ($generated@@145 $generated@@182 $generated@@183 ($generated@@149 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@184) $generated@@187) ($generated@@145 $generated@@182 $generated@@183 $generated@@185 $generated@@187)))
 :weight 0
))) (= ($generated@@6 $generated@@146) 6)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@6 ($generated@@147 $generated@@188 $generated@@189)) 7))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@150 ($generated@@147 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@147 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@151 ($generated@@147 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@147 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@11 ($generated@@141 $generated@@142 $generated@@143 $generated@@7 ($generated@@144 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))  (=> (and (or (not (= $generated@@198 $generated@@194)) (not true)) ($generated@@11 ($generated@@84 $generated@@7 ($generated@@145 $generated@@143 $generated@@146 ($generated@@145 $generated@@142 ($generated@@147 $generated@@143 $generated@@146) $generated@@195 $generated@@198) $generated@@196)))) $generated@@197))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143 $generated@@7 ($generated@@144 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))
)))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Int) ($generated@@203 T@U) ) (!  (=> (or ($generated@@26 $generated@@200 ($generated@@30 $generated@@202) ($generated@@51 $generated@@28 $generated@@203)) (and (< 3 $generated@@23) (and ($generated@@25 $generated@@201) ($generated@@27 $generated@@28 $generated@@203 ($generated@@29 $generated@@200))))) (and (and (and (=> (<= ($generated@@30 0) ($generated@@30 $generated@@202)) ($generated@@31 $generated@@200 ($generated@@51 $generated@@28 $generated@@203))) (=> (and (<= ($generated@@30 0) ($generated@@30 $generated@@202)) (< $generated@@202 ($generated@@32 $generated@@200 ($generated@@33 $generated@@34) ($generated@@51 $generated@@28 $generated@@203)))) ($generated@@35 $generated@@200 ($generated@@30 $generated@@202) ($generated@@51 $generated@@28 $generated@@203)))) (=> (not (and (<= ($generated@@30 0) ($generated@@30 $generated@@202)) (< $generated@@202 ($generated@@32 $generated@@200 ($generated@@33 $generated@@34) ($generated@@51 $generated@@28 $generated@@203))))) ($generated@@36 $generated@@200))) (= ($generated@@24 $generated@@200 true ($generated@@30 $generated@@202) ($generated@@51 $generated@@28 $generated@@203)) (ite  (and (<= ($generated@@30 0) ($generated@@30 $generated@@202)) (< $generated@@202 ($generated@@32 $generated@@200 ($generated@@33 $generated@@34) ($generated@@51 $generated@@28 $generated@@203)))) ($generated@@37 $generated@@200 ($generated@@33 $generated@@34) ($generated@@30 $generated@@202) ($generated@@51 $generated@@28 $generated@@203)) (let (($generated@@204 ($generated@@38 $generated@@200)))
$generated@@204)))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@200 true ($generated@@30 $generated@@202) ($generated@@51 $generated@@28 $generated@@203)) ($generated@@25 $generated@@201))
))))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@127 ($generated@@85 $generated@@28 $generated@@205)) ($generated@@128 $generated@@205))
 :pattern ( ($generated@@127 ($generated@@85 $generated@@28 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Int) ($generated@@209 T@U) ) (! (= ($generated@@37 $generated@@206 ($generated@@33 $generated@@207) $generated@@208 $generated@@209) ($generated@@37 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
 :pattern ( ($generated@@37 $generated@@206 ($generated@@33 $generated@@207) $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@77 $generated@@211 ($generated@@29 $generated@@210)) (and (= ($generated@@85 $generated@@28 ($generated@@84 $generated@@28 $generated@@211)) $generated@@211) ($generated@@27 $generated@@28 ($generated@@84 $generated@@28 $generated@@211) ($generated@@29 $generated@@210))))
 :pattern ( ($generated@@77 $generated@@211 ($generated@@29 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and ($generated@@25 $generated@@214) (and ($generated@@82 $generated@@212) ($generated@@45 $generated@@28 $generated@@212 ($generated@@29 $generated@@213) $generated@@214))) ($generated@@45 $generated@@28 ($generated@@54 $generated@@212) ($generated@@29 $generated@@213) $generated@@214))
 :pattern ( ($generated@@45 $generated@@28 ($generated@@54 $generated@@212) ($generated@@29 $generated@@213) $generated@@214))
)))
(assert (= $generated@@64 ($generated@@51 $generated@@28 $generated@@64)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (! (= ($generated@@76 ($generated@@51 $generated@@146 $generated@@215) ($generated@@51 $generated@@28 $generated@@216)) ($generated@@51 $generated@@28 ($generated@@76 $generated@@215 $generated@@216)))
 :pattern ( ($generated@@76 ($generated@@51 $generated@@146 $generated@@215) ($generated@@51 $generated@@28 $generated@@216)))
)))
(assert (forall (($generated@@217 Int) ) (! (= ($generated@@85 $generated@@8 ($generated@@12 ($generated@@30 $generated@@217))) ($generated@@51 $generated@@146 ($generated@@85 $generated@@8 ($generated@@12 $generated@@217))))
 :pattern ( ($generated@@85 $generated@@8 ($generated@@12 ($generated@@30 $generated@@217))))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@T) ) (! (= ($generated@@85 $generated@@219 ($generated@@51 $generated@@219 $generated@@218)) ($generated@@51 $generated@@146 ($generated@@85 $generated@@219 $generated@@218)))
 :pattern ( ($generated@@85 $generated@@219 ($generated@@51 $generated@@219 $generated@@218)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (or ($generated@@31 $generated@@220 $generated@@222) (and (< 1 $generated@@23) ($generated@@27 $generated@@28 $generated@@222 ($generated@@29 $generated@@220)))) (<= ($generated@@30 0) ($generated@@32 $generated@@220 $generated@@221 $generated@@222)))
 :pattern ( ($generated@@32 $generated@@220 $generated@@221 $generated@@222))
))))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 T@U) ) (!  (=> (or ($generated@@35 $generated@@223 $generated@@225 $generated@@226) (and (< 2 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@226 ($generated@@29 $generated@@223)) (and (<= ($generated@@30 0) $generated@@225) (< $generated@@225 ($generated@@32 $generated@@223 ($generated@@33 $generated@@34) $generated@@226)))))) ($generated@@77 ($generated@@37 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@223))
 :pattern ( ($generated@@37 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! ($generated@@45 $generated@@8 $generated@@228 $generated $generated@@227)
 :pattern ( ($generated@@45 $generated@@8 $generated@@228 $generated $generated@@227))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@25 $generated@@232) (= ($generated@@45 $generated@@28 ($generated@@76 $generated@@230 $generated@@231) ($generated@@29 $generated@@229) $generated@@232)  (and ($generated@@44 $generated@@230 $generated@@229 $generated@@232) ($generated@@45 $generated@@28 $generated@@231 ($generated@@29 $generated@@229) $generated@@232))))
 :pattern ( ($generated@@45 $generated@@28 ($generated@@76 $generated@@230 $generated@@231) ($generated@@29 $generated@@229) $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ) (! ($generated@@27 $generated@@8 $generated@@233 $generated)
 :pattern ( ($generated@@27 $generated@@8 $generated@@233 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@242  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@11 ($generated@@51 $generated@@7 ($generated@@10 true))))))
(let (($generated@@243  (=> (and (not (and ($generated@@77 $generated@@234 $generated@@235) ($generated@@44 $generated@@234 $generated@@235 $generated@@236))) (= (ControlFlow 0 8) 6)) $generated@@242)))
(let (($generated@@244  (=> (and (and ($generated@@77 $generated@@234 $generated@@235) ($generated@@44 $generated@@234 $generated@@235 $generated@@236)) (= (ControlFlow 0 7) 6)) $generated@@242)))
(let (($generated@@245  (=> (not (and (<= ($generated@@30 0) $generated@@237) (< $generated@@237 ($generated@@32 $generated@@235 ($generated@@33 $generated@@34) $generated@@238)))) (and (=> (= (ControlFlow 0 9) 7) $generated@@244) (=> (= (ControlFlow 0 9) 8) $generated@@243)))))
(let (($generated@@246  (=> (and (and (<= ($generated@@30 0) $generated@@237) (< $generated@@237 ($generated@@32 $generated@@235 ($generated@@33 $generated@@34) $generated@@238))) (and ($generated@@45 $generated@@8 ($generated@@12 $generated@@237) $generated $generated@@236) ($generated@@45 $generated@@28 $generated@@238 ($generated@@29 $generated@@235) $generated@@236))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@30 0) $generated@@237)) (=> (= (ControlFlow 0 3) (- 0 2)) (< $generated@@237 ($generated@@32 $generated@@235 ($generated@@33 ($generated@@33 $generated@@34)) $generated@@238)))))))
(let (($generated@@247  (=> (< $generated@@237 ($generated@@30 0)) (and (=> (= (ControlFlow 0 11) 3) $generated@@246) (=> (= (ControlFlow 0 11) 9) $generated@@245)))))
(let (($generated@@248  (=> (<= ($generated@@30 0) $generated@@237) (=> (and ($generated@@45 $generated@@28 $generated@@238 ($generated@@29 $generated@@235) $generated@@236) ($generated@@31 $generated@@235 $generated@@238)) (and (=> (= (ControlFlow 0 10) 3) $generated@@246) (=> (= (ControlFlow 0 10) 9) $generated@@245))))))
(let (($generated@@249 true))
(let (($generated@@250  (=> (= $generated@@239 ($generated@@144 $generated@@240 $generated@@236 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@249) (=> (= (ControlFlow 0 12) 10) $generated@@248)) (=> (= (ControlFlow 0 12) 11) $generated@@247)))))
(let (($generated@@251  (=> (and (and (and ($generated@@25 $generated@@236) ($generated@@241 $generated@@236)) ($generated@@27 $generated@@28 $generated@@238 ($generated@@29 $generated@@235))) (and (= 3 $generated@@23) (= (ControlFlow 0 13) 12))) $generated@@250)))
$generated@@251)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
