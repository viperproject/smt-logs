(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@23 (Int) Int)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@39 () Int)
(declare-fun $generated@@40 (Bool T@U) Int)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (Int) Bool)
(declare-fun $generated@@56 (Int) Bool)
(declare-fun $generated@@57 (Int Int) Int)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@85 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@89 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@95 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ) (!  (not ($generated@@20 $generated@@21 $generated@@22))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22))
)))
(assert (forall (($generated@@24 Int) ) (! (= ($generated@@23 $generated@@24) $generated@@24)
 :pattern ( ($generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@T) ) (! (= ($generated@@25 $generated@@27 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@27 $generated@@26))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@T) ) (! (= ($generated@@29 $generated@@31 ($generated@@28 $generated@@31 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@28 $generated@@31 $generated@@30))
)))
(assert (= ($generated@@3 $generated@@33) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@37)) (forall (($generated@@38 T@U) ) (!  (=> ($generated@@20 $generated@@36 $generated@@38) ($generated@@35 $generated@@38 $generated@@37))
 :pattern ( ($generated@@20 $generated@@36 $generated@@38))
)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 ($generated@@34 $generated@@37)))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (or ($generated@@42 $generated@@47) (and (< 1 $generated@@39) (and (and ($generated@@41 $generated@@46) ($generated@@32 $generated@@33 $generated@@47 ($generated@@34 $generated))) (not ($generated@@43 $generated@@47 $generated@@21))))) (and ($generated@@44 $generated@@47) (= ($generated@@40 true $generated@@47) (let (($generated@@48 ($generated@@45 $generated@@47)))
$generated@@48))))
 :pattern ( ($generated@@40 true $generated@@47) ($generated@@41 $generated@@46))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@49 ($generated@@29 $generated@@54 $generated@@51) $generated@@52 $generated@@53) ($generated@@50 $generated@@54 $generated@@51 $generated@@52 $generated@@53))
 :pattern ( ($generated@@49 ($generated@@29 $generated@@54 $generated@@51) $generated@@52 $generated@@53))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@58 Int) ) (!  (=> (or ($generated@@56 $generated@@58) (< 0 $generated@@39)) (= ($generated@@55 $generated@@58)  (and (<= ($generated@@23 2) $generated@@58) (forall (($generated@@59 Int) ) (!  (=> (and (<= ($generated@@23 2) $generated@@59) (< $generated@@59 $generated@@58)) (or (not (= ($generated@@57 $generated@@58 $generated@@59) 0)) (not true)))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59))
)))))
 :pattern ( ($generated@@55 $generated@@58))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@43 $generated@@60 $generated@@61) (= $generated@@60 $generated@@61))
 :pattern ( ($generated@@43 $generated@@60 $generated@@61))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@42 ($generated@@25 $generated@@33 $generated@@63)) (and (< 1 $generated@@39) (and (and ($generated@@41 $generated@@62) ($generated@@32 $generated@@33 $generated@@63 ($generated@@34 $generated))) (not ($generated@@43 $generated@@63 $generated@@21))))) (and ($generated@@44 ($generated@@25 $generated@@33 $generated@@63)) (= ($generated@@40 true ($generated@@25 $generated@@33 $generated@@63)) (let (($generated@@64 ($generated@@45 ($generated@@25 $generated@@33 $generated@@63))))
$generated@@64))))
 :weight 3
 :pattern ( ($generated@@40 true ($generated@@25 $generated@@33 $generated@@63)) ($generated@@41 $generated@@62))
))))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@35 $generated@@65 $generated) (and (= ($generated@@29 $generated@@5 ($generated@@28 $generated@@5 $generated@@65)) $generated@@65) ($generated@@32 $generated@@5 ($generated@@28 $generated@@5 $generated@@65) $generated)))
 :pattern ( ($generated@@35 $generated@@65 $generated))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@35 ($generated@@29 $generated@@68 $generated@@66) $generated@@67) ($generated@@32 $generated@@68 $generated@@66 $generated@@67))
 :pattern ( ($generated@@35 ($generated@@29 $generated@@68 $generated@@66) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@44 $generated@@69) (and ($generated@@20 $generated@@69 ($generated@@29 $generated@@5 ($generated@@9 ($generated@@45 $generated@@69)))) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@20 $generated@@69 ($generated@@29 $generated@@5 $generated@@70)) (<= ($generated@@10 $generated@@70) ($generated@@45 $generated@@69)))
 :pattern ( ($generated@@20 $generated@@69 ($generated@@29 $generated@@5 $generated@@70)))
))))
 :pattern ( ($generated@@45 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@50 $generated@@33 $generated@@71 ($generated@@34 $generated@@72) $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@20 $generated@@71 $generated@@74) ($generated@@49 $generated@@74 $generated@@72 $generated@@73))
 :pattern ( ($generated@@20 $generated@@71 $generated@@74))
)))
 :pattern ( ($generated@@50 $generated@@33 $generated@@71 ($generated@@34 $generated@@72) $generated@@73))
)))
(assert  (=> (<= 1 $generated@@39) (forall (($generated@@75 Bool) ($generated@@76 T@U) ) (!  (=> (or ($generated@@42 $generated@@76) (and (< 1 $generated@@39) (and ($generated@@32 $generated@@33 $generated@@76 ($generated@@34 $generated)) (not ($generated@@43 $generated@@76 $generated@@21))))) (and ($generated@@20 $generated@@76 ($generated@@29 $generated@@5 ($generated@@9 ($generated@@40 $generated@@75 $generated@@76)))) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@20 $generated@@76 ($generated@@29 $generated@@5 $generated@@77)) (<= ($generated@@10 $generated@@77) ($generated@@40 $generated@@75 $generated@@76)))
 :pattern ( ($generated@@20 $generated@@76 ($generated@@29 $generated@@5 $generated@@77)))
))))
 :pattern ( ($generated@@40 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 ($generated@@34 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@34 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@19 ($generated@@34 $generated@@80)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@28 $generated@@82 ($generated@@29 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@29 $generated@@82 $generated@@81))
)))
(assert  (=> (<= 0 $generated@@39) (forall (($generated@@83 Int) ) (!  (=> (or ($generated@@56 ($generated@@23 $generated@@83)) (< 0 $generated@@39)) (= ($generated@@55 ($generated@@23 $generated@@83))  (and (<= ($generated@@23 2) ($generated@@23 $generated@@83)) (forall (($generated@@84 Int) ) (!  (=> (and (<= ($generated@@23 2) $generated@@84) (< $generated@@84 $generated@@83)) (or (not (= ($generated@@57 $generated@@83 $generated@@84) 0)) (not true)))
 :pattern ( ($generated@@57 $generated@@83 $generated@@84))
)))))
 :weight 3
 :pattern ( ($generated@@55 ($generated@@23 $generated@@83)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@85 $generated@@96 $generated@@97 $generated@@98 ($generated@@92 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@101 $generated@@102) $generated@@99)
 :weight 0
)) (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@108 $generated@@110) (= ($generated@@85 $generated@@103 $generated@@104 $generated@@105 ($generated@@92 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@85 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@85 $generated@@112 $generated@@113 $generated@@114 ($generated@@92 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@85 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)))) (= ($generated@@3 $generated@@86) 4)) (= ($generated@@3 $generated@@87) 5)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@89 $generated@@121 $generated@@122 ($generated@@93 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@123) $generated@@125) $generated@@123)
 :weight 0
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@89 $generated@@126 $generated@@127 ($generated@@93 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@89 $generated@@126 $generated@@127 $generated@@129 $generated@@131)))
 :weight 0
))) (= ($generated@@3 $generated@@90) 6)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (= ($generated@@3 ($generated@@91 $generated@@132 $generated@@133)) 7))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@91 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (! (= ($generated@@95 ($generated@@91 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@91 $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 Bool) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@8 ($generated@@85 $generated@@86 $generated@@87 $generated@@4 ($generated@@88 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))  (=> (and (or (not (= $generated@@142 $generated@@138)) (not true)) ($generated@@8 ($generated@@28 $generated@@4 ($generated@@89 $generated@@87 $generated@@90 ($generated@@89 $generated@@86 ($generated@@91 $generated@@87 $generated@@90) $generated@@139 $generated@@142) $generated@@140)))) $generated@@141))
 :pattern ( ($generated@@85 $generated@@86 $generated@@87 $generated@@4 ($generated@@88 $generated@@138 $generated@@139 $generated@@140 $generated@@141) $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 Int) ($generated@@145 Int) ) (! (= ($generated@@57 $generated@@144 $generated@@145) (mod $generated@@144 $generated@@145))
 :pattern ( ($generated@@57 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@35 $generated@@146 ($generated@@34 $generated@@147)) (and (= ($generated@@29 $generated@@33 ($generated@@28 $generated@@33 $generated@@146)) $generated@@146) ($generated@@32 $generated@@33 ($generated@@28 $generated@@33 $generated@@146) ($generated@@34 $generated@@147))))
 :pattern ( ($generated@@35 $generated@@146 ($generated@@34 $generated@@147)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@43 $generated@@148 $generated@@149) (forall (($generated@@150 T@U) ) (! (= ($generated@@20 $generated@@148 $generated@@150) ($generated@@20 $generated@@149 $generated@@150))
 :pattern ( ($generated@@20 $generated@@148 $generated@@150))
 :pattern ( ($generated@@20 $generated@@149 $generated@@150))
)))
 :pattern ( ($generated@@43 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 Int) ) (! (= ($generated@@29 $generated@@5 ($generated@@9 ($generated@@23 $generated@@151))) ($generated@@25 $generated@@90 ($generated@@29 $generated@@5 ($generated@@9 $generated@@151))))
 :pattern ( ($generated@@29 $generated@@5 ($generated@@9 ($generated@@23 $generated@@151))))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@29 $generated@@153 ($generated@@25 $generated@@153 $generated@@152)) ($generated@@25 $generated@@90 ($generated@@29 $generated@@153 $generated@@152)))
 :pattern ( ($generated@@29 $generated@@153 ($generated@@25 $generated@@153 $generated@@152)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! ($generated@@50 $generated@@5 $generated@@155 $generated $generated@@154)
 :pattern ( ($generated@@50 $generated@@5 $generated@@155 $generated $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@32 $generated@@5 $generated@@156 $generated)
 :pattern ( ($generated@@32 $generated@@5 $generated@@156 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@157 () T@U)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () Bool)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@165  (=> (and (and (and (=> (not ($generated@@43 $generated@@157 $generated@@21)) ($generated@@42 $generated@@157)) (= $generated@@158 (ite ($generated@@43 $generated@@157 $generated@@21) 0 (+ ($generated@@40 $generated@@159 $generated@@157) 1)))) (and ($generated@@41 $generated@@160) ($generated@@161 $generated@@160))) (and (and (forall (($generated@@166 Int) ) (!  (=> (<= $generated@@158 $generated@@166) ($generated@@56 $generated@@166))
 :pattern ( ($generated@@55 $generated@@166))
)) (exists (($generated@@167 Int) ) (!  (and (<= $generated@@158 $generated@@167) ($generated@@55 $generated@@167))
 :pattern ( ($generated@@55 $generated@@167))
))) (and (= $generated@@162 $generated@@160) (= (ControlFlow 0 2) (- 0 1))))) (exists (($generated@@168 Int) ) (!  (and ($generated@@55 $generated@@168) (not ($generated@@20 $generated@@157 ($generated@@29 $generated@@5 ($generated@@9 $generated@@168)))))
 :pattern ( ($generated@@20 $generated@@157 ($generated@@29 $generated@@5 ($generated@@9 $generated@@168))))
 :pattern ( ($generated@@55 $generated@@168))
)))))
(let (($generated@@169  (=> (and (not ($generated@@43 $generated@@157 $generated@@21)) ($generated@@50 $generated@@33 $generated@@157 ($generated@@34 $generated) $generated@@162)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@43 $generated@@157 $generated@@21))) (=> (not ($generated@@43 $generated@@157 $generated@@21)) (=> (and ($generated@@42 $generated@@157) (= (ControlFlow 0 4) 2)) $generated@@165))))))
(let (($generated@@170  (=> (and ($generated@@43 $generated@@157 $generated@@21) (= (ControlFlow 0 3) 2)) $generated@@165)))
(let (($generated@@171  (=> (= $generated@@163 ($generated@@88 $generated@@164 $generated@@162 $generated@@2 false)) (and (=> (= (ControlFlow 0 6) 3) $generated@@170) (=> (= (ControlFlow 0 6) 4) $generated@@169)))))
(let (($generated@@172  (=> (and ($generated@@41 $generated@@162) ($generated@@161 $generated@@162)) (=> (and (and ($generated@@32 $generated@@33 $generated@@157 ($generated@@34 $generated)) ($generated@@50 $generated@@33 $generated@@157 ($generated@@34 $generated) $generated@@162)) (and (= 7 $generated@@39) (= (ControlFlow 0 7) 6))) $generated@@171))))
$generated@@172))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
