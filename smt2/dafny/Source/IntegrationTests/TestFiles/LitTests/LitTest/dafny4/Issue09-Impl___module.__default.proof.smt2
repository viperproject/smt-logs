(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U Int) T@U)
(declare-fun $generated@@32 (T@U Int) T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 () Int)
(declare-fun $generated@@52 (T@U Bool T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 (Int) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U Int) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@60 () Bool)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@U) Int)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@22 $generated@@23) $generated@@24)  (or (= $generated@@23 $generated@@24) ($generated@@20 $generated@@22 $generated@@24)))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@22 $generated@@23) $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@20 $generated@@25 $generated@@26))
 :pattern ( ($generated@@20 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@27 $generated@@25) 0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (and (<= 0 $generated@@31) (<= $generated@@31 ($generated@@27 $generated@@29))) (= ($generated@@28 ($generated@@21 $generated@@29 $generated@@30) $generated@@31) ($generated@@21 ($generated@@28 $generated@@29 $generated@@31) $generated@@30)))
 :pattern ( ($generated@@28 ($generated@@21 $generated@@29 $generated@@30) $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (= $generated@@36 ($generated@@27 $generated@@34)) (and (= ($generated@@32 ($generated@@33 $generated@@34 $generated@@35) $generated@@36) $generated@@34) (= ($generated@@28 ($generated@@33 $generated@@34 $generated@@35) $generated@@36) $generated@@35)))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@34 $generated@@35) $generated@@36))
 :pattern ( ($generated@@28 ($generated@@33 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 Int) ) (!  (=> (= $generated@@38 0) (= ($generated@@28 $generated@@37 $generated@@38) $generated@@37))
 :pattern ( ($generated@@28 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (= ($generated@@3 $generated@@45) 3))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (and ($generated@@44 $generated@@45 $generated@@48 ($generated@@46 $generated@@50)) ($generated@@47 $generated@@49 $generated@@50)) ($generated@@44 $generated@@45 ($generated@@21 $generated@@48 $generated@@49) ($generated@@46 $generated@@50)))
 :pattern ( ($generated@@44 $generated@@45 ($generated@@21 $generated@@48 $generated@@49) ($generated@@46 $generated@@50)))
)))
(assert  (=> (<= 1 $generated@@51) (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@54 ($generated@@41 $generated@@45 $generated@@62)) (and (< 1 $generated@@51) ($generated@@44 $generated@@45 $generated@@62 ($generated@@46 $generated)))) (and (=> (or (not (= ($generated@@27 ($generated@@41 $generated@@45 $generated@@62)) ($generated@@39 0))) (not true)) (and ($generated@@55 ($generated@@10 ($generated@@56 $generated@@5 ($generated@@57 ($generated@@41 $generated@@45 $generated@@62) ($generated@@39 0))))) ($generated@@54 ($generated@@41 $generated@@45 ($generated@@28 ($generated@@41 $generated@@45 $generated@@62) ($generated@@39 1)))))) (= ($generated@@52 ($generated@@53 $generated@@61) true ($generated@@41 $generated@@45 $generated@@62)) (ite (= ($generated@@27 ($generated@@41 $generated@@45 $generated@@62)) ($generated@@39 0)) $generated@@25 ($generated@@33 ($generated@@21 $generated@@25 ($generated@@58 $generated@@5 ($generated@@9 ($generated@@59 ($generated@@10 ($generated@@56 $generated@@5 ($generated@@57 ($generated@@41 $generated@@45 $generated@@62) ($generated@@39 0)))))))) ($generated@@52 ($generated@@53 $generated@@61) $generated@@60 ($generated@@41 $generated@@45 ($generated@@28 ($generated@@41 $generated@@45 $generated@@62) ($generated@@39 1)))))))))
 :weight 3
 :pattern ( ($generated@@52 ($generated@@53 $generated@@61) true ($generated@@41 $generated@@45 $generated@@62)))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 Int) ($generated@@65 Int) ) (!  (=> (and (and (<= 0 $generated@@65) (< $generated@@65 $generated@@64)) (< $generated@@65 ($generated@@27 $generated@@63))) (= ($generated@@57 ($generated@@32 $generated@@63 $generated@@64) $generated@@65) ($generated@@57 $generated@@63 $generated@@65)))
 :weight 25
 :pattern ( ($generated@@57 ($generated@@32 $generated@@63 $generated@@64) $generated@@65))
 :pattern ( ($generated@@57 $generated@@63 $generated@@65) ($generated@@32 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (and (<= 0 $generated@@67) (<= $generated@@67 ($generated@@27 $generated@@66))) (= ($generated@@27 ($generated@@28 $generated@@66 $generated@@67)) (- ($generated@@27 $generated@@66) $generated@@67)))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@66 $generated@@67)))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@68 $generated@@69 $generated@@70)  (and (= ($generated@@27 $generated@@69) ($generated@@27 $generated@@70)) (forall (($generated@@71 Int) ) (!  (=> (and (<= 0 $generated@@71) (< $generated@@71 ($generated@@27 $generated@@69))) (= ($generated@@57 $generated@@69 $generated@@71) ($generated@@57 $generated@@70 $generated@@71)))
 :pattern ( ($generated@@57 $generated@@69 $generated@@71))
 :pattern ( ($generated@@57 $generated@@70 $generated@@71))
))))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@58 $generated@@73 ($generated@@56 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@56 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 Int) ) (!  (=> (and (<= 0 $generated@@76) (< $generated@@76 ($generated@@27 $generated@@75))) (< ($generated@@74 ($generated@@32 $generated@@75 $generated@@76)) ($generated@@74 $generated@@75)))
 :pattern ( ($generated@@74 ($generated@@32 $generated@@75 $generated@@76)))
)))
(assert  (=> (<= 1 $generated@@51) (forall (($generated@@77 T@U) ($generated@@78 Bool) ($generated@@79 T@U) ) (!  (=> (or ($generated@@54 $generated@@79) (and (< 1 $generated@@51) ($generated@@44 $generated@@45 $generated@@79 ($generated@@46 $generated)))) (and (and (= ($generated@@27 ($generated@@52 $generated@@77 $generated@@60 $generated@@79)) ($generated@@27 $generated@@79)) (forall (($generated@@80 Int) ) (!  (=> (and (<= ($generated@@39 0) $generated@@80) (< $generated@@80 ($generated@@27 $generated@@79))) (= ($generated@@10 ($generated@@56 $generated@@5 ($generated@@57 ($generated@@52 $generated@@77 $generated@@60 $generated@@79) $generated@@80))) ($generated@@59 ($generated@@10 ($generated@@56 $generated@@5 ($generated@@57 $generated@@79 $generated@@80))))))
 :pattern ( ($generated@@56 $generated@@5 ($generated@@57 $generated@@79 $generated@@80)))
 :pattern ( ($generated@@56 $generated@@5 ($generated@@57 ($generated@@52 $generated@@77 $generated@@60 $generated@@79) $generated@@80)))
))) ($generated@@44 $generated@@45 ($generated@@52 $generated@@77 $generated@@78 $generated@@79) ($generated@@46 $generated))))
 :pattern ( ($generated@@52 $generated@@77 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 Int) ) (!  (=> (and (< 0 $generated@@82) (<= $generated@@82 ($generated@@27 $generated@@81))) (< ($generated@@74 ($generated@@28 $generated@@81 $generated@@82)) ($generated@@74 $generated@@81)))
 :pattern ( ($generated@@74 ($generated@@28 $generated@@81 $generated@@82)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@27 ($generated@@21 $generated@@83 $generated@@84)) (+ 1 ($generated@@27 $generated@@83)))
 :pattern ( ($generated@@21 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@85 ($generated@@58 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@86 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@85 ($generated@@58 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 Int) ) (!  (=> (and (and (<= 0 $generated@@92) (<= 0 $generated@@93)) (< $generated@@93 (- ($generated@@27 $generated@@91) $generated@@92))) (= ($generated@@57 ($generated@@28 $generated@@91 $generated@@92) $generated@@93) ($generated@@57 $generated@@91 (+ $generated@@93 $generated@@92))))
 :weight 25
 :pattern ( ($generated@@57 ($generated@@28 $generated@@91 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@27 ($generated@@33 $generated@@94 $generated@@95)) (+ ($generated@@27 $generated@@94) ($generated@@27 $generated@@95)))
 :pattern ( ($generated@@27 ($generated@@33 $generated@@94 $generated@@95)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ($generated@@98 T@U) ) (!  (and (=> (= $generated@@97 ($generated@@27 $generated@@96)) (= ($generated@@57 ($generated@@21 $generated@@96 $generated@@98) $generated@@97) $generated@@98)) (=> (or (not (= $generated@@97 ($generated@@27 $generated@@96))) (not true)) (= ($generated@@57 ($generated@@21 $generated@@96 $generated@@98) $generated@@97) ($generated@@57 $generated@@96 $generated@@97))))
 :pattern ( ($generated@@57 ($generated@@21 $generated@@96 $generated@@98) $generated@@97))
)))
(assert  (=> (<= 1 $generated@@51) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@54 $generated@@100) (and (< 1 $generated@@51) ($generated@@44 $generated@@45 $generated@@100 ($generated@@46 $generated)))) (and (=> (or (not (= ($generated@@27 $generated@@100) ($generated@@39 0))) (not true)) (and ($generated@@55 ($generated@@10 ($generated@@56 $generated@@5 ($generated@@57 $generated@@100 ($generated@@39 0))))) ($generated@@54 ($generated@@28 $generated@@100 ($generated@@39 1))))) (= ($generated@@52 ($generated@@53 $generated@@99) true $generated@@100) (ite (= ($generated@@27 $generated@@100) ($generated@@39 0)) $generated@@25 ($generated@@33 ($generated@@21 $generated@@25 ($generated@@58 $generated@@5 ($generated@@9 ($generated@@59 ($generated@@10 ($generated@@56 $generated@@5 ($generated@@57 $generated@@100 ($generated@@39 0)))))))) ($generated@@52 $generated@@99 $generated@@60 ($generated@@28 $generated@@100 ($generated@@39 1))))))))
 :pattern ( ($generated@@52 ($generated@@53 $generated@@99) true $generated@@100))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 Bool) ($generated@@103 T@U) ) (! (= ($generated@@52 ($generated@@53 $generated@@101) $generated@@102 $generated@@103) ($generated@@52 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@52 ($generated@@53 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@20 ($generated@@33 $generated@@104 $generated@@105) $generated@@106)  (or ($generated@@20 $generated@@104 $generated@@106) ($generated@@20 $generated@@105 $generated@@106)))
 :pattern ( ($generated@@20 ($generated@@33 $generated@@104 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 Int) ($generated@@109 T@U) ) (! (= ($generated@@20 ($generated@@32 $generated@@107 $generated@@108) $generated@@109) (exists (($generated@@110 Int) ) (!  (and (and (and (<= 0 $generated@@110) (< $generated@@110 $generated@@108)) (< $generated@@110 ($generated@@27 $generated@@107))) (= ($generated@@57 $generated@@107 $generated@@110) $generated@@109))
 :pattern ( ($generated@@57 $generated@@107 $generated@@110))
)))
 :pattern ( ($generated@@20 ($generated@@32 $generated@@107 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@20 $generated@@111 $generated@@112) (exists (($generated@@113 Int) ) (!  (and (and (<= 0 $generated@@113) (< $generated@@113 ($generated@@27 $generated@@111))) (= ($generated@@57 $generated@@111 $generated@@113) $generated@@112))
 :pattern ( ($generated@@57 $generated@@111 $generated@@113))
)))
 :pattern ( ($generated@@20 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@68 $generated@@114 $generated@@115) (= $generated@@114 $generated@@115))
 :pattern ( ($generated@@68 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 Int) ) (!  (=> (and (<= 0 $generated@@117) (<= $generated@@117 ($generated@@27 $generated@@116))) (= ($generated@@27 ($generated@@32 $generated@@116 $generated@@117)) $generated@@117))
 :pattern ( ($generated@@27 ($generated@@32 $generated@@116 $generated@@117)))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@47 $generated@@118 $generated) (and (= ($generated@@58 $generated@@5 ($generated@@56 $generated@@5 $generated@@118)) $generated@@118) ($generated@@44 $generated@@5 ($generated@@56 $generated@@5 $generated@@118) $generated)))
 :pattern ( ($generated@@47 $generated@@118 $generated))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@47 ($generated@@58 $generated@@121 $generated@@119) $generated@@120) ($generated@@44 $generated@@121 $generated@@119 $generated@@120))
 :pattern ( ($generated@@47 ($generated@@58 $generated@@121 $generated@@119) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (<= 0 ($generated@@27 $generated@@122))
 :pattern ( ($generated@@27 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 Int) ($generated@@125 Int) ) (!  (=> (and (and (<= 0 $generated@@124) (< $generated@@124 $generated@@125)) (<= $generated@@125 ($generated@@27 $generated@@123))) (< ($generated@@74 ($generated@@33 ($generated@@32 $generated@@123 $generated@@124) ($generated@@28 $generated@@123 $generated@@125))) ($generated@@74 $generated@@123)))
 :pattern ( ($generated@@74 ($generated@@33 ($generated@@32 $generated@@123 $generated@@124) ($generated@@28 $generated@@123 $generated@@125))))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@86 $generated@@45 $generated@@126 ($generated@@46 $generated@@127) $generated@@128) (forall (($generated@@129 Int) ) (!  (=> (and (<= 0 $generated@@129) (< $generated@@129 ($generated@@27 $generated@@126))) ($generated@@85 ($generated@@57 $generated@@126 $generated@@129) $generated@@127 $generated@@128))
 :pattern ( ($generated@@57 $generated@@126 $generated@@129))
)))
 :pattern ( ($generated@@86 $generated@@45 $generated@@126 ($generated@@46 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@46 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@46 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@19 ($generated@@46 $generated@@132)) $generated@@1)
 :pattern ( ($generated@@46 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@56 $generated@@134 ($generated@@58 $generated@@134 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@58 $generated@@134 $generated@@133))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@135 $generated@@146 $generated@@147 $generated@@148 ($generated@@142 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@135 $generated@@153 $generated@@154 $generated@@155 ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@135 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@135 $generated@@162 $generated@@163 $generated@@164 ($generated@@142 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))) (= ($generated@@3 $generated@@136) 4)) (= ($generated@@3 $generated@@137) 5)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@139 $generated@@171 $generated@@172 ($generated@@143 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@173) $generated@@175) $generated@@173)
 :weight 0
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@180 $generated@@181) (= ($generated@@139 $generated@@176 $generated@@177 ($generated@@143 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@181) ($generated@@139 $generated@@176 $generated@@177 $generated@@179 $generated@@181)))
 :weight 0
))) (= ($generated@@3 $generated@@140) 6)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@3 ($generated@@141 $generated@@182 $generated@@183)) 7))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@144 ($generated@@141 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@141 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@145 ($generated@@141 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@141 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@8 ($generated@@135 $generated@@136 $generated@@137 $generated@@4 ($generated@@138 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@8 ($generated@@56 $generated@@4 ($generated@@139 $generated@@137 $generated@@140 ($generated@@139 $generated@@136 ($generated@@141 $generated@@137 $generated@@140) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137 $generated@@4 ($generated@@138 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (and (= ($generated@@194 ($generated@@21 $generated@@196 $generated@@197)) $generated@@196) (= ($generated@@195 ($generated@@21 $generated@@196 $generated@@197)) $generated@@197))
 :pattern ( ($generated@@21 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 Int) ($generated@@200 T@U) ) (! (= ($generated@@20 ($generated@@28 $generated@@198 $generated@@199) $generated@@200) (exists (($generated@@201 Int) ) (!  (and (and (and (<= 0 $generated@@199) (<= $generated@@199 $generated@@201)) (< $generated@@201 ($generated@@27 $generated@@198))) (= ($generated@@57 $generated@@198 $generated@@201) $generated@@200))
 :pattern ( ($generated@@57 $generated@@198 $generated@@201))
)))
 :pattern ( ($generated@@20 ($generated@@28 $generated@@198 $generated@@199) $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@47 $generated@@202 ($generated@@46 $generated@@203)) (and (= ($generated@@58 $generated@@45 ($generated@@56 $generated@@45 $generated@@202)) $generated@@202) ($generated@@44 $generated@@45 ($generated@@56 $generated@@45 $generated@@202) ($generated@@46 $generated@@203))))
 :pattern ( ($generated@@47 $generated@@202 ($generated@@46 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 Int) ($generated@@206 Int) ) (!  (=> (and (and (<= 0 $generated@@205) (<= $generated@@205 $generated@@206)) (< $generated@@206 ($generated@@27 $generated@@204))) (= ($generated@@57 ($generated@@28 $generated@@204 $generated@@205) (- $generated@@206 $generated@@205)) ($generated@@57 $generated@@204 $generated@@206)))
 :weight 25
 :pattern ( ($generated@@57 $generated@@204 $generated@@206) ($generated@@28 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 Int) ($generated@@209 Int) ) (!  (=> (and (and (<= 0 $generated@@208) (<= 0 $generated@@209)) (<= (+ $generated@@208 $generated@@209) ($generated@@27 $generated@@207))) (= ($generated@@28 ($generated@@28 $generated@@207 $generated@@208) $generated@@209) ($generated@@28 $generated@@207 (+ $generated@@208 $generated@@209))))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@207 $generated@@208) $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Int) ) (!  (and (=> (< $generated@@212 ($generated@@27 $generated@@210)) (= ($generated@@57 ($generated@@33 $generated@@210 $generated@@211) $generated@@212) ($generated@@57 $generated@@210 $generated@@212))) (=> (<= ($generated@@27 $generated@@210) $generated@@212) (= ($generated@@57 ($generated@@33 $generated@@210 $generated@@211) $generated@@212) ($generated@@57 $generated@@211 (- $generated@@212 ($generated@@27 $generated@@210))))))
 :pattern ( ($generated@@57 ($generated@@33 $generated@@210 $generated@@211) $generated@@212))
)))
(assert (forall (($generated@@213 Int) ) (! (= ($generated@@58 $generated@@5 ($generated@@9 ($generated@@39 $generated@@213))) ($generated@@41 $generated@@140 ($generated@@58 $generated@@5 ($generated@@9 $generated@@213))))
 :pattern ( ($generated@@58 $generated@@5 ($generated@@9 ($generated@@39 $generated@@213))))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@T) ) (! (= ($generated@@58 $generated@@215 ($generated@@41 $generated@@215 $generated@@214)) ($generated@@41 $generated@@140 ($generated@@58 $generated@@215 $generated@@214)))
 :pattern ( ($generated@@58 $generated@@215 ($generated@@41 $generated@@215 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ) (!  (=> (= ($generated@@27 $generated@@216) 0) (= $generated@@216 $generated@@25))
 :pattern ( ($generated@@27 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 Int) ) (!  (=> (= $generated@@218 0) (= ($generated@@32 $generated@@217 $generated@@218) $generated@@25))
 :pattern ( ($generated@@32 $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! ($generated@@86 $generated@@5 $generated@@220 $generated $generated@@219)
 :pattern ( ($generated@@86 $generated@@5 $generated@@220 $generated $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@221 ($generated@@46 $generated@@222)) (forall (($generated@@223 Int) ) (!  (=> (and (<= 0 $generated@@223) (< $generated@@223 ($generated@@27 $generated@@221))) ($generated@@47 ($generated@@57 $generated@@221 $generated@@223) $generated@@222))
 :pattern ( ($generated@@57 $generated@@221 $generated@@223))
)))
 :pattern ( ($generated@@44 $generated@@45 $generated@@221 ($generated@@46 $generated@@222)))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@44 $generated@@5 $generated@@224 $generated)
 :pattern ( ($generated@@44 $generated@@5 $generated@@224 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 (T@U) Bool)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@236  (=> (= $generated@@225 ($generated@@138 $generated@@226 $generated@@227 $generated@@2 false)) (=> (and ($generated@@228 $generated@@229) ($generated@@230 $generated@@229)) (=> (and (and (= $generated@@227 $generated@@229) (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (and (and (and ($generated@@44 $generated@@45 $generated@@237 ($generated@@46 $generated)) ($generated@@44 $generated@@45 $generated@@238 ($generated@@46 $generated))) ($generated@@68 ($generated@@52 ($generated@@53 $generated@@231) $generated@@60 $generated@@237) ($generated@@52 ($generated@@53 $generated@@231) $generated@@60 $generated@@238))) (or (< ($generated@@74 $generated@@237) ($generated@@74 $generated@@232)) (and (= ($generated@@74 $generated@@237) ($generated@@74 $generated@@232)) (< ($generated@@74 $generated@@238) ($generated@@74 $generated@@233))))) (forall (($generated@@239 T@U) ) (! (= ($generated@@20 $generated@@237 ($generated@@58 $generated@@5 $generated@@239)) ($generated@@20 $generated@@238 ($generated@@58 $generated@@5 $generated@@239)))
 :pattern ( ($generated@@20 $generated@@238 ($generated@@58 $generated@@5 $generated@@239)))
 :pattern ( ($generated@@20 $generated@@237 ($generated@@58 $generated@@5 $generated@@239)))
)))
 :pattern ( ($generated@@52 ($generated@@53 $generated@@231) $generated@@60 $generated@@238) ($generated@@52 ($generated@@53 $generated@@231) $generated@@60 $generated@@237))
))) (and ($generated@@228 $generated@@234) ($generated@@230 $generated@@234))) (=> (and (and (and (= $generated@@229 $generated@@234) $generated@@60) (and ($generated@@228 $generated@@235) ($generated@@230 $generated@@235))) (and (and (forall (($generated@@240 Int) ($generated@@241 Int) ) (!  (and ($generated@@55 $generated@@240) ($generated@@55 $generated@@241))
 :pattern ( ($generated@@59 $generated@@240) ($generated@@59 $generated@@241))
)) (forall (($generated@@242 Int) ($generated@@243 Int) ) (!  (=> (= ($generated@@59 $generated@@242) ($generated@@59 $generated@@243)) (= $generated@@242 $generated@@243))
 :pattern ( ($generated@@59 $generated@@242) ($generated@@59 $generated@@243))
))) (and (= $generated@@234 $generated@@235) (= (ControlFlow 0 2) (- 0 1))))) (forall (($generated@@244 Int) ) (! (= ($generated@@20 $generated@@232 ($generated@@58 $generated@@5 ($generated@@9 $generated@@244))) ($generated@@20 $generated@@233 ($generated@@58 $generated@@5 ($generated@@9 $generated@@244))))
 :pattern ( ($generated@@20 $generated@@233 ($generated@@58 $generated@@5 ($generated@@9 $generated@@244))))
 :pattern ( ($generated@@20 $generated@@232 ($generated@@58 $generated@@5 ($generated@@9 $generated@@244))))
))))))))
(let (($generated@@245  (=> (and (and ($generated@@228 $generated@@227) ($generated@@230 $generated@@227)) (and ($generated@@44 $generated@@45 $generated@@232 ($generated@@46 $generated)) ($generated@@86 $generated@@45 $generated@@232 ($generated@@46 $generated) $generated@@227))) (=> (and (and (and ($generated@@44 $generated@@45 $generated@@233 ($generated@@46 $generated)) ($generated@@86 $generated@@45 $generated@@233 ($generated@@46 $generated) $generated@@227)) (= 2 $generated@@51)) (and ($generated@@68 ($generated@@52 ($generated@@53 ($generated@@53 $generated@@231)) $generated@@60 $generated@@232) ($generated@@52 ($generated@@53 ($generated@@53 $generated@@231)) $generated@@60 $generated@@233)) (= (ControlFlow 0 3) 2))) $generated@@236))))
$generated@@245)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
