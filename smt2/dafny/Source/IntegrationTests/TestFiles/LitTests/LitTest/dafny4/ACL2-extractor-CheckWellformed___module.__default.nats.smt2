(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U Int) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (Int) Bool)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Int)
(declare-fun $generated@@98 (T@U) Int)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@T T@T) T@T)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@116 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (or ($generated@@27 $generated@@33) (and (< 1 $generated@@24) (<= ($generated@@28 0) $generated@@33))) (and (=> (or (not (= $generated@@33 ($generated@@28 0))) (not true)) ($generated@@27 (- $generated@@33 1))) (= ($generated@@25 ($generated@@26 $generated@@32) $generated@@33) (ite (= $generated@@33 ($generated@@28 0)) $generated@@29 ($generated@@30 ($generated@@31 $generated@@10 ($generated@@14 (- $generated@@33 1))) ($generated@@25 $generated@@32 (- $generated@@33 1)))))))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@32) $generated@@33))
))))
(assert (= ($generated@@34 $generated) $generated@@0))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! ($generated@@35 $generated@@10 $generated@@37 $generated@@36 $generated@@38)
 :pattern ( ($generated@@35 $generated@@10 $generated@@37 $generated@@36 $generated@@38))
)))
(assert (= ($generated@@39 $generated@@29) $generated@@4))
(assert (= ($generated@@8 $generated@@40) 3))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> ($generated@@42 $generated@@44) ($generated@@35 $generated@@40 $generated@@29 ($generated@@41 $generated@@43) $generated@@44))
 :pattern ( ($generated@@35 $generated@@40 $generated@@29 ($generated@@41 $generated@@43) $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (! ($generated@@45 $generated@@40 $generated@@29 ($generated@@41 $generated@@46))
 :pattern ( ($generated@@45 $generated@@40 $generated@@29 ($generated@@41 $generated@@46)))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@28 $generated@@47) $generated@@47)
 :pattern ( ($generated@@28 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@45 $generated@@40 ($generated@@30 $generated@@53 $generated@@54) ($generated@@41 $generated@@52))  (and ($generated@@51 $generated@@53 $generated@@52) ($generated@@45 $generated@@40 $generated@@54 ($generated@@41 $generated@@52))))
 :pattern ( ($generated@@45 $generated@@40 ($generated@@30 $generated@@53 $generated@@54) ($generated@@41 $generated@@52)))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@39 $generated@@56) $generated@@4))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@39 $generated@@58) $generated@@5))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@31 $generated@@61 ($generated@@59 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@59 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@57 $generated@@62) (exists (($generated@@63 T@U) ($generated@@64 T@U) ) (= $generated@@62 ($generated@@30 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@57 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@55 $generated@@65) (= $generated@@65 $generated@@29))
 :pattern ( ($generated@@55 $generated@@65))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@66 T@U) ($generated@@67 Int) ) (!  (=> (or ($generated@@27 ($generated@@28 $generated@@67)) (and (< 1 $generated@@24) (<= ($generated@@28 0) $generated@@67))) (and (=> (or (not (= ($generated@@28 $generated@@67) ($generated@@28 0))) (not true)) ($generated@@27 ($generated@@28 (- $generated@@67 1)))) (= ($generated@@25 ($generated@@26 $generated@@66) ($generated@@28 $generated@@67)) (ite (= ($generated@@28 $generated@@67) ($generated@@28 0)) $generated@@29 ($generated@@30 ($generated@@31 $generated@@10 ($generated@@14 ($generated@@28 (- $generated@@67 1)))) ($generated@@48 $generated@@40 ($generated@@25 ($generated@@26 $generated@@66) ($generated@@28 (- $generated@@67 1)))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@26 $generated@@66) ($generated@@28 $generated@@67)))
))))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@45 $generated@@10 $generated@@68 $generated@@36) (<= ($generated@@28 0) ($generated@@15 $generated@@68)))
 :pattern ( ($generated@@45 $generated@@10 $generated@@68 $generated@@36))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@31 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@35 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@69 ($generated@@31 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (and (= ($generated@@34 ($generated@@41 $generated@@75)) $generated@@3) (= ($generated@@74 ($generated@@41 $generated@@75)) $generated@@7))
 :pattern ( ($generated@@41 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@51 $generated@@76 $generated@@36) (and (= ($generated@@31 $generated@@10 ($generated@@59 $generated@@10 $generated@@76)) $generated@@76) ($generated@@45 $generated@@10 ($generated@@59 $generated@@10 $generated@@76) $generated@@36)))
 :pattern ( ($generated@@51 $generated@@76 $generated@@36))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@77 T@U) ($generated@@78 Int) ) (!  (=> (or ($generated@@27 $generated@@78) (and (< 1 $generated@@24) (<= ($generated@@28 0) $generated@@78))) ($generated@@45 $generated@@40 ($generated@@25 $generated@@77 $generated@@78) ($generated@@41 $generated)))
 :pattern ( ($generated@@25 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> ($generated@@45 $generated@@40 $generated@@80 ($generated@@41 $generated@@79)) (or ($generated@@55 $generated@@80) ($generated@@57 $generated@@80)))
 :pattern ( ($generated@@57 $generated@@80) ($generated@@45 $generated@@40 $generated@@80 ($generated@@41 $generated@@79)))
 :pattern ( ($generated@@55 $generated@@80) ($generated@@45 $generated@@40 $generated@@80 ($generated@@41 $generated@@79)))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@51 $generated@@81 $generated) (and (= ($generated@@31 $generated@@10 ($generated@@59 $generated@@10 $generated@@81)) $generated@@81) ($generated@@45 $generated@@10 ($generated@@59 $generated@@10 $generated@@81) $generated)))
 :pattern ( ($generated@@51 $generated@@81 $generated))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@51 ($generated@@31 $generated@@84 $generated@@82) $generated@@83) ($generated@@45 $generated@@84 $generated@@82 $generated@@83))
 :pattern ( ($generated@@51 ($generated@@31 $generated@@84 $generated@@82) $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@39 ($generated@@30 $generated@@85 $generated@@86)) $generated@@5)
 :pattern ( ($generated@@30 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 ($generated@@30 $generated@@88 $generated@@89)) $generated@@88)
 :pattern ( ($generated@@30 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@90 ($generated@@30 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@30 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@93 ($generated@@41 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@41 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@59 $generated@@96 ($generated@@31 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@31 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (< ($generated@@97 $generated@@99) ($generated@@98 ($generated@@30 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@30 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (< ($generated@@98 $generated@@102) ($generated@@98 ($generated@@30 $generated@@101 $generated@@102)))
 :pattern ( ($generated@@30 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 Int) ) (! (= ($generated@@25 ($generated@@26 $generated@@103) $generated@@104) ($generated@@25 $generated@@103 $generated@@104))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and ($generated@@42 $generated@@107) (and ($generated@@57 $generated@@105) ($generated@@35 $generated@@40 $generated@@105 ($generated@@41 $generated@@106) $generated@@107))) ($generated@@69 ($generated@@87 $generated@@105) $generated@@106 $generated@@107))
 :pattern ( ($generated@@69 ($generated@@87 $generated@@105) $generated@@106 $generated@@107))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@108 $generated@@119 $generated@@120 $generated@@121 ($generated@@115 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@124 $generated@@125) $generated@@122)
 :weight 0
)) (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@108 $generated@@126 $generated@@127 $generated@@128 ($generated@@115 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@108 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)) (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@108 $generated@@135 $generated@@136 $generated@@137 ($generated@@115 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)))) (= ($generated@@8 $generated@@109) 4)) (= ($generated@@8 $generated@@110) 5)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@112 $generated@@144 $generated@@145 ($generated@@116 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@148) $generated@@146)
 :weight 0
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@153 $generated@@154) (= ($generated@@112 $generated@@149 $generated@@150 ($generated@@116 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@151) $generated@@154) ($generated@@112 $generated@@149 $generated@@150 $generated@@152 $generated@@154)))
 :weight 0
))) (= ($generated@@8 $generated@@113) 6)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (= ($generated@@8 ($generated@@114 $generated@@155 $generated@@156)) 7))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@117 ($generated@@114 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@114 $generated@@157 $generated@@158))
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (! (= ($generated@@118 ($generated@@114 $generated@@159 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@114 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Bool) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@13 ($generated@@108 $generated@@109 $generated@@110 $generated@@9 ($generated@@111 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))  (=> (and (or (not (= $generated@@165 $generated@@161)) (not true)) ($generated@@13 ($generated@@59 $generated@@9 ($generated@@112 $generated@@110 $generated@@113 ($generated@@112 $generated@@109 ($generated@@114 $generated@@110 $generated@@113) $generated@@162 $generated@@165) $generated@@163)))) $generated@@164))
 :pattern ( ($generated@@108 $generated@@109 $generated@@110 $generated@@9 ($generated@@111 $generated@@161 $generated@@162 $generated@@163 $generated@@164) $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@97 ($generated@@31 $generated@@40 $generated@@167)) ($generated@@98 $generated@@167))
 :pattern ( ($generated@@97 ($generated@@31 $generated@@40 $generated@@167)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@51 $generated@@169 ($generated@@41 $generated@@168)) (and (= ($generated@@31 $generated@@40 ($generated@@59 $generated@@40 $generated@@169)) $generated@@169) ($generated@@45 $generated@@40 ($generated@@59 $generated@@40 $generated@@169) ($generated@@41 $generated@@168))))
 :pattern ( ($generated@@51 $generated@@169 ($generated@@41 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@42 $generated@@172) (and ($generated@@57 $generated@@170) ($generated@@35 $generated@@40 $generated@@170 ($generated@@41 $generated@@171) $generated@@172))) ($generated@@35 $generated@@40 ($generated@@90 $generated@@170) ($generated@@41 $generated@@171) $generated@@172))
 :pattern ( ($generated@@35 $generated@@40 ($generated@@90 $generated@@170) ($generated@@41 $generated@@171) $generated@@172))
)))
(assert (= ($generated@@34 $generated@@36) $generated@@2))
(assert (= ($generated@@74 $generated@@36) $generated@@6))
(assert (= $generated@@29 ($generated@@48 $generated@@40 $generated@@29)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@30 ($generated@@48 $generated@@113 $generated@@173) ($generated@@48 $generated@@40 $generated@@174)) ($generated@@48 $generated@@40 ($generated@@30 $generated@@173 $generated@@174)))
 :pattern ( ($generated@@30 ($generated@@48 $generated@@113 $generated@@173) ($generated@@48 $generated@@40 $generated@@174)))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@31 $generated@@10 ($generated@@14 ($generated@@28 $generated@@175))) ($generated@@48 $generated@@113 ($generated@@31 $generated@@10 ($generated@@14 $generated@@175))))
 :pattern ( ($generated@@31 $generated@@10 ($generated@@14 ($generated@@28 $generated@@175))))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@31 $generated@@177 ($generated@@48 $generated@@177 $generated@@176)) ($generated@@48 $generated@@113 ($generated@@31 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@31 $generated@@177 ($generated@@48 $generated@@177 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@35 $generated@@10 $generated@@179 $generated $generated@@178)
 :pattern ( ($generated@@35 $generated@@10 $generated@@179 $generated $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@42 $generated@@183) (= ($generated@@35 $generated@@40 ($generated@@30 $generated@@181 $generated@@182) ($generated@@41 $generated@@180) $generated@@183)  (and ($generated@@69 $generated@@181 $generated@@180 $generated@@183) ($generated@@35 $generated@@40 $generated@@182 ($generated@@41 $generated@@180) $generated@@183))))
 :pattern ( ($generated@@35 $generated@@40 ($generated@@30 $generated@@181 $generated@@182) ($generated@@41 $generated@@180) $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@45 $generated@@10 $generated@@184 $generated)
 :pattern ( ($generated@@45 $generated@@10 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@191  (=> (or (not (= $generated@@185 ($generated@@28 0))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@45 $generated@@10 ($generated@@14 (- $generated@@185 1)) $generated@@36)) (=> ($generated@@45 $generated@@10 ($generated@@14 (- $generated@@185 1)) $generated@@36) (=> (and (= $generated@@186 (- $generated@@185 1)) ($generated@@35 $generated@@10 ($generated@@14 $generated@@186) $generated@@36 $generated@@187)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@185) (= $generated@@186 $generated@@185))) (=> (or (<= 0 $generated@@185) (= $generated@@186 $generated@@185)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@186 $generated@@185))))))))))
(let (($generated@@192 true))
(let (($generated@@193 true))
(let (($generated@@194  (=> (= $generated@@188 ($generated@@111 $generated@@189 $generated@@187 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@193) (=> (= (ControlFlow 0 7) 2) $generated@@192)) (=> (= (ControlFlow 0 7) 4) $generated@@191)))))
(let (($generated@@195  (=> (and (and (and ($generated@@42 $generated@@187) ($generated@@190 $generated@@187)) (<= ($generated@@28 0) $generated@@185)) (and (= 1 $generated@@24) (= (ControlFlow 0 8) 7))) $generated@@194)))
$generated@@195))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
