(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@131 (T@U) Int)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@195 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@30) 3))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@28 $generated@@43) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@43 $generated@@31))) (and (=> (not ($generated@@32 $generated@@43)) (and (=> ($generated@@33 $generated@@43) (let (($generated@@44 ($generated@@34 $generated@@43)))
 (and ($generated@@28 $generated@@44) (let (($generated@@45 ($generated@@26 $generated@@42 $generated@@44)))
($generated@@35 $generated@@45 $generated@@45))))) (=> (not ($generated@@33 $generated@@43)) (let (($generated@@46 ($generated@@36 $generated@@43)))
 (and ($generated@@28 $generated@@46) (let (($generated@@47 ($generated@@26 $generated@@42 $generated@@46)))
 (and ($generated@@35 $generated@@47 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))) ($generated@@35 $generated@@47 ($generated@@40 ($generated@@27 $generated@@41) $generated@@47 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))))))))))) (= ($generated@@26 ($generated@@27 $generated@@42) $generated@@43) (ite ($generated@@32 $generated@@43) $generated@@39 (ite ($generated@@33 $generated@@43) (let (($generated@@48 ($generated@@34 $generated@@43)))
(let (($generated@@49 ($generated@@26 $generated@@42 $generated@@48)))
($generated@@40 ($generated@@27 $generated@@41) $generated@@49 $generated@@49))) (let (($generated@@50 ($generated@@36 $generated@@43)))
(let (($generated@@51 ($generated@@26 $generated@@42 $generated@@50)))
($generated@@40 ($generated@@27 $generated@@41) $generated@@51 ($generated@@40 ($generated@@27 $generated@@41) $generated@@51 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@42) $generated@@43))
))))
(assert (= ($generated@@52 $generated@@39) $generated@@2))
(assert (= ($generated@@52 $generated@@53) $generated@@4))
(assert ($generated@@29 $generated@@30 $generated@@39 $generated@@54))
(assert ($generated@@29 $generated@@30 $generated@@53 $generated@@31))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@55 $generated@@56 $generated@@57) (= $generated@@56 $generated@@57))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@37 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@37 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@52 $generated@@61) $generated@@2))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@52 $generated@@63) $generated@@3))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@32 $generated@@64) (= ($generated@@52 $generated@@64) $generated@@4))
 :pattern ( ($generated@@32 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@33 $generated@@65) (= ($generated@@52 $generated@@65) $generated@@5))
 :pattern ( ($generated@@33 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@52 $generated@@67) $generated@@6))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@68 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@68 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@60 $generated@@72) (= $generated@@72 $generated@@39))
 :pattern ( ($generated@@60 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@32 $generated@@73) (= $generated@@73 $generated@@53))
 :pattern ( ($generated@@32 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@62 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@38 $generated@@75))))
 :pattern ( ($generated@@62 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@33 $generated@@77) (exists (($generated@@78 T@U) ) (= $generated@@77 ($generated@@76 $generated@@78))))
 :pattern ( ($generated@@33 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@66 $generated@@80) (exists (($generated@@81 T@U) ) (= $generated@@80 ($generated@@79 $generated@@81))))
 :pattern ( ($generated@@66 $generated@@80))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@35 ($generated@@37 $generated@@30 $generated@@84) ($generated@@37 $generated@@30 $generated@@85)) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@84 $generated@@54) ($generated@@29 $generated@@30 $generated@@85 $generated@@54)))) (and (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@60 ($generated@@37 $generated@@30 $generated@@84)))))) (let (($generated@@86 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@84)))))
($generated@@35 $generated@@86 ($generated@@37 $generated@@30 $generated@@85)))) (= ($generated@@40 ($generated@@27 $generated@@83) ($generated@@37 $generated@@30 $generated@@84) ($generated@@37 $generated@@30 $generated@@85)) (ite ($generated@@60 ($generated@@37 $generated@@30 $generated@@84)) $generated@@85 (let (($generated@@87 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@84)))))
($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@83) $generated@@87 ($generated@@37 $generated@@30 $generated@@85))))))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@27 $generated@@83) ($generated@@37 $generated@@30 $generated@@84) ($generated@@37 $generated@@30 $generated@@85)))
))))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@38 $generated@@88) $generated@@54) ($generated@@29 $generated@@30 $generated@@88 $generated@@54))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@38 $generated@@88) $generated@@54))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@76 $generated@@89) $generated@@31) ($generated@@29 $generated@@30 $generated@@89 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@76 $generated@@89) $generated@@31))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@79 $generated@@90) $generated@@31) ($generated@@29 $generated@@30 $generated@@90 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@79 $generated@@90) $generated@@31))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@62 $generated@@91) ($generated@@62 $generated@@92)) (= ($generated@@55 $generated@@91 $generated@@92) ($generated@@55 ($generated@@82 $generated@@91) ($generated@@82 $generated@@92))))
 :pattern ( ($generated@@55 $generated@@91 $generated@@92) ($generated@@62 $generated@@91))
 :pattern ( ($generated@@55 $generated@@91 $generated@@92) ($generated@@62 $generated@@92))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@35 $generated@@94 $generated@@95) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@94 $generated@@54) ($generated@@29 $generated@@30 $generated@@95 $generated@@54)))) ($generated@@29 $generated@@30 ($generated@@40 $generated@@93 $generated@@94 $generated@@95) $generated@@54))
 :pattern ( ($generated@@40 $generated@@93 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@40 ($generated@@27 $generated@@96) $generated@@97 $generated@@98) ($generated@@40 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@40 ($generated@@27 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@99 $generated@@100) (or ($generated@@60 $generated@@100) ($generated@@62 $generated@@100)))
 :pattern ( ($generated@@99 $generated@@100))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@28 $generated@@102) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@102 $generated@@31))) ($generated@@29 $generated@@30 ($generated@@26 $generated@@101 $generated@@102) $generated@@54))
 :pattern ( ($generated@@26 $generated@@101 $generated@@102))
))))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@103 $generated@@54) (or ($generated@@60 $generated@@103) ($generated@@62 $generated@@103)))
 :pattern ( ($generated@@62 $generated@@103) ($generated@@29 $generated@@30 $generated@@103 $generated@@54))
 :pattern ( ($generated@@60 $generated@@103) ($generated@@29 $generated@@30 $generated@@103 $generated@@54))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and ($generated@@60 $generated@@104) ($generated@@60 $generated@@105)) ($generated@@55 $generated@@104 $generated@@105))
 :pattern ( ($generated@@55 $generated@@104 $generated@@105) ($generated@@60 $generated@@104))
 :pattern ( ($generated@@55 $generated@@104 $generated@@105) ($generated@@60 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@52 ($generated@@38 $generated@@106)) $generated@@3)
 :pattern ( ($generated@@38 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@82 ($generated@@38 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@38 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@52 ($generated@@76 $generated@@108)) $generated@@5)
 :pattern ( ($generated@@76 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@34 ($generated@@76 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@76 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@52 ($generated@@79 $generated@@110)) $generated@@6)
 :pattern ( ($generated@@79 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@36 ($generated@@79 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@79 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@68 $generated@@113 ($generated@@69 $generated@@113 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@69 $generated@@113 $generated@@112))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or ($generated@@35 $generated@@115 $generated@@116) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@115 $generated@@54) ($generated@@29 $generated@@30 $generated@@116 $generated@@54)))) (and (=> (not ($generated@@60 $generated@@115)) (let (($generated@@117 ($generated@@82 $generated@@115)))
($generated@@35 $generated@@117 $generated@@116))) (= ($generated@@40 ($generated@@27 $generated@@114) $generated@@115 $generated@@116) (ite ($generated@@60 $generated@@115) $generated@@116 (let (($generated@@118 ($generated@@82 $generated@@115)))
($generated@@38 ($generated@@40 $generated@@114 $generated@@118 $generated@@116)))))))
 :pattern ( ($generated@@40 ($generated@@27 $generated@@114) $generated@@115 $generated@@116))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@119) $generated@@120) ($generated@@26 $generated@@119 $generated@@120))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@119) $generated@@120))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or ($generated@@28 ($generated@@37 $generated@@30 $generated@@122)) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@122 $generated@@31))) (and (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@32 ($generated@@37 $generated@@30 $generated@@122)))))) (and (=> ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@33 ($generated@@37 $generated@@30 $generated@@122))))) (let (($generated@@123 ($generated@@37 $generated@@30 ($generated@@34 ($generated@@37 $generated@@30 $generated@@122)))))
 (and ($generated@@28 $generated@@123) (let (($generated@@124 ($generated@@26 ($generated@@27 $generated@@121) $generated@@123)))
($generated@@35 $generated@@124 $generated@@124))))) (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@33 ($generated@@37 $generated@@30 $generated@@122)))))) (let (($generated@@125 ($generated@@37 $generated@@30 ($generated@@36 ($generated@@37 $generated@@30 $generated@@122)))))
 (and ($generated@@28 $generated@@125) (let (($generated@@126 ($generated@@26 ($generated@@27 $generated@@121) $generated@@125)))
 (and ($generated@@35 $generated@@126 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))) ($generated@@35 $generated@@126 ($generated@@40 ($generated@@27 $generated@@41) $generated@@126 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))))))))))) (= ($generated@@26 ($generated@@27 $generated@@121) ($generated@@37 $generated@@30 $generated@@122)) (ite ($generated@@32 ($generated@@37 $generated@@30 $generated@@122)) $generated@@39 (ite ($generated@@33 ($generated@@37 $generated@@30 $generated@@122)) (let (($generated@@127 ($generated@@37 $generated@@30 ($generated@@34 ($generated@@37 $generated@@30 $generated@@122)))))
(let (($generated@@128 ($generated@@37 $generated@@30 ($generated@@26 ($generated@@27 $generated@@121) $generated@@127))))
($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@128 $generated@@128)))) (let (($generated@@129 ($generated@@37 $generated@@30 ($generated@@36 ($generated@@37 $generated@@30 $generated@@122)))))
(let (($generated@@130 ($generated@@37 $generated@@30 ($generated@@26 ($generated@@27 $generated@@121) $generated@@129))))
($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@130 ($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@130 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@121) ($generated@@37 $generated@@30 $generated@@122)))
))))
(assert (forall (($generated@@132 T@U) ) (! (< ($generated@@131 $generated@@132) ($generated@@131 ($generated@@38 $generated@@132)))
 :pattern ( ($generated@@38 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (< ($generated@@131 $generated@@133) ($generated@@131 ($generated@@76 $generated@@133)))
 :pattern ( ($generated@@76 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (< ($generated@@131 $generated@@134) ($generated@@131 ($generated@@79 $generated@@134)))
 :pattern ( ($generated@@79 $generated@@134))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@135 $generated@@146 $generated@@147 $generated@@148 ($generated@@142 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@135 $generated@@153 $generated@@154 $generated@@155 ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@135 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@135 $generated@@162 $generated@@163 $generated@@164 ($generated@@142 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))) (= ($generated@@9 $generated@@136) 4)) (= ($generated@@9 $generated@@137) 5)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@139 $generated@@171 $generated@@172 ($generated@@143 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@173) $generated@@175) $generated@@173)
 :weight 0
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@180 $generated@@181) (= ($generated@@139 $generated@@176 $generated@@177 ($generated@@143 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@181) ($generated@@139 $generated@@176 $generated@@177 $generated@@179 $generated@@181)))
 :weight 0
))) (= ($generated@@9 $generated@@140) 6)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@9 ($generated@@141 $generated@@182 $generated@@183)) 7))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@144 ($generated@@141 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@141 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@145 ($generated@@141 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@141 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@14 ($generated@@135 $generated@@136 $generated@@137 $generated@@10 ($generated@@138 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@14 ($generated@@68 $generated@@10 ($generated@@139 $generated@@137 $generated@@140 ($generated@@139 $generated@@136 ($generated@@141 $generated@@137 $generated@@140) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137 $generated@@10 ($generated@@138 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@194 $generated@@31) (or (or ($generated@@32 $generated@@194) ($generated@@33 $generated@@194)) ($generated@@66 $generated@@194)))
 :pattern ( ($generated@@66 $generated@@194) ($generated@@29 $generated@@30 $generated@@194 $generated@@31))
 :pattern ( ($generated@@33 $generated@@194) ($generated@@29 $generated@@30 $generated@@194 $generated@@31))
 :pattern ( ($generated@@32 $generated@@194) ($generated@@29 $generated@@30 $generated@@194 $generated@@31))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and ($generated@@196 $generated@@198) ($generated@@29 $generated@@30 $generated@@197 $generated@@54)) ($generated@@195 $generated@@30 $generated@@197 $generated@@54 $generated@@198))
 :pattern ( ($generated@@195 $generated@@30 $generated@@197 $generated@@54 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@196 $generated@@200) ($generated@@29 $generated@@30 $generated@@199 $generated@@31)) ($generated@@195 $generated@@30 $generated@@199 $generated@@31 $generated@@200))
 :pattern ( ($generated@@195 $generated@@30 $generated@@199 $generated@@31 $generated@@200))
)))
(assert (= ($generated@@201 $generated@@54) $generated@@0))
(assert (= ($generated@@202 $generated@@54) $generated@@7))
(assert (= ($generated@@201 $generated@@31) $generated@@1))
(assert (= ($generated@@202 $generated@@31) $generated@@8))
(assert (= $generated@@39 ($generated@@37 $generated@@30 $generated@@39)))
(assert (= $generated@@53 ($generated@@37 $generated@@30 $generated@@53)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@196 $generated@@204) (and ($generated@@62 $generated@@203) ($generated@@195 $generated@@30 $generated@@203 $generated@@54 $generated@@204))) ($generated@@195 $generated@@30 ($generated@@82 $generated@@203) $generated@@54 $generated@@204))
 :pattern ( ($generated@@195 $generated@@30 ($generated@@82 $generated@@203) $generated@@54 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@196 $generated@@206) (and ($generated@@33 $generated@@205) ($generated@@195 $generated@@30 $generated@@205 $generated@@31 $generated@@206))) ($generated@@195 $generated@@30 ($generated@@34 $generated@@205) $generated@@31 $generated@@206))
 :pattern ( ($generated@@195 $generated@@30 ($generated@@34 $generated@@205) $generated@@31 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@196 $generated@@208) (and ($generated@@66 $generated@@207) ($generated@@195 $generated@@30 $generated@@207 $generated@@31 $generated@@208))) ($generated@@195 $generated@@30 ($generated@@36 $generated@@207) $generated@@31 $generated@@208))
 :pattern ( ($generated@@195 $generated@@30 ($generated@@36 $generated@@207) $generated@@31 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ) (! (= ($generated@@38 ($generated@@37 $generated@@30 $generated@@209)) ($generated@@37 $generated@@30 ($generated@@38 $generated@@209)))
 :pattern ( ($generated@@38 ($generated@@37 $generated@@30 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@76 ($generated@@37 $generated@@30 $generated@@210)) ($generated@@37 $generated@@30 ($generated@@76 $generated@@210)))
 :pattern ( ($generated@@76 ($generated@@37 $generated@@30 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ) (! (= ($generated@@79 ($generated@@37 $generated@@30 $generated@@211)) ($generated@@37 $generated@@30 ($generated@@79 $generated@@211)))
 :pattern ( ($generated@@79 ($generated@@37 $generated@@30 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@T) ) (! (= ($generated@@69 $generated@@213 ($generated@@37 $generated@@213 $generated@@212)) ($generated@@37 $generated@@140 ($generated@@69 $generated@@213 $generated@@212)))
 :pattern ( ($generated@@69 $generated@@213 ($generated@@37 $generated@@213 $generated@@212)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@224  (=> (and (= $generated@@214 ($generated@@138 $generated@@215 $generated@@216 $generated false)) (= $generated@@217 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))))) (=> (and (and (and (= $generated@@218 ($generated@@38 ($generated@@38 ($generated@@38 ($generated@@38 ($generated@@38 ($generated@@38 ($generated@@38 $generated@@217)))))))) (= $generated@@219 ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53))))))))) (and ($generated@@195 $generated@@30 $generated@@219 $generated@@31 $generated@@216) ($generated@@28 ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53)))))))))) (and (and ($generated@@99 ($generated@@37 $generated@@30 ($generated@@26 ($generated@@27 $generated@@41) ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53)))))))))) ($generated@@99 $generated@@217)) ($generated@@28 ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53)))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@55 ($generated@@26 ($generated@@27 ($generated@@27 $generated@@41)) ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53)))))))) $generated@@217)) (=> (and (and ($generated@@55 ($generated@@26 ($generated@@27 $generated@@41) ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53)))))))) $generated@@217) (= $generated@@220 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53))))))))))) (and ($generated@@195 $generated@@30 $generated@@220 $generated@@31 $generated@@216) ($generated@@28 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53)))))))))))) (=> (and (and (and ($generated@@99 ($generated@@37 $generated@@30 ($generated@@26 ($generated@@27 $generated@@41) ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53)))))))))))) ($generated@@99 $generated@@218)) ($generated@@28 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53))))))))))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@55 ($generated@@26 ($generated@@27 ($generated@@27 $generated@@41)) ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@76 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 $generated@@53)))))))))) $generated@@218))))))))
(let (($generated@@225  (=> (and ($generated@@196 $generated@@216) ($generated@@221 $generated@@216)) (=> (and (and ($generated@@29 $generated@@30 $generated@@222 $generated@@54) ($generated@@195 $generated@@30 $generated@@222 $generated@@54 $generated@@216)) true) (=> (and (and (and ($generated@@29 $generated@@30 $generated@@223 $generated@@54) ($generated@@195 $generated@@30 $generated@@223 $generated@@54 $generated@@216)) true) (and (= 3 $generated@@25) (= (ControlFlow 0 4) 2))) $generated@@224)))))
$generated@@225)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
