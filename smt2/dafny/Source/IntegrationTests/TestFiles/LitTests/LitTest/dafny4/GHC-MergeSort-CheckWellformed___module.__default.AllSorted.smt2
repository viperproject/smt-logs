(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@57 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) Int)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@117 (T@U) Bool)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@125 (T@U T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@184 (T@U) Int)
(declare-fun $generated@@185 (T@U) Int)
(declare-fun $generated@@201 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@202 () T@T)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@204 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@205 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@206 (T@T T@T) T@T)
(declare-fun $generated@@207 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@208 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@209 (T@T) T@T)
(declare-fun $generated@@210 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@28) 3))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@26 $generated@@39) (and (< 3 $generated@@23) ($generated@@27 $generated@@28 $generated@@39 ($generated@@29 ($generated@@29 $generated@@30))))) (and (=> (not ($generated@@31 $generated@@39)) (let (($generated@@40 ($generated@@32 $generated@@39)))
(let (($generated@@41 ($generated@@33 $generated@@28 ($generated@@34 $generated@@39))))
 (and ($generated@@35 $generated@@41) (=> ($generated@@36 ($generated@@25 $generated@@37) $generated@@41) ($generated@@26 $generated@@40)))))) (= ($generated@@24 ($generated@@25 $generated@@38) $generated@@39) (ite ($generated@@31 $generated@@39) true (let (($generated@@42 ($generated@@32 $generated@@39)))
(let (($generated@@43 ($generated@@33 $generated@@28 ($generated@@34 $generated@@39))))
 (and ($generated@@36 ($generated@@25 $generated@@37) $generated@@43) ($generated@@24 $generated@@38 $generated@@42))))))))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@38) $generated@@39))
))))
(assert (= ($generated@@44 $generated) $generated@@0))
(assert ($generated@@45 $generated@@30))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 $generated@@47 ($generated@@25 $generated@@48) $generated@@49) ($generated@@46 $generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@25 $generated@@48) $generated@@49))
)))
(assert (= ($generated@@50 $generated@@51) $generated@@4))
(assert (= ($generated@@7 $generated@@52) 4))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@27 $generated@@52 $generated@@55 ($generated@@53 $generated@@56)) ($generated@@54 $generated@@55))
 :pattern ( ($generated@@27 $generated@@52 $generated@@55 ($generated@@53 $generated@@56)))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@58 $generated@@60) ($generated@@57 $generated@@28 $generated@@51 ($generated@@29 $generated@@59) $generated@@60))
 :pattern ( ($generated@@57 $generated@@28 $generated@@51 ($generated@@29 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ) (! ($generated@@27 $generated@@28 $generated@@51 ($generated@@29 $generated@@61))
 :pattern ( ($generated@@27 $generated@@28 $generated@@51 ($generated@@29 $generated@@61)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (or ($generated@@62 $generated@@66 $generated@@68) (and (< 1 $generated@@23) ($generated@@27 $generated@@28 $generated@@68 ($generated@@29 $generated@@66)))) (and (=> (not ($generated@@31 $generated@@68)) (let (($generated@@69 ($generated@@32 $generated@@68)))
($generated@@62 $generated@@66 $generated@@69))) (= ($generated@@46 $generated@@66 ($generated@@25 $generated@@67) $generated@@68) (ite ($generated@@31 $generated@@68) $generated@@63 (let (($generated@@70 ($generated@@32 $generated@@68)))
(let (($generated@@71 ($generated@@34 $generated@@68)))
($generated@@64 ($generated@@65 $generated@@63 $generated@@71) ($generated@@46 $generated@@66 $generated@@67 $generated@@70))))))))
 :pattern ( ($generated@@46 $generated@@66 ($generated@@25 $generated@@67) $generated@@68))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@75 $generated@@78 $generated@@79) ($generated@@29 $generated@@77))  (and ($generated@@76 $generated@@78 $generated@@77) ($generated@@27 $generated@@28 $generated@@79 ($generated@@29 $generated@@77))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@75 $generated@@78 $generated@@79) ($generated@@29 $generated@@77)))
)))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@26 ($generated@@72 $generated@@28 $generated@@81)) (and (< 3 $generated@@23) ($generated@@27 $generated@@28 $generated@@81 ($generated@@29 ($generated@@29 $generated@@30))))) (and (=> (not ($generated@@12 ($generated@@72 $generated@@8 ($generated@@11 ($generated@@31 ($generated@@72 $generated@@28 $generated@@81)))))) (let (($generated@@82 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@81)))))
(let (($generated@@83 ($generated@@72 $generated@@28 ($generated@@33 $generated@@28 ($generated@@34 ($generated@@72 $generated@@28 $generated@@81))))))
 (and ($generated@@35 $generated@@83) (=> ($generated@@36 ($generated@@25 $generated@@37) $generated@@83) ($generated@@26 $generated@@82)))))) (= ($generated@@24 ($generated@@25 $generated@@80) ($generated@@72 $generated@@28 $generated@@81)) (ite ($generated@@31 ($generated@@72 $generated@@28 $generated@@81)) true ($generated@@12 (let (($generated@@84 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@81)))))
(let (($generated@@85 ($generated@@72 $generated@@28 ($generated@@33 $generated@@28 ($generated@@34 ($generated@@72 $generated@@28 $generated@@81))))))
($generated@@72 $generated@@8 ($generated@@11  (and ($generated@@36 ($generated@@25 $generated@@37) $generated@@85) ($generated@@24 ($generated@@25 $generated@@80) $generated@@84)))))))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@25 $generated@@80) ($generated@@72 $generated@@28 $generated@@81)))
))))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@31 $generated@@86) (= ($generated@@50 $generated@@86) $generated@@4))
 :pattern ( ($generated@@31 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@50 $generated@@88) $generated@@5))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@33 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@33 $generated@@91 $generated@@90))
)))
(assert (= ($generated@@7 $generated@@92) 5))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@35 ($generated@@72 $generated@@28 $generated@@97)) (and (< 2 $generated@@23) ($generated@@27 $generated@@28 $generated@@97 ($generated@@29 $generated@@30)))) (and (=> (not ($generated@@12 ($generated@@72 $generated@@8 ($generated@@11 ($generated@@31 ($generated@@72 $generated@@28 $generated@@97)))))) (let (($generated@@98 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@97)))))
(let (($generated@@99 ($generated@@72 $generated@@92 ($generated@@34 ($generated@@72 $generated@@28 $generated@@97)))))
 (and (forall (($generated@@100 T@U) ) (!  (=> ($generated@@76 $generated@@100 $generated@@30) (and ($generated@@62 $generated@@30 $generated@@98) (=> (> ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@98) $generated@@100) 0) ($generated@@95 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@93 $generated@@99 $generated@@100))
 :pattern ( ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@98) $generated@@100))
)) (=> (forall (($generated@@101 T@U) ) (!  (=> ($generated@@76 $generated@@101 $generated@@30) (=> (> ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@98) $generated@@101) 0) ($generated@@93 $generated@@99 $generated@@101)))
 :pattern ( ($generated@@93 $generated@@99 $generated@@101))
 :pattern ( ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@98) $generated@@101))
)) ($generated@@35 $generated@@98)))))) (= ($generated@@36 ($generated@@25 $generated@@96) ($generated@@72 $generated@@28 $generated@@97)) (ite ($generated@@31 ($generated@@72 $generated@@28 $generated@@97)) true (let (($generated@@102 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@97)))))
(let (($generated@@103 ($generated@@72 $generated@@92 ($generated@@34 ($generated@@72 $generated@@28 $generated@@97)))))
 (and (forall (($generated@@104 T@U) ) (!  (=> ($generated@@76 $generated@@104 $generated@@30) (=> (> ($generated@@94 ($generated@@72 $generated@@52 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@102)) $generated@@104) 0) ($generated@@93 $generated@@103 $generated@@104)))
 :pattern ( ($generated@@93 $generated@@103 $generated@@104))
 :pattern ( ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@102) $generated@@104))
)) ($generated@@36 ($generated@@25 $generated@@96) $generated@@102))))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@25 $generated@@96) ($generated@@72 $generated@@28 $generated@@97)))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or (not (= $generated@@106 $generated@@107)) (not true)) (= ($generated@@94 $generated@@105 $generated@@107) ($generated@@94 ($generated@@65 $generated@@105 $generated@@106) $generated@@107)))
 :pattern ( ($generated@@65 $generated@@105 $generated@@106) ($generated@@94 $generated@@105 $generated@@107))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@62 $generated@@108 ($generated@@72 $generated@@28 $generated@@110)) (and (< 1 $generated@@23) ($generated@@27 $generated@@28 $generated@@110 ($generated@@29 $generated@@108)))) (and (=> (not ($generated@@12 ($generated@@72 $generated@@8 ($generated@@11 ($generated@@31 ($generated@@72 $generated@@28 $generated@@110)))))) (let (($generated@@111 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@110)))))
($generated@@62 $generated@@108 $generated@@111))) (= ($generated@@46 $generated@@108 ($generated@@25 $generated@@109) ($generated@@72 $generated@@28 $generated@@110)) (ite ($generated@@31 ($generated@@72 $generated@@28 $generated@@110)) $generated@@63 (let (($generated@@112 ($generated@@72 $generated@@28 ($generated@@32 ($generated@@72 $generated@@28 $generated@@110)))))
(let (($generated@@113 ($generated@@72 $generated@@92 ($generated@@34 ($generated@@72 $generated@@28 $generated@@110)))))
($generated@@64 ($generated@@65 $generated@@63 $generated@@113) ($generated@@46 $generated@@108 ($generated@@25 $generated@@109) $generated@@112))))))))
 :weight 3
 :pattern ( ($generated@@46 $generated@@108 ($generated@@25 $generated@@109) ($generated@@72 $generated@@28 $generated@@110)))
))))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@87 $generated@@114) (exists (($generated@@115 T@U) ($generated@@116 T@U) ) (= $generated@@114 ($generated@@75 $generated@@115 $generated@@116))))
 :pattern ( ($generated@@87 $generated@@114))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or ($generated@@95 ($generated@@72 $generated@@92 $generated@@119) ($generated@@72 $generated@@92 $generated@@120)) (and (< 1 $generated@@23) (and ($generated@@76 $generated@@119 $generated@@30) ($generated@@76 $generated@@120 $generated@@30)))) (and (and ($generated@@117 ($generated@@72 $generated@@92 $generated@@119)) ($generated@@117 ($generated@@72 $generated@@92 $generated@@120))) (= ($generated@@93 ($generated@@72 $generated@@92 $generated@@119) ($generated@@72 $generated@@92 $generated@@120)) (<= ($generated@@118 ($generated@@72 $generated@@92 $generated@@119)) ($generated@@118 ($generated@@72 $generated@@92 $generated@@120))))))
 :weight 3
 :pattern ( ($generated@@93 ($generated@@72 $generated@@92 $generated@@119) ($generated@@72 $generated@@92 $generated@@120)))
))))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@31 $generated@@121) (= $generated@@121 $generated@@51))
 :pattern ( ($generated@@31 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@122 ($generated@@65 $generated@@123 $generated@@124)) (+ ($generated@@122 $generated@@123) 1))
 :pattern ( ($generated@@122 ($generated@@65 $generated@@123 $generated@@124)))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@125 ($generated@@89 $generated@@129 $generated@@126) $generated@@127 $generated@@128) ($generated@@57 $generated@@129 $generated@@126 $generated@@127 $generated@@128))
 :pattern ( ($generated@@125 ($generated@@89 $generated@@129 $generated@@126) $generated@@127 $generated@@128))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@35 $generated@@131) (and (< 2 $generated@@23) ($generated@@27 $generated@@28 $generated@@131 ($generated@@29 $generated@@30)))) (and (=> (not ($generated@@31 $generated@@131)) (let (($generated@@132 ($generated@@32 $generated@@131)))
(let (($generated@@133 ($generated@@34 $generated@@131)))
 (and (forall (($generated@@134 T@U) ) (!  (=> ($generated@@76 $generated@@134 $generated@@30) (and ($generated@@62 $generated@@30 $generated@@132) (=> (> ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@132) $generated@@134) 0) ($generated@@95 $generated@@133 $generated@@134))))
 :pattern ( ($generated@@93 $generated@@133 $generated@@134))
 :pattern ( ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@132) $generated@@134))
)) (=> (forall (($generated@@135 T@U) ) (!  (=> ($generated@@76 $generated@@135 $generated@@30) (=> (> ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@132) $generated@@135) 0) ($generated@@93 $generated@@133 $generated@@135)))
 :pattern ( ($generated@@93 $generated@@133 $generated@@135))
 :pattern ( ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@132) $generated@@135))
)) ($generated@@35 $generated@@132)))))) (= ($generated@@36 ($generated@@25 $generated@@130) $generated@@131) (ite ($generated@@31 $generated@@131) true (let (($generated@@136 ($generated@@32 $generated@@131)))
(let (($generated@@137 ($generated@@34 $generated@@131)))
 (and (forall (($generated@@138 T@U) ) (!  (=> ($generated@@76 $generated@@138 $generated@@30) (=> (> ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@136) $generated@@138) 0) ($generated@@93 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@93 $generated@@137 $generated@@138))
 :pattern ( ($generated@@94 ($generated@@46 $generated@@30 ($generated@@25 $generated@@37) $generated@@136) $generated@@138))
)) ($generated@@36 $generated@@130 $generated@@136))))))))
 :pattern ( ($generated@@36 ($generated@@25 $generated@@130) $generated@@131))
))))
(assert (forall (($generated@@140 T@U) ) (!  (and (= ($generated@@44 ($generated@@29 $generated@@140)) $generated@@3) (= ($generated@@139 ($generated@@29 $generated@@140)) $generated@@6))
 :pattern ( ($generated@@29 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@122 ($generated@@64 $generated@@141 $generated@@142)) (+ ($generated@@122 $generated@@141) ($generated@@122 $generated@@142)))
 :pattern ( ($generated@@122 ($generated@@64 $generated@@141 $generated@@142)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (or ($generated@@95 $generated@@143 $generated@@144) (and (< 1 $generated@@23) (and ($generated@@76 $generated@@143 $generated@@30) ($generated@@76 $generated@@144 $generated@@30)))) (and (and ($generated@@117 $generated@@143) ($generated@@117 $generated@@144)) (= ($generated@@93 $generated@@143 $generated@@144) (<= ($generated@@118 $generated@@143) ($generated@@118 $generated@@144)))))
 :pattern ( ($generated@@93 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@146 ($generated@@29 $generated@@145)) (or ($generated@@31 $generated@@146) ($generated@@87 $generated@@146)))
 :pattern ( ($generated@@87 $generated@@146) ($generated@@27 $generated@@28 $generated@@146 ($generated@@29 $generated@@145)))
 :pattern ( ($generated@@31 $generated@@146) ($generated@@27 $generated@@28 $generated@@146 ($generated@@29 $generated@@145)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@27 $generated@@52 $generated@@147 ($generated@@53 $generated@@148)) (forall (($generated@@149 T@U) ) (!  (=> (< 0 ($generated@@94 $generated@@147 $generated@@149)) ($generated@@76 $generated@@149 $generated@@148))
 :pattern ( ($generated@@94 $generated@@147 $generated@@149))
)))
 :pattern ( ($generated@@27 $generated@@52 $generated@@147 ($generated@@53 $generated@@148)))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@76 $generated@@150 $generated) (and (= ($generated@@89 $generated@@8 ($generated@@33 $generated@@8 $generated@@150)) $generated@@150) ($generated@@27 $generated@@8 ($generated@@33 $generated@@8 $generated@@150) $generated)))
 :pattern ( ($generated@@76 $generated@@150 $generated))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@36 ($generated@@25 $generated@@151) $generated@@152) ($generated@@36 $generated@@151 $generated@@152))
 :pattern ( ($generated@@36 ($generated@@25 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@153) $generated@@154) ($generated@@24 $generated@@153 $generated@@154))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@76 ($generated@@89 $generated@@157 $generated@@155) $generated@@156) ($generated@@27 $generated@@157 $generated@@155 $generated@@156))
 :pattern ( ($generated@@76 ($generated@@89 $generated@@157 $generated@@155) $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@54 $generated@@158) (forall (($generated@@159 T@U) ) (!  (and (<= 0 ($generated@@94 $generated@@158 $generated@@159)) (<= ($generated@@94 $generated@@158 $generated@@159) ($generated@@122 $generated@@158)))
 :pattern ( ($generated@@94 $generated@@158 $generated@@159))
)))
 :pattern ( ($generated@@54 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (<= 0 ($generated@@122 $generated@@160))
 :pattern ( ($generated@@122 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@45 $generated@@161) (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@76 $generated@@163 $generated@@161) ($generated@@125 $generated@@163 $generated@@161 $generated@@162))
 :pattern ( ($generated@@125 $generated@@163 $generated@@161 $generated@@162))
)))
 :pattern ( ($generated@@45 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@94 $generated@@63 $generated@@164) 0)
 :pattern ( ($generated@@94 $generated@@63 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@50 ($generated@@75 $generated@@165 $generated@@166)) $generated@@5)
 :pattern ( ($generated@@75 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@34 ($generated@@75 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@75 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@32 ($generated@@75 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@75 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@94 ($generated@@65 $generated@@171 $generated@@172) $generated@@172) (+ ($generated@@94 $generated@@171 $generated@@172) 1))
 :pattern ( ($generated@@65 $generated@@171 $generated@@172))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (or ($generated@@62 $generated@@174 $generated@@176) (and (< 1 $generated@@23) (and ($generated@@27 $generated@@28 $generated@@176 ($generated@@29 $generated@@174)) ($generated@@57 $generated@@28 $generated@@176 ($generated@@29 $generated@@174) $generated@@173)))) ($generated@@58 $generated@@173)) ($generated@@57 $generated@@52 ($generated@@46 $generated@@174 $generated@@175 $generated@@176) ($generated@@53 $generated@@174) $generated@@173))
 :pattern ( ($generated@@57 $generated@@52 ($generated@@46 $generated@@174 $generated@@175 $generated@@176) ($generated@@53 $generated@@174) $generated@@173))
))))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@177 ($generated@@53 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@53 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@44 ($generated@@53 $generated@@179)) $generated@@1)
 :pattern ( ($generated@@53 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@180 ($generated@@29 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@29 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@33 $generated@@183 ($generated@@89 $generated@@183 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@89 $generated@@183 $generated@@182))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (< ($generated@@184 $generated@@186) ($generated@@185 ($generated@@75 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@75 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (< ($generated@@185 $generated@@189) ($generated@@185 ($generated@@75 $generated@@188 $generated@@189)))
 :pattern ( ($generated@@75 $generated@@188 $generated@@189))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> (or ($generated@@62 $generated@@190 $generated@@192) (and (< 1 $generated@@23) ($generated@@27 $generated@@28 $generated@@192 ($generated@@29 $generated@@190)))) ($generated@@27 $generated@@52 ($generated@@46 $generated@@190 $generated@@191 $generated@@192) ($generated@@53 $generated@@190)))
 :pattern ( ($generated@@46 $generated@@190 $generated@@191 $generated@@192))
))))
(assert (forall (($generated@@193 T@U) ) (!  (and (= (= ($generated@@122 $generated@@193) 0) (= $generated@@193 $generated@@63)) (=> (or (not (= ($generated@@122 $generated@@193) 0)) (not true)) (exists (($generated@@194 T@U) ) (! (< 0 ($generated@@94 $generated@@193 $generated@@194))
 :pattern ( ($generated@@94 $generated@@193 $generated@@194))
))))
 :pattern ( ($generated@@122 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@94 ($generated@@64 $generated@@195 $generated@@196) $generated@@197) (+ ($generated@@94 $generated@@195 $generated@@197) ($generated@@94 $generated@@196 $generated@@197)))
 :pattern ( ($generated@@94 ($generated@@64 $generated@@195 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (and ($generated@@58 $generated@@200) (and ($generated@@87 $generated@@198) ($generated@@57 $generated@@28 $generated@@198 ($generated@@29 $generated@@199) $generated@@200))) ($generated@@125 ($generated@@34 $generated@@198) $generated@@199 $generated@@200))
 :pattern ( ($generated@@125 ($generated@@34 $generated@@198) $generated@@199 $generated@@200))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@201 $generated@@211 $generated@@212 $generated@@213 ($generated@@207 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@216 $generated@@217) $generated@@214)
 :weight 0
)) (and (forall (($generated@@218 T@T) ($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (or (= $generated@@223 $generated@@225) (= ($generated@@201 $generated@@218 $generated@@219 $generated@@220 ($generated@@207 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@223 $generated@@224 $generated@@221) $generated@@225 $generated@@226) ($generated@@201 $generated@@218 $generated@@219 $generated@@220 $generated@@222 $generated@@225 $generated@@226)))
 :weight 0
)) (forall (($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@T) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@233 $generated@@235) (= ($generated@@201 $generated@@227 $generated@@228 $generated@@229 ($generated@@207 $generated@@227 $generated@@228 $generated@@229 $generated@@231 $generated@@232 $generated@@233 $generated@@230) $generated@@234 $generated@@235) ($generated@@201 $generated@@227 $generated@@228 $generated@@229 $generated@@231 $generated@@234 $generated@@235)))
 :weight 0
)))) (= ($generated@@7 $generated@@202) 6)) (= ($generated@@7 $generated@@203) 7)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (! (= ($generated@@205 $generated@@236 $generated@@237 ($generated@@208 $generated@@236 $generated@@237 $generated@@239 $generated@@240 $generated@@238) $generated@@240) $generated@@238)
 :weight 0
))) (forall (($generated@@241 T@T) ($generated@@242 T@T) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or (= $generated@@245 $generated@@246) (= ($generated@@205 $generated@@241 $generated@@242 ($generated@@208 $generated@@241 $generated@@242 $generated@@244 $generated@@245 $generated@@243) $generated@@246) ($generated@@205 $generated@@241 $generated@@242 $generated@@244 $generated@@246)))
 :weight 0
))) (forall (($generated@@247 T@T) ($generated@@248 T@T) ) (= ($generated@@7 ($generated@@206 $generated@@247 $generated@@248)) 8))) (forall (($generated@@249 T@T) ($generated@@250 T@T) ) (! (= ($generated@@209 ($generated@@206 $generated@@249 $generated@@250)) $generated@@249)
 :pattern ( ($generated@@206 $generated@@249 $generated@@250))
))) (forall (($generated@@251 T@T) ($generated@@252 T@T) ) (! (= ($generated@@210 ($generated@@206 $generated@@251 $generated@@252)) $generated@@252)
 :pattern ( ($generated@@206 $generated@@251 $generated@@252))
))))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 Bool) ($generated@@257 T@U) ($generated@@258 T@U) ) (! (= ($generated@@12 ($generated@@201 $generated@@202 $generated@@203 $generated@@8 ($generated@@204 $generated@@253 $generated@@254 $generated@@255 $generated@@256) $generated@@257 $generated@@258))  (=> (and (or (not (= $generated@@257 $generated@@253)) (not true)) ($generated@@12 ($generated@@33 $generated@@8 ($generated@@205 $generated@@203 $generated@@92 ($generated@@205 $generated@@202 ($generated@@206 $generated@@203 $generated@@92) $generated@@254 $generated@@257) $generated@@255)))) $generated@@256))
 :pattern ( ($generated@@201 $generated@@202 $generated@@203 $generated@@8 ($generated@@204 $generated@@253 $generated@@254 $generated@@255 $generated@@256) $generated@@257 $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ) (! (= ($generated@@184 ($generated@@89 $generated@@28 $generated@@259)) ($generated@@185 $generated@@259))
 :pattern ( ($generated@@184 ($generated@@89 $generated@@28 $generated@@259)))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> ($generated@@76 $generated@@260 ($generated@@53 $generated@@261)) (and (= ($generated@@89 $generated@@52 ($generated@@33 $generated@@52 $generated@@260)) $generated@@260) ($generated@@27 $generated@@52 ($generated@@33 $generated@@52 $generated@@260) ($generated@@53 $generated@@261))))
 :pattern ( ($generated@@76 $generated@@260 ($generated@@53 $generated@@261)))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (!  (=> ($generated@@76 $generated@@263 ($generated@@29 $generated@@262)) (and (= ($generated@@89 $generated@@28 ($generated@@33 $generated@@28 $generated@@263)) $generated@@263) ($generated@@27 $generated@@28 ($generated@@33 $generated@@28 $generated@@263) ($generated@@29 $generated@@262))))
 :pattern ( ($generated@@76 $generated@@263 ($generated@@29 $generated@@262)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> (and ($generated@@58 $generated@@266) (and ($generated@@87 $generated@@264) ($generated@@57 $generated@@28 $generated@@264 ($generated@@29 $generated@@265) $generated@@266))) ($generated@@57 $generated@@28 ($generated@@32 $generated@@264) ($generated@@29 $generated@@265) $generated@@266))
 :pattern ( ($generated@@57 $generated@@28 ($generated@@32 $generated@@264) ($generated@@29 $generated@@265) $generated@@266))
)))
(assert (= $generated@@51 ($generated@@72 $generated@@28 $generated@@51)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ) (! (= ($generated@@75 ($generated@@72 $generated@@92 $generated@@267) ($generated@@72 $generated@@28 $generated@@268)) ($generated@@72 $generated@@28 ($generated@@75 $generated@@267 $generated@@268)))
 :pattern ( ($generated@@75 ($generated@@72 $generated@@92 $generated@@267) ($generated@@72 $generated@@28 $generated@@268)))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@T) ) (! (= ($generated@@89 $generated@@270 ($generated@@72 $generated@@270 $generated@@269)) ($generated@@72 $generated@@92 ($generated@@89 $generated@@270 $generated@@269)))
 :pattern ( ($generated@@89 $generated@@270 ($generated@@72 $generated@@270 $generated@@269)))
)))
(assert (forall (($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 T@U) ) (!  (=> (< 0 ($generated@@94 $generated@@271 $generated@@273)) (< 0 ($generated@@94 ($generated@@65 $generated@@271 $generated@@272) $generated@@273)))
 :pattern ( ($generated@@65 $generated@@271 $generated@@272) ($generated@@94 $generated@@271 $generated@@273))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 T@U) ) (! (= (< 0 ($generated@@94 ($generated@@65 $generated@@274 $generated@@275) $generated@@276))  (or (= $generated@@276 $generated@@275) (< 0 ($generated@@94 $generated@@274 $generated@@276))))
 :pattern ( ($generated@@94 ($generated@@65 $generated@@274 $generated@@275) $generated@@276))
)))
(assert (forall (($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (! (= ($generated@@57 $generated@@52 $generated@@277 ($generated@@53 $generated@@278) $generated@@279) (forall (($generated@@280 T@U) ) (!  (=> (< 0 ($generated@@94 $generated@@277 $generated@@280)) ($generated@@125 $generated@@280 $generated@@278 $generated@@279))
 :pattern ( ($generated@@94 $generated@@277 $generated@@280))
)))
 :pattern ( ($generated@@57 $generated@@52 $generated@@277 ($generated@@53 $generated@@278) $generated@@279))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (! ($generated@@57 $generated@@8 $generated@@282 $generated $generated@@281)
 :pattern ( ($generated@@57 $generated@@8 $generated@@282 $generated $generated@@281))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (!  (=> ($generated@@58 $generated@@286) (= ($generated@@57 $generated@@28 ($generated@@75 $generated@@284 $generated@@285) ($generated@@29 $generated@@283) $generated@@286)  (and ($generated@@125 $generated@@284 $generated@@283 $generated@@286) ($generated@@57 $generated@@28 $generated@@285 ($generated@@29 $generated@@283) $generated@@286))))
 :pattern ( ($generated@@57 $generated@@28 ($generated@@75 $generated@@284 $generated@@285) ($generated@@29 $generated@@283) $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ) (! ($generated@@27 $generated@@8 $generated@@287 $generated)
 :pattern ( ($generated@@27 $generated@@8 $generated@@287 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () T@U)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 () T@U)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@298 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@299 true))
(let (($generated@@300  (=> (and (not ($generated@@36 ($generated@@25 $generated@@37) $generated@@288)) (= (ControlFlow 0 7) 4)) $generated@@299)))
(let (($generated@@301  (=> (and ($generated@@36 ($generated@@25 $generated@@37) $generated@@288) ($generated@@57 $generated@@28 $generated@@289 ($generated@@29 ($generated@@29 $generated@@30)) $generated@@290)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@185 $generated@@289) ($generated@@185 $generated@@291))) (=> (< ($generated@@185 $generated@@289) ($generated@@185 $generated@@291)) (=> (and ($generated@@26 $generated@@289) (= (ControlFlow 0 5) 4)) $generated@@299))))))
(let (($generated@@302  (=> (= $generated@@291 ($generated@@75 ($generated@@89 $generated@@28 $generated@@292) $generated@@293)) (=> (and ($generated@@27 $generated@@28 $generated@@292 ($generated@@29 $generated@@30)) ($generated@@27 $generated@@28 $generated@@293 ($generated@@29 ($generated@@29 $generated@@30)))) (=> (and (and (and (= $generated@@294 $generated@@293) ($generated@@27 $generated@@28 $generated@@294 ($generated@@29 ($generated@@29 $generated@@30)))) (and (= $generated@@289 $generated@@294) (= $generated@@295 $generated@@292))) (and (and ($generated@@27 $generated@@28 $generated@@295 ($generated@@29 $generated@@30)) (= $generated@@288 $generated@@295)) (and ($generated@@57 $generated@@28 $generated@@288 ($generated@@29 $generated@@30) $generated@@290) ($generated@@35 $generated@@288)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@301) (=> (= (ControlFlow 0 8) 7) $generated@@300)))))))
(let (($generated@@303 true))
(let (($generated@@304  (=> (or (not (= $generated@@291 $generated@@51)) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@302) (=> (= (ControlFlow 0 9) 3) $generated@@303)))))
(let (($generated@@305 true))
(let (($generated@@306 true))
(let (($generated@@307  (=> (= $generated@@296 ($generated@@204 $generated@@297 $generated@@290 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@306) (=> (= (ControlFlow 0 10) 2) $generated@@305)) (=> (= (ControlFlow 0 10) 9) $generated@@304)))))
(let (($generated@@308  (=> (and (and (and ($generated@@58 $generated@@290) ($generated@@298 $generated@@290)) ($generated@@27 $generated@@28 $generated@@291 ($generated@@29 ($generated@@29 $generated@@30)))) (and (= 3 $generated@@23) (= (ControlFlow 0 11) 10))) $generated@@307)))
$generated@@308)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
