(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@T T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@T T@T) T@T)
(declare-fun $generated@@63 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@1))
(assert (= ($generated@@21 $generated@@0) $generated@@2))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (forall (($generated@@25 Int) ) (! (= ($generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@24 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@T) ) (! (= ($generated@@26 $generated@@28 $generated@@27) $generated@@27)
 :pattern ( ($generated@@26 $generated@@28 $generated@@27))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@30 $generated@@32 ($generated@@29 $generated@@32 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@29 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ) (!  (=> ($generated@@33 $generated@@35 $generated@@0) (and (= ($generated@@30 $generated@@7 ($generated@@29 $generated@@7 $generated@@35)) $generated@@35) ($generated@@34 $generated@@7 ($generated@@29 $generated@@7 $generated@@35) $generated@@0)))
 :pattern ( ($generated@@33 $generated@@35 $generated@@0))
)))
(assert (forall (($generated@@36 T@U) ) (!  (=> ($generated@@33 $generated@@36 $generated) (and (= ($generated@@30 $generated@@6 ($generated@@29 $generated@@6 $generated@@36)) $generated@@36) ($generated@@34 $generated@@6 ($generated@@29 $generated@@6 $generated@@36) $generated)))
 :pattern ( ($generated@@33 $generated@@36 $generated))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@33 ($generated@@30 $generated@@39 $generated@@37) $generated@@38) ($generated@@34 $generated@@39 $generated@@37 $generated@@38))
 :pattern ( ($generated@@33 ($generated@@30 $generated@@39 $generated@@37) $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ) (! (<= 0 ($generated@@22 $generated@@40))
 :pattern ( ($generated@@22 $generated@@40))
)))
(assert (= ($generated@@5 $generated@@43) 3))
(assert  (=> (<= 0 $generated@@41) (forall (($generated@@47 T@U) ) (!  (=> (or ($generated@@44 ($generated@@26 $generated@@43 $generated@@47)) (and (< 0 $generated@@41) (and ($generated@@34 $generated@@43 $generated@@47 ($generated@@45 $generated@@0)) (< 10 ($generated@@22 ($generated@@26 $generated@@43 $generated@@47)))))) (= ($generated@@42 ($generated@@26 $generated@@43 $generated@@47)) (forall (($generated@@48 Int) ) (! (forall (($generated@@49 Int) ($generated@@50 Int) )  (=> (= $generated@@50 (+ $generated@@48 $generated@@49)) (=> (and (and (<= ($generated@@24 0) $generated@@48) (< $generated@@48 $generated@@49)) (< $generated@@49 5)) (and (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 ($generated@@26 $generated@@43 $generated@@47) $generated@@50))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 ($generated@@26 $generated@@43 $generated@@47) $generated@@48)))) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 ($generated@@26 $generated@@43 $generated@@47) $generated@@48))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 ($generated@@26 $generated@@43 $generated@@47) $generated@@49))))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@46 $generated@@47 $generated@@48)))
))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@26 $generated@@43 $generated@@47)))
))))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 ($generated@@45 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@45 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@21 ($generated@@45 $generated@@53)) $generated@@3)
 :pattern ( ($generated@@45 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@29 $generated@@55 ($generated@@30 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@30 $generated@@55 $generated@@54))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@56 $generated@@67 $generated@@68 $generated@@69 ($generated@@63 $generated@@67 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@73 $generated@@70) $generated@@72 $generated@@73) $generated@@70)
 :weight 0
)) (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@79 $generated@@81) (= ($generated@@56 $generated@@74 $generated@@75 $generated@@76 ($generated@@63 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@80 $generated@@77) $generated@@81 $generated@@82) ($generated@@56 $generated@@74 $generated@@75 $generated@@76 $generated@@78 $generated@@81 $generated@@82)))
 :weight 0
)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (or (= $generated@@89 $generated@@91) (= ($generated@@56 $generated@@83 $generated@@84 $generated@@85 ($generated@@63 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86) $generated@@90 $generated@@91) ($generated@@56 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@90 $generated@@91)))
 :weight 0
)))) (= ($generated@@5 $generated@@57) 4)) (= ($generated@@5 $generated@@58) 5)) (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@60 $generated@@92 $generated@@93 ($generated@@64 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@94) $generated@@96) $generated@@94)
 :weight 0
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@60 $generated@@97 $generated@@98 ($generated@@64 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@60 $generated@@97 $generated@@98 $generated@@100 $generated@@102)))
 :weight 0
))) (= ($generated@@5 $generated@@61) 6)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@5 ($generated@@62 $generated@@103 $generated@@104)) 7))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@65 ($generated@@62 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@62 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@66 ($generated@@62 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@62 $generated@@107 $generated@@108))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 Bool) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@10 ($generated@@56 $generated@@57 $generated@@58 $generated@@6 ($generated@@59 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@113 $generated@@114))  (=> (and (or (not (= $generated@@113 $generated@@109)) (not true)) ($generated@@10 ($generated@@29 $generated@@6 ($generated@@60 $generated@@58 $generated@@61 ($generated@@60 $generated@@57 ($generated@@62 $generated@@58 $generated@@61) $generated@@110 $generated@@113) $generated@@111)))) $generated@@112))
 :pattern ( ($generated@@56 $generated@@57 $generated@@58 $generated@@6 ($generated@@59 $generated@@109 $generated@@110 $generated@@111 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@33 $generated@@115 ($generated@@45 $generated@@116)) (and (= ($generated@@30 $generated@@43 ($generated@@29 $generated@@43 $generated@@115)) $generated@@115) ($generated@@34 $generated@@43 ($generated@@29 $generated@@43 $generated@@115) ($generated@@45 $generated@@116))))
 :pattern ( ($generated@@33 $generated@@115 ($generated@@45 $generated@@116)))
)))
(assert (forall (($generated@@117 Int) ) (! (= ($generated@@30 $generated@@7 ($generated@@11 ($generated@@24 $generated@@117))) ($generated@@26 $generated@@61 ($generated@@30 $generated@@7 ($generated@@11 $generated@@117))))
 :pattern ( ($generated@@30 $generated@@7 ($generated@@11 ($generated@@24 $generated@@117))))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@30 $generated@@119 ($generated@@26 $generated@@119 $generated@@118)) ($generated@@26 $generated@@61 ($generated@@30 $generated@@119 $generated@@118)))
 :pattern ( ($generated@@30 $generated@@119 ($generated@@26 $generated@@119 $generated@@118)))
)))
(assert  (=> (<= 0 $generated@@41) (forall (($generated@@120 T@U) ) (!  (=> (or ($generated@@44 $generated@@120) (and (< 0 $generated@@41) (and ($generated@@34 $generated@@43 $generated@@120 ($generated@@45 $generated@@0)) (< 10 ($generated@@22 $generated@@120))))) (= ($generated@@42 $generated@@120) (forall (($generated@@121 Int) ) (! (forall (($generated@@122 Int) ($generated@@123 Int) )  (=> (= $generated@@123 (+ $generated@@121 $generated@@122)) (=> (and (and (<= ($generated@@24 0) $generated@@121) (< $generated@@121 $generated@@122)) (< $generated@@122 5)) (and (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 $generated@@120 $generated@@123))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 $generated@@120 $generated@@121)))) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 $generated@@120 $generated@@121))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 $generated@@120 $generated@@122))))))))
 :pattern ( ($generated@@29 $generated@@7 ($generated@@46 $generated@@120 $generated@@121)))
))))
 :pattern ( ($generated@@42 $generated@@120))
))))
(assert (forall (($generated@@124 T@U) ) (!  (=> (= ($generated@@22 $generated@@124) 0) (= $generated@@124 $generated@@23))
 :pattern ( ($generated@@22 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@34 $generated@@43 $generated@@125 ($generated@@45 $generated@@126)) (forall (($generated@@127 Int) ) (!  (=> (and (<= 0 $generated@@127) (< $generated@@127 ($generated@@22 $generated@@125))) ($generated@@33 ($generated@@46 $generated@@125 $generated@@127) $generated@@126))
 :pattern ( ($generated@@46 $generated@@125 $generated@@127))
)))
 :pattern ( ($generated@@34 $generated@@43 $generated@@125 ($generated@@45 $generated@@126)))
)))
(assert (forall (($generated@@128 T@U) ) (! ($generated@@34 $generated@@7 $generated@@128 $generated@@0)
 :pattern ( ($generated@@34 $generated@@7 $generated@@128 $generated@@0))
)))
(assert (forall (($generated@@129 T@U) ) (! ($generated@@34 $generated@@6 $generated@@129 $generated)
 :pattern ( ($generated@@34 $generated@@6 $generated@@129 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@130 () Int)
(declare-fun $generated@@131 () Int)
(declare-fun $generated@@132 () T@U)
(declare-fun $generated@@133 () Int)
(declare-fun $generated@@134 () Int)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@139 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@140 true))
(let (($generated@@141 true))
(let (($generated@@142  (=> (and (not (and (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@131)) (< $generated@@131 5))) (= (ControlFlow 0 10) 4)) $generated@@141)))
(let (($generated@@143  (=> (and (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@131)) (< $generated@@131 5)) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@130) (< $generated@@130 ($generated@@22 $generated@@132)))) (=> (and (<= 0 $generated@@130) (< $generated@@130 ($generated@@22 $generated@@132))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@131) (< $generated@@131 ($generated@@22 $generated@@132)))) (=> (and (<= 0 $generated@@131) (< $generated@@131 ($generated@@22 $generated@@132))) (=> (= (ControlFlow 0 7) 4) $generated@@141))))))))
(let (($generated@@144  (=> (not (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@131))) (and (=> (= (ControlFlow 0 12) 7) $generated@@143) (=> (= (ControlFlow 0 12) 10) $generated@@142)))))
(let (($generated@@145  (=> (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@131)) (and (=> (= (ControlFlow 0 11) 7) $generated@@143) (=> (= (ControlFlow 0 11) 10) $generated@@142)))))
(let (($generated@@146  (=> (< $generated@@130 ($generated@@24 0)) (and (=> (= (ControlFlow 0 14) 11) $generated@@145) (=> (= (ControlFlow 0 14) 12) $generated@@144)))))
(let (($generated@@147  (=> (<= ($generated@@24 0) $generated@@130) (and (=> (= (ControlFlow 0 13) 11) $generated@@145) (=> (= (ControlFlow 0 13) 12) $generated@@144)))))
(let (($generated@@148  (and (=> (= (ControlFlow 0 15) 13) $generated@@147) (=> (= (ControlFlow 0 15) 14) $generated@@146))))
(let (($generated@@149  (=> (forall (($generated@@150 Int) ($generated@@151 Int) )  (=> (= $generated@@151 (+ $generated@@130 $generated@@150)) (=> (and (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@150)) (< $generated@@150 5)) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 $generated@@132 $generated@@151))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 $generated@@132 $generated@@130))))))) (and (=> (= (ControlFlow 0 16) 15) $generated@@148) (=> (= (ControlFlow 0 16) 6) $generated@@140)))))
(let (($generated@@152  (=> (and (not (forall (($generated@@153 Int) ($generated@@154 Int) )  (=> (= $generated@@154 (+ $generated@@130 $generated@@153)) (=> (and (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@153)) (< $generated@@153 5)) (= ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 $generated@@132 $generated@@154))) ($generated@@12 ($generated@@29 $generated@@7 ($generated@@46 $generated@@132 $generated@@130)))))))) (= (ControlFlow 0 5) 4)) $generated@@141)))
(let (($generated@@155  (=> (not (and (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@133)) (< $generated@@133 5))) (and (=> (= (ControlFlow 0 21) 16) $generated@@149) (=> (= (ControlFlow 0 21) 5) $generated@@152)))))
(let (($generated@@156  (=> (and (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@133)) (< $generated@@133 5)) (and (=> (= (ControlFlow 0 18) (- 0 20)) (and (<= 0 $generated@@134) (< $generated@@134 ($generated@@22 $generated@@132)))) (=> (and (<= 0 $generated@@134) (< $generated@@134 ($generated@@22 $generated@@132))) (and (=> (= (ControlFlow 0 18) (- 0 19)) (and (<= 0 $generated@@130) (< $generated@@130 ($generated@@22 $generated@@132)))) (=> (and (<= 0 $generated@@130) (< $generated@@130 ($generated@@22 $generated@@132))) (and (=> (= (ControlFlow 0 18) 16) $generated@@149) (=> (= (ControlFlow 0 18) 5) $generated@@152)))))))))
(let (($generated@@157  (=> (not (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@133))) (and (=> (= (ControlFlow 0 23) 18) $generated@@156) (=> (= (ControlFlow 0 23) 21) $generated@@155)))))
(let (($generated@@158  (=> (and (<= ($generated@@24 0) $generated@@130) (< $generated@@130 $generated@@133)) (and (=> (= (ControlFlow 0 22) 18) $generated@@156) (=> (= (ControlFlow 0 22) 21) $generated@@155)))))
(let (($generated@@159  (=> (< $generated@@130 ($generated@@24 0)) (and (=> (= (ControlFlow 0 25) 22) $generated@@158) (=> (= (ControlFlow 0 25) 23) $generated@@157)))))
(let (($generated@@160  (=> (<= ($generated@@24 0) $generated@@130) (and (=> (= (ControlFlow 0 24) 22) $generated@@158) (=> (= (ControlFlow 0 24) 23) $generated@@157)))))
(let (($generated@@161  (=> (= $generated@@134 (+ $generated@@130 $generated@@133)) (and (=> (= (ControlFlow 0 26) 24) $generated@@160) (=> (= (ControlFlow 0 26) 25) $generated@@159)))))
(let (($generated@@162  (=> (or (not (= $generated@@134 (+ $generated@@130 $generated@@133))) (not true)) (and (=> (= (ControlFlow 0 17) 16) $generated@@149) (=> (= (ControlFlow 0 17) 5) $generated@@152)))))
(let (($generated@@163  (and (=> (= (ControlFlow 0 27) 26) $generated@@161) (=> (= (ControlFlow 0 27) 17) $generated@@162))))
(let (($generated@@164 true))
(let (($generated@@165  (and (=> (= (ControlFlow 0 28) 27) $generated@@163) (=> (= (ControlFlow 0 28) 3) $generated@@164))))
(let (($generated@@166 true))
(let (($generated@@167 true))
(let (($generated@@168  (=> (and (= $generated@@135 ($generated@@59 $generated@@136 $generated@@137 $generated@@4 false)) (< 10 ($generated@@22 $generated@@132))) (and (and (=> (= (ControlFlow 0 29) 1) $generated@@167) (=> (= (ControlFlow 0 29) 28) $generated@@165)) (=> (= (ControlFlow 0 29) 2) $generated@@166)))))
(let (($generated@@169  (=> (and (and (and ($generated@@138 $generated@@137) ($generated@@139 $generated@@137)) ($generated@@34 $generated@@43 $generated@@132 ($generated@@45 $generated@@0))) (and (= 0 $generated@@41) (= (ControlFlow 0 30) 29))) $generated@@168)))
$generated@@169)))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
