(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated (Int) Int)
(declare-fun $generated@@0 (T@T) Int)
(declare-fun $generated@@1 () T@T)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 (Bool) T@U)
(declare-fun $generated@@5 (T@U) Bool)
(declare-fun $generated@@6 (Int) T@U)
(declare-fun $generated@@7 (T@U) Int)
(declare-fun $generated@@8 (Real) T@U)
(declare-fun $generated@@9 (T@U) Real)
(declare-fun $generated@@17 (T@T T@U) T@U)
(declare-fun $generated@@20 (T@T T@U) T@U)
(declare-fun $generated@@21 (T@T T@U) T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U Bool Int Int) Int)
(declare-fun $generated@@26 (Int Int) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@97 (Int Int) Int)
(declare-fun $generated@@100 (Bool Int) Bool)
(declare-fun $generated@@101 (Int) Bool)
(declare-fun $generated@@103 (Int Int) Int)
(declare-fun $generated@@106 () Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@0 $generated@@1) 0) (= ($generated@@0 $generated@@2) 1)) (= ($generated@@0 $generated@@3) 2)) (forall (($generated@@10 Bool) ) (! (= ($generated@@5 ($generated@@4 $generated@@10)) $generated@@10)
 :pattern ( ($generated@@4 $generated@@10))
))) (forall (($generated@@11 T@U) ) (! (= ($generated@@4 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 Int) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Real) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))))
(assert (forall (($generated@@16 Int) ) (! (= ($generated $generated@@16) $generated@@16)
 :pattern ( ($generated $generated@@16))
)))
(assert (forall (($generated@@18 T@U) ($generated@@19 T@T) ) (! (= ($generated@@17 $generated@@19 $generated@@18) $generated@@18)
 :pattern ( ($generated@@17 $generated@@19 $generated@@18))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@T) ) (! (= ($generated@@21 $generated@@23 ($generated@@20 $generated@@23 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@20 $generated@@23 $generated@@22))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@27 T@U) ($generated@@28 Bool) ($generated@@29 Int) ($generated@@30 Int) ) (!  (=> (or ($generated@@26 $generated@@29 $generated@@30) (and (< 0 $generated@@24) (and (<= ($generated 0) $generated@@29) (<= ($generated 0) $generated@@30)))) (<= ($generated 0) ($generated@@25 $generated@@27 $generated@@28 $generated@@29 $generated@@30)))
 :pattern ( ($generated@@25 $generated@@27 $generated@@28 $generated@@29 $generated@@30))
))))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@20 $generated@@32 ($generated@@21 $generated@@32 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@21 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Bool) ($generated@@36 Int) ($generated@@37 Int) ) (! (= ($generated@@25 ($generated@@33 $generated@@34) $generated@@35 $generated@@36 $generated@@37) ($generated@@25 $generated@@34 $generated@@35 $generated@@36 $generated@@37))
 :pattern ( ($generated@@25 ($generated@@33 $generated@@34) $generated@@35 $generated@@36 $generated@@37))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@38 $generated@@49 $generated@@50 $generated@@51 ($generated@@45 $generated@@49 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@55 $generated@@52) $generated@@54 $generated@@55) $generated@@52)
 :weight 0
)) (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@61 $generated@@63) (= ($generated@@38 $generated@@56 $generated@@57 $generated@@58 ($generated@@45 $generated@@56 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@62 $generated@@59) $generated@@63 $generated@@64) ($generated@@38 $generated@@56 $generated@@57 $generated@@58 $generated@@60 $generated@@63 $generated@@64)))
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (or (= $generated@@71 $generated@@73) (= ($generated@@38 $generated@@65 $generated@@66 $generated@@67 ($generated@@45 $generated@@65 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@71 $generated@@68) $generated@@72 $generated@@73) ($generated@@38 $generated@@65 $generated@@66 $generated@@67 $generated@@69 $generated@@72 $generated@@73)))
 :weight 0
)))) (= ($generated@@0 $generated@@39) 3)) (= ($generated@@0 $generated@@40) 4)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@42 $generated@@74 $generated@@75 ($generated@@46 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@78) $generated@@76)
 :weight 0
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@83 $generated@@84) (= ($generated@@42 $generated@@79 $generated@@80 ($generated@@46 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@84) ($generated@@42 $generated@@79 $generated@@80 $generated@@82 $generated@@84)))
 :weight 0
))) (= ($generated@@0 $generated@@43) 5)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@0 ($generated@@44 $generated@@85 $generated@@86)) 6))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@44 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@48 ($generated@@44 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@44 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Bool) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@5 ($generated@@38 $generated@@39 $generated@@40 $generated@@1 ($generated@@41 $generated@@91 $generated@@92 $generated@@93 $generated@@94) $generated@@95 $generated@@96))  (=> (and (or (not (= $generated@@95 $generated@@91)) (not true)) ($generated@@5 ($generated@@20 $generated@@1 ($generated@@42 $generated@@40 $generated@@43 ($generated@@42 $generated@@39 ($generated@@44 $generated@@40 $generated@@43) $generated@@92 $generated@@95) $generated@@93)))) $generated@@94))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 $generated@@1 ($generated@@41 $generated@@91 $generated@@92 $generated@@93 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 Int) ($generated@@99 Int) ) (! (= ($generated@@97 $generated@@98 $generated@@99) (mod $generated@@98 $generated@@99))
 :pattern ( ($generated@@97 $generated@@98 $generated@@99))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@102 Int) ) (!  (=> (or ($generated@@101 $generated@@102) (and (< 0 $generated@@24) (<= ($generated 0) $generated@@102))) (= ($generated@@100 true $generated@@102) (= ($generated@@97 $generated@@102 ($generated 2)) ($generated 0))))
 :pattern ( ($generated@@100 true $generated@@102))
))))
(assert (forall (($generated@@104 Int) ($generated@@105 Int) ) (! (= ($generated@@103 $generated@@104 $generated@@105) (* $generated@@104 $generated@@105))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@107 T@U) ($generated@@108 Int) ($generated@@109 Int) ) (!  (=> (or ($generated@@26 ($generated $generated@@108) ($generated $generated@@109)) (and (< 0 $generated@@24) (and (<= ($generated 0) $generated@@108) (<= ($generated 0) $generated@@109)))) (and (=> (or (not (= ($generated $generated@@109) ($generated 0))) (not true)) (=> (or (not (= ($generated $generated@@108) ($generated 0))) (not true)) (and ($generated@@26 ($generated (- $generated@@108 1)) ($generated $generated@@109)) ($generated@@26 ($generated (- $generated@@108 1)) ($generated (- $generated@@109 1)))))) (= ($generated@@25 ($generated@@33 $generated@@107) true ($generated $generated@@108) ($generated $generated@@109)) (ite (= ($generated $generated@@109) ($generated 0)) 1 (ite (= ($generated $generated@@108) ($generated 0)) 0 (+ ($generated@@25 ($generated@@33 $generated@@107) $generated@@106 ($generated (- $generated@@108 1)) ($generated $generated@@109)) ($generated@@25 ($generated@@33 $generated@@107) $generated@@106 ($generated (- $generated@@108 1)) ($generated (- $generated@@109 1)))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@33 $generated@@107) true ($generated $generated@@108) ($generated $generated@@109)))
))))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 Int) ) (!  (=> (or ($generated@@26 $generated@@111 $generated@@112) (and (< 0 $generated@@24) (and (<= ($generated 0) $generated@@111) (<= ($generated 0) $generated@@112)))) (and (=> (or (not (= $generated@@112 ($generated 0))) (not true)) (=> (or (not (= $generated@@111 ($generated 0))) (not true)) (and ($generated@@26 (- $generated@@111 1) $generated@@112) ($generated@@26 (- $generated@@111 1) (- $generated@@112 1))))) (= ($generated@@25 ($generated@@33 $generated@@110) true $generated@@111 $generated@@112) (ite (= $generated@@112 ($generated 0)) 1 (ite (= $generated@@111 ($generated 0)) 0 (+ ($generated@@25 $generated@@110 $generated@@106 (- $generated@@111 1) $generated@@112) ($generated@@25 $generated@@110 $generated@@106 (- $generated@@111 1) (- $generated@@112 1))))))))
 :pattern ( ($generated@@25 ($generated@@33 $generated@@110) true $generated@@111 $generated@@112))
))))
(assert (forall (($generated@@113 Int) ) (! (= ($generated@@21 $generated@@2 ($generated@@6 ($generated $generated@@113))) ($generated@@17 $generated@@43 ($generated@@21 $generated@@2 ($generated@@6 $generated@@113))))
 :pattern ( ($generated@@21 $generated@@2 ($generated@@6 ($generated $generated@@113))))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@21 $generated@@115 ($generated@@17 $generated@@115 $generated@@114)) ($generated@@17 $generated@@43 ($generated@@21 $generated@@115 $generated@@114)))
 :pattern ( ($generated@@21 $generated@@115 ($generated@@17 $generated@@115 $generated@@114)))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@116 Int) ) (!  (=> (or ($generated@@101 ($generated $generated@@116)) (and (< 0 $generated@@24) (<= ($generated 0) $generated@@116))) (= ($generated@@100 true ($generated $generated@@116)) (= ($generated ($generated@@97 $generated@@116 ($generated 2))) ($generated 0))))
 :weight 3
 :pattern ( ($generated@@100 true ($generated $generated@@116)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@117 () T@U)
(declare-fun $generated@@118 () T@U)
(declare-fun $generated@@119 () T@U)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@122 () T@U)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@124 () Int)
(declare-fun $generated@@125 () Int)
(declare-fun $generated@@126 () T@U)
(declare-fun $generated@@127 () Bool)
(declare-fun $generated@@128 () T@U)
(declare-fun $generated@@129 () T@U)
(declare-fun $generated@@130 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@131  (=> (= $generated@@117 ($generated@@41 $generated@@118 $generated@@119 $generated@@120 false)) (=> (and (and (and (and (and ($generated@@121 $generated@@122) ($generated@@123 $generated@@122)) (and ($generated@@26 ($generated@@103 ($generated 2) $generated@@124) (+ ($generated@@103 ($generated 2) $generated@@125) 1)) ($generated@@101 ($generated@@25 ($generated@@33 $generated@@126) $generated@@106 ($generated@@103 ($generated 2) $generated@@124) (+ ($generated@@103 ($generated 2) $generated@@125) 1))))) (and (and ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 ($generated@@103 ($generated 2) $generated@@124) (+ ($generated@@103 ($generated 2) $generated@@125) 1))) (= $generated@@119 $generated@@122)) (and ($generated@@121 $generated@@128) ($generated@@123 $generated@@128)))) (and (and (and ($generated@@26 ($generated@@103 ($generated 2) $generated@@124) ($generated@@103 ($generated 2) $generated@@125)) ($generated@@101 ($generated@@25 ($generated@@33 $generated@@126) $generated@@106 ($generated@@103 ($generated 2) $generated@@124) ($generated@@103 ($generated 2) $generated@@125)))) (and ($generated@@26 $generated@@124 $generated@@125) ($generated@@101 ($generated@@25 ($generated@@33 $generated@@126) $generated@@106 $generated@@124 $generated@@125)))) (and (and (= ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 ($generated@@103 ($generated 2) $generated@@124) ($generated@@103 ($generated 2) $generated@@125))) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 $generated@@124 $generated@@125))) (= $generated@@122 $generated@@128)) (and ($generated@@121 $generated@@129) ($generated@@123 $generated@@129))))) (and (and (and (and ($generated@@26 (+ ($generated@@103 ($generated 2) $generated@@124) 1) (+ ($generated@@103 ($generated 2) $generated@@125) 1)) ($generated@@101 ($generated@@25 ($generated@@33 $generated@@126) $generated@@106 (+ ($generated@@103 ($generated 2) $generated@@124) 1) (+ ($generated@@103 ($generated 2) $generated@@125) 1)))) (and ($generated@@26 $generated@@124 $generated@@125) ($generated@@101 ($generated@@25 ($generated@@33 $generated@@126) $generated@@106 $generated@@124 $generated@@125)))) (and (and (= ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 (+ ($generated@@103 ($generated 2) $generated@@124) 1) (+ ($generated@@103 ($generated 2) $generated@@125) 1))) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 $generated@@124 $generated@@125))) (= $generated@@128 $generated@@129)) (and ($generated@@121 $generated@@130) ($generated@@123 $generated@@130)))) (and (and (and ($generated@@26 (+ ($generated@@103 ($generated 2) $generated@@124) 1) ($generated@@103 ($generated 2) $generated@@125)) ($generated@@101 ($generated@@25 ($generated@@33 $generated@@126) $generated@@106 (+ ($generated@@103 ($generated 2) $generated@@124) 1) ($generated@@103 ($generated 2) $generated@@125)))) (and ($generated@@26 $generated@@124 $generated@@125) ($generated@@101 ($generated@@25 ($generated@@33 $generated@@126) $generated@@106 $generated@@124 $generated@@125)))) (and (= ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 (+ ($generated@@103 ($generated 2) $generated@@124) 1) ($generated@@103 ($generated 2) $generated@@125))) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 $generated@@124 $generated@@125))) (= $generated@@129 $generated@@130))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 ($generated@@103 ($generated 2) $generated@@124) (+ ($generated@@103 ($generated 2) $generated@@125) 1)))) (=> ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 ($generated@@103 ($generated 2) $generated@@124) (+ ($generated@@103 ($generated 2) $generated@@125) 1))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 ($generated@@103 ($generated 2) $generated@@124) ($generated@@103 ($generated 2) $generated@@125))) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 $generated@@124 $generated@@125)))) (=> (= ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 ($generated@@103 ($generated 2) $generated@@124) ($generated@@103 ($generated 2) $generated@@125))) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 $generated@@124 $generated@@125))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 (+ ($generated@@103 ($generated 2) $generated@@124) 1) (+ ($generated@@103 ($generated 2) $generated@@125) 1))) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 $generated@@124 $generated@@125)))) (=> (= ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 (+ ($generated@@103 ($generated 2) $generated@@124) 1) (+ ($generated@@103 ($generated 2) $generated@@125) 1))) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 $generated@@124 $generated@@125))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 (+ ($generated@@103 ($generated 2) $generated@@124) 1) ($generated@@103 ($generated 2) $generated@@125))) ($generated@@100 $generated@@127 ($generated@@25 ($generated@@33 ($generated@@33 $generated@@126)) $generated@@106 $generated@@124 $generated@@125))))))))))))))
(let (($generated@@132  (=> (and ($generated@@121 $generated@@119) ($generated@@123 $generated@@119)) (=> (and (and (<= ($generated 0) $generated@@124) (<= ($generated 0) $generated@@125)) (and (= 3 $generated@@24) (= (ControlFlow 0 6) 2))) $generated@@131))))
$generated@@132)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
