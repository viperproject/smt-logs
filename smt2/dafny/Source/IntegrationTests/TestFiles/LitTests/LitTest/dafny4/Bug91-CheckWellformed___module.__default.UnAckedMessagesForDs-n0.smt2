(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U Int) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 (T@U Int) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@61 (T@U) Int)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@88 (T@U Int) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@128 (T@U) Int)
(declare-fun $generated@@129 (T@U) Int)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@146 (T@T T@T) T@T)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@192 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(declare-fun $generated@@224 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert  (and (and (and (and (= ($generated@@8 $generated@@27) 3) (= ($generated@@8 $generated@@39) 4)) (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@40 $generated@@44 $generated@@45 ($generated@@43 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
))) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@40 $generated@@49 $generated@@50 ($generated@@43 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@40 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@8 $generated@@41) 5)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@55 T@U) ($generated@@56 Int) ) (!  (=> (or ($generated@@29 ($generated@@26 $generated@@27 $generated@@55) ($generated@@28 $generated@@56)) (and (< 1 $generated@@24) (and ($generated@@30 $generated@@27 $generated@@55 ($generated@@31 $generated ($generated@@32 $generated))) ($generated@@33 ($generated@@34 $generated@@55) ($generated@@35 $generated@@10 ($generated@@14 $generated@@56)))))) (= ($generated@@25 ($generated@@26 $generated@@27 $generated@@55) ($generated@@28 $generated@@56)) ($generated@@36 ($generated@@37 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 ($generated@@26 $generated@@27 $generated@@55)) ($generated@@35 $generated@@10 ($generated@@14 ($generated@@28 $generated@@56))))) ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@55) ($generated@@35 $generated@@10 ($generated@@14 $generated@@56))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@26 $generated@@27 $generated@@55) ($generated@@28 $generated@@56)))
))))
(assert (= ($generated@@57 $generated) $generated@@0))
(assert (forall (($generated@@60 T@U) ) (!  (not ($generated@@58 $generated@@59 $generated@@60))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60))
)))
(assert (= ($generated@@61 $generated@@59) 0))
(assert (= ($generated@@8 $generated@@62) 6))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@30 $generated@@62 ($generated@@63 $generated@@68 $generated@@69) ($generated@@64 $generated@@66 $generated@@67))  (and ($generated@@65 $generated@@68 $generated@@66) ($generated@@65 $generated@@69 $generated@@67)))
 :pattern ( ($generated@@30 $generated@@62 ($generated@@63 $generated@@68 $generated@@69) ($generated@@64 $generated@@66 $generated@@67)))
)))
(assert (forall (($generated@@70 Int) ) (! (= ($generated@@28 $generated@@70) $generated@@70)
 :pattern ( ($generated@@28 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@26 $generated@@72 $generated@@71) $generated@@71)
 :pattern ( ($generated@@26 $generated@@72 $generated@@71))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@73 T@U) ($generated@@74 Int) ) (!  (=> (or ($generated@@29 $generated@@73 $generated@@74) (and (< 1 $generated@@24) (and ($generated@@30 $generated@@27 $generated@@73 ($generated@@31 $generated ($generated@@32 $generated))) ($generated@@33 ($generated@@34 $generated@@73) ($generated@@35 $generated@@10 ($generated@@14 $generated@@74)))))) (= ($generated@@25 $generated@@73 $generated@@74) ($generated@@36 ($generated@@37 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@73) ($generated@@35 $generated@@10 ($generated@@14 $generated@@74)))) ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@73) ($generated@@35 $generated@@10 ($generated@@14 $generated@@74))))))))
 :pattern ( ($generated@@25 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@35 $generated@@76 ($generated@@38 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@38 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@33 ($generated@@36 $generated@@77) $generated@@78) ($generated@@13 ($generated@@40 $generated@@41 $generated@@9 $generated@@77 $generated@@78)))
 :pattern ( ($generated@@33 ($generated@@36 $generated@@77) $generated@@78))
)))
(assert (= ($generated@@8 $generated@@79) 7))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@30 $generated@@79 $generated@@81 ($generated@@80 $generated@@82)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@33 $generated@@81 $generated@@83) ($generated@@65 $generated@@83 $generated@@82))
 :pattern ( ($generated@@33 $generated@@81 $generated@@83))
)))
 :pattern ( ($generated@@30 $generated@@79 $generated@@81 ($generated@@80 $generated@@82)))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@13 ($generated@@40 $generated@@41 $generated@@9 ($generated@@37 $generated@@84 $generated@@85) $generated@@86)) (exists (($generated@@87 Int) ) (!  (and ($generated@@58 $generated@@84 ($generated@@35 $generated@@10 ($generated@@14 $generated@@87))) (= $generated@@86 ($generated@@35 $generated@@10 ($generated@@14 $generated@@87))))
 :pattern ( ($generated@@58 $generated@@85 ($generated@@35 $generated@@10 ($generated@@14 $generated@@87))))
)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@9 ($generated@@37 $generated@@84 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@58 $generated@@89 $generated@@90) (exists (($generated@@91 Int) ) (!  (and (and (<= 0 $generated@@91) (< $generated@@91 ($generated@@61 $generated@@89))) (= ($generated@@88 $generated@@89 $generated@@91) $generated@@90))
 :pattern ( ($generated@@88 $generated@@89 $generated@@91))
)))
 :pattern ( ($generated@@58 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@65 $generated@@92 $generated) (and (= ($generated@@35 $generated@@10 ($generated@@38 $generated@@10 $generated@@92)) $generated@@92) ($generated@@30 $generated@@10 ($generated@@38 $generated@@10 $generated@@92) $generated)))
 :pattern ( ($generated@@65 $generated@@92 $generated))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@65 ($generated@@35 $generated@@95 $generated@@93) $generated@@94) ($generated@@30 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@65 ($generated@@35 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ) (! (<= 0 ($generated@@61 $generated@@96))
 :pattern ( ($generated@@61 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 ($generated@@31 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@31 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 ($generated@@31 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@31 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@57 ($generated@@31 $generated@@103 $generated@@104)) $generated@@3)
 :pattern ( ($generated@@31 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@63 $generated@@106 $generated@@107)) $generated@@5)
 :pattern ( ($generated@@63 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@64 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@64 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 ($generated@@64 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@64 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@114 ($generated@@63 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@63 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@117 ($generated@@63 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@63 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@80 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@80 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@57 ($generated@@80 $generated@@122)) $generated@@1)
 :pattern ( ($generated@@80 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@32 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@32 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@57 ($generated@@32 $generated@@125)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@38 $generated@@127 ($generated@@35 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@35 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (< ($generated@@128 $generated@@130) ($generated@@129 ($generated@@63 $generated@@130 $generated@@131)))
 :pattern ( ($generated@@63 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (< ($generated@@128 $generated@@133) ($generated@@129 ($generated@@63 $generated@@132 $generated@@133)))
 :pattern ( ($generated@@63 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (not ($generated@@33 ($generated@@34 $generated@@134) $generated@@135))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@65 $generated@@136 ($generated@@31 $generated@@137 $generated@@138)) (and (= ($generated@@35 $generated@@27 ($generated@@38 $generated@@27 $generated@@136)) $generated@@136) ($generated@@30 $generated@@27 ($generated@@38 $generated@@27 $generated@@136) ($generated@@31 $generated@@137 $generated@@138))))
 :pattern ( ($generated@@65 $generated@@136 ($generated@@31 $generated@@137 $generated@@138)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@65 $generated@@141 ($generated@@64 $generated@@139 $generated@@140)) (and (= ($generated@@35 $generated@@62 ($generated@@38 $generated@@62 $generated@@141)) $generated@@141) ($generated@@30 $generated@@62 ($generated@@38 $generated@@62 $generated@@141) ($generated@@64 $generated@@139 $generated@@140))))
 :pattern ( ($generated@@65 $generated@@141 ($generated@@64 $generated@@139 $generated@@140)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@142 $generated@@150 $generated@@151 $generated@@152 ($generated@@147 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@142 $generated@@157 $generated@@158 $generated@@159 ($generated@@147 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@142 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@142 $generated@@166 $generated@@167 $generated@@168 ($generated@@147 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@142 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))) (= ($generated@@8 $generated@@143) 8)) (= ($generated@@8 $generated@@144) 9)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (= ($generated@@8 ($generated@@146 $generated@@175 $generated@@176)) 10))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@148 ($generated@@146 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@146 $generated@@177 $generated@@178))
))) (forall (($generated@@179 T@T) ($generated@@180 T@T) ) (! (= ($generated@@149 ($generated@@146 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@146 $generated@@179 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 Bool) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@13 ($generated@@142 $generated@@143 $generated@@144 $generated@@9 ($generated@@145 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))  (=> (and (or (not (= $generated@@185 $generated@@181)) (not true)) ($generated@@13 ($generated@@38 $generated@@9 ($generated@@40 $generated@@144 $generated@@41 ($generated@@40 $generated@@143 ($generated@@146 $generated@@144 $generated@@41) $generated@@182 $generated@@185) $generated@@183)))) $generated@@184))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144 $generated@@9 ($generated@@145 $generated@@181 $generated@@182 $generated@@183 $generated@@184) $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (and (= ($generated@@57 ($generated@@64 $generated@@188 $generated@@189)) $generated@@6) (= ($generated@@187 ($generated@@64 $generated@@188 $generated@@189)) $generated@@7))
 :pattern ( ($generated@@64 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (!  (or (= $generated@@190 $generated@@134) (exists (($generated@@191 T@U) ) ($generated@@33 ($generated@@34 $generated@@190) $generated@@191)))
 :pattern ( ($generated@@34 $generated@@190))
)))
(assert (forall (($generated@@193 T@U) ) (!  (or (= $generated@@193 $generated@@134) (exists (($generated@@194 T@U) ) ($generated@@33 ($generated@@192 $generated@@193) $generated@@194)))
 :pattern ( ($generated@@192 $generated@@193))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@33 ($generated@@195 $generated@@196) $generated@@197)  (and ($generated@@33 ($generated@@34 $generated@@196) ($generated@@114 ($generated@@38 $generated@@62 $generated@@197))) (= ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@196) ($generated@@114 ($generated@@38 $generated@@62 $generated@@197))) ($generated@@117 ($generated@@38 $generated@@62 $generated@@197)))))
 :pattern ( ($generated@@33 ($generated@@195 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@33 ($generated@@192 $generated@@198) $generated@@199) (exists (($generated@@200 T@U) ) (!  (and ($generated@@33 ($generated@@34 $generated@@198) $generated@@200) (= $generated@@199 ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@198) $generated@@200)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@198) $generated@@200))
 :pattern ( ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@198) $generated@@200))
)))
 :pattern ( ($generated@@33 ($generated@@192 $generated@@198) $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@128 ($generated@@35 $generated@@62 $generated@@201)) ($generated@@129 $generated@@201))
 :pattern ( ($generated@@128 ($generated@@35 $generated@@62 $generated@@201)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@65 $generated@@202 ($generated@@80 $generated@@203)) (and (= ($generated@@35 $generated@@79 ($generated@@38 $generated@@79 $generated@@202)) $generated@@202) ($generated@@30 $generated@@79 ($generated@@38 $generated@@79 $generated@@202) ($generated@@80 $generated@@203))))
 :pattern ( ($generated@@65 $generated@@202 ($generated@@80 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@65 $generated@@204 ($generated@@32 $generated@@205)) (and (= ($generated@@35 $generated@@39 ($generated@@38 $generated@@39 $generated@@204)) $generated@@204) ($generated@@30 $generated@@39 ($generated@@38 $generated@@39 $generated@@204) ($generated@@32 $generated@@205))))
 :pattern ( ($generated@@65 $generated@@204 ($generated@@32 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@30 $generated@@27 $generated@@206 ($generated@@31 $generated@@207 $generated@@208)) (forall (($generated@@209 T@U) ) (!  (=> ($generated@@33 ($generated@@34 $generated@@206) $generated@@209) (and ($generated@@65 ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@206) $generated@@209) $generated@@208) ($generated@@65 $generated@@209 $generated@@207)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@206) $generated@@209))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@206) $generated@@209))
)))
 :pattern ( ($generated@@30 $generated@@27 $generated@@206 ($generated@@31 $generated@@207 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@63 ($generated@@26 $generated@@41 $generated@@210) ($generated@@26 $generated@@41 $generated@@211)) ($generated@@26 $generated@@62 ($generated@@63 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@63 ($generated@@26 $generated@@41 $generated@@210) ($generated@@26 $generated@@41 $generated@@211)))
)))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@35 $generated@@10 ($generated@@14 ($generated@@28 $generated@@212))) ($generated@@26 $generated@@41 ($generated@@35 $generated@@10 ($generated@@14 $generated@@212))))
 :pattern ( ($generated@@35 $generated@@10 ($generated@@14 ($generated@@28 $generated@@212))))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@T) ) (! (= ($generated@@35 $generated@@214 ($generated@@26 $generated@@214 $generated@@213)) ($generated@@26 $generated@@41 ($generated@@35 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@35 $generated@@214 ($generated@@26 $generated@@214 $generated@@213)))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@215 T@U) ($generated@@216 Int) ) (!  (=> (or ($generated@@29 $generated@@215 $generated@@216) (and (< 1 $generated@@24) (and ($generated@@30 $generated@@27 $generated@@215 ($generated@@31 $generated ($generated@@32 $generated))) ($generated@@33 ($generated@@34 $generated@@215) ($generated@@35 $generated@@10 ($generated@@14 $generated@@216)))))) ($generated@@30 $generated@@79 ($generated@@25 $generated@@215 $generated@@216) ($generated@@80 $generated)))
 :pattern ( ($generated@@25 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= ($generated@@61 $generated@@217) 0) (= $generated@@217 $generated@@59))
 :pattern ( ($generated@@61 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@30 $generated@@39 $generated@@218 ($generated@@32 $generated@@219)) (forall (($generated@@220 Int) ) (!  (=> (and (<= 0 $generated@@220) (< $generated@@220 ($generated@@61 $generated@@218))) ($generated@@65 ($generated@@88 $generated@@218 $generated@@220) $generated@@219))
 :pattern ( ($generated@@88 $generated@@218 $generated@@220))
)))
 :pattern ( ($generated@@30 $generated@@39 $generated@@218 ($generated@@32 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ) (!  (or (= $generated@@221 $generated@@134) (exists (($generated@@222 T@U) ($generated@@223 T@U) ) ($generated@@33 ($generated@@195 $generated@@221) ($generated@@35 $generated@@62 ($generated@@63 $generated@@222 $generated@@223)))))
 :pattern ( ($generated@@195 $generated@@221))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 Int) ) (!  (=> (and (<= 0 $generated@@226) (< $generated@@226 ($generated@@61 $generated@@225))) (< ($generated@@129 ($generated@@38 $generated@@62 ($generated@@88 $generated@@225 $generated@@226))) ($generated@@224 $generated@@225)))
 :pattern ( ($generated@@129 ($generated@@38 $generated@@62 ($generated@@88 $generated@@225 $generated@@226))))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> ($generated@@30 $generated@@27 $generated@@227 ($generated@@31 $generated@@228 $generated@@229)) (and (and ($generated@@30 $generated@@79 ($generated@@34 $generated@@227) ($generated@@80 $generated@@228)) ($generated@@30 $generated@@79 ($generated@@192 $generated@@227) ($generated@@80 $generated@@229))) ($generated@@30 $generated@@79 ($generated@@195 $generated@@227) ($generated@@80 ($generated@@64 $generated@@228 $generated@@229)))))
 :pattern ( ($generated@@30 $generated@@27 $generated@@227 ($generated@@31 $generated@@228 $generated@@229)))
)))
(assert (forall (($generated@@230 T@U) ) (! ($generated@@30 $generated@@10 $generated@@230 $generated)
 :pattern ( ($generated@@30 $generated@@10 $generated@@230 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@238 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@239 true))
(let (($generated@@240  (=> (and (not ($generated@@58 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@231) ($generated@@35 $generated@@10 ($generated@@14 $generated@@232)))) ($generated@@35 $generated@@10 ($generated@@14 $generated@@233)))) (= (ControlFlow 0 5) 3)) $generated@@239)))
(let (($generated@@241  (=> (and ($generated@@58 ($generated@@38 $generated@@39 ($generated@@40 $generated@@41 $generated@@41 ($generated@@42 $generated@@231) ($generated@@35 $generated@@10 ($generated@@14 $generated@@232)))) ($generated@@35 $generated@@10 ($generated@@14 $generated@@233))) (= (ControlFlow 0 4) 3)) $generated@@239)))
(let (($generated@@242  (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@33 ($generated@@34 $generated@@231) ($generated@@35 $generated@@10 ($generated@@14 $generated@@232)))) (=> ($generated@@33 ($generated@@34 $generated@@231) ($generated@@35 $generated@@10 ($generated@@14 $generated@@232))) (and (=> (= (ControlFlow 0 6) 4) $generated@@241) (=> (= (ControlFlow 0 6) 5) $generated@@240))))))
(let (($generated@@243 true))
(let (($generated@@244 true))
(let (($generated@@245  (=> (and (= $generated@@234 ($generated@@145 $generated@@235 $generated@@236 $generated@@4 false)) ($generated@@33 ($generated@@34 $generated@@231) ($generated@@35 $generated@@10 ($generated@@14 $generated@@232)))) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@244) (=> (= (ControlFlow 0 8) 6) $generated@@242)) (=> (= (ControlFlow 0 8) 2) $generated@@243)))))
(let (($generated@@246  (=> (and (and (and ($generated@@237 $generated@@236) ($generated@@238 $generated@@236)) ($generated@@30 $generated@@27 $generated@@231 ($generated@@31 $generated ($generated@@32 $generated)))) (and (= 1 $generated@@24) (= (ControlFlow 0 9) 8))) $generated@@245)))
$generated@@246)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
