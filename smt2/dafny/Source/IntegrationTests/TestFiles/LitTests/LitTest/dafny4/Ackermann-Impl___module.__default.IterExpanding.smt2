(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@51 (Int) Int)
(declare-fun $generated@@55 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U Int) Int)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U Int) Bool)
(declare-fun $generated@@72 (T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@T T@T) T@T)
(declare-fun $generated@@149 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@184 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@186 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@28) 3))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@30 ($generated@@27 $generated@@28 $generated@@37)) (and (< 0 $generated@@25) (and ($generated@@29 $generated@@36) ($generated@@31 $generated@@28 $generated@@37 ($generated@@32 $generated $generated))))) (= ($generated@@26 ($generated@@27 $generated@@28 $generated@@37)) (forall (($generated@@38 Int) ) (! (< $generated@@38 ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@36 ($generated@@27 $generated@@28 $generated@@37) ($generated@@35 $generated@@10 ($generated@@14 $generated@@38))))))
 :pattern ( ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@36 $generated@@37 ($generated@@35 $generated@@10 ($generated@@14 $generated@@38)))))
))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@28 $generated@@37)) ($generated@@29 $generated@@36))
))))
(assert (forall (($generated@@41 T@U) ) (!  (not ($generated@@39 $generated@@40 $generated@@41))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@28 $generated@@44 ($generated@@42 $generated@@45 $generated@@46)) (forall (($generated@@49 T@U) ) (!  (=> ($generated@@43 $generated@@49 $generated@@47) ($generated@@43 $generated@@49 $generated@@45))
 :pattern ( ($generated@@43 $generated@@49 $generated@@47))
 :pattern ( ($generated@@43 $generated@@49 $generated@@45))
))) (forall (($generated@@50 T@U) ) (!  (=> ($generated@@43 $generated@@50 $generated@@46) ($generated@@43 $generated@@50 $generated@@48))
 :pattern ( ($generated@@43 $generated@@50 $generated@@46))
 :pattern ( ($generated@@43 $generated@@50 $generated@@48))
))) ($generated@@31 $generated@@28 $generated@@44 ($generated@@42 $generated@@47 $generated@@48)))
 :pattern ( ($generated@@31 $generated@@28 $generated@@44 ($generated@@42 $generated@@45 $generated@@46)) ($generated@@31 $generated@@28 $generated@@44 ($generated@@42 $generated@@47 $generated@@48)))
)))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@51 $generated@@52) $generated@@52)
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@27 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@27 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@29 $generated@@60) (and ($generated@@43 $generated@@62 $generated@@58) ($generated@@31 $generated@@28 $generated@@61 ($generated@@42 $generated@@58 $generated@@59)))) (= ($generated@@57 ($generated@@55 $generated@@58 $generated@@59 $generated@@56 $generated@@61 $generated@@62) $generated@@40) ($generated@@57 ($generated@@55 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62) $generated@@40)))
 :pattern ( ($generated@@55 $generated@@58 $generated@@59 $generated@@56 $generated@@61 $generated@@62) ($generated@@29 $generated@@60))
 :pattern ( ($generated@@55 $generated@@58 $generated@@59 $generated@@60 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@35 $generated@@64 ($generated@@33 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@33 $generated@@64 $generated@@63))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 Int) ) (!  (=> (or ($generated@@67 ($generated@@27 $generated@@28 $generated@@70) ($generated@@51 $generated@@71)) (and (< 0 $generated@@25) (and ($generated@@29 $generated@@69) ($generated@@31 $generated@@28 $generated@@70 ($generated@@32 $generated $generated))))) (and (=> (< ($generated@@51 0) ($generated@@51 $generated@@71)) ($generated@@67 ($generated@@27 $generated@@28 $generated@@70) ($generated@@51 (- $generated@@71 1)))) (= ($generated@@65 ($generated@@66 $generated@@68) ($generated@@27 $generated@@28 $generated@@70) ($generated@@51 $generated@@71)) (ite (<= ($generated@@51 $generated@@71) ($generated@@51 0)) ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@69 ($generated@@27 $generated@@28 $generated@@70) ($generated@@35 $generated@@10 ($generated@@14 ($generated@@51 1)))))) ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@69 ($generated@@27 $generated@@28 $generated@@70) ($generated@@35 $generated@@10 ($generated@@14 ($generated@@51 ($generated@@65 ($generated@@66 $generated@@68) ($generated@@27 $generated@@28 $generated@@70) ($generated@@51 (- $generated@@71 1)))))))))))))
 :weight 3
 :pattern ( ($generated@@65 ($generated@@66 $generated@@68) ($generated@@27 $generated@@28 $generated@@70) ($generated@@51 $generated@@71)) ($generated@@29 $generated@@69))
))))
(assert ($generated@@29 $generated@@56))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@72 ($generated@@35 $generated@@77 $generated@@74) $generated@@75 $generated@@76) ($generated@@73 $generated@@77 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@72 ($generated@@35 $generated@@77 $generated@@74) $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@73 $generated@@28 $generated@@81 ($generated@@78 $generated@@79 $generated@@80) $generated@@82) ($generated@@73 $generated@@28 $generated@@81 ($generated@@42 $generated@@79 $generated@@80) $generated@@82))
 :pattern ( ($generated@@73 $generated@@28 $generated@@81 ($generated@@78 $generated@@79 $generated@@80) $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@73 $generated@@28 $generated@@85 ($generated@@32 $generated@@83 $generated@@84) $generated@@86) ($generated@@73 $generated@@28 $generated@@85 ($generated@@78 $generated@@83 $generated@@84) $generated@@86))
 :pattern ( ($generated@@73 $generated@@28 $generated@@85 ($generated@@32 $generated@@83 $generated@@84) $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (! (= ($generated@@65 ($generated@@66 $generated@@87) $generated@@88 $generated@@89) ($generated@@65 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@65 ($generated@@66 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and ($generated@@29 $generated@@94) ($generated@@73 $generated@@28 $generated@@91 ($generated@@42 $generated@@92 $generated@@93) $generated@@94)) (forall (($generated@@95 T@U) ) (!  (=> (and ($generated@@72 $generated@@95 $generated@@92 $generated@@94) ($generated@@90 $generated@@92 $generated@@93 $generated@@94 $generated@@91 $generated@@95)) ($generated@@72 ($generated@@34 $generated@@92 $generated@@93 $generated@@94 $generated@@91 $generated@@95) $generated@@93 $generated@@94))
 :pattern ( ($generated@@34 $generated@@92 $generated@@93 $generated@@94 $generated@@91 $generated@@95))
)))
 :pattern ( ($generated@@73 $generated@@28 $generated@@91 ($generated@@42 $generated@@92 $generated@@93) $generated@@94))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 Int) ) (!  (=> (or ($generated@@67 $generated@@98 ($generated@@51 $generated@@99)) (and (< 0 $generated@@25) (and ($generated@@29 $generated@@97) ($generated@@31 $generated@@28 $generated@@98 ($generated@@32 $generated $generated))))) (and (=> (< ($generated@@51 0) ($generated@@51 $generated@@99)) ($generated@@67 $generated@@98 ($generated@@51 (- $generated@@99 1)))) (= ($generated@@65 ($generated@@66 $generated@@96) $generated@@98 ($generated@@51 $generated@@99)) (ite (<= ($generated@@51 $generated@@99) ($generated@@51 0)) ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@97 $generated@@98 ($generated@@35 $generated@@10 ($generated@@14 ($generated@@51 1)))))) ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@97 $generated@@98 ($generated@@35 $generated@@10 ($generated@@14 ($generated@@65 ($generated@@66 $generated@@96) $generated@@98 ($generated@@51 (- $generated@@99 1))))))))))))
 :weight 3
 :pattern ( ($generated@@65 ($generated@@66 $generated@@96) $generated@@98 ($generated@@51 $generated@@99)) ($generated@@29 $generated@@97))
))))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@57 $generated@@100 $generated@@101) (= $generated@@100 $generated@@101))
 :pattern ( ($generated@@57 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@31 $generated@@28 $generated@@102 ($generated@@42 $generated@@103 $generated@@104)) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@105) ($generated@@43 $generated@@106 $generated@@103)) ($generated@@90 $generated@@103 $generated@@104 $generated@@105 $generated@@102 $generated@@106)) ($generated@@43 ($generated@@34 $generated@@103 $generated@@104 $generated@@105 $generated@@102 $generated@@106) $generated@@104))
 :pattern ( ($generated@@34 $generated@@103 $generated@@104 $generated@@105 $generated@@102 $generated@@106))
)))
 :pattern ( ($generated@@31 $generated@@28 $generated@@102 ($generated@@42 $generated@@103 $generated@@104)))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@43 $generated@@107 $generated) (and (= ($generated@@35 $generated@@10 ($generated@@33 $generated@@10 $generated@@107)) $generated@@107) ($generated@@31 $generated@@10 ($generated@@33 $generated@@10 $generated@@107) $generated)))
 :pattern ( ($generated@@43 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@43 ($generated@@35 $generated@@110 $generated@@108) $generated@@109) ($generated@@31 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@43 ($generated@@35 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 ($generated@@42 $generated@@112 $generated@@113)) $generated@@112)
 :pattern ( ($generated@@42 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@114 ($generated@@42 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@42 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@117 ($generated@@78 $generated@@118 $generated@@119)) $generated@@118)
 :pattern ( ($generated@@78 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@120 ($generated@@78 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@78 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@123 ($generated@@32 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@32 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@126 ($generated@@32 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@32 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@33 $generated@@130 ($generated@@35 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@35 $generated@@130 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@31 $generated@@28 $generated@@133 ($generated@@32 $generated@@131 $generated@@132))  (and ($generated@@31 $generated@@28 $generated@@133 ($generated@@78 $generated@@131 $generated@@132)) (forall (($generated@@134 T@U) )  (=> ($generated@@43 $generated@@134 $generated@@131) ($generated@@90 $generated@@131 $generated@@132 $generated@@56 $generated@@133 $generated@@134)))))
 :pattern ( ($generated@@31 $generated@@28 $generated@@133 ($generated@@32 $generated@@131 $generated@@132)))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@31 $generated@@28 $generated@@137 ($generated@@78 $generated@@135 $generated@@136))  (and ($generated@@31 $generated@@28 $generated@@137 ($generated@@42 $generated@@135 $generated@@136)) (forall (($generated@@138 T@U) )  (=> ($generated@@43 $generated@@138 $generated@@135) ($generated@@57 ($generated@@55 $generated@@135 $generated@@136 $generated@@56 $generated@@137 $generated@@138) $generated@@40)))))
 :pattern ( ($generated@@31 $generated@@28 $generated@@137 ($generated@@78 $generated@@135 $generated@@136)))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 Int) ) (!  (=> (or ($generated@@67 $generated@@141 $generated@@142) (and (< 0 $generated@@25) (and ($generated@@29 $generated@@140) ($generated@@31 $generated@@28 $generated@@141 ($generated@@32 $generated $generated))))) (and (=> (< ($generated@@51 0) $generated@@142) ($generated@@67 $generated@@141 (- $generated@@142 1))) (= ($generated@@65 ($generated@@66 $generated@@139) $generated@@141 $generated@@142) (ite (<= $generated@@142 ($generated@@51 0)) ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@140 $generated@@141 ($generated@@35 $generated@@10 ($generated@@14 ($generated@@51 1)))))) ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@140 $generated@@141 ($generated@@35 $generated@@10 ($generated@@14 ($generated@@65 $generated@@139 $generated@@141 (- $generated@@142 1)))))))))))
 :pattern ( ($generated@@65 ($generated@@66 $generated@@139) $generated@@141 $generated@@142) ($generated@@29 $generated@@140))
))))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@143) 4) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@145 $generated@@152 $generated@@153 ($generated@@149 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@145 $generated@@157 $generated@@158 ($generated@@149 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@145 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@8 $generated@@146) 5)) (= ($generated@@8 $generated@@147) 6)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@8 ($generated@@148 $generated@@163 $generated@@164)) 7))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@150 ($generated@@148 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@148 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@151 ($generated@@148 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@148 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@29 $generated@@172) (= ($generated@@73 $generated@@28 $generated@@169 ($generated@@42 $generated@@170 $generated@@171) $generated@@172) (forall (($generated@@173 T@U) ) (!  (=> (and (and ($generated@@43 $generated@@173 $generated@@170) ($generated@@72 $generated@@173 $generated@@170 $generated@@172)) ($generated@@90 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173)) (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@144)) (not true)) ($generated@@39 ($generated@@55 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173) ($generated@@35 $generated@@143 $generated@@174))) ($generated@@13 ($generated@@33 $generated@@9 ($generated@@145 $generated@@146 $generated@@147 ($generated@@145 $generated@@143 ($generated@@148 $generated@@146 $generated@@147) $generated@@172 $generated@@174) $generated@@1))))
 :pattern ( ($generated@@39 ($generated@@55 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173) ($generated@@35 $generated@@143 $generated@@174)))
)))
 :pattern ( ($generated@@34 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173))
 :pattern ( ($generated@@55 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173))
))))
 :pattern ( ($generated@@73 $generated@@28 $generated@@169 ($generated@@42 $generated@@170 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@43 $generated@@177 ($generated@@42 $generated@@175 $generated@@176)) (and (= ($generated@@35 $generated@@28 ($generated@@33 $generated@@28 $generated@@177)) $generated@@177) ($generated@@31 $generated@@28 ($generated@@33 $generated@@28 $generated@@177) ($generated@@42 $generated@@175 $generated@@176))))
 :pattern ( ($generated@@43 $generated@@177 ($generated@@42 $generated@@175 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@43 $generated@@180 ($generated@@78 $generated@@178 $generated@@179)) (and (= ($generated@@35 $generated@@28 ($generated@@33 $generated@@28 $generated@@180)) $generated@@180) ($generated@@31 $generated@@28 ($generated@@33 $generated@@28 $generated@@180) ($generated@@78 $generated@@178 $generated@@179))))
 :pattern ( ($generated@@43 $generated@@180 ($generated@@78 $generated@@178 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@43 $generated@@183 ($generated@@32 $generated@@181 $generated@@182)) (and (= ($generated@@35 $generated@@28 ($generated@@33 $generated@@28 $generated@@183)) $generated@@183) ($generated@@31 $generated@@28 ($generated@@33 $generated@@28 $generated@@183) ($generated@@32 $generated@@181 $generated@@182))))
 :pattern ( ($generated@@43 $generated@@183 ($generated@@32 $generated@@181 $generated@@182)))
)))
(assert  (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@184 $generated@@187 $generated@@188 $generated@@189 ($generated@@186 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@192 $generated@@193) $generated@@190)
 :weight 0
)) (and (forall (($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@184 $generated@@194 $generated@@195 $generated@@196 ($generated@@186 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@200 $generated@@197) $generated@@201 $generated@@202) ($generated@@184 $generated@@194 $generated@@195 $generated@@196 $generated@@198 $generated@@201 $generated@@202)))
 :weight 0
)) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@209 $generated@@211) (= ($generated@@184 $generated@@203 $generated@@204 $generated@@205 ($generated@@186 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@209 $generated@@206) $generated@@210 $generated@@211) ($generated@@184 $generated@@203 $generated@@204 $generated@@205 $generated@@207 $generated@@210 $generated@@211)))
 :weight 0
)))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 Bool) ($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@13 ($generated@@184 $generated@@143 $generated@@146 $generated@@9 ($generated@@185 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))  (=> (and (or (not (= $generated@@216 $generated@@212)) (not true)) ($generated@@13 ($generated@@33 $generated@@9 ($generated@@145 $generated@@146 $generated@@147 ($generated@@145 $generated@@143 ($generated@@148 $generated@@146 $generated@@147) $generated@@213 $generated@@216) $generated@@214)))) $generated@@215))
 :pattern ( ($generated@@184 $generated@@143 $generated@@146 $generated@@9 ($generated@@185 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (and (= ($generated@@24 ($generated@@42 $generated@@219 $generated@@220)) $generated@@2) (= ($generated@@218 ($generated@@42 $generated@@219 $generated@@220)) $generated@@5))
 :pattern ( ($generated@@42 $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (and (= ($generated@@24 ($generated@@78 $generated@@221 $generated@@222)) $generated@@3) (= ($generated@@218 ($generated@@78 $generated@@221 $generated@@222)) $generated@@6))
 :pattern ( ($generated@@78 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (and (= ($generated@@24 ($generated@@32 $generated@@223 $generated@@224)) $generated@@4) (= ($generated@@218 ($generated@@32 $generated@@223 $generated@@224)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@227) (and ($generated@@43 $generated@@229 $generated@@225) ($generated@@31 $generated@@28 $generated@@228 ($generated@@42 $generated@@225 $generated@@226)))) ($generated@@57 ($generated@@55 $generated@@225 $generated@@226 $generated@@56 $generated@@228 $generated@@229) $generated@@40)) (= ($generated@@90 $generated@@225 $generated@@226 $generated@@56 $generated@@228 $generated@@229) ($generated@@90 $generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229)))
 :pattern ( ($generated@@90 $generated@@225 $generated@@226 $generated@@56 $generated@@228 $generated@@229) ($generated@@29 $generated@@227))
 :pattern ( ($generated@@90 $generated@@225 $generated@@226 $generated@@227 $generated@@228 $generated@@229))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (or ($generated@@30 $generated@@231) (and (< 0 $generated@@25) (and ($generated@@29 $generated@@230) ($generated@@31 $generated@@28 $generated@@231 ($generated@@32 $generated $generated))))) (= ($generated@@26 $generated@@231) (forall (($generated@@232 Int) ) (! (< $generated@@232 ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@230 $generated@@231 ($generated@@35 $generated@@10 ($generated@@14 $generated@@232))))))
 :pattern ( ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@230 $generated@@231 ($generated@@35 $generated@@10 ($generated@@14 $generated@@232)))))
))))
 :pattern ( ($generated@@26 $generated@@231) ($generated@@29 $generated@@230))
))))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@57 $generated@@233 $generated@@234) (forall (($generated@@235 T@U) ) (! (= ($generated@@39 $generated@@233 $generated@@235) ($generated@@39 $generated@@234 $generated@@235))
 :pattern ( ($generated@@39 $generated@@233 $generated@@235))
 :pattern ( ($generated@@39 $generated@@234 $generated@@235))
)))
 :pattern ( ($generated@@57 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@236 Int) ) (! (= ($generated@@35 $generated@@10 ($generated@@14 ($generated@@51 $generated@@236))) ($generated@@27 $generated@@147 ($generated@@35 $generated@@10 ($generated@@14 $generated@@236))))
 :pattern ( ($generated@@35 $generated@@10 ($generated@@14 ($generated@@51 $generated@@236))))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@T) ) (! (= ($generated@@35 $generated@@238 ($generated@@27 $generated@@238 $generated@@237)) ($generated@@27 $generated@@147 ($generated@@35 $generated@@238 $generated@@237)))
 :pattern ( ($generated@@35 $generated@@238 ($generated@@27 $generated@@238 $generated@@237)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! ($generated@@73 $generated@@10 $generated@@240 $generated $generated@@239)
 :pattern ( ($generated@@73 $generated@@10 $generated@@240 $generated $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ) (! ($generated@@31 $generated@@10 $generated@@241 $generated)
 :pattern ( ($generated@@31 $generated@@10 $generated@@241 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@249  (=> (= $generated@@242 ($generated@@185 $generated@@144 $generated@@243 $generated@@1 false)) (=> (and (and (and ($generated@@29 $generated@@244) ($generated@@245 $generated@@244)) (= $generated@@243 $generated@@244)) (and (forall (($generated@@250 Int) ) (!  (=> (and ($generated@@26 $generated@@247) (and (<= 0 $generated@@250) (< $generated@@250 $generated@@248))) (< $generated@@250 ($generated@@65 ($generated@@66 $generated@@246) $generated@@247 $generated@@250)))
 :pattern ( ($generated@@65 ($generated@@66 $generated@@246) $generated@@247 $generated@@250))
)) (= (ControlFlow 0 2) (- 0 1)))) (< $generated@@248 ($generated@@65 ($generated@@66 ($generated@@66 $generated@@246)) $generated@@247 $generated@@248))))))
(let (($generated@@251  (=> (and ($generated@@29 $generated@@243) ($generated@@245 $generated@@243)) (=> (and (and (and ($generated@@31 $generated@@28 $generated@@247 ($generated@@32 $generated $generated)) ($generated@@73 $generated@@28 $generated@@247 ($generated@@32 $generated $generated) $generated@@243)) (= 1 $generated@@25)) (and (and ($generated@@30 $generated@@247) (and ($generated@@26 $generated@@247) (forall (($generated@@252 T@U) ) (! (< ($generated@@15 $generated@@252) ($generated@@15 ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@243 $generated@@247 ($generated@@35 $generated@@10 $generated@@252)))))
 :pattern ( ($generated@@33 $generated@@10 ($generated@@34 $generated $generated $generated@@243 $generated@@247 ($generated@@35 $generated@@10 $generated@@252))))
)))) (= (ControlFlow 0 3) 2))) $generated@@249))))
$generated@@251)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
