(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TagSet () T@U)
(declare-fun TagMap () T@U)
(declare-fun alloc () T@U)
(declare-fun allocName () T@U)
(declare-fun Tagclass._System.nat () T@U)
(declare-fun Tagclass._System.object? () T@U)
(declare-fun Tagclass._System.object () T@U)
(declare-fun |##_System._tuple#2._#Make2| () T@U)
(declare-fun Tagclass._System.Tuple2 () T@U)
(declare-fun Tagclass.M3.UnionFind () T@U)
(declare-fun Tagclass.M3.Element () T@U)
(declare-fun Tagclass.M3.Contents () T@U)
(declare-fun Tagclass.M3.Element? () T@U)
(declare-fun class.M3.UnionFind? () T@U)
(declare-fun Tagclass.M3.UnionFind? () T@U)
(declare-fun |##M3.Contents.Root| () T@U)
(declare-fun |##M3.Contents.Link| () T@U)
(declare-fun class.M3.Element? () T@U)
(declare-fun tytagFamily$nat () T@U)
(declare-fun tytagFamily$object () T@U)
(declare-fun |tytagFamily$_tuple#2| () T@U)
(declare-fun tytagFamily$UnionFind () T@U)
(declare-fun tytagFamily$Element () T@U)
(declare-fun tytagFamily$Contents () T@U)
(declare-fun field$Repr () T@U)
(declare-fun field$M () T@U)
(declare-fun field$c () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun FDim (T@U) Int)
(declare-fun DeclName (T@U) T@U)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun Tclass._System.nat () T@U)
(declare-fun MapType0Select (T@T T@T T@U T@U) T@U)
(declare-fun BoxType () T@T)
(declare-fun |lambda#1| (T@U T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun |Set#IsMember| (T@U T@U) Bool)
(declare-fun MapType0Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun |Map#Domain| (T@U) T@U)
(declare-fun |Map#Glue| (T@U T@U T@U) T@U)
(declare-fun |Map#Elements| (T@U) T@U)
(declare-fun _System.Tuple2.___hMake2_q (T@U) Bool)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun DatatypeTypeType () T@T)
(declare-fun Tclass._System.Tuple2 (T@U T@U) T@U)
(declare-fun refType () T@T)
(declare-fun Tclass.M3.UnionFind? () T@U)
(declare-fun null () T@U)
(declare-fun dtype (T@U) T@U)
(declare-fun Tclass.M3.Element? () T@U)
(declare-fun Tclass._System.object () T@U)
(declare-fun Tclass._System.object? () T@U)
(declare-fun Tclass.M3.UnionFind () T@U)
(declare-fun Tclass.M3.Element () T@U)
(declare-fun M3.UnionFind.Repr () T@U)
(declare-fun FieldOfDecl (T@U T@U) T@U)
(declare-fun $IsGhostField (T@U) Bool)
(declare-fun M3.UnionFind.M () T@U)
(declare-fun |#_System._tuple#2._#Make2| (T@U T@U) T@U)
(declare-fun M3.Element.c () T@U)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun FieldType () T@T)
(declare-fun MapType0Type (T@T T@T) T@T)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0TypeInv1 (T@T) T@T)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun M3.UnionFind.ValidM1 (T@U T@U) Bool)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun |M3.UnionFind.ValidM1#canCall| (T@U T@U) Bool)
(declare-fun |Set#Subset| (T@U T@U) Bool)
(declare-fun MapType () T@T)
(declare-fun SetType () T@T)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun M3.Contents.Link_q (T@U) Bool)
(declare-fun M3.Contents.next (T@U) T@U)
(declare-fun M3.Contents.Root_q (T@U) Bool)
(declare-fun |M3.UnionFind.Collect#canCall| (T@U T@U) Bool)
(declare-fun |M3.UnionFind.Reaches#canCall| (T@U Int T@U T@U T@U) Bool)
(declare-fun M3.Contents.depth (T@U) Int)
(declare-fun M3.UnionFind.Collect (T@U T@U) T@U)
(declare-fun M3.UnionFind.Reaches (T@U T@U Int T@U T@U T@U) Bool)
(declare-fun $LS (T@U) T@U)
(declare-fun $LZ () T@U)
(declare-fun LitInt (Int) Int)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun TMap (T@U T@U) T@U)
(declare-fun M3.UnionFind.Valid (T@U T@U) Bool)
(declare-fun |M3.UnionFind.Valid#canCall| (T@U T@U) Bool)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun DatatypeCtorId (T@U) T@U)
(declare-fun |Set#FromBoogieMap| (T@U) T@U)
(declare-fun TSet (T@U) T@U)
(declare-fun |lambda#8| (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun M3.__default.GoodCMap (T@U) Bool)
(declare-fun |M3.__default.GoodCMap#canCall| (T@U) Bool)
(declare-fun Tclass.M3.Contents () T@U)
(declare-fun |#M3.Contents.Root| (Int) T@U)
(declare-fun |#M3.Contents.Link| (T@U) T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun |Map#Equal| (T@U T@U) Bool)
(declare-fun |Map#Empty| () T@U)
(declare-fun |lambda#2| (T@U T@U) T@U)
(declare-fun DeclType (T@U) T@U)
(declare-fun Inv0_TMap (T@U) T@U)
(declare-fun Inv1_TMap (T@U) T@U)
(declare-fun Tag (T@U) T@U)
(declare-fun Tclass._System.Tuple2_0 (T@U) T@U)
(declare-fun Tclass._System.Tuple2_1 (T@U) T@U)
(declare-fun _System.Tuple2._0 (T@U) T@U)
(declare-fun _System.Tuple2._1 (T@U) T@U)
(declare-fun Inv0_TSet (T@U) T@U)
(declare-fun BoxRank (T@U) Int)
(declare-fun DtRank (T@U) Int)
(declare-fun MapType1Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun |lambda#0| (T@U T@U T@U Bool) T@U)
(declare-fun MapType1Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun TagFamily (T@U) T@U)
(declare-fun |Map#Values| (T@U) T@U)
(declare-fun |Map#Items| (T@U) T@U)
(declare-fun |Map#Build| (T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TagSet TagMap alloc allocName Tagclass._System.nat Tagclass._System.object? Tagclass._System.object |##_System._tuple#2._#Make2| Tagclass._System.Tuple2 Tagclass.M3.UnionFind Tagclass.M3.Element Tagclass.M3.Contents Tagclass.M3.Element? class.M3.UnionFind? Tagclass.M3.UnionFind? |##M3.Contents.Root| |##M3.Contents.Link| class.M3.Element? tytagFamily$nat tytagFamily$object |tytagFamily$_tuple#2| tytagFamily$UnionFind tytagFamily$Element tytagFamily$Contents field$Repr field$M field$c)
)
(assert (= (FDim alloc) 0))
(assert (= (DeclName alloc) allocName))
(assert (forall ((|x#0| T@U) ($h T@U) ) (! ($IsAlloc intType |x#0| Tclass._System.nat $h)
 :pattern ( ($IsAlloc intType |x#0| Tclass._System.nat $h))
)))
(assert  (and (and (forall ((t0 T@T) (t1 T@T) (val T@U) (m T@U) (x0 T@U) ) (! (= (MapType0Select t0 t1 (MapType0Store t0 t1 m x0 val) x0) val)
 :weight 0
)) (forall ((u0 T@T) (u1 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (y0 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 (MapType0Store u0 u1 m@@0 x0@@0 val@@0) y0) (MapType0Select u0 u1 m@@0 y0)))
 :weight 0
))) (= (Ctor BoxType) 3)))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|$w#3| T@U) ) (! (= (U_2_bool (MapType0Select BoxType boolType (|lambda#1| |l#0| |l#1|) |$w#3|))  (and ($IsBox |$w#3| |l#0|) (|Set#IsMember| |l#1| |$w#3|)))
 :pattern ( (MapType0Select BoxType boolType (|lambda#1| |l#0| |l#1|) |$w#3|))
)))
(assert (forall ((a T@U) (b T@U) (t T@U) ) (! (= (|Map#Domain| (|Map#Glue| a b t)) a)
 :pattern ( (|Map#Domain| (|Map#Glue| a b t)))
)))
(assert (forall ((a@@0 T@U) (b@@0 T@U) (t@@0 T@U) ) (! (= (|Map#Elements| (|Map#Glue| a@@0 b@@0 t@@0)) b@@0)
 :pattern ( (|Map#Elements| (|Map#Glue| a@@0 b@@0 t@@0)))
)))
(assert (= (Ctor DatatypeTypeType) 4))
(assert (forall ((|_System._tuple#2$T0| T@U) (|_System._tuple#2$T1| T@U) (d T@U) ) (!  (=> ($Is DatatypeTypeType d (Tclass._System.Tuple2 |_System._tuple#2$T0| |_System._tuple#2$T1|)) (_System.Tuple2.___hMake2_q d))
 :pattern ( (_System.Tuple2.___hMake2_q d) ($Is DatatypeTypeType d (Tclass._System.Tuple2 |_System._tuple#2$T0| |_System._tuple#2$T1|)))
)))
(assert (= (Ctor refType) 5))
(assert (forall (($o T@U) ) (! (= ($Is refType $o Tclass.M3.UnionFind?)  (or (= $o null) (= (dtype $o) Tclass.M3.UnionFind?)))
 :pattern ( ($Is refType $o Tclass.M3.UnionFind?))
)))
(assert (forall (($o@@0 T@U) ) (! (= ($Is refType $o@@0 Tclass.M3.Element?)  (or (= $o@@0 null) (= (dtype $o@@0) Tclass.M3.Element?)))
 :pattern ( ($Is refType $o@@0 Tclass.M3.Element?))
)))
(assert (forall ((|c#0| T@U) ($h@@0 T@U) ) (! (= ($IsAlloc refType |c#0| Tclass._System.object $h@@0) ($IsAlloc refType |c#0| Tclass._System.object? $h@@0))
 :pattern ( ($IsAlloc refType |c#0| Tclass._System.object $h@@0))
 :pattern ( ($IsAlloc refType |c#0| Tclass._System.object? $h@@0))
)))
(assert (forall ((|c#0@@0| T@U) ($h@@1 T@U) ) (! (= ($IsAlloc refType |c#0@@0| Tclass.M3.UnionFind $h@@1) ($IsAlloc refType |c#0@@0| Tclass.M3.UnionFind? $h@@1))
 :pattern ( ($IsAlloc refType |c#0@@0| Tclass.M3.UnionFind $h@@1))
 :pattern ( ($IsAlloc refType |c#0@@0| Tclass.M3.UnionFind? $h@@1))
)))
(assert (forall ((|c#0@@1| T@U) ($h@@2 T@U) ) (! (= ($IsAlloc refType |c#0@@1| Tclass.M3.Element $h@@2) ($IsAlloc refType |c#0@@1| Tclass.M3.Element? $h@@2))
 :pattern ( ($IsAlloc refType |c#0@@1| Tclass.M3.Element $h@@2))
 :pattern ( ($IsAlloc refType |c#0@@1| Tclass.M3.Element? $h@@2))
)))
(assert (= (FDim M3.UnionFind.Repr) 0))
(assert (= (FieldOfDecl class.M3.UnionFind? field$Repr) M3.UnionFind.Repr))
(assert ($IsGhostField M3.UnionFind.Repr))
(assert (= (FDim M3.UnionFind.M) 0))
(assert (= (FieldOfDecl class.M3.UnionFind? field$M) M3.UnionFind.M))
(assert ($IsGhostField M3.UnionFind.M))
(assert (forall ((|_System._tuple#2$T0@@0| T@U) (|_System._tuple#2$T1@@0| T@U) (|a#2#0#0| T@U) (|a#2#1#0| T@U) ) (! (= ($Is DatatypeTypeType (|#_System._tuple#2._#Make2| |a#2#0#0| |a#2#1#0|) (Tclass._System.Tuple2 |_System._tuple#2$T0@@0| |_System._tuple#2$T1@@0|))  (and ($IsBox |a#2#0#0| |_System._tuple#2$T0@@0|) ($IsBox |a#2#1#0| |_System._tuple#2$T1@@0|)))
 :pattern ( ($Is DatatypeTypeType (|#_System._tuple#2._#Make2| |a#2#0#0| |a#2#1#0|) (Tclass._System.Tuple2 |_System._tuple#2$T0@@0| |_System._tuple#2$T1@@0|)))
)))
(assert (= (FDim M3.Element.c) 0))
(assert (= (FieldOfDecl class.M3.Element? field$c) M3.Element.c))
(assert  (not ($IsGhostField M3.Element.c)))
(assert  (and (and (and (= (Ctor FieldType) 6) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType0Type arg0@@2 arg1)) 7))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType0Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType0TypeInv1 (MapType0Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType0Type arg0@@4 arg1@@1))
))))
(assert (forall (($o@@1 T@U) ($h@@3 T@U) ) (! (= ($IsAlloc refType $o@@1 Tclass._System.object? $h@@3)  (or (= $o@@1 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@3 $o@@1) alloc)))))
 :pattern ( ($IsAlloc refType $o@@1 Tclass._System.object? $h@@3))
)))
(assert (forall (($o@@2 T@U) ($h@@4 T@U) ) (! (= ($IsAlloc refType $o@@2 Tclass.M3.UnionFind? $h@@4)  (or (= $o@@2 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@4 $o@@2) alloc)))))
 :pattern ( ($IsAlloc refType $o@@2 Tclass.M3.UnionFind? $h@@4))
)))
(assert (forall (($o@@3 T@U) ($h@@5 T@U) ) (! (= ($IsAlloc refType $o@@3 Tclass.M3.Element? $h@@5)  (or (= $o@@3 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@5 $o@@3) alloc)))))
 :pattern ( ($IsAlloc refType $o@@3 Tclass.M3.Element? $h@@5))
)))
(assert (forall ((h T@U) (k T@U) ) (!  (=> ($HeapSucc h k) (forall ((o T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h o) alloc))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o) alloc))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o) alloc))
)))
 :pattern ( ($HeapSucc h k))
)))
(assert  (and (= (Ctor MapType) 8) (= (Ctor SetType) 9)))
(assert (forall (($Heap T@U) (this T@U) ) (!  (=> (or (|M3.UnionFind.ValidM1#canCall| $Heap this) (and ($IsGoodHeap $Heap) (and (or (not (= this null)) (not true)) (and ($Is refType this Tclass.M3.UnionFind) ($IsAlloc refType this Tclass.M3.UnionFind $Heap))))) (and (=> (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.Repr))) (=> (forall ((|e#10| T@U) ) (!  (=> ($Is refType |e#10| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#10|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#10|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#10|))))
)) (=> (forall ((|e#11| T@U) ) (!  (=> ($Is refType |e#11| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11|)))
)) (=> (forall ((|e#12| T@U) ) (!  (=> ($Is refType |e#12| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#12|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |e#12|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |e#12|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |e#12|) M3.Element.c)))
)) (forall ((|e#13| T@U) ) (!  (=> ($Is refType |e#13| Tclass.M3.Element) (=> (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13|)) (and (|M3.UnionFind.Collect#canCall| $Heap this) (|M3.UnionFind.Reaches#canCall| this (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13|)))) M3.Element.c))) |e#13| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13|))) (M3.UnionFind.Collect $Heap this))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13|)))
)))))) (= (M3.UnionFind.ValidM1 $Heap this)  (and (and (and (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.Repr))) (and (forall ((|e#10@@0| T@U) ) (!  (=> ($Is refType |e#10@@0| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#10@@0|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#10@@0|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#10@@0|))))
)) (forall ((|e#11@@0| T@U) ) (!  (=> ($Is refType |e#11@@0| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11@@0|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11@@0|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11@@0|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11@@0|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#11@@0|)))
)))) (forall ((|e#12@@0| T@U) ) (!  (=> ($Is refType |e#12@@0| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#12@@0|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |e#12@@0|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |e#12@@0|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |e#12@@0|) M3.Element.c)))
))) (forall ((|e#13@@0| T@U) ) (!  (=> ($Is refType |e#13@@0| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13@@0|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13@@0|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13@@0|)) (M3.UnionFind.Reaches ($LS $LZ) this (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13@@0|)))) M3.Element.c))) |e#13@@0| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13@@0|))) (M3.UnionFind.Collect $Heap this)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13@@0|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this) M3.UnionFind.M))) ($Box refType |e#13@@0|)))
))))))
 :pattern ( (M3.UnionFind.ValidM1 $Heap this) ($IsGoodHeap $Heap))
)))
(assert (forall ((x@@2 Int) ) (! (= (LitInt x@@2) x@@2)
 :pattern ( (LitInt x@@2))
)))
(assert (forall ((x@@3 T@U) (T T@T) ) (! (= (Lit T x@@3) x@@3)
 :pattern ( (Lit T x@@3))
)))
(assert (forall ((a@@1 T@U) (b@@1 T@U) (t0@@0 T@U) (t1@@0 T@U) ) (!  (=> (forall ((bx T@U) )  (=> (|Set#IsMember| a@@1 bx) (and ($IsBox bx t0@@0) ($IsBox (MapType0Select BoxType BoxType b@@1 bx) t1@@0)))) ($Is MapType (|Map#Glue| a@@1 b@@1 (TMap t0@@0 t1@@0)) (TMap t0@@0 t1@@0)))
 :pattern ( (|Map#Glue| a@@1 b@@1 (TMap t0@@0 t1@@0)))
)))
(assert (forall (($Heap@@0 T@U) (this@@0 T@U) ) (!  (=> (or (|M3.UnionFind.Valid#canCall| $Heap@@0 this@@0) (and ($IsGoodHeap $Heap@@0) (and (or (not (= this@@0 null)) (not true)) (and ($Is refType this@@0 Tclass.M3.UnionFind) ($IsAlloc refType this@@0 Tclass.M3.UnionFind $Heap@@0))))) (=> (M3.UnionFind.Valid $Heap@@0 this@@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@0) M3.UnionFind.Repr)) ($Box refType this@@0))))
 :pattern ( (M3.UnionFind.Valid $Heap@@0 this@@0))
)))
(assert (forall ((a@@2 T@U) (b@@2 T@U) ) (! (= (|Set#Subset| a@@2 b@@2) (forall ((o@@0 T@U) ) (!  (=> (|Set#IsMember| a@@2 o@@0) (|Set#IsMember| b@@2 o@@0))
 :pattern ( (|Set#IsMember| a@@2 o@@0))
 :pattern ( (|Set#IsMember| b@@2 o@@0))
)))
 :pattern ( (|Set#Subset| a@@2 b@@2))
)))
(assert (forall ((|_System._tuple#2$T0@@1| T@U) (|_System._tuple#2$T1@@1| T@U) (|a#2#0#0@@0| T@U) (|a#2#1#0@@0| T@U) ($h@@6 T@U) ) (!  (=> ($IsGoodHeap $h@@6) (= ($IsAlloc DatatypeTypeType (|#_System._tuple#2._#Make2| |a#2#0#0@@0| |a#2#1#0@@0|) (Tclass._System.Tuple2 |_System._tuple#2$T0@@1| |_System._tuple#2$T1@@1|) $h@@6)  (and ($IsAllocBox |a#2#0#0@@0| |_System._tuple#2$T0@@1| $h@@6) ($IsAllocBox |a#2#1#0@@0| |_System._tuple#2$T1@@1| $h@@6))))
 :pattern ( ($IsAlloc DatatypeTypeType (|#_System._tuple#2._#Make2| |a#2#0#0@@0| |a#2#1#0@@0|) (Tclass._System.Tuple2 |_System._tuple#2$T0@@1| |_System._tuple#2$T1@@1|) $h@@6))
)))
(assert (forall ((d@@0 T@U) ) (! (= (_System.Tuple2.___hMake2_q d@@0) (= (DatatypeCtorId d@@0) |##_System._tuple#2._#Make2|))
 :pattern ( (_System.Tuple2.___hMake2_q d@@0))
)))
(assert (forall ((d@@1 T@U) ) (! (= (M3.Contents.Root_q d@@1) (= (DatatypeCtorId d@@1) |##M3.Contents.Root|))
 :pattern ( (M3.Contents.Root_q d@@1))
)))
(assert (forall ((d@@2 T@U) ) (! (= (M3.Contents.Link_q d@@2) (= (DatatypeCtorId d@@2) |##M3.Contents.Link|))
 :pattern ( (M3.Contents.Link_q d@@2))
)))
(assert (forall ((x@@4 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@4)) x@@4)
 :pattern ( ($Unbox T@@0 x@@4))
)))
(assert (forall ((m@@1 T@U) (bx@@0 T@U) ) (! (= (|Set#IsMember| (|Set#FromBoogieMap| m@@1) bx@@0) (U_2_bool (MapType0Select BoxType boolType m@@1 bx@@0)))
 :pattern ( (|Set#IsMember| (|Set#FromBoogieMap| m@@1) bx@@0))
)))
(assert (forall ((d@@3 T@U) ) (!  (=> (_System.Tuple2.___hMake2_q d@@3) (exists ((|a#1#0#0| T@U) (|a#1#1#0| T@U) ) (= d@@3 (|#_System._tuple#2._#Make2| |a#1#0#0| |a#1#1#0|))))
 :pattern ( (_System.Tuple2.___hMake2_q d@@3))
)))
(assert (forall ((v T@U) (t0@@1 T@U) ) (! (= ($Is SetType v (TSet t0@@1)) (forall ((bx@@1 T@U) ) (!  (=> (|Set#IsMember| v bx@@1) ($IsBox bx@@1 t0@@1))
 :pattern ( (|Set#IsMember| v bx@@1))
)))
 :pattern ( ($Is SetType v (TSet t0@@1)))
)))
(assert (forall ((|l#0@@0| T@U) (|l#1@@0| T@U) (|l#2| T@U) (|l#3| T@U) (|l#4| T@U) (|l#5| T@U) (|$w#3@@0| T@U) ) (! (= (MapType0Select BoxType BoxType (|lambda#8| |l#0@@0| |l#1@@0| |l#2| |l#3| |l#4| |l#5|) |$w#3@@0|) ($Box refType (ite  (or (= ($Unbox refType (MapType0Select BoxType BoxType |l#0@@0| |$w#3@@0|)) |l#1@@0|) (= ($Unbox refType (MapType0Select BoxType BoxType |l#2| |$w#3@@0|)) |l#3|)) |l#4| ($Unbox refType (MapType0Select BoxType BoxType |l#5| |$w#3@@0|)))))
 :pattern ( (MapType0Select BoxType BoxType (|lambda#8| |l#0@@0| |l#1@@0| |l#2| |l#3| |l#4| |l#5|) |$w#3@@0|))
)))
(assert (forall ((|C#0| T@U) ) (!  (=> (or (|M3.__default.GoodCMap#canCall| |C#0|) ($Is MapType |C#0| (TMap Tclass.M3.Element Tclass.M3.Contents))) (= (M3.__default.GoodCMap |C#0|) (forall ((|f#4| T@U) ) (!  (=> ($Is refType |f#4| Tclass.M3.Element?) (=> (and (|Set#IsMember| (|Map#Domain| |C#0|) ($Box refType |f#4|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| |C#0|) ($Box refType |f#4|))))) (|Set#IsMember| (|Map#Domain| |C#0|) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| |C#0|) ($Box refType |f#4|))))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| |C#0|) ($Box refType |f#4|))))
))))
 :pattern ( (M3.__default.GoodCMap |C#0|))
)))
(assert (forall ((d@@4 T@U) ) (!  (=> (M3.Contents.Root_q d@@4) (exists ((|a#1#0#0@@0| Int) ) (= d@@4 (|#M3.Contents.Root| |a#1#0#0@@0|))))
 :pattern ( (M3.Contents.Root_q d@@4))
)))
(assert (forall ((d@@5 T@U) ) (!  (=> (M3.Contents.Link_q d@@5) (exists ((|a#6#0#0| T@U) ) (= d@@5 (|#M3.Contents.Link| |a#6#0#0|))))
 :pattern ( (M3.Contents.Link_q d@@5))
)))
(assert (forall ((|x#0@@0| T@U) ) (! (= ($Is intType |x#0@@0| Tclass._System.nat) (<= (LitInt 0) (U_2_int |x#0@@0|)))
 :pattern ( ($Is intType |x#0@@0| Tclass._System.nat))
)))
(assert ($IsGhostField alloc))
(assert (forall (($ly T@U) (this@@1 T@U) (|d#0| Int) (|e#0| T@U) (|r#0| T@U) (|C#0@@0| T@U) ) (!  (=> (or (|M3.UnionFind.Reaches#canCall| this@@1 (LitInt |d#0|) (Lit refType |e#0|) (Lit refType |r#0|) (Lit MapType |C#0@@0|)) (and (and (and (and (and (and (or (not (= this@@1 null)) (not true)) ($Is refType this@@1 Tclass.M3.UnionFind)) (<= (LitInt 0) |d#0|)) ($Is refType |e#0| Tclass.M3.Element)) ($Is refType |r#0| Tclass.M3.Element)) ($Is MapType |C#0@@0| (TMap Tclass.M3.Element Tclass.M3.Contents))) (and (U_2_bool (Lit boolType (bool_2_U (M3.__default.GoodCMap (Lit MapType |C#0@@0|))))) (|Set#IsMember| (|Map#Domain| |C#0@@0|) ($Box refType |e#0|))))) (and (=> (not (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@0|)) ($Box refType (Lit refType |e#0|)))))) (let ((|next#9| (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@0|)) ($Box refType (Lit refType |e#0|)))))))
 (=> (U_2_bool (Lit boolType (bool_2_U  (or (not (= |d#0| 0)) (not true))))) (|M3.UnionFind.Reaches#canCall| this@@1 (LitInt (- |d#0| 1)) |next#9| (Lit refType |r#0|) (Lit MapType |C#0@@0|))))) (= (M3.UnionFind.Reaches ($LS $ly) this@@1 (LitInt |d#0|) (Lit refType |e#0|) (Lit refType |r#0|) (Lit MapType |C#0@@0|)) (ite (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@0|)) ($Box refType (Lit refType |e#0|))))) (= (Lit refType |e#0|) (Lit refType |r#0|)) (let ((|next#8| (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@0|)) ($Box refType (Lit refType |e#0|)))))))
 (and (or (not (= |d#0| 0)) (not true)) (M3.UnionFind.Reaches ($LS $ly) this@@1 (LitInt (- |d#0| 1)) |next#8| (Lit refType |r#0|) (Lit MapType |C#0@@0|))))))))
 :weight 3
 :pattern ( (M3.UnionFind.Reaches ($LS $ly) this@@1 (LitInt |d#0|) (Lit refType |e#0|) (Lit refType |r#0|) (Lit MapType |C#0@@0|)))
)))
(assert (forall (($Heap@@1 T@U) (this@@2 T@U) ) (!  (=> (or (|M3.UnionFind.Collect#canCall| $Heap@@1 this@@2) (and (and (and ($IsGoodHeap $Heap@@1) (or (not (= this@@2 null)) (not true))) ($IsAlloc refType this@@2 Tclass.M3.UnionFind $Heap@@1)) (forall ((|f#0| T@U) ) (!  (=> ($Is refType |f#0| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) M3.UnionFind.M))) ($Box refType |f#0|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 |f#0|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 |f#0|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 |f#0|) M3.Element.c)))
)))) ($IsAlloc MapType (M3.UnionFind.Collect $Heap@@1 this@@2) (TMap Tclass.M3.Element Tclass.M3.Contents) $Heap@@1))
 :pattern ( ($IsAlloc MapType (M3.UnionFind.Collect $Heap@@1 this@@2) (TMap Tclass.M3.Element Tclass.M3.Contents) $Heap@@1))
)))
(assert (forall ((v@@0 T@U) (t@@1 T@U) (h@@0 T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@0) t@@1 h@@0) ($IsAlloc T@@1 v@@0 t@@1 h@@0))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@0) t@@1 h@@0))
)))
(assert (forall ((h@@1 T@U) (k@@0 T@U) (bx@@2 T@U) (t@@2 T@U) ) (!  (=> ($HeapSucc h@@1 k@@0) (=> ($IsAllocBox bx@@2 t@@2 h@@1) ($IsAllocBox bx@@2 t@@2 k@@0)))
 :pattern ( ($HeapSucc h@@1 k@@0) ($IsAllocBox bx@@2 t@@2 h@@1))
)))
(assert (forall ((h@@2 T@U) (k@@1 T@U) (v@@1 T@U) (t@@3 T@U) (T@@2 T@T) ) (!  (=> ($HeapSucc h@@2 k@@1) (=> ($IsAlloc T@@2 v@@1 t@@3 h@@2) ($IsAlloc T@@2 v@@1 t@@3 k@@1)))
 :pattern ( ($HeapSucc h@@2 k@@1) ($IsAlloc T@@2 v@@1 t@@3 h@@2))
)))
(assert (forall (($h0 T@U) ($h1 T@U) (this@@3 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0) ($IsGoodHeap $h1)) (and (or (not (= this@@3 null)) (not true)) ($Is refType this@@3 Tclass.M3.UnionFind))) (and ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1))) (=> (forall (($o@@4 T@U) ($f T@U) )  (=> (and (or (not (= $o@@4 null)) (not true)) (or (= $o@@4 this@@3) (and ($Is refType $o@@4 Tclass.M3.Element) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 this@@3) M3.UnionFind.M))) ($Box refType $o@@4))))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o@@4) $f) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1 $o@@4) $f)))) (= (M3.UnionFind.Collect $h0 this@@3) (M3.UnionFind.Collect $h1 this@@3))))
 :pattern ( ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1) (M3.UnionFind.Collect $h1 this@@3))
)))
(assert (forall (($h@@7 T@U) ($o@@5 T@U) ) (!  (=> (and ($IsGoodHeap $h@@7) (and (or (not (= $o@@5 null)) (not true)) (= (dtype $o@@5) Tclass.M3.Element?))) ($Is DatatypeTypeType ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@7 $o@@5) M3.Element.c)) Tclass.M3.Contents))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@7 $o@@5) M3.Element.c)))
)))
(assert (forall (($Heap@@2 T@U) (this@@4 T@U) ) (!  (=> (or (|M3.UnionFind.ValidM1#canCall| $Heap@@2 this@@4) (and ($IsGoodHeap $Heap@@2) (and (or (not (= this@@4 null)) (not true)) (and ($Is refType this@@4 Tclass.M3.UnionFind) ($IsAlloc refType this@@4 Tclass.M3.UnionFind $Heap@@2))))) (=> (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@2 this@@4) M3.UnionFind.M)) |Map#Empty|) (M3.UnionFind.ValidM1 $Heap@@2 this@@4)))
 :pattern ( (M3.UnionFind.ValidM1 $Heap@@2 this@@4))
)))
(assert (forall ((bx@@3 T@U) ) (!  (=> ($IsBox bx@@3 Tclass._System.nat) (and (= ($Box intType ($Unbox intType bx@@3)) bx@@3) ($Is intType ($Unbox intType bx@@3) Tclass._System.nat)))
 :pattern ( ($IsBox bx@@3 Tclass._System.nat))
)))
(assert (forall ((bx@@4 T@U) ) (!  (=> ($IsBox bx@@4 Tclass._System.object?) (and (= ($Box refType ($Unbox refType bx@@4)) bx@@4) ($Is refType ($Unbox refType bx@@4) Tclass._System.object?)))
 :pattern ( ($IsBox bx@@4 Tclass._System.object?))
)))
(assert (forall ((bx@@5 T@U) ) (!  (=> ($IsBox bx@@5 Tclass._System.object) (and (= ($Box refType ($Unbox refType bx@@5)) bx@@5) ($Is refType ($Unbox refType bx@@5) Tclass._System.object)))
 :pattern ( ($IsBox bx@@5 Tclass._System.object))
)))
(assert (forall ((bx@@6 T@U) ) (!  (=> ($IsBox bx@@6 Tclass.M3.UnionFind) (and (= ($Box refType ($Unbox refType bx@@6)) bx@@6) ($Is refType ($Unbox refType bx@@6) Tclass.M3.UnionFind)))
 :pattern ( ($IsBox bx@@6 Tclass.M3.UnionFind))
)))
(assert (forall ((bx@@7 T@U) ) (!  (=> ($IsBox bx@@7 Tclass.M3.Element) (and (= ($Box refType ($Unbox refType bx@@7)) bx@@7) ($Is refType ($Unbox refType bx@@7) Tclass.M3.Element)))
 :pattern ( ($IsBox bx@@7 Tclass.M3.Element))
)))
(assert (forall ((bx@@8 T@U) ) (!  (=> ($IsBox bx@@8 Tclass.M3.Contents) (and (= ($Box DatatypeTypeType ($Unbox DatatypeTypeType bx@@8)) bx@@8) ($Is DatatypeTypeType ($Unbox DatatypeTypeType bx@@8) Tclass.M3.Contents)))
 :pattern ( ($IsBox bx@@8 Tclass.M3.Contents))
)))
(assert (forall ((bx@@9 T@U) ) (!  (=> ($IsBox bx@@9 Tclass.M3.Element?) (and (= ($Box refType ($Unbox refType bx@@9)) bx@@9) ($Is refType ($Unbox refType bx@@9) Tclass.M3.Element?)))
 :pattern ( ($IsBox bx@@9 Tclass.M3.Element?))
)))
(assert (forall ((bx@@10 T@U) ) (!  (=> ($IsBox bx@@10 Tclass.M3.UnionFind?) (and (= ($Box refType ($Unbox refType bx@@10)) bx@@10) ($Is refType ($Unbox refType bx@@10) Tclass.M3.UnionFind?)))
 :pattern ( ($IsBox bx@@10 Tclass.M3.UnionFind?))
)))
(assert (forall ((|a#2#0#0@@1| Int) ) (! (= ($Is DatatypeTypeType (|#M3.Contents.Root| |a#2#0#0@@1|) Tclass.M3.Contents) ($Is intType (int_2_U |a#2#0#0@@1|) Tclass._System.nat))
 :pattern ( ($Is DatatypeTypeType (|#M3.Contents.Root| |a#2#0#0@@1|) Tclass.M3.Contents))
)))
(assert (forall ((|a#7#0#0| T@U) ) (! (= ($Is DatatypeTypeType (|#M3.Contents.Link| |a#7#0#0|) Tclass.M3.Contents) ($Is refType |a#7#0#0| Tclass.M3.Element))
 :pattern ( ($Is DatatypeTypeType (|#M3.Contents.Link| |a#7#0#0|) Tclass.M3.Contents))
)))
(assert (forall ((|c#0@@2| T@U) ) (! (= ($Is refType |c#0@@2| Tclass._System.object)  (and ($Is refType |c#0@@2| Tclass._System.object?) (or (not (= |c#0@@2| null)) (not true))))
 :pattern ( ($Is refType |c#0@@2| Tclass._System.object))
 :pattern ( ($Is refType |c#0@@2| Tclass._System.object?))
)))
(assert (forall ((|c#0@@3| T@U) ) (! (= ($Is refType |c#0@@3| Tclass.M3.UnionFind)  (and ($Is refType |c#0@@3| Tclass.M3.UnionFind?) (or (not (= |c#0@@3| null)) (not true))))
 :pattern ( ($Is refType |c#0@@3| Tclass.M3.UnionFind))
 :pattern ( ($Is refType |c#0@@3| Tclass.M3.UnionFind?))
)))
(assert (forall ((|c#0@@4| T@U) ) (! (= ($Is refType |c#0@@4| Tclass.M3.Element)  (and ($Is refType |c#0@@4| Tclass.M3.Element?) (or (not (= |c#0@@4| null)) (not true))))
 :pattern ( ($Is refType |c#0@@4| Tclass.M3.Element))
 :pattern ( ($Is refType |c#0@@4| Tclass.M3.Element?))
)))
(assert (forall (($h@@8 T@U) ($o@@6 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@8) (and (or (not (= $o@@6 null)) (not true)) (= (dtype $o@@6) Tclass.M3.Element?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@8 $o@@6) alloc)))) ($IsAlloc DatatypeTypeType ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@8 $o@@6) M3.Element.c)) Tclass.M3.Contents $h@@8))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@8 $o@@6) M3.Element.c)))
)))
(assert (forall ((m@@2 T@U) (|m'| T@U) ) (! (= (|Map#Equal| m@@2 |m'|)  (and (forall ((u T@U) ) (= (|Set#IsMember| (|Map#Domain| m@@2) u) (|Set#IsMember| (|Map#Domain| |m'|) u))) (forall ((u@@0 T@U) )  (=> (|Set#IsMember| (|Map#Domain| m@@2) u@@0) (= (MapType0Select BoxType BoxType (|Map#Elements| m@@2) u@@0) (MapType0Select BoxType BoxType (|Map#Elements| |m'|) u@@0))))))
 :pattern ( (|Map#Equal| m@@2 |m'|))
)))
(assert (forall (($h@@9 T@U) ($o@@7 T@U) ) (!  (=> (and ($IsGoodHeap $h@@9) (and (or (not (= $o@@7 null)) (not true)) (= (dtype $o@@7) Tclass.M3.UnionFind?))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@9 $o@@7) M3.UnionFind.Repr)) (TSet Tclass._System.object?)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@9 $o@@7) M3.UnionFind.Repr)))
)))
(assert (forall (($h@@10 T@U) ($o@@8 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@10) (and (or (not (= $o@@8 null)) (not true)) (= (dtype $o@@8) Tclass.M3.UnionFind?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@10 $o@@8) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@10 $o@@8) M3.UnionFind.Repr)) (TSet Tclass._System.object?) $h@@10))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@10 $o@@8) M3.UnionFind.Repr)))
)))
(assert (forall ((|C#0@@1| T@U) ) (!  (=> (or (|M3.__default.GoodCMap#canCall| (Lit MapType |C#0@@1|)) ($Is MapType |C#0@@1| (TMap Tclass.M3.Element Tclass.M3.Contents))) (= (M3.__default.GoodCMap (Lit MapType |C#0@@1|)) (forall ((|f#5| T@U) ) (!  (=> ($Is refType |f#5| Tclass.M3.Element?) (=> (and (|Set#IsMember| (|Map#Domain| |C#0@@1|) ($Box refType |f#5|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@1|)) ($Box refType |f#5|))))) (|Set#IsMember| (|Map#Domain| |C#0@@1|) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@1|)) ($Box refType |f#5|))))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| |C#0@@1|) ($Box refType |f#5|))))
))))
 :weight 3
 :pattern ( (M3.__default.GoodCMap (Lit MapType |C#0@@1|)))
)))
(assert (forall (($Heap@@3 T@U) (this@@5 T@U) ) (!  (=> (or (|M3.UnionFind.Collect#canCall| $Heap@@3 this@@5) (and (and ($IsGoodHeap $Heap@@3) (and (or (not (= this@@5 null)) (not true)) (and ($Is refType this@@5 Tclass.M3.UnionFind) ($IsAlloc refType this@@5 Tclass.M3.UnionFind $Heap@@3)))) (forall ((|f#5@@0| T@U) ) (!  (=> ($Is refType |f#5@@0| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@5) M3.UnionFind.M))) ($Box refType |f#5@@0|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 |f#5@@0|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@5) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 |f#5@@0|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 |f#5@@0|) M3.Element.c)))
)))) (= (M3.UnionFind.Collect $Heap@@3 this@@5) (|Map#Glue| (|Set#FromBoogieMap| (|lambda#1| Tclass.M3.Element (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@3 this@@5) M3.UnionFind.M))))) (|lambda#2| $Heap@@3 M3.Element.c) (TMap Tclass.M3.Element Tclass.M3.Contents))))
 :pattern ( (M3.UnionFind.Collect $Heap@@3 this@@5) ($IsGoodHeap $Heap@@3))
)))
(assert (forall (($h@@11 T@U) ($o@@9 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@11) (and (or (not (= $o@@9 null)) (not true)) (= (dtype $o@@9) Tclass.M3.UnionFind?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@11 $o@@9) alloc)))) ($IsAlloc MapType ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@11 $o@@9) M3.UnionFind.M)) (TMap Tclass.M3.Element Tclass.M3.Element) $h@@11))
 :pattern ( ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@11 $o@@9) M3.UnionFind.M)))
)))
(assert (forall (($h@@12 T@U) ($o@@10 T@U) ) (!  (=> (and ($IsGoodHeap $h@@12) (and (or (not (= $o@@10 null)) (not true)) (= (dtype $o@@10) Tclass.M3.UnionFind?))) ($Is MapType ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@12 $o@@10) M3.UnionFind.M)) (TMap Tclass.M3.Element Tclass.M3.Element)))
 :pattern ( ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@12 $o@@10) M3.UnionFind.M)))
)))
(assert (forall ((m@@3 T@U) (|m'@@0| T@U) ) (!  (=> (|Map#Equal| m@@3 |m'@@0|) (= m@@3 |m'@@0|))
 :pattern ( (|Map#Equal| m@@3 |m'@@0|))
)))
(assert (forall (($ly@@0 T@U) (this@@6 T@U) (|d#0@@0| Int) (|e#0@@0| T@U) (|r#0@@0| T@U) (|C#0@@2| T@U) ) (! (= (M3.UnionFind.Reaches ($LS $ly@@0) this@@6 |d#0@@0| |e#0@@0| |r#0@@0| |C#0@@2|) (M3.UnionFind.Reaches $ly@@0 this@@6 |d#0@@0| |e#0@@0| |r#0@@0| |C#0@@2|))
 :pattern ( (M3.UnionFind.Reaches ($LS $ly@@0) this@@6 |d#0@@0| |e#0@@0| |r#0@@0| |C#0@@2|))
)))
(assert (forall ((|a#2#0#0@@2| Int) ($h@@13 T@U) ) (!  (=> ($IsGoodHeap $h@@13) (= ($IsAlloc DatatypeTypeType (|#M3.Contents.Root| |a#2#0#0@@2|) Tclass.M3.Contents $h@@13) ($IsAlloc intType (int_2_U |a#2#0#0@@2|) Tclass._System.nat $h@@13)))
 :pattern ( ($IsAlloc DatatypeTypeType (|#M3.Contents.Root| |a#2#0#0@@2|) Tclass.M3.Contents $h@@13))
)))
(assert (forall ((|a#7#0#0@@0| T@U) ($h@@14 T@U) ) (!  (=> ($IsGoodHeap $h@@14) (= ($IsAlloc DatatypeTypeType (|#M3.Contents.Link| |a#7#0#0@@0|) Tclass.M3.Contents $h@@14) ($IsAlloc refType |a#7#0#0@@0| Tclass.M3.Element $h@@14)))
 :pattern ( ($IsAlloc DatatypeTypeType (|#M3.Contents.Link| |a#7#0#0@@0|) Tclass.M3.Contents $h@@14))
)))
(assert (forall ((d@@6 T@U) ) (!  (=> ($Is DatatypeTypeType d@@6 Tclass.M3.Contents) (or (M3.Contents.Root_q d@@6) (M3.Contents.Link_q d@@6)))
 :pattern ( (M3.Contents.Link_q d@@6) ($Is DatatypeTypeType d@@6 Tclass.M3.Contents))
 :pattern ( (M3.Contents.Root_q d@@6) ($Is DatatypeTypeType d@@6 Tclass.M3.Contents))
)))
(assert (forall ((a@@3 T@U) (b@@3 T@U) (c T@U) ) (!  (=> (or (not (= a@@3 c)) (not true)) (=> (and ($HeapSucc a@@3 b@@3) ($HeapSucc b@@3 c)) ($HeapSucc a@@3 c)))
 :pattern ( ($HeapSucc a@@3 b@@3) ($HeapSucc b@@3 c))
)))
(assert (forall ((|l#0@@1| T@U) (|l#1@@1| T@U) (|$w#3@@1| T@U) ) (! (= (MapType0Select BoxType BoxType (|lambda#2| |l#0@@1| |l#1@@1|) |$w#3@@1|) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#0@@1| ($Unbox refType |$w#3@@1|)) |l#1@@1|))
 :pattern ( (MapType0Select BoxType BoxType (|lambda#2| |l#0@@1| |l#1@@1|) |$w#3@@1|))
)))
(assert (forall ((cl T@U) (nm T@U) ) (!  (and (= (DeclType (FieldOfDecl cl nm)) cl) (= (DeclName (FieldOfDecl cl nm)) nm))
 :pattern ( (FieldOfDecl cl nm))
)))
(assert (forall ((v@@2 T@U) (t@@4 T@U) (T@@3 T@T) ) (! (= ($IsBox ($Box T@@3 v@@2) t@@4) ($Is T@@3 v@@2 t@@4))
 :pattern ( ($IsBox ($Box T@@3 v@@2) t@@4))
)))
(assert (forall ((v@@3 T@U) (t0@@2 T@U) (h@@3 T@U) ) (! (= ($IsAlloc SetType v@@3 (TSet t0@@2) h@@3) (forall ((bx@@11 T@U) ) (!  (=> (|Set#IsMember| v@@3 bx@@11) ($IsAllocBox bx@@11 t0@@2 h@@3))
 :pattern ( (|Set#IsMember| v@@3 bx@@11))
)))
 :pattern ( ($IsAlloc SetType v@@3 (TSet t0@@2) h@@3))
)))
(assert (forall ((t@@5 T@U) (u@@1 T@U) ) (! (= (Inv0_TMap (TMap t@@5 u@@1)) t@@5)
 :pattern ( (TMap t@@5 u@@1))
)))
(assert (forall ((t@@6 T@U) (u@@2 T@U) ) (! (= (Inv1_TMap (TMap t@@6 u@@2)) u@@2)
 :pattern ( (TMap t@@6 u@@2))
)))
(assert (forall ((t@@7 T@U) (u@@3 T@U) ) (! (= (Tag (TMap t@@7 u@@3)) TagMap)
 :pattern ( (TMap t@@7 u@@3))
)))
(assert (forall ((|a#0#0#0| T@U) (|a#0#1#0| T@U) ) (! (= (DatatypeCtorId (|#_System._tuple#2._#Make2| |a#0#0#0| |a#0#1#0|)) |##_System._tuple#2._#Make2|)
 :pattern ( (|#_System._tuple#2._#Make2| |a#0#0#0| |a#0#1#0|))
)))
(assert (forall ((|_System._tuple#2$T0@@2| T@U) (|_System._tuple#2$T1@@2| T@U) ) (! (= (Tclass._System.Tuple2_0 (Tclass._System.Tuple2 |_System._tuple#2$T0@@2| |_System._tuple#2$T1@@2|)) |_System._tuple#2$T0@@2|)
 :pattern ( (Tclass._System.Tuple2 |_System._tuple#2$T0@@2| |_System._tuple#2$T1@@2|))
)))
(assert (forall ((|_System._tuple#2$T0@@3| T@U) (|_System._tuple#2$T1@@3| T@U) ) (! (= (Tclass._System.Tuple2_1 (Tclass._System.Tuple2 |_System._tuple#2$T0@@3| |_System._tuple#2$T1@@3|)) |_System._tuple#2$T1@@3|)
 :pattern ( (Tclass._System.Tuple2 |_System._tuple#2$T0@@3| |_System._tuple#2$T1@@3|))
)))
(assert (forall ((|a#4#0#0| T@U) (|a#4#1#0| T@U) ) (! (= (_System.Tuple2._0 (|#_System._tuple#2._#Make2| |a#4#0#0| |a#4#1#0|)) |a#4#0#0|)
 :pattern ( (|#_System._tuple#2._#Make2| |a#4#0#0| |a#4#1#0|))
)))
(assert (forall ((|a#6#0#0@@0| T@U) (|a#6#1#0| T@U) ) (! (= (_System.Tuple2._1 (|#_System._tuple#2._#Make2| |a#6#0#0@@0| |a#6#1#0|)) |a#6#1#0|)
 :pattern ( (|#_System._tuple#2._#Make2| |a#6#0#0@@0| |a#6#1#0|))
)))
(assert (forall (($o@@11 T@U) ) (! ($Is refType $o@@11 Tclass._System.object?)
 :pattern ( ($Is refType $o@@11 Tclass._System.object?))
)))
(assert (forall ((t@@8 T@U) ) (! (= (Inv0_TSet (TSet t@@8)) t@@8)
 :pattern ( (TSet t@@8))
)))
(assert (forall ((t@@9 T@U) ) (! (= (Tag (TSet t@@9)) TagSet)
 :pattern ( (TSet t@@9))
)))
(assert (forall ((|a#0#0#0@@0| Int) ) (! (= (DatatypeCtorId (|#M3.Contents.Root| |a#0#0#0@@0|)) |##M3.Contents.Root|)
 :pattern ( (|#M3.Contents.Root| |a#0#0#0@@0|))
)))
(assert (forall ((|a#4#0#0@@0| Int) ) (! (= (M3.Contents.depth (|#M3.Contents.Root| |a#4#0#0@@0|)) |a#4#0#0@@0|)
 :pattern ( (|#M3.Contents.Root| |a#4#0#0@@0|))
)))
(assert (forall ((|a#5#0#0| T@U) ) (! (= (DatatypeCtorId (|#M3.Contents.Link| |a#5#0#0|)) |##M3.Contents.Link|)
 :pattern ( (|#M3.Contents.Link| |a#5#0#0|))
)))
(assert (forall ((|a#9#0#0| T@U) ) (! (= (M3.Contents.next (|#M3.Contents.Link| |a#9#0#0|)) |a#9#0#0|)
 :pattern ( (|#M3.Contents.Link| |a#9#0#0|))
)))
(assert (forall ((x@@5 T@U) (T@@4 T@T) ) (! (= ($Unbox T@@4 ($Box T@@4 x@@5)) x@@5)
 :pattern ( ($Box T@@4 x@@5))
)))
(assert (forall ((v@@4 T@U) (t0@@3 T@U) (t1@@1 T@U) (h@@4 T@U) ) (! (= ($IsAlloc MapType v@@4 (TMap t0@@3 t1@@1) h@@4) (forall ((bx@@12 T@U) ) (!  (=> (|Set#IsMember| (|Map#Domain| v@@4) bx@@12) (and ($IsAllocBox (MapType0Select BoxType BoxType (|Map#Elements| v@@4) bx@@12) t1@@1 h@@4) ($IsAllocBox bx@@12 t0@@3 h@@4)))
 :pattern ( (MapType0Select BoxType BoxType (|Map#Elements| v@@4) bx@@12))
 :pattern ( (|Set#IsMember| (|Map#Domain| v@@4) bx@@12))
)))
 :pattern ( ($IsAlloc MapType v@@4 (TMap t0@@3 t1@@1) h@@4))
)))
(assert (forall (($Heap@@4 T@U) (this@@7 T@U) ) (!  (=> (or (|M3.UnionFind.Valid#canCall| $Heap@@4 this@@7) (and ($IsGoodHeap $Heap@@4) (and (or (not (= this@@7 null)) (not true)) (and ($Is refType this@@7 Tclass.M3.UnionFind) ($IsAlloc refType this@@7 Tclass.M3.UnionFind $Heap@@4))))) (and (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@4 this@@7) M3.UnionFind.Repr)) ($Box refType this@@7)) (=> (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@4 this@@7) M3.UnionFind.Repr)) ($Box refType null))) (|M3.UnionFind.ValidM1#canCall| $Heap@@4 this@@7))) (= (M3.UnionFind.Valid $Heap@@4 this@@7)  (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@4 this@@7) M3.UnionFind.Repr)) ($Box refType this@@7)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@4 this@@7) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@@4 this@@7)))))
 :pattern ( (M3.UnionFind.Valid $Heap@@4 this@@7) ($IsGoodHeap $Heap@@4))
)))
(assert (forall ((|a#5#0#0@@0| T@U) (|a#5#1#0| T@U) ) (! (< (BoxRank |a#5#0#0@@0|) (DtRank (|#_System._tuple#2._#Make2| |a#5#0#0@@0| |a#5#1#0|)))
 :pattern ( (|#_System._tuple#2._#Make2| |a#5#0#0@@0| |a#5#1#0|))
)))
(assert (forall ((|a#7#0#0@@1| T@U) (|a#7#1#0| T@U) ) (! (< (BoxRank |a#7#1#0|) (DtRank (|#_System._tuple#2._#Make2| |a#7#0#0@@1| |a#7#1#0|)))
 :pattern ( (|#_System._tuple#2._#Make2| |a#7#0#0@@1| |a#7#1#0|))
)))
(assert (forall (($h0@@0 T@U) ($h1@@0 T@U) (this@@8 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@0) ($IsGoodHeap $h1@@0)) (and (or (not (= this@@8 null)) (not true)) ($Is refType this@@8 Tclass.M3.UnionFind))) (and ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0))) (=> (forall (($o@@12 T@U) ($f@@0 T@U) )  (=> (and (or (not (= $o@@12 null)) (not true)) (or (= $o@@12 this@@8) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@0 this@@8) M3.UnionFind.Repr)) ($Box refType $o@@12)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@0 $o@@12) $f@@0) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@0 $o@@12) $f@@0)))) (= (M3.UnionFind.ValidM1 $h0@@0 this@@8) (M3.UnionFind.ValidM1 $h1@@0 this@@8))))
 :pattern ( ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0) (M3.UnionFind.ValidM1 $h1@@0 this@@8))
)))
(assert (forall (($h0@@1 T@U) ($h1@@1 T@U) (this@@9 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@1) ($IsGoodHeap $h1@@1)) (and (or (not (= this@@9 null)) (not true)) ($Is refType this@@9 Tclass.M3.UnionFind))) (and ($IsHeapAnchor $h0@@1) ($HeapSucc $h0@@1 $h1@@1))) (=> (forall (($o@@13 T@U) ($f@@1 T@U) )  (=> (and (or (not (= $o@@13 null)) (not true)) (or (= $o@@13 this@@9) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@1 this@@9) M3.UnionFind.Repr)) ($Box refType $o@@13)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@1 $o@@13) $f@@1) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@1 $o@@13) $f@@1)))) (= (M3.UnionFind.Valid $h0@@1 this@@9) (M3.UnionFind.Valid $h1@@1 this@@9))))
 :pattern ( ($IsHeapAnchor $h0@@1) ($HeapSucc $h0@@1 $h1@@1) (M3.UnionFind.Valid $h1@@1 this@@9))
)))
(assert (forall ((u@@4 T@U) ) (!  (not (|Set#IsMember| (|Map#Domain| |Map#Empty|) u@@4))
 :pattern ( (|Set#IsMember| (|Map#Domain| |Map#Empty|) u@@4))
)))
(assert (forall ((bx@@13 T@U) (s T@U) (t@@10 T@U) ) (!  (=> ($IsBox bx@@13 (TMap s t@@10)) (and (= ($Box MapType ($Unbox MapType bx@@13)) bx@@13) ($Is MapType ($Unbox MapType bx@@13) (TMap s t@@10))))
 :pattern ( ($IsBox bx@@13 (TMap s t@@10)))
)))
(assert (forall ((|_System._tuple#2$T0@@4| T@U) (|_System._tuple#2$T1@@4| T@U) (bx@@14 T@U) ) (!  (=> ($IsBox bx@@14 (Tclass._System.Tuple2 |_System._tuple#2$T0@@4| |_System._tuple#2$T1@@4|)) (and (= ($Box DatatypeTypeType ($Unbox DatatypeTypeType bx@@14)) bx@@14) ($Is DatatypeTypeType ($Unbox DatatypeTypeType bx@@14) (Tclass._System.Tuple2 |_System._tuple#2$T0@@4| |_System._tuple#2$T1@@4|))))
 :pattern ( ($IsBox bx@@14 (Tclass._System.Tuple2 |_System._tuple#2$T0@@4| |_System._tuple#2$T1@@4|)))
)))
(assert  (and (forall ((t0@@4 T@T) (t1@@2 T@T) (t2 T@T) (val@@1 T@U) (m@@4 T@U) (x0@@1 T@U) (x1 T@U) ) (! (= (MapType1Select t0@@4 t1@@2 t2 (MapType1Store t0@@4 t1@@2 t2 m@@4 x0@@1 x1 val@@1) x0@@1 x1) val@@1)
 :weight 0
)) (and (forall ((u0@@0 T@T) (u1@@0 T@T) (u2 T@T) (val@@2 T@U) (m@@5 T@U) (x0@@2 T@U) (x1@@0 T@U) (y0@@0 T@U) (y1 T@U) ) (!  (or (= x0@@2 y0@@0) (= (MapType1Select u0@@0 u1@@0 u2 (MapType1Store u0@@0 u1@@0 u2 m@@5 x0@@2 x1@@0 val@@2) y0@@0 y1) (MapType1Select u0@@0 u1@@0 u2 m@@5 y0@@0 y1)))
 :weight 0
)) (forall ((u0@@1 T@T) (u1@@1 T@T) (u2@@0 T@T) (val@@3 T@U) (m@@6 T@U) (x0@@3 T@U) (x1@@1 T@U) (y0@@1 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType1Select u0@@1 u1@@1 u2@@0 (MapType1Store u0@@1 u1@@1 u2@@0 m@@6 x0@@3 x1@@1 val@@3) y0@@1 y1@@0) (MapType1Select u0@@1 u1@@1 u2@@0 m@@6 y0@@1 y1@@0)))
 :weight 0
)))))
(assert (forall ((|l#0@@2| T@U) (|l#1@@2| T@U) (|l#2@@0| T@U) (|l#3@@0| Bool) ($o@@14 T@U) ($f@@2 T@U) ) (! (= (U_2_bool (MapType1Select refType FieldType boolType (|lambda#0| |l#0@@2| |l#1@@2| |l#2@@0| |l#3@@0|) $o@@14 $f@@2))  (=> (and (or (not (= $o@@14 |l#0@@2|)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#1@@2| $o@@14) |l#2@@0|)))) |l#3@@0|))
 :pattern ( (MapType1Select refType FieldType boolType (|lambda#0| |l#0@@2| |l#1@@2| |l#2@@0| |l#3@@0|) $o@@14 $f@@2))
)))
(assert (forall (($Heap@@5 T@U) (this@@10 T@U) ) (!  (=> (or (|M3.UnionFind.Collect#canCall| $Heap@@5 this@@10) (and (and ($IsGoodHeap $Heap@@5) (and (or (not (= this@@10 null)) (not true)) (and ($Is refType this@@10 Tclass.M3.UnionFind) ($IsAlloc refType this@@10 Tclass.M3.UnionFind $Heap@@5)))) (forall ((|f#0@@0| T@U) ) (!  (=> ($Is refType |f#0@@0| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 this@@10) M3.UnionFind.M))) ($Box refType |f#0@@0|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 |f#0@@0|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 this@@10) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 |f#0@@0|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@5 |f#0@@0|) M3.Element.c)))
)))) (and (M3.__default.GoodCMap (M3.UnionFind.Collect $Heap@@5 this@@10)) ($Is MapType (M3.UnionFind.Collect $Heap@@5 this@@10) (TMap Tclass.M3.Element Tclass.M3.Contents))))
 :pattern ( (M3.UnionFind.Collect $Heap@@5 this@@10))
)))
(assert (forall ((|_System._tuple#2$T0@@5| T@U) (|_System._tuple#2$T1@@5| T@U) ) (!  (and (= (Tag (Tclass._System.Tuple2 |_System._tuple#2$T0@@5| |_System._tuple#2$T1@@5|)) Tagclass._System.Tuple2) (= (TagFamily (Tclass._System.Tuple2 |_System._tuple#2$T0@@5| |_System._tuple#2$T1@@5|)) |tytagFamily$_tuple#2|))
 :pattern ( (Tclass._System.Tuple2 |_System._tuple#2$T0@@5| |_System._tuple#2$T1@@5|))
)))
(assert (forall ((m@@7 T@U) ) (!  (or (= m@@7 |Map#Empty|) (exists ((k@@2 T@U) ) (|Set#IsMember| (|Map#Domain| m@@7) k@@2)))
 :pattern ( (|Map#Domain| m@@7))
)))
(assert (forall ((m@@8 T@U) ) (!  (or (= m@@8 |Map#Empty|) (exists ((v@@5 T@U) ) (|Set#IsMember| (|Map#Values| m@@8) v@@5)))
 :pattern ( (|Map#Values| m@@8))
)))
(assert (forall ((m@@9 T@U) (item T@U) ) (! (= (|Set#IsMember| (|Map#Items| m@@9) item)  (and (|Set#IsMember| (|Map#Domain| m@@9) (_System.Tuple2._0 ($Unbox DatatypeTypeType item))) (= (MapType0Select BoxType BoxType (|Map#Elements| m@@9) (_System.Tuple2._0 ($Unbox DatatypeTypeType item))) (_System.Tuple2._1 ($Unbox DatatypeTypeType item)))))
 :pattern ( (|Set#IsMember| (|Map#Items| m@@9) item))
)))
(assert (forall ((m@@10 T@U) (v@@6 T@U) ) (! (= (|Set#IsMember| (|Map#Values| m@@10) v@@6) (exists ((u@@5 T@U) ) (!  (and (|Set#IsMember| (|Map#Domain| m@@10) u@@5) (= v@@6 (MapType0Select BoxType BoxType (|Map#Elements| m@@10) u@@5)))
 :pattern ( (|Set#IsMember| (|Map#Domain| m@@10) u@@5))
 :pattern ( (MapType0Select BoxType BoxType (|Map#Elements| m@@10) u@@5))
)))
 :pattern ( (|Set#IsMember| (|Map#Values| m@@10) v@@6))
)))
(assert (forall ((m@@11 T@U) (u@@6 T@U) (|u'| T@U) (v@@7 T@U) ) (!  (and (=> (= |u'| u@@6) (and (|Set#IsMember| (|Map#Domain| (|Map#Build| m@@11 u@@6 v@@7)) |u'|) (= (MapType0Select BoxType BoxType (|Map#Elements| (|Map#Build| m@@11 u@@6 v@@7)) |u'|) v@@7))) (=> (or (not (= |u'| u@@6)) (not true)) (and (= (|Set#IsMember| (|Map#Domain| (|Map#Build| m@@11 u@@6 v@@7)) |u'|) (|Set#IsMember| (|Map#Domain| m@@11) |u'|)) (= (MapType0Select BoxType BoxType (|Map#Elements| (|Map#Build| m@@11 u@@6 v@@7)) |u'|) (MapType0Select BoxType BoxType (|Map#Elements| m@@11) |u'|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| (|Map#Build| m@@11 u@@6 v@@7)) |u'|))
 :pattern ( (MapType0Select BoxType BoxType (|Map#Elements| (|Map#Build| m@@11 u@@6 v@@7)) |u'|))
)))
(assert (forall ((d@@7 T@U) ) (! (= (BoxRank ($Box DatatypeTypeType d@@7)) (DtRank d@@7))
 :pattern ( (BoxRank ($Box DatatypeTypeType d@@7)))
)))
(assert (forall ((bx@@15 T@U) (t@@11 T@U) ) (!  (=> ($IsBox bx@@15 (TSet t@@11)) (and (= ($Box SetType ($Unbox SetType bx@@15)) bx@@15) ($Is SetType ($Unbox SetType bx@@15) (TSet t@@11))))
 :pattern ( ($IsBox bx@@15 (TSet t@@11)))
)))
(assert (forall ((v@@8 T@U) (t0@@5 T@U) (t1@@3 T@U) ) (! (= ($Is MapType v@@8 (TMap t0@@5 t1@@3)) (forall ((bx@@16 T@U) ) (!  (=> (|Set#IsMember| (|Map#Domain| v@@8) bx@@16) (and ($IsBox (MapType0Select BoxType BoxType (|Map#Elements| v@@8) bx@@16) t1@@3) ($IsBox bx@@16 t0@@5)))
 :pattern ( (MapType0Select BoxType BoxType (|Map#Elements| v@@8) bx@@16))
 :pattern ( (|Set#IsMember| (|Map#Domain| v@@8) bx@@16))
)))
 :pattern ( ($Is MapType v@@8 (TMap t0@@5 t1@@3)))
)))
(assert (= (Tag Tclass._System.nat) Tagclass._System.nat))
(assert (= (TagFamily Tclass._System.nat) tytagFamily$nat))
(assert (= (Tag Tclass._System.object?) Tagclass._System.object?))
(assert (= (TagFamily Tclass._System.object?) tytagFamily$object))
(assert (= (Tag Tclass._System.object) Tagclass._System.object))
(assert (= (TagFamily Tclass._System.object) tytagFamily$object))
(assert (= (Tag Tclass.M3.UnionFind) Tagclass.M3.UnionFind))
(assert (= (TagFamily Tclass.M3.UnionFind) tytagFamily$UnionFind))
(assert (= (Tag Tclass.M3.Element) Tagclass.M3.Element))
(assert (= (TagFamily Tclass.M3.Element) tytagFamily$Element))
(assert (= (Tag Tclass.M3.Contents) Tagclass.M3.Contents))
(assert (= (TagFamily Tclass.M3.Contents) tytagFamily$Contents))
(assert (= (Tag Tclass.M3.Element?) Tagclass.M3.Element?))
(assert (= (TagFamily Tclass.M3.Element?) tytagFamily$Element))
(assert (= (Tag Tclass.M3.UnionFind?) Tagclass.M3.UnionFind?))
(assert (= (TagFamily Tclass.M3.UnionFind?) tytagFamily$UnionFind))
(assert (forall (($ly@@1 T@U) (this@@11 T@U) (|d#0@@1| Int) (|e#0@@1| T@U) (|r#0@@1| T@U) (|C#0@@3| T@U) ) (!  (=> (or (|M3.UnionFind.Reaches#canCall| (Lit refType this@@11) (LitInt |d#0@@1|) (Lit refType |e#0@@1|) (Lit refType |r#0@@1|) (Lit MapType |C#0@@3|)) (and (and (and (and (and (and (or (not (= this@@11 null)) (not true)) ($Is refType this@@11 Tclass.M3.UnionFind)) (<= (LitInt 0) |d#0@@1|)) ($Is refType |e#0@@1| Tclass.M3.Element)) ($Is refType |r#0@@1| Tclass.M3.Element)) ($Is MapType |C#0@@3| (TMap Tclass.M3.Element Tclass.M3.Contents))) (and (U_2_bool (Lit boolType (bool_2_U (M3.__default.GoodCMap (Lit MapType |C#0@@3|))))) (|Set#IsMember| (|Map#Domain| |C#0@@3|) ($Box refType |e#0@@1|))))) (and (=> (not (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@3|)) ($Box refType (Lit refType |e#0@@1|)))))) (let ((|next#11| (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@3|)) ($Box refType (Lit refType |e#0@@1|)))))))
 (=> (U_2_bool (Lit boolType (bool_2_U  (or (not (= |d#0@@1| 0)) (not true))))) (|M3.UnionFind.Reaches#canCall| (Lit refType this@@11) (LitInt (- |d#0@@1| 1)) |next#11| (Lit refType |r#0@@1|) (Lit MapType |C#0@@3|))))) (= (M3.UnionFind.Reaches ($LS $ly@@1) (Lit refType this@@11) (LitInt |d#0@@1|) (Lit refType |e#0@@1|) (Lit refType |r#0@@1|) (Lit MapType |C#0@@3|)) (ite (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@3|)) ($Box refType (Lit refType |e#0@@1|))))) (= (Lit refType |e#0@@1|) (Lit refType |r#0@@1|)) (let ((|next#10| (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| (Lit MapType |C#0@@3|)) ($Box refType (Lit refType |e#0@@1|)))))))
 (and (or (not (= |d#0@@1| 0)) (not true)) (M3.UnionFind.Reaches ($LS $ly@@1) (Lit refType this@@11) (LitInt (- |d#0@@1| 1)) |next#10| (Lit refType |r#0@@1|) (Lit MapType |C#0@@3|))))))))
 :weight 3
 :pattern ( (M3.UnionFind.Reaches ($LS $ly@@1) (Lit refType this@@11) (LitInt |d#0@@1|) (Lit refType |e#0@@1|) (Lit refType |r#0@@1|) (Lit MapType |C#0@@3|)))
)))
(assert (forall ((d@@8 T@U) (|_System._tuple#2$T0@@6| T@U) ($h@@15 T@U) ) (!  (=> (and ($IsGoodHeap $h@@15) (and (_System.Tuple2.___hMake2_q d@@8) (exists ((|_System._tuple#2$T1@@6| T@U) ) (! ($IsAlloc DatatypeTypeType d@@8 (Tclass._System.Tuple2 |_System._tuple#2$T0@@6| |_System._tuple#2$T1@@6|) $h@@15)
 :pattern ( ($IsAlloc DatatypeTypeType d@@8 (Tclass._System.Tuple2 |_System._tuple#2$T0@@6| |_System._tuple#2$T1@@6|) $h@@15))
)))) ($IsAllocBox (_System.Tuple2._0 d@@8) |_System._tuple#2$T0@@6| $h@@15))
 :pattern ( ($IsAllocBox (_System.Tuple2._0 d@@8) |_System._tuple#2$T0@@6| $h@@15))
)))
(assert (forall ((d@@9 T@U) (|_System._tuple#2$T1@@7| T@U) ($h@@16 T@U) ) (!  (=> (and ($IsGoodHeap $h@@16) (and (_System.Tuple2.___hMake2_q d@@9) (exists ((|_System._tuple#2$T0@@7| T@U) ) (! ($IsAlloc DatatypeTypeType d@@9 (Tclass._System.Tuple2 |_System._tuple#2$T0@@7| |_System._tuple#2$T1@@7|) $h@@16)
 :pattern ( ($IsAlloc DatatypeTypeType d@@9 (Tclass._System.Tuple2 |_System._tuple#2$T0@@7| |_System._tuple#2$T1@@7|) $h@@16))
)))) ($IsAllocBox (_System.Tuple2._1 d@@9) |_System._tuple#2$T1@@7| $h@@16))
 :pattern ( ($IsAllocBox (_System.Tuple2._1 d@@9) |_System._tuple#2$T1@@7| $h@@16))
)))
(assert (forall ((d@@10 T@U) ($h@@17 T@U) ) (!  (=> (and ($IsGoodHeap $h@@17) (and (M3.Contents.Root_q d@@10) ($IsAlloc DatatypeTypeType d@@10 Tclass.M3.Contents $h@@17))) ($IsAlloc intType (int_2_U (M3.Contents.depth d@@10)) Tclass._System.nat $h@@17))
 :pattern ( ($IsAlloc intType (int_2_U (M3.Contents.depth d@@10)) Tclass._System.nat $h@@17))
)))
(assert (forall ((d@@11 T@U) ($h@@18 T@U) ) (!  (=> (and ($IsGoodHeap $h@@18) (and (M3.Contents.Link_q d@@11) ($IsAlloc DatatypeTypeType d@@11 Tclass.M3.Contents $h@@18))) ($IsAlloc refType (M3.Contents.next d@@11) Tclass.M3.Element $h@@18))
 :pattern ( ($IsAlloc refType (M3.Contents.next d@@11) Tclass.M3.Element $h@@18))
)))
(assert (forall ((|a#3#0#0| T@U) (|a#3#1#0| T@U) ) (! (= (|#_System._tuple#2._#Make2| (Lit BoxType |a#3#0#0|) (Lit BoxType |a#3#1#0|)) (Lit DatatypeTypeType (|#_System._tuple#2._#Make2| |a#3#0#0| |a#3#1#0|)))
 :pattern ( (|#_System._tuple#2._#Make2| (Lit BoxType |a#3#0#0|) (Lit BoxType |a#3#1#0|)))
)))
(assert (forall ((x@@6 Int) ) (! (= ($Box intType (int_2_U (LitInt x@@6))) (Lit BoxType ($Box intType (int_2_U x@@6))))
 :pattern ( ($Box intType (int_2_U (LitInt x@@6))))
)))
(assert (forall ((|a#3#0#0@@0| Int) ) (! (= (|#M3.Contents.Root| (LitInt |a#3#0#0@@0|)) (Lit DatatypeTypeType (|#M3.Contents.Root| |a#3#0#0@@0|)))
 :pattern ( (|#M3.Contents.Root| (LitInt |a#3#0#0@@0|)))
)))
(assert (forall ((|a#8#0#0| T@U) ) (! (= (|#M3.Contents.Link| (Lit refType |a#8#0#0|)) (Lit DatatypeTypeType (|#M3.Contents.Link| |a#8#0#0|)))
 :pattern ( (|#M3.Contents.Link| (Lit refType |a#8#0#0|)))
)))
(assert (forall ((x@@7 T@U) (T@@5 T@T) ) (! (= ($Box T@@5 (Lit T@@5 x@@7)) (Lit BoxType ($Box T@@5 x@@7)))
 :pattern ( ($Box T@@5 (Lit T@@5 x@@7)))
)))
(assert (forall ((m@@12 T@U) ) (!  (or (= m@@12 |Map#Empty|) (exists ((k@@3 T@U) (v@@9 T@U) ) (|Set#IsMember| (|Map#Items| m@@12) ($Box DatatypeTypeType (|#_System._tuple#2._#Make2| k@@3 v@@9)))))
 :pattern ( (|Map#Items| m@@12))
)))
(assert (forall (($ly@@2 T@U) (this@@12 T@U) (|d#0@@2| Int) (|e#0@@2| T@U) (|r#0@@2| T@U) (|C#0@@4| T@U) ) (!  (=> (or (|M3.UnionFind.Reaches#canCall| this@@12 |d#0@@2| |e#0@@2| |r#0@@2| |C#0@@4|) (and (and (and (and (and (and (or (not (= this@@12 null)) (not true)) ($Is refType this@@12 Tclass.M3.UnionFind)) (<= (LitInt 0) |d#0@@2|)) ($Is refType |e#0@@2| Tclass.M3.Element)) ($Is refType |r#0@@2| Tclass.M3.Element)) ($Is MapType |C#0@@4| (TMap Tclass.M3.Element Tclass.M3.Contents))) (and (M3.__default.GoodCMap |C#0@@4|) (|Set#IsMember| (|Map#Domain| |C#0@@4|) ($Box refType |e#0@@2|))))) (and (=> (not (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| |C#0@@4|) ($Box refType |e#0@@2|))))) (let ((|next#7| (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| |C#0@@4|) ($Box refType |e#0@@2|))))))
 (=> (or (not (= |d#0@@2| 0)) (not true)) (|M3.UnionFind.Reaches#canCall| this@@12 (- |d#0@@2| 1) |next#7| |r#0@@2| |C#0@@4|)))) (= (M3.UnionFind.Reaches ($LS $ly@@2) this@@12 |d#0@@2| |e#0@@2| |r#0@@2| |C#0@@4|) (ite (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| |C#0@@4|) ($Box refType |e#0@@2|)))) (= |e#0@@2| |r#0@@2|) (let ((|next#6| (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select BoxType BoxType (|Map#Elements| |C#0@@4|) ($Box refType |e#0@@2|))))))
 (and (or (not (= |d#0@@2| 0)) (not true)) (M3.UnionFind.Reaches $ly@@2 this@@12 (- |d#0@@2| 1) |next#6| |r#0@@2| |C#0@@4|)))))))
 :pattern ( (M3.UnionFind.Reaches ($LS $ly@@2) this@@12 |d#0@@2| |e#0@@2| |r#0@@2| |C#0@@4|))
)))
(assert (forall ((v@@10 T@U) (t0@@6 T@U) (t1@@4 T@U) ) (!  (=> ($Is MapType v@@10 (TMap t0@@6 t1@@4)) (and (and ($Is SetType (|Map#Domain| v@@10) (TSet t0@@6)) ($Is SetType (|Map#Values| v@@10) (TSet t1@@4))) ($Is SetType (|Map#Items| v@@10) (TSet (Tclass._System.Tuple2 t0@@6 t1@@4)))))
 :pattern ( ($Is MapType v@@10 (TMap t0@@6 t1@@4)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun $Heap@@6 () T@U)
(declare-fun call1formal@this () T@U)
(declare-fun $Heap@0 () T@U)
(declare-fun call1formal@this@0 () T@U)
(declare-fun |call2formal@e#0| () T@U)
(declare-fun $Heap@1 () T@U)
(declare-fun |call2formal@e#0@0| () T@U)
(declare-fun |call2formal@e#0@@0| () T@U)
(declare-fun $Heap@2 () T@U)
(declare-fun |call2formal@e#0@0@@0| () T@U)
(declare-fun |call2formal@e#0@@1| () T@U)
(declare-fun $Heap@3 () T@U)
(declare-fun |call2formal@e#0@0@@1| () T@U)
(declare-fun |call3formal@r#0| () T@U)
(declare-fun $Heap@4 () T@U)
(declare-fun |call3formal@r#0@0| () T@U)
(declare-fun |call3formal@r#0@@0| () T@U)
(declare-fun $Heap@5 () T@U)
(declare-fun |call3formal@r#0@0@@0| () T@U)
(declare-fun |call4formal@r#0| () T@U)
(declare-fun $Heap@6 () T@U)
(declare-fun |call4formal@r#0@0| () T@U)
(declare-fun |call3formal@r#0@@1| () T@U)
(declare-fun $Heap@7 () T@U)
(declare-fun |call3formal@r#0@0@@1| () T@U)
(declare-fun |call3formal@r#0@@2| () T@U)
(declare-fun $Heap@8 () T@U)
(declare-fun |call3formal@r#0@0@@2| () T@U)
(declare-fun |call3formal@r#0@@3| () T@U)
(declare-fun $Heap@9 () T@U)
(declare-fun |call3formal@r#0@0@@3| () T@U)
(declare-fun |defass#uf#0| () Bool)
(declare-fun |uf#0| () T@U)
(declare-fun |defass#a#0| () Bool)
(declare-fun |a#0| () T@U)
(declare-fun |defass#b#0| () Bool)
(declare-fun |b#0| () T@U)
(declare-fun |defass#c#0| () Bool)
(declare-fun |c#0@@5| () T@U)
(declare-fun |defass#f0#0| () Bool)
(declare-fun |f0#0| () T@U)
(declare-fun |defass#f1#0| () Bool)
(declare-fun |f1#0| () T@U)
(declare-fun |defass#_v5#0| () Bool)
(declare-fun |_v5#0| () T@U)
(declare-fun |defass#g0#0| () Bool)
(declare-fun |g0#0| () T@U)
(declare-fun |defass#g1#0| () Bool)
(declare-fun |g1#0| () T@U)
(declare-fun |defass#g2#0| () Bool)
(declare-fun |g2#0| () T@U)
(declare-fun $FunctionContextHeight () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 118) (let ((anon0_correct  (=> (= $_ModifiesFrame@0 (|lambda#0| null $Heap@@6 alloc false)) (=> (and (and (and (and (or (not (= call1formal@this null)) (not true)) (and ($Is refType call1formal@this Tclass.M3.UnionFind) ($IsAlloc refType call1formal@this Tclass.M3.UnionFind $Heap@@6))) (and ($IsGoodHeap $Heap@0) ($IsHeapAnchor $Heap@0))) (and (and (or (not (= call1formal@this@0 null)) (not true)) (and ($Is refType call1formal@this@0 Tclass.M3.UnionFind) ($IsAlloc refType call1formal@this@0 Tclass.M3.UnionFind $Heap@0))) (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0))) (and (and (and (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0)))) (and (forall (($o@@15 T@U) ) (!  (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@15)) (or (not (= $o@@15 null)) (not true)))
 :pattern (  (or (not (= $o@@15 null)) (not true)))
)) (forall (($o@@16 T@U) ) (!  (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@16)) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 $o@@16) alloc)))))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@16)))
)))) (and (and (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M)) |Map#Empty|) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 call1formal@this@0) alloc))))) (and (forall (($o@@17 T@U) ) (!  (=> (and (or (not (= $o@@17 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 $o@@17) alloc)))) (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@17) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@6 $o@@17)))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@17))
)) ($HeapSucc $Heap@@6 $Heap@0))))) (and (=> (= (ControlFlow 0 2) (- 0 117)) true) (and (=> (= (ControlFlow 0 2) (- 0 116)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 115)) (forall (($o@@18 T@U) ($f@@3 T@U) )  (=> (and (and (or (not (= $o@@18 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@18) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@18))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@18 $f@@3))))) (=> (forall (($o@@19 T@U) ($f@@4 T@U) )  (=> (and (and (or (not (= $o@@19 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@19) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@19))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@19 $f@@4)))) (=> (and ($Is refType |call2formal@e#0| Tclass.M3.Element) ($IsAlloc refType |call2formal@e#0| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 114)) (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 113)) (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 112)) (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 111)) (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (forall ((|e#17| T@U) ) (!  (=> ($Is refType |e#17| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (forall ((|e#17@@0| T@U) ) (!  (=> ($Is refType |e#17@@0| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@0|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@0|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@0|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 110)) (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (forall ((|e#18| T@U) ) (!  (=> ($Is refType |e#18| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (forall ((|e#18@@0| T@U) ) (!  (=> ($Is refType |e#18@@0| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@0|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@0|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@0|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@0|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@0|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 109)) (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (forall ((|e#19| T@U) ) (!  (=> ($Is refType |e#19| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |e#19|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |e#19|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |e#19|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (forall ((|e#19@@0| T@U) ) (!  (=> ($Is refType |e#19@@0| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@0|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |e#19@@0|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |e#19@@0|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |e#19@@0|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 108)) (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (forall ((|e#20| T@U) ) (!  (=> ($Is refType |e#20| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20|)))) M3.Element.c))) |e#20| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20|))) (M3.UnionFind.Collect $Heap@0 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@0 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@0 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@0 call1formal@this@0) (forall ((|e#20@@0| T@U) ) (!  (=> ($Is refType |e#20@@0| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@0|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@0|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@0|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@0|)))) M3.Element.c))) |e#20@@0| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@0|))) (M3.UnionFind.Collect $Heap@0 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@0|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@0|)))
)))))) (=> (and ($IsGoodHeap $Heap@1) ($IsHeapAnchor $Heap@1)) (=> (and (and (and (and ($Is refType |call2formal@e#0@0| Tclass.M3.Element) ($IsAlloc refType |call2formal@e#0@0| Tclass.M3.Element $Heap@1)) (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0)) (and (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0))))) (and (and (and (forall (($o@@20 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@20)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@20)))) (or (not (= $o@@20 null)) (not true)))
 :pattern (  (or (not (= $o@@20 null)) (not true)))
)) (forall (($o@@21 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@21)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@21)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@21) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@21) alloc)))
))) (not (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|)))) (and (and (forall ((|e'#1| T@U) ) (!  (=> ($Is refType |e'#1| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1|)) (or (not (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1|))) |call2formal@e#0@0|)) (not true))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1|)))
)) (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M)) (|Map#Build| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.M)) ($Box refType |call2formal@e#0@0|) ($Box refType |call2formal@e#0@0|)))) (and (forall (($o@@22 T@U) ) (!  (=> (and (or (not (= $o@@22 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@22) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@22) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@22)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@22))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@22))
)) ($HeapSucc $Heap@0 $Heap@1))))) (and (=> (= (ControlFlow 0 2) (- 0 107)) true) (and (=> (= (ControlFlow 0 2) (- 0 106)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 105)) (forall (($o@@23 T@U) ($f@@5 T@U) )  (=> (and (and (or (not (= $o@@23 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@23) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@23))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@23 $f@@5))))) (=> (forall (($o@@24 T@U) ($f@@6 T@U) )  (=> (and (and (or (not (= $o@@24 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@24) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@24))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@24 $f@@6)))) (=> (and ($Is refType |call2formal@e#0@@0| Tclass.M3.Element) ($IsAlloc refType |call2formal@e#0@@0| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 104)) (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 103)) (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 102)) (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 101)) (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (forall ((|e#17@@1| T@U) ) (!  (=> ($Is refType |e#17@@1| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@1|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@1|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@1|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (forall ((|e#17@@2| T@U) ) (!  (=> ($Is refType |e#17@@2| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@2|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@2|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@2|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 100)) (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (forall ((|e#18@@1| T@U) ) (!  (=> ($Is refType |e#18@@1| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@1|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@1|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@1|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@1|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@1|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (forall ((|e#18@@2| T@U) ) (!  (=> ($Is refType |e#18@@2| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@2|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@2|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@2|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@2|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@2|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 99)) (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (forall ((|e#19@@1| T@U) ) (!  (=> ($Is refType |e#19@@1| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@1|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |e#19@@1|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |e#19@@1|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |e#19@@1|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (forall ((|e#19@@2| T@U) ) (!  (=> ($Is refType |e#19@@2| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@2|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |e#19@@2|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |e#19@@2|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 |e#19@@2|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 98)) (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (forall ((|e#20@@1| T@U) ) (!  (=> ($Is refType |e#20@@1| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@1|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@1|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@1|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@1|)))) M3.Element.c))) |e#20@@1| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@1|))) (M3.UnionFind.Collect $Heap@1 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@1|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@1|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@1 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@1 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@1 call1formal@this@0) (forall ((|e#20@@2| T@U) ) (!  (=> ($Is refType |e#20@@2| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@2|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@2|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@2|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@2|)))) M3.Element.c))) |e#20@@2| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@2|))) (M3.UnionFind.Collect $Heap@1 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@2|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@2|)))
)))))) (=> (and ($IsGoodHeap $Heap@2) ($IsHeapAnchor $Heap@2)) (=> (and (and (and (and ($Is refType |call2formal@e#0@0@@0| Tclass.M3.Element) ($IsAlloc refType |call2formal@e#0@0@@0| Tclass.M3.Element $Heap@2)) (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0)) (and (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0))))) (and (and (and (forall (($o@@25 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@25)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@25)))) (or (not (= $o@@25 null)) (not true)))
 :pattern (  (or (not (= $o@@25 null)) (not true)))
)) (forall (($o@@26 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@26)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@26)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@26) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@26) alloc)))
))) (not (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@0|)))) (and (and (forall ((|e'#1@@0| T@U) ) (!  (=> ($Is refType |e'#1@@0| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1@@0|)) (or (not (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1@@0|))) |call2formal@e#0@0@@0|)) (not true))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1@@0|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1@@0|)))
)) (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M)) (|Map#Build| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.M)) ($Box refType |call2formal@e#0@0@@0|) ($Box refType |call2formal@e#0@0@@0|)))) (and (forall (($o@@27 T@U) ) (!  (=> (and (or (not (= $o@@27 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@27) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@27) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@27)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@27))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@27))
)) ($HeapSucc $Heap@1 $Heap@2))))) (and (=> (= (ControlFlow 0 2) (- 0 97)) true) (and (=> (= (ControlFlow 0 2) (- 0 96)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 95)) (forall (($o@@28 T@U) ($f@@7 T@U) )  (=> (and (and (or (not (= $o@@28 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@28) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@28))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@28 $f@@7))))) (=> (forall (($o@@29 T@U) ($f@@8 T@U) )  (=> (and (and (or (not (= $o@@29 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@29) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@29))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@29 $f@@8)))) (=> (and ($Is refType |call2formal@e#0@@1| Tclass.M3.Element) ($IsAlloc refType |call2formal@e#0@@1| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 94)) (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 93)) (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 92)) (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 91)) (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (forall ((|e#17@@3| T@U) ) (!  (=> ($Is refType |e#17@@3| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@3|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@3|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@3|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (forall ((|e#17@@4| T@U) ) (!  (=> ($Is refType |e#17@@4| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@4|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@4|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@4|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 90)) (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (forall ((|e#18@@3| T@U) ) (!  (=> ($Is refType |e#18@@3| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@3|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@3|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@3|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@3|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@3|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (forall ((|e#18@@4| T@U) ) (!  (=> ($Is refType |e#18@@4| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@4|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@4|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@4|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@4|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@4|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 89)) (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (forall ((|e#19@@3| T@U) ) (!  (=> ($Is refType |e#19@@3| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@3|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |e#19@@3|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |e#19@@3|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |e#19@@3|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (forall ((|e#19@@4| T@U) ) (!  (=> ($Is refType |e#19@@4| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@4|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |e#19@@4|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |e#19@@4|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |e#19@@4|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 88)) (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (forall ((|e#20@@3| T@U) ) (!  (=> ($Is refType |e#20@@3| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@3|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@3|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@3|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@3|)))) M3.Element.c))) |e#20@@3| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@3|))) (M3.UnionFind.Collect $Heap@2 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@3|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@3|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@2 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@2 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@2 call1formal@this@0) (forall ((|e#20@@4| T@U) ) (!  (=> ($Is refType |e#20@@4| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@4|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@4|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@4|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@4|)))) M3.Element.c))) |e#20@@4| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@4|))) (M3.UnionFind.Collect $Heap@2 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@4|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@4|)))
)))))) (=> (and ($IsGoodHeap $Heap@3) ($IsHeapAnchor $Heap@3)) (=> (and (and (and (and ($Is refType |call2formal@e#0@0@@1| Tclass.M3.Element) ($IsAlloc refType |call2formal@e#0@0@@1| Tclass.M3.Element $Heap@3)) (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0)) (and (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0))))) (and (and (and (forall (($o@@30 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@30)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@30)))) (or (not (= $o@@30 null)) (not true)))
 :pattern (  (or (not (= $o@@30 null)) (not true)))
)) (forall (($o@@31 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@31)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@31)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@31) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@31) alloc)))
))) (not (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@1|)))) (and (and (forall ((|e'#1@@1| T@U) ) (!  (=> ($Is refType |e'#1@@1| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1@@1|)) (or (not (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1@@1|))) |call2formal@e#0@0@@1|)) (not true))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1@@1|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e'#1@@1|)))
)) (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M)) (|Map#Build| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.M)) ($Box refType |call2formal@e#0@0@@1|) ($Box refType |call2formal@e#0@0@@1|)))) (and (forall (($o@@32 T@U) ) (!  (=> (and (or (not (= $o@@32 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@32) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@32) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@32)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@32))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@32))
)) ($HeapSucc $Heap@2 $Heap@3))))) (and (=> (= (ControlFlow 0 2) (- 0 87)) true) (and (=> (= (ControlFlow 0 2) (- 0 86)) true) (and (=> (= (ControlFlow 0 2) (- 0 85)) true) (and (=> (= (ControlFlow 0 2) (- 0 84)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 83)) true) (and (=> (= (ControlFlow 0 2) (- 0 82)) (forall (($o@@33 T@U) ($f@@9 T@U) )  (=> (and (and (or (not (= $o@@33 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@33) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@33))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@33 $f@@9))))) (=> (forall (($o@@34 T@U) ($f@@10 T@U) )  (=> (and (and (or (not (= $o@@34 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@34) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@34))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@34 $f@@10)))) (=> (and ($Is refType |call3formal@r#0| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 81)) (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 80)) (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 79)) (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 78)) (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (forall ((|e#17@@5| T@U) ) (!  (=> ($Is refType |e#17@@5| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@5|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@5|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@5|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (forall ((|e#17@@6| T@U) ) (!  (=> ($Is refType |e#17@@6| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@6|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@6|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@6|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 77)) (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (forall ((|e#18@@5| T@U) ) (!  (=> ($Is refType |e#18@@5| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@5|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@5|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@5|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@5|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@5|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (forall ((|e#18@@6| T@U) ) (!  (=> ($Is refType |e#18@@6| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@6|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@6|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@6|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@6|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@6|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 76)) (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (forall ((|e#19@@5| T@U) ) (!  (=> ($Is refType |e#19@@5| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@5|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |e#19@@5|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |e#19@@5|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |e#19@@5|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (forall ((|e#19@@6| T@U) ) (!  (=> ($Is refType |e#19@@6| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@6|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |e#19@@6|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |e#19@@6|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |e#19@@6|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 75)) (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (forall ((|e#20@@5| T@U) ) (!  (=> ($Is refType |e#20@@5| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@5|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@5|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@5|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@5|)))) M3.Element.c))) |e#20@@5| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@5|))) (M3.UnionFind.Collect $Heap@3 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@5|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@5|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@3 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@3 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@3 call1formal@this@0) (forall ((|e#20@@6| T@U) ) (!  (=> ($Is refType |e#20@@6| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@6|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@6|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@6|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@6|)))) M3.Element.c))) |e#20@@6| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@6|))) (M3.UnionFind.Collect $Heap@3 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@6|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@6|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 74)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@0|))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@0|)) (=> (and ($IsGoodHeap $Heap@4) ($IsHeapAnchor $Heap@4)) (=> (and (and ($Is refType |call3formal@r#0@0| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@0| Tclass.M3.Element $Heap@4)) (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0)) (=> (and (and (and (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0)))) (and (forall (($o@@35 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@35)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@35)))) (or (not (= $o@@35 null)) (not true)))
 :pattern (  (or (not (= $o@@35 null)) (not true)))
)) (forall (($o@@36 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@36)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@36)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@36) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@36) alloc)))
)))) (and (and (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M)) ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.M))) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@0|))) |call3formal@r#0@0|)) (and (forall (($o@@37 T@U) ) (!  (=> (and (or (not (= $o@@37 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@37) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@37) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@37)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@37))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@37))
)) ($HeapSucc $Heap@3 $Heap@4)))) (and (=> (= (ControlFlow 0 2) (- 0 73)) true) (and (=> (= (ControlFlow 0 2) (- 0 72)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 71)) true) (and (=> (= (ControlFlow 0 2) (- 0 70)) (forall (($o@@38 T@U) ($f@@11 T@U) )  (=> (and (and (or (not (= $o@@38 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@38) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@38))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@38 $f@@11))))) (=> (forall (($o@@39 T@U) ($f@@12 T@U) )  (=> (and (and (or (not (= $o@@39 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@39) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@39))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@39 $f@@12)))) (=> (and ($Is refType |call3formal@r#0@@0| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@@0| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 69)) (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 68)) (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 67)) (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 66)) (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (forall ((|e#17@@7| T@U) ) (!  (=> ($Is refType |e#17@@7| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@7|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@7|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@7|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (forall ((|e#17@@8| T@U) ) (!  (=> ($Is refType |e#17@@8| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@8|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@8|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@8|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 65)) (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (forall ((|e#18@@7| T@U) ) (!  (=> ($Is refType |e#18@@7| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@7|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@7|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@7|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@7|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@7|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (forall ((|e#18@@8| T@U) ) (!  (=> ($Is refType |e#18@@8| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@8|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@8|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@8|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@8|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@8|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 64)) (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (forall ((|e#19@@7| T@U) ) (!  (=> ($Is refType |e#19@@7| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@7|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |e#19@@7|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |e#19@@7|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |e#19@@7|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (forall ((|e#19@@8| T@U) ) (!  (=> ($Is refType |e#19@@8| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@8|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |e#19@@8|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |e#19@@8|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |e#19@@8|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 63)) (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (forall ((|e#20@@7| T@U) ) (!  (=> ($Is refType |e#20@@7| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@7|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@7|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@7|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@7|)))) M3.Element.c))) |e#20@@7| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@7|))) (M3.UnionFind.Collect $Heap@4 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@7|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@7|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@4 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@4 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@4 call1formal@this@0) (forall ((|e#20@@8| T@U) ) (!  (=> ($Is refType |e#20@@8| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@8|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@8|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@8|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@8|)))) M3.Element.c))) |e#20@@8| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@8|))) (M3.UnionFind.Collect $Heap@4 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@8|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@8|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 62)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|)) (=> (and ($IsGoodHeap $Heap@5) ($IsHeapAnchor $Heap@5)) (=> (and (and ($Is refType |call3formal@r#0@0@@0| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@0@@0| Tclass.M3.Element $Heap@5)) (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0)) (=> (and (and (and (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0)))) (and (forall (($o@@40 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@40)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@40)))) (or (not (= $o@@40 null)) (not true)))
 :pattern (  (or (not (= $o@@40 null)) (not true)))
)) (forall (($o@@41 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@41)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@41)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@41) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@41) alloc)))
)))) (and (and (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M)) ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.M))) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|))) |call3formal@r#0@0@@0|)) (and (forall (($o@@42 T@U) ) (!  (=> (and (or (not (= $o@@42 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@42) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@42) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 $o@@42)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@42))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@42))
)) ($HeapSucc $Heap@4 $Heap@5)))) (and (=> (= (ControlFlow 0 2) (- 0 61)) true) (and (=> (= (ControlFlow 0 2) (- 0 60)) true) (and (=> (= (ControlFlow 0 2) (- 0 59)) true) (and (=> (= (ControlFlow 0 2) (- 0 58)) true) (and (=> (= (ControlFlow 0 2) (- 0 57)) true) (and (=> (= (ControlFlow 0 2) (- 0 56)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 55)) true) (and (=> (= (ControlFlow 0 2) (- 0 54)) true) (and (=> (= (ControlFlow 0 2) (- 0 53)) (forall (($o@@43 T@U) ($f@@13 T@U) )  (=> (and (and (or (not (= $o@@43 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@43) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@43))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@43 $f@@13))))) (=> (forall (($o@@44 T@U) ($f@@14 T@U) )  (=> (and (and (or (not (= $o@@44 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@44) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@44))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@44 $f@@14)))) (=> (and ($Is refType |call4formal@r#0| Tclass.M3.Element) ($IsAlloc refType |call4formal@r#0| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 52)) (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 51)) (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 50)) (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 49)) (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (forall ((|e#18@@9| T@U) ) (!  (=> ($Is refType |e#18@@9| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@9|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@9|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@9|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (forall ((|e#18@@10| T@U) ) (!  (=> ($Is refType |e#18@@10| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@10|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@10|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@10|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 48)) (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (forall ((|e#19@@9| T@U) ) (!  (=> ($Is refType |e#19@@9| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@9|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@9|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@9|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@9|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@9|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (forall ((|e#19@@10| T@U) ) (!  (=> ($Is refType |e#19@@10| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@10|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@10|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@10|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@10|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@10|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 47)) (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (forall ((|e#20@@9| T@U) ) (!  (=> ($Is refType |e#20@@9| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@9|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |e#20@@9|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |e#20@@9|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |e#20@@9|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (forall ((|e#20@@10| T@U) ) (!  (=> ($Is refType |e#20@@10| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@10|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |e#20@@10|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |e#20@@10|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |e#20@@10|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 46)) (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (forall ((|e#21| T@U) ) (!  (=> ($Is refType |e#21| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21|)))) M3.Element.c))) |e#21| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21|))) (M3.UnionFind.Collect $Heap@5 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@5 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@5 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@5 call1formal@this@0) (forall ((|e#21@@0| T@U) ) (!  (=> ($Is refType |e#21@@0| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21@@0|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21@@0|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21@@0|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21@@0|)))) M3.Element.c))) |e#21@@0| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21@@0|))) (M3.UnionFind.Collect $Heap@5 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21@@0|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#21@@0|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 45)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|)) (and (=> (= (ControlFlow 0 2) (- 0 44)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@1|))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@1|)) (=> (and ($IsGoodHeap $Heap@6) ($IsHeapAnchor $Heap@6)) (=> (and (and (and (and ($Is refType |call4formal@r#0@0| Tclass.M3.Element) ($IsAlloc refType |call4formal@r#0@0| Tclass.M3.Element $Heap@6)) (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0)) (and (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0))))) (and (and (and (forall (($o@@45 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@45)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@45)))) (or (not (= $o@@45 null)) (not true)))
 :pattern (  (or (not (= $o@@45 null)) (not true)))
)) (forall (($o@@46 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@46)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@46)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@46) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@46) alloc)))
))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call4formal@r#0@0|))) (and (and (or (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call4formal@r#0@0|))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|)))) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call4formal@r#0@0|))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@1|))))) (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M)) (|Map#Glue| (|Set#FromBoogieMap| (|lambda#1| Tclass.M3.Element? (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))))) (|lambda#8| (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|))) (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@1|))) |call4formal@r#0@0| (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.M)))) (TMap Tclass.M3.Element? Tclass.M3.Element?)))) (and (forall (($o@@47 T@U) ) (!  (=> (and (or (not (= $o@@47 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@47) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@47) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 $o@@47)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@47))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@47))
)) ($HeapSucc $Heap@5 $Heap@6))))) (and (=> (= (ControlFlow 0 2) (- 0 43)) true) (and (=> (= (ControlFlow 0 2) (- 0 42)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 41)) true) (and (=> (= (ControlFlow 0 2) (- 0 40)) (forall (($o@@48 T@U) ($f@@15 T@U) )  (=> (and (and (or (not (= $o@@48 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@48) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@48))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@48 $f@@15))))) (=> (forall (($o@@49 T@U) ($f@@16 T@U) )  (=> (and (and (or (not (= $o@@49 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@49) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@49))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@49 $f@@16)))) (=> (and ($Is refType |call3formal@r#0@@1| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@@1| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 39)) (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 38)) (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 37)) (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 36)) (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (forall ((|e#17@@9| T@U) ) (!  (=> ($Is refType |e#17@@9| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@9|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@9|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@9|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (forall ((|e#17@@10| T@U) ) (!  (=> ($Is refType |e#17@@10| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@10|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@10|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@10|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 35)) (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (forall ((|e#18@@11| T@U) ) (!  (=> ($Is refType |e#18@@11| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@11|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@11|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@11|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@11|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@11|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (forall ((|e#18@@12| T@U) ) (!  (=> ($Is refType |e#18@@12| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@12|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@12|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@12|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@12|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@12|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 34)) (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (forall ((|e#19@@11| T@U) ) (!  (=> ($Is refType |e#19@@11| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@11|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |e#19@@11|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |e#19@@11|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |e#19@@11|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (forall ((|e#19@@12| T@U) ) (!  (=> ($Is refType |e#19@@12| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@12|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |e#19@@12|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |e#19@@12|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |e#19@@12|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 33)) (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (forall ((|e#20@@11| T@U) ) (!  (=> ($Is refType |e#20@@11| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@11|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@11|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@11|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@11|)))) M3.Element.c))) |e#20@@11| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@11|))) (M3.UnionFind.Collect $Heap@6 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@11|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@11|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@6 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@6 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@6 call1formal@this@0) (forall ((|e#20@@12| T@U) ) (!  (=> ($Is refType |e#20@@12| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@12|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@12|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@12|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@12|)))) M3.Element.c))) |e#20@@12| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@12|))) (M3.UnionFind.Collect $Heap@6 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@12|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@12|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 32)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|)) (=> (and ($IsGoodHeap $Heap@7) ($IsHeapAnchor $Heap@7)) (=> (and (and ($Is refType |call3formal@r#0@0@@1| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@0@@1| Tclass.M3.Element $Heap@7)) (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0)) (=> (and (and (and (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0)))) (and (forall (($o@@50 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@50)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@50)))) (or (not (= $o@@50 null)) (not true)))
 :pattern (  (or (not (= $o@@50 null)) (not true)))
)) (forall (($o@@51 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@51)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@51)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@51) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@51) alloc)))
)))) (and (and (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M)) ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.M))) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0|))) |call3formal@r#0@0@@1|)) (and (forall (($o@@52 T@U) ) (!  (=> (and (or (not (= $o@@52 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@52) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@52) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 $o@@52)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@52))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@52))
)) ($HeapSucc $Heap@6 $Heap@7)))) (and (=> (= (ControlFlow 0 2) (- 0 31)) true) (and (=> (= (ControlFlow 0 2) (- 0 30)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 29)) true) (and (=> (= (ControlFlow 0 2) (- 0 28)) (forall (($o@@53 T@U) ($f@@17 T@U) )  (=> (and (and (or (not (= $o@@53 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@53) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@53))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@53 $f@@17))))) (=> (forall (($o@@54 T@U) ($f@@18 T@U) )  (=> (and (and (or (not (= $o@@54 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@54) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@54))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@54 $f@@18)))) (=> (and ($Is refType |call3formal@r#0@@2| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@@2| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 27)) (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 26)) (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 25)) (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 24)) (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (forall ((|e#17@@11| T@U) ) (!  (=> ($Is refType |e#17@@11| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@11|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@11|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@11|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (forall ((|e#17@@12| T@U) ) (!  (=> ($Is refType |e#17@@12| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@12|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@12|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@12|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (forall ((|e#18@@13| T@U) ) (!  (=> ($Is refType |e#18@@13| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@13|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@13|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@13|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@13|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@13|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (forall ((|e#18@@14| T@U) ) (!  (=> ($Is refType |e#18@@14| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@14|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@14|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@14|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@14|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@14|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 22)) (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (forall ((|e#19@@13| T@U) ) (!  (=> ($Is refType |e#19@@13| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@13|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |e#19@@13|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |e#19@@13|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |e#19@@13|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (forall ((|e#19@@14| T@U) ) (!  (=> ($Is refType |e#19@@14| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@14|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |e#19@@14|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |e#19@@14|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |e#19@@14|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (forall ((|e#20@@13| T@U) ) (!  (=> ($Is refType |e#20@@13| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@13|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@13|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@13|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@13|)))) M3.Element.c))) |e#20@@13| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@13|))) (M3.UnionFind.Collect $Heap@7 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@13|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@13|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@7 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@7 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@7 call1formal@this@0) (forall ((|e#20@@14| T@U) ) (!  (=> ($Is refType |e#20@@14| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@14|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@14|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@14|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@14|)))) M3.Element.c))) |e#20@@14| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@14|))) (M3.UnionFind.Collect $Heap@7 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@14|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@14|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 20)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@0|))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@0|)) (=> (and ($IsGoodHeap $Heap@8) ($IsHeapAnchor $Heap@8)) (=> (and (and ($Is refType |call3formal@r#0@0@@2| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@0@@2| Tclass.M3.Element $Heap@8)) (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0)) (=> (and (and (and (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0)))) (and (forall (($o@@55 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@55)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@55)))) (or (not (= $o@@55 null)) (not true)))
 :pattern (  (or (not (= $o@@55 null)) (not true)))
)) (forall (($o@@56 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@56)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@56)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@56) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@56) alloc)))
)))) (and (and (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M)) ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.M))) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@0|))) |call3formal@r#0@0@@2|)) (and (forall (($o@@57 T@U) ) (!  (=> (and (or (not (= $o@@57 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@57) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@57) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 $o@@57)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@57))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@57))
)) ($HeapSucc $Heap@7 $Heap@8)))) (and (=> (= (ControlFlow 0 2) (- 0 19)) true) (and (=> (= (ControlFlow 0 2) (- 0 18)) (or (not (= call1formal@this@0 null)) (not true))) (=> (or (not (= call1formal@this@0 null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 17)) true) (and (=> (= (ControlFlow 0 2) (- 0 16)) (forall (($o@@58 T@U) ($f@@19 T@U) )  (=> (and (and (or (not (= $o@@58 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@58) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@58))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@58 $f@@19))))) (=> (forall (($o@@59 T@U) ($f@@20 T@U) )  (=> (and (and (or (not (= $o@@59 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@59) alloc)))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@59))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@59 $f@@20)))) (=> (and ($Is refType |call3formal@r#0@@3| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@@3| Tclass.M3.Element $Heap@@6)) (and (=> (= (ControlFlow 0 2) (- 0 15)) (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null))))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (|Set#Subset| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr))))))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (forall ((|e#17@@13| T@U) ) (!  (=> ($Is refType |e#17@@13| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@13|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@13|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@13|))))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (forall ((|e#17@@14| T@U) ) (!  (=> ($Is refType |e#17@@14| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@14|)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@14|)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#17@@14|))))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (forall ((|e#18@@15| T@U) ) (!  (=> ($Is refType |e#18@@15| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@15|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@15|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@15|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@15|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@15|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (forall ((|e#18@@16| T@U) ) (!  (=> ($Is refType |e#18@@16| Tclass.M3.Element?) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@16|)) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@16|)))) ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@16|))))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@16|)))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#18@@16|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (forall ((|e#19@@15| T@U) ) (!  (=> ($Is refType |e#19@@15| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@15|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |e#19@@15|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |e#19@@15|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |e#19@@15|) M3.Element.c)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (forall ((|e#19@@16| T@U) ) (!  (=> ($Is refType |e#19@@16| Tclass.M3.Element) (=> (and (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#19@@16|)) (M3.Contents.Link_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |e#19@@16|) M3.Element.c)))) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType (M3.Contents.next ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |e#19@@16|) M3.Element.c)))))))
 :pattern ( ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 |e#19@@16|) M3.Element.c)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (forall ((|e#20@@15| T@U) ) (!  (=> ($Is refType |e#20@@15| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@15|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@15|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@15|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@15|)))) M3.Element.c))) |e#20@@15| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@15|))) (M3.UnionFind.Collect $Heap@8 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@15|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@15|)))
))))))) (=> (=> (|M3.UnionFind.Valid#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.Valid $Heap@8 call1formal@this@0) (=> (|M3.UnionFind.ValidM1#canCall| $Heap@8 call1formal@this@0) (or (M3.UnionFind.ValidM1 $Heap@8 call1formal@this@0) (forall ((|e#20@@16| T@U) ) (!  (=> ($Is refType |e#20@@16| Tclass.M3.Element) (and (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@16|)) (M3.Contents.Root_q ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@16|)))) M3.Element.c)))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@16|)) (M3.UnionFind.Reaches ($LS ($LS $LZ)) call1formal@this@0 (M3.Contents.depth ($Unbox DatatypeTypeType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@16|)))) M3.Element.c))) |e#20@@16| ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@16|))) (M3.UnionFind.Collect $Heap@8 call1formal@this@0)))))
 :pattern ( ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@16|))))
 :pattern ( (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |e#20@@16|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@1|))) (=> (|Set#IsMember| (|Map#Domain| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@1|)) (=> (and ($IsGoodHeap $Heap@9) ($IsHeapAnchor $Heap@9)) (=> (and (and ($Is refType |call3formal@r#0@0@@3| Tclass.M3.Element) ($IsAlloc refType |call3formal@r#0@0@@3| Tclass.M3.Element $Heap@9)) (|M3.UnionFind.Valid#canCall| $Heap@9 call1formal@this@0)) (=> (and (and (and (|M3.UnionFind.Valid#canCall| $Heap@9 call1formal@this@0) (and (M3.UnionFind.Valid $Heap@9 call1formal@this@0) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType call1formal@this@0)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType null)))) (M3.UnionFind.ValidM1 $Heap@9 call1formal@this@0)))) (and (forall (($o@@60 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@60)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@60)))) (or (not (= $o@@60 null)) (not true)))
 :pattern (  (or (not (= $o@@60 null)) (not true)))
)) (forall (($o@@61 T@U) ) (!  (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@61)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@61)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@61) alloc)))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@61) alloc)))
)))) (and (and (|Map#Equal| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 call1formal@this@0) M3.UnionFind.M)) ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.M))) (= ($Unbox refType (MapType0Select BoxType BoxType (|Map#Elements| ($Unbox MapType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 call1formal@this@0) M3.UnionFind.M))) ($Box refType |call2formal@e#0@0@@1|))) |call3formal@r#0@0@@3|)) (and (forall (($o@@62 T@U) ) (!  (=> (and (or (not (= $o@@62 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@62) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 $o@@62) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 $o@@62)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@8 call1formal@this@0) M3.UnionFind.Repr)) ($Box refType $o@@62))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@9 $o@@62))
)) ($HeapSucc $Heap@8 $Heap@9)))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) true))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((PreconditionGeneratedEntry_correct  (=> (and (and (and ($IsGoodHeap $Heap@@6) ($IsHeapAnchor $Heap@@6)) (and (=> |defass#uf#0| (and ($Is refType |uf#0| Tclass.M3.UnionFind) ($IsAlloc refType |uf#0| Tclass.M3.UnionFind $Heap@@6))) true)) (and (and (=> |defass#a#0| (and ($Is refType |a#0| Tclass.M3.Element) ($IsAlloc refType |a#0| Tclass.M3.Element $Heap@@6))) true) (and (=> |defass#b#0| (and ($Is refType |b#0| Tclass.M3.Element) ($IsAlloc refType |b#0| Tclass.M3.Element $Heap@@6))) true))) (=> (and (and (and (and (=> |defass#c#0| (and ($Is refType |c#0@@5| Tclass.M3.Element) ($IsAlloc refType |c#0@@5| Tclass.M3.Element $Heap@@6))) true) (and (=> |defass#f0#0| (and ($Is refType |f0#0| Tclass.M3.Element) ($IsAlloc refType |f0#0| Tclass.M3.Element $Heap@@6))) true)) (and (and (=> |defass#f1#0| (and ($Is refType |f1#0| Tclass.M3.Element) ($IsAlloc refType |f1#0| Tclass.M3.Element $Heap@@6))) true) (and (=> |defass#_v5#0| (and ($Is refType |_v5#0| Tclass.M3.Element) ($IsAlloc refType |_v5#0| Tclass.M3.Element $Heap@@6))) true))) (and (and (and (=> |defass#g0#0| (and ($Is refType |g0#0| Tclass.M3.Element) ($IsAlloc refType |g0#0| Tclass.M3.Element $Heap@@6))) true) (and (=> |defass#g1#0| (and ($Is refType |g1#0| Tclass.M3.Element) ($IsAlloc refType |g1#0| Tclass.M3.Element $Heap@@6))) true)) (and (and (=> |defass#g2#0| (and ($Is refType |g2#0| Tclass.M3.Element) ($IsAlloc refType |g2#0| Tclass.M3.Element $Heap@@6))) true) (and (= 0 $FunctionContextHeight) (= (ControlFlow 0 118) 2))))) anon0_correct))))
PreconditionGeneratedEntry_correct)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(pop 1)
; Timed out
