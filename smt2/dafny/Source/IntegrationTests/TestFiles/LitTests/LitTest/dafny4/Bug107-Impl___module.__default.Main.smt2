(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@46 (Int) Bool)
(declare-fun $generated@@48 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@65 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@66 (Int) Bool)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@179 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ) (!  (not ($generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27))
)))
(assert (= ($generated@@8 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33 $generated@@34)) (forall (($generated@@37 T@U) ) (!  (=> ($generated@@31 $generated@@37 $generated@@35) ($generated@@31 $generated@@37 $generated@@33))
 :pattern ( ($generated@@31 $generated@@37 $generated@@35))
 :pattern ( ($generated@@31 $generated@@37 $generated@@33))
))) (forall (($generated@@38 T@U) ) (!  (=> ($generated@@31 $generated@@38 $generated@@34) ($generated@@31 $generated@@38 $generated@@36))
 :pattern ( ($generated@@31 $generated@@38 $generated@@34))
 :pattern ( ($generated@@31 $generated@@38 $generated@@36))
))) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@35 $generated@@36)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33 $generated@@34)) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@35 $generated@@36)))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@47 Int) ) (!  (=> (or ($generated@@46 $generated@@47) (< 0 $generated@@44)) (= ($generated@@45 $generated@@47) (+ $generated@@47 2)))
 :pattern ( ($generated@@45 $generated@@47))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@50 $generated@@54) (and ($generated@@31 $generated@@56 $generated@@52) ($generated@@28 $generated@@29 $generated@@55 ($generated@@30 $generated@@52 $generated@@53)))) (= ($generated@@51 ($generated@@48 $generated@@52 $generated@@53 $generated@@49 $generated@@55 $generated@@56) $generated@@26) ($generated@@51 ($generated@@48 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56) $generated@@26)))
 :pattern ( ($generated@@48 $generated@@52 $generated@@53 $generated@@49 $generated@@55 $generated@@56) ($generated@@50 $generated@@54))
 :pattern ( ($generated@@48 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@57 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@57 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 Int) ) (! (= ($generated@@45 $generated@@64) ($generated@@15 ($generated@@57 $generated@@10 ($generated@@61 $generated $generated $generated@@63 $generated@@62 ($generated@@58 $generated@@10 ($generated@@14 $generated@@64))))))
 :pattern ( ($generated@@45 $generated@@64) ($generated@@50 $generated@@63))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@65 $generated $generated $generated@@67 $generated@@62 $generated@@68) ($generated@@66 ($generated@@15 ($generated@@57 $generated@@10 $generated@@68))))
 :pattern ( ($generated@@65 $generated $generated $generated@@67 $generated@@62 $generated@@68))
)))
(assert ($generated@@50 $generated@@49))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@69 ($generated@@58 $generated@@74 $generated@@71) $generated@@72 $generated@@73) ($generated@@70 $generated@@74 $generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@69 ($generated@@58 $generated@@74 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@70 $generated@@29 $generated@@78 ($generated@@75 $generated@@76 $generated@@77) $generated@@79) ($generated@@70 $generated@@29 $generated@@78 ($generated@@30 $generated@@76 $generated@@77) $generated@@79))
 :pattern ( ($generated@@70 $generated@@29 $generated@@78 ($generated@@75 $generated@@76 $generated@@77) $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@70 $generated@@29 $generated@@83 ($generated@@80 $generated@@81 $generated@@82) $generated@@84) ($generated@@70 $generated@@29 $generated@@83 ($generated@@75 $generated@@81 $generated@@82) $generated@@84))
 :pattern ( ($generated@@70 $generated@@29 $generated@@83 ($generated@@80 $generated@@81 $generated@@82) $generated@@84))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@85 Int) ) (!  (=> (or ($generated@@46 ($generated@@39 $generated@@85)) (< 0 $generated@@44)) (= ($generated@@45 ($generated@@39 $generated@@85)) ($generated@@39 (+ $generated@@85 2))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@39 $generated@@85)))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@25 ($generated@@48 $generated $generated $generated@@87 $generated@@62 $generated@@88) $generated@@86) false)
 :pattern ( ($generated@@25 ($generated@@48 $generated $generated $generated@@87 $generated@@62 $generated@@88) $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@50 $generated@@92) ($generated@@70 $generated@@29 $generated@@89 ($generated@@30 $generated@@90 $generated@@91) $generated@@92)) (forall (($generated@@93 T@U) ) (!  (=> (and ($generated@@69 $generated@@93 $generated@@90 $generated@@92) ($generated@@65 $generated@@90 $generated@@91 $generated@@92 $generated@@89 $generated@@93)) ($generated@@69 ($generated@@61 $generated@@90 $generated@@91 $generated@@92 $generated@@89 $generated@@93) $generated@@91 $generated@@92))
 :pattern ( ($generated@@61 $generated@@90 $generated@@91 $generated@@92 $generated@@89 $generated@@93))
)))
 :pattern ( ($generated@@70 $generated@@29 $generated@@89 ($generated@@30 $generated@@90 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@61 $generated $generated $generated@@94 $generated@@62 $generated@@95) ($generated@@58 $generated@@10 ($generated@@14 ($generated@@45 ($generated@@15 ($generated@@57 $generated@@10 $generated@@95))))))
 :pattern ( ($generated@@61 $generated $generated $generated@@94 $generated@@62 $generated@@95))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@66 $generated@@96) true)
 :pattern ( ($generated@@66 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@51 $generated@@97 $generated@@98) (= $generated@@97 $generated@@98))
 :pattern ( ($generated@@51 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@99 ($generated@@30 $generated@@100 $generated@@101)) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@102) ($generated@@31 $generated@@103 $generated@@100)) ($generated@@65 $generated@@100 $generated@@101 $generated@@102 $generated@@99 $generated@@103)) ($generated@@31 ($generated@@61 $generated@@100 $generated@@101 $generated@@102 $generated@@99 $generated@@103) $generated@@101))
 :pattern ( ($generated@@61 $generated@@100 $generated@@101 $generated@@102 $generated@@99 $generated@@103))
)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@99 ($generated@@30 $generated@@100 $generated@@101)))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@31 $generated@@104 $generated) (and (= ($generated@@58 $generated@@10 ($generated@@57 $generated@@10 $generated@@104)) $generated@@104) ($generated@@28 $generated@@10 ($generated@@57 $generated@@10 $generated@@104) $generated)))
 :pattern ( ($generated@@31 $generated@@104 $generated))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@31 ($generated@@58 $generated@@107 $generated@@105) $generated@@106) ($generated@@28 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@31 ($generated@@58 $generated@@107 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@108 ($generated@@30 $generated@@109 $generated@@110)) $generated@@109)
 :pattern ( ($generated@@30 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@111 ($generated@@30 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@30 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@114 ($generated@@75 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@75 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@117 ($generated@@75 $generated@@118 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@75 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@120 ($generated@@80 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@80 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@123 ($generated@@80 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@80 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@57 $generated@@127 ($generated@@58 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@58 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@130 ($generated@@80 $generated@@128 $generated@@129))  (and ($generated@@28 $generated@@29 $generated@@130 ($generated@@75 $generated@@128 $generated@@129)) (forall (($generated@@131 T@U) )  (=> ($generated@@31 $generated@@131 $generated@@128) ($generated@@65 $generated@@128 $generated@@129 $generated@@49 $generated@@130 $generated@@131)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@130 ($generated@@80 $generated@@128 $generated@@129)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@134 ($generated@@75 $generated@@132 $generated@@133))  (and ($generated@@28 $generated@@29 $generated@@134 ($generated@@30 $generated@@132 $generated@@133)) (forall (($generated@@135 T@U) )  (=> ($generated@@31 $generated@@135 $generated@@132) ($generated@@51 ($generated@@48 $generated@@132 $generated@@133 $generated@@49 $generated@@134 $generated@@135) $generated@@26)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@134 ($generated@@75 $generated@@132 $generated@@133)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@136) 4) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@138 $generated@@145 $generated@@146 ($generated@@142 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@149) $generated@@147)
 :weight 0
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@154 $generated@@155) (= ($generated@@138 $generated@@150 $generated@@151 ($generated@@142 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@138 $generated@@150 $generated@@151 $generated@@153 $generated@@155)))
 :weight 0
))) (= ($generated@@8 $generated@@139) 5)) (= ($generated@@8 $generated@@140) 6)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (= ($generated@@8 ($generated@@141 $generated@@156 $generated@@157)) 7))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@143 ($generated@@141 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@141 $generated@@158 $generated@@159))
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@144 ($generated@@141 $generated@@160 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@141 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@50 $generated@@165) (= ($generated@@70 $generated@@29 $generated@@162 ($generated@@30 $generated@@163 $generated@@164) $generated@@165) (forall (($generated@@166 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@166 $generated@@163) ($generated@@69 $generated@@166 $generated@@163 $generated@@165)) ($generated@@65 $generated@@163 $generated@@164 $generated@@165 $generated@@162 $generated@@166)) (forall (($generated@@167 T@U) ) (!  (=> (and (or (not (= $generated@@167 $generated@@137)) (not true)) ($generated@@25 ($generated@@48 $generated@@163 $generated@@164 $generated@@165 $generated@@162 $generated@@166) ($generated@@58 $generated@@136 $generated@@167))) ($generated@@13 ($generated@@57 $generated@@9 ($generated@@138 $generated@@139 $generated@@140 ($generated@@138 $generated@@136 ($generated@@141 $generated@@139 $generated@@140) $generated@@165 $generated@@167) $generated@@1))))
 :pattern ( ($generated@@25 ($generated@@48 $generated@@163 $generated@@164 $generated@@165 $generated@@162 $generated@@166) ($generated@@58 $generated@@136 $generated@@167)))
)))
 :pattern ( ($generated@@61 $generated@@163 $generated@@164 $generated@@165 $generated@@162 $generated@@166))
 :pattern ( ($generated@@48 $generated@@163 $generated@@164 $generated@@165 $generated@@162 $generated@@166))
))))
 :pattern ( ($generated@@70 $generated@@29 $generated@@162 ($generated@@30 $generated@@163 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@31 $generated@@170 ($generated@@30 $generated@@168 $generated@@169)) (and (= ($generated@@58 $generated@@29 ($generated@@57 $generated@@29 $generated@@170)) $generated@@170) ($generated@@28 $generated@@29 ($generated@@57 $generated@@29 $generated@@170) ($generated@@30 $generated@@168 $generated@@169))))
 :pattern ( ($generated@@31 $generated@@170 ($generated@@30 $generated@@168 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@31 $generated@@173 ($generated@@75 $generated@@171 $generated@@172)) (and (= ($generated@@58 $generated@@29 ($generated@@57 $generated@@29 $generated@@173)) $generated@@173) ($generated@@28 $generated@@29 ($generated@@57 $generated@@29 $generated@@173) ($generated@@75 $generated@@171 $generated@@172))))
 :pattern ( ($generated@@31 $generated@@173 ($generated@@75 $generated@@171 $generated@@172)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@31 $generated@@176 ($generated@@80 $generated@@174 $generated@@175)) (and (= ($generated@@58 $generated@@29 ($generated@@57 $generated@@29 $generated@@176)) $generated@@176) ($generated@@28 $generated@@29 ($generated@@57 $generated@@29 $generated@@176) ($generated@@80 $generated@@174 $generated@@175))))
 :pattern ( ($generated@@31 $generated@@176 ($generated@@80 $generated@@174 $generated@@175)))
)))
(assert  (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@177 $generated@@180 $generated@@181 $generated@@182 ($generated@@179 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@185 $generated@@186) $generated@@183)
 :weight 0
)) (and (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@192 $generated@@194) (= ($generated@@177 $generated@@187 $generated@@188 $generated@@189 ($generated@@179 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@177 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@202 $generated@@204) (= ($generated@@177 $generated@@196 $generated@@197 $generated@@198 ($generated@@179 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@177 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)))))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Bool) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@13 ($generated@@177 $generated@@136 $generated@@139 $generated@@9 ($generated@@178 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))  (=> (and (or (not (= $generated@@209 $generated@@205)) (not true)) ($generated@@13 ($generated@@57 $generated@@9 ($generated@@138 $generated@@139 $generated@@140 ($generated@@138 $generated@@136 ($generated@@141 $generated@@139 $generated@@140) $generated@@206 $generated@@209) $generated@@207)))) $generated@@208))
 :pattern ( ($generated@@177 $generated@@136 $generated@@139 $generated@@9 ($generated@@178 $generated@@205 $generated@@206 $generated@@207 $generated@@208) $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (and (= ($generated@@24 ($generated@@30 $generated@@212 $generated@@213)) $generated@@2) (= ($generated@@211 ($generated@@30 $generated@@212 $generated@@213)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (and (= ($generated@@24 ($generated@@75 $generated@@214 $generated@@215)) $generated@@3) (= ($generated@@211 ($generated@@75 $generated@@214 $generated@@215)) $generated@@6))
 :pattern ( ($generated@@75 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (= ($generated@@24 ($generated@@80 $generated@@216 $generated@@217)) $generated@@4) (= ($generated@@211 ($generated@@80 $generated@@216 $generated@@217)) $generated@@7))
 :pattern ( ($generated@@80 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and ($generated@@50 $generated@@220) (and ($generated@@31 $generated@@222 $generated@@218) ($generated@@28 $generated@@29 $generated@@221 ($generated@@30 $generated@@218 $generated@@219)))) ($generated@@51 ($generated@@48 $generated@@218 $generated@@219 $generated@@49 $generated@@221 $generated@@222) $generated@@26)) (= ($generated@@65 $generated@@218 $generated@@219 $generated@@49 $generated@@221 $generated@@222) ($generated@@65 $generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222)))
 :pattern ( ($generated@@65 $generated@@218 $generated@@219 $generated@@49 $generated@@221 $generated@@222) ($generated@@50 $generated@@220))
 :pattern ( ($generated@@65 $generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@51 $generated@@223 $generated@@224) (forall (($generated@@225 T@U) ) (! (= ($generated@@25 $generated@@223 $generated@@225) ($generated@@25 $generated@@224 $generated@@225))
 :pattern ( ($generated@@25 $generated@@223 $generated@@225))
 :pattern ( ($generated@@25 $generated@@224 $generated@@225))
)))
 :pattern ( ($generated@@51 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@226 Int) ) (! (= ($generated@@58 $generated@@10 ($generated@@14 ($generated@@39 $generated@@226))) ($generated@@41 $generated@@140 ($generated@@58 $generated@@10 ($generated@@14 $generated@@226))))
 :pattern ( ($generated@@58 $generated@@10 ($generated@@14 ($generated@@39 $generated@@226))))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@58 $generated@@228 ($generated@@41 $generated@@228 $generated@@227)) ($generated@@41 $generated@@140 ($generated@@58 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@58 $generated@@228 ($generated@@41 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! ($generated@@70 $generated@@10 $generated@@230 $generated $generated@@229)
 :pattern ( ($generated@@70 $generated@@10 $generated@@230 $generated $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! ($generated@@28 $generated@@10 $generated@@231 $generated)
 :pattern ( ($generated@@28 $generated@@10 $generated@@231 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@236  (=> (and (= $generated@@232 ($generated@@178 $generated@@137 $generated@@233 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= 0 $generated@@44)) (not true)))))
(let (($generated@@237  (=> (and ($generated@@50 $generated@@233) ($generated@@234 $generated@@233)) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@235 ($generated@@80 $generated $generated)) ($generated@@70 $generated@@29 $generated@@235 ($generated@@80 $generated $generated) $generated@@233)) true) (and (= 1 $generated@@44) (= (ControlFlow 0 3) 2))) $generated@@236))))
$generated@@237)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
