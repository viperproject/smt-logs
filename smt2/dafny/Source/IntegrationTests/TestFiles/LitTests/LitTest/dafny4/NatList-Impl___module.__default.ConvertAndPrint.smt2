(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Int)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@119 (T@U T@U) Bool)
(declare-fun $generated@@133 (T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@144 (T@U) Int)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@158 () T@T)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@163 (T@T T@T) T@T)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@T) T@T)
(declare-fun $generated@@167 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@8 $generated@@33) 3))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@34 ($generated@@32 $generated@@33 $generated@@43)) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@43 ($generated@@36 $generated)))) (and (=> (not ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 ($generated@@37 ($generated@@32 $generated@@33 $generated@@43)))))) (let (($generated@@44 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@43)))))
(let (($generated@@45 ($generated@@39 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@32 $generated@@33 $generated@@43)))))))
 (=> (<= ($generated@@39 0) $generated@@45) ($generated@@34 $generated@@44))))) (= ($generated@@30 ($generated@@31 $generated@@42) ($generated@@32 $generated@@33 $generated@@43)) (ite ($generated@@37 ($generated@@32 $generated@@33 $generated@@43)) true (let (($generated@@46 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@43)))))
(let (($generated@@47 ($generated@@39 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@32 $generated@@33 $generated@@43)))))))
 (and (<= ($generated@@39 0) $generated@@47) ($generated@@30 ($generated@@31 $generated@@42) $generated@@46))))))))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@31 $generated@@42) ($generated@@32 $generated@@33 $generated@@43)))
))))
(assert (= ($generated@@48 $generated@@49) $generated@@4))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@50 $generated@@52) ($generated@@25 $generated@@33 $generated@@49 ($generated@@36 $generated@@51) $generated@@52))
 :pattern ( ($generated@@25 $generated@@33 $generated@@49 ($generated@@36 $generated@@51) $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! ($generated@@35 $generated@@33 $generated@@49 ($generated@@36 $generated@@53))
 :pattern ( ($generated@@35 $generated@@33 $generated@@49 ($generated@@36 $generated@@53)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@54 $generated@@55 $generated@@56) (= $generated@@55 $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@57 $generated@@58) ($generated@@57 $generated@@59)) (= ($generated@@54 $generated@@58 $generated@@59)  (and (= ($generated@@41 $generated@@58) ($generated@@41 $generated@@59)) ($generated@@54 ($generated@@38 $generated@@58) ($generated@@38 $generated@@59)))))
 :pattern ( ($generated@@54 $generated@@58 $generated@@59) ($generated@@57 $generated@@58))
 :pattern ( ($generated@@54 $generated@@58 $generated@@59) ($generated@@57 $generated@@59))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@39 $generated@@60) $generated@@60)
 :pattern ( ($generated@@39 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@32 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@32 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@35 $generated@@33 ($generated@@63 $generated@@66 $generated@@67) ($generated@@36 $generated@@65))  (and ($generated@@64 $generated@@66 $generated@@65) ($generated@@35 $generated@@33 $generated@@67 ($generated@@36 $generated@@65))))
 :pattern ( ($generated@@35 $generated@@33 ($generated@@63 $generated@@66 $generated@@67) ($generated@@36 $generated@@65)))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@69 ($generated@@32 $generated@@33 $generated@@72)) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@72 ($generated@@36 $generated)))) (and (=> (not ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 ($generated@@37 ($generated@@32 $generated@@33 $generated@@72)))))) (let (($generated@@73 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@72)))))
($generated@@69 $generated@@73))) (= ($generated@@68 ($generated@@31 $generated@@71) ($generated@@32 $generated@@33 $generated@@72)) (ite ($generated@@37 ($generated@@32 $generated@@33 $generated@@72)) $generated@@49 (let (($generated@@74 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@72)))))
(let (($generated@@75 ($generated@@39 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@32 $generated@@33 $generated@@72)))))))
($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 $generated@@75)))) ($generated@@32 $generated@@33 ($generated@@68 ($generated@@31 $generated@@71) $generated@@74))))))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@31 $generated@@71) ($generated@@32 $generated@@33 $generated@@72)))
))))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@37 $generated@@76) (= ($generated@@48 $generated@@76) $generated@@4))
 :pattern ( ($generated@@37 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@57 $generated@@77) (= ($generated@@48 $generated@@77) $generated@@5))
 :pattern ( ($generated@@57 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@70 $generated@@79 ($generated@@40 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@40 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@57 $generated@@80) (exists (($generated@@81 T@U) ($generated@@82 T@U) ) (= $generated@@80 ($generated@@63 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@57 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@37 $generated@@83) (= $generated@@83 $generated@@49))
 :pattern ( ($generated@@37 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@35 $generated@@10 $generated@@84 $generated@@26) (<= ($generated@@39 0) ($generated@@15 $generated@@84)))
 :pattern ( ($generated@@35 $generated@@10 $generated@@84 $generated@@26))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@86 $generated@@88) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@88 ($generated@@36 $generated@@26)))) (and (=> (not ($generated@@37 $generated@@88)) (let (($generated@@89 ($generated@@38 $generated@@88)))
($generated@@86 $generated@@89))) (= ($generated@@85 ($generated@@31 $generated@@87) $generated@@88) (ite ($generated@@37 $generated@@88) 0 (let (($generated@@90 ($generated@@38 $generated@@88)))
(let (($generated@@91 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@88)))))
(+ $generated@@91 ($generated@@85 $generated@@87 $generated@@90))))))))
 :pattern ( ($generated@@85 ($generated@@31 $generated@@87) $generated@@88))
))))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@92 ($generated@@70 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@25 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@92 ($generated@@70 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@24 ($generated@@36 $generated@@98)) $generated@@3) (= ($generated@@97 ($generated@@36 $generated@@98)) $generated@@7))
 :pattern ( ($generated@@36 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@64 $generated@@99 $generated@@26) (and (= ($generated@@70 $generated@@10 ($generated@@40 $generated@@10 $generated@@99)) $generated@@99) ($generated@@35 $generated@@10 ($generated@@40 $generated@@10 $generated@@99) $generated@@26)))
 :pattern ( ($generated@@64 $generated@@99 $generated@@26))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@100 $generated@@101) (or ($generated@@37 $generated@@101) ($generated@@57 $generated@@101)))
 :pattern ( ($generated@@100 $generated@@101))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or ($generated@@86 ($generated@@32 $generated@@33 $generated@@103)) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@103 ($generated@@36 $generated@@26)))) (and (=> (not ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 ($generated@@37 ($generated@@32 $generated@@33 $generated@@103)))))) (let (($generated@@104 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@103)))))
($generated@@86 $generated@@104))) (= ($generated@@85 ($generated@@31 $generated@@102) ($generated@@32 $generated@@33 $generated@@103)) (ite ($generated@@37 ($generated@@32 $generated@@33 $generated@@103)) 0 (let (($generated@@105 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@103)))))
(let (($generated@@106 ($generated@@39 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@32 $generated@@33 $generated@@103)))))))
($generated@@39 (+ $generated@@106 ($generated@@85 ($generated@@31 $generated@@102) $generated@@105)))))))))
 :weight 3
 :pattern ( ($generated@@85 ($generated@@31 $generated@@102) ($generated@@32 $generated@@33 $generated@@103)))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@35 $generated@@33 $generated@@108 ($generated@@36 $generated@@107)) (or ($generated@@37 $generated@@108) ($generated@@57 $generated@@108)))
 :pattern ( ($generated@@57 $generated@@108) ($generated@@35 $generated@@33 $generated@@108 ($generated@@36 $generated@@107)))
 :pattern ( ($generated@@37 $generated@@108) ($generated@@35 $generated@@33 $generated@@108 ($generated@@36 $generated@@107)))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@69 $generated@@110) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@110 ($generated@@36 $generated)))) (and (=> (not ($generated@@37 $generated@@110)) (let (($generated@@111 ($generated@@38 $generated@@110)))
($generated@@69 $generated@@111))) (= ($generated@@68 ($generated@@31 $generated@@109) $generated@@110) (ite ($generated@@37 $generated@@110) $generated@@49 (let (($generated@@112 ($generated@@38 $generated@@110)))
(let (($generated@@113 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@110)))))
($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 (- 0 $generated@@113))) ($generated@@68 $generated@@109 $generated@@112))))))))
 :pattern ( ($generated@@68 ($generated@@31 $generated@@109) $generated@@110))
))))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@86 $generated@@115) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@115 ($generated@@36 $generated@@26)))) (<= ($generated@@39 0) ($generated@@85 $generated@@114 $generated@@115)))
 :pattern ( ($generated@@85 $generated@@114 $generated@@115))
))))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@64 $generated@@116 $generated) (and (= ($generated@@70 $generated@@10 ($generated@@40 $generated@@10 $generated@@116)) $generated@@116) ($generated@@35 $generated@@10 ($generated@@40 $generated@@10 $generated@@116) $generated)))
 :pattern ( ($generated@@64 $generated@@116 $generated))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@30 ($generated@@31 $generated@@117) $generated@@118) ($generated@@30 $generated@@117 $generated@@118))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 ($generated@@31 $generated@@120) $generated@@121) ($generated@@119 $generated@@120 $generated@@121))
 :pattern ( ($generated@@119 ($generated@@31 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@64 ($generated@@70 $generated@@124 $generated@@122) $generated@@123) ($generated@@35 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@64 ($generated@@70 $generated@@124 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@37 $generated@@125) ($generated@@37 $generated@@126)) ($generated@@54 $generated@@125 $generated@@126))
 :pattern ( ($generated@@54 $generated@@125 $generated@@126) ($generated@@37 $generated@@125))
 :pattern ( ($generated@@54 $generated@@125 $generated@@126) ($generated@@37 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@48 ($generated@@63 $generated@@127 $generated@@128)) $generated@@5)
 :pattern ( ($generated@@63 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@41 ($generated@@63 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@63 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@38 ($generated@@63 $generated@@131 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@63 $generated@@131 $generated@@132))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or ($generated@@133 $generated@@135) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@135 ($generated@@36 $generated)))) (and (=> (not ($generated@@37 $generated@@135)) (let (($generated@@136 ($generated@@38 $generated@@135)))
(let (($generated@@137 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@135)))))
 (=> (<= $generated@@137 ($generated@@39 0)) ($generated@@133 $generated@@136))))) (= ($generated@@119 ($generated@@31 $generated@@134) $generated@@135) (ite ($generated@@37 $generated@@135) true (let (($generated@@138 ($generated@@38 $generated@@135)))
(let (($generated@@139 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@135)))))
 (and (<= $generated@@139 ($generated@@39 0)) ($generated@@119 $generated@@134 $generated@@138))))))))
 :pattern ( ($generated@@119 ($generated@@31 $generated@@134) $generated@@135))
))))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@36 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@36 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@40 $generated@@143 ($generated@@70 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@70 $generated@@143 $generated@@142))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (< ($generated@@144 $generated@@146) ($generated@@145 ($generated@@63 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@63 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (< ($generated@@145 $generated@@149) ($generated@@145 ($generated@@63 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@63 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@85 ($generated@@31 $generated@@150) $generated@@151) ($generated@@85 $generated@@150 $generated@@151))
 :pattern ( ($generated@@85 ($generated@@31 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@68 ($generated@@31 $generated@@152) $generated@@153) ($generated@@68 $generated@@152 $generated@@153))
 :pattern ( ($generated@@68 ($generated@@31 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@50 $generated@@156) (and ($generated@@57 $generated@@154) ($generated@@25 $generated@@33 $generated@@154 ($generated@@36 $generated@@155) $generated@@156))) ($generated@@92 ($generated@@41 $generated@@154) $generated@@155 $generated@@156))
 :pattern ( ($generated@@92 ($generated@@41 $generated@@154) $generated@@155 $generated@@156))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@157 $generated@@168 $generated@@169 $generated@@170 ($generated@@164 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@173 $generated@@174) $generated@@171)
 :weight 0
)) (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@157 $generated@@175 $generated@@176 $generated@@177 ($generated@@164 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@157 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@157 $generated@@184 $generated@@185 $generated@@186 ($generated@@164 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@157 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)))) (= ($generated@@8 $generated@@158) 4)) (= ($generated@@8 $generated@@159) 5)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@161 $generated@@193 $generated@@194 ($generated@@165 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@195) $generated@@197) $generated@@195)
 :weight 0
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@202 $generated@@203) (= ($generated@@161 $generated@@198 $generated@@199 ($generated@@165 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@200) $generated@@203) ($generated@@161 $generated@@198 $generated@@199 $generated@@201 $generated@@203)))
 :weight 0
))) (= ($generated@@8 $generated@@162) 6)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ) (= ($generated@@8 ($generated@@163 $generated@@204 $generated@@205)) 7))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ) (! (= ($generated@@166 ($generated@@163 $generated@@206 $generated@@207)) $generated@@206)
 :pattern ( ($generated@@163 $generated@@206 $generated@@207))
))) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (! (= ($generated@@167 ($generated@@163 $generated@@208 $generated@@209)) $generated@@209)
 :pattern ( ($generated@@163 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 Bool) ($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@13 ($generated@@157 $generated@@158 $generated@@159 $generated@@9 ($generated@@160 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))  (=> (and (or (not (= $generated@@214 $generated@@210)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@161 $generated@@159 $generated@@162 ($generated@@161 $generated@@158 ($generated@@163 $generated@@159 $generated@@162) $generated@@211 $generated@@214) $generated@@212)))) $generated@@213))
 :pattern ( ($generated@@157 $generated@@158 $generated@@159 $generated@@9 ($generated@@160 $generated@@210 $generated@@211 $generated@@212 $generated@@213) $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ) (! (= ($generated@@144 ($generated@@70 $generated@@33 $generated@@216)) ($generated@@145 $generated@@216))
 :pattern ( ($generated@@144 ($generated@@70 $generated@@33 $generated@@216)))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@64 $generated@@218 ($generated@@36 $generated@@217)) (and (= ($generated@@70 $generated@@33 ($generated@@40 $generated@@33 $generated@@218)) $generated@@218) ($generated@@35 $generated@@33 ($generated@@40 $generated@@33 $generated@@218) ($generated@@36 $generated@@217))))
 :pattern ( ($generated@@64 $generated@@218 ($generated@@36 $generated@@217)))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (or ($generated@@34 $generated@@220) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@220 ($generated@@36 $generated)))) (and (=> (not ($generated@@37 $generated@@220)) (let (($generated@@221 ($generated@@38 $generated@@220)))
(let (($generated@@222 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@220)))))
 (=> (<= ($generated@@39 0) $generated@@222) ($generated@@34 $generated@@221))))) (= ($generated@@30 ($generated@@31 $generated@@219) $generated@@220) (ite ($generated@@37 $generated@@220) true (let (($generated@@223 ($generated@@38 $generated@@220)))
(let (($generated@@224 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@220)))))
 (and (<= ($generated@@39 0) $generated@@224) ($generated@@30 $generated@@219 $generated@@223))))))))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@219) $generated@@220))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@50 $generated@@227) (and ($generated@@57 $generated@@225) ($generated@@25 $generated@@33 $generated@@225 ($generated@@36 $generated@@226) $generated@@227))) ($generated@@25 $generated@@33 ($generated@@38 $generated@@225) ($generated@@36 $generated@@226) $generated@@227))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@38 $generated@@225) ($generated@@36 $generated@@226) $generated@@227))
)))
(assert (= ($generated@@24 $generated@@26) $generated@@2))
(assert (= ($generated@@97 $generated@@26) $generated@@6))
(assert (= $generated@@49 ($generated@@32 $generated@@33 $generated@@49)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= ($generated@@63 ($generated@@32 $generated@@162 $generated@@228) ($generated@@32 $generated@@33 $generated@@229)) ($generated@@32 $generated@@33 ($generated@@63 $generated@@228 $generated@@229)))
 :pattern ( ($generated@@63 ($generated@@32 $generated@@162 $generated@@228) ($generated@@32 $generated@@33 $generated@@229)))
)))
(assert (forall (($generated@@230 Int) ) (! (= ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 $generated@@230))) ($generated@@32 $generated@@162 ($generated@@70 $generated@@10 ($generated@@14 $generated@@230))))
 :pattern ( ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 $generated@@230))))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@T) ) (! (= ($generated@@70 $generated@@232 ($generated@@32 $generated@@232 $generated@@231)) ($generated@@32 $generated@@162 ($generated@@70 $generated@@232 $generated@@231)))
 :pattern ( ($generated@@70 $generated@@232 ($generated@@32 $generated@@232 $generated@@231)))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (or ($generated@@133 ($generated@@32 $generated@@33 $generated@@234)) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@234 ($generated@@36 $generated)))) (and (=> (not ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 ($generated@@37 ($generated@@32 $generated@@33 $generated@@234)))))) (let (($generated@@235 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@234)))))
(let (($generated@@236 ($generated@@39 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@32 $generated@@33 $generated@@234)))))))
 (=> (<= $generated@@236 ($generated@@39 0)) ($generated@@133 $generated@@235))))) (= ($generated@@119 ($generated@@31 $generated@@233) ($generated@@32 $generated@@33 $generated@@234)) (ite ($generated@@37 ($generated@@32 $generated@@33 $generated@@234)) true (let (($generated@@237 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@234)))))
(let (($generated@@238 ($generated@@39 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@32 $generated@@33 $generated@@234)))))))
 (and (<= $generated@@238 ($generated@@39 0)) ($generated@@119 ($generated@@31 $generated@@233) $generated@@237))))))))
 :weight 3
 :pattern ( ($generated@@119 ($generated@@31 $generated@@233) ($generated@@32 $generated@@33 $generated@@234)))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (! ($generated@@25 $generated@@10 $generated@@240 $generated $generated@@239)
 :pattern ( ($generated@@25 $generated@@10 $generated@@240 $generated $generated@@239))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> ($generated@@50 $generated@@244) (= ($generated@@25 $generated@@33 ($generated@@63 $generated@@242 $generated@@243) ($generated@@36 $generated@@241) $generated@@244)  (and ($generated@@92 $generated@@242 $generated@@241 $generated@@244) ($generated@@25 $generated@@33 $generated@@243 ($generated@@36 $generated@@241) $generated@@244))))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@63 $generated@@242 $generated@@243) ($generated@@36 $generated@@241) $generated@@244))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (=> (or ($generated@@69 $generated@@246) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@246 ($generated@@36 $generated)))) ($generated@@35 $generated@@33 ($generated@@68 $generated@@245 $generated@@246) ($generated@@36 $generated)))
 :pattern ( ($generated@@68 $generated@@245 $generated@@246))
))))
(assert (forall (($generated@@247 T@U) ) (! ($generated@@35 $generated@@10 $generated@@247 $generated)
 :pattern ( ($generated@@35 $generated@@10 $generated@@247 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 (T@U) Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () Int)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () Int)
(declare-fun $generated@@272 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@273  (=> (and (= $generated@@248 ($generated@@160 $generated@@249 $generated@@250 $generated@@1 false)) ($generated@@25 $generated@@33 $generated@@251 ($generated@@36 $generated) $generated@@250)) (=> (and (and ($generated@@69 $generated@@251) (= $generated@@252 ($generated@@68 ($generated@@31 $generated@@253) $generated@@251))) (and ($generated@@25 $generated@@33 $generated@@252 ($generated@@36 $generated) $generated@@250) ($generated@@69 ($generated@@68 ($generated@@31 $generated@@253) $generated@@251)))) (=> (and (and (and (and ($generated@@69 $generated@@251) ($generated@@69 ($generated@@68 ($generated@@31 $generated@@253) $generated@@251))) (= $generated@@254 ($generated@@68 ($generated@@31 $generated@@253) ($generated@@68 ($generated@@31 $generated@@253) $generated@@251)))) (and ($generated@@50 $generated@@255) ($generated@@256 $generated@@255))) (and (and (and ($generated@@100 ($generated@@68 ($generated@@31 $generated@@253) ($generated@@68 ($generated@@31 $generated@@253) $generated@@251))) ($generated@@100 $generated@@251)) (and ($generated@@69 $generated@@251) ($generated@@69 ($generated@@68 ($generated@@31 $generated@@253) $generated@@251)))) (and ($generated@@54 ($generated@@68 ($generated@@31 ($generated@@31 $generated@@253)) ($generated@@68 ($generated@@31 ($generated@@31 $generated@@253)) $generated@@251)) $generated@@251) (= $generated@@250 $generated@@255)))) (and (=> (= (ControlFlow 0 2) (- 0 13)) ($generated@@35 $generated@@33 $generated@@254 ($generated@@36 $generated@@26))) (=> ($generated@@35 $generated@@33 $generated@@254 ($generated@@36 $generated@@26)) (=> (and ($generated@@25 $generated@@33 $generated@@254 ($generated@@36 $generated@@26) $generated@@255) ($generated@@86 $generated@@254)) (=> (and (and ($generated@@86 $generated@@254) (= $generated@@257 ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 3)))) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 0))) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))))))) (and ($generated@@25 $generated@@33 $generated@@257 ($generated@@36 $generated) $generated@@255) ($generated@@69 $generated@@257))) (and (=> (= (ControlFlow 0 2) (- 0 12)) ($generated@@35 $generated@@33 ($generated@@68 ($generated@@31 $generated@@253) $generated@@257) ($generated@@36 $generated@@26))) (=> ($generated@@35 $generated@@33 ($generated@@68 ($generated@@31 $generated@@253) $generated@@257) ($generated@@36 $generated@@26)) (=> (= $generated@@258 ($generated@@68 ($generated@@31 $generated@@253) $generated@@257)) (=> (and ($generated@@25 $generated@@33 $generated@@258 ($generated@@36 $generated@@26) $generated@@255) ($generated@@86 ($generated@@68 ($generated@@31 $generated@@253) $generated@@257))) (=> (and (and (and ($generated@@69 $generated@@257) ($generated@@86 ($generated@@68 ($generated@@31 $generated@@253) $generated@@257))) (and (= $generated@@259 ($generated@@85 ($generated@@31 $generated@@253) ($generated@@68 ($generated@@31 $generated@@253) $generated@@257))) (= $generated@@260 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 3)))) ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49)))))))) (and (and (= $generated@@262 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) ($generated@@25 $generated@@33 $generated@@262 ($generated@@36 $generated) $generated@@255)) (and ($generated@@133 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) ($generated@@133 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49)))))))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (=> ($generated@@133 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) (or ($generated@@119 ($generated@@31 $generated@@253) ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) (=> ($generated@@37 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (=> ($generated@@133 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) (or ($generated@@119 ($generated@@31 $generated@@253) ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) (=> (not ($generated@@37 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49)))))) (let (($generated@@274 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49)))))))))
(<= $generated@@274 ($generated@@39 0))))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (=> ($generated@@133 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) (or ($generated@@119 ($generated@@31 $generated@@253) ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) (=> (not ($generated@@37 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49)))))) (let (($generated@@275 ($generated@@38 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49)))))))
($generated@@119 ($generated@@31 ($generated@@31 $generated@@253)) $generated@@275)))))) (=> ($generated@@119 ($generated@@31 $generated@@253) ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@261)) ($generated@@32 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 (- 0 2)))) ($generated@@32 $generated@@33 $generated@@49))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (=> ($generated@@133 $generated@@260) (or ($generated@@119 ($generated@@31 $generated@@253) $generated@@260) (=> ($generated@@37 $generated@@260) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 true))))))) (=> (=> ($generated@@133 $generated@@260) (or ($generated@@119 ($generated@@31 $generated@@253) $generated@@260) (=> ($generated@@37 $generated@@260) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> ($generated@@133 $generated@@260) (or ($generated@@119 ($generated@@31 $generated@@253) $generated@@260) (=> (not ($generated@@37 $generated@@260)) (let (($generated@@276 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@260)))))
(<= $generated@@276 ($generated@@39 0))))))) (=> (=> ($generated@@133 $generated@@260) (or ($generated@@119 ($generated@@31 $generated@@253) $generated@@260) (=> (not ($generated@@37 $generated@@260)) (let (($generated@@277 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@260)))))
(<= $generated@@277 ($generated@@39 0)))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@133 $generated@@260) (or ($generated@@119 ($generated@@31 $generated@@253) $generated@@260) (=> (not ($generated@@37 $generated@@260)) (let (($generated@@278 ($generated@@38 $generated@@260)))
($generated@@119 ($generated@@31 ($generated@@31 $generated@@253)) $generated@@278)))))) (=> (=> ($generated@@133 $generated@@260) (or ($generated@@119 ($generated@@31 $generated@@253) $generated@@260) (=> (not ($generated@@37 $generated@@260)) (let (($generated@@279 ($generated@@38 $generated@@260)))
($generated@@119 ($generated@@31 ($generated@@31 $generated@@253)) $generated@@279))))) (=> (and (and ($generated@@50 $generated@@263) ($generated@@256 $generated@@263)) (and ($generated@@69 $generated@@260) ($generated@@34 ($generated@@68 ($generated@@31 $generated@@253) $generated@@260)))) (=> (and (and (and (and ($generated@@34 ($generated@@68 ($generated@@31 $generated@@253) $generated@@260)) (and ($generated@@30 ($generated@@31 $generated@@253) ($generated@@68 ($generated@@31 $generated@@253) $generated@@260)) (ite ($generated@@37 ($generated@@68 ($generated@@31 $generated@@253) $generated@@260)) true (let (($generated@@280 ($generated@@38 ($generated@@68 ($generated@@31 $generated@@253) $generated@@260))))
(let (($generated@@281 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@68 ($generated@@31 $generated@@253) $generated@@260))))))
 (and (<= ($generated@@39 0) $generated@@281) ($generated@@30 ($generated@@31 $generated@@253) $generated@@280))))))) (= $generated@@255 $generated@@263)) (and ($generated@@25 $generated@@33 $generated@@260 ($generated@@36 $generated) $generated@@263) ($generated@@69 $generated@@260))) (and (and ($generated@@69 $generated@@260) (= $generated@@264 ($generated@@68 ($generated@@31 $generated@@253) $generated@@260))) (and ($generated@@35 $generated@@33 $generated@@265 ($generated@@36 $generated@@26)) ($generated@@25 $generated@@33 $generated@@265 ($generated@@36 $generated@@26) $generated@@250)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@34 $generated@@264) (or ($generated@@30 ($generated@@31 $generated@@253) $generated@@264) (=> ($generated@@37 $generated@@264) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 true))))))) (=> (=> ($generated@@34 $generated@@264) (or ($generated@@30 ($generated@@31 $generated@@253) $generated@@264) (=> ($generated@@37 $generated@@264) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@34 $generated@@264) (or ($generated@@30 ($generated@@31 $generated@@253) $generated@@264) (=> (not ($generated@@37 $generated@@264)) (let (($generated@@282 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@264)))))
(<= ($generated@@39 0) $generated@@282)))))) (=> (=> ($generated@@34 $generated@@264) (or ($generated@@30 ($generated@@31 $generated@@253) $generated@@264) (=> (not ($generated@@37 $generated@@264)) (let (($generated@@283 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@264)))))
(<= ($generated@@39 0) $generated@@283))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@34 $generated@@264) (or ($generated@@30 ($generated@@31 $generated@@253) $generated@@264) (=> (not ($generated@@37 $generated@@264)) (let (($generated@@284 ($generated@@38 $generated@@264)))
($generated@@30 ($generated@@31 ($generated@@31 $generated@@253)) $generated@@284)))))) (=> (=> ($generated@@34 $generated@@264) (or ($generated@@30 ($generated@@31 $generated@@253) $generated@@264) (=> (not ($generated@@37 $generated@@264)) (let (($generated@@285 ($generated@@38 $generated@@264)))
($generated@@30 ($generated@@31 ($generated@@31 $generated@@253)) $generated@@285))))) (=> (and (and ($generated@@50 $generated@@266) ($generated@@256 $generated@@266)) (and ($generated@@35 $generated@@33 $generated@@267 ($generated@@36 $generated@@26)) ($generated@@25 $generated@@33 $generated@@267 ($generated@@36 $generated@@26) $generated@@266))) (=> (and (and (and ($generated@@100 $generated@@264) ($generated@@100 $generated@@267)) ($generated@@54 $generated@@264 $generated@@267)) (and (and (= $generated@@263 $generated@@266) ($generated@@25 $generated@@33 $generated@@260 ($generated@@36 $generated) $generated@@266)) (and ($generated@@69 $generated@@260) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@35 $generated@@33 ($generated@@68 ($generated@@31 $generated@@253) $generated@@260) ($generated@@36 $generated@@26))))))))))))))))))))))))))))))))))))
(let (($generated@@286  (=> (and ($generated@@50 $generated@@250) ($generated@@256 $generated@@250)) (=> (and (and ($generated@@35 $generated@@33 $generated@@251 ($generated@@36 $generated@@26)) ($generated@@25 $generated@@33 $generated@@251 ($generated@@36 $generated@@26) $generated@@250)) ($generated@@100 $generated@@251)) (=> (and (and (and (and (and ($generated@@35 $generated@@33 $generated@@268 ($generated@@36 $generated)) ($generated@@25 $generated@@33 $generated@@268 ($generated@@36 $generated) $generated@@250)) true) (and (and ($generated@@35 $generated@@33 $generated@@269 ($generated@@36 $generated@@26)) ($generated@@25 $generated@@33 $generated@@269 ($generated@@36 $generated@@26) $generated@@250)) true)) (and (and (and ($generated@@35 $generated@@33 $generated@@270 ($generated@@36 $generated)) ($generated@@25 $generated@@33 $generated@@270 ($generated@@36 $generated) $generated@@250)) true) (and (<= ($generated@@39 0) $generated@@271) true))) (and (and (and (and ($generated@@35 $generated@@33 $generated@@272 ($generated@@36 $generated@@26)) ($generated@@25 $generated@@33 $generated@@272 ($generated@@36 $generated@@26) $generated@@250)) true) (= 3 $generated@@29)) (and (<= $generated@@261 ($generated@@39 0)) (= (ControlFlow 0 14) 2)))) $generated@@273)))))
$generated@@286)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
