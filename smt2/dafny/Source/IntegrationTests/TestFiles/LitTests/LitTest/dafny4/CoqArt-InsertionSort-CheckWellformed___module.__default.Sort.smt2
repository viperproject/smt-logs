(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@55 (Int) Int)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U Int T@U) T@U)
(declare-fun $generated@@66 (Int T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@109 (T@U Int T@U) Int)
(declare-fun $generated@@124 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@147 (Int T@U) Bool)
(declare-fun $generated@@154 (T@U) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@174 (T@T T@T) T@T)
(declare-fun $generated@@175 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@177 (T@T) T@T)
(declare-fun $generated@@178 (T@T) T@T)
(declare-fun $generated@@227 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@35) (= $generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and ($generated@@36 $generated@@39) ($generated@@36 $generated@@40)) (= ($generated@@33 $generated@@39 $generated@@40)  (and (= ($generated@@37 $generated@@39) ($generated@@37 $generated@@40)) ($generated@@33 ($generated@@38 $generated@@39) ($generated@@38 $generated@@40)))))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@39))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@40))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@44 $generated@@48) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@48 ($generated@@27 $generated)))) (and (=> (not ($generated@@45 $generated@@48)) (let (($generated@@49 ($generated@@38 $generated@@48)))
(let (($generated@@50 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@48)))))
 (=> (not ($generated@@45 $generated@@49)) (let (($generated@@51 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@49)))))
 (=> (<= $generated@@50 $generated@@51) ($generated@@44 $generated@@49))))))) (= ($generated@@42 ($generated@@43 $generated@@47) $generated@@48) (ite ($generated@@45 $generated@@48) true (let (($generated@@52 ($generated@@38 $generated@@48)))
(let (($generated@@53 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@48)))))
(ite ($generated@@45 $generated@@52) true (let (($generated@@54 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@52)))))
 (and (<= $generated@@53 $generated@@54) ($generated@@42 $generated@@47 $generated@@52))))))))))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@47) $generated@@48))
))))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@55 $generated@@56) $generated@@56)
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@60 $generated@@63 $generated@@64) ($generated@@27 $generated@@62))  (and ($generated@@61 $generated@@63 $generated@@62) ($generated@@31 $generated@@26 $generated@@64 ($generated@@27 $generated@@62))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@60 $generated@@63 $generated@@64) ($generated@@27 $generated@@62)))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@68 T@U) ($generated@@69 Int) ($generated@@70 T@U) ) (!  (=> (or ($generated@@66 ($generated@@55 $generated@@69) ($generated@@57 $generated@@26 $generated@@70)) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@70 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 ($generated@@45 ($generated@@57 $generated@@26 $generated@@70)))))) (let (($generated@@71 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@70)))))
(let (($generated@@72 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@70)))))))
 (=> (< $generated@@72 ($generated@@55 $generated@@69)) ($generated@@66 ($generated@@55 $generated@@69) $generated@@71))))) (= ($generated@@65 ($generated@@43 $generated@@68) ($generated@@55 $generated@@69) ($generated@@57 $generated@@26 $generated@@70)) (ite ($generated@@45 ($generated@@57 $generated@@26 $generated@@70)) ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 ($generated@@55 $generated@@69))) ($generated@@57 $generated@@26 $generated@@24)) (let (($generated@@73 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@70)))))
(let (($generated@@74 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@70)))))))
(ite (<= ($generated@@55 $generated@@69) $generated@@74) ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 ($generated@@55 $generated@@69))) ($generated@@57 $generated@@26 $generated@@70)) ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@74)) ($generated@@57 $generated@@26 ($generated@@65 ($generated@@43 $generated@@68) ($generated@@55 $generated@@69) $generated@@73))))))))))
 :weight 3
 :pattern ( ($generated@@65 ($generated@@43 $generated@@68) ($generated@@55 $generated@@69) ($generated@@57 $generated@@26 $generated@@70)))
))))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@45 $generated@@75) (= ($generated@@23 $generated@@75) $generated@@3))
 :pattern ( ($generated@@45 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@36 $generated@@76) (= ($generated@@23 $generated@@76) $generated@@4))
 :pattern ( ($generated@@36 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@67 $generated@@78 ($generated@@46 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@46 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@36 $generated@@79) (exists (($generated@@80 T@U) ($generated@@81 T@U) ) (= $generated@@79 ($generated@@60 $generated@@80 $generated@@81))))
 :pattern ( ($generated@@36 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@45 $generated@@82) (= $generated@@82 $generated@@24))
 :pattern ( ($generated@@45 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@83 ($generated@@67 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@25 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@83 ($generated@@67 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@89)) $generated@@2) (= ($generated@@88 ($generated@@27 $generated@@89)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@89))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@44 ($generated@@57 $generated@@26 $generated@@91)) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@91 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 ($generated@@45 ($generated@@57 $generated@@26 $generated@@91)))))) (let (($generated@@92 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@91)))))
(let (($generated@@93 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@91)))))))
 (=> (not ($generated@@45 $generated@@92)) (let (($generated@@94 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@92)))))
 (=> (<= $generated@@93 $generated@@94) ($generated@@44 $generated@@92))))))) (= ($generated@@42 ($generated@@43 $generated@@90) ($generated@@57 $generated@@26 $generated@@91)) (ite ($generated@@45 ($generated@@57 $generated@@26 $generated@@91)) true (let (($generated@@95 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@91)))))
(let (($generated@@96 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@91)))))))
(ite ($generated@@45 $generated@@95) true (let (($generated@@97 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@95))))))
 (and (<= $generated@@96 $generated@@97) ($generated@@42 ($generated@@43 $generated@@90) $generated@@95))))))))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@43 $generated@@90) ($generated@@57 $generated@@26 $generated@@91)))
))))
(assert  (=> (<= 4 $generated@@41) (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@99 $generated@@102) (and (< 4 $generated@@41) ($generated@@31 $generated@@26 $generated@@102 ($generated@@27 $generated)))) (and (=> (not ($generated@@45 $generated@@102)) (let (($generated@@103 ($generated@@38 $generated@@102)))
(let (($generated@@104 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@102)))))
 (and ($generated@@99 $generated@@103) (let (($generated@@105 ($generated@@98 $generated@@101 $generated@@103)))
($generated@@66 $generated@@104 $generated@@105)))))) (= ($generated@@98 ($generated@@43 $generated@@101) $generated@@102) (ite ($generated@@45 $generated@@102) $generated@@102 (let (($generated@@106 ($generated@@38 $generated@@102)))
(let (($generated@@107 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@102)))))
(let (($generated@@108 ($generated@@98 $generated@@101 $generated@@106)))
($generated@@65 ($generated@@43 $generated@@100) $generated@@107 $generated@@108))))))))
 :pattern ( ($generated@@98 ($generated@@43 $generated@@101) $generated@@102))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 T@U) ) (! (= ($generated@@109 ($generated@@43 $generated@@110) $generated@@111 $generated@@112) ($generated@@109 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 Int) ($generated@@115 T@U) ) (! (= ($generated@@65 ($generated@@43 $generated@@113) $generated@@114 $generated@@115) ($generated@@65 $generated@@113 $generated@@114 $generated@@115))
 :pattern ( ($generated@@65 ($generated@@43 $generated@@113) $generated@@114 $generated@@115))
)))
(assert  (=> (<= 4 $generated@@41) (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@99 ($generated@@57 $generated@@26 $generated@@117)) (and (< 4 $generated@@41) ($generated@@31 $generated@@26 $generated@@117 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 ($generated@@45 ($generated@@57 $generated@@26 $generated@@117)))))) (let (($generated@@118 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@117)))))
(let (($generated@@119 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@117)))))))
 (and ($generated@@99 $generated@@118) (let (($generated@@120 ($generated@@98 ($generated@@43 $generated@@116) $generated@@118)))
($generated@@66 $generated@@119 $generated@@120)))))) (= ($generated@@98 ($generated@@43 $generated@@116) ($generated@@57 $generated@@26 $generated@@117)) (ite ($generated@@45 ($generated@@57 $generated@@26 $generated@@117)) $generated@@117 (let (($generated@@121 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@117)))))
(let (($generated@@122 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@117)))))))
(let (($generated@@123 ($generated@@57 $generated@@26 ($generated@@98 ($generated@@43 $generated@@116) $generated@@121))))
($generated@@57 $generated@@26 ($generated@@65 ($generated@@43 $generated@@100) $generated@@122 $generated@@123)))))))))
 :weight 3
 :pattern ( ($generated@@98 ($generated@@43 $generated@@116) ($generated@@57 $generated@@26 $generated@@117)))
))))
(assert  (=> (<= 4 $generated@@41) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or ($generated@@99 $generated@@126) (and (< 4 $generated@@41) ($generated@@31 $generated@@26 $generated@@126 ($generated@@27 $generated)))) (and (and ($generated@@124 $generated@@126 ($generated@@98 $generated@@125 $generated@@126)) ($generated@@42 ($generated@@43 $generated@@100) ($generated@@98 $generated@@125 $generated@@126))) ($generated@@31 $generated@@26 ($generated@@98 $generated@@125 $generated@@126) ($generated@@27 $generated))))
 :pattern ( ($generated@@98 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@128 ($generated@@27 $generated@@127)) (or ($generated@@45 $generated@@128) ($generated@@36 $generated@@128)))
 :pattern ( ($generated@@36 $generated@@128) ($generated@@31 $generated@@26 $generated@@128 ($generated@@27 $generated@@127)))
 :pattern ( ($generated@@45 $generated@@128) ($generated@@31 $generated@@26 $generated@@128 ($generated@@27 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@61 $generated@@129 $generated) (and (= ($generated@@67 $generated@@8 ($generated@@46 $generated@@8 $generated@@129)) $generated@@129) ($generated@@31 $generated@@8 ($generated@@46 $generated@@8 $generated@@129) $generated)))
 :pattern ( ($generated@@61 $generated@@129 $generated))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@42 ($generated@@43 $generated@@130) $generated@@131) ($generated@@42 $generated@@130 $generated@@131))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@61 ($generated@@67 $generated@@134 $generated@@132) $generated@@133) ($generated@@31 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@61 ($generated@@67 $generated@@134 $generated@@132) $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and ($generated@@45 $generated@@135) ($generated@@45 $generated@@136)) ($generated@@33 $generated@@135 $generated@@136))
 :pattern ( ($generated@@33 $generated@@135 $generated@@136) ($generated@@45 $generated@@135))
 :pattern ( ($generated@@33 $generated@@135 $generated@@136) ($generated@@45 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@23 ($generated@@60 $generated@@137 $generated@@138)) $generated@@4)
 :pattern ( ($generated@@60 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@37 ($generated@@60 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@60 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@38 ($generated@@60 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@60 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@27 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@27 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@46 $generated@@146 ($generated@@67 $generated@@146 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@67 $generated@@146 $generated@@145))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 T@U) ) (!  (=> (or ($generated@@147 $generated@@149 $generated@@150) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@150 ($generated@@27 $generated)))) (and (=> (not ($generated@@45 $generated@@150)) (let (($generated@@151 ($generated@@38 $generated@@150)))
($generated@@147 $generated@@149 $generated@@151))) (= ($generated@@109 ($generated@@43 $generated@@148) $generated@@149 $generated@@150) (ite ($generated@@45 $generated@@150) 0 (let (($generated@@152 ($generated@@38 $generated@@150)))
(let (($generated@@153 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@150)))))
(+ (ite (= $generated@@149 $generated@@153) 1 0) ($generated@@109 $generated@@148 $generated@@149 $generated@@152))))))))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@148) $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (< ($generated@@154 $generated@@156) ($generated@@155 ($generated@@60 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@60 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (< ($generated@@155 $generated@@159) ($generated@@155 ($generated@@60 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@60 $generated@@158 $generated@@159))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@160 T@U) ($generated@@161 Int) ($generated@@162 T@U) ) (!  (=> (or ($generated@@66 $generated@@161 $generated@@162) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@162 ($generated@@27 $generated)))) ($generated@@31 $generated@@26 ($generated@@65 $generated@@160 $generated@@161 $generated@@162) ($generated@@27 $generated)))
 :pattern ( ($generated@@65 $generated@@160 $generated@@161 $generated@@162))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@98 ($generated@@43 $generated@@163) $generated@@164) ($generated@@98 $generated@@163 $generated@@164))
 :pattern ( ($generated@@98 ($generated@@43 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@28 $generated@@167) (and ($generated@@36 $generated@@165) ($generated@@25 $generated@@26 $generated@@165 ($generated@@27 $generated@@166) $generated@@167))) ($generated@@83 ($generated@@37 $generated@@165) $generated@@166 $generated@@167))
 :pattern ( ($generated@@83 ($generated@@37 $generated@@165) $generated@@166 $generated@@167))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@168 $generated@@179 $generated@@180 $generated@@181 ($generated@@175 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@184 $generated@@185) $generated@@182)
 :weight 0
)) (and (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@168 $generated@@186 $generated@@187 $generated@@188 ($generated@@175 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@192 $generated@@189) $generated@@193 $generated@@194) ($generated@@168 $generated@@186 $generated@@187 $generated@@188 $generated@@190 $generated@@193 $generated@@194)))
 :weight 0
)) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@168 $generated@@195 $generated@@196 $generated@@197 ($generated@@175 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@202 $generated@@203) ($generated@@168 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@202 $generated@@203)))
 :weight 0
)))) (= ($generated@@6 $generated@@169) 4)) (= ($generated@@6 $generated@@170) 5)) (forall (($generated@@204 T@T) ($generated@@205 T@T) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@172 $generated@@204 $generated@@205 ($generated@@176 $generated@@204 $generated@@205 $generated@@207 $generated@@208 $generated@@206) $generated@@208) $generated@@206)
 :weight 0
))) (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (or (= $generated@@213 $generated@@214) (= ($generated@@172 $generated@@209 $generated@@210 ($generated@@176 $generated@@209 $generated@@210 $generated@@212 $generated@@213 $generated@@211) $generated@@214) ($generated@@172 $generated@@209 $generated@@210 $generated@@212 $generated@@214)))
 :weight 0
))) (= ($generated@@6 $generated@@173) 6)) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (= ($generated@@6 ($generated@@174 $generated@@215 $generated@@216)) 7))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@177 ($generated@@174 $generated@@217 $generated@@218)) $generated@@217)
 :pattern ( ($generated@@174 $generated@@217 $generated@@218))
))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@178 ($generated@@174 $generated@@219 $generated@@220)) $generated@@220)
 :pattern ( ($generated@@174 $generated@@219 $generated@@220))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 Bool) ($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@11 ($generated@@168 $generated@@169 $generated@@170 $generated@@7 ($generated@@171 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))  (=> (and (or (not (= $generated@@225 $generated@@221)) (not true)) ($generated@@11 ($generated@@46 $generated@@7 ($generated@@172 $generated@@170 $generated@@173 ($generated@@172 $generated@@169 ($generated@@174 $generated@@170 $generated@@173) $generated@@222 $generated@@225) $generated@@223)))) $generated@@224))
 :pattern ( ($generated@@168 $generated@@169 $generated@@170 $generated@@7 ($generated@@171 $generated@@221 $generated@@222 $generated@@223 $generated@@224) $generated@@225 $generated@@226))
)))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (or ($generated@@227 ($generated@@57 $generated@@26 $generated@@228) ($generated@@57 $generated@@26 $generated@@229)) (and (< 2 $generated@@41) (and ($generated@@31 $generated@@26 $generated@@228 ($generated@@27 $generated)) ($generated@@31 $generated@@26 $generated@@229 ($generated@@27 $generated))))) (and (forall (($generated@@230 Int) ) (!  (and ($generated@@147 $generated@@230 ($generated@@57 $generated@@26 $generated@@228)) ($generated@@147 $generated@@230 ($generated@@57 $generated@@26 $generated@@229)))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@230 $generated@@229))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@230 $generated@@228))
)) (= ($generated@@124 ($generated@@57 $generated@@26 $generated@@228) ($generated@@57 $generated@@26 $generated@@229)) (forall (($generated@@231 Int) ) (! (= ($generated@@109 ($generated@@43 $generated@@100) $generated@@231 ($generated@@57 $generated@@26 $generated@@228)) ($generated@@109 ($generated@@43 $generated@@100) $generated@@231 ($generated@@57 $generated@@26 $generated@@229)))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@231 $generated@@229))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@231 $generated@@228))
)))))
 :weight 3
 :pattern ( ($generated@@124 ($generated@@57 $generated@@26 $generated@@228) ($generated@@57 $generated@@26 $generated@@229)))
))))
(assert (forall (($generated@@232 T@U) ) (! (= ($generated@@154 ($generated@@67 $generated@@26 $generated@@232)) ($generated@@155 $generated@@232))
 :pattern ( ($generated@@154 ($generated@@67 $generated@@26 $generated@@232)))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@233 T@U) ($generated@@234 Int) ($generated@@235 T@U) ) (!  (=> (or ($generated@@147 ($generated@@55 $generated@@234) ($generated@@57 $generated@@26 $generated@@235)) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@235 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 ($generated@@45 ($generated@@57 $generated@@26 $generated@@235)))))) (let (($generated@@236 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@235)))))
($generated@@147 ($generated@@55 $generated@@234) $generated@@236))) (= ($generated@@109 ($generated@@43 $generated@@233) ($generated@@55 $generated@@234) ($generated@@57 $generated@@26 $generated@@235)) (ite ($generated@@45 ($generated@@57 $generated@@26 $generated@@235)) 0 (let (($generated@@237 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@235)))))
(let (($generated@@238 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@235)))))))
(+ (ite (= ($generated@@55 $generated@@234) $generated@@238) 1 0) ($generated@@109 ($generated@@43 $generated@@233) ($generated@@55 $generated@@234) $generated@@237))))))))
 :weight 3
 :pattern ( ($generated@@109 ($generated@@43 $generated@@233) ($generated@@55 $generated@@234) ($generated@@57 $generated@@26 $generated@@235)))
))))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> ($generated@@61 $generated@@240 ($generated@@27 $generated@@239)) (and (= ($generated@@67 $generated@@26 ($generated@@46 $generated@@26 $generated@@240)) $generated@@240) ($generated@@31 $generated@@26 ($generated@@46 $generated@@26 $generated@@240) ($generated@@27 $generated@@239))))
 :pattern ( ($generated@@61 $generated@@240 ($generated@@27 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and ($generated@@28 $generated@@243) (and ($generated@@36 $generated@@241) ($generated@@25 $generated@@26 $generated@@241 ($generated@@27 $generated@@242) $generated@@243))) ($generated@@25 $generated@@26 ($generated@@38 $generated@@241) ($generated@@27 $generated@@242) $generated@@243))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@38 $generated@@241) ($generated@@27 $generated@@242) $generated@@243))
)))
(assert (= $generated@@24 ($generated@@57 $generated@@26 $generated@@24)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (! (= ($generated@@60 ($generated@@57 $generated@@173 $generated@@244) ($generated@@57 $generated@@26 $generated@@245)) ($generated@@57 $generated@@26 ($generated@@60 $generated@@244 $generated@@245)))
 :pattern ( ($generated@@60 ($generated@@57 $generated@@173 $generated@@244) ($generated@@57 $generated@@26 $generated@@245)))
)))
(assert (forall (($generated@@246 Int) ) (! (= ($generated@@67 $generated@@8 ($generated@@12 ($generated@@55 $generated@@246))) ($generated@@57 $generated@@173 ($generated@@67 $generated@@8 ($generated@@12 $generated@@246))))
 :pattern ( ($generated@@67 $generated@@8 ($generated@@12 ($generated@@55 $generated@@246))))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (= ($generated@@67 $generated@@248 ($generated@@57 $generated@@248 $generated@@247)) ($generated@@57 $generated@@173 ($generated@@67 $generated@@248 $generated@@247)))
 :pattern ( ($generated@@67 $generated@@248 ($generated@@57 $generated@@248 $generated@@247)))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@249 T@U) ($generated@@250 Int) ($generated@@251 T@U) ) (!  (=> (or ($generated@@147 $generated@@250 $generated@@251) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@251 ($generated@@27 $generated)))) (<= ($generated@@55 0) ($generated@@109 $generated@@249 $generated@@250 $generated@@251)))
 :pattern ( ($generated@@109 $generated@@249 $generated@@250 $generated@@251))
))))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (or ($generated@@227 $generated@@252 $generated@@253) (and (< 2 $generated@@41) (and ($generated@@31 $generated@@26 $generated@@252 ($generated@@27 $generated)) ($generated@@31 $generated@@26 $generated@@253 ($generated@@27 $generated))))) (and (forall (($generated@@254 Int) ) (!  (and ($generated@@147 $generated@@254 $generated@@252) ($generated@@147 $generated@@254 $generated@@253))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@254 $generated@@253))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@254 $generated@@252))
)) (= ($generated@@124 $generated@@252 $generated@@253) (forall (($generated@@255 Int) ) (! (= ($generated@@109 ($generated@@43 $generated@@100) $generated@@255 $generated@@252) ($generated@@109 ($generated@@43 $generated@@100) $generated@@255 $generated@@253))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@255 $generated@@253))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@255 $generated@@252))
)))))
 :pattern ( ($generated@@124 $generated@@252 $generated@@253))
))))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (! ($generated@@25 $generated@@8 $generated@@257 $generated $generated@@256)
 :pattern ( ($generated@@25 $generated@@8 $generated@@257 $generated $generated@@256))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> ($generated@@28 $generated@@261) (= ($generated@@25 $generated@@26 ($generated@@60 $generated@@259 $generated@@260) ($generated@@27 $generated@@258) $generated@@261)  (and ($generated@@83 $generated@@259 $generated@@258 $generated@@261) ($generated@@25 $generated@@26 $generated@@260 ($generated@@27 $generated@@258) $generated@@261))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@60 $generated@@259 $generated@@260) ($generated@@27 $generated@@258) $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (! ($generated@@31 $generated@@8 $generated@@262 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@262 $generated))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@263 T@U) ($generated@@264 Int) ($generated@@265 T@U) ) (!  (=> (or ($generated@@66 $generated@@264 $generated@@265) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@265 ($generated@@27 $generated)))) (and (=> (not ($generated@@45 $generated@@265)) (let (($generated@@266 ($generated@@38 $generated@@265)))
(let (($generated@@267 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@265)))))
 (=> (< $generated@@267 $generated@@264) ($generated@@66 $generated@@264 $generated@@266))))) (= ($generated@@65 ($generated@@43 $generated@@263) $generated@@264 $generated@@265) (ite ($generated@@45 $generated@@265) ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@264)) ($generated@@57 $generated@@26 $generated@@24)) (let (($generated@@268 ($generated@@38 $generated@@265)))
(let (($generated@@269 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@265)))))
(ite (<= $generated@@264 $generated@@269) ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@264)) $generated@@265) ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@269)) ($generated@@65 $generated@@263 $generated@@264 $generated@@268)))))))))
 :pattern ( ($generated@@65 ($generated@@43 $generated@@263) $generated@@264 $generated@@265))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () Int)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () Int)
(declare-fun $generated@@276 () Int)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 (T@U) Bool)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@287  (and (=> (= (ControlFlow 0 6) (- 0 10)) (=> ($generated@@227 $generated@@270 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@124 $generated@@270 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (forall (($generated@@288 Int) ) (! (= ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@288 $generated@@270) ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@288 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270)))
 :pattern ( ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@288 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270)))
 :pattern ( ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@288 $generated@@270))
))))) (=> (=> ($generated@@227 $generated@@270 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@124 $generated@@270 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (forall (($generated@@289 Int) ) (! (= ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@289 $generated@@270) ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@289 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270)))
 :pattern ( ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@289 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270)))
 :pattern ( ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@289 $generated@@270))
)))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (=> ($generated@@44 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@42 ($generated@@43 $generated@@100) ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (=> ($generated@@45 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true))))))) (=> (=> ($generated@@44 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@42 ($generated@@43 $generated@@100) ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (=> ($generated@@45 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true)))))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@44 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@42 ($generated@@43 $generated@@100) ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (=> (not ($generated@@45 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270))) (let (($generated@@290 ($generated@@38 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270))))
 (=> ($generated@@45 $generated@@290) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true))))))))) (=> (=> ($generated@@44 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@42 ($generated@@43 $generated@@100) ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (=> (not ($generated@@45 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270))) (let (($generated@@291 ($generated@@38 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270))))
 (=> ($generated@@45 $generated@@291) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true)))))))) (and (=> (= (ControlFlow 0 6) (- 0 7)) (=> ($generated@@44 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@42 ($generated@@43 $generated@@100) ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (=> (not ($generated@@45 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270))) (let (($generated@@292 ($generated@@38 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270))))
(let (($generated@@293 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270))))))
 (=> (not ($generated@@45 $generated@@292)) (let (($generated@@294 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@292)))))
(<= $generated@@293 $generated@@294))))))))) (=> (=> ($generated@@44 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@42 ($generated@@43 $generated@@100) ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (=> (not ($generated@@45 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270))) (let (($generated@@295 ($generated@@38 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270))))
(let (($generated@@296 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270))))))
 (=> (not ($generated@@45 $generated@@295)) (let (($generated@@297 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@295)))))
(<= $generated@@296 $generated@@297)))))))) (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@44 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (or ($generated@@42 ($generated@@43 $generated@@100) ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) (=> (not ($generated@@45 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270))) (let (($generated@@298 ($generated@@38 ($generated@@98 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@270))))
 (=> (not ($generated@@45 $generated@@298)) ($generated@@42 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@298)))))))))))))))))
(let (($generated@@299  (=> (= $generated@@270 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@271)) $generated@@272)) (=> (and (and (and ($generated@@31 $generated@@26 $generated@@272 ($generated@@27 $generated)) (= $generated@@273 $generated@@272)) (and ($generated@@31 $generated@@26 $generated@@273 ($generated@@27 $generated)) (= $generated@@274 $generated@@273))) (and (and (= $generated@@275 $generated@@271) ($generated@@31 $generated@@8 ($generated@@12 $generated@@275) $generated)) (and (= $generated@@276 $generated@@275) ($generated@@25 $generated@@26 $generated@@274 ($generated@@27 $generated) $generated@@277)))) (and (=> (= (ControlFlow 0 12) (- 0 18)) (< ($generated@@155 $generated@@274) ($generated@@155 $generated@@270))) (=> (< ($generated@@155 $generated@@274) ($generated@@155 $generated@@270)) (=> (and ($generated@@99 $generated@@274) (= $generated@@278 ($generated@@98 ($generated@@43 $generated@@100) $generated@@274))) (=> (and (and (and ($generated@@99 $generated@@274) ($generated@@31 $generated@@26 $generated@@278 ($generated@@27 $generated))) (and (= $generated@@279 $generated@@278) ($generated@@25 $generated@@26 $generated@@270 ($generated@@27 $generated) $generated@@277))) (and (and (= $generated@@280 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)) ($generated@@25 $generated@@26 $generated@@280 ($generated@@27 $generated) $generated@@277)) (and ($generated@@227 $generated@@270 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)) ($generated@@227 $generated@@270 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279))))) (and (=> (= (ControlFlow 0 12) (- 0 17)) (=> ($generated@@227 $generated@@270 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)) (or ($generated@@124 $generated@@270 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)) (forall (($generated@@300 Int) ) (! (= ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@300 $generated@@270) ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@300 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)))
 :pattern ( ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@300 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)))
 :pattern ( ($generated@@109 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@300 $generated@@270))
))))) (=> ($generated@@124 $generated@@270 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)) (=> (and (and (and ($generated@@28 $generated@@281) ($generated@@282 $generated@@281)) (and ($generated@@66 $generated@@276 $generated@@279) ($generated@@227 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279) ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)))) (and (and ($generated@@227 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279) ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)) (and ($generated@@124 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279) ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)) (forall (($generated@@301 Int) ) (! (= ($generated@@109 ($generated@@43 $generated@@100) $generated@@301 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)) ($generated@@109 ($generated@@43 $generated@@100) $generated@@301 ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@301 ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)))
 :pattern ( ($generated@@109 ($generated@@43 $generated@@100) $generated@@301 ($generated@@60 ($generated@@67 $generated@@8 ($generated@@12 $generated@@276)) $generated@@279)))
)))) (= $generated@@277 $generated@@281))) (and (=> (= (ControlFlow 0 12) (- 0 16)) (=> ($generated@@44 $generated@@279) (or ($generated@@42 ($generated@@43 $generated@@100) $generated@@279) (=> ($generated@@45 $generated@@279) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true))))))) (=> (=> ($generated@@44 $generated@@279) (or ($generated@@42 ($generated@@43 $generated@@100) $generated@@279) (=> ($generated@@45 $generated@@279) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true)))))) (and (=> (= (ControlFlow 0 12) (- 0 15)) (=> ($generated@@44 $generated@@279) (or ($generated@@42 ($generated@@43 $generated@@100) $generated@@279) (=> (not ($generated@@45 $generated@@279)) (let (($generated@@302 ($generated@@38 $generated@@279)))
 (=> ($generated@@45 $generated@@302) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true))))))))) (=> (=> ($generated@@44 $generated@@279) (or ($generated@@42 ($generated@@43 $generated@@100) $generated@@279) (=> (not ($generated@@45 $generated@@279)) (let (($generated@@303 ($generated@@38 $generated@@279)))
 (=> ($generated@@45 $generated@@303) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true)))))))) (and (=> (= (ControlFlow 0 12) (- 0 14)) (=> ($generated@@44 $generated@@279) (or ($generated@@42 ($generated@@43 $generated@@100) $generated@@279) (=> (not ($generated@@45 $generated@@279)) (let (($generated@@304 ($generated@@38 $generated@@279)))
(let (($generated@@305 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@279)))))
 (=> (not ($generated@@45 $generated@@304)) (let (($generated@@306 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@304)))))
(<= $generated@@305 $generated@@306))))))))) (=> (=> ($generated@@44 $generated@@279) (or ($generated@@42 ($generated@@43 $generated@@100) $generated@@279) (=> (not ($generated@@45 $generated@@279)) (let (($generated@@307 ($generated@@38 $generated@@279)))
(let (($generated@@308 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@279)))))
 (=> (not ($generated@@45 $generated@@307)) (let (($generated@@309 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@307)))))
(<= $generated@@308 $generated@@309)))))))) (and (=> (= (ControlFlow 0 12) (- 0 13)) (=> ($generated@@44 $generated@@279) (or ($generated@@42 ($generated@@43 $generated@@100) $generated@@279) (=> (not ($generated@@45 $generated@@279)) (let (($generated@@310 ($generated@@38 $generated@@279)))
 (=> (not ($generated@@45 $generated@@310)) ($generated@@42 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@310))))))) (=> (=> ($generated@@44 $generated@@279) (or ($generated@@42 ($generated@@43 $generated@@100) $generated@@279) (=> (not ($generated@@45 $generated@@279)) (let (($generated@@311 ($generated@@38 $generated@@279)))
 (=> (not ($generated@@45 $generated@@311)) ($generated@@42 ($generated@@43 ($generated@@43 $generated@@100)) $generated@@311)))))) (=> (and ($generated@@28 $generated@@283) ($generated@@282 $generated@@283)) (=> (and (and ($generated@@66 $generated@@276 $generated@@279) ($generated@@44 ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279))) (and ($generated@@44 ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)) (and ($generated@@42 ($generated@@43 $generated@@100) ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)) (ite ($generated@@45 ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)) true (let (($generated@@312 ($generated@@38 ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279))))
(let (($generated@@313 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279))))))
(ite ($generated@@45 $generated@@312) true (let (($generated@@314 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@312)))))
 (and (<= $generated@@313 $generated@@314) ($generated@@42 ($generated@@43 $generated@@100) $generated@@312)))))))))) (=> (and (and (and (= $generated@@281 $generated@@283) ($generated@@25 $generated@@8 ($generated@@12 $generated@@276) $generated $generated@@283)) (and ($generated@@25 $generated@@26 $generated@@279 ($generated@@27 $generated) $generated@@283) ($generated@@66 $generated@@276 $generated@@279))) (and (and (= ($generated@@98 ($generated@@43 $generated@@100) $generated@@270) ($generated@@65 ($generated@@43 $generated@@100) $generated@@276 $generated@@279)) ($generated@@66 $generated@@276 $generated@@279)) (and ($generated@@31 $generated@@26 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270) ($generated@@27 $generated)) (= (ControlFlow 0 12) 6)))) $generated@@287))))))))))))))))))))))
(let (($generated@@315  (=> (and (and (= $generated@@270 $generated@@24) (= ($generated@@98 ($generated@@43 $generated@@100) $generated@@270) $generated@@270)) (and ($generated@@31 $generated@@26 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270) ($generated@@27 $generated)) (= (ControlFlow 0 11) 6))) $generated@@287)))
(let (($generated@@316 true))
(let (($generated@@317  (=> (or (not (= $generated@@270 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 19) 12) $generated@@299) (=> (= (ControlFlow 0 19) 4) $generated@@316)))))
(let (($generated@@318  (=> ($generated@@31 $generated@@26 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270) ($generated@@27 $generated)) (=> (and ($generated@@25 $generated@@26 $generated@@270 ($generated@@27 $generated) $generated@@277) ($generated@@25 $generated@@26 $generated@@270 ($generated@@27 $generated) $generated@@277)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or ($generated@@33 $generated@@270 $generated@@270) (< ($generated@@155 $generated@@270) ($generated@@155 $generated@@270)))) (=> (or ($generated@@33 $generated@@270 $generated@@270) (< ($generated@@155 $generated@@270) ($generated@@155 $generated@@270))) (=> (or ($generated@@33 $generated@@270 $generated@@270) ($generated@@99 $generated@@270)) (=> (and (= $generated@@284 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) ($generated@@25 $generated@@26 $generated@@284 ($generated@@27 $generated) $generated@@277)) (=> (and (and ($generated@@227 $generated@@270 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270)) ($generated@@124 $generated@@270 ($generated@@98 ($generated@@43 $generated@@100) $generated@@270))) (and ($generated@@25 $generated@@26 $generated@@270 ($generated@@27 $generated) $generated@@277) (= (ControlFlow 0 2) (- 0 1)))) (or ($generated@@33 $generated@@270 $generated@@270) (< ($generated@@155 $generated@@270) ($generated@@155 $generated@@270))))))))))))
(let (($generated@@319  (=> (= $generated@@285 ($generated@@171 $generated@@286 $generated@@277 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 20) 2) $generated@@318) (=> (= (ControlFlow 0 20) 11) $generated@@315)) (=> (= (ControlFlow 0 20) 19) $generated@@317)))))
(let (($generated@@320  (=> (and (and (and ($generated@@28 $generated@@277) ($generated@@282 $generated@@277)) ($generated@@31 $generated@@26 $generated@@270 ($generated@@27 $generated))) (and (= 4 $generated@@41) (= (ControlFlow 0 21) 20))) $generated@@319)))
$generated@@320)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
