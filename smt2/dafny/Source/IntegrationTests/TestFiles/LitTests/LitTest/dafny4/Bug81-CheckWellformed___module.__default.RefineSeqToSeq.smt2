(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U T@U T@U Bool T@U T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (Int) Int)
(declare-fun $generated@@43 (T@U Int) T@U)
(declare-fun $generated@@44 () Bool)
(declare-fun $generated@@55 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U) Int)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U Int) T@U)
(declare-fun $generated@@100 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@125 (T@U) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@T T@T) T@T)
(declare-fun $generated@@151 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@153 (T@T) T@T)
(declare-fun $generated@@180 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@182 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@214 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ) (!  (not ($generated@@19 $generated@@20 $generated@@21))
 :pattern ( ($generated@@19 $generated@@20 $generated@@21))
)))
(assert (= ($generated@@22 $generated@@23) 0))
(assert (= ($generated@@3 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (and ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29 $generated@@30)) (forall (($generated@@33 T@U) ) (!  (=> ($generated@@27 $generated@@33 $generated@@31) ($generated@@27 $generated@@33 $generated@@29))
 :pattern ( ($generated@@27 $generated@@33 $generated@@31))
 :pattern ( ($generated@@27 $generated@@33 $generated@@29))
))) (forall (($generated@@34 T@U) ) (!  (=> ($generated@@27 $generated@@34 $generated@@30) ($generated@@27 $generated@@34 $generated@@32))
 :pattern ( ($generated@@27 $generated@@34 $generated@@30))
 :pattern ( ($generated@@27 $generated@@34 $generated@@32))
))) ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@31 $generated@@32)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29 $generated@@30)) ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@31 $generated@@32)))
)))
(assert (= ($generated@@3 $generated@@39) 4))
(assert  (=> (<= 0 $generated@@35) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (or ($generated@@40 $generated@@45 $generated@@46 ($generated@@38 $generated@@39 $generated@@48) $generated@@49) (and (< 0 $generated@@35) (and ($generated@@24 $generated@@39 $generated@@48 ($generated@@41 $generated@@45)) ($generated@@24 $generated@@25 $generated@@49 ($generated@@26 $generated@@45 $generated@@46))))) (and (=> (or (not (= ($generated@@22 ($generated@@38 $generated@@39 $generated@@48)) ($generated@@42 0))) (not true)) ($generated@@40 $generated@@45 $generated@@46 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@48) ($generated@@42 1))) $generated@@49)) (= ($generated@@36 $generated@@45 $generated@@46 ($generated@@37 $generated@@47) true ($generated@@38 $generated@@39 $generated@@48) $generated@@49) (ite (= ($generated@@22 ($generated@@38 $generated@@39 $generated@@48)) ($generated@@42 0)) $generated@@23 ($generated@@36 $generated@@45 $generated@@46 ($generated@@37 $generated@@47) $generated@@44 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@48) ($generated@@42 1))) $generated@@49)))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@45 $generated@@46 ($generated@@37 $generated@@47) true ($generated@@38 $generated@@39 $generated@@48) $generated@@49))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (= $generated@@51 0) (= ($generated@@43 $generated@@50 $generated@@51) $generated@@50))
 :pattern ( ($generated@@43 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@52 Int) ) (! (= ($generated@@42 $generated@@52) $generated@@52)
 :pattern ( ($generated@@42 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@38 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@38 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (and ($generated@@57 $generated@@61) (and ($generated@@27 $generated@@63 $generated@@59) ($generated@@24 $generated@@25 $generated@@62 ($generated@@26 $generated@@59 $generated@@60)))) (= ($generated@@58 ($generated@@55 $generated@@59 $generated@@60 $generated@@56 $generated@@62 $generated@@63) $generated@@20) ($generated@@58 ($generated@@55 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63) $generated@@20)))
 :pattern ( ($generated@@55 $generated@@59 $generated@@60 $generated@@56 $generated@@62 $generated@@63) ($generated@@57 $generated@@61))
 :pattern ( ($generated@@55 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 Int) ) (!  (=> (and (<= 0 $generated@@65) (<= $generated@@65 ($generated@@22 $generated@@64))) (= ($generated@@22 ($generated@@43 $generated@@64 $generated@@65)) (- ($generated@@22 $generated@@64) $generated@@65)))
 :pattern ( ($generated@@22 ($generated@@43 $generated@@64 $generated@@65)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@66 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@66 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 Int) ) (!  (=> (and (< 0 $generated@@72) (<= $generated@@72 ($generated@@22 $generated@@71))) (< ($generated@@70 ($generated@@43 $generated@@71 $generated@@72)) ($generated@@70 $generated@@71)))
 :pattern ( ($generated@@70 ($generated@@43 $generated@@71 $generated@@72)))
)))
(assert ($generated@@57 $generated@@56))
(assert  (=> (<= 0 $generated@@35) (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 Bool) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@40 $generated@@73 $generated@@74 $generated@@77 $generated@@78) (and (< 0 $generated@@35) (and ($generated@@24 $generated@@39 $generated@@77 ($generated@@41 $generated@@73)) ($generated@@24 $generated@@25 $generated@@78 ($generated@@26 $generated@@73 $generated@@74))))) ($generated@@24 $generated@@39 ($generated@@36 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78) ($generated@@41 $generated@@74)))
 :pattern ( ($generated@@36 $generated@@73 $generated@@74 $generated@@75 $generated@@76 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@79 ($generated@@67 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@80 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@79 ($generated@@67 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 Bool) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@36 $generated@@85 $generated@@86 ($generated@@37 $generated@@87) $generated@@88 $generated@@89 $generated@@90) ($generated@@36 $generated@@85 $generated@@86 $generated@@87 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@36 $generated@@85 $generated@@86 ($generated@@37 $generated@@87) $generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 Int) ($generated@@94 Int) ) (!  (=> (and (and (<= 0 $generated@@93) (<= 0 $generated@@94)) (< $generated@@94 (- ($generated@@22 $generated@@92) $generated@@93))) (= ($generated@@91 ($generated@@43 $generated@@92 $generated@@93) $generated@@94) ($generated@@91 $generated@@92 (+ $generated@@94 $generated@@93))))
 :weight 25
 :pattern ( ($generated@@91 ($generated@@43 $generated@@92 $generated@@93) $generated@@94))
)))
(assert  (=> (<= 0 $generated@@35) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@40 $generated@@95 $generated@@96 ($generated@@38 $generated@@39 $generated@@98) ($generated@@38 $generated@@25 $generated@@99)) (and (< 0 $generated@@35) (and ($generated@@24 $generated@@39 $generated@@98 ($generated@@41 $generated@@95)) ($generated@@24 $generated@@25 $generated@@99 ($generated@@26 $generated@@95 $generated@@96))))) (and (=> (or (not (= ($generated@@22 ($generated@@38 $generated@@39 $generated@@98)) ($generated@@42 0))) (not true)) ($generated@@40 $generated@@95 $generated@@96 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@98) ($generated@@42 1))) ($generated@@38 $generated@@25 $generated@@99))) (= ($generated@@36 $generated@@95 $generated@@96 ($generated@@37 $generated@@97) true ($generated@@38 $generated@@39 $generated@@98) ($generated@@38 $generated@@25 $generated@@99)) (ite (= ($generated@@22 ($generated@@38 $generated@@39 $generated@@98)) ($generated@@42 0)) $generated@@23 ($generated@@36 $generated@@95 $generated@@96 ($generated@@37 $generated@@97) $generated@@44 ($generated@@38 $generated@@39 ($generated@@43 ($generated@@38 $generated@@39 $generated@@98) ($generated@@42 1))) ($generated@@38 $generated@@25 $generated@@99))))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@95 $generated@@96 ($generated@@37 $generated@@97) true ($generated@@38 $generated@@39 $generated@@98) ($generated@@38 $generated@@25 $generated@@99)))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and ($generated@@57 $generated@@105) ($generated@@80 $generated@@25 $generated@@102 ($generated@@26 $generated@@103 $generated@@104) $generated@@105)) (forall (($generated@@106 T@U) ) (!  (=> (and ($generated@@79 $generated@@106 $generated@@103 $generated@@105) ($generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102 $generated@@106)) ($generated@@79 ($generated@@100 $generated@@103 $generated@@104 $generated@@105 $generated@@102 $generated@@106) $generated@@104 $generated@@105))
 :pattern ( ($generated@@100 $generated@@103 $generated@@104 $generated@@105 $generated@@102 $generated@@106))
)))
 :pattern ( ($generated@@80 $generated@@25 $generated@@102 ($generated@@26 $generated@@103 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> ($generated@@58 $generated@@107 $generated@@108) (= $generated@@107 $generated@@108))
 :pattern ( ($generated@@58 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@109 ($generated@@26 $generated@@110 $generated@@111)) (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and (and ($generated@@57 $generated@@112) ($generated@@27 $generated@@113 $generated@@110)) ($generated@@101 $generated@@110 $generated@@111 $generated@@112 $generated@@109 $generated@@113)) ($generated@@27 ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@109 $generated@@113) $generated@@111))
 :pattern ( ($generated@@100 $generated@@110 $generated@@111 $generated@@112 $generated@@109 $generated@@113))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@109 ($generated@@26 $generated@@110 $generated@@111)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@27 ($generated@@67 $generated@@116 $generated@@114) $generated@@115) ($generated@@24 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@27 ($generated@@67 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (<= 0 ($generated@@22 $generated@@117))
 :pattern ( ($generated@@22 $generated@@117))
)))
(assert  (=> (<= 0 $generated@@35) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 Bool) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and (or ($generated@@40 $generated@@119 $generated@@120 $generated@@123 $generated@@124) (and (< 0 $generated@@35) (and (and ($generated@@24 $generated@@39 $generated@@123 ($generated@@41 $generated@@119)) ($generated@@80 $generated@@39 $generated@@123 ($generated@@41 $generated@@119) $generated@@118)) (and ($generated@@24 $generated@@25 $generated@@124 ($generated@@26 $generated@@119 $generated@@120)) ($generated@@80 $generated@@25 $generated@@124 ($generated@@26 $generated@@119 $generated@@120) $generated@@118))))) ($generated@@57 $generated@@118)) ($generated@@80 $generated@@39 ($generated@@36 $generated@@119 $generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@124) ($generated@@41 $generated@@120) $generated@@118))
 :pattern ( ($generated@@80 $generated@@39 ($generated@@36 $generated@@119 $generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@124) ($generated@@41 $generated@@120) $generated@@118))
))))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@125 $generated@@126) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@27 $generated@@128 $generated@@126) ($generated@@79 $generated@@128 $generated@@126 $generated@@127))
 :pattern ( ($generated@@79 $generated@@128 $generated@@126 $generated@@127))
)))
 :pattern ( ($generated@@125 $generated@@126))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@129 ($generated@@26 $generated@@130 $generated@@131)) $generated@@130)
 :pattern ( ($generated@@26 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@132 ($generated@@26 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@26 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@80 $generated@@39 $generated@@135 ($generated@@41 $generated@@136) $generated@@137) (forall (($generated@@138 Int) ) (!  (=> (and (<= 0 $generated@@138) (< $generated@@138 ($generated@@22 $generated@@135))) ($generated@@79 ($generated@@91 $generated@@135 $generated@@138) $generated@@136 $generated@@137))
 :pattern ( ($generated@@91 $generated@@135 $generated@@138))
)))
 :pattern ( ($generated@@80 $generated@@39 $generated@@135 ($generated@@41 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@41 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@41 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@141 ($generated@@41 $generated@@142)) $generated)
 :pattern ( ($generated@@41 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@66 $generated@@144 ($generated@@67 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@67 $generated@@144 $generated@@143))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@3 $generated@@145) 5) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@147 $generated@@154 $generated@@155 ($generated@@151 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@147 $generated@@159 $generated@@160 ($generated@@151 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@147 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (= ($generated@@3 $generated@@148) 6)) (= ($generated@@3 $generated@@149) 7)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@3 ($generated@@150 $generated@@165 $generated@@166)) 8))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@152 ($generated@@150 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@150 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@153 ($generated@@150 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@150 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@57 $generated@@174) (= ($generated@@80 $generated@@25 $generated@@171 ($generated@@26 $generated@@172 $generated@@173) $generated@@174) (forall (($generated@@175 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@175 $generated@@172) ($generated@@79 $generated@@175 $generated@@172 $generated@@174)) ($generated@@101 $generated@@172 $generated@@173 $generated@@174 $generated@@171 $generated@@175)) (forall (($generated@@176 T@U) ) (!  (=> (and (or (not (= $generated@@176 $generated@@146)) (not true)) ($generated@@19 ($generated@@55 $generated@@172 $generated@@173 $generated@@174 $generated@@171 $generated@@175) ($generated@@67 $generated@@145 $generated@@176))) ($generated@@8 ($generated@@66 $generated@@4 ($generated@@147 $generated@@148 $generated@@149 ($generated@@147 $generated@@145 ($generated@@150 $generated@@148 $generated@@149) $generated@@174 $generated@@176) $generated@@0))))
 :pattern ( ($generated@@19 ($generated@@55 $generated@@172 $generated@@173 $generated@@174 $generated@@171 $generated@@175) ($generated@@67 $generated@@145 $generated@@176)))
)))
 :pattern ( ($generated@@100 $generated@@172 $generated@@173 $generated@@174 $generated@@171 $generated@@175))
 :pattern ( ($generated@@55 $generated@@172 $generated@@173 $generated@@174 $generated@@171 $generated@@175))
))))
 :pattern ( ($generated@@80 $generated@@25 $generated@@171 ($generated@@26 $generated@@172 $generated@@173) $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@27 $generated@@179 ($generated@@26 $generated@@177 $generated@@178)) (and (= ($generated@@67 $generated@@25 ($generated@@66 $generated@@25 $generated@@179)) $generated@@179) ($generated@@24 $generated@@25 ($generated@@66 $generated@@25 $generated@@179) ($generated@@26 $generated@@177 $generated@@178))))
 :pattern ( ($generated@@27 $generated@@179 ($generated@@26 $generated@@177 $generated@@178)))
)))
(assert  (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@180 $generated@@183 $generated@@184 $generated@@185 ($generated@@182 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@188 $generated@@189) $generated@@186)
 :weight 0
)) (and (forall (($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@180 $generated@@190 $generated@@191 $generated@@192 ($generated@@182 $generated@@190 $generated@@191 $generated@@192 $generated@@194 $generated@@195 $generated@@196 $generated@@193) $generated@@197 $generated@@198) ($generated@@180 $generated@@190 $generated@@191 $generated@@192 $generated@@194 $generated@@197 $generated@@198)))
 :weight 0
)) (forall (($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@180 $generated@@199 $generated@@200 $generated@@201 ($generated@@182 $generated@@199 $generated@@200 $generated@@201 $generated@@203 $generated@@204 $generated@@205 $generated@@202) $generated@@206 $generated@@207) ($generated@@180 $generated@@199 $generated@@200 $generated@@201 $generated@@203 $generated@@206 $generated@@207)))
 :weight 0
)))))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 Bool) ($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@8 ($generated@@180 $generated@@145 $generated@@148 $generated@@4 ($generated@@181 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))  (=> (and (or (not (= $generated@@212 $generated@@208)) (not true)) ($generated@@8 ($generated@@66 $generated@@4 ($generated@@147 $generated@@148 $generated@@149 ($generated@@147 $generated@@145 ($generated@@150 $generated@@148 $generated@@149) $generated@@209 $generated@@212) $generated@@210)))) $generated@@211))
 :pattern ( ($generated@@180 $generated@@145 $generated@@148 $generated@@4 ($generated@@181 $generated@@208 $generated@@209 $generated@@210 $generated@@211) $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (and (= ($generated@@141 ($generated@@26 $generated@@215 $generated@@216)) $generated@@1) (= ($generated@@214 ($generated@@26 $generated@@215 $generated@@216)) $generated@@2))
 :pattern ( ($generated@@26 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and ($generated@@57 $generated@@219) (and ($generated@@27 $generated@@221 $generated@@217) ($generated@@24 $generated@@25 $generated@@220 ($generated@@26 $generated@@217 $generated@@218)))) ($generated@@58 ($generated@@55 $generated@@217 $generated@@218 $generated@@56 $generated@@220 $generated@@221) $generated@@20)) (= ($generated@@101 $generated@@217 $generated@@218 $generated@@56 $generated@@220 $generated@@221) ($generated@@101 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@101 $generated@@217 $generated@@218 $generated@@56 $generated@@220 $generated@@221) ($generated@@57 $generated@@219))
 :pattern ( ($generated@@101 $generated@@217 $generated@@218 $generated@@219 $generated@@220 $generated@@221))
)))
(assert  (=> (<= 0 $generated@@35) (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (or ($generated@@40 $generated@@222 $generated@@223 $generated@@225 $generated@@226) (and (< 0 $generated@@35) (and ($generated@@24 $generated@@39 $generated@@225 ($generated@@41 $generated@@222)) ($generated@@24 $generated@@25 $generated@@226 ($generated@@26 $generated@@222 $generated@@223))))) (and (=> (or (not (= ($generated@@22 $generated@@225) ($generated@@42 0))) (not true)) ($generated@@40 $generated@@222 $generated@@223 ($generated@@43 $generated@@225 ($generated@@42 1)) $generated@@226)) (= ($generated@@36 $generated@@222 $generated@@223 ($generated@@37 $generated@@224) true $generated@@225 $generated@@226) (ite (= ($generated@@22 $generated@@225) ($generated@@42 0)) $generated@@23 ($generated@@36 $generated@@222 $generated@@223 $generated@@224 $generated@@44 ($generated@@43 $generated@@225 ($generated@@42 1)) $generated@@226)))))
 :pattern ( ($generated@@36 $generated@@222 $generated@@223 ($generated@@37 $generated@@224) true $generated@@225 $generated@@226))
))))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> ($generated@@27 $generated@@227 ($generated@@41 $generated@@228)) (and (= ($generated@@67 $generated@@39 ($generated@@66 $generated@@39 $generated@@227)) $generated@@227) ($generated@@24 $generated@@39 ($generated@@66 $generated@@39 $generated@@227) ($generated@@41 $generated@@228))))
 :pattern ( ($generated@@27 $generated@@227 ($generated@@41 $generated@@228)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 Int) ($generated@@231 Int) ) (!  (=> (and (and (<= 0 $generated@@230) (<= $generated@@230 $generated@@231)) (< $generated@@231 ($generated@@22 $generated@@229))) (= ($generated@@91 ($generated@@43 $generated@@229 $generated@@230) (- $generated@@231 $generated@@230)) ($generated@@91 $generated@@229 $generated@@231)))
 :weight 25
 :pattern ( ($generated@@91 $generated@@229 $generated@@231) ($generated@@43 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= ($generated@@58 $generated@@232 $generated@@233) (forall (($generated@@234 T@U) ) (! (= ($generated@@19 $generated@@232 $generated@@234) ($generated@@19 $generated@@233 $generated@@234))
 :pattern ( ($generated@@19 $generated@@232 $generated@@234))
 :pattern ( ($generated@@19 $generated@@233 $generated@@234))
)))
 :pattern ( ($generated@@58 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 Int) ($generated@@237 Int) ) (!  (=> (and (and (<= 0 $generated@@236) (<= 0 $generated@@237)) (<= (+ $generated@@236 $generated@@237) ($generated@@22 $generated@@235))) (= ($generated@@43 ($generated@@43 $generated@@235 $generated@@236) $generated@@237) ($generated@@43 $generated@@235 (+ $generated@@236 $generated@@237))))
 :pattern ( ($generated@@43 ($generated@@43 $generated@@235 $generated@@236) $generated@@237))
)))
(assert (forall (($generated@@238 Int) ) (! (= ($generated@@67 $generated@@5 ($generated@@9 ($generated@@42 $generated@@238))) ($generated@@38 $generated@@149 ($generated@@67 $generated@@5 ($generated@@9 $generated@@238))))
 :pattern ( ($generated@@67 $generated@@5 ($generated@@9 ($generated@@42 $generated@@238))))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@T) ) (! (= ($generated@@67 $generated@@240 ($generated@@38 $generated@@240 $generated@@239)) ($generated@@38 $generated@@149 ($generated@@67 $generated@@240 $generated@@239)))
 :pattern ( ($generated@@67 $generated@@240 ($generated@@38 $generated@@240 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ) (!  (=> (= ($generated@@22 $generated@@241) 0) (= $generated@@241 $generated@@23))
 :pattern ( ($generated@@22 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (! (= ($generated@@24 $generated@@39 $generated@@242 ($generated@@41 $generated@@243)) (forall (($generated@@244 Int) ) (!  (=> (and (<= 0 $generated@@244) (< $generated@@244 ($generated@@22 $generated@@242))) ($generated@@27 ($generated@@91 $generated@@242 $generated@@244) $generated@@243))
 :pattern ( ($generated@@91 $generated@@242 $generated@@244))
)))
 :pattern ( ($generated@@24 $generated@@39 $generated@@242 ($generated@@41 $generated@@243)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@253  (=> (or (not (= ($generated@@22 $generated@@245) ($generated@@42 0))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 ($generated@@42 1)) (<= ($generated@@42 1) ($generated@@22 $generated@@245)))) (=> (and (<= 0 ($generated@@42 1)) (<= ($generated@@42 1) ($generated@@22 $generated@@245))) (=> (and (and (= $generated@@246 ($generated@@43 $generated@@245 ($generated@@42 1))) ($generated@@80 $generated@@39 $generated@@246 ($generated@@41 $generated@@247) $generated@@248)) (and ($generated@@80 $generated@@25 $generated@@249 ($generated@@26 $generated@@247 $generated@@250) $generated@@248) (= (ControlFlow 0 4) (- 0 3)))) (< ($generated@@70 $generated@@246) ($generated@@70 $generated@@245))))))))
(let (($generated@@254 true))
(let (($generated@@255 true))
(let (($generated@@256  (=> (= $generated@@251 ($generated@@181 $generated@@146 $generated@@248 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@255) (=> (= (ControlFlow 0 6) 2) $generated@@254)) (=> (= (ControlFlow 0 6) 4) $generated@@253)))))
(let (($generated@@257  (=> (and (and (and ($generated@@57 $generated@@248) ($generated@@252 $generated@@248)) ($generated@@125 $generated@@247)) (and (and ($generated@@24 $generated@@39 $generated@@245 ($generated@@41 $generated@@247)) ($generated@@24 $generated@@25 $generated@@249 ($generated@@26 $generated@@247 $generated@@250))) (and (= 0 $generated@@35) (= (ControlFlow 0 7) 6)))) $generated@@256)))
$generated@@257))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
