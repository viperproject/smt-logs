(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 (T@T) Int)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Bool) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (Int) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (Real) T@U)
(declare-fun $generated@@29 (T@U) Real)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U Int) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () Int)
(declare-fun $generated@@53 (T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U T@U) Bool)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@65 (T@U) Int)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 () T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@122 (Int) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@162 (T@U T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@192 (T@U) Int)
(declare-fun $generated@@218 (T@U) Int)
(declare-fun $generated@@220 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@221 () T@T)
(declare-fun $generated@@222 () T@T)
(declare-fun $generated@@223 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@224 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@225 () T@T)
(declare-fun $generated@@226 (T@T T@T) T@T)
(declare-fun $generated@@227 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@228 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@229 (T@T) T@T)
(declare-fun $generated@@230 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@20 $generated@@21) 0) (= ($generated@@20 $generated@@22) 1)) (= ($generated@@20 $generated@@23) 2)) (forall (($generated@@30 Bool) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 Int) ) (! (= ($generated@@27 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 Real) ) (! (= ($generated@@29 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))) (forall (($generated@@35 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@29 $generated@@35))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19)
)
(assert (= ($generated@@36 $generated) $generated@@1))
(assert (= ($generated@@36 $generated@@0) $generated@@2))
(assert (= ($generated@@20 $generated@@42) 3))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (and (<= 0 $generated@@44) (< $generated@@44 ($generated@@39 $generated@@43))) (< ($generated@@40 ($generated@@41 $generated@@42 ($generated@@37 $generated@@43 $generated@@44))) ($generated@@40 ($generated@@38 $generated@@43))))
 :pattern ( ($generated@@37 $generated@@43 $generated@@44) ($generated@@38 $generated@@43))
)))
(assert (forall (($generated@@47 T@U) ) (!  (not ($generated@@45 $generated@@46 $generated@@47))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47))
)))
(assert (= ($generated@@39 $generated@@48) 0))
(assert (= ($generated@@49 $generated@@50) $generated@@10))
(assert (= ($generated@@49 $generated@@51) $generated@@14))
(assert  (and (= ($generated@@20 $generated@@59) 4) (= ($generated@@20 $generated@@69) 5)))
(assert  (=> (<= 2 $generated@@52) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@56 ($generated@@54 $generated@@42 $generated@@76) $generated@@77 ($generated@@54 $generated@@42 $generated@@78)) (and (< 2 $generated@@52) (and (and (and ($generated@@55 $generated@@75) ($generated@@57 $generated@@42 $generated@@76 $generated@@58)) ($generated@@57 $generated@@59 $generated@@77 ($generated@@60 ($generated@@61 $generated) $generated@@0))) ($generated@@57 $generated@@42 $generated@@78 ($generated@@62 $generated@@0))))) (= ($generated@@53 ($generated@@54 $generated@@42 $generated@@76) $generated@@77 ($generated@@54 $generated@@42 $generated@@78)) (ite ($generated@@63 ($generated@@54 $generated@@42 $generated@@76)) (let (($generated@@79 ($generated@@64 ($generated@@65 ($generated@@54 $generated@@42 $generated@@76)))))
($generated@@54 $generated@@42 ($generated@@66 ($generated@@67 $generated@@22 ($generated@@26 $generated@@79)) ($generated@@54 $generated@@42 $generated@@78)))) (ite ($generated@@68 ($generated@@54 $generated@@42 $generated@@76)) (let (($generated@@80 ($generated@@54 $generated@@69 ($generated@@70 ($generated@@54 $generated@@42 $generated@@76)))))
($generated@@66 ($generated@@71 ($generated@@61 $generated) $generated@@0 $generated@@75 $generated@@77 ($generated@@67 $generated@@69 $generated@@80)) ($generated@@54 $generated@@42 $generated@@78))) (ite  (and ($generated@@72 ($generated@@54 $generated@@42 $generated@@78)) ($generated@@72 ($generated@@54 $generated@@42 ($generated@@73 ($generated@@54 $generated@@42 $generated@@78))))) (let (($generated@@81 ($generated@@73 ($generated@@73 ($generated@@54 $generated@@42 $generated@@78)))))
(let (($generated@@82 ($generated@@27 ($generated@@41 $generated@@22 ($generated@@74 ($generated@@73 ($generated@@54 $generated@@42 $generated@@78)))))))
(let (($generated@@83 ($generated@@27 ($generated@@41 $generated@@22 ($generated@@74 ($generated@@54 $generated@@42 $generated@@78))))))
($generated@@66 ($generated@@67 $generated@@22 ($generated@@26 (+ $generated@@82 $generated@@83))) $generated@@81)))) $generated@@50)))))
 :weight 3
 :pattern ( ($generated@@53 ($generated@@54 $generated@@42 $generated@@76) $generated@@77 ($generated@@54 $generated@@42 $generated@@78)) ($generated@@55 $generated@@75))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and (and ($generated@@57 $generated@@59 $generated@@86 ($generated@@84 $generated@@87 $generated@@88)) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@85 $generated@@91 $generated@@89) ($generated@@85 $generated@@91 $generated@@87))
 :pattern ( ($generated@@85 $generated@@91 $generated@@89))
 :pattern ( ($generated@@85 $generated@@91 $generated@@87))
))) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@85 $generated@@92 $generated@@88) ($generated@@85 $generated@@92 $generated@@90))
 :pattern ( ($generated@@85 $generated@@92 $generated@@88))
 :pattern ( ($generated@@85 $generated@@92 $generated@@90))
))) ($generated@@57 $generated@@59 $generated@@86 ($generated@@84 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@57 $generated@@59 $generated@@86 ($generated@@84 $generated@@87 $generated@@88)) ($generated@@57 $generated@@59 $generated@@86 ($generated@@84 $generated@@89 $generated@@90)))
)))
(assert ($generated@@57 $generated@@42 $generated@@51 $generated@@58))
(assert (forall (($generated@@93 T@U) ) (! ($generated@@57 $generated@@42 $generated@@50 ($generated@@62 $generated@@93))
 :pattern ( ($generated@@57 $generated@@42 $generated@@50 ($generated@@62 $generated@@93)))
)))
(assert (forall (($generated@@94 Int) ) (! (= ($generated@@64 $generated@@94) $generated@@94)
 :pattern ( ($generated@@64 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@54 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@54 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and ($generated@@55 $generated@@102) (and ($generated@@85 $generated@@104 $generated@@100) ($generated@@57 $generated@@59 $generated@@103 ($generated@@84 $generated@@100 $generated@@101)))) (= ($generated@@99 ($generated@@97 $generated@@100 $generated@@101 $generated@@98 $generated@@103 $generated@@104) $generated@@46) ($generated@@99 ($generated@@97 $generated@@100 $generated@@101 $generated@@102 $generated@@103 $generated@@104) $generated@@46)))
 :pattern ( ($generated@@97 $generated@@100 $generated@@101 $generated@@98 $generated@@103 $generated@@104) ($generated@@55 $generated@@102))
 :pattern ( ($generated@@97 $generated@@100 $generated@@101 $generated@@102 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@57 $generated@@42 ($generated@@66 $generated@@106 $generated@@107) ($generated@@62 $generated@@105))  (and ($generated@@85 $generated@@106 $generated@@105) ($generated@@57 $generated@@42 $generated@@107 ($generated@@62 $generated@@105))))
 :pattern ( ($generated@@57 $generated@@42 ($generated@@66 $generated@@106 $generated@@107) ($generated@@62 $generated@@105)))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 $generated@@109) (= ($generated@@49 $generated@@109) $generated@@10))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@72 $generated@@110) (= ($generated@@49 $generated@@110) $generated@@11))
 :pattern ( ($generated@@72 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@63 $generated@@111) (= ($generated@@49 $generated@@111) $generated@@12))
 :pattern ( ($generated@@63 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@68 $generated@@112) (= ($generated@@49 $generated@@112) $generated@@13))
 :pattern ( ($generated@@68 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 $generated@@114) (= ($generated@@49 $generated@@114) $generated@@14))
 :pattern ( ($generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@67 $generated@@116 ($generated@@41 $generated@@116 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@41 $generated@@116 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@72 $generated@@117) (exists (($generated@@118 T@U) ($generated@@119 T@U) ) (= $generated@@117 ($generated@@66 $generated@@118 $generated@@119))))
 :pattern ( ($generated@@72 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@108 $generated@@120) (= $generated@@120 $generated@@50))
 :pattern ( ($generated@@108 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@113 $generated@@121) (= $generated@@121 $generated@@51))
 :pattern ( ($generated@@113 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@63 $generated@@123) (exists (($generated@@124 Int) ) (= $generated@@123 ($generated@@122 $generated@@124))))
 :pattern ( ($generated@@63 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@68 $generated@@125) (exists (($generated@@126 T@U) ) (= $generated@@125 ($generated@@38 $generated@@126))))
 :pattern ( ($generated@@68 $generated@@125))
)))
(assert ($generated@@55 $generated@@98))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@36 ($generated@@62 $generated@@128)) $generated@@8) (= ($generated@@127 ($generated@@62 $generated@@128)) $generated@@18))
 :pattern ( ($generated@@62 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@85 $generated@@129 $generated@@58) (and (= ($generated@@67 $generated@@42 ($generated@@41 $generated@@42 $generated@@129)) $generated@@129) ($generated@@57 $generated@@42 ($generated@@41 $generated@@42 $generated@@129) $generated@@58)))
 :pattern ( ($generated@@85 $generated@@129 $generated@@58))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@57 $generated@@42 $generated@@131 ($generated@@62 $generated@@130)) (or ($generated@@108 $generated@@131) ($generated@@72 $generated@@131)))
 :pattern ( ($generated@@72 $generated@@131) ($generated@@57 $generated@@42 $generated@@131 ($generated@@62 $generated@@130)))
 :pattern ( ($generated@@108 $generated@@131) ($generated@@57 $generated@@42 $generated@@131 ($generated@@62 $generated@@130)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@99 $generated@@132 $generated@@133) (= $generated@@132 $generated@@133))
 :pattern ( ($generated@@99 $generated@@132 $generated@@133))
)))
(assert  (=> (<= 2 $generated@@52) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (or ($generated@@56 $generated@@135 $generated@@136 $generated@@137) (and (< 2 $generated@@52) (and (and (and ($generated@@55 $generated@@134) ($generated@@57 $generated@@42 $generated@@135 $generated@@58)) ($generated@@57 $generated@@59 $generated@@136 ($generated@@60 ($generated@@61 $generated) $generated@@0))) ($generated@@57 $generated@@42 $generated@@137 ($generated@@62 $generated@@0))))) (= ($generated@@53 $generated@@135 $generated@@136 $generated@@137) (ite ($generated@@63 $generated@@135) (let (($generated@@138 ($generated@@65 $generated@@135)))
($generated@@66 ($generated@@67 $generated@@22 ($generated@@26 $generated@@138)) $generated@@137)) (ite ($generated@@68 $generated@@135) (let (($generated@@139 ($generated@@70 $generated@@135)))
($generated@@66 ($generated@@71 ($generated@@61 $generated) $generated@@0 $generated@@134 $generated@@136 ($generated@@67 $generated@@69 $generated@@139)) $generated@@137)) (ite  (and ($generated@@72 $generated@@137) ($generated@@72 ($generated@@73 $generated@@137))) (let (($generated@@140 ($generated@@73 ($generated@@73 $generated@@137))))
(let (($generated@@141 ($generated@@27 ($generated@@41 $generated@@22 ($generated@@74 ($generated@@73 $generated@@137))))))
(let (($generated@@142 ($generated@@27 ($generated@@41 $generated@@22 ($generated@@74 $generated@@137)))))
($generated@@66 ($generated@@67 $generated@@22 ($generated@@26 (+ $generated@@141 $generated@@142))) $generated@@140)))) $generated@@50)))))
 :pattern ( ($generated@@53 $generated@@135 $generated@@136 $generated@@137) ($generated@@55 $generated@@134))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@57 $generated@@59 $generated@@144 ($generated@@84 $generated@@145 $generated@@146)) (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and ($generated@@55 $generated@@147) ($generated@@85 $generated@@148 $generated@@145)) ($generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144 $generated@@148)) ($generated@@85 ($generated@@71 $generated@@145 $generated@@146 $generated@@147 $generated@@144 $generated@@148) $generated@@146))
 :pattern ( ($generated@@71 $generated@@145 $generated@@146 $generated@@147 $generated@@144 $generated@@148))
)))
 :pattern ( ($generated@@57 $generated@@59 $generated@@144 ($generated@@84 $generated@@145 $generated@@146)))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@85 $generated@@149 $generated@@0) (and (= ($generated@@67 $generated@@22 ($generated@@41 $generated@@22 $generated@@149)) $generated@@149) ($generated@@57 $generated@@22 ($generated@@41 $generated@@22 $generated@@149) $generated@@0)))
 :pattern ( ($generated@@85 $generated@@149 $generated@@0))
)))
(assert (= ($generated@@20 $generated@@150) 6))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@85 $generated@@151 $generated) (and (= ($generated@@67 $generated@@150 ($generated@@41 $generated@@150 $generated@@151)) $generated@@151) ($generated@@57 $generated@@150 ($generated@@41 $generated@@150 $generated@@151) $generated)))
 :pattern ( ($generated@@85 $generated@@151 $generated))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@85 ($generated@@67 $generated@@154 $generated@@152) $generated@@153) ($generated@@57 $generated@@154 $generated@@152 $generated@@153))
 :pattern ( ($generated@@85 ($generated@@67 $generated@@154 $generated@@152) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (<= 0 ($generated@@39 $generated@@155))
 :pattern ( ($generated@@39 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@156 ($generated@@84 $generated@@157 $generated@@158)) $generated@@157)
 :pattern ( ($generated@@84 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@159 ($generated@@84 $generated@@160 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@84 $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@163 ($generated@@162 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@162 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@166 ($generated@@162 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@162 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@169 ($generated@@60 $generated@@170 $generated@@171)) $generated@@170)
 :pattern ( ($generated@@60 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@172 ($generated@@60 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@60 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@49 ($generated@@66 $generated@@175 $generated@@176)) $generated@@11)
 :pattern ( ($generated@@66 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@74 ($generated@@66 $generated@@177 $generated@@178)) $generated@@177)
 :pattern ( ($generated@@66 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@73 ($generated@@66 $generated@@179 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@66 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@181 ($generated@@61 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@61 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@36 ($generated@@61 $generated@@183)) $generated@@3)
 :pattern ( ($generated@@61 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@184 ($generated@@62 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@62 $generated@@185))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@49 ($generated@@122 $generated@@186)) $generated@@12)
 :pattern ( ($generated@@122 $generated@@186))
)))
(assert (forall (($generated@@187 Int) ) (! (= ($generated@@65 ($generated@@122 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@122 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@49 ($generated@@38 $generated@@188)) $generated@@13)
 :pattern ( ($generated@@38 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@70 ($generated@@38 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@38 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@T) ) (! (= ($generated@@41 $generated@@191 ($generated@@67 $generated@@191 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@67 $generated@@191 $generated@@190))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (< ($generated@@192 $generated@@193) ($generated@@40 ($generated@@66 $generated@@193 $generated@@194)))
 :pattern ( ($generated@@66 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (< ($generated@@40 $generated@@196) ($generated@@40 ($generated@@66 $generated@@195 $generated@@196)))
 :pattern ( ($generated@@66 $generated@@195 $generated@@196))
)))
(assert  (=> (<= 2 $generated@@52) (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (or ($generated@@56 $generated@@197 $generated@@198 $generated@@199) (and (< 2 $generated@@52) (and (and ($generated@@57 $generated@@42 $generated@@197 $generated@@58) ($generated@@57 $generated@@59 $generated@@198 ($generated@@60 ($generated@@61 $generated) $generated@@0))) ($generated@@57 $generated@@42 $generated@@199 ($generated@@62 $generated@@0))))) ($generated@@57 $generated@@42 ($generated@@53 $generated@@197 $generated@@198 $generated@@199) ($generated@@62 $generated@@0)))
 :pattern ( ($generated@@53 $generated@@197 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@57 $generated@@59 $generated@@202 ($generated@@60 $generated@@200 $generated@@201))  (and ($generated@@57 $generated@@59 $generated@@202 ($generated@@162 $generated@@200 $generated@@201)) (forall (($generated@@203 T@U) )  (=> ($generated@@85 $generated@@203 $generated@@200) ($generated@@143 $generated@@200 $generated@@201 $generated@@98 $generated@@202 $generated@@203)))))
 :pattern ( ($generated@@57 $generated@@59 $generated@@202 ($generated@@60 $generated@@200 $generated@@201)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@57 $generated@@59 $generated@@206 ($generated@@162 $generated@@204 $generated@@205))  (and ($generated@@57 $generated@@59 $generated@@206 ($generated@@84 $generated@@204 $generated@@205)) (forall (($generated@@207 T@U) )  (=> ($generated@@85 $generated@@207 $generated@@204) ($generated@@99 ($generated@@97 $generated@@204 $generated@@205 $generated@@98 $generated@@206 $generated@@207) $generated@@46)))))
 :pattern ( ($generated@@57 $generated@@59 $generated@@206 ($generated@@162 $generated@@204 $generated@@205)))
)))
(assert (forall (($generated@@208 Int) ) (! (= ($generated@@57 $generated@@42 ($generated@@122 $generated@@208) $generated@@58) ($generated@@57 $generated@@22 ($generated@@26 $generated@@208) $generated@@0))
 :pattern ( ($generated@@57 $generated@@42 ($generated@@122 $generated@@208) $generated@@58))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@85 $generated@@211 ($generated@@84 $generated@@209 $generated@@210)) (and (= ($generated@@67 $generated@@59 ($generated@@41 $generated@@59 $generated@@211)) $generated@@211) ($generated@@57 $generated@@59 ($generated@@41 $generated@@59 $generated@@211) ($generated@@84 $generated@@209 $generated@@210))))
 :pattern ( ($generated@@85 $generated@@211 ($generated@@84 $generated@@209 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@85 $generated@@214 ($generated@@162 $generated@@212 $generated@@213)) (and (= ($generated@@67 $generated@@59 ($generated@@41 $generated@@59 $generated@@214)) $generated@@214) ($generated@@57 $generated@@59 ($generated@@41 $generated@@59 $generated@@214) ($generated@@162 $generated@@212 $generated@@213))))
 :pattern ( ($generated@@85 $generated@@214 ($generated@@162 $generated@@212 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@85 $generated@@217 ($generated@@60 $generated@@215 $generated@@216)) (and (= ($generated@@67 $generated@@59 ($generated@@41 $generated@@59 $generated@@217)) $generated@@217) ($generated@@57 $generated@@59 ($generated@@41 $generated@@59 $generated@@217) ($generated@@60 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@85 $generated@@217 ($generated@@60 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@219 T@U) ) (! (< ($generated@@218 $generated@@219) ($generated@@40 ($generated@@38 $generated@@219)))
 :pattern ( ($generated@@38 $generated@@219))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@231 T@T) ($generated@@232 T@T) ($generated@@233 T@T) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (! (= ($generated@@220 $generated@@231 $generated@@232 $generated@@233 ($generated@@227 $generated@@231 $generated@@232 $generated@@233 $generated@@235 $generated@@236 $generated@@237 $generated@@234) $generated@@236 $generated@@237) $generated@@234)
 :weight 0
)) (and (forall (($generated@@238 T@T) ($generated@@239 T@T) ($generated@@240 T@T) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ) (!  (or (= $generated@@243 $generated@@245) (= ($generated@@220 $generated@@238 $generated@@239 $generated@@240 ($generated@@227 $generated@@238 $generated@@239 $generated@@240 $generated@@242 $generated@@243 $generated@@244 $generated@@241) $generated@@245 $generated@@246) ($generated@@220 $generated@@238 $generated@@239 $generated@@240 $generated@@242 $generated@@245 $generated@@246)))
 :weight 0
)) (forall (($generated@@247 T@T) ($generated@@248 T@T) ($generated@@249 T@T) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (or (= $generated@@253 $generated@@255) (= ($generated@@220 $generated@@247 $generated@@248 $generated@@249 ($generated@@227 $generated@@247 $generated@@248 $generated@@249 $generated@@251 $generated@@252 $generated@@253 $generated@@250) $generated@@254 $generated@@255) ($generated@@220 $generated@@247 $generated@@248 $generated@@249 $generated@@251 $generated@@254 $generated@@255)))
 :weight 0
)))) (= ($generated@@20 $generated@@221) 7)) (= ($generated@@20 $generated@@222) 8)) (forall (($generated@@256 T@T) ($generated@@257 T@T) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (! (= ($generated@@224 $generated@@256 $generated@@257 ($generated@@228 $generated@@256 $generated@@257 $generated@@259 $generated@@260 $generated@@258) $generated@@260) $generated@@258)
 :weight 0
))) (forall (($generated@@261 T@T) ($generated@@262 T@T) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (or (= $generated@@265 $generated@@266) (= ($generated@@224 $generated@@261 $generated@@262 ($generated@@228 $generated@@261 $generated@@262 $generated@@264 $generated@@265 $generated@@263) $generated@@266) ($generated@@224 $generated@@261 $generated@@262 $generated@@264 $generated@@266)))
 :weight 0
))) (= ($generated@@20 $generated@@225) 9)) (forall (($generated@@267 T@T) ($generated@@268 T@T) ) (= ($generated@@20 ($generated@@226 $generated@@267 $generated@@268)) 10))) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (! (= ($generated@@229 ($generated@@226 $generated@@269 $generated@@270)) $generated@@269)
 :pattern ( ($generated@@226 $generated@@269 $generated@@270))
))) (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (! (= ($generated@@230 ($generated@@226 $generated@@271 $generated@@272)) $generated@@272)
 :pattern ( ($generated@@226 $generated@@271 $generated@@272))
))))
(assert (forall (($generated@@273 T@U) ($generated@@274 T@U) ($generated@@275 T@U) ($generated@@276 Bool) ($generated@@277 T@U) ($generated@@278 T@U) ) (! (= ($generated@@25 ($generated@@220 $generated@@221 $generated@@222 $generated@@21 ($generated@@223 $generated@@273 $generated@@274 $generated@@275 $generated@@276) $generated@@277 $generated@@278))  (=> (and (or (not (= $generated@@277 $generated@@273)) (not true)) ($generated@@25 ($generated@@41 $generated@@21 ($generated@@224 $generated@@222 $generated@@225 ($generated@@224 $generated@@221 ($generated@@226 $generated@@222 $generated@@225) $generated@@274 $generated@@277) $generated@@275)))) $generated@@276))
 :pattern ( ($generated@@220 $generated@@221 $generated@@222 $generated@@21 ($generated@@223 $generated@@273 $generated@@274 $generated@@275 $generated@@276) $generated@@277 $generated@@278))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 T@U) ) (!  (and (= ($generated@@36 ($generated@@84 $generated@@279 $generated@@280)) $generated@@5) (= ($generated@@127 ($generated@@84 $generated@@279 $generated@@280)) $generated@@15))
 :pattern ( ($generated@@84 $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@281 T@U) ($generated@@282 T@U) ) (!  (and (= ($generated@@36 ($generated@@162 $generated@@281 $generated@@282)) $generated@@6) (= ($generated@@127 ($generated@@162 $generated@@281 $generated@@282)) $generated@@16))
 :pattern ( ($generated@@162 $generated@@281 $generated@@282))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (= ($generated@@36 ($generated@@60 $generated@@283 $generated@@284)) $generated@@7) (= ($generated@@127 ($generated@@60 $generated@@283 $generated@@284)) $generated@@17))
 :pattern ( ($generated@@60 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ) (!  (=> ($generated@@57 $generated@@42 $generated@@285 $generated@@58) (or (or ($generated@@63 $generated@@285) ($generated@@68 $generated@@285)) ($generated@@113 $generated@@285)))
 :pattern ( ($generated@@113 $generated@@285) ($generated@@57 $generated@@42 $generated@@285 $generated@@58))
 :pattern ( ($generated@@68 $generated@@285) ($generated@@57 $generated@@42 $generated@@285 $generated@@58))
 :pattern ( ($generated@@63 $generated@@285) ($generated@@57 $generated@@42 $generated@@285 $generated@@58))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (and (and ($generated@@55 $generated@@288) (and ($generated@@85 $generated@@290 $generated@@286) ($generated@@57 $generated@@59 $generated@@289 ($generated@@84 $generated@@286 $generated@@287)))) ($generated@@99 ($generated@@97 $generated@@286 $generated@@287 $generated@@98 $generated@@289 $generated@@290) $generated@@46)) (= ($generated@@143 $generated@@286 $generated@@287 $generated@@98 $generated@@289 $generated@@290) ($generated@@143 $generated@@286 $generated@@287 $generated@@288 $generated@@289 $generated@@290)))
 :pattern ( ($generated@@143 $generated@@286 $generated@@287 $generated@@98 $generated@@289 $generated@@290) ($generated@@55 $generated@@288))
 :pattern ( ($generated@@143 $generated@@286 $generated@@287 $generated@@288 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ) (! (= ($generated@@192 ($generated@@67 $generated@@42 $generated@@291)) ($generated@@40 $generated@@291))
 :pattern ( ($generated@@192 ($generated@@67 $generated@@42 $generated@@291)))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> ($generated@@85 $generated@@292 ($generated@@61 $generated@@293)) (and (= ($generated@@67 $generated@@69 ($generated@@41 $generated@@69 $generated@@292)) $generated@@292) ($generated@@57 $generated@@69 ($generated@@41 $generated@@69 $generated@@292) ($generated@@61 $generated@@293))))
 :pattern ( ($generated@@85 $generated@@292 ($generated@@61 $generated@@293)))
)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> ($generated@@85 $generated@@295 ($generated@@62 $generated@@294)) (and (= ($generated@@67 $generated@@42 ($generated@@41 $generated@@42 $generated@@295)) $generated@@295) ($generated@@57 $generated@@42 ($generated@@41 $generated@@42 $generated@@295) ($generated@@62 $generated@@294))))
 :pattern ( ($generated@@85 $generated@@295 ($generated@@62 $generated@@294)))
)))
(assert (= ($generated@@36 $generated@@58) $generated@@9))
(assert (= ($generated@@127 $generated@@58) $generated@@19))
(assert (= $generated@@50 ($generated@@54 $generated@@42 $generated@@50)))
(assert (= $generated@@51 ($generated@@54 $generated@@42 $generated@@51)))
(assert (forall (($generated@@296 T@U) ) (! (= ($generated@@57 $generated@@42 ($generated@@38 $generated@@296) $generated@@58) ($generated@@57 $generated@@69 $generated@@296 ($generated@@61 $generated)))
 :pattern ( ($generated@@57 $generated@@42 ($generated@@38 $generated@@296) $generated@@58))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (= ($generated@@99 $generated@@297 $generated@@298) (forall (($generated@@299 T@U) ) (! (= ($generated@@45 $generated@@297 $generated@@299) ($generated@@45 $generated@@298 $generated@@299))
 :pattern ( ($generated@@45 $generated@@297 $generated@@299))
 :pattern ( ($generated@@45 $generated@@298 $generated@@299))
)))
 :pattern ( ($generated@@99 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= ($generated@@66 ($generated@@54 $generated@@225 $generated@@300) ($generated@@54 $generated@@42 $generated@@301)) ($generated@@54 $generated@@42 ($generated@@66 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@66 ($generated@@54 $generated@@225 $generated@@300) ($generated@@54 $generated@@42 $generated@@301)))
)))
(assert (forall (($generated@@302 Int) ) (! (= ($generated@@67 $generated@@22 ($generated@@26 ($generated@@64 $generated@@302))) ($generated@@54 $generated@@225 ($generated@@67 $generated@@22 ($generated@@26 $generated@@302))))
 :pattern ( ($generated@@67 $generated@@22 ($generated@@26 ($generated@@64 $generated@@302))))
)))
(assert (forall (($generated@@303 Int) ) (! (= ($generated@@122 ($generated@@64 $generated@@303)) ($generated@@54 $generated@@42 ($generated@@122 $generated@@303)))
 :pattern ( ($generated@@122 ($generated@@64 $generated@@303)))
)))
(assert (forall (($generated@@304 T@U) ) (! (= ($generated@@38 ($generated@@54 $generated@@69 $generated@@304)) ($generated@@54 $generated@@42 ($generated@@38 $generated@@304)))
 :pattern ( ($generated@@38 ($generated@@54 $generated@@69 $generated@@304)))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@T) ) (! (= ($generated@@67 $generated@@306 ($generated@@54 $generated@@306 $generated@@305)) ($generated@@54 $generated@@225 ($generated@@67 $generated@@306 $generated@@305)))
 :pattern ( ($generated@@67 $generated@@306 ($generated@@54 $generated@@306 $generated@@305)))
)))
(assert (forall (($generated@@307 T@U) ) (!  (=> (= ($generated@@39 $generated@@307) 0) (= $generated@@307 $generated@@48))
 :pattern ( ($generated@@39 $generated@@307))
)))
(assert (forall (($generated@@308 T@U) ($generated@@309 T@U) ) (! (= ($generated@@57 $generated@@69 $generated@@308 ($generated@@61 $generated@@309)) (forall (($generated@@310 Int) ) (!  (=> (and (<= 0 $generated@@310) (< $generated@@310 ($generated@@39 $generated@@308))) ($generated@@85 ($generated@@37 $generated@@308 $generated@@310) $generated@@309))
 :pattern ( ($generated@@37 $generated@@308 $generated@@310))
)))
 :pattern ( ($generated@@57 $generated@@69 $generated@@308 ($generated@@61 $generated@@309)))
)))
(assert  (=> (<= 2 $generated@@52) (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ) (!  (=> (or ($generated@@56 ($generated@@54 $generated@@42 $generated@@312) ($generated@@54 $generated@@59 $generated@@313) ($generated@@54 $generated@@42 $generated@@314)) (and (< 2 $generated@@52) (and (and (and ($generated@@55 $generated@@311) ($generated@@57 $generated@@42 $generated@@312 $generated@@58)) ($generated@@57 $generated@@59 $generated@@313 ($generated@@60 ($generated@@61 $generated) $generated@@0))) ($generated@@57 $generated@@42 $generated@@314 ($generated@@62 $generated@@0))))) (= ($generated@@53 ($generated@@54 $generated@@42 $generated@@312) ($generated@@54 $generated@@59 $generated@@313) ($generated@@54 $generated@@42 $generated@@314)) (ite ($generated@@63 ($generated@@54 $generated@@42 $generated@@312)) (let (($generated@@315 ($generated@@64 ($generated@@65 ($generated@@54 $generated@@42 $generated@@312)))))
($generated@@54 $generated@@42 ($generated@@66 ($generated@@67 $generated@@22 ($generated@@26 $generated@@315)) ($generated@@54 $generated@@42 $generated@@314)))) (ite ($generated@@68 ($generated@@54 $generated@@42 $generated@@312)) (let (($generated@@316 ($generated@@54 $generated@@69 ($generated@@70 ($generated@@54 $generated@@42 $generated@@312)))))
($generated@@66 ($generated@@71 ($generated@@61 $generated) $generated@@0 $generated@@311 ($generated@@54 $generated@@59 $generated@@313) ($generated@@67 $generated@@69 $generated@@316)) ($generated@@54 $generated@@42 $generated@@314))) (ite  (and ($generated@@72 ($generated@@54 $generated@@42 $generated@@314)) ($generated@@72 ($generated@@54 $generated@@42 ($generated@@73 ($generated@@54 $generated@@42 $generated@@314))))) (let (($generated@@317 ($generated@@73 ($generated@@73 ($generated@@54 $generated@@42 $generated@@314)))))
(let (($generated@@318 ($generated@@27 ($generated@@41 $generated@@22 ($generated@@74 ($generated@@73 ($generated@@54 $generated@@42 $generated@@314)))))))
(let (($generated@@319 ($generated@@27 ($generated@@41 $generated@@22 ($generated@@74 ($generated@@54 $generated@@42 $generated@@314))))))
($generated@@66 ($generated@@67 $generated@@22 ($generated@@26 (+ $generated@@318 $generated@@319))) $generated@@317)))) $generated@@50)))))
 :weight 3
 :pattern ( ($generated@@53 ($generated@@54 $generated@@42 $generated@@312) ($generated@@54 $generated@@59 $generated@@313) ($generated@@54 $generated@@42 $generated@@314)) ($generated@@55 $generated@@311))
))))
(assert (forall (($generated@@320 T@U) ($generated@@321 Int) ) (!  (=> (and (<= 0 $generated@@321) (< $generated@@321 ($generated@@39 $generated@@320))) (< ($generated@@40 ($generated@@41 $generated@@42 ($generated@@37 $generated@@320 $generated@@321))) ($generated@@218 $generated@@320)))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@42 ($generated@@37 $generated@@320 $generated@@321))))
)))
(assert (forall (($generated@@322 T@U) ) (! ($generated@@57 $generated@@22 $generated@@322 $generated@@0)
 :pattern ( ($generated@@57 $generated@@22 $generated@@322 $generated@@0))
)))
(assert (forall (($generated@@323 T@U) ) (! ($generated@@57 $generated@@150 $generated@@323 $generated)
 :pattern ( ($generated@@57 $generated@@150 $generated@@323 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@325 () T@U)
(declare-fun $generated@@326 () T@U)
(declare-fun $generated@@327 () T@U)
(declare-fun $generated@@328 () Int)
(declare-fun $generated@@329 () T@U)
(declare-fun $generated@@330 () T@U)
(declare-fun $generated@@331 () T@U)
(declare-fun $generated@@332 (T@U) Bool)
(declare-fun $generated@@333 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@334 true))
(let (($generated@@335  (=> (and (and ($generated@@72 $generated@@324) ($generated@@72 ($generated@@73 $generated@@324))) (and (= $generated@@325 $generated@@324) ($generated@@57 $generated@@42 $generated@@325 ($generated@@62 $generated@@0)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@72 $generated@@325)) (=> ($generated@@72 $generated@@325) (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@72 ($generated@@73 $generated@@325))))))))
(let (($generated@@336  (=> (not ($generated@@72 $generated@@324)) (and (=> (= (ControlFlow 0 11) 6) $generated@@335) (=> (= (ControlFlow 0 11) 8) $generated@@334)))))
(let (($generated@@337  (=> ($generated@@72 $generated@@324) (and (=> (= (ControlFlow 0 9) (- 0 10)) ($generated@@72 $generated@@324)) (=> ($generated@@72 $generated@@324) (and (=> (= (ControlFlow 0 9) 6) $generated@@335) (=> (= (ControlFlow 0 9) 8) $generated@@334)))))))
(let (($generated@@338  (=> (= $generated@@326 $generated@@51) (and (=> (= (ControlFlow 0 12) 9) $generated@@337) (=> (= (ControlFlow 0 12) 11) $generated@@336)))))
(let (($generated@@339 true))
(let (($generated@@340  (=> (or (not (= $generated@@326 ($generated@@38 $generated@@327))) (not true)) (and (=> (= (ControlFlow 0 13) 12) $generated@@338) (=> (= (ControlFlow 0 13) 4) $generated@@339)))))
(let (($generated@@341 true))
(let (($generated@@342  (=> (or (not (= $generated@@326 ($generated@@122 $generated@@328))) (not true)) (and (=> (= (ControlFlow 0 14) 3) $generated@@341) (=> (= (ControlFlow 0 14) 13) $generated@@340)))))
(let (($generated@@343 true))
(let (($generated@@344 true))
(let (($generated@@345  (=> (= $generated@@329 ($generated@@223 $generated@@330 $generated@@331 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 15) 1) $generated@@344) (=> (= (ControlFlow 0 15) 2) $generated@@343)) (=> (= (ControlFlow 0 15) 14) $generated@@342)))))
(let (($generated@@346  (=> (and (and (and ($generated@@55 $generated@@331) ($generated@@332 $generated@@331)) ($generated@@57 $generated@@42 $generated@@326 $generated@@58)) (and (and ($generated@@57 $generated@@59 $generated@@333 ($generated@@60 ($generated@@61 $generated) $generated@@0)) ($generated@@57 $generated@@42 $generated@@324 ($generated@@62 $generated@@0))) (and (= 2 $generated@@52) (= (ControlFlow 0 16) 15)))) $generated@@345)))
$generated@@346))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
