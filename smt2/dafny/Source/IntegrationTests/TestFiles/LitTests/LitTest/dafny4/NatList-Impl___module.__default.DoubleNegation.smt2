(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 () Int)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@103 (T@U) Int)
(declare-fun $generated@@104 (T@U) Int)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@118 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@T T@T) T@T)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T) T@T)
(declare-fun $generated@@124 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@35) (= $generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and ($generated@@36 $generated@@39) ($generated@@36 $generated@@40)) (= ($generated@@33 $generated@@39 $generated@@40)  (and (= ($generated@@37 $generated@@39) ($generated@@37 $generated@@40)) ($generated@@33 ($generated@@38 $generated@@39) ($generated@@38 $generated@@40)))))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@39))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@40))
)))
(assert (forall (($generated@@42 Int) ) (! (= ($generated@@41 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@45 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@46 $generated@@49 $generated@@50) ($generated@@27 $generated@@48))  (and ($generated@@47 $generated@@49 $generated@@48) ($generated@@31 $generated@@26 $generated@@50 ($generated@@27 $generated@@48))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@46 $generated@@49 $generated@@50) ($generated@@27 $generated@@48)))
)))
(assert  (=> (<= 1 $generated@@51) (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (or ($generated@@54 ($generated@@43 $generated@@26 $generated@@59)) (and (< 1 $generated@@51) ($generated@@31 $generated@@26 $generated@@59 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@43 $generated@@7 ($generated@@10 ($generated@@55 ($generated@@43 $generated@@26 $generated@@59)))))) (let (($generated@@60 ($generated@@43 $generated@@26 ($generated@@38 ($generated@@43 $generated@@26 $generated@@59)))))
($generated@@54 $generated@@60))) (= ($generated@@52 ($generated@@53 $generated@@58) ($generated@@43 $generated@@26 $generated@@59)) (ite ($generated@@55 ($generated@@43 $generated@@26 $generated@@59)) $generated@@24 (let (($generated@@61 ($generated@@43 $generated@@26 ($generated@@38 ($generated@@43 $generated@@26 $generated@@59)))))
(let (($generated@@62 ($generated@@41 ($generated@@13 ($generated@@56 $generated@@8 ($generated@@37 ($generated@@43 $generated@@26 $generated@@59)))))))
($generated@@43 $generated@@26 ($generated@@46 ($generated@@57 $generated@@8 ($generated@@12 ($generated@@41 (- 0 $generated@@62)))) ($generated@@43 $generated@@26 ($generated@@52 ($generated@@53 $generated@@58) $generated@@61))))))))))
 :weight 3
 :pattern ( ($generated@@52 ($generated@@53 $generated@@58) ($generated@@43 $generated@@26 $generated@@59)))
))))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@55 $generated@@63) (= ($generated@@23 $generated@@63) $generated@@3))
 :pattern ( ($generated@@55 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@36 $generated@@64) (= ($generated@@23 $generated@@64) $generated@@4))
 :pattern ( ($generated@@36 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@57 $generated@@66 ($generated@@56 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@56 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@36 $generated@@67) (exists (($generated@@68 T@U) ($generated@@69 T@U) ) (= $generated@@67 ($generated@@46 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@36 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@55 $generated@@70) (= $generated@@70 $generated@@24))
 :pattern ( ($generated@@55 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@71 ($generated@@57 $generated@@75 $generated@@72) $generated@@73 $generated@@74) ($generated@@25 $generated@@75 $generated@@72 $generated@@73 $generated@@74))
 :pattern ( ($generated@@71 ($generated@@57 $generated@@75 $generated@@72) $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@77)) $generated@@2) (= ($generated@@76 ($generated@@27 $generated@@77)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@78 $generated@@79) (or ($generated@@55 $generated@@79) ($generated@@36 $generated@@79)))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@81 ($generated@@27 $generated@@80)) (or ($generated@@55 $generated@@81) ($generated@@36 $generated@@81)))
 :pattern ( ($generated@@36 $generated@@81) ($generated@@31 $generated@@26 $generated@@81 ($generated@@27 $generated@@80)))
 :pattern ( ($generated@@55 $generated@@81) ($generated@@31 $generated@@26 $generated@@81 ($generated@@27 $generated@@80)))
)))
(assert  (=> (<= 1 $generated@@51) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@54 $generated@@83) (and (< 1 $generated@@51) ($generated@@31 $generated@@26 $generated@@83 ($generated@@27 $generated)))) (and (=> (not ($generated@@55 $generated@@83)) (let (($generated@@84 ($generated@@38 $generated@@83)))
($generated@@54 $generated@@84))) (= ($generated@@52 ($generated@@53 $generated@@82) $generated@@83) (ite ($generated@@55 $generated@@83) $generated@@24 (let (($generated@@85 ($generated@@38 $generated@@83)))
(let (($generated@@86 ($generated@@13 ($generated@@56 $generated@@8 ($generated@@37 $generated@@83)))))
($generated@@46 ($generated@@57 $generated@@8 ($generated@@12 (- 0 $generated@@86))) ($generated@@52 $generated@@82 $generated@@85))))))))
 :pattern ( ($generated@@52 ($generated@@53 $generated@@82) $generated@@83))
))))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@47 $generated@@87 $generated) (and (= ($generated@@57 $generated@@8 ($generated@@56 $generated@@8 $generated@@87)) $generated@@87) ($generated@@31 $generated@@8 ($generated@@56 $generated@@8 $generated@@87) $generated)))
 :pattern ( ($generated@@47 $generated@@87 $generated))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@47 ($generated@@57 $generated@@90 $generated@@88) $generated@@89) ($generated@@31 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@47 ($generated@@57 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@55 $generated@@91) ($generated@@55 $generated@@92)) ($generated@@33 $generated@@91 $generated@@92))
 :pattern ( ($generated@@33 $generated@@91 $generated@@92) ($generated@@55 $generated@@91))
 :pattern ( ($generated@@33 $generated@@91 $generated@@92) ($generated@@55 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@23 ($generated@@46 $generated@@93 $generated@@94)) $generated@@4)
 :pattern ( ($generated@@46 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@37 ($generated@@46 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@46 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@38 ($generated@@46 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@46 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@99 ($generated@@27 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@27 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@56 $generated@@102 ($generated@@57 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@57 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (< ($generated@@103 $generated@@105) ($generated@@104 ($generated@@46 $generated@@105 $generated@@106)))
 :pattern ( ($generated@@46 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (< ($generated@@104 $generated@@108) ($generated@@104 ($generated@@46 $generated@@107 $generated@@108)))
 :pattern ( ($generated@@46 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@52 ($generated@@53 $generated@@109) $generated@@110) ($generated@@52 $generated@@109 $generated@@110))
 :pattern ( ($generated@@52 ($generated@@53 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and ($generated@@28 $generated@@113) (and ($generated@@36 $generated@@111) ($generated@@25 $generated@@26 $generated@@111 ($generated@@27 $generated@@112) $generated@@113))) ($generated@@71 ($generated@@37 $generated@@111) $generated@@112 $generated@@113))
 :pattern ( ($generated@@71 ($generated@@37 $generated@@111) $generated@@112 $generated@@113))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@114 $generated@@125 $generated@@126 $generated@@127 ($generated@@121 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@114 $generated@@132 $generated@@133 $generated@@134 ($generated@@121 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@114 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@114 $generated@@141 $generated@@142 $generated@@143 ($generated@@121 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))) (= ($generated@@6 $generated@@115) 4)) (= ($generated@@6 $generated@@116) 5)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@118 $generated@@150 $generated@@151 ($generated@@122 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@154) $generated@@152)
 :weight 0
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@159 $generated@@160) (= ($generated@@118 $generated@@155 $generated@@156 ($generated@@122 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@160) ($generated@@118 $generated@@155 $generated@@156 $generated@@158 $generated@@160)))
 :weight 0
))) (= ($generated@@6 $generated@@119) 6)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (= ($generated@@6 ($generated@@120 $generated@@161 $generated@@162)) 7))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@123 ($generated@@120 $generated@@163 $generated@@164)) $generated@@163)
 :pattern ( ($generated@@120 $generated@@163 $generated@@164))
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@124 ($generated@@120 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@120 $generated@@165 $generated@@166))
))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 Bool) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@11 ($generated@@114 $generated@@115 $generated@@116 $generated@@7 ($generated@@117 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))  (=> (and (or (not (= $generated@@171 $generated@@167)) (not true)) ($generated@@11 ($generated@@56 $generated@@7 ($generated@@118 $generated@@116 $generated@@119 ($generated@@118 $generated@@115 ($generated@@120 $generated@@116 $generated@@119) $generated@@168 $generated@@171) $generated@@169)))) $generated@@170))
 :pattern ( ($generated@@114 $generated@@115 $generated@@116 $generated@@7 ($generated@@117 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@103 ($generated@@57 $generated@@26 $generated@@173)) ($generated@@104 $generated@@173))
 :pattern ( ($generated@@103 ($generated@@57 $generated@@26 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@47 $generated@@175 ($generated@@27 $generated@@174)) (and (= ($generated@@57 $generated@@26 ($generated@@56 $generated@@26 $generated@@175)) $generated@@175) ($generated@@31 $generated@@26 ($generated@@56 $generated@@26 $generated@@175) ($generated@@27 $generated@@174))))
 :pattern ( ($generated@@47 $generated@@175 ($generated@@27 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@28 $generated@@178) (and ($generated@@36 $generated@@176) ($generated@@25 $generated@@26 $generated@@176 ($generated@@27 $generated@@177) $generated@@178))) ($generated@@25 $generated@@26 ($generated@@38 $generated@@176) ($generated@@27 $generated@@177) $generated@@178))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@38 $generated@@176) ($generated@@27 $generated@@177) $generated@@178))
)))
(assert (= $generated@@24 ($generated@@43 $generated@@26 $generated@@24)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@46 ($generated@@43 $generated@@119 $generated@@179) ($generated@@43 $generated@@26 $generated@@180)) ($generated@@43 $generated@@26 ($generated@@46 $generated@@179 $generated@@180)))
 :pattern ( ($generated@@46 ($generated@@43 $generated@@119 $generated@@179) ($generated@@43 $generated@@26 $generated@@180)))
)))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@57 $generated@@8 ($generated@@12 ($generated@@41 $generated@@181))) ($generated@@43 $generated@@119 ($generated@@57 $generated@@8 ($generated@@12 $generated@@181))))
 :pattern ( ($generated@@57 $generated@@8 ($generated@@12 ($generated@@41 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@57 $generated@@183 ($generated@@43 $generated@@183 $generated@@182)) ($generated@@43 $generated@@119 ($generated@@57 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@57 $generated@@183 ($generated@@43 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! ($generated@@25 $generated@@8 $generated@@185 $generated $generated@@184)
 :pattern ( ($generated@@25 $generated@@8 $generated@@185 $generated $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@28 $generated@@189) (= ($generated@@25 $generated@@26 ($generated@@46 $generated@@187 $generated@@188) ($generated@@27 $generated@@186) $generated@@189)  (and ($generated@@71 $generated@@187 $generated@@186 $generated@@189) ($generated@@25 $generated@@26 $generated@@188 ($generated@@27 $generated@@186) $generated@@189))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@46 $generated@@187 $generated@@188) ($generated@@27 $generated@@186) $generated@@189))
)))
(assert  (=> (<= 1 $generated@@51) (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (or ($generated@@54 $generated@@191) (and (< 1 $generated@@51) ($generated@@31 $generated@@26 $generated@@191 ($generated@@27 $generated)))) ($generated@@31 $generated@@26 ($generated@@52 $generated@@190 $generated@@191) ($generated@@27 $generated)))
 :pattern ( ($generated@@52 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ) (! ($generated@@31 $generated@@8 $generated@@192 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@192 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@200  (=> (and (= $generated@@193 ($generated@@117 $generated@@194 $generated@@195 $generated@@1 false)) ($generated@@78 $generated@@196)) (=> (and (and (and ($generated@@28 $generated@@197) ($generated@@198 $generated@@197)) (= $generated@@195 $generated@@197)) (and (forall (($generated@@201 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@26 $generated@@201 ($generated@@27 $generated)) ($generated@@11 ($generated@@43 $generated@@7 ($generated@@10 true)))) (< ($generated@@104 $generated@@201) ($generated@@104 $generated@@196))) ($generated@@33 ($generated@@52 ($generated@@53 $generated@@199) ($generated@@52 ($generated@@53 $generated@@199) $generated@@201)) $generated@@201))
 :pattern ( ($generated@@52 ($generated@@53 $generated@@199) ($generated@@52 ($generated@@53 $generated@@199) $generated@@201)))
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@33 ($generated@@52 ($generated@@53 ($generated@@53 $generated@@199)) ($generated@@52 ($generated@@53 ($generated@@53 $generated@@199)) $generated@@196)) $generated@@196)))))
(let (($generated@@202  (=> (and ($generated@@28 $generated@@195) ($generated@@198 $generated@@195)) (=> (and (and (and ($generated@@31 $generated@@26 $generated@@196 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@196 ($generated@@27 $generated) $generated@@195)) ($generated@@78 $generated@@196)) (and (= 2 $generated@@51) (= (ControlFlow 0 3) 2))) $generated@@200))))
$generated@@202)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
