(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@46 (T@U) Int)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@54 (Int) Int)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U Int) T@U)
(declare-fun $generated@@117 (T@U Int Int) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () Bool)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@184 () T@T)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@186 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@187 (T@T T@T) T@T)
(declare-fun $generated@@188 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@189 (T@T) T@T)
(declare-fun $generated@@190 (T@T) T@T)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@237 (T@U) T@U)
(declare-fun $generated@@240 (T@U) T@U)
(declare-fun $generated@@273 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@11 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@30 ($generated@@31 $generated@@32 $generated@@33 $generated@@34)) $generated@@32)
 :pattern ( ($generated@@30 ($generated@@31 $generated@@32 $generated@@33 $generated@@34)))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@35 ($generated@@31 $generated@@36 $generated@@37 $generated@@38)) $generated@@37)
 :pattern ( ($generated@@35 ($generated@@31 $generated@@36 $generated@@37 $generated@@38)))
)))
(assert (= ($generated@@9 $generated@@41) 3))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@40 $generated@@41 $generated@@45 ($generated@@42 $generated@@43 $generated@@44)) ($generated@@39 $generated@@45))
 :pattern ( ($generated@@39 $generated@@45) ($generated@@40 $generated@@41 $generated@@45 ($generated@@42 $generated@@43 $generated@@44)))
)))
(assert (= ($generated@@46 $generated@@47) 0))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@40 $generated@@41 ($generated@@48 $generated@@52 $generated@@53) ($generated@@42 $generated@@50 $generated@@51))  (and ($generated@@49 $generated@@52 $generated@@50) ($generated@@49 $generated@@53 $generated@@51)))
 :pattern ( ($generated@@40 $generated@@41 ($generated@@48 $generated@@52 $generated@@53) ($generated@@42 $generated@@50 $generated@@51)))
)))
(assert (forall (($generated@@55 Int) ) (! (= ($generated@@54 $generated@@55) $generated@@55)
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@58 $generated@@57))
)))
(assert  (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@61 $generated@@65 $generated@@66 ($generated@@64 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@61 $generated@@70 $generated@@71 ($generated@@64 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@61 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@9 $generated@@62) 4)) (= ($generated@@9 $generated@@63) 5)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (forall (($generated@@80 T@U) )  (=> ($generated@@60 $generated@@76 $generated@@80) (and ($generated@@49 $generated@@80 $generated@@78) ($generated@@49 ($generated@@61 $generated@@62 $generated@@62 $generated@@77 $generated@@80) $generated@@79)))) ($generated@@40 $generated@@63 ($generated@@31 $generated@@76 $generated@@77 ($generated@@59 $generated@@78 $generated@@79)) ($generated@@59 $generated@@78 $generated@@79)))
 :pattern ( ($generated@@31 $generated@@76 $generated@@77 ($generated@@59 $generated@@78 $generated@@79)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@81 $generated@@87) (= ($generated@@26 $generated@@41 ($generated@@48 $generated@@85 $generated@@86) ($generated@@42 $generated@@83 $generated@@84) $generated@@87)  (and ($generated@@82 $generated@@85 $generated@@83 $generated@@87) ($generated@@82 $generated@@86 $generated@@84 $generated@@87))))
 :pattern ( ($generated@@26 $generated@@41 ($generated@@48 $generated@@85 $generated@@86) ($generated@@42 $generated@@83 $generated@@84) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@39 $generated@@89) (= ($generated@@88 $generated@@89) $generated@@4))
 :pattern ( ($generated@@39 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@90 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@90 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@60 ($generated@@94 $generated@@95) $generated@@96) ($generated@@14 ($generated@@61 $generated@@62 $generated@@10 $generated@@95 $generated@@96)))
 :pattern ( ($generated@@60 ($generated@@94 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@39 $generated@@97) (exists (($generated@@98 T@U) ($generated@@99 T@U) ) (= $generated@@97 ($generated@@48 $generated@@98 $generated@@99))))
 :pattern ( ($generated@@39 $generated@@97))
)))
(assert (= ($generated@@9 $generated@@100) 6))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@40 $generated@@100 $generated@@102 ($generated@@101 $generated@@103)) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@60 $generated@@102 $generated@@104) ($generated@@49 $generated@@104 $generated@@103))
 :pattern ( ($generated@@60 $generated@@102 $generated@@104))
)))
 :pattern ( ($generated@@40 $generated@@100 $generated@@102 ($generated@@101 $generated@@103)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@46 ($generated@@105 $generated@@106 $generated@@107)) (+ 1 ($generated@@46 $generated@@106)))
 :pattern ( ($generated@@105 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@82 ($generated@@91 $generated@@111 $generated@@108) $generated@@109 $generated@@110) ($generated@@26 $generated@@111 $generated@@108 $generated@@109 $generated@@110))
 :pattern ( ($generated@@82 ($generated@@91 $generated@@111 $generated@@108) $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@49 $generated@@112 $generated@@27) (and (= ($generated@@91 $generated@@11 ($generated@@90 $generated@@11 $generated@@112)) $generated@@112) ($generated@@40 $generated@@11 ($generated@@90 $generated@@11 $generated@@112) $generated@@27)))
 :pattern ( ($generated@@49 $generated@@112 $generated@@27))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 Int) ($generated@@116 T@U) ) (!  (and (=> (= $generated@@115 ($generated@@46 $generated@@114)) (= ($generated@@113 ($generated@@105 $generated@@114 $generated@@116) $generated@@115) $generated@@116)) (=> (or (not (= $generated@@115 ($generated@@46 $generated@@114))) (not true)) (= ($generated@@113 ($generated@@105 $generated@@114 $generated@@116) $generated@@115) ($generated@@113 $generated@@114 $generated@@115))))
 :pattern ( ($generated@@113 ($generated@@105 $generated@@114 $generated@@116) $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 Int) ($generated@@120 Int) ($generated@@121 T@U) ) (! (= ($generated@@14 ($generated@@61 $generated@@62 $generated@@10 ($generated@@117 $generated@@118 $generated@@119 $generated@@120) $generated@@121))  (and ($generated@@49 $generated@@121 $generated@@118) (and (<= $generated@@119 ($generated@@16 ($generated@@90 $generated@@11 $generated@@121))) (< ($generated@@16 ($generated@@90 $generated@@11 $generated@@121)) $generated@@120))))
 :pattern ( ($generated@@61 $generated@@62 $generated@@10 ($generated@@117 $generated@@118 $generated@@119 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@61 $generated@@62 $generated@@62 ($generated@@122 $generated@@123) $generated@@124) $generated@@123)
 :pattern ( ($generated@@61 $generated@@62 $generated@@62 ($generated@@122 $generated@@123) $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@49 $generated@@125 $generated) (and (= ($generated@@91 $generated@@11 ($generated@@90 $generated@@11 $generated@@125)) $generated@@125) ($generated@@40 $generated@@11 ($generated@@90 $generated@@11 $generated@@125) $generated)))
 :pattern ( ($generated@@49 $generated@@125 $generated))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@49 ($generated@@91 $generated@@128 $generated@@126) $generated@@127) ($generated@@40 $generated@@128 $generated@@126 $generated@@127))
 :pattern ( ($generated@@49 ($generated@@91 $generated@@128 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (<= 0 ($generated@@46 $generated@@129))
 :pattern ( ($generated@@46 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@26 $generated@@100 $generated@@130 ($generated@@101 $generated@@131) $generated@@132) (forall (($generated@@133 T@U) ) (!  (=> ($generated@@60 $generated@@130 $generated@@133) ($generated@@82 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@60 $generated@@130 $generated@@133))
)))
 :pattern ( ($generated@@26 $generated@@100 $generated@@130 ($generated@@101 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@134 ($generated@@59 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@59 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@137 ($generated@@59 $generated@@138 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@59 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@25 ($generated@@59 $generated@@140 $generated@@141)) $generated@@2)
 :pattern ( ($generated@@59 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@88 ($generated@@48 $generated@@142 $generated@@143)) $generated@@4)
 :pattern ( ($generated@@48 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@144 ($generated@@42 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@42 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@147 ($generated@@42 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@42 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@150 ($generated@@48 $generated@@151 $generated@@152)) $generated@@151)
 :pattern ( ($generated@@48 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@153 ($generated@@48 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@48 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@156 ($generated@@101 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@101 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@25 ($generated@@101 $generated@@158)) $generated@@1)
 :pattern ( ($generated@@101 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@90 $generated@@160 ($generated@@91 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@91 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@26 $generated@@63 $generated@@161 ($generated@@59 $generated@@162 $generated@@163) $generated@@164) (forall (($generated@@165 T@U) ) (!  (=> ($generated@@60 ($generated@@30 $generated@@161) $generated@@165) (and ($generated@@82 ($generated@@61 $generated@@62 $generated@@62 ($generated@@35 $generated@@161) $generated@@165) $generated@@163 $generated@@164) ($generated@@82 $generated@@165 $generated@@162 $generated@@164)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@62 ($generated@@35 $generated@@161) $generated@@165))
 :pattern ( ($generated@@60 ($generated@@30 $generated@@161) $generated@@165))
)))
 :pattern ( ($generated@@26 $generated@@63 $generated@@161 ($generated@@59 $generated@@162 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (< ($generated@@166 $generated@@168) ($generated@@167 ($generated@@48 $generated@@168 $generated@@169)))
 :pattern ( ($generated@@48 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (< ($generated@@166 $generated@@171) ($generated@@167 ($generated@@48 $generated@@170 $generated@@171)))
 :pattern ( ($generated@@48 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (!  (not ($generated@@60 ($generated@@30 $generated@@172) $generated@@173))
 :pattern ( ($generated@@60 ($generated@@30 $generated@@172) $generated@@173))
)))
(assert  (=> (<= 1 $generated@@174) (=> (or $generated@@175 (< 1 $generated@@174)) (and (<= ($generated@@54 0) $generated@@176) (< $generated@@176 10)))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@49 $generated@@177 ($generated@@59 $generated@@178 $generated@@179)) (and (= ($generated@@91 $generated@@63 ($generated@@90 $generated@@63 $generated@@177)) $generated@@177) ($generated@@40 $generated@@63 ($generated@@90 $generated@@63 $generated@@177) ($generated@@59 $generated@@178 $generated@@179))))
 :pattern ( ($generated@@49 $generated@@177 ($generated@@59 $generated@@178 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@49 $generated@@182 ($generated@@42 $generated@@180 $generated@@181)) (and (= ($generated@@91 $generated@@41 ($generated@@90 $generated@@41 $generated@@182)) $generated@@182) ($generated@@40 $generated@@41 ($generated@@90 $generated@@41 $generated@@182) ($generated@@42 $generated@@180 $generated@@181))))
 :pattern ( ($generated@@49 $generated@@182 ($generated@@42 $generated@@180 $generated@@181)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@183 $generated@@191 $generated@@192 $generated@@193 ($generated@@188 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@196 $generated@@197) $generated@@194)
 :weight 0
)) (and (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@183 $generated@@198 $generated@@199 $generated@@200 ($generated@@188 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@183 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)) (forall (($generated@@207 T@T) ($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@213 $generated@@215) (= ($generated@@183 $generated@@207 $generated@@208 $generated@@209 ($generated@@188 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@183 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)))) (= ($generated@@9 $generated@@184) 7)) (= ($generated@@9 $generated@@185) 8)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (= ($generated@@9 ($generated@@187 $generated@@216 $generated@@217)) 9))) (forall (($generated@@218 T@T) ($generated@@219 T@T) ) (! (= ($generated@@189 ($generated@@187 $generated@@218 $generated@@219)) $generated@@218)
 :pattern ( ($generated@@187 $generated@@218 $generated@@219))
))) (forall (($generated@@220 T@T) ($generated@@221 T@T) ) (! (= ($generated@@190 ($generated@@187 $generated@@220 $generated@@221)) $generated@@221)
 :pattern ( ($generated@@187 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Bool) ($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@14 ($generated@@183 $generated@@184 $generated@@185 $generated@@10 ($generated@@186 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))  (=> (and (or (not (= $generated@@226 $generated@@222)) (not true)) ($generated@@14 ($generated@@90 $generated@@10 ($generated@@61 $generated@@185 $generated@@62 ($generated@@61 $generated@@184 ($generated@@187 $generated@@185 $generated@@62) $generated@@223 $generated@@226) $generated@@224)))) $generated@@225))
 :pattern ( ($generated@@183 $generated@@184 $generated@@185 $generated@@10 ($generated@@186 $generated@@222 $generated@@223 $generated@@224 $generated@@225) $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (= ($generated@@228 ($generated@@105 $generated@@230 $generated@@231)) $generated@@230) (= ($generated@@229 ($generated@@105 $generated@@230 $generated@@231)) $generated@@231))
 :pattern ( ($generated@@105 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (and (= ($generated@@25 ($generated@@42 $generated@@233 $generated@@234)) $generated@@5) (= ($generated@@232 ($generated@@42 $generated@@233 $generated@@234)) $generated@@7))
 :pattern ( ($generated@@42 $generated@@233 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ) (!  (or (= $generated@@235 $generated@@172) (exists (($generated@@236 T@U) ) ($generated@@60 ($generated@@30 $generated@@235) $generated@@236)))
 :pattern ( ($generated@@30 $generated@@235))
)))
(assert (forall (($generated@@238 T@U) ) (!  (or (= $generated@@238 $generated@@172) (exists (($generated@@239 T@U) ) ($generated@@60 ($generated@@237 $generated@@238) $generated@@239)))
 :pattern ( ($generated@@237 $generated@@238))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@60 ($generated@@240 $generated@@241) $generated@@242)  (and ($generated@@60 ($generated@@30 $generated@@241) ($generated@@150 ($generated@@90 $generated@@41 $generated@@242))) (= ($generated@@61 $generated@@62 $generated@@62 ($generated@@35 $generated@@241) ($generated@@150 ($generated@@90 $generated@@41 $generated@@242))) ($generated@@153 ($generated@@90 $generated@@41 $generated@@242)))))
 :pattern ( ($generated@@60 ($generated@@240 $generated@@241) $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (! (= ($generated@@60 ($generated@@237 $generated@@243) $generated@@244) (exists (($generated@@245 T@U) ) (!  (and ($generated@@60 ($generated@@30 $generated@@243) $generated@@245) (= $generated@@244 ($generated@@61 $generated@@62 $generated@@62 ($generated@@35 $generated@@243) $generated@@245)))
 :pattern ( ($generated@@60 ($generated@@30 $generated@@243) $generated@@245))
 :pattern ( ($generated@@61 $generated@@62 $generated@@62 ($generated@@35 $generated@@243) $generated@@245))
)))
 :pattern ( ($generated@@60 ($generated@@237 $generated@@243) $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@166 ($generated@@91 $generated@@41 $generated@@246)) ($generated@@167 $generated@@246))
 :pattern ( ($generated@@166 ($generated@@91 $generated@@41 $generated@@246)))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> ($generated@@49 $generated@@247 ($generated@@101 $generated@@248)) (and (= ($generated@@91 $generated@@100 ($generated@@90 $generated@@100 $generated@@247)) $generated@@247) ($generated@@40 $generated@@100 ($generated@@90 $generated@@100 $generated@@247) ($generated@@101 $generated@@248))))
 :pattern ( ($generated@@49 $generated@@247 ($generated@@101 $generated@@248)))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (! (= ($generated@@40 $generated@@63 $generated@@249 ($generated@@59 $generated@@250 $generated@@251)) (forall (($generated@@252 T@U) ) (!  (=> ($generated@@60 ($generated@@30 $generated@@249) $generated@@252) (and ($generated@@49 ($generated@@61 $generated@@62 $generated@@62 ($generated@@35 $generated@@249) $generated@@252) $generated@@251) ($generated@@49 $generated@@252 $generated@@250)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@62 ($generated@@35 $generated@@249) $generated@@252))
 :pattern ( ($generated@@60 ($generated@@30 $generated@@249) $generated@@252))
)))
 :pattern ( ($generated@@40 $generated@@63 $generated@@249 ($generated@@59 $generated@@250 $generated@@251)))
)))
(assert (= ($generated@@25 $generated@@27) $generated@@6))
(assert (= ($generated@@232 $generated@@27) $generated@@8))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (and ($generated@@81 $generated@@255) (and ($generated@@39 $generated@@253) (exists (($generated@@256 T@U) ) (! ($generated@@26 $generated@@41 $generated@@253 ($generated@@42 $generated@@254 $generated@@256) $generated@@255)
 :pattern ( ($generated@@26 $generated@@41 $generated@@253 ($generated@@42 $generated@@254 $generated@@256) $generated@@255))
)))) ($generated@@82 ($generated@@150 $generated@@253) $generated@@254 $generated@@255))
 :pattern ( ($generated@@82 ($generated@@150 $generated@@253) $generated@@254 $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and ($generated@@81 $generated@@259) (and ($generated@@39 $generated@@257) (exists (($generated@@260 T@U) ) (! ($generated@@26 $generated@@41 $generated@@257 ($generated@@42 $generated@@260 $generated@@258) $generated@@259)
 :pattern ( ($generated@@26 $generated@@41 $generated@@257 ($generated@@42 $generated@@260 $generated@@258) $generated@@259))
)))) ($generated@@82 ($generated@@153 $generated@@257) $generated@@258 $generated@@259))
 :pattern ( ($generated@@82 ($generated@@153 $generated@@257) $generated@@258 $generated@@259))
)))
(assert (forall (($generated@@261 T@U) ) (! (= ($generated@@40 $generated@@11 $generated@@261 $generated@@27)  (and (<= ($generated@@54 0) ($generated@@16 $generated@@261)) (< ($generated@@16 $generated@@261) 10)))
 :pattern ( ($generated@@40 $generated@@11 $generated@@261 $generated@@27))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ) (! (= ($generated@@48 ($generated@@56 $generated@@62 $generated@@262) ($generated@@56 $generated@@62 $generated@@263)) ($generated@@56 $generated@@41 ($generated@@48 $generated@@262 $generated@@263)))
 :pattern ( ($generated@@48 ($generated@@56 $generated@@62 $generated@@262) ($generated@@56 $generated@@62 $generated@@263)))
)))
(assert (forall (($generated@@264 Int) ) (! (= ($generated@@91 $generated@@11 ($generated@@15 ($generated@@54 $generated@@264))) ($generated@@56 $generated@@62 ($generated@@91 $generated@@11 ($generated@@15 $generated@@264))))
 :pattern ( ($generated@@91 $generated@@11 ($generated@@15 ($generated@@54 $generated@@264))))
)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@T) ) (! (= ($generated@@91 $generated@@266 ($generated@@56 $generated@@266 $generated@@265)) ($generated@@56 $generated@@62 ($generated@@91 $generated@@266 $generated@@265)))
 :pattern ( ($generated@@91 $generated@@266 ($generated@@56 $generated@@266 $generated@@265)))
)))
(assert (forall (($generated@@267 T@U) ) (!  (=> (= ($generated@@46 $generated@@267) 0) (= $generated@@267 $generated@@47))
 :pattern ( ($generated@@46 $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! ($generated@@26 $generated@@11 $generated@@269 $generated $generated@@268)
 :pattern ( ($generated@@26 $generated@@11 $generated@@269 $generated $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (!  (or (= $generated@@270 $generated@@172) (exists (($generated@@271 T@U) ($generated@@272 T@U) ) ($generated@@60 ($generated@@240 $generated@@270) ($generated@@91 $generated@@41 ($generated@@48 $generated@@271 $generated@@272)))))
 :pattern ( ($generated@@240 $generated@@270))
)))
(assert (forall (($generated@@274 T@U) ($generated@@275 Int) ) (!  (=> (and (<= 0 $generated@@275) (< $generated@@275 ($generated@@46 $generated@@274))) (< ($generated@@167 ($generated@@90 $generated@@41 ($generated@@113 $generated@@274 $generated@@275))) ($generated@@273 $generated@@274)))
 :pattern ( ($generated@@167 ($generated@@90 $generated@@41 ($generated@@113 $generated@@274 $generated@@275))))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> ($generated@@40 $generated@@63 $generated@@276 ($generated@@59 $generated@@277 $generated@@278)) (and (and ($generated@@40 $generated@@100 ($generated@@30 $generated@@276) ($generated@@101 $generated@@277)) ($generated@@40 $generated@@100 ($generated@@237 $generated@@276) ($generated@@101 $generated@@278))) ($generated@@40 $generated@@100 ($generated@@240 $generated@@276) ($generated@@101 ($generated@@42 $generated@@277 $generated@@278)))))
 :pattern ( ($generated@@40 $generated@@63 $generated@@276 ($generated@@59 $generated@@277 $generated@@278)))
)))
(assert (forall (($generated@@279 T@U) ) (! ($generated@@40 $generated@@11 $generated@@279 $generated)
 :pattern ( ($generated@@40 $generated@@11 $generated@@279 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@280 () Int)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 (T@U) Bool)
(declare-fun $generated@@285 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@286 true))
(let (($generated@@287  (=> (and (not (and (<= ($generated@@54 0) $generated@@280) (< $generated@@280 5))) (= (ControlFlow 0 5) 2)) $generated@@286)))
(let (($generated@@288  (=> (and (and (<= ($generated@@54 0) $generated@@280) (< $generated@@280 5)) $generated@@175) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 ($generated@@54 0)) (< ($generated@@54 0) ($generated@@46 ($generated@@105 $generated@@47 ($generated@@91 $generated@@11 ($generated@@15 $generated@@176))))))) (=> (and (<= 0 ($generated@@54 0)) (< ($generated@@54 0) ($generated@@46 ($generated@@105 $generated@@47 ($generated@@91 $generated@@11 ($generated@@15 $generated@@176)))))) (=> (= (ControlFlow 0 3) 2) $generated@@286))))))
(let (($generated@@289  (=> (< $generated@@280 ($generated@@54 0)) (and (=> (= (ControlFlow 0 7) 3) $generated@@288) (=> (= (ControlFlow 0 7) 5) $generated@@287)))))
(let (($generated@@290  (=> (<= ($generated@@54 0) $generated@@280) (and (=> (= (ControlFlow 0 6) 3) $generated@@288) (=> (= (ControlFlow 0 6) 5) $generated@@287)))))
(let (($generated@@291  (and (=> (= (ControlFlow 0 8) 6) $generated@@290) (=> (= (ControlFlow 0 8) 7) $generated@@289))))
(let (($generated@@292 true))
(let (($generated@@293  (=> (= $generated@@281 ($generated@@186 $generated@@282 $generated@@283 $generated@@3 false)) (and (=> (= (ControlFlow 0 9) 8) $generated@@291) (=> (= (ControlFlow 0 9) 1) $generated@@292)))))
(let (($generated@@294  (=> (and ($generated@@81 $generated@@283) ($generated@@284 $generated@@283)) (=> (and (and ($generated@@40 $generated@@63 $generated@@285 ($generated@@59 $generated $generated@@27)) ($generated@@26 $generated@@63 $generated@@285 ($generated@@59 $generated $generated@@27) $generated@@283)) (and (= 2 $generated@@174) (= (ControlFlow 0 10) 9))) $generated@@293))))
$generated@@294))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
