(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (Int T@U T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@73 (T@U T@U Int) T@U)
(declare-fun $generated@@74 (T@U Int) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) Int)
(declare-fun $generated@@107 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@109 (T@U) Int)
(declare-fun $generated@@110 () T@U)
(declare-fun $generated@@125 (T@U T@U T@U) Bool)
(declare-fun $generated@@126 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Int)
(declare-fun $generated@@189 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@190 () T@T)
(declare-fun $generated@@191 () T@T)
(declare-fun $generated@@192 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@193 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@194 () T@T)
(declare-fun $generated@@195 (T@T T@T) T@T)
(declare-fun $generated@@196 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@198 (T@T) T@T)
(declare-fun $generated@@199 (T@T) T@T)
(declare-fun $generated@@248 (T@U) Bool)
(declare-fun $generated@@255 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@24) 3))
(assert (forall (($generated@@27 Int) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26)  (and (and ($generated@@23 $generated@@9 ($generated@@13 $generated@@27) $generated) ($generated@@23 $generated@@24 $generated@@28 $generated@@26)) ($generated@@23 $generated@@24 $generated@@29 $generated@@26)))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@25 $generated@@27 $generated@@28 $generated@@29) $generated@@26))
)))
(assert (= ($generated@@7 $generated@@33) 4))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@32 $generated@@36) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@36 $generated@@26))) ($generated@@23 $generated@@33 ($generated@@31 $generated@@35 $generated@@36) ($generated@@34 $generated)))
 :pattern ( ($generated@@31 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated) $generated@@0))
(assert (forall (($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@25 $generated@@39 $generated@@40 $generated@@41)) $generated@@5)
 :pattern ( ($generated@@25 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 Int) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@25 $generated@@43 $generated@@44 $generated@@45)) $generated@@43)
 :pattern ( ($generated@@25 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 Int) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@25 $generated@@47 $generated@@48 $generated@@49)) $generated@@48)
 :pattern ( ($generated@@25 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 Int) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@50 ($generated@@25 $generated@@51 $generated@@52 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@25 $generated@@51 $generated@@52 $generated@@53))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@32 ($generated@@55 $generated@@24 $generated@@63)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@63 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 ($generated@@56 ($generated@@55 $generated@@24 $generated@@63)))))) (let (($generated@@64 ($generated@@55 $generated@@24 ($generated@@50 ($generated@@55 $generated@@24 $generated@@63)))))
(let (($generated@@65 ($generated@@55 $generated@@24 ($generated@@46 ($generated@@55 $generated@@24 $generated@@63)))))
 (and ($generated@@32 $generated@@65) ($generated@@32 $generated@@64))))) (= ($generated@@31 ($generated@@54 $generated@@62) ($generated@@55 $generated@@24 $generated@@63)) (ite ($generated@@56 ($generated@@55 $generated@@24 $generated@@63)) $generated@@57 (let (($generated@@66 ($generated@@55 $generated@@24 ($generated@@50 ($generated@@55 $generated@@24 $generated@@63)))))
(let (($generated@@67 ($generated@@55 $generated@@24 ($generated@@46 ($generated@@55 $generated@@24 $generated@@63)))))
(let (($generated@@68 ($generated@@58 ($generated@@42 ($generated@@55 $generated@@24 $generated@@63)))))
($generated@@59 ($generated@@59 ($generated@@60 $generated@@57 ($generated@@61 $generated@@9 ($generated@@13 $generated@@68))) ($generated@@31 ($generated@@54 $generated@@62) $generated@@67)) ($generated@@31 ($generated@@54 $generated@@62) $generated@@66)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@54 $generated@@62) ($generated@@55 $generated@@24 $generated@@63)))
))))
(assert (= ($generated@@38 $generated@@69) $generated@@4))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@23 $generated@@33 $generated@@71 ($generated@@34 $generated@@72)) ($generated@@70 $generated@@71))
 :pattern ( ($generated@@23 $generated@@33 $generated@@71 ($generated@@34 $generated@@72)))
)))
(assert ($generated@@23 $generated@@24 $generated@@69 $generated@@26))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (or ($generated@@74 $generated@@76 $generated@@77) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@76 $generated@@26))) (and (=> (not ($generated@@56 $generated@@76)) (let (($generated@@78 ($generated@@50 $generated@@76)))
(let (($generated@@79 ($generated@@42 $generated@@76)))
 (and (=> (< $generated@@77 $generated@@79) ($generated@@74 $generated@@78 $generated@@79)) (=> (<= $generated@@79 $generated@@77) ($generated@@74 $generated@@78 $generated@@77)))))) (= ($generated@@73 ($generated@@54 $generated@@75) $generated@@76 $generated@@77) (ite ($generated@@56 $generated@@76) ($generated@@25 $generated@@77 ($generated@@55 $generated@@24 $generated@@69) ($generated@@55 $generated@@24 $generated@@69)) (let (($generated@@80 ($generated@@50 $generated@@76)))
(let (($generated@@81 ($generated@@46 $generated@@76)))
(let (($generated@@82 ($generated@@42 $generated@@76)))
(ite (< $generated@@77 $generated@@82) ($generated@@25 $generated@@77 ($generated@@73 $generated@@75 $generated@@80 $generated@@82) $generated@@81) ($generated@@25 $generated@@82 ($generated@@73 $generated@@75 $generated@@80 $generated@@77) $generated@@81)))))))))
 :pattern ( ($generated@@73 ($generated@@54 $generated@@75) $generated@@76 $generated@@77))
))))
(assert (forall (($generated@@83 Int) ) (! (= ($generated@@58 $generated@@83) $generated@@83)
 :pattern ( ($generated@@58 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@55 $generated@@85 $generated@@84) $generated@@84)
 :pattern ( ($generated@@55 $generated@@85 $generated@@84))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@32 $generated@@87) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@87 $generated@@26))) (and (=> (not ($generated@@56 $generated@@87)) (let (($generated@@88 ($generated@@50 $generated@@87)))
(let (($generated@@89 ($generated@@46 $generated@@87)))
 (and ($generated@@32 $generated@@89) ($generated@@32 $generated@@88))))) (= ($generated@@31 ($generated@@54 $generated@@86) $generated@@87) (ite ($generated@@56 $generated@@87) $generated@@57 (let (($generated@@90 ($generated@@50 $generated@@87)))
(let (($generated@@91 ($generated@@46 $generated@@87)))
(let (($generated@@92 ($generated@@42 $generated@@87)))
($generated@@59 ($generated@@59 ($generated@@60 $generated@@57 ($generated@@61 $generated@@9 ($generated@@13 $generated@@92))) ($generated@@31 $generated@@86 $generated@@91)) ($generated@@31 $generated@@86 $generated@@90)))))))))
 :pattern ( ($generated@@31 ($generated@@54 $generated@@86) $generated@@87))
))))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@56 $generated@@93) (= ($generated@@38 $generated@@93) $generated@@4))
 :pattern ( ($generated@@56 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 $generated@@95) (= ($generated@@38 $generated@@95) $generated@@5))
 :pattern ( ($generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@61 $generated@@98 ($generated@@96 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@96 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@94 $generated@@99) (exists (($generated@@100 Int) ($generated@@101 T@U) ($generated@@102 T@U) ) (= $generated@@99 ($generated@@25 $generated@@100 $generated@@101 $generated@@102))))
 :pattern ( ($generated@@94 $generated@@99))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or (not (= $generated@@105 $generated@@106)) (not true)) (= ($generated@@103 $generated@@104 $generated@@106) ($generated@@103 ($generated@@60 $generated@@104 $generated@@105) $generated@@106)))
 :pattern ( ($generated@@60 $generated@@104 $generated@@105) ($generated@@103 $generated@@104 $generated@@106))
)))
(assert  (=> (<= 2 $generated@@30) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or ($generated@@108 ($generated@@55 $generated@@24 $generated@@112)) (and (< 2 $generated@@30) ($generated@@23 $generated@@24 $generated@@112 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 ($generated@@56 ($generated@@55 $generated@@24 $generated@@112)))))) (let (($generated@@113 ($generated@@55 $generated@@24 ($generated@@50 ($generated@@55 $generated@@24 $generated@@112)))))
(let (($generated@@114 ($generated@@55 $generated@@24 ($generated@@46 ($generated@@55 $generated@@24 $generated@@112)))))
 (and ($generated@@108 $generated@@114) (=> ($generated@@107 ($generated@@54 $generated@@111) $generated@@114) (and ($generated@@108 $generated@@113) (=> ($generated@@107 ($generated@@54 $generated@@111) $generated@@113) (and ($generated@@32 $generated@@114) ($generated@@32 $generated@@113))))))))) (= ($generated@@107 ($generated@@54 $generated@@111) ($generated@@55 $generated@@24 $generated@@112)) (ite ($generated@@56 ($generated@@55 $generated@@24 $generated@@112)) true (let (($generated@@115 ($generated@@55 $generated@@24 ($generated@@50 ($generated@@55 $generated@@24 $generated@@112)))))
(let (($generated@@116 ($generated@@55 $generated@@24 ($generated@@46 ($generated@@55 $generated@@24 $generated@@112)))))
 (and (and ($generated@@107 ($generated@@54 $generated@@111) $generated@@116) ($generated@@107 ($generated@@54 $generated@@111) $generated@@115)) (let (($generated@@117 ($generated@@109 ($generated@@55 $generated@@33 ($generated@@31 ($generated@@54 $generated@@110) $generated@@115)))))
(let (($generated@@118 ($generated@@109 ($generated@@55 $generated@@33 ($generated@@31 ($generated@@54 $generated@@110) $generated@@116)))))
 (or (= $generated@@118 $generated@@117) (= $generated@@118 (+ $generated@@117 1))))))))))))
 :weight 3
 :pattern ( ($generated@@107 ($generated@@54 $generated@@111) ($generated@@55 $generated@@24 $generated@@112)))
))))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@56 $generated@@119) (= $generated@@119 $generated@@69))
 :pattern ( ($generated@@56 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@109 ($generated@@60 $generated@@120 $generated@@121)) (+ ($generated@@109 $generated@@120) 1))
 :pattern ( ($generated@@109 ($generated@@60 $generated@@120 $generated@@121)))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 Int) ) (!  (=> (or ($generated@@74 $generated@@123 $generated@@124) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@123 $generated@@26))) ($generated@@23 $generated@@24 ($generated@@73 $generated@@122 $generated@@123 $generated@@124) $generated@@26))
 :pattern ( ($generated@@73 $generated@@122 $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@125 ($generated@@61 $generated@@130 $generated@@127) $generated@@128 $generated@@129) ($generated@@126 $generated@@130 $generated@@127 $generated@@128 $generated@@129))
 :pattern ( ($generated@@125 ($generated@@61 $generated@@130 $generated@@127) $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@109 ($generated@@59 $generated@@131 $generated@@132)) (+ ($generated@@109 $generated@@131) ($generated@@109 $generated@@132)))
 :pattern ( ($generated@@109 ($generated@@59 $generated@@131 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@133 $generated@@134 $generated@@26) (and (= ($generated@@61 $generated@@24 ($generated@@96 $generated@@24 $generated@@134)) $generated@@134) ($generated@@23 $generated@@24 ($generated@@96 $generated@@24 $generated@@134) $generated@@26)))
 :pattern ( ($generated@@133 $generated@@134 $generated@@26))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Int) ) (! (= ($generated@@73 ($generated@@54 $generated@@135) $generated@@136 $generated@@137) ($generated@@73 $generated@@135 $generated@@136 $generated@@137))
 :pattern ( ($generated@@73 ($generated@@54 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@138 $generated@@139) (or ($generated@@56 $generated@@139) ($generated@@94 $generated@@139)))
 :pattern ( ($generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@140 $generated@@141 $generated@@142) (= $generated@@141 $generated@@142))
 :pattern ( ($generated@@140 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@23 $generated@@33 $generated@@143 ($generated@@34 $generated@@144)) (forall (($generated@@145 T@U) ) (!  (=> (< 0 ($generated@@103 $generated@@143 $generated@@145)) ($generated@@133 $generated@@145 $generated@@144))
 :pattern ( ($generated@@103 $generated@@143 $generated@@145))
)))
 :pattern ( ($generated@@23 $generated@@33 $generated@@143 ($generated@@34 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@146 $generated@@26) (or ($generated@@56 $generated@@146) ($generated@@94 $generated@@146)))
 :pattern ( ($generated@@94 $generated@@146) ($generated@@23 $generated@@24 $generated@@146 $generated@@26))
 :pattern ( ($generated@@56 $generated@@146) ($generated@@23 $generated@@24 $generated@@146 $generated@@26))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@133 $generated@@147 $generated) (and (= ($generated@@61 $generated@@9 ($generated@@96 $generated@@9 $generated@@147)) $generated@@147) ($generated@@23 $generated@@9 ($generated@@96 $generated@@9 $generated@@147) $generated)))
 :pattern ( ($generated@@133 $generated@@147 $generated))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@107 ($generated@@54 $generated@@148) $generated@@149) ($generated@@107 $generated@@148 $generated@@149))
 :pattern ( ($generated@@107 ($generated@@54 $generated@@148) $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@133 ($generated@@61 $generated@@152 $generated@@150) $generated@@151) ($generated@@23 $generated@@152 $generated@@150 $generated@@151))
 :pattern ( ($generated@@133 ($generated@@61 $generated@@152 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@70 $generated@@153) (forall (($generated@@154 T@U) ) (!  (and (<= 0 ($generated@@103 $generated@@153 $generated@@154)) (<= ($generated@@103 $generated@@153 $generated@@154) ($generated@@109 $generated@@153)))
 :pattern ( ($generated@@103 $generated@@153 $generated@@154))
)))
 :pattern ( ($generated@@70 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (! (<= 0 ($generated@@109 $generated@@155))
 :pattern ( ($generated@@109 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@103 $generated@@57 $generated@@156) 0)
 :pattern ( ($generated@@103 $generated@@57 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@103 ($generated@@60 $generated@@157 $generated@@158) $generated@@158) (+ ($generated@@103 $generated@@157 $generated@@158) 1))
 :pattern ( ($generated@@60 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@25 ($generated@@58 $generated@@159) ($generated@@55 $generated@@24 $generated@@160) ($generated@@55 $generated@@24 $generated@@161)) ($generated@@55 $generated@@24 ($generated@@25 $generated@@159 $generated@@160 $generated@@161)))
 :pattern ( ($generated@@25 ($generated@@58 $generated@@159) ($generated@@55 $generated@@24 $generated@@160) ($generated@@55 $generated@@24 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@34 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@34 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@37 ($generated@@34 $generated@@164)) $generated@@1)
 :pattern ( ($generated@@34 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@96 $generated@@166 ($generated@@61 $generated@@166 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@61 $generated@@166 $generated@@165))
)))
(assert (forall (($generated@@168 Int) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (< ($generated@@167 $generated@@169) ($generated@@167 ($generated@@25 $generated@@168 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@25 $generated@@168 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 Int) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (< ($generated@@167 $generated@@173) ($generated@@167 ($generated@@25 $generated@@171 $generated@@172 $generated@@173)))
 :pattern ( ($generated@@25 $generated@@171 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@31 ($generated@@54 $generated@@174) $generated@@175) ($generated@@31 $generated@@174 $generated@@175))
 :pattern ( ($generated@@31 ($generated@@54 $generated@@174) $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (!  (and (= (= ($generated@@109 $generated@@176) 0) (= $generated@@176 $generated@@57)) (=> (or (not (= ($generated@@109 $generated@@176) 0)) (not true)) (exists (($generated@@177 T@U) ) (! (< 0 ($generated@@103 $generated@@176 $generated@@177))
 :pattern ( ($generated@@103 $generated@@176 $generated@@177))
))))
 :pattern ( ($generated@@109 $generated@@176))
)))
(assert  (=> (<= 1 $generated@@30) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (or ($generated@@74 ($generated@@55 $generated@@24 $generated@@179) ($generated@@58 $generated@@180)) (and (< 1 $generated@@30) ($generated@@23 $generated@@24 $generated@@179 $generated@@26))) (and (=> (not ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 ($generated@@56 ($generated@@55 $generated@@24 $generated@@179)))))) (let (($generated@@181 ($generated@@55 $generated@@24 ($generated@@50 ($generated@@55 $generated@@24 $generated@@179)))))
(let (($generated@@182 ($generated@@58 ($generated@@42 ($generated@@55 $generated@@24 $generated@@179)))))
 (and (=> (< $generated@@180 $generated@@182) ($generated@@74 $generated@@181 $generated@@182)) (=> (<= $generated@@182 $generated@@180) ($generated@@74 $generated@@181 ($generated@@58 $generated@@180))))))) (= ($generated@@73 ($generated@@54 $generated@@178) ($generated@@55 $generated@@24 $generated@@179) ($generated@@58 $generated@@180)) (ite ($generated@@56 ($generated@@55 $generated@@24 $generated@@179)) ($generated@@25 ($generated@@58 $generated@@180) ($generated@@55 $generated@@24 $generated@@69) ($generated@@55 $generated@@24 $generated@@69)) (let (($generated@@183 ($generated@@55 $generated@@24 ($generated@@50 ($generated@@55 $generated@@24 $generated@@179)))))
(let (($generated@@184 ($generated@@55 $generated@@24 ($generated@@46 ($generated@@55 $generated@@24 $generated@@179)))))
(let (($generated@@185 ($generated@@58 ($generated@@42 ($generated@@55 $generated@@24 $generated@@179)))))
(ite (< $generated@@180 $generated@@185) ($generated@@25 ($generated@@58 $generated@@180) ($generated@@55 $generated@@24 ($generated@@73 ($generated@@54 $generated@@178) $generated@@183 $generated@@185)) $generated@@184) ($generated@@25 $generated@@185 ($generated@@55 $generated@@24 ($generated@@73 ($generated@@54 $generated@@178) $generated@@183 ($generated@@58 $generated@@180))) $generated@@184)))))))))
 :weight 3
 :pattern ( ($generated@@73 ($generated@@54 $generated@@178) ($generated@@55 $generated@@24 $generated@@179) ($generated@@58 $generated@@180)))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@103 ($generated@@59 $generated@@186 $generated@@187) $generated@@188) (+ ($generated@@103 $generated@@186 $generated@@188) ($generated@@103 $generated@@187 $generated@@188)))
 :pattern ( ($generated@@103 ($generated@@59 $generated@@186 $generated@@187) $generated@@188))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@189 $generated@@200 $generated@@201 $generated@@202 ($generated@@196 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@205 $generated@@206) $generated@@203)
 :weight 0
)) (and (forall (($generated@@207 T@T) ($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (or (= $generated@@212 $generated@@214) (= ($generated@@189 $generated@@207 $generated@@208 $generated@@209 ($generated@@196 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@212 $generated@@213 $generated@@210) $generated@@214 $generated@@215) ($generated@@189 $generated@@207 $generated@@208 $generated@@209 $generated@@211 $generated@@214 $generated@@215)))
 :weight 0
)) (forall (($generated@@216 T@T) ($generated@@217 T@T) ($generated@@218 T@T) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (or (= $generated@@222 $generated@@224) (= ($generated@@189 $generated@@216 $generated@@217 $generated@@218 ($generated@@196 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@221 $generated@@222 $generated@@219) $generated@@223 $generated@@224) ($generated@@189 $generated@@216 $generated@@217 $generated@@218 $generated@@220 $generated@@223 $generated@@224)))
 :weight 0
)))) (= ($generated@@7 $generated@@190) 5)) (= ($generated@@7 $generated@@191) 6)) (forall (($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (! (= ($generated@@193 $generated@@225 $generated@@226 ($generated@@197 $generated@@225 $generated@@226 $generated@@228 $generated@@229 $generated@@227) $generated@@229) $generated@@227)
 :weight 0
))) (forall (($generated@@230 T@T) ($generated@@231 T@T) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ) (!  (or (= $generated@@234 $generated@@235) (= ($generated@@193 $generated@@230 $generated@@231 ($generated@@197 $generated@@230 $generated@@231 $generated@@233 $generated@@234 $generated@@232) $generated@@235) ($generated@@193 $generated@@230 $generated@@231 $generated@@233 $generated@@235)))
 :weight 0
))) (= ($generated@@7 $generated@@194) 7)) (forall (($generated@@236 T@T) ($generated@@237 T@T) ) (= ($generated@@7 ($generated@@195 $generated@@236 $generated@@237)) 8))) (forall (($generated@@238 T@T) ($generated@@239 T@T) ) (! (= ($generated@@198 ($generated@@195 $generated@@238 $generated@@239)) $generated@@238)
 :pattern ( ($generated@@195 $generated@@238 $generated@@239))
))) (forall (($generated@@240 T@T) ($generated@@241 T@T) ) (! (= ($generated@@199 ($generated@@195 $generated@@240 $generated@@241)) $generated@@241)
 :pattern ( ($generated@@195 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 Bool) ($generated@@246 T@U) ($generated@@247 T@U) ) (! (= ($generated@@12 ($generated@@189 $generated@@190 $generated@@191 $generated@@8 ($generated@@192 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))  (=> (and (or (not (= $generated@@246 $generated@@242)) (not true)) ($generated@@12 ($generated@@96 $generated@@8 ($generated@@193 $generated@@191 $generated@@194 ($generated@@193 $generated@@190 ($generated@@195 $generated@@191 $generated@@194) $generated@@243 $generated@@246) $generated@@244)))) $generated@@245))
 :pattern ( ($generated@@189 $generated@@190 $generated@@191 $generated@@8 ($generated@@192 $generated@@242 $generated@@243 $generated@@244 $generated@@245) $generated@@246 $generated@@247))
)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (and ($generated@@248 $generated@@250) (and ($generated@@94 $generated@@249) ($generated@@126 $generated@@24 $generated@@249 $generated@@26 $generated@@250))) ($generated@@126 $generated@@9 ($generated@@13 ($generated@@42 $generated@@249)) $generated $generated@@250))
 :pattern ( ($generated@@126 $generated@@9 ($generated@@13 ($generated@@42 $generated@@249)) $generated $generated@@250))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> ($generated@@133 $generated@@251 ($generated@@34 $generated@@252)) (and (= ($generated@@61 $generated@@33 ($generated@@96 $generated@@33 $generated@@251)) $generated@@251) ($generated@@23 $generated@@33 ($generated@@96 $generated@@33 $generated@@251) ($generated@@34 $generated@@252))))
 :pattern ( ($generated@@133 $generated@@251 ($generated@@34 $generated@@252)))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and ($generated@@248 $generated@@254) ($generated@@23 $generated@@24 $generated@@253 $generated@@26)) ($generated@@126 $generated@@24 $generated@@253 $generated@@26 $generated@@254))
 :pattern ( ($generated@@126 $generated@@24 $generated@@253 $generated@@26 $generated@@254))
)))
(assert (= ($generated@@37 $generated@@26) $generated@@3))
(assert (= ($generated@@255 $generated@@26) $generated@@6))
(assert (= $generated@@69 ($generated@@55 $generated@@24 $generated@@69)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (and ($generated@@248 $generated@@257) (and ($generated@@94 $generated@@256) ($generated@@126 $generated@@24 $generated@@256 $generated@@26 $generated@@257))) ($generated@@126 $generated@@24 ($generated@@46 $generated@@256) $generated@@26 $generated@@257))
 :pattern ( ($generated@@126 $generated@@24 ($generated@@46 $generated@@256) $generated@@26 $generated@@257))
)))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (!  (=> (and ($generated@@248 $generated@@259) (and ($generated@@94 $generated@@258) ($generated@@126 $generated@@24 $generated@@258 $generated@@26 $generated@@259))) ($generated@@126 $generated@@24 ($generated@@50 $generated@@258) $generated@@26 $generated@@259))
 :pattern ( ($generated@@126 $generated@@24 ($generated@@50 $generated@@258) $generated@@26 $generated@@259))
)))
(assert (forall (($generated@@260 Int) ) (! (= ($generated@@61 $generated@@9 ($generated@@13 ($generated@@58 $generated@@260))) ($generated@@55 $generated@@194 ($generated@@61 $generated@@9 ($generated@@13 $generated@@260))))
 :pattern ( ($generated@@61 $generated@@9 ($generated@@13 ($generated@@58 $generated@@260))))
)))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@T) ) (! (= ($generated@@61 $generated@@262 ($generated@@55 $generated@@262 $generated@@261)) ($generated@@55 $generated@@194 ($generated@@61 $generated@@262 $generated@@261)))
 :pattern ( ($generated@@61 $generated@@262 ($generated@@55 $generated@@262 $generated@@261)))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> (< 0 ($generated@@103 $generated@@263 $generated@@265)) (< 0 ($generated@@103 ($generated@@60 $generated@@263 $generated@@264) $generated@@265)))
 :pattern ( ($generated@@60 $generated@@263 $generated@@264) ($generated@@103 $generated@@263 $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (! (= (< 0 ($generated@@103 ($generated@@60 $generated@@266 $generated@@267) $generated@@268))  (or (= $generated@@268 $generated@@267) (< 0 ($generated@@103 $generated@@266 $generated@@268))))
 :pattern ( ($generated@@103 ($generated@@60 $generated@@266 $generated@@267) $generated@@268))
)))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ) (! (= ($generated@@140 $generated@@269 $generated@@270) (forall (($generated@@271 T@U) ) (! (= ($generated@@103 $generated@@269 $generated@@271) ($generated@@103 $generated@@270 $generated@@271))
 :pattern ( ($generated@@103 $generated@@269 $generated@@271))
 :pattern ( ($generated@@103 $generated@@270 $generated@@271))
)))
 :pattern ( ($generated@@140 $generated@@269 $generated@@270))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@U) ($generated@@274 T@U) ) (! (= ($generated@@126 $generated@@33 $generated@@272 ($generated@@34 $generated@@273) $generated@@274) (forall (($generated@@275 T@U) ) (!  (=> (< 0 ($generated@@103 $generated@@272 $generated@@275)) ($generated@@125 $generated@@275 $generated@@273 $generated@@274))
 :pattern ( ($generated@@103 $generated@@272 $generated@@275))
)))
 :pattern ( ($generated@@126 $generated@@33 $generated@@272 ($generated@@34 $generated@@273) $generated@@274))
)))
(assert (forall (($generated@@276 T@U) ($generated@@277 T@U) ) (! ($generated@@126 $generated@@9 $generated@@277 $generated $generated@@276)
 :pattern ( ($generated@@126 $generated@@9 $generated@@277 $generated $generated@@276))
)))
(assert  (=> (<= 2 $generated@@30) (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (or ($generated@@108 $generated@@279) (and (< 2 $generated@@30) ($generated@@23 $generated@@24 $generated@@279 $generated@@26))) (and (=> (not ($generated@@56 $generated@@279)) (let (($generated@@280 ($generated@@50 $generated@@279)))
(let (($generated@@281 ($generated@@46 $generated@@279)))
 (and ($generated@@108 $generated@@281) (=> ($generated@@107 $generated@@278 $generated@@281) (and ($generated@@108 $generated@@280) (=> ($generated@@107 $generated@@278 $generated@@280) (and ($generated@@32 $generated@@281) ($generated@@32 $generated@@280))))))))) (= ($generated@@107 ($generated@@54 $generated@@278) $generated@@279) (ite ($generated@@56 $generated@@279) true (let (($generated@@282 ($generated@@50 $generated@@279)))
(let (($generated@@283 ($generated@@46 $generated@@279)))
 (and (and ($generated@@107 $generated@@278 $generated@@283) ($generated@@107 $generated@@278 $generated@@282)) (let (($generated@@284 ($generated@@109 ($generated@@31 ($generated@@54 $generated@@110) $generated@@282))))
(let (($generated@@285 ($generated@@109 ($generated@@31 ($generated@@54 $generated@@110) $generated@@283))))
 (or (= $generated@@285 $generated@@284) (= $generated@@285 (+ $generated@@284 1))))))))))))
 :pattern ( ($generated@@107 ($generated@@54 $generated@@278) $generated@@279))
))))
(assert (forall (($generated@@286 T@U) ) (! ($generated@@23 $generated@@9 $generated@@286 $generated)
 :pattern ( ($generated@@23 $generated@@9 $generated@@286 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () T@U)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 (T@U) Bool)
(declare-fun $generated@@293 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@294  (=> (and (= $generated@@287 ($generated@@192 $generated@@288 $generated@@289 $generated@@2 false)) ($generated@@138 $generated@@290)) (=> (and (and ($generated@@248 $generated@@291) ($generated@@292 $generated@@291)) (and (= $generated@@289 $generated@@291) (forall (($generated@@295 T@U) ($generated@@296 Int) ) (!  (=> (and (and ($generated@@23 $generated@@24 $generated@@295 $generated@@26) ($generated@@107 ($generated@@54 $generated@@110) $generated@@295)) (or (< ($generated@@167 $generated@@295) ($generated@@167 $generated@@290)) (and (= ($generated@@167 $generated@@295) ($generated@@167 $generated@@290)) (and (<= 0 $generated@@296) (< $generated@@296 $generated@@293))))) (let (($generated@@297 ($generated@@73 ($generated@@54 $generated@@110) $generated@@295 $generated@@296)))
 (and ($generated@@140 ($generated@@31 ($generated@@54 $generated@@110) $generated@@297) ($generated@@59 ($generated@@31 ($generated@@54 $generated@@110) $generated@@295) ($generated@@60 $generated@@57 ($generated@@61 $generated@@9 ($generated@@13 $generated@@296))))) ($generated@@107 ($generated@@54 $generated@@110) $generated@@297))))
 :pattern ( ($generated@@59 ($generated@@31 ($generated@@54 $generated@@110) $generated@@295) ($generated@@60 $generated@@57 ($generated@@61 $generated@@9 ($generated@@13 $generated@@296)))))
 :pattern ( ($generated@@73 ($generated@@54 $generated@@110) $generated@@295 $generated@@296))
)))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (let (($generated@@298 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
($generated@@140 ($generated@@31 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@298) ($generated@@59 ($generated@@31 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290) ($generated@@60 $generated@@57 ($generated@@61 $generated@@9 ($generated@@13 $generated@@293))))))) (=> (let (($generated@@299 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
($generated@@140 ($generated@@31 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@299) ($generated@@59 ($generated@@31 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290) ($generated@@60 $generated@@57 ($generated@@61 $generated@@9 ($generated@@13 $generated@@293)))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (let (($generated@@300 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
 (=> ($generated@@108 $generated@@300) (or ($generated@@107 ($generated@@54 $generated@@110) $generated@@300) (=> ($generated@@56 $generated@@300) ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 true)))))))) (=> (let (($generated@@301 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
 (=> ($generated@@108 $generated@@301) (or ($generated@@107 ($generated@@54 $generated@@110) $generated@@301) (=> ($generated@@56 $generated@@301) ($generated@@12 ($generated@@55 $generated@@8 ($generated@@11 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (let (($generated@@302 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
 (=> ($generated@@108 $generated@@302) (or ($generated@@107 ($generated@@54 $generated@@110) $generated@@302) (=> (not ($generated@@56 $generated@@302)) (let (($generated@@303 ($generated@@46 $generated@@302)))
($generated@@107 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@303))))))) (=> (let (($generated@@304 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
 (=> ($generated@@108 $generated@@304) (or ($generated@@107 ($generated@@54 $generated@@110) $generated@@304) (=> (not ($generated@@56 $generated@@304)) (let (($generated@@305 ($generated@@46 $generated@@304)))
($generated@@107 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@305)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@306 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
 (=> ($generated@@108 $generated@@306) (or ($generated@@107 ($generated@@54 $generated@@110) $generated@@306) (=> (not ($generated@@56 $generated@@306)) (let (($generated@@307 ($generated@@50 $generated@@306)))
($generated@@107 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@307))))))) (=> (let (($generated@@308 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
 (=> ($generated@@108 $generated@@308) (or ($generated@@107 ($generated@@54 $generated@@110) $generated@@308) (=> (not ($generated@@56 $generated@@308)) (let (($generated@@309 ($generated@@50 $generated@@308)))
($generated@@107 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@309)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@310 ($generated@@73 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@290 $generated@@293)))
 (=> ($generated@@108 $generated@@310) (or ($generated@@107 ($generated@@54 $generated@@110) $generated@@310) (=> (not ($generated@@56 $generated@@310)) (let (($generated@@311 ($generated@@50 $generated@@310)))
(let (($generated@@312 ($generated@@46 $generated@@310)))
(let (($generated@@313 ($generated@@109 ($generated@@31 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@311))))
(let (($generated@@314 ($generated@@109 ($generated@@31 ($generated@@54 ($generated@@54 $generated@@110)) $generated@@312))))
 (or (= $generated@@314 $generated@@313) (= $generated@@314 (+ $generated@@313 1))))))))))))))))))))))))
(let (($generated@@315  (=> (and ($generated@@248 $generated@@289) ($generated@@292 $generated@@289)) (=> (and (and (and (and ($generated@@23 $generated@@24 $generated@@290 $generated@@26) ($generated@@126 $generated@@24 $generated@@290 $generated@@26 $generated@@289)) ($generated@@138 $generated@@290)) (= 3 $generated@@30)) (and (and ($generated@@108 $generated@@290) (and ($generated@@107 ($generated@@54 $generated@@110) $generated@@290) (ite ($generated@@56 $generated@@290) true (let (($generated@@316 ($generated@@50 $generated@@290)))
(let (($generated@@317 ($generated@@46 $generated@@290)))
 (and (and ($generated@@107 ($generated@@54 $generated@@110) $generated@@317) ($generated@@107 ($generated@@54 $generated@@110) $generated@@316)) (let (($generated@@318 ($generated@@109 ($generated@@31 ($generated@@54 $generated@@110) $generated@@316))))
(let (($generated@@319 ($generated@@109 ($generated@@31 ($generated@@54 $generated@@110) $generated@@317))))
 (or (= $generated@@319 $generated@@318) (= $generated@@319 (+ $generated@@318 1))))))))))) (= (ControlFlow 0 7) 2))) $generated@@294))))
$generated@@315)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
