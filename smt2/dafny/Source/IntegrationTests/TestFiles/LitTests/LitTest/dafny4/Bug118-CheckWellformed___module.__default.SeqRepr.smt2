(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@T T@T) T@T)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@69 (T@U) Int)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 () Int)
(declare-fun $generated@@72 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 () T@U)
(declare-fun $generated@@87 () T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@90 () T@U)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U Int) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@27 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@27 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@27 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@11 $generated@@28) 3)) (= ($generated@@11 $generated@@32) 4)) (= ($generated@@11 $generated@@33) 5)) (= ($generated@@11 $generated@@34) 6)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@11 ($generated@@35 $generated@@53 $generated@@54)) 7))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@35 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@35 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@35 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@35 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@16 ($generated@@27 $generated@@28 $generated@@12 ($generated@@29 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65) $generated@@66)) (exists (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (and (and (and ($generated@@37 $generated@@34 $generated@@67 $generated@@59) ($generated@@37 $generated@@34 $generated@@68 $generated@@60)) (and ($generated@@38 $generated@@61 ($generated@@36 $generated@@34 $generated@@67)) ($generated@@30 ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@62 $generated@@67) $generated@@63)) ($generated@@36 $generated@@34 $generated@@68)))) (= $generated@@66 ($generated@@36 $generated@@34 $generated@@68)))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@64 $generated@@67) $generated@@65)) ($generated@@36 $generated@@34 $generated@@68)))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@12 ($generated@@29 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63 $generated@@64 $generated@@65) $generated@@66))
)))
(assert (= ($generated@@69 $generated@@1) 0))
(assert (= ($generated@@70 $generated@@1) $generated@@2))
(assert (= ($generated@@11 $generated@@78) 8))
(assert  (=> (<= 1 $generated@@71) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@76 $generated@@81 $generated@@82) (and (< 1 $generated@@71) (and ($generated@@77 $generated@@81) (and ($generated@@37 $generated@@78 $generated@@82 ($generated@@79 $generated@@80)) ($generated@@72 $generated@@78 $generated@@82 ($generated@@79 $generated@@80) $generated@@81))))) ($generated@@72 $generated@@32 ($generated@@73 $generated@@81 $generated@@82) ($generated@@74 $generated@@75) $generated@@81))
 :pattern ( ($generated@@72 $generated@@32 ($generated@@73 $generated@@81 $generated@@82) ($generated@@74 $generated@@75) $generated@@81))
))))
(assert (forall (($generated@@84 T@U) ) (!  (not ($generated@@38 $generated@@83 $generated@@84))
 :pattern ( ($generated@@38 $generated@@83 $generated@@84))
)))
(assert (= ($generated@@85 $generated@@83) 0))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@37 $generated@@34 $generated@@89 $generated@@86)  (or (= $generated@@89 $generated@@87) (= ($generated@@88 $generated@@89) $generated@@86)))
 :pattern ( ($generated@@37 $generated@@34 $generated@@89 $generated@@86))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@72 $generated@@34 $generated@@91 $generated@@75 $generated@@92) ($generated@@72 $generated@@34 $generated@@91 $generated@@90 $generated@@92))
 :pattern ( ($generated@@72 $generated@@34 $generated@@91 $generated@@75 $generated@@92))
 :pattern ( ($generated@@72 $generated@@34 $generated@@91 $generated@@90 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@72 $generated@@34 $generated@@93 $generated@@80 $generated@@94) ($generated@@72 $generated@@34 $generated@@93 $generated@@86 $generated@@94))
 :pattern ( ($generated@@72 $generated@@34 $generated@@93 $generated@@80 $generated@@94))
 :pattern ( ($generated@@72 $generated@@34 $generated@@93 $generated@@86 $generated@@94))
)))
(assert (= ($generated@@69 $generated@@95) 0))
(assert (= ($generated@@96 $generated@@6 $generated@@10) $generated@@95))
(assert ($generated@@97 $generated@@95))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@72 $generated@@34 $generated@@98 $generated@@90 $generated@@99)  (or (= $generated@@98 $generated@@87) ($generated@@16 ($generated@@31 $generated@@12 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@99 $generated@@98) $generated@@1)))))
 :pattern ( ($generated@@72 $generated@@34 $generated@@98 $generated@@90 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@72 $generated@@34 $generated@@100 $generated@@86 $generated@@101)  (or (= $generated@@100 $generated@@87) ($generated@@16 ($generated@@31 $generated@@12 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@101 $generated@@100) $generated@@1)))))
 :pattern ( ($generated@@72 $generated@@34 $generated@@100 $generated@@86 $generated@@101))
)))
(assert  (=> (<= 1 $generated@@71) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or ($generated@@76 $generated@@102 $generated@@103) (and (< 1 $generated@@71) (and ($generated@@77 $generated@@102) (and ($generated@@37 $generated@@78 $generated@@103 ($generated@@79 $generated@@80)) ($generated@@72 $generated@@78 $generated@@103 ($generated@@79 $generated@@80) $generated@@102))))) ($generated@@37 $generated@@32 ($generated@@73 $generated@@102 $generated@@103) ($generated@@74 $generated@@75)))
 :pattern ( ($generated@@73 $generated@@102 $generated@@103))
))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@36 $generated@@105 ($generated@@31 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@31 $generated@@105 $generated@@104))
)))
(assert  (=> (<= 1 $generated@@71) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or ($generated@@76 $generated@@107 $generated@@108) (and (< 1 $generated@@71) (and ($generated@@77 $generated@@107) ($generated@@37 $generated@@78 $generated@@108 ($generated@@79 $generated@@80))))) (= ($generated@@73 $generated@@107 $generated@@108) ($generated@@106 ($generated@@29 $generated@@80 $generated@@75 $generated@@108 $generated@@107 $generated@@95 $generated@@107 $generated@@95))))
 :pattern ( ($generated@@73 $generated@@107 $generated@@108) ($generated@@77 $generated@@107))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@30 ($generated@@106 $generated@@109) $generated@@110) ($generated@@16 ($generated@@27 $generated@@28 $generated@@12 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@30 ($generated@@106 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@37 $generated@@32 $generated@@112 ($generated@@74 $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@30 $generated@@112 $generated@@114) ($generated@@111 $generated@@114 $generated@@113))
 :pattern ( ($generated@@30 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@37 $generated@@32 $generated@@112 ($generated@@74 $generated@@113)))
)))
(assert ($generated@@97 $generated@@1))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@115 ($generated@@36 $generated@@119 $generated@@116) $generated@@117 $generated@@118) ($generated@@72 $generated@@119 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@115 ($generated@@36 $generated@@119 $generated@@116) $generated@@117 $generated@@118))
)))
(assert  (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@120 $generated@@123 $generated@@124 $generated@@125 ($generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@120 $generated@@130 $generated@@131 $generated@@132 ($generated@@122 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@120 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@120 $generated@@139 $generated@@140 $generated@@141 ($generated@@122 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@120 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@16 ($generated@@120 $generated@@34 $generated@@33 $generated@@12 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))  (=> (and (or (not (= $generated@@153 $generated@@148)) (not true)) ($generated@@16 ($generated@@31 $generated@@12 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@149 $generated@@153) $generated@@150)))) (and ($generated@@37 $generated@@34 $generated@@153 $generated@@151) ($generated@@38 $generated@@152 ($generated@@36 $generated@@34 $generated@@153)))))
 :pattern ( ($generated@@120 $generated@@34 $generated@@33 $generated@@12 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@111 $generated@@155 $generated@@90) (and (= ($generated@@36 $generated@@34 ($generated@@31 $generated@@34 $generated@@155)) $generated@@155) ($generated@@37 $generated@@34 ($generated@@31 $generated@@34 $generated@@155) $generated@@90)))
 :pattern ( ($generated@@111 $generated@@155 $generated@@90))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@111 $generated@@156 $generated@@75) (and (= ($generated@@36 $generated@@34 ($generated@@31 $generated@@34 $generated@@156)) $generated@@156) ($generated@@37 $generated@@34 ($generated@@31 $generated@@34 $generated@@156) $generated@@75)))
 :pattern ( ($generated@@111 $generated@@156 $generated@@75))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> ($generated@@111 $generated@@157 $generated@@80) (and (= ($generated@@36 $generated@@34 ($generated@@31 $generated@@34 $generated@@157)) $generated@@157) ($generated@@37 $generated@@34 ($generated@@31 $generated@@34 $generated@@157) $generated@@80)))
 :pattern ( ($generated@@111 $generated@@157 $generated@@80))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> ($generated@@111 $generated@@158 $generated@@86) (and (= ($generated@@36 $generated@@34 ($generated@@31 $generated@@34 $generated@@158)) $generated@@158) ($generated@@37 $generated@@34 ($generated@@31 $generated@@34 $generated@@158) $generated@@86)))
 :pattern ( ($generated@@111 $generated@@158 $generated@@86))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@37 $generated@@34 $generated@@159 $generated@@75)  (and ($generated@@37 $generated@@34 $generated@@159 $generated@@90) (or (not (= $generated@@159 $generated@@87)) (not true))))
 :pattern ( ($generated@@37 $generated@@34 $generated@@159 $generated@@75))
 :pattern ( ($generated@@37 $generated@@34 $generated@@159 $generated@@90))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@37 $generated@@34 $generated@@160 $generated@@80)  (and ($generated@@37 $generated@@34 $generated@@160 $generated@@86) (or (not (= $generated@@160 $generated@@87)) (not true))))
 :pattern ( ($generated@@37 $generated@@34 $generated@@160 $generated@@80))
 :pattern ( ($generated@@37 $generated@@34 $generated@@160 $generated@@86))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@38 $generated@@162 $generated@@163) (exists (($generated@@164 Int) ) (!  (and (and (<= 0 $generated@@164) (< $generated@@164 ($generated@@85 $generated@@162))) (= ($generated@@161 $generated@@162 $generated@@164) $generated@@163))
 :pattern ( ($generated@@161 $generated@@162 $generated@@164))
)))
 :pattern ( ($generated@@38 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@77 $generated@@165) (and (or (not (= $generated@@166 $generated@@87)) (not true)) (= ($generated@@88 $generated@@166) $generated@@86))) ($generated@@37 $generated@@32 ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@165 $generated@@166) $generated@@95)) ($generated@@74 $generated@@75)))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@165 $generated@@166) $generated@@95)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (and ($generated@@77 $generated@@167) (and (or (not (= $generated@@168 $generated@@87)) (not true)) (= ($generated@@88 $generated@@168) $generated@@86))) ($generated@@16 ($generated@@31 $generated@@12 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@167 $generated@@168) $generated@@1)))) ($generated@@72 $generated@@32 ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@167 $generated@@168) $generated@@95)) ($generated@@74 $generated@@75) $generated@@167))
 :pattern ( ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@167 $generated@@168) $generated@@95)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (and (= ($generated@@169 ($generated@@96 $generated@@170 $generated@@171)) $generated@@170) (= ($generated@@70 ($generated@@96 $generated@@170 $generated@@171)) $generated@@171))
 :pattern ( ($generated@@96 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@111 ($generated@@36 $generated@@174 $generated@@172) $generated@@173) ($generated@@37 $generated@@174 $generated@@172 $generated@@173))
 :pattern ( ($generated@@111 ($generated@@36 $generated@@174 $generated@@172) $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (<= 0 ($generated@@85 $generated@@175))
 :pattern ( ($generated@@85 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@72 $generated@@32 $generated@@176 ($generated@@74 $generated@@177) $generated@@178) (forall (($generated@@179 T@U) ) (!  (=> ($generated@@30 $generated@@176 $generated@@179) ($generated@@115 $generated@@179 $generated@@177 $generated@@178))
 :pattern ( ($generated@@30 $generated@@176 $generated@@179))
)))
 :pattern ( ($generated@@72 $generated@@32 $generated@@176 ($generated@@74 $generated@@177) $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! ($generated@@37 $generated@@34 $generated@@180 $generated@@90)
 :pattern ( ($generated@@37 $generated@@34 $generated@@180 $generated@@90))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@72 $generated@@78 $generated@@181 ($generated@@79 $generated@@182) $generated@@183) (forall (($generated@@184 Int) ) (!  (=> (and (<= 0 $generated@@184) (< $generated@@184 ($generated@@85 $generated@@181))) ($generated@@115 ($generated@@161 $generated@@181 $generated@@184) $generated@@182 $generated@@183))
 :pattern ( ($generated@@161 $generated@@181 $generated@@184))
)))
 :pattern ( ($generated@@72 $generated@@78 $generated@@181 ($generated@@79 $generated@@182) $generated@@183))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@185 ($generated@@74 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@74 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@187 ($generated@@74 $generated@@188)) $generated)
 :pattern ( ($generated@@74 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@189 ($generated@@79 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@79 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@187 ($generated@@79 $generated@@191)) $generated@@0)
 :pattern ( ($generated@@79 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@31 $generated@@193 ($generated@@36 $generated@@193 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@36 $generated@@193 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@111 $generated@@194 ($generated@@74 $generated@@195)) (and (= ($generated@@36 $generated@@32 ($generated@@31 $generated@@32 $generated@@194)) $generated@@194) ($generated@@37 $generated@@32 ($generated@@31 $generated@@32 $generated@@194) ($generated@@74 $generated@@195))))
 :pattern ( ($generated@@111 $generated@@194 ($generated@@74 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@111 $generated@@196 ($generated@@79 $generated@@197)) (and (= ($generated@@36 $generated@@78 ($generated@@31 $generated@@78 $generated@@196)) $generated@@196) ($generated@@37 $generated@@78 ($generated@@31 $generated@@78 $generated@@196) ($generated@@79 $generated@@197))))
 :pattern ( ($generated@@111 $generated@@196 ($generated@@79 $generated@@197)))
)))
(assert (= ($generated@@187 $generated@@90) $generated@@3))
(assert (= ($generated@@198 $generated@@90) $generated@@8))
(assert (= ($generated@@187 $generated@@75) $generated@@4))
(assert (= ($generated@@198 $generated@@75) $generated@@8))
(assert (= ($generated@@187 $generated@@80) $generated@@5))
(assert (= ($generated@@198 $generated@@80) $generated@@9))
(assert (= ($generated@@187 $generated@@86) $generated@@7))
(assert (= ($generated@@198 $generated@@86) $generated@@9))
(assert (forall (($generated@@199 T@U) ) (!  (=> (= ($generated@@85 $generated@@199) 0) (= $generated@@199 $generated@@83))
 :pattern ( ($generated@@85 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@37 $generated@@78 $generated@@200 ($generated@@79 $generated@@201)) (forall (($generated@@202 Int) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@85 $generated@@200))) ($generated@@111 ($generated@@161 $generated@@200 $generated@@202) $generated@@201))
 :pattern ( ($generated@@161 $generated@@200 $generated@@202))
)))
 :pattern ( ($generated@@37 $generated@@78 $generated@@200 ($generated@@79 $generated@@201)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Bool)
(declare-fun $generated@@209 () Bool)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@214  (=> (= ($generated@@73 $generated@@203 $generated@@204) ($generated@@106 ($generated@@29 $generated@@80 $generated@@75 $generated@@204 $generated@@203 $generated@@95 $generated@@203 $generated@@95))) (=> (and ($generated@@37 $generated@@32 ($generated@@73 $generated@@203 $generated@@204) ($generated@@74 $generated@@75)) (= (ControlFlow 0 3) (- 0 2))) $generated@@205))))
(let (($generated@@215  (=> (not (and ($generated@@38 $generated@@204 ($generated@@36 $generated@@34 $generated@@206)) ($generated@@30 ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@203 $generated@@206) $generated@@95)) ($generated@@36 $generated@@34 $generated@@207)))) (=> (and (= $generated@@205 $generated@@208) (= (ControlFlow 0 6) 3)) $generated@@214))))
(let (($generated@@216  (=> (and (and ($generated@@38 $generated@@204 ($generated@@36 $generated@@34 $generated@@206)) ($generated@@30 ($generated@@31 $generated@@32 ($generated@@27 $generated@@33 $generated@@28 ($generated@@27 $generated@@34 ($generated@@35 $generated@@33 $generated@@28) $generated@@203 $generated@@206) $generated@@95)) ($generated@@36 $generated@@34 $generated@@207))) (and (= $generated@@205 $generated@@208) (= (ControlFlow 0 5) 3))) $generated@@214)))
(let (($generated@@217  (=> (and (not ($generated@@38 $generated@@204 ($generated@@36 $generated@@34 $generated@@206))) (= $generated@@208 true)) (and (=> (= (ControlFlow 0 9) 5) $generated@@216) (=> (= (ControlFlow 0 9) 6) $generated@@215)))))
(let (($generated@@218  (=> ($generated@@38 $generated@@204 ($generated@@36 $generated@@34 $generated@@206)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (not (= $generated@@206 $generated@@87)) (not true))) (=> (or (not (= $generated@@206 $generated@@87)) (not true)) (=> (and (= $generated@@209 ($generated@@16 ($generated@@120 $generated@@34 $generated@@33 $generated@@12 $generated@@210 $generated@@206 $generated@@95))) (= $generated@@208 $generated@@209)) (and (=> (= (ControlFlow 0 7) 5) $generated@@216) (=> (= (ControlFlow 0 7) 6) $generated@@215))))))))
(let (($generated@@219  (=> (and (and ($generated@@37 $generated@@34 $generated@@206 $generated@@80) ($generated@@72 $generated@@34 $generated@@206 $generated@@80 $generated@@203)) (and ($generated@@37 $generated@@34 $generated@@207 $generated@@75) ($generated@@72 $generated@@34 $generated@@207 $generated@@75 $generated@@203))) (and (=> (= (ControlFlow 0 10) 7) $generated@@218) (=> (= (ControlFlow 0 10) 9) $generated@@217)))))
(let (($generated@@220  (=> (not (and (and ($generated@@37 $generated@@34 $generated@@206 $generated@@80) ($generated@@72 $generated@@34 $generated@@206 $generated@@80 $generated@@203)) (and ($generated@@37 $generated@@34 $generated@@207 $generated@@75) ($generated@@72 $generated@@34 $generated@@207 $generated@@75 $generated@@203)))) (=> (and (= $generated@@205 true) (= (ControlFlow 0 4) 3)) $generated@@214))))
(let (($generated@@221 true))
(let (($generated@@222  (=> (not ($generated@@38 $generated@@204 ($generated@@36 $generated@@34 $generated@@211))) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@221) (=> (= (ControlFlow 0 13) 10) $generated@@219)) (=> (= (ControlFlow 0 13) 4) $generated@@220)))))
(let (($generated@@223  (=> ($generated@@38 $generated@@204 ($generated@@36 $generated@@34 $generated@@211)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@221) (=> (= (ControlFlow 0 12) 10) $generated@@219)) (=> (= (ControlFlow 0 12) 4) $generated@@220)))))
(let (($generated@@224  (=> (and ($generated@@37 $generated@@34 $generated@@211 $generated@@80) ($generated@@72 $generated@@34 $generated@@211 $generated@@80 $generated@@203)) (and (=> (= (ControlFlow 0 14) 12) $generated@@223) (=> (= (ControlFlow 0 14) 13) $generated@@222)))))
(let (($generated@@225  (=> (not (and ($generated@@37 $generated@@34 $generated@@211 $generated@@80) ($generated@@72 $generated@@34 $generated@@211 $generated@@80 $generated@@203))) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@221) (=> (= (ControlFlow 0 11) 10) $generated@@219)) (=> (= (ControlFlow 0 11) 4) $generated@@220)))))
(let (($generated@@226  (=> (not ($generated@@38 $generated@@204 ($generated@@36 $generated@@34 $generated@@212))) (and (=> (= (ControlFlow 0 17) 14) $generated@@224) (=> (= (ControlFlow 0 17) 11) $generated@@225)))))
(let (($generated@@227  (=> ($generated@@38 $generated@@204 ($generated@@36 $generated@@34 $generated@@212)) (and (=> (= (ControlFlow 0 16) 14) $generated@@224) (=> (= (ControlFlow 0 16) 11) $generated@@225)))))
(let (($generated@@228  (=> (and ($generated@@37 $generated@@34 $generated@@212 $generated@@80) ($generated@@72 $generated@@34 $generated@@212 $generated@@80 $generated@@203)) (and (=> (= (ControlFlow 0 18) 16) $generated@@227) (=> (= (ControlFlow 0 18) 17) $generated@@226)))))
(let (($generated@@229  (=> (not (and ($generated@@37 $generated@@34 $generated@@212 $generated@@80) ($generated@@72 $generated@@34 $generated@@212 $generated@@80 $generated@@203))) (and (=> (= (ControlFlow 0 15) 14) $generated@@224) (=> (= (ControlFlow 0 15) 11) $generated@@225)))))
(let (($generated@@230  (=> (= $generated@@210 ($generated@@121 $generated@@87 $generated@@203 $generated@@1 $generated@@80 $generated@@204)) (and (=> (= (ControlFlow 0 19) 18) $generated@@228) (=> (= (ControlFlow 0 19) 15) $generated@@229)))))
(let (($generated@@231  (=> (and (and (and ($generated@@77 $generated@@203) ($generated@@213 $generated@@203)) ($generated@@37 $generated@@78 $generated@@204 ($generated@@79 $generated@@80))) (and (= 1 $generated@@71) (= (ControlFlow 0 20) 19))) $generated@@230)))
$generated@@231)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
