(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U Int) T@U)
(declare-fun $generated@@28 (T@U Int T@U) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@44 (Int) Int)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U T@U) Bool)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@56 () Int)
(declare-fun $generated@@57 (T@U T@U Int) Int)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U Int) Bool)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (Int Int) Int)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) Int)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@195 (T@U Int Int) Bool)
(declare-fun $generated@@196 (T@U Int Int) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 Int) ) (!  (=> (and (<= 0 $generated@@26) (<= $generated@@26 ($generated@@20 $generated@@24))) (= ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26) ($generated@@23 ($generated@@22 $generated@@24 $generated@@26) $generated@@25)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 Int) ($generated@@31 T@U) ($generated@@32 Int) ) (!  (=> (and (<= 0 $generated@@32) (< $generated@@32 ($generated@@20 $generated@@29))) (and (=> (= $generated@@30 $generated@@32) (= ($generated@@27 ($generated@@28 $generated@@29 $generated@@30 $generated@@31) $generated@@32) $generated@@31)) (=> (or (not (= $generated@@30 $generated@@32)) (not true)) (= ($generated@@27 ($generated@@28 $generated@@29 $generated@@30 $generated@@31) $generated@@32) ($generated@@27 $generated@@29 $generated@@32)))))
 :pattern ( ($generated@@27 ($generated@@28 $generated@@29 $generated@@30 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (= $generated@@37 ($generated@@20 $generated@@35)) (and (= ($generated@@33 ($generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@35) (= ($generated@@22 ($generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@36)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@22 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (and (and (<= 0 $generated@@41) (<= $generated@@41 $generated@@39)) (< $generated@@39 ($generated@@20 $generated@@38))) (= ($generated@@22 ($generated@@28 $generated@@38 $generated@@39 $generated@@40) $generated@@41) ($generated@@28 ($generated@@22 $generated@@38 $generated@@41) (- $generated@@39 $generated@@41) $generated@@40)))
 :pattern ( ($generated@@22 ($generated@@28 $generated@@38 $generated@@39 $generated@@40) $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 Int) ) (!  (=> (= $generated@@43 0) (= ($generated@@22 $generated@@42 $generated@@43) $generated@@42))
 :pattern ( ($generated@@22 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 Int) ) (! (= ($generated@@44 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@48 $generated@@47))
)))
(assert (= ($generated@@3 $generated@@50) 3))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and ($generated@@49 $generated@@50 $generated@@53 ($generated@@51 $generated@@55)) ($generated@@52 $generated@@54 $generated@@55)) ($generated@@49 $generated@@50 ($generated@@23 $generated@@53 $generated@@54) ($generated@@51 $generated@@55)))
 :pattern ( ($generated@@49 $generated@@50 ($generated@@23 $generated@@53 $generated@@54) ($generated@@51 $generated@@55)))
)))
(assert  (=> (<= 0 $generated@@56) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 Int) ) (!  (=> (or ($generated@@59 ($generated@@46 $generated@@50 $generated@@63) ($generated@@44 $generated@@64)) (and (< 0 $generated@@56) (and ($generated@@49 $generated@@50 $generated@@63 ($generated@@51 $generated)) (<= ($generated@@44 2) ($generated@@44 $generated@@64))))) (and (=> (or (not (= ($generated@@20 ($generated@@46 $generated@@50 $generated@@63)) ($generated@@44 0))) (not true)) ($generated@@59 ($generated@@46 $generated@@50 ($generated@@22 ($generated@@46 $generated@@50 $generated@@63) ($generated@@44 1))) ($generated@@44 $generated@@64))) (= ($generated@@57 ($generated@@58 $generated@@62) ($generated@@46 $generated@@50 $generated@@63) ($generated@@44 $generated@@64)) (ite (= ($generated@@20 ($generated@@46 $generated@@50 $generated@@63)) ($generated@@44 0)) 0 (+ ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 ($generated@@46 $generated@@50 $generated@@63) ($generated@@44 0)))) ($generated@@61 ($generated@@44 $generated@@64) ($generated@@44 ($generated@@57 ($generated@@58 $generated@@62) ($generated@@46 $generated@@50 ($generated@@22 ($generated@@46 $generated@@50 $generated@@63) ($generated@@44 1))) ($generated@@44 $generated@@64)))))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@58 $generated@@62) ($generated@@46 $generated@@50 $generated@@63) ($generated@@44 $generated@@64)))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 Int) ($generated@@67 Int) ) (!  (=> (and (and (<= 0 $generated@@67) (< $generated@@67 $generated@@66)) (< $generated@@67 ($generated@@20 $generated@@65))) (= ($generated@@27 ($generated@@33 $generated@@65 $generated@@66) $generated@@67) ($generated@@27 $generated@@65 $generated@@67)))
 :weight 25
 :pattern ( ($generated@@27 ($generated@@33 $generated@@65 $generated@@66) $generated@@67))
 :pattern ( ($generated@@27 $generated@@65 $generated@@67) ($generated@@33 $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 Int) ) (!  (=> (and (<= 0 $generated@@69) (<= $generated@@69 ($generated@@20 $generated@@68))) (= ($generated@@20 ($generated@@22 $generated@@68 $generated@@69)) (- ($generated@@20 $generated@@68) $generated@@69)))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@68 $generated@@69)))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@70 $generated@@71 $generated@@72)  (and (= ($generated@@20 $generated@@71) ($generated@@20 $generated@@72)) (forall (($generated@@73 Int) ) (!  (=> (and (<= 0 $generated@@73) (< $generated@@73 ($generated@@20 $generated@@71))) (= ($generated@@27 $generated@@71 $generated@@73) ($generated@@27 $generated@@72 $generated@@73)))
 :pattern ( ($generated@@27 $generated@@71 $generated@@73))
 :pattern ( ($generated@@27 $generated@@72 $generated@@73))
))))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@60 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@60 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 Int) ) (!  (=> (and (<= 0 $generated@@79) (< $generated@@79 ($generated@@20 $generated@@78))) (< ($generated@@77 ($generated@@33 $generated@@78 $generated@@79)) ($generated@@77 $generated@@78)))
 :pattern ( ($generated@@77 ($generated@@33 $generated@@78 $generated@@79)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ) (!  (=> (and (< 0 $generated@@81) (<= $generated@@81 ($generated@@20 $generated@@80))) (< ($generated@@77 ($generated@@22 $generated@@80 $generated@@81)) ($generated@@77 $generated@@80)))
 :pattern ( ($generated@@77 ($generated@@22 $generated@@80 $generated@@81)))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@20 ($generated@@23 $generated@@82 $generated@@83)) (+ 1 ($generated@@20 $generated@@82)))
 :pattern ( ($generated@@23 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@84 ($generated@@74 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@85 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@84 ($generated@@74 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 Int) ($generated@@92 Int) ) (!  (=> (and (and (<= 0 $generated@@91) (<= 0 $generated@@92)) (< $generated@@92 (- ($generated@@20 $generated@@90) $generated@@91))) (= ($generated@@27 ($generated@@22 $generated@@90 $generated@@91) $generated@@92) ($generated@@27 $generated@@90 (+ $generated@@92 $generated@@91))))
 :weight 25
 :pattern ( ($generated@@27 ($generated@@22 $generated@@90 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@20 ($generated@@34 $generated@@93 $generated@@94)) (+ ($generated@@20 $generated@@93) ($generated@@20 $generated@@94)))
 :pattern ( ($generated@@20 ($generated@@34 $generated@@93 $generated@@94)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 Int) ($generated@@97 T@U) ) (!  (and (=> (= $generated@@96 ($generated@@20 $generated@@95)) (= ($generated@@27 ($generated@@23 $generated@@95 $generated@@97) $generated@@96) $generated@@97)) (=> (or (not (= $generated@@96 ($generated@@20 $generated@@95))) (not true)) (= ($generated@@27 ($generated@@23 $generated@@95 $generated@@97) $generated@@96) ($generated@@27 $generated@@95 $generated@@96))))
 :pattern ( ($generated@@27 ($generated@@23 $generated@@95 $generated@@97) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Int) ) (! (= ($generated@@57 ($generated@@58 $generated@@98) $generated@@99 $generated@@100) ($generated@@57 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 Int) ($generated@@103 T@U) ($generated@@104 Int) ) (!  (=> (and (and (<= 0 $generated@@102) (< $generated@@102 $generated@@104)) (<= $generated@@104 ($generated@@20 $generated@@101))) (= ($generated@@22 ($generated@@28 $generated@@101 $generated@@102 $generated@@103) $generated@@104) ($generated@@22 $generated@@101 $generated@@104)))
 :pattern ( ($generated@@22 ($generated@@28 $generated@@101 $generated@@102 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@70 $generated@@105 $generated@@106) (= $generated@@105 $generated@@106))
 :pattern ( ($generated@@70 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 Int) ) (!  (=> (and (<= 0 $generated@@108) (<= $generated@@108 ($generated@@20 $generated@@107))) (= ($generated@@20 ($generated@@33 $generated@@107 $generated@@108)) $generated@@108))
 :pattern ( ($generated@@20 ($generated@@33 $generated@@107 $generated@@108)))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@52 $generated@@109 $generated) (and (= ($generated@@74 $generated@@5 ($generated@@60 $generated@@5 $generated@@109)) $generated@@109) ($generated@@49 $generated@@5 ($generated@@60 $generated@@5 $generated@@109) $generated)))
 :pattern ( ($generated@@52 $generated@@109 $generated))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@52 ($generated@@74 $generated@@112 $generated@@110) $generated@@111) ($generated@@49 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@52 ($generated@@74 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 Int) ($generated@@115 T@U) ($generated@@116 Int) ) (!  (=> (and (<= $generated@@116 $generated@@114) (< $generated@@114 ($generated@@20 $generated@@113))) (= ($generated@@33 ($generated@@28 $generated@@113 $generated@@114 $generated@@115) $generated@@116) ($generated@@33 $generated@@113 $generated@@116)))
 :pattern ( ($generated@@33 ($generated@@28 $generated@@113 $generated@@114 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (! (<= 0 ($generated@@20 $generated@@117))
 :pattern ( ($generated@@20 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 Int) ($generated@@120 Int) ) (!  (=> (and (and (<= 0 $generated@@119) (< $generated@@119 $generated@@120)) (<= $generated@@120 ($generated@@20 $generated@@118))) (< ($generated@@77 ($generated@@34 ($generated@@33 $generated@@118 $generated@@119) ($generated@@22 $generated@@118 $generated@@120))) ($generated@@77 $generated@@118)))
 :pattern ( ($generated@@77 ($generated@@34 ($generated@@33 $generated@@118 $generated@@119) ($generated@@22 $generated@@118 $generated@@120))))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@85 $generated@@50 $generated@@121 ($generated@@51 $generated@@122) $generated@@123) (forall (($generated@@124 Int) ) (!  (=> (and (<= 0 $generated@@124) (< $generated@@124 ($generated@@20 $generated@@121))) ($generated@@84 ($generated@@27 $generated@@121 $generated@@124) $generated@@122 $generated@@123))
 :pattern ( ($generated@@27 $generated@@121 $generated@@124))
)))
 :pattern ( ($generated@@85 $generated@@50 $generated@@121 ($generated@@51 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@51 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@51 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@19 ($generated@@51 $generated@@127)) $generated@@1)
 :pattern ( ($generated@@51 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@60 $generated@@129 ($generated@@74 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@74 $generated@@129 $generated@@128))
)))
(assert  (=> (<= 0 $generated@@56) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 Int) ) (!  (=> (or ($generated@@59 $generated@@131 $generated@@132) (and (< 0 $generated@@56) (and ($generated@@49 $generated@@50 $generated@@131 ($generated@@51 $generated)) (<= ($generated@@44 2) $generated@@132)))) (and (=> (or (not (= ($generated@@20 $generated@@131) ($generated@@44 0))) (not true)) ($generated@@59 ($generated@@22 $generated@@131 ($generated@@44 1)) $generated@@132)) (= ($generated@@57 ($generated@@58 $generated@@130) $generated@@131 $generated@@132) (ite (= ($generated@@20 $generated@@131) ($generated@@44 0)) 0 (+ ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@131 ($generated@@44 0)))) ($generated@@61 $generated@@132 ($generated@@57 $generated@@130 ($generated@@22 $generated@@131 ($generated@@44 1)) $generated@@132)))))))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@130) $generated@@131 $generated@@132))
))))
(assert  (=> (<= 0 $generated@@56) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 Int) ) (!  (=> (or ($generated@@59 ($generated@@46 $generated@@50 $generated@@134) $generated@@135) (and (< 0 $generated@@56) (and ($generated@@49 $generated@@50 $generated@@134 ($generated@@51 $generated)) (<= ($generated@@44 2) $generated@@135)))) (and (=> (or (not (= ($generated@@20 ($generated@@46 $generated@@50 $generated@@134)) ($generated@@44 0))) (not true)) ($generated@@59 ($generated@@46 $generated@@50 ($generated@@22 ($generated@@46 $generated@@50 $generated@@134) ($generated@@44 1))) $generated@@135)) (= ($generated@@57 ($generated@@58 $generated@@133) ($generated@@46 $generated@@50 $generated@@134) $generated@@135) (ite (= ($generated@@20 ($generated@@46 $generated@@50 $generated@@134)) ($generated@@44 0)) 0 (+ ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 ($generated@@46 $generated@@50 $generated@@134) ($generated@@44 0)))) ($generated@@61 $generated@@135 ($generated@@57 ($generated@@58 $generated@@133) ($generated@@46 $generated@@50 ($generated@@22 ($generated@@46 $generated@@50 $generated@@134) ($generated@@44 1))) $generated@@135)))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@58 $generated@@133) ($generated@@46 $generated@@50 $generated@@134) $generated@@135))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@136 $generated@@147 $generated@@148 $generated@@149 ($generated@@143 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@136 $generated@@154 $generated@@155 $generated@@156 ($generated@@143 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@136 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@136 $generated@@163 $generated@@164 $generated@@165 ($generated@@143 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (= ($generated@@3 $generated@@137) 4)) (= ($generated@@3 $generated@@138) 5)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@140 $generated@@172 $generated@@173 ($generated@@144 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@176) $generated@@174)
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@181 $generated@@182) (= ($generated@@140 $generated@@177 $generated@@178 ($generated@@144 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@182) ($generated@@140 $generated@@177 $generated@@178 $generated@@180 $generated@@182)))
 :weight 0
))) (= ($generated@@3 $generated@@141) 6)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@3 ($generated@@142 $generated@@183 $generated@@184)) 7))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@145 ($generated@@142 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@142 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@146 ($generated@@142 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@142 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@8 ($generated@@136 $generated@@137 $generated@@138 $generated@@4 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@8 ($generated@@60 $generated@@4 ($generated@@140 $generated@@138 $generated@@141 ($generated@@140 $generated@@137 ($generated@@142 $generated@@138 $generated@@141) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@4 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert  (=> (<= 0 $generated@@56) (forall (($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 Int) ) (!  (=> (or ($generated@@196 $generated@@197 $generated@@198 $generated@@199) (and (< 0 $generated@@56) ($generated@@49 $generated@@50 $generated@@197 ($generated@@51 $generated)))) (= ($generated@@195 $generated@@197 $generated@@198 $generated@@199)  (and (and (<= ($generated@@44 2) $generated@@199) (and (<= $generated@@198 ($generated@@44 0)) (< 0 (+ $generated@@198 $generated@@199)))) (forall (($generated@@200 Int) ) (!  (and (=> (and (<= ($generated@@44 0) $generated@@200) (< $generated@@200 ($generated@@20 $generated@@197))) (<= $generated@@198 ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@197 $generated@@200))))) (=> (and (<= ($generated@@44 0) $generated@@200) (< $generated@@200 ($generated@@20 $generated@@197))) (< ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@197 $generated@@200))) (+ $generated@@198 $generated@@199))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@27 $generated@@197 $generated@@200)))
)))))
 :pattern ( ($generated@@195 $generated@@197 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@201 T@U) ($generated@@202 Int) ($generated@@203 T@U) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@20 $generated@@201))) (= ($generated@@20 ($generated@@28 $generated@@201 $generated@@202 $generated@@203)) ($generated@@20 $generated@@201)))
 :pattern ( ($generated@@20 ($generated@@28 $generated@@201 $generated@@202 $generated@@203)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (and (= ($generated@@204 ($generated@@23 $generated@@206 $generated@@207)) $generated@@206) (= ($generated@@205 ($generated@@23 $generated@@206 $generated@@207)) $generated@@207))
 :pattern ( ($generated@@23 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 Int) ($generated@@209 Int) ) (! (= ($generated@@61 $generated@@208 $generated@@209) (* $generated@@208 $generated@@209))
 :pattern ( ($generated@@61 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@52 $generated@@210 ($generated@@51 $generated@@211)) (and (= ($generated@@74 $generated@@50 ($generated@@60 $generated@@50 $generated@@210)) $generated@@210) ($generated@@49 $generated@@50 ($generated@@60 $generated@@50 $generated@@210) ($generated@@51 $generated@@211))))
 :pattern ( ($generated@@52 $generated@@210 ($generated@@51 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 Int) ($generated@@214 Int) ) (!  (=> (and (and (<= 0 $generated@@213) (<= $generated@@213 $generated@@214)) (< $generated@@214 ($generated@@20 $generated@@212))) (= ($generated@@27 ($generated@@22 $generated@@212 $generated@@213) (- $generated@@214 $generated@@213)) ($generated@@27 $generated@@212 $generated@@214)))
 :weight 25
 :pattern ( ($generated@@27 $generated@@212 $generated@@214) ($generated@@22 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 Int) ($generated@@217 Int) ) (!  (=> (and (and (<= 0 $generated@@216) (<= 0 $generated@@217)) (<= (+ $generated@@216 $generated@@217) ($generated@@20 $generated@@215))) (= ($generated@@22 ($generated@@22 $generated@@215 $generated@@216) $generated@@217) ($generated@@22 $generated@@215 (+ $generated@@216 $generated@@217))))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@215 $generated@@216) $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Int) ) (!  (and (=> (< $generated@@220 ($generated@@20 $generated@@218)) (= ($generated@@27 ($generated@@34 $generated@@218 $generated@@219) $generated@@220) ($generated@@27 $generated@@218 $generated@@220))) (=> (<= ($generated@@20 $generated@@218) $generated@@220) (= ($generated@@27 ($generated@@34 $generated@@218 $generated@@219) $generated@@220) ($generated@@27 $generated@@219 (- $generated@@220 ($generated@@20 $generated@@218))))))
 :pattern ( ($generated@@27 ($generated@@34 $generated@@218 $generated@@219) $generated@@220))
)))
(assert  (=> (<= 0 $generated@@56) (forall (($generated@@221 T@U) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (or ($generated@@196 ($generated@@46 $generated@@50 $generated@@221) ($generated@@44 $generated@@222) ($generated@@44 $generated@@223)) (and (< 0 $generated@@56) ($generated@@49 $generated@@50 $generated@@221 ($generated@@51 $generated)))) (= ($generated@@195 ($generated@@46 $generated@@50 $generated@@221) ($generated@@44 $generated@@222) ($generated@@44 $generated@@223))  (and (and (<= ($generated@@44 2) ($generated@@44 $generated@@223)) (and (<= ($generated@@44 $generated@@222) ($generated@@44 0)) (< 0 (+ $generated@@222 $generated@@223)))) (forall (($generated@@224 Int) ) (!  (and (=> (and (<= ($generated@@44 0) $generated@@224) (< $generated@@224 ($generated@@20 ($generated@@46 $generated@@50 $generated@@221)))) (<= ($generated@@44 $generated@@222) ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 ($generated@@46 $generated@@50 $generated@@221) $generated@@224))))) (=> (and (<= ($generated@@44 0) $generated@@224) (< $generated@@224 ($generated@@20 ($generated@@46 $generated@@50 $generated@@221)))) (< ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 ($generated@@46 $generated@@50 $generated@@221) $generated@@224))) (+ $generated@@222 $generated@@223))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@27 $generated@@221 $generated@@224)))
)))))
 :weight 3
 :pattern ( ($generated@@195 ($generated@@46 $generated@@50 $generated@@221) ($generated@@44 $generated@@222) ($generated@@44 $generated@@223)))
))))
(assert (forall (($generated@@225 Int) ) (! (= ($generated@@74 $generated@@5 ($generated@@9 ($generated@@44 $generated@@225))) ($generated@@46 $generated@@141 ($generated@@74 $generated@@5 ($generated@@9 $generated@@225))))
 :pattern ( ($generated@@74 $generated@@5 ($generated@@9 ($generated@@44 $generated@@225))))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@T) ) (! (= ($generated@@74 $generated@@227 ($generated@@46 $generated@@227 $generated@@226)) ($generated@@46 $generated@@141 ($generated@@74 $generated@@227 $generated@@226)))
 :pattern ( ($generated@@74 $generated@@227 ($generated@@46 $generated@@227 $generated@@226)))
)))
(assert (forall (($generated@@228 T@U) ) (!  (=> (= ($generated@@20 $generated@@228) 0) (= $generated@@228 $generated@@21))
 :pattern ( ($generated@@20 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 Int) ) (!  (=> (= $generated@@230 0) (= ($generated@@33 $generated@@229 $generated@@230) $generated@@21))
 :pattern ( ($generated@@33 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! ($generated@@85 $generated@@5 $generated@@232 $generated $generated@@231)
 :pattern ( ($generated@@85 $generated@@5 $generated@@232 $generated $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 Int) ($generated@@235 T@U) ($generated@@236 Int) ) (!  (=> (and (and (<= 0 $generated@@234) (< $generated@@234 $generated@@236)) (<= $generated@@236 ($generated@@20 $generated@@233))) (= ($generated@@33 ($generated@@28 $generated@@233 $generated@@234 $generated@@235) $generated@@236) ($generated@@28 ($generated@@33 $generated@@233 $generated@@236) $generated@@234 $generated@@235)))
 :pattern ( ($generated@@33 ($generated@@28 $generated@@233 $generated@@234 $generated@@235) $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= ($generated@@49 $generated@@50 $generated@@237 ($generated@@51 $generated@@238)) (forall (($generated@@239 Int) ) (!  (=> (and (<= 0 $generated@@239) (< $generated@@239 ($generated@@20 $generated@@237))) ($generated@@52 ($generated@@27 $generated@@237 $generated@@239) $generated@@238))
 :pattern ( ($generated@@27 $generated@@237 $generated@@239))
)))
 :pattern ( ($generated@@49 $generated@@50 $generated@@237 ($generated@@51 $generated@@238)))
)))
(assert (forall (($generated@@240 T@U) ) (! ($generated@@49 $generated@@5 $generated@@240 $generated)
 :pattern ( ($generated@@49 $generated@@5 $generated@@240 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@259  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@196 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@241 $generated@@242 $generated@@243) (<= ($generated@@44 2) $generated@@243)))) (=> (=> ($generated@@196 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@241 $generated@@242 $generated@@243) (<= ($generated@@44 2) $generated@@243))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@196 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@241 $generated@@242 $generated@@243) (<= $generated@@242 ($generated@@44 0))))) (=> (=> ($generated@@196 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@241 $generated@@242 $generated@@243) (<= $generated@@242 ($generated@@44 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@196 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@241 $generated@@242 $generated@@243) (< 0 (+ $generated@@242 $generated@@243))))) (=> (=> ($generated@@196 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@241 $generated@@242 $generated@@243) (< 0 (+ $generated@@242 $generated@@243)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@196 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@241 $generated@@242 $generated@@243) (forall (($generated@@260 Int) ) (!  (and (=> (and (<= ($generated@@44 0) $generated@@260) (< $generated@@260 ($generated@@20 $generated@@241))) (<= $generated@@242 ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@241 $generated@@260))))) (=> (and (<= ($generated@@44 0) $generated@@260) (< $generated@@260 ($generated@@20 $generated@@241))) (< ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@241 $generated@@260))) (+ $generated@@242 $generated@@243))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@27 $generated@@241 $generated@@260)))
))))) (=> (=> ($generated@@196 $generated@@241 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@241 $generated@@242 $generated@@243) (forall (($generated@@261 Int) ) (!  (and (=> (and (<= ($generated@@44 0) $generated@@261) (< $generated@@261 ($generated@@20 $generated@@241))) (<= $generated@@242 ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@241 $generated@@261))))) (=> (and (<= ($generated@@44 0) $generated@@261) (< $generated@@261 ($generated@@20 $generated@@241))) (< ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@241 $generated@@261))) (+ $generated@@242 $generated@@243))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@27 $generated@@241 $generated@@261)))
)))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@57 ($generated@@58 ($generated@@58 $generated@@244)) $generated@@241 $generated@@243) (- ($generated@@57 ($generated@@58 ($generated@@58 $generated@@244)) $generated@@245 $generated@@243) 1)))))))))))))
(let (($generated@@262  (=> (< (- ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@245 ($generated@@44 0)))) 1) $generated@@242) (and (=> (= (ControlFlow 0 11) (- 0 20)) (and (<= 0 ($generated@@44 1)) (<= ($generated@@44 1) ($generated@@20 $generated@@245)))) (=> (and (<= 0 ($generated@@44 1)) (<= ($generated@@44 1) ($generated@@20 $generated@@245))) (=> (= $generated@@246 ($generated@@22 $generated@@245 ($generated@@44 1))) (and (=> (= (ControlFlow 0 11) (- 0 19)) (or (or (<= 0 $generated@@242) (< ($generated@@77 $generated@@246) ($generated@@77 $generated@@245))) (= $generated@@242 $generated@@242))) (=> (or (or (<= 0 $generated@@242) (< ($generated@@77 $generated@@246) ($generated@@77 $generated@@245))) (= $generated@@242 $generated@@242)) (and (=> (= (ControlFlow 0 11) (- 0 18)) (or (or (or (<= 0 $generated@@243) (< ($generated@@77 $generated@@246) ($generated@@77 $generated@@245))) (< $generated@@242 $generated@@242)) (= $generated@@243 $generated@@243))) (=> (or (or (or (<= 0 $generated@@243) (< ($generated@@77 $generated@@246) ($generated@@77 $generated@@245))) (< $generated@@242 $generated@@242)) (= $generated@@243 $generated@@243)) (and (=> (= (ControlFlow 0 11) (- 0 17)) (or (< ($generated@@77 $generated@@246) ($generated@@77 $generated@@245)) (and (= ($generated@@77 $generated@@246) ($generated@@77 $generated@@245)) (or (< $generated@@242 $generated@@242) (and (= $generated@@242 $generated@@242) (< $generated@@243 $generated@@243)))))) (=> (or (< ($generated@@77 $generated@@246) ($generated@@77 $generated@@245)) (and (= ($generated@@77 $generated@@246) ($generated@@77 $generated@@245)) (or (< $generated@@242 $generated@@242) (and (= $generated@@242 $generated@@242) (< $generated@@243 $generated@@243))))) (=> (and ($generated@@49 $generated@@50 $generated@@247 ($generated@@51 $generated)) ($generated@@85 $generated@@50 $generated@@247 ($generated@@51 $generated) $generated@@248)) (and (=> (= (ControlFlow 0 11) (- 0 16)) (=> ($generated@@196 $generated@@246 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@246 $generated@@242 $generated@@243) (<= ($generated@@44 2) $generated@@243)))) (=> (=> ($generated@@196 $generated@@246 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@246 $generated@@242 $generated@@243) (<= ($generated@@44 2) $generated@@243))) (and (=> (= (ControlFlow 0 11) (- 0 15)) (=> ($generated@@196 $generated@@246 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@246 $generated@@242 $generated@@243) (<= $generated@@242 ($generated@@44 0))))) (=> (=> ($generated@@196 $generated@@246 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@246 $generated@@242 $generated@@243) (<= $generated@@242 ($generated@@44 0)))) (and (=> (= (ControlFlow 0 11) (- 0 14)) (=> ($generated@@196 $generated@@246 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@246 $generated@@242 $generated@@243) (< 0 (+ $generated@@242 $generated@@243))))) (=> (=> ($generated@@196 $generated@@246 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@246 $generated@@242 $generated@@243) (< 0 (+ $generated@@242 $generated@@243)))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (=> ($generated@@196 $generated@@246 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@246 $generated@@242 $generated@@243) (forall (($generated@@263 Int) ) (!  (and (=> (and (<= ($generated@@44 0) $generated@@263) (< $generated@@263 ($generated@@20 $generated@@246))) (<= $generated@@242 ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@246 $generated@@263))))) (=> (and (<= ($generated@@44 0) $generated@@263) (< $generated@@263 ($generated@@20 $generated@@246))) (< ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@246 $generated@@263))) (+ $generated@@242 $generated@@243))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@27 $generated@@246 $generated@@263)))
))))) (=> (=> ($generated@@196 $generated@@246 $generated@@242 $generated@@243) (or ($generated@@195 $generated@@246 $generated@@242 $generated@@243) (forall (($generated@@264 Int) ) (!  (and (=> (and (<= ($generated@@44 0) $generated@@264) (< $generated@@264 ($generated@@20 $generated@@246))) (<= $generated@@242 ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@246 $generated@@264))))) (=> (and (<= ($generated@@44 0) $generated@@264) (< $generated@@264 ($generated@@20 $generated@@246))) (< ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@246 $generated@@264))) (+ $generated@@242 $generated@@243))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@27 $generated@@246 $generated@@264)))
)))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (=> (= ($generated@@57 ($generated@@58 $generated@@244) $generated@@246 $generated@@243) ($generated@@44 0)) (< $generated@@242 0))) (=> (=> (= ($generated@@57 ($generated@@58 $generated@@244) $generated@@246 $generated@@243) ($generated@@44 0)) (< $generated@@242 0)) (=> (and ($generated@@249 $generated@@250) ($generated@@251 $generated@@250)) (=> (and (and ($generated@@49 $generated@@50 $generated@@252 ($generated@@51 $generated)) ($generated@@85 $generated@@50 $generated@@252 ($generated@@51 $generated) $generated@@250)) (and ($generated@@196 $generated@@252 $generated@@242 $generated@@243) (=> ($generated@@195 $generated@@252 $generated@@242 $generated@@243) (and ($generated@@59 $generated@@252 $generated@@243) ($generated@@59 $generated@@246 $generated@@243))))) (=> (and (and (and ($generated@@196 $generated@@252 $generated@@242 $generated@@243) (and ($generated@@195 $generated@@252 $generated@@242 $generated@@243) (and (and (<= ($generated@@44 2) $generated@@243) (and (<= $generated@@242 ($generated@@44 0)) (< 0 (+ $generated@@242 $generated@@243)))) (forall (($generated@@265 Int) ) (!  (and (=> (and (<= ($generated@@44 0) $generated@@265) (< $generated@@265 ($generated@@20 $generated@@252))) (<= $generated@@242 ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@252 $generated@@265))))) (=> (and (<= ($generated@@44 0) $generated@@265) (< $generated@@265 ($generated@@20 $generated@@252))) (< ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@252 $generated@@265))) (+ $generated@@242 $generated@@243))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@27 $generated@@252 $generated@@265)))
))))) (= ($generated@@57 ($generated@@58 ($generated@@58 $generated@@244)) $generated@@252 $generated@@243) (- ($generated@@57 ($generated@@58 ($generated@@58 $generated@@244)) $generated@@246 $generated@@243) 1))) (and (and (= $generated@@248 $generated@@250) (= $generated@@253 ($generated@@34 ($generated@@23 $generated@@21 ($generated@@74 $generated@@5 ($generated@@9 (- (+ $generated@@242 $generated@@243) 1)))) $generated@@252))) (and (= $generated@@241 $generated@@253) (= (ControlFlow 0 11) 2)))) $generated@@259))))))))))))))))))))))))))
(let (($generated@@266  (=> (<= $generated@@242 (- ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@245 ($generated@@44 0)))) 1)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@20 $generated@@245)))) (=> (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@20 $generated@@245))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@20 $generated@@245)))) (=> (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@20 $generated@@245))) (=> (= $generated@@254 ($generated@@28 $generated@@245 ($generated@@44 0) ($generated@@74 $generated@@5 ($generated@@9 (- ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@245 ($generated@@44 0)))) 1))))) (=> (and (= $generated@@241 $generated@@254) (= (ControlFlow 0 8) 2)) $generated@@259)))))))))
(let (($generated@@267  (=> (not ($generated@@70 $generated@@245 $generated@@21)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@20 $generated@@245)))) (=> (and (<= 0 ($generated@@44 0)) (< ($generated@@44 0) ($generated@@20 $generated@@245))) (and (=> (= (ControlFlow 0 21) 8) $generated@@266) (=> (= (ControlFlow 0 21) 11) $generated@@262)))))))
(let (($generated@@268  (=> (and (and ($generated@@70 $generated@@245 $generated@@21) (= $generated@@255 ($generated@@46 $generated@@50 ($generated@@23 $generated@@21 ($generated@@74 $generated@@5 ($generated@@9 ($generated@@44 (- 0 1)))))))) (and (= $generated@@241 $generated@@255) (= (ControlFlow 0 7) 2))) $generated@@259)))
(let (($generated@@269  (=> (= $generated@@256 ($generated@@139 $generated@@257 $generated@@248 $generated@@2 false)) (and (=> (= (ControlFlow 0 23) 7) $generated@@268) (=> (= (ControlFlow 0 23) 21) $generated@@267)))))
(let (($generated@@270  (=> (and (and ($generated@@249 $generated@@248) ($generated@@251 $generated@@248)) (and ($generated@@49 $generated@@50 $generated@@245 ($generated@@51 $generated)) ($generated@@85 $generated@@50 $generated@@245 ($generated@@51 $generated) $generated@@248))) (=> (and (and (and ($generated@@49 $generated@@50 $generated@@258 ($generated@@51 $generated)) ($generated@@85 $generated@@50 $generated@@258 ($generated@@51 $generated) $generated@@248)) (= 1 $generated@@56)) (and (and ($generated@@196 $generated@@245 $generated@@242 $generated@@243) (and ($generated@@195 $generated@@245 $generated@@242 $generated@@243) (and (and (<= ($generated@@44 2) $generated@@243) (and (<= $generated@@242 ($generated@@44 0)) (< 0 (+ $generated@@242 $generated@@243)))) (forall (($generated@@271 Int) ) (!  (and (=> (and (<= ($generated@@44 0) $generated@@271) (< $generated@@271 ($generated@@20 $generated@@245))) (<= $generated@@242 ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@245 $generated@@271))))) (=> (and (<= ($generated@@44 0) $generated@@271) (< $generated@@271 ($generated@@20 $generated@@245))) (< ($generated@@10 ($generated@@60 $generated@@5 ($generated@@27 $generated@@245 $generated@@271))) (+ $generated@@242 $generated@@243))))
 :pattern ( ($generated@@60 $generated@@5 ($generated@@27 $generated@@245 $generated@@271)))
))))) (and (=> (= ($generated@@57 ($generated@@58 $generated@@244) $generated@@245 $generated@@243) ($generated@@44 0)) (< $generated@@242 0)) (= (ControlFlow 0 24) 23)))) $generated@@269))))
$generated@@270))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
