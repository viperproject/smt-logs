(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@43 () Int)
(declare-fun $generated@@44 (T@U Int T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (Int T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@68 (T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 (T@U Int T@U) Int)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@100 (Int T@U) Bool)
(declare-fun $generated@@107 (T@U) Int)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@T T@T) T@T)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@178 (T@U T@U) Bool)
(declare-fun $generated@@179 (T@U T@U) Bool)
(declare-fun $generated@@180 () T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert (forall (($generated@@34 Int) ) (! (= ($generated@@33 $generated@@34) $generated@@34)
 :pattern ( ($generated@@33 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@35 $generated@@37 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@37 $generated@@36))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@38 $generated@@41 $generated@@42) ($generated@@27 $generated@@40))  (and ($generated@@39 $generated@@41 $generated@@40) ($generated@@31 $generated@@26 $generated@@42 ($generated@@27 $generated@@40))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@38 $generated@@41 $generated@@42) ($generated@@27 $generated@@40)))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 T@U) ) (!  (=> (or ($generated@@46 ($generated@@33 $generated@@53) ($generated@@35 $generated@@26 $generated@@54)) (and (< 1 $generated@@43) ($generated@@31 $generated@@26 $generated@@54 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@35 $generated@@7 ($generated@@10 ($generated@@47 ($generated@@35 $generated@@26 $generated@@54)))))) (let (($generated@@55 ($generated@@35 $generated@@26 ($generated@@48 ($generated@@35 $generated@@26 $generated@@54)))))
(let (($generated@@56 ($generated@@33 ($generated@@13 ($generated@@49 $generated@@8 ($generated@@50 ($generated@@35 $generated@@26 $generated@@54)))))))
 (=> (< $generated@@56 ($generated@@33 $generated@@53)) ($generated@@46 ($generated@@33 $generated@@53) $generated@@55))))) (= ($generated@@44 ($generated@@45 $generated@@52) ($generated@@33 $generated@@53) ($generated@@35 $generated@@26 $generated@@54)) (ite ($generated@@47 ($generated@@35 $generated@@26 $generated@@54)) ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 ($generated@@33 $generated@@53))) ($generated@@35 $generated@@26 $generated@@24)) (let (($generated@@57 ($generated@@35 $generated@@26 ($generated@@48 ($generated@@35 $generated@@26 $generated@@54)))))
(let (($generated@@58 ($generated@@33 ($generated@@13 ($generated@@49 $generated@@8 ($generated@@50 ($generated@@35 $generated@@26 $generated@@54)))))))
(ite (<= ($generated@@33 $generated@@53) $generated@@58) ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 ($generated@@33 $generated@@53))) ($generated@@35 $generated@@26 $generated@@54)) ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@58)) ($generated@@35 $generated@@26 ($generated@@44 ($generated@@45 $generated@@52) ($generated@@33 $generated@@53) $generated@@57))))))))))
 :weight 3
 :pattern ( ($generated@@44 ($generated@@45 $generated@@52) ($generated@@33 $generated@@53) ($generated@@35 $generated@@26 $generated@@54)))
))))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@47 $generated@@59) (= ($generated@@23 $generated@@59) $generated@@3))
 :pattern ( ($generated@@47 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@23 $generated@@61) $generated@@4))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@51 $generated@@63 ($generated@@49 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@49 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@60 $generated@@64) (exists (($generated@@65 T@U) ($generated@@66 T@U) ) (= $generated@@64 ($generated@@38 $generated@@65 $generated@@66))))
 :pattern ( ($generated@@60 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@47 $generated@@67) (= $generated@@67 $generated@@24))
 :pattern ( ($generated@@47 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@68 ($generated@@51 $generated@@72 $generated@@69) $generated@@70 $generated@@71) ($generated@@25 $generated@@72 $generated@@69 $generated@@70 $generated@@71))
 :pattern ( ($generated@@68 ($generated@@51 $generated@@72 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@74)) $generated@@2) (= ($generated@@73 ($generated@@27 $generated@@74)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 Int) ($generated@@78 T@U) ) (! (= ($generated@@75 ($generated@@45 $generated@@76) $generated@@77 $generated@@78) ($generated@@75 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 Int) ($generated@@81 T@U) ) (! (= ($generated@@44 ($generated@@45 $generated@@79) $generated@@80 $generated@@81) ($generated@@44 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@82 $generated@@83) (or ($generated@@47 $generated@@83) ($generated@@60 $generated@@83)))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@85 ($generated@@27 $generated@@84)) (or ($generated@@47 $generated@@85) ($generated@@60 $generated@@85)))
 :pattern ( ($generated@@60 $generated@@85) ($generated@@31 $generated@@26 $generated@@85 ($generated@@27 $generated@@84)))
 :pattern ( ($generated@@47 $generated@@85) ($generated@@31 $generated@@26 $generated@@85 ($generated@@27 $generated@@84)))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@39 $generated@@86 $generated) (and (= ($generated@@51 $generated@@8 ($generated@@49 $generated@@8 $generated@@86)) $generated@@86) ($generated@@31 $generated@@8 ($generated@@49 $generated@@8 $generated@@86) $generated)))
 :pattern ( ($generated@@39 $generated@@86 $generated))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@39 ($generated@@51 $generated@@89 $generated@@87) $generated@@88) ($generated@@31 $generated@@89 $generated@@87 $generated@@88))
 :pattern ( ($generated@@39 ($generated@@51 $generated@@89 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@23 ($generated@@38 $generated@@90 $generated@@91)) $generated@@4)
 :pattern ( ($generated@@38 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@50 ($generated@@38 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@38 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@48 ($generated@@38 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@38 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@27 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@27 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@49 $generated@@99 ($generated@@51 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@51 $generated@@99 $generated@@98))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@101 T@U) ($generated@@102 Int) ($generated@@103 T@U) ) (!  (=> (or ($generated@@100 $generated@@102 $generated@@103) (and (< 1 $generated@@43) ($generated@@31 $generated@@26 $generated@@103 ($generated@@27 $generated)))) (and (=> (not ($generated@@47 $generated@@103)) (let (($generated@@104 ($generated@@48 $generated@@103)))
($generated@@100 $generated@@102 $generated@@104))) (= ($generated@@75 ($generated@@45 $generated@@101) $generated@@102 $generated@@103) (ite ($generated@@47 $generated@@103) 0 (let (($generated@@105 ($generated@@48 $generated@@103)))
(let (($generated@@106 ($generated@@13 ($generated@@49 $generated@@8 ($generated@@50 $generated@@103)))))
(+ (ite (= $generated@@102 $generated@@106) 1 0) ($generated@@75 $generated@@101 $generated@@102 $generated@@105))))))))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@101) $generated@@102 $generated@@103))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (< ($generated@@107 $generated@@109) ($generated@@108 ($generated@@38 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@38 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (< ($generated@@108 $generated@@112) ($generated@@108 ($generated@@38 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@38 $generated@@111 $generated@@112))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@113 T@U) ($generated@@114 Int) ($generated@@115 T@U) ) (!  (=> (or ($generated@@46 $generated@@114 $generated@@115) (and (< 1 $generated@@43) ($generated@@31 $generated@@26 $generated@@115 ($generated@@27 $generated)))) ($generated@@31 $generated@@26 ($generated@@44 $generated@@113 $generated@@114 $generated@@115) ($generated@@27 $generated)))
 :pattern ( ($generated@@44 $generated@@113 $generated@@114 $generated@@115))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@28 $generated@@118) (and ($generated@@60 $generated@@116) ($generated@@25 $generated@@26 $generated@@116 ($generated@@27 $generated@@117) $generated@@118))) ($generated@@68 ($generated@@50 $generated@@116) $generated@@117 $generated@@118))
 :pattern ( ($generated@@68 ($generated@@50 $generated@@116) $generated@@117 $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@119 $generated@@130 $generated@@131 $generated@@132 ($generated@@126 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@135 $generated@@136) $generated@@133)
 :weight 0
)) (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@119 $generated@@137 $generated@@138 $generated@@139 ($generated@@126 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@119 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@119 $generated@@146 $generated@@147 $generated@@148 ($generated@@126 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))) (= ($generated@@6 $generated@@120) 4)) (= ($generated@@6 $generated@@121) 5)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@123 $generated@@155 $generated@@156 ($generated@@127 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@159) $generated@@157)
 :weight 0
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@123 $generated@@160 $generated@@161 ($generated@@127 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@123 $generated@@160 $generated@@161 $generated@@163 $generated@@165)))
 :weight 0
))) (= ($generated@@6 $generated@@124) 6)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@6 ($generated@@125 $generated@@166 $generated@@167)) 7))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@128 ($generated@@125 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@125 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@129 ($generated@@125 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@125 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@11 ($generated@@119 $generated@@120 $generated@@121 $generated@@7 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@11 ($generated@@49 $generated@@7 ($generated@@123 $generated@@121 $generated@@124 ($generated@@123 $generated@@120 ($generated@@125 $generated@@121 $generated@@124) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@7 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (or ($generated@@179 ($generated@@35 $generated@@26 $generated@@181) ($generated@@35 $generated@@26 $generated@@182)) (and (< 2 $generated@@43) (and ($generated@@31 $generated@@26 $generated@@181 ($generated@@27 $generated)) ($generated@@31 $generated@@26 $generated@@182 ($generated@@27 $generated))))) (and (forall (($generated@@183 Int) ) (!  (and ($generated@@100 $generated@@183 ($generated@@35 $generated@@26 $generated@@181)) ($generated@@100 $generated@@183 ($generated@@35 $generated@@26 $generated@@182)))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@180) $generated@@183 $generated@@182))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@180) $generated@@183 $generated@@181))
)) (= ($generated@@178 ($generated@@35 $generated@@26 $generated@@181) ($generated@@35 $generated@@26 $generated@@182)) (forall (($generated@@184 Int) ) (! (= ($generated@@75 ($generated@@45 $generated@@180) $generated@@184 ($generated@@35 $generated@@26 $generated@@181)) ($generated@@75 ($generated@@45 $generated@@180) $generated@@184 ($generated@@35 $generated@@26 $generated@@182)))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@180) $generated@@184 $generated@@182))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@180) $generated@@184 $generated@@181))
)))))
 :weight 3
 :pattern ( ($generated@@178 ($generated@@35 $generated@@26 $generated@@181) ($generated@@35 $generated@@26 $generated@@182)))
))))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@107 ($generated@@51 $generated@@26 $generated@@185)) ($generated@@108 $generated@@185))
 :pattern ( ($generated@@107 ($generated@@51 $generated@@26 $generated@@185)))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@186 T@U) ($generated@@187 Int) ($generated@@188 T@U) ) (!  (=> (or ($generated@@100 ($generated@@33 $generated@@187) ($generated@@35 $generated@@26 $generated@@188)) (and (< 1 $generated@@43) ($generated@@31 $generated@@26 $generated@@188 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@35 $generated@@7 ($generated@@10 ($generated@@47 ($generated@@35 $generated@@26 $generated@@188)))))) (let (($generated@@189 ($generated@@35 $generated@@26 ($generated@@48 ($generated@@35 $generated@@26 $generated@@188)))))
($generated@@100 ($generated@@33 $generated@@187) $generated@@189))) (= ($generated@@75 ($generated@@45 $generated@@186) ($generated@@33 $generated@@187) ($generated@@35 $generated@@26 $generated@@188)) (ite ($generated@@47 ($generated@@35 $generated@@26 $generated@@188)) 0 (let (($generated@@190 ($generated@@35 $generated@@26 ($generated@@48 ($generated@@35 $generated@@26 $generated@@188)))))
(let (($generated@@191 ($generated@@33 ($generated@@13 ($generated@@49 $generated@@8 ($generated@@50 ($generated@@35 $generated@@26 $generated@@188)))))))
(+ (ite (= ($generated@@33 $generated@@187) $generated@@191) 1 0) ($generated@@75 ($generated@@45 $generated@@186) ($generated@@33 $generated@@187) $generated@@190))))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@45 $generated@@186) ($generated@@33 $generated@@187) ($generated@@35 $generated@@26 $generated@@188)))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@39 $generated@@193 ($generated@@27 $generated@@192)) (and (= ($generated@@51 $generated@@26 ($generated@@49 $generated@@26 $generated@@193)) $generated@@193) ($generated@@31 $generated@@26 ($generated@@49 $generated@@26 $generated@@193) ($generated@@27 $generated@@192))))
 :pattern ( ($generated@@39 $generated@@193 ($generated@@27 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@28 $generated@@196) (and ($generated@@60 $generated@@194) ($generated@@25 $generated@@26 $generated@@194 ($generated@@27 $generated@@195) $generated@@196))) ($generated@@25 $generated@@26 ($generated@@48 $generated@@194) ($generated@@27 $generated@@195) $generated@@196))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@48 $generated@@194) ($generated@@27 $generated@@195) $generated@@196))
)))
(assert (= $generated@@24 ($generated@@35 $generated@@26 $generated@@24)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@38 ($generated@@35 $generated@@124 $generated@@197) ($generated@@35 $generated@@26 $generated@@198)) ($generated@@35 $generated@@26 ($generated@@38 $generated@@197 $generated@@198)))
 :pattern ( ($generated@@38 ($generated@@35 $generated@@124 $generated@@197) ($generated@@35 $generated@@26 $generated@@198)))
)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@51 $generated@@8 ($generated@@12 ($generated@@33 $generated@@199))) ($generated@@35 $generated@@124 ($generated@@51 $generated@@8 ($generated@@12 $generated@@199))))
 :pattern ( ($generated@@51 $generated@@8 ($generated@@12 ($generated@@33 $generated@@199))))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@T) ) (! (= ($generated@@51 $generated@@201 ($generated@@35 $generated@@201 $generated@@200)) ($generated@@35 $generated@@124 ($generated@@51 $generated@@201 $generated@@200)))
 :pattern ( ($generated@@51 $generated@@201 ($generated@@35 $generated@@201 $generated@@200)))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@202 T@U) ($generated@@203 Int) ($generated@@204 T@U) ) (!  (=> (or ($generated@@100 $generated@@203 $generated@@204) (and (< 1 $generated@@43) ($generated@@31 $generated@@26 $generated@@204 ($generated@@27 $generated)))) (<= ($generated@@33 0) ($generated@@75 $generated@@202 $generated@@203 $generated@@204)))
 :pattern ( ($generated@@75 $generated@@202 $generated@@203 $generated@@204))
))))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (or ($generated@@179 $generated@@205 $generated@@206) (and (< 2 $generated@@43) (and ($generated@@31 $generated@@26 $generated@@205 ($generated@@27 $generated)) ($generated@@31 $generated@@26 $generated@@206 ($generated@@27 $generated))))) (and (forall (($generated@@207 Int) ) (!  (and ($generated@@100 $generated@@207 $generated@@205) ($generated@@100 $generated@@207 $generated@@206))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@180) $generated@@207 $generated@@206))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@180) $generated@@207 $generated@@205))
)) (= ($generated@@178 $generated@@205 $generated@@206) (forall (($generated@@208 Int) ) (! (= ($generated@@75 ($generated@@45 $generated@@180) $generated@@208 $generated@@205) ($generated@@75 ($generated@@45 $generated@@180) $generated@@208 $generated@@206))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@180) $generated@@208 $generated@@206))
 :pattern ( ($generated@@75 ($generated@@45 $generated@@180) $generated@@208 $generated@@205))
)))))
 :pattern ( ($generated@@178 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! ($generated@@25 $generated@@8 $generated@@210 $generated $generated@@209)
 :pattern ( ($generated@@25 $generated@@8 $generated@@210 $generated $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@28 $generated@@214) (= ($generated@@25 $generated@@26 ($generated@@38 $generated@@212 $generated@@213) ($generated@@27 $generated@@211) $generated@@214)  (and ($generated@@68 $generated@@212 $generated@@211 $generated@@214) ($generated@@25 $generated@@26 $generated@@213 ($generated@@27 $generated@@211) $generated@@214))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@38 $generated@@212 $generated@@213) ($generated@@27 $generated@@211) $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ) (! ($generated@@31 $generated@@8 $generated@@215 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@215 $generated))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@216 T@U) ($generated@@217 Int) ($generated@@218 T@U) ) (!  (=> (or ($generated@@46 $generated@@217 $generated@@218) (and (< 1 $generated@@43) ($generated@@31 $generated@@26 $generated@@218 ($generated@@27 $generated)))) (and (=> (not ($generated@@47 $generated@@218)) (let (($generated@@219 ($generated@@48 $generated@@218)))
(let (($generated@@220 ($generated@@13 ($generated@@49 $generated@@8 ($generated@@50 $generated@@218)))))
 (=> (< $generated@@220 $generated@@217) ($generated@@46 $generated@@217 $generated@@219))))) (= ($generated@@44 ($generated@@45 $generated@@216) $generated@@217 $generated@@218) (ite ($generated@@47 $generated@@218) ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@217)) ($generated@@35 $generated@@26 $generated@@24)) (let (($generated@@221 ($generated@@48 $generated@@218)))
(let (($generated@@222 ($generated@@13 ($generated@@49 $generated@@8 ($generated@@50 $generated@@218)))))
(ite (<= $generated@@217 $generated@@222) ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@217)) $generated@@218) ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@222)) ($generated@@44 $generated@@216 $generated@@217 $generated@@221)))))))))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@216) $generated@@217 $generated@@218))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@223 () Int)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@232  (=> (= (ControlFlow 0 3) (- 0 2)) (=> ($generated@@179 ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@223)) $generated@@224) ($generated@@44 ($generated@@45 $generated@@180) $generated@@223 $generated@@224)) (or ($generated@@178 ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@223)) $generated@@224) ($generated@@44 ($generated@@45 $generated@@180) $generated@@223 $generated@@224)) (forall (($generated@@233 Int) ) (! (= ($generated@@75 ($generated@@45 ($generated@@45 $generated@@180)) $generated@@233 ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@223)) $generated@@224)) ($generated@@75 ($generated@@45 ($generated@@45 $generated@@180)) $generated@@233 ($generated@@44 ($generated@@45 ($generated@@45 $generated@@180)) $generated@@223 $generated@@224)))
 :pattern ( ($generated@@75 ($generated@@45 ($generated@@45 $generated@@180)) $generated@@233 ($generated@@44 ($generated@@45 ($generated@@45 $generated@@180)) $generated@@223 $generated@@224)))
 :pattern ( ($generated@@75 ($generated@@45 ($generated@@45 $generated@@180)) $generated@@233 ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@223)) $generated@@224)))
)))))))
(let (($generated@@234  (=> (= $generated@@224 ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@225)) $generated@@226)) (=> (and ($generated@@31 $generated@@26 $generated@@226 ($generated@@27 $generated)) (= (ControlFlow 0 5) 3)) $generated@@232))))
(let (($generated@@235  (=> (and (= $generated@@224 $generated@@24) (= (ControlFlow 0 4) 3)) $generated@@232)))
(let (($generated@@236 true))
(let (($generated@@237  (=> (or (not (= $generated@@224 $generated@@24)) (not true)) (and (=> (= (ControlFlow 0 6) 5) $generated@@234) (=> (= (ControlFlow 0 6) 1) $generated@@236)))))
(let (($generated@@238  (=> (and (= $generated@@227 ($generated@@122 $generated@@228 $generated@@229 $generated@@1 false)) ($generated@@82 $generated@@224)) (=> (and (and ($generated@@28 $generated@@230) ($generated@@231 $generated@@230)) (and (= $generated@@229 $generated@@230) (forall (($generated@@239 T@U) ($generated@@240 Int) ) (!  (=> (and (and ($generated@@31 $generated@@26 $generated@@239 ($generated@@27 $generated)) ($generated@@11 ($generated@@35 $generated@@7 ($generated@@10 true)))) (or (< ($generated@@108 $generated@@239) ($generated@@108 $generated@@224)) (and (= ($generated@@108 $generated@@239) ($generated@@108 $generated@@224)) (and (<= 0 $generated@@240) (< $generated@@240 $generated@@223))))) ($generated@@178 ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@240)) $generated@@239) ($generated@@44 ($generated@@45 $generated@@180) $generated@@240 $generated@@239)))
 :pattern ( ($generated@@44 ($generated@@45 $generated@@180) $generated@@240 $generated@@239))
 :pattern ( ($generated@@38 ($generated@@51 $generated@@8 ($generated@@12 $generated@@240)) $generated@@239))
)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@235) (=> (= (ControlFlow 0 7) 6) $generated@@237))))))
(let (($generated@@241  (=> (and ($generated@@28 $generated@@229) ($generated@@231 $generated@@229)) (=> (and (and (and ($generated@@31 $generated@@26 $generated@@224 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@224 ($generated@@27 $generated) $generated@@229)) ($generated@@82 $generated@@224)) (and (= 3 $generated@@43) (= (ControlFlow 0 8) 7))) $generated@@238))))
$generated@@241))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
