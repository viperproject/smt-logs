(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U Int) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U Int) Bool)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (Int Int) Int)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@87 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@91 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@T T@T) T@T)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@T) T@T)
(declare-fun $generated@@97 (T@T) T@T)
(declare-fun $generated@@146 (T@U Int Int) Bool)
(declare-fun $generated@@147 (T@U Int Int) Bool)
(declare-fun $generated@@152 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@23 T@U) ($generated@@24 Int) ) (!  (=> (= $generated@@24 0) (= ($generated@@22 $generated@@23 $generated@@24) $generated@@23))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 Int) ) (! (= ($generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@T) ) (! (= ($generated@@27 $generated@@29 $generated@@28) $generated@@28)
 :pattern ( ($generated@@27 $generated@@29 $generated@@28))
)))
(assert (= ($generated@@3 $generated@@33) 3))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@34 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@41 ($generated@@36 $generated)) (<= ($generated@@25 2) ($generated@@25 $generated@@42))))) (and (=> (or (not (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@41)) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 1))) ($generated@@25 $generated@@42))) (= ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)) (ite (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@41)) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 0)))) ($generated@@39 ($generated@@25 $generated@@42) ($generated@@25 ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 1))) ($generated@@25 $generated@@42)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (and (<= 0 $generated@@44) (<= $generated@@44 ($generated@@20 $generated@@43))) (= ($generated@@20 ($generated@@22 $generated@@43 $generated@@44)) (- ($generated@@20 $generated@@43) $generated@@44)))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@43 $generated@@44)))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@47)  (and (= ($generated@@20 $generated@@46) ($generated@@20 $generated@@47)) (forall (($generated@@48 Int) ) (!  (=> (and (<= 0 $generated@@48) (< $generated@@48 ($generated@@20 $generated@@46))) (= ($generated@@38 $generated@@46 $generated@@48) ($generated@@38 $generated@@47 $generated@@48)))
 :pattern ( ($generated@@38 $generated@@46 $generated@@48))
 :pattern ( ($generated@@38 $generated@@47 $generated@@48))
))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@37 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@37 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@57 $generated@@54) $generated@@55 $generated@@56) ($generated@@53 $generated@@57 $generated@@54 $generated@@55 $generated@@56))
 :pattern ( ($generated@@52 ($generated@@49 $generated@@57 $generated@@54) $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 Int) ($generated@@60 Int) ) (!  (=> (and (and (<= 0 $generated@@59) (<= 0 $generated@@60)) (< $generated@@60 (- ($generated@@20 $generated@@58) $generated@@59))) (= ($generated@@38 ($generated@@22 $generated@@58 $generated@@59) $generated@@60) ($generated@@38 $generated@@58 (+ $generated@@60 $generated@@59))))
 :weight 25
 :pattern ( ($generated@@38 ($generated@@22 $generated@@58 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 Int) ) (! (= ($generated@@31 ($generated@@32 $generated@@61) $generated@@62 $generated@@63) ($generated@@31 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@45 $generated@@64 $generated@@65) (= $generated@@64 $generated@@65))
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated) (and (= ($generated@@49 $generated@@5 ($generated@@37 $generated@@5 $generated@@67)) $generated@@67) ($generated@@35 $generated@@5 ($generated@@37 $generated@@5 $generated@@67) $generated)))
 :pattern ( ($generated@@66 $generated@@67 $generated))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@66 ($generated@@49 $generated@@70 $generated@@68) $generated@@69) ($generated@@35 $generated@@70 $generated@@68 $generated@@69))
 :pattern ( ($generated@@66 ($generated@@49 $generated@@70 $generated@@68) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (<= 0 ($generated@@20 $generated@@71))
 :pattern ( ($generated@@20 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@53 $generated@@33 $generated@@72 ($generated@@36 $generated@@73) $generated@@74) (forall (($generated@@75 Int) ) (!  (=> (and (<= 0 $generated@@75) (< $generated@@75 ($generated@@20 $generated@@72))) ($generated@@52 ($generated@@38 $generated@@72 $generated@@75) $generated@@73 $generated@@74))
 :pattern ( ($generated@@38 $generated@@72 $generated@@75))
)))
 :pattern ( ($generated@@53 $generated@@33 $generated@@72 ($generated@@36 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 ($generated@@36 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@36 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@19 ($generated@@36 $generated@@78)) $generated@@1)
 :pattern ( ($generated@@36 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@37 $generated@@80 ($generated@@49 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@49 $generated@@80 $generated@@79))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 Int) ) (!  (=> (or ($generated@@34 $generated@@82 $generated@@83) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@82 ($generated@@36 $generated)) (<= ($generated@@25 2) $generated@@83)))) (and (=> (or (not (= ($generated@@20 $generated@@82) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@22 $generated@@82 ($generated@@25 1)) $generated@@83)) (= ($generated@@31 ($generated@@32 $generated@@81) $generated@@82 $generated@@83) (ite (= ($generated@@20 $generated@@82) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@82 ($generated@@25 0)))) ($generated@@39 $generated@@83 ($generated@@31 $generated@@81 ($generated@@22 $generated@@82 ($generated@@25 1)) $generated@@83)))))))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@81) $generated@@82 $generated@@83))
))))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 Int) ) (!  (=> (or ($generated@@34 ($generated@@27 $generated@@33 $generated@@85) $generated@@86) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@85 ($generated@@36 $generated)) (<= ($generated@@25 2) $generated@@86)))) (and (=> (or (not (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@85)) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@85) ($generated@@25 1))) $generated@@86)) (= ($generated@@31 ($generated@@32 $generated@@84) ($generated@@27 $generated@@33 $generated@@85) $generated@@86) (ite (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@85)) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@85) ($generated@@25 0)))) ($generated@@39 $generated@@86 ($generated@@31 ($generated@@32 $generated@@84) ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@85) ($generated@@25 1))) $generated@@86)))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@32 $generated@@84) ($generated@@27 $generated@@33 $generated@@85) $generated@@86))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@87 $generated@@98 $generated@@99 $generated@@100 ($generated@@94 $generated@@98 $generated@@99 $generated@@100 $generated@@102 $generated@@103 $generated@@104 $generated@@101) $generated@@103 $generated@@104) $generated@@101)
 :weight 0
)) (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (or (= $generated@@110 $generated@@112) (= ($generated@@87 $generated@@105 $generated@@106 $generated@@107 ($generated@@94 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@112 $generated@@113) ($generated@@87 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@112 $generated@@113)))
 :weight 0
)) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@87 $generated@@114 $generated@@115 $generated@@116 ($generated@@94 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@87 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)))) (= ($generated@@3 $generated@@88) 4)) (= ($generated@@3 $generated@@89) 5)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@91 $generated@@123 $generated@@124 ($generated@@95 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@125) $generated@@127) $generated@@125)
 :weight 0
))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@132 $generated@@133) (= ($generated@@91 $generated@@128 $generated@@129 ($generated@@95 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@133) ($generated@@91 $generated@@128 $generated@@129 $generated@@131 $generated@@133)))
 :weight 0
))) (= ($generated@@3 $generated@@92) 6)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (= ($generated@@3 ($generated@@93 $generated@@134 $generated@@135)) 7))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (! (= ($generated@@96 ($generated@@93 $generated@@136 $generated@@137)) $generated@@136)
 :pattern ( ($generated@@93 $generated@@136 $generated@@137))
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@97 ($generated@@93 $generated@@138 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@93 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Bool) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@8 ($generated@@87 $generated@@88 $generated@@89 $generated@@4 ($generated@@90 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@140)) (not true)) ($generated@@8 ($generated@@37 $generated@@4 ($generated@@91 $generated@@89 $generated@@92 ($generated@@91 $generated@@88 ($generated@@93 $generated@@89 $generated@@92) $generated@@141 $generated@@144) $generated@@142)))) $generated@@143))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89 $generated@@4 ($generated@@90 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@148 T@U) ($generated@@149 Int) ($generated@@150 Int) ) (!  (=> (or ($generated@@147 $generated@@148 $generated@@149 $generated@@150) (and (< 0 $generated@@30) ($generated@@35 $generated@@33 $generated@@148 ($generated@@36 $generated)))) (= ($generated@@146 $generated@@148 $generated@@149 $generated@@150)  (and (and (<= ($generated@@25 2) $generated@@150) (and (<= $generated@@149 ($generated@@25 0)) (< 0 (+ $generated@@149 $generated@@150)))) (forall (($generated@@151 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@151) (< $generated@@151 ($generated@@20 $generated@@148))) (<= $generated@@149 ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@148 $generated@@151))))) (=> (and (<= ($generated@@25 0) $generated@@151) (< $generated@@151 ($generated@@20 $generated@@148))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@148 $generated@@151))) (+ $generated@@149 $generated@@150))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@148 $generated@@151)))
)))))
 :pattern ( ($generated@@146 $generated@@148 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@153 Int) ($generated@@154 Int) ) (! (= ($generated@@152 $generated@@153 $generated@@154) (mod $generated@@153 $generated@@154))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 Int) ($generated@@156 Int) ) (! (= ($generated@@39 $generated@@155 $generated@@156) (* $generated@@155 $generated@@156))
 :pattern ( ($generated@@39 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@66 $generated@@157 ($generated@@36 $generated@@158)) (and (= ($generated@@49 $generated@@33 ($generated@@37 $generated@@33 $generated@@157)) $generated@@157) ($generated@@35 $generated@@33 ($generated@@37 $generated@@33 $generated@@157) ($generated@@36 $generated@@158))))
 :pattern ( ($generated@@66 $generated@@157 ($generated@@36 $generated@@158)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 Int) ($generated@@161 Int) ) (!  (=> (and (and (<= 0 $generated@@160) (<= $generated@@160 $generated@@161)) (< $generated@@161 ($generated@@20 $generated@@159))) (= ($generated@@38 ($generated@@22 $generated@@159 $generated@@160) (- $generated@@161 $generated@@160)) ($generated@@38 $generated@@159 $generated@@161)))
 :weight 25
 :pattern ( ($generated@@38 $generated@@159 $generated@@161) ($generated@@22 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ) (!  (=> (and (and (<= 0 $generated@@163) (<= 0 $generated@@164)) (<= (+ $generated@@163 $generated@@164) ($generated@@20 $generated@@162))) (= ($generated@@22 ($generated@@22 $generated@@162 $generated@@163) $generated@@164) ($generated@@22 $generated@@162 (+ $generated@@163 $generated@@164))))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@162 $generated@@163) $generated@@164))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@165 T@U) ($generated@@166 Int) ($generated@@167 Int) ) (!  (=> (or ($generated@@147 ($generated@@27 $generated@@33 $generated@@165) ($generated@@25 $generated@@166) ($generated@@25 $generated@@167)) (and (< 0 $generated@@30) ($generated@@35 $generated@@33 $generated@@165 ($generated@@36 $generated)))) (= ($generated@@146 ($generated@@27 $generated@@33 $generated@@165) ($generated@@25 $generated@@166) ($generated@@25 $generated@@167))  (and (and (<= ($generated@@25 2) ($generated@@25 $generated@@167)) (and (<= ($generated@@25 $generated@@166) ($generated@@25 0)) (< 0 (+ $generated@@166 $generated@@167)))) (forall (($generated@@168 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@168) (< $generated@@168 ($generated@@20 ($generated@@27 $generated@@33 $generated@@165)))) (<= ($generated@@25 $generated@@166) ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@165) $generated@@168))))) (=> (and (<= ($generated@@25 0) $generated@@168) (< $generated@@168 ($generated@@20 ($generated@@27 $generated@@33 $generated@@165)))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@165) $generated@@168))) (+ $generated@@166 $generated@@167))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@165 $generated@@168)))
)))))
 :weight 3
 :pattern ( ($generated@@146 ($generated@@27 $generated@@33 $generated@@165) ($generated@@25 $generated@@166) ($generated@@25 $generated@@167)))
))))
(assert (forall (($generated@@169 Int) ) (! (= ($generated@@49 $generated@@5 ($generated@@9 ($generated@@25 $generated@@169))) ($generated@@27 $generated@@92 ($generated@@49 $generated@@5 ($generated@@9 $generated@@169))))
 :pattern ( ($generated@@49 $generated@@5 ($generated@@9 ($generated@@25 $generated@@169))))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@T) ) (! (= ($generated@@49 $generated@@171 ($generated@@27 $generated@@171 $generated@@170)) ($generated@@27 $generated@@92 ($generated@@49 $generated@@171 $generated@@170)))
 :pattern ( ($generated@@49 $generated@@171 ($generated@@27 $generated@@171 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> (= ($generated@@20 $generated@@172) 0) (= $generated@@172 $generated@@21))
 :pattern ( ($generated@@20 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! ($generated@@53 $generated@@5 $generated@@174 $generated $generated@@173)
 :pattern ( ($generated@@53 $generated@@5 $generated@@174 $generated $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@175 ($generated@@36 $generated@@176)) (forall (($generated@@177 Int) ) (!  (=> (and (<= 0 $generated@@177) (< $generated@@177 ($generated@@20 $generated@@175))) ($generated@@66 ($generated@@38 $generated@@175 $generated@@177) $generated@@176))
 :pattern ( ($generated@@38 $generated@@175 $generated@@177))
)))
 :pattern ( ($generated@@35 $generated@@33 $generated@@175 ($generated@@36 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (! ($generated@@35 $generated@@5 $generated@@178 $generated)
 :pattern ( ($generated@@35 $generated@@5 $generated@@178 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () Int)
(declare-fun $generated@@190 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@191 true))
(let (($generated@@192  (=> (and (= ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@179 ($generated@@25 0)))) $generated@@180) (= (ControlFlow 0 4) 1)) $generated@@191)))
(let (($generated@@193  (=> (or (not (= ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@179 ($generated@@25 0)))) $generated@@180)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= 0 ($generated@@25 0)) (< ($generated@@25 0) ($generated@@20 $generated@@179)))) (=> (and (<= 0 ($generated@@25 0)) (< ($generated@@25 0) ($generated@@20 $generated@@179))) (=> (= (ControlFlow 0 2) 1) $generated@@191))))))
(let (($generated@@194  (=> (= $generated@@181 ($generated@@90 $generated@@182 $generated@@183 $generated@@2 false)) (=> (and ($generated@@53 $generated@@33 $generated@@179 ($generated@@36 $generated) $generated@@183) ($generated@@53 $generated@@5 ($generated@@9 $generated@@184) $generated $generated@@183)) (=> (and (and ($generated@@53 $generated@@5 ($generated@@9 $generated@@185) $generated $generated@@183) ($generated@@147 $generated@@179 $generated@@184 $generated@@185)) (and ($generated@@146 $generated@@179 $generated@@184 $generated@@185) (not ($generated@@45 $generated@@179 $generated@@21)))) (=> (and (and (and ($generated@@186 $generated@@187) ($generated@@188 $generated@@187)) (= $generated@@183 $generated@@187)) (and ($generated@@53 $generated@@33 $generated@@179 ($generated@@36 $generated) $generated@@187) ($generated@@53 $generated@@5 ($generated@@9 $generated@@185) $generated $generated@@187))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (<= ($generated@@25 2) $generated@@185)) (=> (and (<= ($generated@@25 2) $generated@@185) ($generated@@34 $generated@@179 $generated@@185)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (not (= $generated@@185 0)) (not true))) (=> (or (not (= $generated@@185 0)) (not true)) (=> (and (and (= $generated@@189 ($generated@@152 ($generated@@31 ($generated@@32 $generated@@190) $generated@@179 $generated@@185) $generated@@185)) ($generated@@34 $generated@@179 $generated@@185)) (and ($generated@@35 $generated@@5 ($generated@@9 $generated@@189) $generated) (= $generated@@180 $generated@@189))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 ($generated@@25 0)) (< ($generated@@25 0) ($generated@@20 $generated@@179)))) (=> (and (<= 0 ($generated@@25 0)) (< ($generated@@25 0) ($generated@@20 $generated@@179))) (and (=> (= (ControlFlow 0 5) 2) $generated@@193) (=> (= (ControlFlow 0 5) 4) $generated@@192)))))))))))))))
(let (($generated@@195  (=> (and ($generated@@186 $generated@@183) ($generated@@188 $generated@@183)) (=> (and (and ($generated@@35 $generated@@33 $generated@@179 ($generated@@36 $generated)) ($generated@@53 $generated@@33 $generated@@179 ($generated@@36 $generated) $generated@@183)) (and (= 3 $generated@@30) (= (ControlFlow 0 9) 5))) $generated@@194))))
$generated@@195))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
