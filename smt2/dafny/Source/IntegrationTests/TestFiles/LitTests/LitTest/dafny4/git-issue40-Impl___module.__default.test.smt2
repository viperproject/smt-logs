(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@46 (T@U Int) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) Int)
(declare-fun $generated@@49 (T@U) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () Int)
(declare-fun $generated@@57 (T@U Int T@U) T@U)
(declare-fun $generated@@58 (T@U Int T@U) Bool)
(declare-fun $generated@@59 (Int) Int)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@T T@U T@U) Bool)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@123 (T@U) Int)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 (T@T T@T) T@T)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert  (and (= ($generated@@11 $generated@@28) 3) (= ($generated@@11 $generated@@35) 4)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (and ($generated@@33 $generated@@38) (and ($generated@@34 $generated@@37) ($generated@@27 $generated@@35 $generated@@37 $generated@@36 $generated@@38))) ($generated@@27 $generated@@28 ($generated@@29 $generated@@37) ($generated@@30 ($generated@@31 $generated@@32)) $generated@@38))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@29 $generated@@37) ($generated@@30 ($generated@@31 $generated@@32)) $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! ($generated@@27 $generated@@13 $generated@@40 $generated@@39 $generated@@41)
 :pattern ( ($generated@@27 $generated@@13 $generated@@40 $generated@@39 $generated@@41))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! ($generated@@27 $generated@@13 $generated@@42 $generated@@32 $generated@@43)
 :pattern ( ($generated@@27 $generated@@13 $generated@@42 $generated@@32 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@44 $generated@@45) ($generated@@34 $generated@@45))
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 Int) ) (!  (=> (and (<= 0 $generated@@52) (< $generated@@52 ($generated@@48 $generated@@51))) (< ($generated@@49 ($generated@@50 $generated@@35 ($generated@@46 $generated@@51 $generated@@52))) ($generated@@49 ($generated@@47 $generated@@51))))
 :pattern ( ($generated@@46 $generated@@51 $generated@@52) ($generated@@47 $generated@@51))
)))
(assert (= ($generated@@48 $generated@@53) 0))
(assert (= ($generated@@54 $generated@@55) $generated@@5))
(assert  (=> (<= 0 $generated@@56) (forall (($generated@@62 T@U) ($generated@@63 Int) ($generated@@64 T@U) ) (!  (=> (or ($generated@@58 $generated@@62 $generated@@63 $generated@@64) (and (< 0 $generated@@56) (and (<= ($generated@@59 0) $generated@@63) ($generated@@60 $generated@@64 $generated@@62)))) (and (and (= ($generated@@48 ($generated@@57 $generated@@62 $generated@@63 $generated@@64)) $generated@@63) (forall (($generated@@65 Int) ) (!  (=> (and (<= ($generated@@59 0) $generated@@65) (< $generated@@65 $generated@@63)) (= ($generated@@46 ($generated@@57 $generated@@62 $generated@@63 $generated@@64) $generated@@65) $generated@@64))
 :pattern ( ($generated@@46 ($generated@@57 $generated@@62 $generated@@63 $generated@@64) $generated@@65))
))) ($generated@@61 $generated@@28 ($generated@@57 $generated@@62 $generated@@63 $generated@@64) ($generated@@30 $generated@@62))))
 :pattern ( ($generated@@57 $generated@@62 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@61 $generated@@35 $generated@@66 $generated@@36) ($generated@@34 $generated@@66))
 :pattern ( ($generated@@34 $generated@@66) ($generated@@61 $generated@@35 $generated@@66 $generated@@36))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@33 $generated@@68) ($generated@@27 $generated@@35 $generated@@55 ($generated@@31 $generated@@67) $generated@@68))
 :pattern ( ($generated@@27 $generated@@35 $generated@@55 ($generated@@31 $generated@@67) $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! ($generated@@61 $generated@@35 $generated@@55 ($generated@@31 $generated@@69))
 :pattern ( ($generated@@61 $generated@@35 $generated@@55 ($generated@@31 $generated@@69)))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@70 $generated@@71 $generated@@72) (= $generated@@71 $generated@@72))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@59 $generated@@73) $generated@@73)
 :pattern ( ($generated@@59 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert  (=> (<= 0 $generated@@56) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 Int) ($generated@@81 T@U) ) (!  (=> (and (or ($generated@@58 $generated@@79 $generated@@80 $generated@@81) (and (< 0 $generated@@56) (and (<= ($generated@@59 0) $generated@@80) (and ($generated@@60 $generated@@81 $generated@@79) ($generated@@77 $generated@@81 $generated@@79 $generated@@78))))) ($generated@@33 $generated@@78)) ($generated@@27 $generated@@28 ($generated@@57 $generated@@79 $generated@@80 $generated@@81) ($generated@@30 $generated@@79) $generated@@78))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@57 $generated@@79 $generated@@80 $generated@@81) ($generated@@30 $generated@@79) $generated@@78))
))))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@34 $generated@@82) (= ($generated@@54 $generated@@82) $generated@@6))
 :pattern ( ($generated@@34 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@83 $generated@@84 $generated@@85)  (and (= ($generated@@48 $generated@@84) ($generated@@48 $generated@@85)) (forall (($generated@@86 Int) ) (!  (=> (and (<= 0 $generated@@86) (< $generated@@86 ($generated@@48 $generated@@84))) (= ($generated@@46 $generated@@84 $generated@@86) ($generated@@46 $generated@@85 $generated@@86)))
 :pattern ( ($generated@@46 $generated@@84 $generated@@86))
 :pattern ( ($generated@@46 $generated@@85 $generated@@86))
))))
 :pattern ( ($generated@@83 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@50 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@50 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@34 $generated@@90) (exists (($generated@@91 T@U) ) (= $generated@@90 ($generated@@47 $generated@@91))))
 :pattern ( ($generated@@34 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@61 $generated@@13 $generated@@92 $generated@@39) (<= ($generated@@59 0) ($generated@@18 $generated@@92)))
 :pattern ( ($generated@@61 $generated@@13 $generated@@92 $generated@@39))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@77 ($generated@@87 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@27 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@77 ($generated@@87 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@97 ($generated@@31 $generated@@99)) $generated@@3) (= ($generated@@98 ($generated@@31 $generated@@99)) $generated@@9))
 :pattern ( ($generated@@31 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@60 $generated@@100 $generated@@39) (and (= ($generated@@87 $generated@@13 ($generated@@50 $generated@@13 $generated@@100)) $generated@@100) ($generated@@61 $generated@@13 ($generated@@50 $generated@@13 $generated@@100) $generated@@39)))
 :pattern ( ($generated@@60 $generated@@100 $generated@@39))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@60 $generated@@101 $generated@@32) (and (= ($generated@@87 $generated@@13 ($generated@@50 $generated@@13 $generated@@101)) $generated@@101) ($generated@@61 $generated@@13 ($generated@@50 $generated@@13 $generated@@101) $generated@@32)))
 :pattern ( ($generated@@60 $generated@@101 $generated@@32))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@60 $generated@@102 $generated@@36) (and (= ($generated@@87 $generated@@35 ($generated@@50 $generated@@35 $generated@@102)) $generated@@102) ($generated@@61 $generated@@35 ($generated@@50 $generated@@35 $generated@@102) $generated@@36)))
 :pattern ( ($generated@@60 $generated@@102 $generated@@36))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@83 $generated@@103 $generated@@104) (= $generated@@103 $generated@@104))
 :pattern ( ($generated@@83 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@60 ($generated@@87 $generated@@107 $generated@@105) $generated@@106) ($generated@@61 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@60 ($generated@@87 $generated@@107 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@61 $generated@@35 ($generated@@47 $generated@@108) $generated@@36) ($generated@@61 $generated@@28 $generated@@108 ($generated@@30 ($generated@@31 $generated@@32))))
 :pattern ( ($generated@@61 $generated@@35 ($generated@@47 $generated@@108) $generated@@36))
)))
(assert (forall (($generated@@109 T@U) ) (! (<= 0 ($generated@@48 $generated@@109))
 :pattern ( ($generated@@48 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@110 ($generated@@30 $generated@@111) $generated@@112) (forall (($generated@@113 Int) ) (!  (=> (and (<= 0 $generated@@113) (< $generated@@113 ($generated@@48 $generated@@110))) ($generated@@77 ($generated@@46 $generated@@110 $generated@@113) $generated@@111 $generated@@112))
 :pattern ( ($generated@@46 $generated@@110 $generated@@113))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@110 ($generated@@30 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@30 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@30 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@97 ($generated@@30 $generated@@116)) $generated)
 :pattern ( ($generated@@30 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@31 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@31 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@54 ($generated@@47 $generated@@119)) $generated@@6)
 :pattern ( ($generated@@47 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@29 ($generated@@47 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@47 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@50 $generated@@122 ($generated@@87 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@87 $generated@@122 $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ) (! (< ($generated@@123 $generated@@124) ($generated@@49 ($generated@@47 $generated@@124)))
 :pattern ( ($generated@@47 $generated@@124))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@125 $generated@@136 $generated@@137 $generated@@138 ($generated@@132 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@125 $generated@@143 $generated@@144 $generated@@145 ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@125 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@125 $generated@@152 $generated@@153 $generated@@154 ($generated@@132 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@125 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (= ($generated@@11 $generated@@126) 5)) (= ($generated@@11 $generated@@127) 6)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@129 $generated@@161 $generated@@162 ($generated@@133 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@163) $generated@@165) $generated@@163)
 :weight 0
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@170 $generated@@171) (= ($generated@@129 $generated@@166 $generated@@167 ($generated@@133 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@168) $generated@@171) ($generated@@129 $generated@@166 $generated@@167 $generated@@169 $generated@@171)))
 :weight 0
))) (= ($generated@@11 $generated@@130) 7)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@11 ($generated@@131 $generated@@172 $generated@@173)) 8))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@134 ($generated@@131 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@131 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@135 ($generated@@131 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@131 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Bool) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@16 ($generated@@125 $generated@@126 $generated@@127 $generated@@12 ($generated@@128 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))  (=> (and (or (not (= $generated@@182 $generated@@178)) (not true)) ($generated@@16 ($generated@@50 $generated@@12 ($generated@@129 $generated@@127 $generated@@130 ($generated@@129 $generated@@126 ($generated@@131 $generated@@127 $generated@@130) $generated@@179 $generated@@182) $generated@@180)))) $generated@@181))
 :pattern ( ($generated@@125 $generated@@126 $generated@@127 $generated@@12 ($generated@@128 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@70 $generated@@184 $generated@@185) ($generated@@83 ($generated@@29 $generated@@184) ($generated@@29 $generated@@185)))
 :pattern ( ($generated@@70 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@60 $generated@@186 ($generated@@30 $generated@@187)) (and (= ($generated@@87 $generated@@28 ($generated@@50 $generated@@28 $generated@@186)) $generated@@186) ($generated@@61 $generated@@28 ($generated@@50 $generated@@28 $generated@@186) ($generated@@30 $generated@@187))))
 :pattern ( ($generated@@60 $generated@@186 ($generated@@30 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@60 $generated@@189 ($generated@@31 $generated@@188)) (and (= ($generated@@87 $generated@@35 ($generated@@50 $generated@@35 $generated@@189)) $generated@@189) ($generated@@61 $generated@@35 ($generated@@50 $generated@@35 $generated@@189) ($generated@@31 $generated@@188))))
 :pattern ( ($generated@@60 $generated@@189 ($generated@@31 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@33 $generated@@191) ($generated@@61 $generated@@35 $generated@@190 $generated@@36)) ($generated@@27 $generated@@35 $generated@@190 $generated@@36 $generated@@191))
 :pattern ( ($generated@@27 $generated@@35 $generated@@190 $generated@@36 $generated@@191))
)))
(assert (= ($generated@@97 $generated@@39) $generated@@1))
(assert (= ($generated@@98 $generated@@39) $generated@@7))
(assert (= ($generated@@97 $generated@@32) $generated@@2))
(assert (= ($generated@@98 $generated@@32) $generated@@8))
(assert (= ($generated@@97 $generated@@36) $generated@@4))
(assert (= ($generated@@98 $generated@@36) $generated@@10))
(assert (= $generated@@55 ($generated@@74 $generated@@35 $generated@@55)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@61 $generated@@13 $generated@@192 $generated@@32)  (and (<= ($generated@@59 0) ($generated@@18 $generated@@192)) (< ($generated@@18 $generated@@192) 10)))
 :pattern ( ($generated@@61 $generated@@13 $generated@@192 $generated@@32))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@87 $generated@@13 ($generated@@17 ($generated@@59 $generated@@193))) ($generated@@74 $generated@@130 ($generated@@87 $generated@@13 ($generated@@17 $generated@@193))))
 :pattern ( ($generated@@87 $generated@@13 ($generated@@17 ($generated@@59 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ) (! (= ($generated@@47 ($generated@@74 $generated@@28 $generated@@194)) ($generated@@74 $generated@@35 ($generated@@47 $generated@@194)))
 :pattern ( ($generated@@47 ($generated@@74 $generated@@28 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@87 $generated@@196 ($generated@@74 $generated@@196 $generated@@195)) ($generated@@74 $generated@@130 ($generated@@87 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@87 $generated@@196 ($generated@@74 $generated@@196 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ) (!  (=> (= ($generated@@48 $generated@@197) 0) (= $generated@@197 $generated@@53))
 :pattern ( ($generated@@48 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@61 $generated@@28 $generated@@198 ($generated@@30 $generated@@199)) (forall (($generated@@200 Int) ) (!  (=> (and (<= 0 $generated@@200) (< $generated@@200 ($generated@@48 $generated@@198))) ($generated@@60 ($generated@@46 $generated@@198 $generated@@200) $generated@@199))
 :pattern ( ($generated@@46 $generated@@198 $generated@@200))
)))
 :pattern ( ($generated@@61 $generated@@28 $generated@@198 ($generated@@30 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@48 $generated@@201))) (< ($generated@@49 ($generated@@50 $generated@@35 ($generated@@46 $generated@@201 $generated@@202))) ($generated@@123 $generated@@201)))
 :pattern ( ($generated@@49 ($generated@@50 $generated@@35 ($generated@@46 $generated@@201 $generated@@202))))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@215  (=> (= $generated@@203 ($generated@@128 $generated@@204 $generated@@205 $generated@@0 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@61 $generated@@13 ($generated@@17 ($generated@@59 1)) $generated@@39)) (=> ($generated@@61 $generated@@13 ($generated@@17 ($generated@@59 1)) $generated@@39) (=> (and (and (and (= $generated@@206 ($generated@@59 1)) ($generated@@27 $generated@@13 ($generated@@17 $generated@@206) $generated@@39 $generated@@205)) (and (= $generated@@207 ($generated@@74 $generated@@35 $generated@@55)) ($generated@@27 $generated@@35 $generated@@207 ($generated@@31 $generated@@32) $generated@@205))) (and (and ($generated@@58 ($generated@@31 $generated@@32) ($generated@@59 1) ($generated@@87 $generated@@35 ($generated@@74 $generated@@35 $generated@@55))) ($generated@@58 ($generated@@31 $generated@@32) ($generated@@59 1) ($generated@@87 $generated@@35 ($generated@@74 $generated@@35 $generated@@55)))) (and (= $generated@@208 ($generated@@57 ($generated@@31 $generated@@32) ($generated@@59 1) ($generated@@87 $generated@@35 ($generated@@74 $generated@@35 $generated@@55)))) (= $generated@@209 ($generated@@47 $generated@@208))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@61 $generated@@13 ($generated@@17 ($generated@@59 1)) $generated@@39)) (=> ($generated@@61 $generated@@13 ($generated@@17 ($generated@@59 1)) $generated@@39) (=> (= $generated@@210 ($generated@@59 1)) (=> (and (and (and ($generated@@27 $generated@@13 ($generated@@17 $generated@@210) $generated@@39 $generated@@205) (= $generated@@211 ($generated@@74 $generated@@35 $generated@@55))) (and ($generated@@27 $generated@@35 $generated@@211 ($generated@@31 $generated@@32) $generated@@205) ($generated@@58 ($generated@@31 $generated@@32) ($generated@@59 1) ($generated@@87 $generated@@35 ($generated@@74 $generated@@35 $generated@@55))))) (and (and ($generated@@44 $generated@@209) ($generated@@58 ($generated@@31 $generated@@32) ($generated@@59 1) ($generated@@87 $generated@@35 ($generated@@74 $generated@@35 $generated@@55)))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@70 $generated@@209 ($generated@@47 ($generated@@57 ($generated@@31 $generated@@32) ($generated@@59 1) ($generated@@87 $generated@@35 ($generated@@74 $generated@@35 $generated@@55)))))))))))))))
(let (($generated@@216  (=> (and ($generated@@33 $generated@@205) ($generated@@212 $generated@@205)) (=> (and (and ($generated@@61 $generated@@28 $generated@@213 ($generated@@30 ($generated@@31 $generated@@32))) ($generated@@27 $generated@@28 $generated@@213 ($generated@@30 ($generated@@31 $generated@@32)) $generated@@205)) true) (=> (and (and (and ($generated@@61 $generated@@35 $generated@@214 $generated@@36) ($generated@@27 $generated@@35 $generated@@214 $generated@@36 $generated@@205)) true) (and (= 2 $generated@@56) (= (ControlFlow 0 5) 2))) $generated@@215)))))
$generated@@216)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
