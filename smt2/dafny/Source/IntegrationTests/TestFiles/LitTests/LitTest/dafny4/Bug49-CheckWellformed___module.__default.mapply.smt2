(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U Int) Int)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 (T@U Int) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@105 (T@U) Int)
(declare-fun $generated@@106 (T@U) Int)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T) T@T)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert  (and (and (and (= ($generated@@7 $generated@@27) 3) (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@36 $generated@@40 $generated@@41 ($generated@@39 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
))) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@36 $generated@@45 $generated@@46 ($generated@@39 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@36 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@7 $generated@@37) 4)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@51 T@U) ($generated@@52 Int) ) (!  (=> (or ($generated@@29 ($generated@@26 $generated@@27 $generated@@51) ($generated@@28 $generated@@52)) (and (< 0 $generated@@24) (and ($generated@@30 $generated@@27 $generated@@51 ($generated@@31 $generated $generated)) ($generated@@32 ($generated@@33 $generated@@51) ($generated@@34 $generated@@9 ($generated@@13 $generated@@52)))))) (= ($generated@@25 ($generated@@26 $generated@@27 $generated@@51) ($generated@@28 $generated@@52)) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@36 $generated@@37 $generated@@37 ($generated@@38 ($generated@@26 $generated@@27 $generated@@51)) ($generated@@34 $generated@@9 ($generated@@13 ($generated@@28 $generated@@52))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@26 $generated@@27 $generated@@51) ($generated@@28 $generated@@52)))
))))
(assert (= ($generated@@7 $generated@@53) 5))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@30 $generated@@53 ($generated@@54 $generated@@59 $generated@@60) ($generated@@55 $generated@@57 $generated@@58))  (and ($generated@@56 $generated@@59 $generated@@57) ($generated@@56 $generated@@60 $generated@@58)))
 :pattern ( ($generated@@30 $generated@@53 ($generated@@54 $generated@@59 $generated@@60) ($generated@@55 $generated@@57 $generated@@58)))
)))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@28 $generated@@61) $generated@@61)
 :pattern ( ($generated@@28 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@26 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@26 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@34 $generated@@65 ($generated@@35 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@35 $generated@@65 $generated@@64))
)))
(assert (= ($generated@@7 $generated@@66) 6))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@30 $generated@@66 $generated@@68 ($generated@@67 $generated@@69)) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@32 $generated@@68 $generated@@70) ($generated@@56 $generated@@70 $generated@@69))
 :pattern ( ($generated@@32 $generated@@68 $generated@@70))
)))
 :pattern ( ($generated@@30 $generated@@66 $generated@@68 ($generated@@67 $generated@@69)))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@71 T@U) ($generated@@72 Int) ) (!  (=> (or ($generated@@29 $generated@@71 $generated@@72) (and (< 0 $generated@@24) (and ($generated@@30 $generated@@27 $generated@@71 ($generated@@31 $generated $generated)) ($generated@@32 ($generated@@33 $generated@@71) ($generated@@34 $generated@@9 ($generated@@13 $generated@@72)))))) (= ($generated@@25 $generated@@71 $generated@@72) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@36 $generated@@37 $generated@@37 ($generated@@38 $generated@@71) ($generated@@34 $generated@@9 ($generated@@13 $generated@@72)))))))
 :pattern ( ($generated@@25 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@56 $generated@@73 $generated) (and (= ($generated@@34 $generated@@9 ($generated@@35 $generated@@9 $generated@@73)) $generated@@73) ($generated@@30 $generated@@9 ($generated@@35 $generated@@9 $generated@@73) $generated)))
 :pattern ( ($generated@@56 $generated@@73 $generated))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@56 ($generated@@34 $generated@@76 $generated@@74) $generated@@75) ($generated@@30 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@56 ($generated@@34 $generated@@76 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@77 ($generated@@31 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@31 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@80 ($generated@@31 $generated@@81 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@31 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@23 ($generated@@31 $generated@@83 $generated@@84)) $generated@@2)
 :pattern ( ($generated@@31 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@54 $generated@@86 $generated@@87)) $generated@@4)
 :pattern ( ($generated@@54 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@55 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@55 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 ($generated@@55 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@55 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@94 ($generated@@54 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@54 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 ($generated@@54 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@54 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@100 ($generated@@67 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@67 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@23 ($generated@@67 $generated@@102)) $generated@@1)
 :pattern ( ($generated@@67 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@35 $generated@@104 ($generated@@34 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@34 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (< ($generated@@105 $generated@@107) ($generated@@106 ($generated@@54 $generated@@107 $generated@@108)))
 :pattern ( ($generated@@54 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (< ($generated@@105 $generated@@110) ($generated@@106 ($generated@@54 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@54 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (!  (not ($generated@@32 ($generated@@33 $generated@@111) $generated@@112))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@56 $generated@@113 ($generated@@31 $generated@@114 $generated@@115)) (and (= ($generated@@34 $generated@@27 ($generated@@35 $generated@@27 $generated@@113)) $generated@@113) ($generated@@30 $generated@@27 ($generated@@35 $generated@@27 $generated@@113) ($generated@@31 $generated@@114 $generated@@115))))
 :pattern ( ($generated@@56 $generated@@113 ($generated@@31 $generated@@114 $generated@@115)))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@56 $generated@@118 ($generated@@55 $generated@@116 $generated@@117)) (and (= ($generated@@34 $generated@@53 ($generated@@35 $generated@@53 $generated@@118)) $generated@@118) ($generated@@30 $generated@@53 ($generated@@35 $generated@@53 $generated@@118) ($generated@@55 $generated@@116 $generated@@117))))
 :pattern ( ($generated@@56 $generated@@118 ($generated@@55 $generated@@116 $generated@@117)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@119 $generated@@127 $generated@@128 $generated@@129 ($generated@@124 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@119 $generated@@134 $generated@@135 $generated@@136 ($generated@@124 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@119 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@119 $generated@@143 $generated@@144 $generated@@145 ($generated@@124 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@119 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@7 $generated@@120) 7)) (= ($generated@@7 $generated@@121) 8)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (= ($generated@@7 ($generated@@123 $generated@@152 $generated@@153)) 9))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@125 ($generated@@123 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@123 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@126 ($generated@@123 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@123 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Bool) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@12 ($generated@@119 $generated@@120 $generated@@121 $generated@@8 ($generated@@122 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))  (=> (and (or (not (= $generated@@162 $generated@@158)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@121 $generated@@37 ($generated@@36 $generated@@120 ($generated@@123 $generated@@121 $generated@@37) $generated@@159 $generated@@162) $generated@@160)))) $generated@@161))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@8 ($generated@@122 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (and (= ($generated@@23 ($generated@@55 $generated@@165 $generated@@166)) $generated@@5) (= ($generated@@164 ($generated@@55 $generated@@165 $generated@@166)) $generated@@6))
 :pattern ( ($generated@@55 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ) (!  (or (= $generated@@167 $generated@@111) (exists (($generated@@168 T@U) ) ($generated@@32 ($generated@@33 $generated@@167) $generated@@168)))
 :pattern ( ($generated@@33 $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ) (!  (or (= $generated@@170 $generated@@111) (exists (($generated@@171 T@U) ) ($generated@@32 ($generated@@169 $generated@@170) $generated@@171)))
 :pattern ( ($generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@32 ($generated@@172 $generated@@173) $generated@@174)  (and ($generated@@32 ($generated@@33 $generated@@173) ($generated@@94 ($generated@@35 $generated@@53 $generated@@174))) (= ($generated@@36 $generated@@37 $generated@@37 ($generated@@38 $generated@@173) ($generated@@94 ($generated@@35 $generated@@53 $generated@@174))) ($generated@@97 ($generated@@35 $generated@@53 $generated@@174)))))
 :pattern ( ($generated@@32 ($generated@@172 $generated@@173) $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@32 ($generated@@169 $generated@@175) $generated@@176) (exists (($generated@@177 T@U) ) (!  (and ($generated@@32 ($generated@@33 $generated@@175) $generated@@177) (= $generated@@176 ($generated@@36 $generated@@37 $generated@@37 ($generated@@38 $generated@@175) $generated@@177)))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@175) $generated@@177))
 :pattern ( ($generated@@36 $generated@@37 $generated@@37 ($generated@@38 $generated@@175) $generated@@177))
)))
 :pattern ( ($generated@@32 ($generated@@169 $generated@@175) $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@105 ($generated@@34 $generated@@53 $generated@@178)) ($generated@@106 $generated@@178))
 :pattern ( ($generated@@105 ($generated@@34 $generated@@53 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@56 $generated@@179 ($generated@@67 $generated@@180)) (and (= ($generated@@34 $generated@@66 ($generated@@35 $generated@@66 $generated@@179)) $generated@@179) ($generated@@30 $generated@@66 ($generated@@35 $generated@@66 $generated@@179) ($generated@@67 $generated@@180))))
 :pattern ( ($generated@@56 $generated@@179 ($generated@@67 $generated@@180)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@30 $generated@@27 $generated@@181 ($generated@@31 $generated@@182 $generated@@183)) (forall (($generated@@184 T@U) ) (!  (=> ($generated@@32 ($generated@@33 $generated@@181) $generated@@184) (and ($generated@@56 ($generated@@36 $generated@@37 $generated@@37 ($generated@@38 $generated@@181) $generated@@184) $generated@@183) ($generated@@56 $generated@@184 $generated@@182)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@37 ($generated@@38 $generated@@181) $generated@@184))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@181) $generated@@184))
)))
 :pattern ( ($generated@@30 $generated@@27 $generated@@181 ($generated@@31 $generated@@182 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@54 ($generated@@26 $generated@@37 $generated@@185) ($generated@@26 $generated@@37 $generated@@186)) ($generated@@26 $generated@@53 ($generated@@54 $generated@@185 $generated@@186)))
 :pattern ( ($generated@@54 ($generated@@26 $generated@@37 $generated@@185) ($generated@@26 $generated@@37 $generated@@186)))
)))
(assert (forall (($generated@@187 Int) ) (! (= ($generated@@34 $generated@@9 ($generated@@13 ($generated@@28 $generated@@187))) ($generated@@26 $generated@@37 ($generated@@34 $generated@@9 ($generated@@13 $generated@@187))))
 :pattern ( ($generated@@34 $generated@@9 ($generated@@13 ($generated@@28 $generated@@187))))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@34 $generated@@189 ($generated@@26 $generated@@189 $generated@@188)) ($generated@@26 $generated@@37 ($generated@@34 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@34 $generated@@189 ($generated@@26 $generated@@189 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ) (!  (or (= $generated@@190 $generated@@111) (exists (($generated@@191 T@U) ($generated@@192 T@U) ) ($generated@@32 ($generated@@172 $generated@@190) ($generated@@34 $generated@@53 ($generated@@54 $generated@@191 $generated@@192)))))
 :pattern ( ($generated@@172 $generated@@190))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@30 $generated@@27 $generated@@193 ($generated@@31 $generated@@194 $generated@@195)) (and (and ($generated@@30 $generated@@66 ($generated@@33 $generated@@193) ($generated@@67 $generated@@194)) ($generated@@30 $generated@@66 ($generated@@169 $generated@@193) ($generated@@67 $generated@@195))) ($generated@@30 $generated@@66 ($generated@@172 $generated@@193) ($generated@@67 ($generated@@55 $generated@@194 $generated@@195)))))
 :pattern ( ($generated@@30 $generated@@27 $generated@@193 ($generated@@31 $generated@@194 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@30 $generated@@9 $generated@@196 $generated)
 :pattern ( ($generated@@30 $generated@@9 $generated@@196 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@204  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@32 ($generated@@33 $generated@@197) ($generated@@34 $generated@@9 ($generated@@13 $generated@@198))))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (and (= $generated@@199 ($generated@@122 $generated@@200 $generated@@201 $generated@@3 false)) ($generated@@32 ($generated@@33 $generated@@197) ($generated@@34 $generated@@9 ($generated@@13 $generated@@198)))) (and (=> (= (ControlFlow 0 4) 1) $generated@@205) (=> (= (ControlFlow 0 4) 3) $generated@@204)))))
(let (($generated@@207  (=> (and (and (and ($generated@@202 $generated@@201) ($generated@@203 $generated@@201)) ($generated@@30 $generated@@27 $generated@@197 ($generated@@31 $generated $generated))) (and (= 0 $generated@@24) (= (ControlFlow 0 5) 4))) $generated@@206)))
$generated@@207)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
