(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U T@U) Int)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@T T@T) T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@62 (T@U) Int)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U) Bool)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@30) 3) (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@33 $generated@@41 $generated@@42 ($generated@@38 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@45) $generated@@43)
 :weight 0
))) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@50 $generated@@51) (= ($generated@@33 $generated@@46 $generated@@47 ($generated@@38 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@51) ($generated@@33 $generated@@46 $generated@@47 $generated@@49 $generated@@51)))
 :weight 0
))) (= ($generated@@8 $generated@@34) 4)) (= ($generated@@8 $generated@@35) 5)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (= ($generated@@8 ($generated@@36 $generated@@52 $generated@@53)) 6))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@39 ($generated@@36 $generated@@54 $generated@@55)) $generated@@54)
 :pattern ( ($generated@@36 $generated@@54 $generated@@55))
))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@40 ($generated@@36 $generated@@56 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@36 $generated@@56 $generated@@57))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@27 $generated@@58 $generated@@59 $generated@@60 $generated@@61) (and (< 1 $generated@@24) (and (and (and (and ($generated@@26 $generated@@58) ($generated@@26 $generated@@59)) ($generated@@28 $generated@@58 $generated@@59)) ($generated@@29 $generated@@30 $generated@@60 $generated@@31)) ($generated@@29 $generated@@30 $generated@@61 $generated@@31)))) (= ($generated@@25 $generated@@58 $generated@@59 $generated@@60 $generated@@61) (+ ($generated@@15 ($generated@@32 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@58 $generated@@60) $generated@@37))) ($generated@@15 ($generated@@32 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@59 $generated@@61) $generated@@37))))))
 :pattern ( ($generated@@25 $generated@@58 $generated@@59 $generated@@60 $generated@@61) ($generated@@26 $generated@@59))
))))
(assert (= ($generated@@62 $generated@@1) 0))
(assert (= ($generated@@63 $generated) $generated@@0))
(assert (= ($generated@@64 $generated@@1) $generated@@2))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@68 $generated@@65)  (or (= $generated@@68 $generated@@66) (= ($generated@@67 $generated@@68) $generated@@65)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@68 $generated@@65))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 $generated@@30 $generated@@70 $generated@@31 $generated@@71) ($generated@@69 $generated@@30 $generated@@70 $generated@@65 $generated@@71))
 :pattern ( ($generated@@69 $generated@@30 $generated@@70 $generated@@31 $generated@@71))
 :pattern ( ($generated@@69 $generated@@30 $generated@@70 $generated@@65 $generated@@71))
)))
(assert (= ($generated@@62 $generated@@37) 0))
(assert (= ($generated@@72 $generated@@5 $generated@@7) $generated@@37))
(assert  (not ($generated@@73 $generated@@37)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@69 $generated@@30 $generated@@74 $generated@@65 $generated@@75)  (or (= $generated@@74 $generated@@66) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@75 $generated@@74) $generated@@1)))))
 :pattern ( ($generated@@69 $generated@@30 $generated@@74 $generated@@65 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> ($generated@@28 $generated@@76 $generated@@77) (forall (($generated@@78 T@U) ) (!  (=> ($generated@@13 ($generated@@32 $generated@@9 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@76 $generated@@78) $generated@@1))) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@77 $generated@@78) $generated@@1))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@77 $generated@@78) $generated@@1))
)))
 :pattern ( ($generated@@28 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@32 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@32 $generated@@81 $generated@@80))
)))
(assert ($generated@@73 $generated@@1))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and (and ($generated@@26 $generated@@82) (and (or (not (= $generated@@83 $generated@@66)) (not true)) (= ($generated@@67 $generated@@83) $generated@@65))) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@82 $generated@@83) $generated@@1)))) ($generated@@69 $generated@@10 ($generated@@32 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@82 $generated@@83) $generated@@37)) $generated $generated@@82))
 :pattern ( ($generated@@32 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@82 $generated@@83) $generated@@37)))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (!  (=> ($generated@@28 $generated@@84 $generated@@85) (=> ($generated@@69 $generated@@88 $generated@@86 $generated@@87 $generated@@84) ($generated@@69 $generated@@88 $generated@@86 $generated@@87 $generated@@85)))
 :pattern ( ($generated@@28 $generated@@84 $generated@@85) ($generated@@69 $generated@@88 $generated@@86 $generated@@87 $generated@@84))
)))
(assert  (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@89 $generated@@92 $generated@@93 $generated@@94 ($generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@97 $generated@@98) $generated@@95)
 :weight 0
)) (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@104 $generated@@106) (= ($generated@@89 $generated@@99 $generated@@100 $generated@@101 ($generated@@91 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@89 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@89 $generated@@108 $generated@@109 $generated@@110 ($generated@@91 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@89 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)))))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@13 ($generated@@89 $generated@@30 $generated@@34 $generated@@9 ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@120) $generated@@121 $generated@@122))  (=> (and (or (not (= $generated@@121 $generated@@117)) (not true)) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@118 $generated@@121) $generated@@119)))) (= $generated@@121 $generated@@120)))
 :pattern ( ($generated@@89 $generated@@30 $generated@@34 $generated@@9 ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@120) $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@123 $generated@@31)  (and ($generated@@29 $generated@@30 $generated@@123 $generated@@65) (or (not (= $generated@@123 $generated@@66)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@123 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 $generated@@123 $generated@@65))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and (and ($generated@@26 $generated@@126) ($generated@@26 $generated@@127)) (or ($generated@@27 $generated@@125 $generated@@126 $generated@@128 $generated@@129) (and ($generated@@29 $generated@@30 $generated@@128 $generated@@31) ($generated@@29 $generated@@30 $generated@@129 $generated@@31)))) (and ($generated@@124 $generated@@126) ($generated@@28 $generated@@126 $generated@@127))) (=> (forall (($generated@@130 T@U) ($generated@@131 T@U) )  (=> (and (or (not (= $generated@@130 $generated@@66)) (not true)) (= $generated@@130 $generated@@129)) (= ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@126 $generated@@130) $generated@@131) ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@127 $generated@@130) $generated@@131)))) (= ($generated@@25 $generated@@125 $generated@@126 $generated@@128 $generated@@129) ($generated@@25 $generated@@125 $generated@@127 $generated@@128 $generated@@129))))
 :pattern ( ($generated@@124 $generated@@126) ($generated@@28 $generated@@126 $generated@@127) ($generated@@25 $generated@@125 $generated@@127 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (or (not (= $generated@@132 $generated@@134)) (not true)) (=> (and ($generated@@28 $generated@@132 $generated@@133) ($generated@@28 $generated@@133 $generated@@134)) ($generated@@28 $generated@@132 $generated@@134)))
 :pattern ( ($generated@@28 $generated@@132 $generated@@133) ($generated@@28 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (and (= ($generated@@135 ($generated@@72 $generated@@136 $generated@@137)) $generated@@136) (= ($generated@@64 ($generated@@72 $generated@@136 $generated@@137)) $generated@@137))
 :pattern ( ($generated@@72 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@32 $generated@@139 ($generated@@79 $generated@@139 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@79 $generated@@139 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@26 $generated@@140) (and (or (not (= $generated@@141 $generated@@66)) (not true)) (= ($generated@@67 $generated@@141) $generated@@65))) ($generated@@29 $generated@@10 ($generated@@32 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@140 $generated@@141) $generated@@37)) $generated))
 :pattern ( ($generated@@32 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@140 $generated@@141) $generated@@37)))
)))
(assert (= ($generated@@63 $generated@@31) $generated@@3))
(assert (= ($generated@@142 $generated@@31) $generated@@6))
(assert (= ($generated@@63 $generated@@65) $generated@@4))
(assert (= ($generated@@142 $generated@@65) $generated@@6))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! ($generated@@69 $generated@@10 $generated@@144 $generated $generated@@143)
 :pattern ( ($generated@@69 $generated@@10 $generated@@144 $generated $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (! ($generated@@29 $generated@@10 $generated@@145 $generated)
 :pattern ( ($generated@@29 $generated@@10 $generated@@145 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@153  (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (not (= $generated@@146 $generated@@66)) (not true))) (=> (or (not (= $generated@@146 $generated@@66)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@69 $generated@@30 $generated@@146 $generated@@31 $generated@@147)) (=> ($generated@@69 $generated@@30 $generated@@146 $generated@@31 $generated@@147) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@148 $generated@@66)) (not true))) (=> (or (not (= $generated@@148 $generated@@66)) (not true)) (=> (and (and (= $generated@@149 ($generated@@13 ($generated@@89 $generated@@30 $generated@@34 $generated@@9 $generated@@150 $generated@@148 $generated@@37))) (= ($generated@@25 $generated@@147 $generated@@151 $generated@@146 $generated@@148) (+ ($generated@@15 ($generated@@32 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@147 $generated@@146) $generated@@37))) ($generated@@15 ($generated@@32 $generated@@10 ($generated@@33 $generated@@34 $generated@@35 ($generated@@33 $generated@@30 ($generated@@36 $generated@@34 $generated@@35) $generated@@151 $generated@@148) $generated@@37)))))) (and ($generated@@29 $generated@@10 ($generated@@14 ($generated@@25 $generated@@147 $generated@@151 $generated@@146 $generated@@148)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@149)))))))))
(let (($generated@@154 true))
(let (($generated@@155  (=> (= $generated@@150 ($generated@@90 $generated@@66 $generated@@151 $generated@@1 $generated@@148)) (and (=> (= (ControlFlow 0 7) 1) $generated@@154) (=> (= (ControlFlow 0 7) 3) $generated@@153)))))
(let (($generated@@156  (=> (and (and ($generated@@26 $generated@@147) ($generated@@124 $generated@@147)) (and ($generated@@29 $generated@@30 $generated@@146 $generated@@31) ($generated@@69 $generated@@30 $generated@@146 $generated@@31 $generated@@152))) (=> (and (and (and ($generated@@29 $generated@@30 $generated@@148 $generated@@31) ($generated@@69 $generated@@30 $generated@@148 $generated@@31 $generated@@151)) (= 1 $generated@@24)) (and (and (= $generated@@152 $generated@@147) (and ($generated@@28 $generated@@152 $generated@@151) ($generated@@26 $generated@@151))) (= (ControlFlow 0 8) 7))) $generated@@155))))
$generated@@156)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
