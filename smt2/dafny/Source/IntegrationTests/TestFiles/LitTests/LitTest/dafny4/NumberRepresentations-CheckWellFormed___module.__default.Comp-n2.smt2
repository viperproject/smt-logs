(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U Int) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U Int) Bool)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (Int Int) Int)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@85 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@T T@T) T@T)
(declare-fun $generated@@88 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@140 (T@U Int Int) Bool)
(declare-fun $generated@@141 (T@U Int Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@23 T@U) ($generated@@24 Int) ) (!  (=> (= $generated@@24 0) (= ($generated@@22 $generated@@23 $generated@@24) $generated@@23))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 Int) ) (! (= ($generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@T) ) (! (= ($generated@@27 $generated@@29 $generated@@28) $generated@@28)
 :pattern ( ($generated@@27 $generated@@29 $generated@@28))
)))
(assert (= ($generated@@3 $generated@@33) 3))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@34 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@41 ($generated@@36 $generated)) (<= ($generated@@25 2) ($generated@@25 $generated@@42))))) (and (=> (or (not (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@41)) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 1))) ($generated@@25 $generated@@42))) (= ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)) (ite (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@41)) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 0)))) ($generated@@39 ($generated@@25 $generated@@42) ($generated@@25 ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 1))) ($generated@@25 $generated@@42)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (and (<= 0 $generated@@44) (<= $generated@@44 ($generated@@20 $generated@@43))) (= ($generated@@20 ($generated@@22 $generated@@43 $generated@@44)) (- ($generated@@20 $generated@@43) $generated@@44)))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@43 $generated@@44)))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@45 $generated@@47 ($generated@@37 $generated@@47 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@37 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@53 $generated@@50) $generated@@51 $generated@@52) ($generated@@49 $generated@@53 $generated@@50 $generated@@51 $generated@@52))
 :pattern ( ($generated@@48 ($generated@@45 $generated@@53 $generated@@50) $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 Int) ($generated@@56 Int) ) (!  (=> (and (and (<= 0 $generated@@55) (<= 0 $generated@@56)) (< $generated@@56 (- ($generated@@20 $generated@@54) $generated@@55))) (= ($generated@@38 ($generated@@22 $generated@@54 $generated@@55) $generated@@56) ($generated@@38 $generated@@54 (+ $generated@@56 $generated@@55))))
 :weight 25
 :pattern ( ($generated@@38 ($generated@@22 $generated@@54 $generated@@55) $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 Int) ) (! (= ($generated@@31 ($generated@@32 $generated@@57) $generated@@58 $generated@@59) ($generated@@31 $generated@@57 $generated@@58 $generated@@59))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@57) $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@60 $generated@@61 $generated) (and (= ($generated@@45 $generated@@5 ($generated@@37 $generated@@5 $generated@@61)) $generated@@61) ($generated@@35 $generated@@5 ($generated@@37 $generated@@5 $generated@@61) $generated)))
 :pattern ( ($generated@@60 $generated@@61 $generated))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@60 ($generated@@45 $generated@@64 $generated@@62) $generated@@63) ($generated@@35 $generated@@64 $generated@@62 $generated@@63))
 :pattern ( ($generated@@60 ($generated@@45 $generated@@64 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (<= 0 ($generated@@20 $generated@@65))
 :pattern ( ($generated@@20 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@49 $generated@@33 $generated@@66 ($generated@@36 $generated@@67) $generated@@68) (forall (($generated@@69 Int) ) (!  (=> (and (<= 0 $generated@@69) (< $generated@@69 ($generated@@20 $generated@@66))) ($generated@@48 ($generated@@38 $generated@@66 $generated@@69) $generated@@67 $generated@@68))
 :pattern ( ($generated@@38 $generated@@66 $generated@@69))
)))
 :pattern ( ($generated@@49 $generated@@33 $generated@@66 ($generated@@36 $generated@@67) $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 ($generated@@36 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@36 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@19 ($generated@@36 $generated@@72)) $generated@@1)
 :pattern ( ($generated@@36 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@37 $generated@@74 ($generated@@45 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@45 $generated@@74 $generated@@73))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 Int) ) (!  (=> (or ($generated@@34 $generated@@76 $generated@@77) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@76 ($generated@@36 $generated)) (<= ($generated@@25 2) $generated@@77)))) (and (=> (or (not (= ($generated@@20 $generated@@76) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@22 $generated@@76 ($generated@@25 1)) $generated@@77)) (= ($generated@@31 ($generated@@32 $generated@@75) $generated@@76 $generated@@77) (ite (= ($generated@@20 $generated@@76) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@76 ($generated@@25 0)))) ($generated@@39 $generated@@77 ($generated@@31 $generated@@75 ($generated@@22 $generated@@76 ($generated@@25 1)) $generated@@77)))))))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@75) $generated@@76 $generated@@77))
))))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 Int) ) (!  (=> (or ($generated@@34 ($generated@@27 $generated@@33 $generated@@79) $generated@@80) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@79 ($generated@@36 $generated)) (<= ($generated@@25 2) $generated@@80)))) (and (=> (or (not (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@79)) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@79) ($generated@@25 1))) $generated@@80)) (= ($generated@@31 ($generated@@32 $generated@@78) ($generated@@27 $generated@@33 $generated@@79) $generated@@80) (ite (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@79)) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@79) ($generated@@25 0)))) ($generated@@39 $generated@@80 ($generated@@31 ($generated@@32 $generated@@78) ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@79) ($generated@@25 1))) $generated@@80)))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@32 $generated@@78) ($generated@@27 $generated@@33 $generated@@79) $generated@@80))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@81 $generated@@92 $generated@@93 $generated@@94 ($generated@@88 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@97 $generated@@98) $generated@@95)
 :weight 0
)) (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@104 $generated@@106) (= ($generated@@81 $generated@@99 $generated@@100 $generated@@101 ($generated@@88 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@81 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@81 $generated@@108 $generated@@109 $generated@@110 ($generated@@88 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@81 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)))) (= ($generated@@3 $generated@@82) 4)) (= ($generated@@3 $generated@@83) 5)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@85 $generated@@117 $generated@@118 ($generated@@89 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@119) $generated@@121) $generated@@119)
 :weight 0
))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@126 $generated@@127) (= ($generated@@85 $generated@@122 $generated@@123 ($generated@@89 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@124) $generated@@127) ($generated@@85 $generated@@122 $generated@@123 $generated@@125 $generated@@127)))
 :weight 0
))) (= ($generated@@3 $generated@@86) 6)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (= ($generated@@3 ($generated@@87 $generated@@128 $generated@@129)) 7))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@90 ($generated@@87 $generated@@130 $generated@@131)) $generated@@130)
 :pattern ( ($generated@@87 $generated@@130 $generated@@131))
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (! (= ($generated@@91 ($generated@@87 $generated@@132 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@87 $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Bool) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@8 ($generated@@81 $generated@@82 $generated@@83 $generated@@4 ($generated@@84 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@8 ($generated@@37 $generated@@4 ($generated@@85 $generated@@83 $generated@@86 ($generated@@85 $generated@@82 ($generated@@87 $generated@@83 $generated@@86) $generated@@135 $generated@@138) $generated@@136)))) $generated@@137))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83 $generated@@4 ($generated@@84 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@142 T@U) ($generated@@143 Int) ($generated@@144 Int) ) (!  (=> (or ($generated@@141 $generated@@142 $generated@@143 $generated@@144) (and (< 0 $generated@@30) ($generated@@35 $generated@@33 $generated@@142 ($generated@@36 $generated)))) (= ($generated@@140 $generated@@142 $generated@@143 $generated@@144)  (and (and (<= ($generated@@25 2) $generated@@144) (and (<= $generated@@143 ($generated@@25 0)) (< 0 (+ $generated@@143 $generated@@144)))) (forall (($generated@@145 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@145) (< $generated@@145 ($generated@@20 $generated@@142))) (<= $generated@@143 ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@142 $generated@@145))))) (=> (and (<= ($generated@@25 0) $generated@@145) (< $generated@@145 ($generated@@20 $generated@@142))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@142 $generated@@145))) (+ $generated@@143 $generated@@144))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@142 $generated@@145)))
)))))
 :pattern ( ($generated@@140 $generated@@142 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@146 Int) ($generated@@147 Int) ) (! (= ($generated@@39 $generated@@146 $generated@@147) (* $generated@@146 $generated@@147))
 :pattern ( ($generated@@39 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@60 $generated@@148 ($generated@@36 $generated@@149)) (and (= ($generated@@45 $generated@@33 ($generated@@37 $generated@@33 $generated@@148)) $generated@@148) ($generated@@35 $generated@@33 ($generated@@37 $generated@@33 $generated@@148) ($generated@@36 $generated@@149))))
 :pattern ( ($generated@@60 $generated@@148 ($generated@@36 $generated@@149)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 Int) ($generated@@152 Int) ) (!  (=> (and (and (<= 0 $generated@@151) (<= $generated@@151 $generated@@152)) (< $generated@@152 ($generated@@20 $generated@@150))) (= ($generated@@38 ($generated@@22 $generated@@150 $generated@@151) (- $generated@@152 $generated@@151)) ($generated@@38 $generated@@150 $generated@@152)))
 :weight 25
 :pattern ( ($generated@@38 $generated@@150 $generated@@152) ($generated@@22 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 Int) ) (!  (=> (and (and (<= 0 $generated@@154) (<= 0 $generated@@155)) (<= (+ $generated@@154 $generated@@155) ($generated@@20 $generated@@153))) (= ($generated@@22 ($generated@@22 $generated@@153 $generated@@154) $generated@@155) ($generated@@22 $generated@@153 (+ $generated@@154 $generated@@155))))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@153 $generated@@154) $generated@@155))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@156 T@U) ($generated@@157 Int) ($generated@@158 Int) ) (!  (=> (or ($generated@@141 ($generated@@27 $generated@@33 $generated@@156) ($generated@@25 $generated@@157) ($generated@@25 $generated@@158)) (and (< 0 $generated@@30) ($generated@@35 $generated@@33 $generated@@156 ($generated@@36 $generated)))) (= ($generated@@140 ($generated@@27 $generated@@33 $generated@@156) ($generated@@25 $generated@@157) ($generated@@25 $generated@@158))  (and (and (<= ($generated@@25 2) ($generated@@25 $generated@@158)) (and (<= ($generated@@25 $generated@@157) ($generated@@25 0)) (< 0 (+ $generated@@157 $generated@@158)))) (forall (($generated@@159 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@159) (< $generated@@159 ($generated@@20 ($generated@@27 $generated@@33 $generated@@156)))) (<= ($generated@@25 $generated@@157) ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@156) $generated@@159))))) (=> (and (<= ($generated@@25 0) $generated@@159) (< $generated@@159 ($generated@@20 ($generated@@27 $generated@@33 $generated@@156)))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@156) $generated@@159))) (+ $generated@@157 $generated@@158))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@156 $generated@@159)))
)))))
 :weight 3
 :pattern ( ($generated@@140 ($generated@@27 $generated@@33 $generated@@156) ($generated@@25 $generated@@157) ($generated@@25 $generated@@158)))
))))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@45 $generated@@5 ($generated@@9 ($generated@@25 $generated@@160))) ($generated@@27 $generated@@86 ($generated@@45 $generated@@5 ($generated@@9 $generated@@160))))
 :pattern ( ($generated@@45 $generated@@5 ($generated@@9 ($generated@@25 $generated@@160))))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@45 $generated@@162 ($generated@@27 $generated@@162 $generated@@161)) ($generated@@27 $generated@@86 ($generated@@45 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@45 $generated@@162 ($generated@@27 $generated@@162 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= ($generated@@20 $generated@@163) 0) (= $generated@@163 $generated@@21))
 :pattern ( ($generated@@20 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! ($generated@@49 $generated@@5 $generated@@165 $generated $generated@@164)
 :pattern ( ($generated@@49 $generated@@5 $generated@@165 $generated $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@166 ($generated@@36 $generated@@167)) (forall (($generated@@168 Int) ) (!  (=> (and (<= 0 $generated@@168) (< $generated@@168 ($generated@@20 $generated@@166))) ($generated@@60 ($generated@@38 $generated@@166 $generated@@168) $generated@@167))
 :pattern ( ($generated@@38 $generated@@166 $generated@@168))
)))
 :pattern ( ($generated@@35 $generated@@33 $generated@@166 ($generated@@36 $generated@@167)))
)))
(assert (forall (($generated@@169 T@U) ) (! ($generated@@35 $generated@@5 $generated@@169 $generated)
 :pattern ( ($generated@@35 $generated@@5 $generated@@169 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@181  (=> (and (= $generated@@170 ($generated@@84 $generated@@171 $generated@@172 $generated@@2 false)) (<= ($generated@@25 2) $generated@@173)) (=> (and (and (and (and ($generated@@174 $generated@@175) ($generated@@176 $generated@@175)) (= $generated@@172 $generated@@175)) (and (and ($generated@@35 $generated@@33 $generated@@177 ($generated@@36 $generated)) ($generated@@49 $generated@@33 $generated@@177 ($generated@@36 $generated) $generated@@175)) ($generated@@49 $generated@@33 $generated@@177 ($generated@@36 $generated) $generated@@175))) (and (and (and (= $generated@@178 ($generated@@25 0)) ($generated@@49 $generated@@5 ($generated@@9 $generated@@178) $generated $generated@@175)) (and ($generated@@49 $generated@@5 ($generated@@9 $generated@@173) $generated $generated@@175) ($generated@@141 $generated@@177 ($generated@@25 0) $generated@@173))) (and (and ($generated@@140 $generated@@177 ($generated@@25 0) $generated@@173) ($generated@@49 $generated@@33 $generated@@177 ($generated@@36 $generated) $generated@@175)) (and ($generated@@49 $generated@@5 ($generated@@9 $generated@@173) $generated $generated@@175) (= (ControlFlow 0 2) (- 0 1)))))) (<= ($generated@@25 2) $generated@@173)))))
(let (($generated@@182  (=> (and (and (and ($generated@@174 $generated@@172) ($generated@@176 $generated@@172)) (<= ($generated@@25 0) $generated@@179)) (and (and ($generated@@35 $generated@@33 $generated@@180 ($generated@@36 $generated)) ($generated@@49 $generated@@33 $generated@@180 ($generated@@36 $generated) $generated@@172)) (and (= 2 $generated@@30) (= (ControlFlow 0 3) 2)))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
