(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Int)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@54 (T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@65 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@66 (T@U Int T@U) Bool)
(declare-fun $generated@@67 () T@U)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@154 (T@U) Int)
(declare-fun $generated@@155 (T@U) Int)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (and (= ($generated@@6 $generated@@27) 3) (= ($generated@@6 $generated@@33) 4)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@28 $generated@@36 ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39)) (and (< 1 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@38 ($generated@@30 $generated@@36)) ($generated@@29 $generated@@27 $generated@@39 ($generated@@30 $generated@@36))))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@38)))))) (let (($generated@@40 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@38)))))
($generated@@28 $generated@@36 $generated@@40 ($generated@@26 $generated@@27 $generated@@39)))) (= ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@38)) $generated@@39 (let (($generated@@41 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@38)))))
(let (($generated@@42 ($generated@@26 $generated@@33 ($generated@@34 ($generated@@26 $generated@@27 $generated@@38)))))
($generated@@26 $generated@@27 ($generated@@35 $generated@@42 ($generated@@26 $generated@@27 ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) $generated@@41 ($generated@@26 $generated@@27 $generated@@39)))))))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39)))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@44 $generated@@46 ($generated@@26 $generated@@27 $generated@@48)) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@48 ($generated@@30 $generated@@46)))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@48)))))) (let (($generated@@49 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@48)))))
($generated@@44 $generated@@46 $generated@@49))) (= ($generated@@43 $generated@@46 ($generated@@25 $generated@@47) ($generated@@26 $generated@@27 $generated@@48)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@48)) 0 (let (($generated@@50 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@48)))))
($generated@@45 (+ 1 ($generated@@43 $generated@@46 ($generated@@25 $generated@@47) $generated@@50))))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@46 ($generated@@25 $generated@@47) ($generated@@26 $generated@@27 $generated@@48)))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@43 $generated@@51 ($generated@@25 $generated@@52) $generated@@53) ($generated@@43 $generated@@51 $generated@@52 $generated@@53))
 :pattern ( ($generated@@43 $generated@@51 ($generated@@25 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@54 $generated@@55 ($generated@@25 $generated@@56) $generated@@57) ($generated@@54 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@54 $generated@@55 ($generated@@25 $generated@@56) $generated@@57))
)))
(assert (= ($generated@@58 $generated@@59) $generated@@3))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@61 $generated@@63) ($generated@@60 $generated@@27 $generated@@59 ($generated@@30 $generated@@62) $generated@@63))
 :pattern ( ($generated@@60 $generated@@27 $generated@@59 ($generated@@30 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ) (! ($generated@@29 $generated@@27 $generated@@59 ($generated@@30 $generated@@64))
 :pattern ( ($generated@@29 $generated@@27 $generated@@59 ($generated@@30 $generated@@64)))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 Int) ($generated@@71 T@U) ) (!  (=> (or ($generated@@66 $generated@@68 $generated@@70 $generated@@71) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@71 ($generated@@30 $generated@@68)) (and (<= ($generated@@45 0) $generated@@70) (< $generated@@70 ($generated@@43 $generated@@68 ($generated@@25 $generated@@67) $generated@@71)))))) (and (=> (or (not (= $generated@@70 ($generated@@45 0))) (not true)) ($generated@@66 $generated@@68 (- $generated@@70 1) ($generated@@32 $generated@@71))) (= ($generated@@65 $generated@@68 ($generated@@25 $generated@@69) $generated@@70 $generated@@71) (ite (= $generated@@70 ($generated@@45 0)) ($generated@@34 $generated@@71) ($generated@@65 $generated@@68 $generated@@69 (- $generated@@70 1) ($generated@@32 $generated@@71))))))
 :pattern ( ($generated@@65 $generated@@68 ($generated@@25 $generated@@69) $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@45 $generated@@72) $generated@@72)
 :pattern ( ($generated@@45 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@26 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@26 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@29 $generated@@27 ($generated@@35 $generated@@77 $generated@@78) ($generated@@30 $generated@@76))  (and ($generated@@75 $generated@@77 $generated@@76) ($generated@@29 $generated@@27 $generated@@78 ($generated@@30 $generated@@76))))
 :pattern ( ($generated@@29 $generated@@27 ($generated@@35 $generated@@77 $generated@@78) ($generated@@30 $generated@@76)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@28 $generated@@79 $generated@@81 $generated@@82) (and (< 1 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@81 ($generated@@30 $generated@@79)) ($generated@@29 $generated@@27 $generated@@82 ($generated@@30 $generated@@79))))) (and (=> (not ($generated@@31 $generated@@81)) (let (($generated@@83 ($generated@@32 $generated@@81)))
($generated@@28 $generated@@79 $generated@@83 $generated@@82))) (= ($generated@@24 $generated@@79 ($generated@@25 $generated@@80) $generated@@81 $generated@@82) (ite ($generated@@31 $generated@@81) $generated@@82 (let (($generated@@84 ($generated@@32 $generated@@81)))
(let (($generated@@85 ($generated@@34 $generated@@81)))
($generated@@35 $generated@@85 ($generated@@24 $generated@@79 $generated@@80 $generated@@84 $generated@@82))))))))
 :pattern ( ($generated@@24 $generated@@79 ($generated@@25 $generated@@80) $generated@@81 $generated@@82))
))))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@31 $generated@@86) (= ($generated@@58 $generated@@86) $generated@@3))
 :pattern ( ($generated@@31 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@58 $generated@@88) $generated@@4))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@89 $generated@@90 $generated@@92) (and (< 2 $generated@@23) ($generated@@29 $generated@@27 $generated@@92 ($generated@@30 $generated@@90)))) (and (=> (not ($generated@@31 $generated@@92)) (let (($generated@@93 ($generated@@32 $generated@@92)))
(let (($generated@@94 ($generated@@34 $generated@@92)))
 (and ($generated@@89 $generated@@90 $generated@@93) ($generated@@28 $generated@@90 ($generated@@54 $generated@@90 $generated@@91 $generated@@93) ($generated@@35 $generated@@94 ($generated@@26 $generated@@27 $generated@@59))))))) (= ($generated@@54 $generated@@90 ($generated@@25 $generated@@91) $generated@@92) (ite ($generated@@31 $generated@@92) $generated@@59 (let (($generated@@95 ($generated@@32 $generated@@92)))
(let (($generated@@96 ($generated@@34 $generated@@92)))
($generated@@24 $generated@@90 ($generated@@25 $generated@@67) ($generated@@54 $generated@@90 $generated@@91 $generated@@95) ($generated@@35 $generated@@96 ($generated@@26 $generated@@27 $generated@@59)))))))))
 :pattern ( ($generated@@54 $generated@@90 ($generated@@25 $generated@@91) $generated@@92))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@97 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@97 $generated@@100 $generated@@99))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 Int) ($generated@@104 T@U) ) (!  (=> (or ($generated@@66 $generated@@101 ($generated@@45 $generated@@103) ($generated@@26 $generated@@27 $generated@@104)) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@104 ($generated@@30 $generated@@101)) (and (<= ($generated@@45 0) ($generated@@45 $generated@@103)) (< $generated@@103 ($generated@@43 $generated@@101 ($generated@@25 $generated@@67) ($generated@@26 $generated@@27 $generated@@104))))))) (and (=> (or (not (= ($generated@@45 $generated@@103) ($generated@@45 0))) (not true)) ($generated@@66 $generated@@101 ($generated@@45 (- $generated@@103 1)) ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@104))))) (= ($generated@@65 $generated@@101 ($generated@@25 $generated@@102) ($generated@@45 $generated@@103) ($generated@@26 $generated@@27 $generated@@104)) (ite (= ($generated@@45 $generated@@103) ($generated@@45 0)) ($generated@@34 ($generated@@26 $generated@@27 $generated@@104)) ($generated@@65 $generated@@101 ($generated@@25 $generated@@102) ($generated@@45 (- $generated@@103 1)) ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@104))))))))
 :weight 3
 :pattern ( ($generated@@65 $generated@@101 ($generated@@25 $generated@@102) ($generated@@45 $generated@@103) ($generated@@26 $generated@@27 $generated@@104)))
))))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@87 $generated@@105) (exists (($generated@@106 T@U) ($generated@@107 T@U) ) (= $generated@@105 ($generated@@35 $generated@@106 $generated@@107))))
 :pattern ( ($generated@@87 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@31 $generated@@108) (= $generated@@108 $generated@@59))
 :pattern ( ($generated@@31 $generated@@108))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@44 $generated@@109 $generated@@111) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@111 ($generated@@30 $generated@@109)))) (and (=> (not ($generated@@31 $generated@@111)) (let (($generated@@112 ($generated@@32 $generated@@111)))
($generated@@44 $generated@@109 $generated@@112))) (= ($generated@@43 $generated@@109 ($generated@@25 $generated@@110) $generated@@111) (ite ($generated@@31 $generated@@111) 0 (let (($generated@@113 ($generated@@32 $generated@@111)))
(+ 1 ($generated@@43 $generated@@109 $generated@@110 $generated@@113)))))))
 :pattern ( ($generated@@43 $generated@@109 ($generated@@25 $generated@@110) $generated@@111))
))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@114 ($generated@@98 $generated@@118 $generated@@115) $generated@@116 $generated@@117) ($generated@@60 $generated@@118 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@114 ($generated@@98 $generated@@118 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ) (!  (and (= ($generated@@22 ($generated@@30 $generated@@120)) $generated@@2) (= ($generated@@119 ($generated@@30 $generated@@120)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@121 $generated@@122) (or ($generated@@31 $generated@@122) ($generated@@87 $generated@@122)))
 :pattern ( ($generated@@121 $generated@@122))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@89 $generated@@123 ($generated@@26 $generated@@27 $generated@@125)) (and (< 2 $generated@@23) ($generated@@29 $generated@@27 $generated@@125 ($generated@@30 $generated@@123)))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@125)))))) (let (($generated@@126 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@125)))))
(let (($generated@@127 ($generated@@26 $generated@@33 ($generated@@34 ($generated@@26 $generated@@27 $generated@@125)))))
 (and ($generated@@89 $generated@@123 $generated@@126) ($generated@@28 $generated@@123 ($generated@@54 $generated@@123 ($generated@@25 $generated@@124) $generated@@126) ($generated@@35 $generated@@127 ($generated@@26 $generated@@27 $generated@@59))))))) (= ($generated@@54 $generated@@123 ($generated@@25 $generated@@124) ($generated@@26 $generated@@27 $generated@@125)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@125)) $generated@@59 (let (($generated@@128 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@125)))))
(let (($generated@@129 ($generated@@26 $generated@@33 ($generated@@34 ($generated@@26 $generated@@27 $generated@@125)))))
($generated@@26 $generated@@27 ($generated@@24 $generated@@123 ($generated@@25 $generated@@67) ($generated@@26 $generated@@27 ($generated@@54 $generated@@123 ($generated@@25 $generated@@124) $generated@@128)) ($generated@@26 $generated@@27 ($generated@@35 $generated@@129 ($generated@@26 $generated@@27 $generated@@59)))))))))))
 :weight 3
 :pattern ( ($generated@@54 $generated@@123 ($generated@@25 $generated@@124) ($generated@@26 $generated@@27 $generated@@125)))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> ($generated@@29 $generated@@27 $generated@@131 ($generated@@30 $generated@@130)) (or ($generated@@31 $generated@@131) ($generated@@87 $generated@@131)))
 :pattern ( ($generated@@87 $generated@@131) ($generated@@29 $generated@@27 $generated@@131 ($generated@@30 $generated@@130)))
 :pattern ( ($generated@@31 $generated@@131) ($generated@@29 $generated@@27 $generated@@131 ($generated@@30 $generated@@130)))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@75 $generated@@132 $generated) (and (= ($generated@@98 $generated@@8 ($generated@@97 $generated@@8 $generated@@132)) $generated@@132) ($generated@@29 $generated@@8 ($generated@@97 $generated@@8 $generated@@132) $generated)))
 :pattern ( ($generated@@75 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@75 ($generated@@98 $generated@@135 $generated@@133) $generated@@134) ($generated@@29 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@75 ($generated@@98 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@58 ($generated@@35 $generated@@136 $generated@@137)) $generated@@4)
 :pattern ( ($generated@@35 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@34 ($generated@@35 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@35 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@32 ($generated@@35 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@35 $generated@@140 $generated@@141))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@28 $generated@@142 $generated@@144 $generated@@145) (and (< 1 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@144 ($generated@@30 $generated@@142)) ($generated@@29 $generated@@27 $generated@@145 ($generated@@30 $generated@@142))))) ($generated@@29 $generated@@27 ($generated@@24 $generated@@142 $generated@@143 $generated@@144 $generated@@145) ($generated@@30 $generated@@142)))
 :pattern ( ($generated@@24 $generated@@142 $generated@@143 $generated@@144 $generated@@145))
))))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and (or ($generated@@89 $generated@@147 $generated@@149) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@149 ($generated@@30 $generated@@147)) ($generated@@60 $generated@@27 $generated@@149 ($generated@@30 $generated@@147) $generated@@146)))) ($generated@@61 $generated@@146)) ($generated@@60 $generated@@27 ($generated@@54 $generated@@147 $generated@@148 $generated@@149) ($generated@@30 $generated@@147) $generated@@146))
 :pattern ( ($generated@@60 $generated@@27 ($generated@@54 $generated@@147 $generated@@148 $generated@@149) ($generated@@30 $generated@@147) $generated@@146))
))))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@30 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@30 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@97 $generated@@153 ($generated@@98 $generated@@153 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@98 $generated@@153 $generated@@152))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (< ($generated@@154 $generated@@156) ($generated@@155 ($generated@@35 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@35 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (< ($generated@@155 $generated@@159) ($generated@@155 ($generated@@35 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@35 $generated@@158 $generated@@159))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (or ($generated@@89 $generated@@160 $generated@@162) (and (< 2 $generated@@23) ($generated@@29 $generated@@27 $generated@@162 ($generated@@30 $generated@@160)))) ($generated@@29 $generated@@27 ($generated@@54 $generated@@160 $generated@@161 $generated@@162) ($generated@@30 $generated@@160)))
 :pattern ( ($generated@@54 $generated@@160 $generated@@161 $generated@@162))
))))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 Int) ($generated@@167 T@U) ) (!  (=> (and (or ($generated@@66 $generated@@164 $generated@@166 $generated@@167) (and (< 2 $generated@@23) (and (and ($generated@@29 $generated@@27 $generated@@167 ($generated@@30 $generated@@164)) ($generated@@60 $generated@@27 $generated@@167 ($generated@@30 $generated@@164) $generated@@163)) (and (<= ($generated@@45 0) $generated@@166) (< $generated@@166 ($generated@@43 $generated@@164 ($generated@@25 $generated@@67) $generated@@167)))))) ($generated@@61 $generated@@163)) ($generated@@114 ($generated@@65 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@164 $generated@@163))
 :pattern ( ($generated@@114 ($generated@@65 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@164 $generated@@163))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@61 $generated@@170) (and ($generated@@87 $generated@@168) ($generated@@60 $generated@@27 $generated@@168 ($generated@@30 $generated@@169) $generated@@170))) ($generated@@114 ($generated@@34 $generated@@168) $generated@@169 $generated@@170))
 :pattern ( ($generated@@114 ($generated@@34 $generated@@168) $generated@@169 $generated@@170))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@171 $generated@@181 $generated@@182 $generated@@183 ($generated@@177 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@186 $generated@@187) $generated@@184)
 :weight 0
)) (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@171 $generated@@188 $generated@@189 $generated@@190 ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@171 $generated@@197 $generated@@198 $generated@@199 ($generated@@177 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@171 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (= ($generated@@6 $generated@@172) 5)) (= ($generated@@6 $generated@@173) 6)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@175 $generated@@206 $generated@@207 ($generated@@178 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@208) $generated@@210) $generated@@208)
 :weight 0
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@215 $generated@@216) (= ($generated@@175 $generated@@211 $generated@@212 ($generated@@178 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@213) $generated@@216) ($generated@@175 $generated@@211 $generated@@212 $generated@@214 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (= ($generated@@6 ($generated@@176 $generated@@217 $generated@@218)) 7))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@179 ($generated@@176 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@176 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@180 ($generated@@176 $generated@@221 $generated@@222)) $generated@@222)
 :pattern ( ($generated@@176 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@11 ($generated@@171 $generated@@172 $generated@@173 $generated@@7 ($generated@@174 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (or (not (= $generated@@227 $generated@@223)) (not true)) ($generated@@11 ($generated@@97 $generated@@7 ($generated@@175 $generated@@173 $generated@@33 ($generated@@175 $generated@@172 ($generated@@176 $generated@@173 $generated@@33) $generated@@224 $generated@@227) $generated@@225)))) $generated@@226))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173 $generated@@7 ($generated@@174 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and (or ($generated@@28 $generated@@230 $generated@@232 $generated@@233) (and (< 1 $generated@@23) (and (and ($generated@@29 $generated@@27 $generated@@232 ($generated@@30 $generated@@230)) ($generated@@60 $generated@@27 $generated@@232 ($generated@@30 $generated@@230) $generated@@229)) (and ($generated@@29 $generated@@27 $generated@@233 ($generated@@30 $generated@@230)) ($generated@@60 $generated@@27 $generated@@233 ($generated@@30 $generated@@230) $generated@@229))))) ($generated@@61 $generated@@229)) ($generated@@60 $generated@@27 ($generated@@24 $generated@@230 $generated@@231 $generated@@232 $generated@@233) ($generated@@30 $generated@@230) $generated@@229))
 :pattern ( ($generated@@60 $generated@@27 ($generated@@24 $generated@@230 $generated@@231 $generated@@232 $generated@@233) ($generated@@30 $generated@@230) $generated@@229))
))))
(assert (forall (($generated@@234 T@U) ) (! (= ($generated@@154 ($generated@@98 $generated@@27 $generated@@234)) ($generated@@155 $generated@@234))
 :pattern ( ($generated@@154 ($generated@@98 $generated@@27 $generated@@234)))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 Int) ($generated@@238 T@U) ) (! (= ($generated@@65 $generated@@235 ($generated@@25 $generated@@236) $generated@@237 $generated@@238) ($generated@@65 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
 :pattern ( ($generated@@65 $generated@@235 ($generated@@25 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@24 $generated@@239 ($generated@@25 $generated@@240) $generated@@241 $generated@@242) ($generated@@24 $generated@@239 $generated@@240 $generated@@241 $generated@@242))
 :pattern ( ($generated@@24 $generated@@239 ($generated@@25 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> ($generated@@75 $generated@@244 ($generated@@30 $generated@@243)) (and (= ($generated@@98 $generated@@27 ($generated@@97 $generated@@27 $generated@@244)) $generated@@244) ($generated@@29 $generated@@27 ($generated@@97 $generated@@27 $generated@@244) ($generated@@30 $generated@@243))))
 :pattern ( ($generated@@75 $generated@@244 ($generated@@30 $generated@@243)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and ($generated@@61 $generated@@247) (and ($generated@@87 $generated@@245) ($generated@@60 $generated@@27 $generated@@245 ($generated@@30 $generated@@246) $generated@@247))) ($generated@@60 $generated@@27 ($generated@@32 $generated@@245) ($generated@@30 $generated@@246) $generated@@247))
 :pattern ( ($generated@@60 $generated@@27 ($generated@@32 $generated@@245) ($generated@@30 $generated@@246) $generated@@247))
)))
(assert (= $generated@@59 ($generated@@26 $generated@@27 $generated@@59)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! (= ($generated@@35 ($generated@@26 $generated@@33 $generated@@248) ($generated@@26 $generated@@27 $generated@@249)) ($generated@@26 $generated@@27 ($generated@@35 $generated@@248 $generated@@249)))
 :pattern ( ($generated@@35 ($generated@@26 $generated@@33 $generated@@248) ($generated@@26 $generated@@27 $generated@@249)))
)))
(assert (forall (($generated@@250 Int) ) (! (= ($generated@@98 $generated@@8 ($generated@@12 ($generated@@45 $generated@@250))) ($generated@@26 $generated@@33 ($generated@@98 $generated@@8 ($generated@@12 $generated@@250))))
 :pattern ( ($generated@@98 $generated@@8 ($generated@@12 ($generated@@45 $generated@@250))))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@T) ) (! (= ($generated@@98 $generated@@252 ($generated@@26 $generated@@252 $generated@@251)) ($generated@@26 $generated@@33 ($generated@@98 $generated@@252 $generated@@251)))
 :pattern ( ($generated@@98 $generated@@252 ($generated@@26 $generated@@252 $generated@@251)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ) (!  (=> (or ($generated@@44 $generated@@253 $generated@@255) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@255 ($generated@@30 $generated@@253)))) (<= ($generated@@45 0) ($generated@@43 $generated@@253 $generated@@254 $generated@@255)))
 :pattern ( ($generated@@43 $generated@@253 $generated@@254 $generated@@255))
))))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 Int) ($generated@@259 T@U) ) (!  (=> (or ($generated@@66 $generated@@256 $generated@@258 $generated@@259) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@259 ($generated@@30 $generated@@256)) (and (<= ($generated@@45 0) $generated@@258) (< $generated@@258 ($generated@@43 $generated@@256 ($generated@@25 $generated@@67) $generated@@259)))))) ($generated@@75 ($generated@@65 $generated@@256 $generated@@257 $generated@@258 $generated@@259) $generated@@256))
 :pattern ( ($generated@@65 $generated@@256 $generated@@257 $generated@@258 $generated@@259))
))))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! ($generated@@60 $generated@@8 $generated@@261 $generated $generated@@260)
 :pattern ( ($generated@@60 $generated@@8 $generated@@261 $generated $generated@@260))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (!  (=> ($generated@@61 $generated@@265) (= ($generated@@60 $generated@@27 ($generated@@35 $generated@@263 $generated@@264) ($generated@@30 $generated@@262) $generated@@265)  (and ($generated@@114 $generated@@263 $generated@@262 $generated@@265) ($generated@@60 $generated@@27 $generated@@264 ($generated@@30 $generated@@262) $generated@@265))))
 :pattern ( ($generated@@60 $generated@@27 ($generated@@35 $generated@@263 $generated@@264) ($generated@@30 $generated@@262) $generated@@265))
)))
(assert (forall (($generated@@266 T@U) ) (! ($generated@@29 $generated@@8 $generated@@266 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@266 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@267 () Int)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 (T@U) Bool)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () Int)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@278  (=> (and (and (<= ($generated@@45 0) $generated@@267) (< $generated@@267 ($generated@@43 $generated@@268 ($generated@@25 $generated@@67) $generated@@269))) (= ($generated@@43 $generated@@268 ($generated@@25 $generated@@67) $generated@@269) ($generated@@43 $generated@@268 ($generated@@25 $generated@@67) ($generated@@54 $generated@@268 ($generated@@25 $generated@@67) $generated@@269)))) (=> (and (and (and ($generated@@61 $generated@@270) ($generated@@271 $generated@@270)) (and (= $generated@@272 $generated@@270) ($generated@@60 $generated@@8 ($generated@@12 $generated@@267) $generated $generated@@270))) (and (and ($generated@@60 $generated@@27 $generated@@269 ($generated@@30 $generated@@268) $generated@@270) ($generated@@89 $generated@@268 $generated@@269)) (and (= $generated@@273 ($generated@@54 $generated@@268 ($generated@@25 $generated@@67) $generated@@269)) ($generated@@60 $generated@@27 $generated@@273 ($generated@@30 $generated@@268) $generated@@270)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (<= ($generated@@45 0) $generated@@267)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< $generated@@267 ($generated@@43 $generated@@268 ($generated@@25 ($generated@@25 $generated@@67)) $generated@@273))) (=> (and (and (and (<= ($generated@@45 0) $generated@@267) (< $generated@@267 ($generated@@43 $generated@@268 ($generated@@25 $generated@@67) $generated@@273))) (and ($generated@@66 $generated@@268 $generated@@267 ($generated@@54 $generated@@268 ($generated@@25 $generated@@67) $generated@@269)) ($generated@@60 $generated@@27 $generated@@269 ($generated@@30 $generated@@268) $generated@@270))) (and (and ($generated@@44 $generated@@268 $generated@@269) (= $generated@@274 (- (- ($generated@@43 $generated@@268 ($generated@@25 $generated@@67) $generated@@269) 1) $generated@@267))) (and ($generated@@60 $generated@@8 ($generated@@12 $generated@@274) $generated $generated@@270) ($generated@@60 $generated@@27 $generated@@269 ($generated@@30 $generated@@268) $generated@@270)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@45 0) $generated@@274)) (=> (= (ControlFlow 0 2) (- 0 1)) (< $generated@@274 ($generated@@43 $generated@@268 ($generated@@25 ($generated@@25 $generated@@67)) $generated@@269)))))))))))
(let (($generated@@279  (=> (and (not (and (<= ($generated@@45 0) $generated@@267) (< $generated@@267 ($generated@@43 $generated@@268 ($generated@@25 $generated@@67) $generated@@269)))) (= (ControlFlow 0 7) 2)) $generated@@278)))
(let (($generated@@280  (=> (and (<= ($generated@@45 0) $generated@@267) (< $generated@@267 ($generated@@43 $generated@@268 ($generated@@25 $generated@@67) $generated@@269))) (=> (and (and (and ($generated@@60 $generated@@27 $generated@@269 ($generated@@30 $generated@@268) $generated@@272) ($generated@@44 $generated@@268 $generated@@269)) (and ($generated@@60 $generated@@27 $generated@@269 ($generated@@30 $generated@@268) $generated@@272) ($generated@@89 $generated@@268 $generated@@269))) (and (and (= $generated@@275 ($generated@@54 $generated@@268 ($generated@@25 $generated@@67) $generated@@269)) ($generated@@60 $generated@@27 $generated@@275 ($generated@@30 $generated@@268) $generated@@272)) (and ($generated@@44 $generated@@268 ($generated@@54 $generated@@268 ($generated@@25 $generated@@67) $generated@@269)) (= (ControlFlow 0 6) 2)))) $generated@@278))))
(let (($generated@@281  (=> (< $generated@@267 ($generated@@45 0)) (and (=> (= (ControlFlow 0 9) 6) $generated@@280) (=> (= (ControlFlow 0 9) 7) $generated@@279)))))
(let (($generated@@282  (=> (<= ($generated@@45 0) $generated@@267) (=> (and ($generated@@60 $generated@@27 $generated@@269 ($generated@@30 $generated@@268) $generated@@272) ($generated@@44 $generated@@268 $generated@@269)) (and (=> (= (ControlFlow 0 8) 6) $generated@@280) (=> (= (ControlFlow 0 8) 7) $generated@@279))))))
(let (($generated@@283  (=> (= $generated@@276 ($generated@@174 $generated@@277 $generated@@272 $generated@@1 false)) (and (=> (= (ControlFlow 0 10) 8) $generated@@282) (=> (= (ControlFlow 0 10) 9) $generated@@281)))))
(let (($generated@@284  (=> (and ($generated@@61 $generated@@272) ($generated@@271 $generated@@272)) (=> (and (and (and ($generated@@29 $generated@@27 $generated@@269 ($generated@@30 $generated@@268)) ($generated@@60 $generated@@27 $generated@@269 ($generated@@30 $generated@@268) $generated@@272)) ($generated@@121 $generated@@269)) (and (= 5 $generated@@23) (= (ControlFlow 0 11) 10))) $generated@@283))))
$generated@@284))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
