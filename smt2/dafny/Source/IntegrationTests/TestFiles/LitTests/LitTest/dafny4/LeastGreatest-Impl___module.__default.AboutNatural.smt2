(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 () Int)
(declare-fun $generated@@19 (T@U T@U Int) Bool)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U Int) Bool)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (Int) T@U)
(declare-fun $generated@@47 (T@U Int) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@96 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(declare-fun $generated@@156 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@159 (Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@22 T@U) ($generated@@23 Int) ($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@25) (=> ($generated@@19 $generated@@22 $generated@@24 $generated@@23) ($generated@@19 $generated@@22 $generated@@25 $generated@@23)))
 :pattern ( ($generated@@19 $generated@@22 $generated@@24 $generated@@23) ($generated@@20 $generated@@24 $generated@@26) ($generated@@20 $generated@@25 $generated@@26))
))))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@21 $generated@@28 $generated@@29) ($generated@@21 $generated@@29 $generated@@30)) ($generated@@21 $generated@@28 $generated@@30))
 :pattern ( ($generated@@21 $generated@@28 $generated@@29) ($generated@@21 $generated@@29 $generated@@30))
 :pattern ( ($generated@@21 $generated@@28 $generated@@29) ($generated@@21 $generated@@28 $generated@@30))
)))
(assert (= ($generated@@2 $generated@@33) 3))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 Int) ) (!  (=> (or ($generated@@34 ($generated@@32 $generated@@33 $generated@@40) $generated@@41) (< 1 $generated@@18)) (and (and (=> (< 0 ($generated@@35 $generated@@40)) (=> (or (not (= $generated@@41 ($generated@@36 0))) (not true)) ($generated@@34 ($generated@@37 $generated@@40 ($generated@@38 1)) (- $generated@@41 1)))) (=> (=> (< 0 ($generated@@35 $generated@@40)) (or (= $generated@@41 ($generated@@36 0)) ($generated@@19 ($generated@@31 $generated@@39) ($generated@@37 $generated@@40 ($generated@@38 1)) (- $generated@@41 1)))) (=> (= ($generated@@36 0) ($generated@@35 $generated@@40)) (forall (($generated@@42 T@U) ) (!  (=> ($generated@@20 $generated@@42 $generated@@40) ($generated@@34 $generated@@42 $generated@@41))
 :pattern ( ($generated@@19 ($generated@@31 $generated@@39) $generated@@42 $generated@@41))
))))) (= ($generated@@19 ($generated@@31 $generated@@39) ($generated@@32 $generated@@33 $generated@@40) $generated@@41)  (and (=> (< 0 ($generated@@35 $generated@@40)) (or (= $generated@@41 ($generated@@36 0)) ($generated@@19 ($generated@@31 $generated@@39) ($generated@@37 $generated@@40 ($generated@@38 1)) (- $generated@@41 1)))) (=> (= ($generated@@36 0) ($generated@@35 $generated@@40)) (exists (($generated@@43 T@U) ) (!  (and ($generated@@20 $generated@@43 $generated@@40) ($generated@@19 ($generated@@31 $generated@@39) $generated@@43 $generated@@41))
 :pattern ( ($generated@@19 ($generated@@31 $generated@@39) $generated@@43 $generated@@41))
)))))))
 :weight 3
 :pattern ( ($generated@@19 ($generated@@31 $generated@@39) ($generated@@32 $generated@@33 $generated@@40) $generated@@41))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 Int) ($generated@@46 Int) ) (!  (=> (and (and (<= 0 $generated@@45) (<= 0 $generated@@46)) (<= (+ $generated@@45 $generated@@46) ($generated@@35 $generated@@44))) (= ($generated@@37 ($generated@@37 $generated@@44 ($generated@@38 $generated@@45)) ($generated@@38 $generated@@46)) ($generated@@37 $generated@@44 ($generated@@38 (+ $generated@@45 $generated@@46)))))
 :pattern ( ($generated@@37 ($generated@@37 $generated@@44 ($generated@@38 $generated@@45)) ($generated@@38 $generated@@46)))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@48 T@U) ($generated@@49 Int) ) (!  (=> (exists (($generated@@50 T@U) ) (! ($generated@@19 ($generated@@31 $generated@@48) $generated@@50 $generated@@49)
 :pattern ( ($generated@@19 ($generated@@31 $generated@@48) $generated@@50 $generated@@49))
)) ($generated@@47 ($generated@@31 $generated@@48) $generated@@49))
 :pattern ( ($generated@@47 ($generated@@31 $generated@@48) $generated@@49))
))))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@51 T@U) ($generated@@52 Int) ($generated@@53 T@U) ) (!  (=> (= $generated@@53 ($generated@@38 0)) (not ($generated@@19 $generated@@51 $generated@@53 $generated@@52)))
 :pattern ( ($generated@@19 $generated@@51 $generated@@53 $generated@@52))
))))
(assert (forall (($generated@@54 Int) ) (! (= ($generated@@36 $generated@@54) $generated@@54)
 :pattern ( ($generated@@36 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@32 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@32 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@57 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@57 $generated@@60 $generated@@59))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@61 T@U) ($generated@@62 Int) ) (!  (=> ($generated@@47 ($generated@@31 $generated@@61) $generated@@62) (exists (($generated@@63 T@U) ) (! ($generated@@19 ($generated@@31 $generated@@61) $generated@@63 $generated@@62)
 :pattern ( ($generated@@19 ($generated@@31 $generated@@61) $generated@@63 $generated@@62))
)))
 :pattern ( ($generated@@47 ($generated@@31 $generated@@61) $generated@@62))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 Int) ) (! (= ($generated@@19 ($generated@@31 $generated@@64) $generated@@65 $generated@@66) ($generated@@19 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@19 ($generated@@31 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (and ($generated@@67 $generated@@69) (<= ($generated@@35 $generated@@69) ($generated@@35 $generated@@68))) (and (= ($generated@@67 ($generated@@37 $generated@@68 $generated@@69)) ($generated@@67 $generated@@68)) (= ($generated@@35 ($generated@@37 $generated@@68 $generated@@69)) (- ($generated@@35 $generated@@68) ($generated@@35 $generated@@69)))))
 :pattern ( ($generated@@37 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 Int) ) (!  (=> (<= 0 $generated@@70) (and ($generated@@67 ($generated@@38 $generated@@70)) (= ($generated@@35 ($generated@@38 $generated@@70)) $generated@@70)))
 :pattern ( ($generated@@38 $generated@@70))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (or ($generated@@34 ($generated@@32 $generated@@33 $generated@@72) ($generated@@36 $generated@@73)) (< 1 $generated@@18)) (and (and (=> (< 0 ($generated@@35 $generated@@72)) (=> (or (not (= ($generated@@36 $generated@@73) ($generated@@36 0))) (not true)) ($generated@@34 ($generated@@37 $generated@@72 ($generated@@38 1)) ($generated@@36 (- $generated@@73 1))))) (=> (=> (< 0 ($generated@@35 $generated@@72)) (or (= ($generated@@36 $generated@@73) ($generated@@36 0)) ($generated@@19 ($generated@@31 $generated@@71) ($generated@@37 $generated@@72 ($generated@@38 1)) ($generated@@36 (- $generated@@73 1))))) (=> (= ($generated@@36 0) ($generated@@35 $generated@@72)) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@20 $generated@@74 $generated@@72) ($generated@@34 $generated@@74 $generated@@73))
 :pattern ( ($generated@@19 ($generated@@31 $generated@@71) $generated@@74 $generated@@73))
))))) (= ($generated@@19 ($generated@@31 $generated@@71) ($generated@@32 $generated@@33 $generated@@72) ($generated@@36 $generated@@73))  (and (=> (< 0 ($generated@@35 $generated@@72)) (or (= ($generated@@36 $generated@@73) ($generated@@36 0)) ($generated@@19 ($generated@@31 $generated@@71) ($generated@@37 $generated@@72 ($generated@@38 1)) ($generated@@36 (- $generated@@73 1))))) (=> (= ($generated@@36 0) ($generated@@35 $generated@@72)) (exists (($generated@@75 T@U) ) (!  (and ($generated@@20 $generated@@75 $generated@@72) ($generated@@19 ($generated@@31 $generated@@71) $generated@@75 $generated@@73))
 :pattern ( ($generated@@19 ($generated@@31 $generated@@71) $generated@@75 $generated@@73))
)))))))
 :weight 3
 :pattern ( ($generated@@19 ($generated@@31 $generated@@71) ($generated@@32 $generated@@33 $generated@@72) ($generated@@36 $generated@@73)))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (or ($generated@@21 $generated@@76 $generated@@77) (= $generated@@76 $generated@@77)) ($generated@@21 $generated@@77 $generated@@76))
 :pattern ( ($generated@@21 $generated@@76 $generated@@77) ($generated@@21 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@20 $generated@@78 $generated@@79) ($generated@@21 $generated@@78 $generated@@79))
 :pattern ( ($generated@@20 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ) (! (= ($generated@@47 ($generated@@31 $generated@@80) $generated@@81) ($generated@@47 $generated@@80 $generated@@81))
 :pattern ( ($generated@@47 ($generated@@31 $generated@@80) $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ) (! (<= 0 ($generated@@35 $generated@@82))
 :pattern ( ($generated@@35 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@57 $generated@@84 ($generated@@58 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@58 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (and (and (and (=> ($generated@@21 $generated@@85 $generated@@86) (or (not (= $generated@@85 $generated@@86)) (not true))) (=> (and ($generated@@67 $generated@@85) (not ($generated@@67 $generated@@86))) ($generated@@21 $generated@@85 $generated@@86))) (=> (and ($generated@@67 $generated@@85) ($generated@@67 $generated@@86)) (= ($generated@@21 $generated@@85 $generated@@86) (< ($generated@@35 $generated@@85) ($generated@@35 $generated@@86))))) (=> (and ($generated@@21 $generated@@85 $generated@@86) ($generated@@67 $generated@@86)) ($generated@@67 $generated@@85)))
 :pattern ( ($generated@@21 $generated@@85 $generated@@86))
)))
(assert  (=> (<= 1 $generated@@18) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (or ($generated@@34 $generated@@88 $generated@@89) (< 1 $generated@@18)) (and (and (=> (< 0 ($generated@@35 $generated@@88)) (=> (or (not (= $generated@@89 ($generated@@36 0))) (not true)) ($generated@@34 ($generated@@37 $generated@@88 ($generated@@38 1)) (- $generated@@89 1)))) (=> (=> (< 0 ($generated@@35 $generated@@88)) (or (= $generated@@89 ($generated@@36 0)) ($generated@@19 $generated@@87 ($generated@@37 $generated@@88 ($generated@@38 1)) (- $generated@@89 1)))) (=> (= ($generated@@36 0) ($generated@@35 $generated@@88)) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@20 $generated@@90 $generated@@88) ($generated@@34 $generated@@90 $generated@@89))
 :pattern ( ($generated@@19 $generated@@87 $generated@@90 $generated@@89))
))))) (= ($generated@@19 ($generated@@31 $generated@@87) $generated@@88 $generated@@89)  (and (=> (< 0 ($generated@@35 $generated@@88)) (or (= $generated@@89 ($generated@@36 0)) ($generated@@19 $generated@@87 ($generated@@37 $generated@@88 ($generated@@38 1)) (- $generated@@89 1)))) (=> (= ($generated@@36 0) ($generated@@35 $generated@@88)) (exists (($generated@@91 T@U) ) (!  (and ($generated@@20 $generated@@91 $generated@@88) ($generated@@19 $generated@@87 $generated@@91 $generated@@89))
 :pattern ( ($generated@@19 $generated@@87 $generated@@91 $generated@@89))
)))))))
 :pattern ( ($generated@@19 ($generated@@31 $generated@@87) $generated@@88 $generated@@89))
))))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@92 $generated@@102 $generated@@103 $generated@@104 ($generated@@98 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@92 $generated@@109 $generated@@110 $generated@@111 ($generated@@98 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@92 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@92 $generated@@118 $generated@@119 $generated@@120 ($generated@@98 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@92 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))) (= ($generated@@2 $generated@@93) 4)) (= ($generated@@2 $generated@@94) 5)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@96 $generated@@127 $generated@@128 ($generated@@99 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@131) $generated@@129)
 :weight 0
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@96 $generated@@132 $generated@@133 ($generated@@99 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@96 $generated@@132 $generated@@133 $generated@@135 $generated@@137)))
 :weight 0
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@2 ($generated@@97 $generated@@138 $generated@@139)) 6))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@97 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@97 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@7 ($generated@@92 $generated@@93 $generated@@94 $generated@@3 ($generated@@95 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@7 ($generated@@57 $generated@@3 ($generated@@96 $generated@@94 $generated@@33 ($generated@@96 $generated@@93 ($generated@@97 $generated@@94 $generated@@33) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94 $generated@@3 ($generated@@95 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@67 $generated@@150) (= $generated@@150 ($generated@@38 ($generated@@35 $generated@@150))))
 :pattern ( ($generated@@35 $generated@@150))
 :pattern ( ($generated@@67 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and ($generated@@67 $generated@@152) (<= ($generated@@35 $generated@@152) ($generated@@35 $generated@@151))) (or (and (= $generated@@152 ($generated@@38 0)) (= ($generated@@37 $generated@@151 $generated@@152) $generated@@151)) (and (or (not (= $generated@@152 ($generated@@38 0))) (not true)) ($generated@@21 ($generated@@37 $generated@@151 $generated@@152) $generated@@151))))
 :pattern ( ($generated@@37 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 Int) ) (! (= ($generated@@58 $generated@@4 ($generated@@8 ($generated@@36 $generated@@153))) ($generated@@32 $generated@@33 ($generated@@58 $generated@@4 ($generated@@8 $generated@@153))))
 :pattern ( ($generated@@58 $generated@@4 ($generated@@8 ($generated@@36 $generated@@153))))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@58 $generated@@155 ($generated@@32 $generated@@155 $generated@@154)) ($generated@@32 $generated@@33 ($generated@@58 $generated@@155 $generated@@154)))
 :pattern ( ($generated@@58 $generated@@155 ($generated@@32 $generated@@155 $generated@@154)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (! ($generated@@156 $generated@@4 $generated@@158 $generated $generated@@157)
 :pattern ( ($generated@@156 $generated@@4 $generated@@158 $generated $generated@@157))
)))
(assert  (=> (<= 0 $generated@@18) (forall (($generated@@160 T@U) ($generated@@161 Int) ) (!  (=> (or ($generated@@159 $generated@@161) (< 0 $generated@@18)) (and (=> (or (not (= $generated@@161 ($generated@@36 0))) (not true)) ($generated@@159 (- $generated@@161 1))) (= ($generated@@47 ($generated@@31 $generated@@160) $generated@@161)  (or (= $generated@@161 ($generated@@36 0)) ($generated@@47 $generated@@160 (- $generated@@161 1))))))
 :pattern ( ($generated@@47 ($generated@@31 $generated@@160) $generated@@161))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@162 () T@U)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 (T@U) Bool)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@173  (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@47 ($generated@@31 ($generated@@31 $generated@@162)) $generated@@163) (<= ($generated@@36 0) $generated@@163)))))
(let (($generated@@174  (=> (and (< $generated@@163 ($generated@@36 0)) (= (ControlFlow 0 5) 2)) $generated@@173)))
(let (($generated@@175  (=> (<= ($generated@@36 0) $generated@@163) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@36 0) $generated@@163)) (=> (<= ($generated@@36 0) $generated@@163) (=> (and (and (and ($generated@@164 $generated@@165) ($generated@@166 $generated@@165)) ($generated@@159 $generated@@163)) (and (and ($generated@@159 $generated@@163) (and ($generated@@47 ($generated@@31 $generated@@162) $generated@@163) (or (= $generated@@163 ($generated@@36 0)) ($generated@@47 ($generated@@31 $generated@@162) (- $generated@@163 1))))) (and (= $generated@@167 $generated@@165) (= (ControlFlow 0 3) 2)))) $generated@@173))))))
(let (($generated@@176  (and (=> (= (ControlFlow 0 6) 3) $generated@@175) (=> (= (ControlFlow 0 6) 5) $generated@@174))))
(let (($generated@@177  (=> (not ($generated@@47 ($generated@@31 $generated@@162) $generated@@163)) (=> (and (= $generated@@167 $generated@@168) (= (ControlFlow 0 9) 6)) $generated@@176))))
(let (($generated@@178  (=> ($generated@@47 ($generated@@31 $generated@@162) $generated@@163) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@159 $generated@@163) (or ($generated@@47 ($generated@@31 $generated@@162) $generated@@163) (or (= $generated@@163 ($generated@@36 0)) ($generated@@47 ($generated@@31 ($generated@@31 $generated@@162)) (- $generated@@163 1)))))) (=> (=> ($generated@@159 $generated@@163) (or ($generated@@47 ($generated@@31 $generated@@162) $generated@@163) (or (= $generated@@163 ($generated@@36 0)) ($generated@@47 ($generated@@31 ($generated@@31 $generated@@162)) (- $generated@@163 1))))) (=> (and ($generated@@164 $generated@@169) ($generated@@166 $generated@@169)) (=> (and (and (<= ($generated@@36 0) $generated@@163) (= $generated@@168 $generated@@169)) (and (= $generated@@167 $generated@@169) (= (ControlFlow 0 7) 6))) $generated@@176)))))))
(let (($generated@@179  (=> (= $generated@@170 ($generated@@95 $generated@@171 $generated@@172 $generated@@1 false)) (=> (and (and (and ($generated@@164 $generated@@168) ($generated@@166 $generated@@168)) (= $generated@@172 $generated@@168)) (and (and (forall (($generated@@180 Int) ) (!  (=> (and ($generated@@7 ($generated@@32 $generated@@3 ($generated@@6 true))) (and (<= 0 $generated@@180) (< $generated@@180 $generated@@163))) (= ($generated@@47 ($generated@@31 $generated@@162) $generated@@180) (<= ($generated@@36 0) $generated@@180)))
 :pattern ( ($generated@@47 ($generated@@31 $generated@@162) $generated@@180))
)) ($generated@@156 $generated@@4 ($generated@@8 $generated@@163) $generated $generated@@168)) (and ($generated@@159 $generated@@163) ($generated@@159 $generated@@163)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@178) (=> (= (ControlFlow 0 10) 9) $generated@@177))))))
(let (($generated@@181  (=> (and (and ($generated@@164 $generated@@172) ($generated@@166 $generated@@172)) (and (= 2 $generated@@18) (= (ControlFlow 0 11) 10))) $generated@@179)))
$generated@@181)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
