(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@34 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Int)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@U) Int)
(declare-fun $generated@@130 (T@U) Int)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@150 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (! (= ($generated@@21 $generated@@23 ($generated@@22 $generated@@24) $generated@@25) ($generated@@21 $generated@@23 $generated@@24 $generated@@25))
 :pattern ( ($generated@@21 $generated@@23 ($generated@@22 $generated@@24) $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) $generated@@2))
(assert (= ($generated@@5 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@31 $generated@@32))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33)))
)))
(assert (= ($generated@@5 $generated@@35) 4))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@37 $generated@@39) ($generated@@34 $generated@@35 $generated@@27 ($generated@@36 $generated@@38) $generated@@39))
 :pattern ( ($generated@@34 $generated@@35 $generated@@27 ($generated@@36 $generated@@38) $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ) (! ($generated@@28 $generated@@35 $generated@@27 ($generated@@36 $generated@@40))
 :pattern ( ($generated@@28 $generated@@35 $generated@@27 ($generated@@36 $generated@@40)))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@42 $generated@@49 $generated@@51) (and (< 1 $generated@@41) ($generated@@28 $generated@@35 $generated@@51 ($generated@@36 $generated@@49)))) (and (=> (not ($generated@@43 $generated@@51)) (let (($generated@@52 ($generated@@44 $generated@@51)))
($generated@@42 $generated@@49 $generated@@52))) (= ($generated@@21 $generated@@49 ($generated@@22 $generated@@50) $generated@@51) (ite ($generated@@43 $generated@@51) $generated@@45 (let (($generated@@53 ($generated@@44 $generated@@51)))
(let (($generated@@54 ($generated@@46 $generated@@51)))
($generated@@47 ($generated@@48 $generated@@45 $generated@@54) ($generated@@21 $generated@@49 $generated@@50 $generated@@53))))))))
 :pattern ( ($generated@@21 $generated@@49 ($generated@@22 $generated@@50) $generated@@51))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 $generated@@56) $generated@@56)
 :pattern ( ($generated@@55 $generated@@57 $generated@@56))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@28 $generated@@35 ($generated@@58 $generated@@61 $generated@@62) ($generated@@36 $generated@@60))  (and ($generated@@59 $generated@@61 $generated@@60) ($generated@@28 $generated@@35 $generated@@62 ($generated@@36 $generated@@60))))
 :pattern ( ($generated@@28 $generated@@35 ($generated@@58 $generated@@61 $generated@@62) ($generated@@36 $generated@@60)))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@43 $generated@@63) (= ($generated@@26 $generated@@63) $generated@@2))
 :pattern ( ($generated@@43 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@64 $generated@@65) (= ($generated@@26 $generated@@65) $generated@@3))
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@66 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@66 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or (not (= $generated@@72 $generated@@73)) (not true)) (= ($generated@@70 $generated@@71 $generated@@73) ($generated@@70 ($generated@@48 $generated@@71 $generated@@72) $generated@@73)))
 :pattern ( ($generated@@48 $generated@@71 $generated@@72) ($generated@@70 $generated@@71 $generated@@73))
)))
(assert (= ($generated@@5 $generated@@74) 5))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@42 $generated@@75 ($generated@@55 $generated@@35 $generated@@77)) (and (< 1 $generated@@41) ($generated@@28 $generated@@35 $generated@@77 ($generated@@36 $generated@@75)))) (and (=> (not ($generated@@10 ($generated@@55 $generated@@6 ($generated@@9 ($generated@@43 ($generated@@55 $generated@@35 $generated@@77)))))) (let (($generated@@78 ($generated@@55 $generated@@35 ($generated@@44 ($generated@@55 $generated@@35 $generated@@77)))))
($generated@@42 $generated@@75 $generated@@78))) (= ($generated@@21 $generated@@75 ($generated@@22 $generated@@76) ($generated@@55 $generated@@35 $generated@@77)) (ite ($generated@@43 ($generated@@55 $generated@@35 $generated@@77)) $generated@@45 (let (($generated@@79 ($generated@@55 $generated@@35 ($generated@@44 ($generated@@55 $generated@@35 $generated@@77)))))
(let (($generated@@80 ($generated@@55 $generated@@74 ($generated@@46 ($generated@@55 $generated@@35 $generated@@77)))))
($generated@@47 ($generated@@48 $generated@@45 $generated@@80) ($generated@@21 $generated@@75 ($generated@@22 $generated@@76) $generated@@79))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@75 ($generated@@22 $generated@@76) ($generated@@55 $generated@@35 $generated@@77)))
))))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@64 $generated@@81) (exists (($generated@@82 T@U) ($generated@@83 T@U) ) (= $generated@@81 ($generated@@58 $generated@@82 $generated@@83))))
 :pattern ( ($generated@@64 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@43 $generated@@84) (= $generated@@84 $generated@@27))
 :pattern ( ($generated@@43 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@48 $generated@@86 $generated@@87)) (+ ($generated@@85 $generated@@86) 1))
 :pattern ( ($generated@@85 ($generated@@48 $generated@@86 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@67 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@34 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@67 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@93 ($generated@@36 $generated@@95)) $generated@@1) (= ($generated@@94 ($generated@@36 $generated@@95)) $generated@@4))
 :pattern ( ($generated@@36 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@85 ($generated@@47 $generated@@96 $generated@@97)) (+ ($generated@@85 $generated@@96) ($generated@@85 $generated@@97)))
 :pattern ( ($generated@@85 ($generated@@47 $generated@@96 $generated@@97)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@28 $generated@@35 $generated@@99 ($generated@@36 $generated@@98)) (or ($generated@@43 $generated@@99) ($generated@@64 $generated@@99)))
 :pattern ( ($generated@@64 $generated@@99) ($generated@@28 $generated@@35 $generated@@99 ($generated@@36 $generated@@98)))
 :pattern ( ($generated@@43 $generated@@99) ($generated@@28 $generated@@35 $generated@@99 ($generated@@36 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@100 ($generated@@30 $generated@@101)) (forall (($generated@@102 T@U) ) (!  (=> (< 0 ($generated@@70 $generated@@100 $generated@@102)) ($generated@@59 $generated@@102 $generated@@101))
 :pattern ( ($generated@@70 $generated@@100 $generated@@102))
)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@100 ($generated@@30 $generated@@101)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@59 ($generated@@67 $generated@@105 $generated@@103) $generated@@104) ($generated@@28 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@59 ($generated@@67 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@31 $generated@@106) (forall (($generated@@107 T@U) ) (!  (and (<= 0 ($generated@@70 $generated@@106 $generated@@107)) (<= ($generated@@70 $generated@@106 $generated@@107) ($generated@@85 $generated@@106)))
 :pattern ( ($generated@@70 $generated@@106 $generated@@107))
)))
 :pattern ( ($generated@@31 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (<= 0 ($generated@@85 $generated@@108))
 :pattern ( ($generated@@85 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@70 $generated@@45 $generated@@109) 0)
 :pattern ( ($generated@@70 $generated@@45 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@26 ($generated@@58 $generated@@110 $generated@@111)) $generated@@3)
 :pattern ( ($generated@@58 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@46 ($generated@@58 $generated@@112 $generated@@113)) $generated@@112)
 :pattern ( ($generated@@58 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@44 ($generated@@58 $generated@@114 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@58 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@70 ($generated@@48 $generated@@116 $generated@@117) $generated@@117) (+ ($generated@@70 $generated@@116 $generated@@117) 1))
 :pattern ( ($generated@@48 $generated@@116 $generated@@117))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (and (or ($generated@@42 $generated@@119 $generated@@121) (and (< 1 $generated@@41) (and ($generated@@28 $generated@@35 $generated@@121 ($generated@@36 $generated@@119)) ($generated@@34 $generated@@35 $generated@@121 ($generated@@36 $generated@@119) $generated@@118)))) ($generated@@37 $generated@@118)) ($generated@@34 $generated@@29 ($generated@@21 $generated@@119 $generated@@120 $generated@@121) ($generated@@30 $generated@@119) $generated@@118))
 :pattern ( ($generated@@34 $generated@@29 ($generated@@21 $generated@@119 $generated@@120 $generated@@121) ($generated@@30 $generated@@119) $generated@@118))
))))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@30 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@30 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@93 ($generated@@30 $generated@@124)) $generated)
 :pattern ( ($generated@@30 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@36 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@36 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@66 $generated@@128 ($generated@@67 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@67 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@129 $generated@@131) ($generated@@130 ($generated@@58 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@58 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (< ($generated@@130 $generated@@134) ($generated@@130 ($generated@@58 $generated@@133 $generated@@134)))
 :pattern ( ($generated@@58 $generated@@133 $generated@@134))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (or ($generated@@42 $generated@@135 $generated@@137) (and (< 1 $generated@@41) ($generated@@28 $generated@@35 $generated@@137 ($generated@@36 $generated@@135)))) ($generated@@28 $generated@@29 ($generated@@21 $generated@@135 $generated@@136 $generated@@137) ($generated@@30 $generated@@135)))
 :pattern ( ($generated@@21 $generated@@135 $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ) (!  (and (= (= ($generated@@85 $generated@@138) 0) (= $generated@@138 $generated@@45)) (=> (or (not (= ($generated@@85 $generated@@138) 0)) (not true)) (exists (($generated@@139 T@U) ) (! (< 0 ($generated@@70 $generated@@138 $generated@@139))
 :pattern ( ($generated@@70 $generated@@138 $generated@@139))
))))
 :pattern ( ($generated@@85 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@70 ($generated@@47 $generated@@140 $generated@@141) $generated@@142) (+ ($generated@@70 $generated@@140 $generated@@142) ($generated@@70 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@70 ($generated@@47 $generated@@140 $generated@@141) $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and ($generated@@37 $generated@@145) (and ($generated@@64 $generated@@143) ($generated@@34 $generated@@35 $generated@@143 ($generated@@36 $generated@@144) $generated@@145))) ($generated@@88 ($generated@@46 $generated@@143) $generated@@144 $generated@@145))
 :pattern ( ($generated@@88 ($generated@@46 $generated@@143) $generated@@144 $generated@@145))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@146 $generated@@156 $generated@@157 $generated@@158 ($generated@@152 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@146 $generated@@163 $generated@@164 $generated@@165 ($generated@@152 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@146 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@146 $generated@@172 $generated@@173 $generated@@174 ($generated@@152 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@146 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (= ($generated@@5 $generated@@147) 6)) (= ($generated@@5 $generated@@148) 7)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@150 $generated@@181 $generated@@182 ($generated@@153 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@183) $generated@@185) $generated@@183)
 :weight 0
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@190 $generated@@191) (= ($generated@@150 $generated@@186 $generated@@187 ($generated@@153 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@188) $generated@@191) ($generated@@150 $generated@@186 $generated@@187 $generated@@189 $generated@@191)))
 :weight 0
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@5 ($generated@@151 $generated@@192 $generated@@193)) 8))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@154 ($generated@@151 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@151 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@155 ($generated@@151 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@151 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@10 ($generated@@146 $generated@@147 $generated@@148 $generated@@6 ($generated@@149 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (or (not (= $generated@@202 $generated@@198)) (not true)) ($generated@@10 ($generated@@66 $generated@@6 ($generated@@150 $generated@@148 $generated@@74 ($generated@@150 $generated@@147 ($generated@@151 $generated@@148 $generated@@74) $generated@@199 $generated@@202) $generated@@200)))) $generated@@201))
 :pattern ( ($generated@@146 $generated@@147 $generated@@148 $generated@@6 ($generated@@149 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@129 ($generated@@67 $generated@@35 $generated@@204)) ($generated@@130 $generated@@204))
 :pattern ( ($generated@@129 ($generated@@67 $generated@@35 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> ($generated@@59 $generated@@205 ($generated@@30 $generated@@206)) (and (= ($generated@@67 $generated@@29 ($generated@@66 $generated@@29 $generated@@205)) $generated@@205) ($generated@@28 $generated@@29 ($generated@@66 $generated@@29 $generated@@205) ($generated@@30 $generated@@206))))
 :pattern ( ($generated@@59 $generated@@205 ($generated@@30 $generated@@206)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@59 $generated@@208 ($generated@@36 $generated@@207)) (and (= ($generated@@67 $generated@@35 ($generated@@66 $generated@@35 $generated@@208)) $generated@@208) ($generated@@28 $generated@@35 ($generated@@66 $generated@@35 $generated@@208) ($generated@@36 $generated@@207))))
 :pattern ( ($generated@@59 $generated@@208 ($generated@@36 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@37 $generated@@211) (and ($generated@@64 $generated@@209) ($generated@@34 $generated@@35 $generated@@209 ($generated@@36 $generated@@210) $generated@@211))) ($generated@@34 $generated@@35 ($generated@@44 $generated@@209) ($generated@@36 $generated@@210) $generated@@211))
 :pattern ( ($generated@@34 $generated@@35 ($generated@@44 $generated@@209) ($generated@@36 $generated@@210) $generated@@211))
)))
(assert (= $generated@@27 ($generated@@55 $generated@@35 $generated@@27)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@212) ($generated@@55 $generated@@35 $generated@@213)) ($generated@@55 $generated@@35 ($generated@@58 $generated@@212 $generated@@213)))
 :pattern ( ($generated@@58 ($generated@@55 $generated@@74 $generated@@212) ($generated@@55 $generated@@35 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@T) ) (! (= ($generated@@67 $generated@@215 ($generated@@55 $generated@@215 $generated@@214)) ($generated@@55 $generated@@74 ($generated@@67 $generated@@215 $generated@@214)))
 :pattern ( ($generated@@67 $generated@@215 ($generated@@55 $generated@@215 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (< 0 ($generated@@70 $generated@@216 $generated@@218)) (< 0 ($generated@@70 ($generated@@48 $generated@@216 $generated@@217) $generated@@218)))
 :pattern ( ($generated@@48 $generated@@216 $generated@@217) ($generated@@70 $generated@@216 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (! (= (< 0 ($generated@@70 ($generated@@48 $generated@@219 $generated@@220) $generated@@221))  (or (= $generated@@221 $generated@@220) (< 0 ($generated@@70 $generated@@219 $generated@@221))))
 :pattern ( ($generated@@70 ($generated@@48 $generated@@219 $generated@@220) $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@222 ($generated@@30 $generated@@223) $generated@@224) (forall (($generated@@225 T@U) ) (!  (=> (< 0 ($generated@@70 $generated@@222 $generated@@225)) ($generated@@88 $generated@@225 $generated@@223 $generated@@224))
 :pattern ( ($generated@@70 $generated@@222 $generated@@225))
)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@222 ($generated@@30 $generated@@223) $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> ($generated@@37 $generated@@229) (= ($generated@@34 $generated@@35 ($generated@@58 $generated@@227 $generated@@228) ($generated@@36 $generated@@226) $generated@@229)  (and ($generated@@88 $generated@@227 $generated@@226 $generated@@229) ($generated@@34 $generated@@35 $generated@@228 ($generated@@36 $generated@@226) $generated@@229))))
 :pattern ( ($generated@@34 $generated@@35 ($generated@@58 $generated@@227 $generated@@228) ($generated@@36 $generated@@226) $generated@@229))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@242 true))
(let (($generated@@243  (=> (= $generated@@230 ($generated@@58 $generated@@231 $generated@@232)) (=> (and ($generated@@59 $generated@@231 $generated@@233) ($generated@@28 $generated@@35 $generated@@232 ($generated@@36 $generated@@233))) (=> (and (and (and (= $generated@@234 $generated@@232) ($generated@@28 $generated@@35 $generated@@234 ($generated@@36 $generated@@233))) (and (= $generated@@235 $generated@@234) (= $generated@@236 $generated@@231))) (and (and ($generated@@59 $generated@@236 $generated@@233) (= $generated@@237 $generated@@236)) (and ($generated@@34 $generated@@35 $generated@@235 ($generated@@36 $generated@@233) $generated@@238) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@130 $generated@@235) ($generated@@130 $generated@@230)))))))
(let (($generated@@244  (=> (or (not (= $generated@@230 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@243) (=> (= (ControlFlow 0 6) 5) $generated@@242)))))
(let (($generated@@245 true))
(let (($generated@@246 true))
(let (($generated@@247  (=> (= $generated@@239 ($generated@@149 $generated@@240 $generated@@238 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@246) (=> (= (ControlFlow 0 7) 2) $generated@@245)) (=> (= (ControlFlow 0 7) 6) $generated@@244)))))
(let (($generated@@248  (=> (and (and (and ($generated@@37 $generated@@238) ($generated@@241 $generated@@238)) ($generated@@28 $generated@@35 $generated@@230 ($generated@@36 $generated@@233))) (and (= 1 $generated@@41) (= (ControlFlow 0 8) 7))) $generated@@247)))
$generated@@248))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
