(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@99 (T@U) Int)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@T T@T) T@T)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@161 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@25) $generated@@2))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@24 $generated@@27) $generated@@4))
(assert (= ($generated@@8 $generated@@29) 3))
(assert ($generated@@28 $generated@@29 $generated@@25 $generated@@30))
(assert ($generated@@28 $generated@@29 $generated@@26 $generated@@30))
(assert ($generated@@28 $generated@@29 $generated@@27 $generated@@31))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@42 T@U) ) (!  (=> (or ($generated@@35 ($generated@@34 $generated@@29 $generated@@42)) (and (< 2 $generated@@32) ($generated@@28 $generated@@29 $generated@@42 $generated@@31))) (and (and ($generated@@36 ($generated@@34 $generated@@29 $generated@@42)) ($generated@@37 ($generated@@34 $generated@@29 ($generated@@38 ($generated@@39 $generated@@40) ($generated@@34 $generated@@29 $generated@@42))))) (= ($generated@@33 ($generated@@34 $generated@@29 $generated@@42)) ($generated@@34 $generated@@29 ($generated@@41 ($generated@@34 $generated@@29 ($generated@@38 ($generated@@39 $generated@@40) ($generated@@34 $generated@@29 $generated@@42))))))))
 :weight 3
 :pattern ( ($generated@@33 ($generated@@34 $generated@@29 $generated@@42)))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@43 $generated@@44 $generated@@45) (= $generated@@44 $generated@@45))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@T) ) (! (= ($generated@@34 $generated@@47 $generated@@46) $generated@@46)
 :pattern ( ($generated@@34 $generated@@47 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@48 $generated@@49) (= ($generated@@24 $generated@@49) $generated@@2))
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@24 $generated@@51) $generated@@3))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 $generated@@53) (= ($generated@@24 $generated@@53) $generated@@4))
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@54 $generated@@55) (= ($generated@@24 $generated@@55) $generated@@5))
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 ($generated@@56 $generated@@59 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@56 $generated@@59 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@48 $generated@@60) (= $generated@@60 $generated@@25))
 :pattern ( ($generated@@48 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@50 $generated@@61) (= $generated@@61 $generated@@26))
 :pattern ( ($generated@@50 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@52 $generated@@62) (= $generated@@62 $generated@@27))
 :pattern ( ($generated@@52 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (!  (=> ($generated@@54 $generated@@64) (exists (($generated@@65 T@U) ) (= $generated@@64 ($generated@@63 $generated@@65))))
 :pattern ( ($generated@@54 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@63 $generated@@66) $generated@@31) ($generated@@28 $generated@@29 $generated@@66 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@63 $generated@@66) $generated@@31))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@36 $generated@@69) (and (< 1 $generated@@32) ($generated@@28 $generated@@29 $generated@@69 $generated@@31))) (and (=> (not ($generated@@52 $generated@@69)) (let (($generated@@70 ($generated@@67 $generated@@69)))
 (=> (not ($generated@@52 $generated@@70)) (let (($generated@@71 ($generated@@67 $generated@@70)))
($generated@@36 $generated@@71))))) (= ($generated@@38 ($generated@@39 $generated@@68) $generated@@69) (ite ($generated@@52 $generated@@69) $generated@@25 (let (($generated@@72 ($generated@@67 $generated@@69)))
(ite ($generated@@52 $generated@@72) $generated@@26 (let (($generated@@73 ($generated@@67 $generated@@72)))
($generated@@38 $generated@@68 $generated@@73))))))))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@68) $generated@@69))
))))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@74 $generated@@75) (or ($generated@@48 $generated@@75) ($generated@@50 $generated@@75)))
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@76 T@U) ) (!  (=> (or ($generated@@35 $generated@@76) (and (< 2 $generated@@32) ($generated@@28 $generated@@29 $generated@@76 $generated@@31))) (and (and ($generated@@36 $generated@@76) ($generated@@37 ($generated@@38 ($generated@@39 $generated@@40) $generated@@76))) (= ($generated@@33 $generated@@76) ($generated@@41 ($generated@@38 ($generated@@39 $generated@@40) $generated@@76)))))
 :pattern ( ($generated@@33 $generated@@76))
))))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@36 ($generated@@34 $generated@@29 $generated@@78)) (and (< 1 $generated@@32) ($generated@@28 $generated@@29 $generated@@78 $generated@@31))) (and (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@52 ($generated@@34 $generated@@29 $generated@@78)))))) (let (($generated@@79 ($generated@@34 $generated@@29 ($generated@@67 ($generated@@34 $generated@@29 $generated@@78)))))
 (=> (not ($generated@@52 $generated@@79)) (let (($generated@@80 ($generated@@67 $generated@@79)))
($generated@@36 $generated@@80))))) (= ($generated@@38 ($generated@@39 $generated@@77) ($generated@@34 $generated@@29 $generated@@78)) (ite ($generated@@52 ($generated@@34 $generated@@29 $generated@@78)) $generated@@25 (let (($generated@@81 ($generated@@34 $generated@@29 ($generated@@67 ($generated@@34 $generated@@29 $generated@@78)))))
(ite ($generated@@52 $generated@@81) $generated@@26 (let (($generated@@82 ($generated@@34 $generated@@29 ($generated@@67 $generated@@81))))
($generated@@34 $generated@@29 ($generated@@38 ($generated@@39 $generated@@77) $generated@@82)))))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@77) ($generated@@34 $generated@@29 $generated@@78)))
))))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@36 $generated@@84) (and (< 1 $generated@@32) ($generated@@28 $generated@@29 $generated@@84 $generated@@31))) ($generated@@28 $generated@@29 ($generated@@38 $generated@@83 $generated@@84) $generated@@30))
 :pattern ( ($generated@@38 $generated@@83 $generated@@84))
))))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@85 T@U) ) (!  (=> (or ($generated@@37 $generated@@85) (and (< 1 $generated@@32) ($generated@@28 $generated@@29 $generated@@85 $generated@@30))) ($generated@@28 $generated@@29 ($generated@@41 $generated@@85) $generated@@30))
 :pattern ( ($generated@@41 $generated@@85))
))))
(assert  (=> (<= 2 $generated@@32) (forall (($generated@@86 T@U) ) (!  (=> (or ($generated@@35 $generated@@86) (and (< 2 $generated@@32) ($generated@@28 $generated@@29 $generated@@86 $generated@@31))) ($generated@@28 $generated@@29 ($generated@@33 $generated@@86) $generated@@30))
 :pattern ( ($generated@@33 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@87 $generated@@30) (or ($generated@@48 $generated@@87) ($generated@@50 $generated@@87)))
 :pattern ( ($generated@@50 $generated@@87) ($generated@@28 $generated@@29 $generated@@87 $generated@@30))
 :pattern ( ($generated@@48 $generated@@87) ($generated@@28 $generated@@29 $generated@@87 $generated@@30))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@88 $generated@@31) (or ($generated@@52 $generated@@88) ($generated@@54 $generated@@88)))
 :pattern ( ($generated@@54 $generated@@88) ($generated@@28 $generated@@29 $generated@@88 $generated@@31))
 :pattern ( ($generated@@52 $generated@@88) ($generated@@28 $generated@@29 $generated@@88 $generated@@31))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and ($generated@@48 $generated@@89) ($generated@@48 $generated@@90)) ($generated@@43 $generated@@89 $generated@@90))
 :pattern ( ($generated@@43 $generated@@89 $generated@@90) ($generated@@48 $generated@@89))
 :pattern ( ($generated@@43 $generated@@89 $generated@@90) ($generated@@48 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@50 $generated@@91) ($generated@@50 $generated@@92)) ($generated@@43 $generated@@91 $generated@@92))
 :pattern ( ($generated@@43 $generated@@91 $generated@@92) ($generated@@50 $generated@@91))
 :pattern ( ($generated@@43 $generated@@91 $generated@@92) ($generated@@50 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@24 ($generated@@63 $generated@@93)) $generated@@5)
 :pattern ( ($generated@@63 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@67 ($generated@@63 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@63 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@56 $generated@@96 ($generated@@57 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@57 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@38 ($generated@@39 $generated@@97) $generated@@98) ($generated@@38 $generated@@97 $generated@@98))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ) (! (< ($generated@@99 $generated@@100) ($generated@@99 ($generated@@63 $generated@@100)))
 :pattern ( ($generated@@63 $generated@@100))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@101 $generated@@112 $generated@@113 $generated@@114 ($generated@@108 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@101 $generated@@119 $generated@@120 $generated@@121 ($generated@@108 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@101 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@101 $generated@@128 $generated@@129 $generated@@130 ($generated@@108 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))) (= ($generated@@8 $generated@@102) 4)) (= ($generated@@8 $generated@@103) 5)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@105 $generated@@137 $generated@@138 ($generated@@109 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@141) $generated@@139)
 :weight 0
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@105 $generated@@142 $generated@@143 ($generated@@109 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@105 $generated@@142 $generated@@143 $generated@@145 $generated@@147)))
 :weight 0
))) (= ($generated@@8 $generated@@106) 6)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@8 ($generated@@107 $generated@@148 $generated@@149)) 7))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@110 ($generated@@107 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@107 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@111 ($generated@@107 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@107 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@13 ($generated@@101 $generated@@102 $generated@@103 $generated@@9 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@13 ($generated@@56 $generated@@9 ($generated@@105 $generated@@103 $generated@@106 ($generated@@105 $generated@@102 ($generated@@107 $generated@@103 $generated@@106) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103 $generated@@9 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@160 T@U) ) (!  (=> (or ($generated@@37 $generated@@160) (and (< 1 $generated@@32) ($generated@@28 $generated@@29 $generated@@160 $generated@@30))) (= ($generated@@41 $generated@@160) (ite ($generated@@48 $generated@@160) $generated@@26 $generated@@25)))
 :pattern ( ($generated@@41 $generated@@160))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@162 $generated@@164) ($generated@@28 $generated@@29 $generated@@163 $generated@@30)) ($generated@@161 $generated@@29 $generated@@163 $generated@@30 $generated@@164))
 :pattern ( ($generated@@161 $generated@@29 $generated@@163 $generated@@30 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@162 $generated@@166) ($generated@@28 $generated@@29 $generated@@165 $generated@@31)) ($generated@@161 $generated@@29 $generated@@165 $generated@@31 $generated@@166))
 :pattern ( ($generated@@161 $generated@@29 $generated@@165 $generated@@31 $generated@@166))
)))
(assert (= ($generated@@167 $generated@@30) $generated@@0))
(assert (= ($generated@@168 $generated@@30) $generated@@6))
(assert (= ($generated@@167 $generated@@31) $generated@@1))
(assert (= ($generated@@168 $generated@@31) $generated@@7))
(assert (= $generated@@25 ($generated@@34 $generated@@29 $generated@@25)))
(assert (= $generated@@26 ($generated@@34 $generated@@29 $generated@@26)))
(assert (= $generated@@27 ($generated@@34 $generated@@29 $generated@@27)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@162 $generated@@170) (and ($generated@@54 $generated@@169) ($generated@@161 $generated@@29 $generated@@169 $generated@@31 $generated@@170))) ($generated@@161 $generated@@29 ($generated@@67 $generated@@169) $generated@@31 $generated@@170))
 :pattern ( ($generated@@161 $generated@@29 ($generated@@67 $generated@@169) $generated@@31 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@63 ($generated@@34 $generated@@29 $generated@@171)) ($generated@@34 $generated@@29 ($generated@@63 $generated@@171)))
 :pattern ( ($generated@@63 ($generated@@34 $generated@@29 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@57 $generated@@173 ($generated@@34 $generated@@173 $generated@@172)) ($generated@@34 $generated@@106 ($generated@@57 $generated@@173 $generated@@172)))
 :pattern ( ($generated@@57 $generated@@173 ($generated@@34 $generated@@173 $generated@@172)))
)))
(assert  (=> (<= 1 $generated@@32) (forall (($generated@@174 T@U) ) (!  (=> (or ($generated@@37 ($generated@@34 $generated@@29 $generated@@174)) (and (< 1 $generated@@32) ($generated@@28 $generated@@29 $generated@@174 $generated@@30))) (= ($generated@@41 ($generated@@34 $generated@@29 $generated@@174)) (ite ($generated@@48 ($generated@@34 $generated@@29 $generated@@174)) $generated@@26 $generated@@25)))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@34 $generated@@29 $generated@@174)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@181  (=> (and (= $generated@@175 ($generated@@104 $generated@@176 $generated@@177 $generated false)) (= $generated@@178 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27))))) (=> (and (and ($generated@@161 $generated@@29 $generated@@178 $generated@@31 $generated@@177) ($generated@@35 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27))))) (and ($generated@@74 ($generated@@34 $generated@@29 ($generated@@33 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27)))))) ($generated@@35 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@43 ($generated@@33 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27)))) $generated@@25)) (=> ($generated@@43 ($generated@@33 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27)))) $generated@@25) (=> (= $generated@@179 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27)))))))))) (=> (and ($generated@@161 $generated@@29 $generated@@179 $generated@@31 $generated@@177) ($generated@@35 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27))))))))))) (=> (and (and ($generated@@74 ($generated@@34 $generated@@29 ($generated@@33 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27)))))))))))) ($generated@@35 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27))))))))))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@43 ($generated@@33 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 ($generated@@63 ($generated@@34 $generated@@29 $generated@@27)))))))))) $generated@@26))))))))))
(let (($generated@@182  (=> (and (and ($generated@@162 $generated@@177) ($generated@@180 $generated@@177)) (and (= 3 $generated@@32) (= (ControlFlow 0 4) 2))) $generated@@181)))
$generated@@182)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
