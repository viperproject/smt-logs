(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U T@U T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@95 (T@U) Int)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 () T@T)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@101 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@T T@T) T@T)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T) T@T)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@156 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@4 $generated@@25) 3))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@23 $generated@@34 $generated@@35) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@34 $generated@@26) ($generated@@24 $generated@@25 $generated@@35 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@34)) (let (($generated@@36 ($generated@@28 $generated@@34)))
 (and ($generated@@23 $generated@@36 $generated@@35) ($generated@@29 $generated@@35 ($generated@@21 $generated@@33 $generated@@36 $generated@@35))))) (= ($generated@@21 ($generated@@22 $generated@@33) $generated@@34 $generated@@35) (ite ($generated@@27 $generated@@34) $generated@@30 (let (($generated@@37 ($generated@@28 $generated@@34)))
($generated@@31 ($generated@@22 $generated@@32) $generated@@35 ($generated@@21 $generated@@33 $generated@@37 $generated@@35)))))))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@33) $generated@@34 $generated@@35))
))))
(assert (= ($generated@@38 $generated@@30) $generated@@1))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (or ($generated@@23 ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@41 $generated@@26) ($generated@@24 $generated@@25 $generated@@42 $generated@@26)))) (and (=> (not ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 ($generated@@27 ($generated@@39 $generated@@25 $generated@@41)))))) (let (($generated@@43 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@41)))))
 (and ($generated@@23 $generated@@43 ($generated@@39 $generated@@25 $generated@@42)) ($generated@@29 ($generated@@39 $generated@@25 $generated@@42) ($generated@@21 ($generated@@22 $generated@@40) $generated@@43 ($generated@@39 $generated@@25 $generated@@42)))))) (= ($generated@@21 ($generated@@22 $generated@@40) ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)) (ite ($generated@@27 ($generated@@39 $generated@@25 $generated@@41)) $generated@@30 (let (($generated@@44 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@41)))))
($generated@@39 $generated@@25 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@39 $generated@@25 $generated@@42) ($generated@@39 $generated@@25 ($generated@@21 ($generated@@22 $generated@@40) $generated@@44 ($generated@@39 $generated@@25 $generated@@42))))))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@22 $generated@@40) ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)))
))))
(assert ($generated@@24 $generated@@25 $generated@@30 $generated@@26))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@47) (= $generated@@46 $generated@@47))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@39 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@39 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@27 $generated@@50) (= ($generated@@38 $generated@@50) $generated@@1))
 :pattern ( ($generated@@27 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@38 $generated@@52) $generated@@2))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@27 $generated@@57) (= $generated@@57 $generated@@30))
 :pattern ( ($generated@@27 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@51 $generated@@59) (exists (($generated@@60 T@U) ) (= $generated@@59 ($generated@@58 $generated@@60))))
 :pattern ( ($generated@@51 $generated@@59))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@29 ($generated@@39 $generated@@25 $generated@@62) ($generated@@39 $generated@@25 $generated@@63)) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@62 $generated@@26) ($generated@@24 $generated@@25 $generated@@63 $generated@@26)))) (and (=> (not ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 ($generated@@27 ($generated@@39 $generated@@25 $generated@@62)))))) (let (($generated@@64 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@62)))))
($generated@@29 $generated@@64 ($generated@@39 $generated@@25 $generated@@63)))) (= ($generated@@31 ($generated@@22 $generated@@61) ($generated@@39 $generated@@25 $generated@@62) ($generated@@39 $generated@@25 $generated@@63)) (ite ($generated@@27 ($generated@@39 $generated@@25 $generated@@62)) $generated@@63 (let (($generated@@65 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@62)))))
($generated@@39 $generated@@25 ($generated@@58 ($generated@@39 $generated@@25 ($generated@@31 ($generated@@22 $generated@@61) $generated@@65 ($generated@@39 $generated@@25 $generated@@63))))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@22 $generated@@61) ($generated@@39 $generated@@25 $generated@@62) ($generated@@39 $generated@@25 $generated@@63)))
))))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@58 $generated@@66) $generated@@26) ($generated@@24 $generated@@25 $generated@@66 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@58 $generated@@66) $generated@@26))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (and ($generated@@51 $generated@@67) ($generated@@51 $generated@@68)) (= ($generated@@45 $generated@@67 $generated@@68) ($generated@@45 ($generated@@28 $generated@@67) ($generated@@28 $generated@@68))))
 :pattern ( ($generated@@45 $generated@@67 $generated@@68) ($generated@@51 $generated@@67))
 :pattern ( ($generated@@45 $generated@@67 $generated@@68) ($generated@@51 $generated@@68))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@29 $generated@@70 $generated@@71) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@70 $generated@@26) ($generated@@24 $generated@@25 $generated@@71 $generated@@26)))) ($generated@@24 $generated@@25 ($generated@@31 $generated@@69 $generated@@70 $generated@@71) $generated@@26))
 :pattern ( ($generated@@31 $generated@@69 $generated@@70 $generated@@71))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@23 $generated@@73 $generated@@74) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@73 $generated@@26) ($generated@@24 $generated@@25 $generated@@74 $generated@@26)))) ($generated@@24 $generated@@25 ($generated@@21 $generated@@72 $generated@@73 $generated@@74) $generated@@26))
 :pattern ( ($generated@@21 $generated@@72 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@31 ($generated@@22 $generated@@75) $generated@@76 $generated@@77) ($generated@@31 $generated@@75 $generated@@76 $generated@@77))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@75) $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@78) $generated@@79 $generated@@80) ($generated@@21 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@81 $generated@@82) (or ($generated@@27 $generated@@82) ($generated@@51 $generated@@82)))
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@83 $generated@@26) (or ($generated@@27 $generated@@83) ($generated@@51 $generated@@83)))
 :pattern ( ($generated@@51 $generated@@83) ($generated@@24 $generated@@25 $generated@@83 $generated@@26))
 :pattern ( ($generated@@27 $generated@@83) ($generated@@24 $generated@@25 $generated@@83 $generated@@26))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and ($generated@@27 $generated@@84) ($generated@@27 $generated@@85)) ($generated@@45 $generated@@84 $generated@@85))
 :pattern ( ($generated@@45 $generated@@84 $generated@@85) ($generated@@27 $generated@@84))
 :pattern ( ($generated@@45 $generated@@84 $generated@@85) ($generated@@27 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@38 ($generated@@58 $generated@@86)) $generated@@2)
 :pattern ( ($generated@@58 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@28 ($generated@@58 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@58 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@53 $generated@@89 ($generated@@54 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@54 $generated@@89 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@29 $generated@@91 $generated@@92) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@91 $generated@@26) ($generated@@24 $generated@@25 $generated@@92 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@91)) (let (($generated@@93 ($generated@@28 $generated@@91)))
($generated@@29 $generated@@93 $generated@@92))) (= ($generated@@31 ($generated@@22 $generated@@90) $generated@@91 $generated@@92) (ite ($generated@@27 $generated@@91) $generated@@92 (let (($generated@@94 ($generated@@28 $generated@@91)))
($generated@@58 ($generated@@31 $generated@@90 $generated@@94 $generated@@92)))))))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@90) $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@96 T@U) ) (! (< ($generated@@95 $generated@@96) ($generated@@95 ($generated@@58 $generated@@96)))
 :pattern ( ($generated@@58 $generated@@96))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@97 $generated@@108 $generated@@109 $generated@@110 ($generated@@104 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@113 $generated@@114) $generated@@111)
 :weight 0
)) (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@97 $generated@@115 $generated@@116 $generated@@117 ($generated@@104 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@97 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@97 $generated@@124 $generated@@125 $generated@@126 ($generated@@104 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)))) (= ($generated@@4 $generated@@98) 4)) (= ($generated@@4 $generated@@99) 5)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@101 $generated@@133 $generated@@134 ($generated@@105 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@137) $generated@@135)
 :weight 0
))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@142 $generated@@143) (= ($generated@@101 $generated@@138 $generated@@139 ($generated@@105 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@140) $generated@@143) ($generated@@101 $generated@@138 $generated@@139 $generated@@141 $generated@@143)))
 :weight 0
))) (= ($generated@@4 $generated@@102) 6)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ) (= ($generated@@4 ($generated@@103 $generated@@144 $generated@@145)) 7))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ) (! (= ($generated@@106 ($generated@@103 $generated@@146 $generated@@147)) $generated@@146)
 :pattern ( ($generated@@103 $generated@@146 $generated@@147))
))) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (! (= ($generated@@107 ($generated@@103 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@103 $generated@@148 $generated@@149))
))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@9 ($generated@@97 $generated@@98 $generated@@99 $generated@@5 ($generated@@100 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@9 ($generated@@53 $generated@@5 ($generated@@101 $generated@@99 $generated@@102 ($generated@@101 $generated@@98 ($generated@@103 $generated@@99 $generated@@102) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@97 $generated@@98 $generated@@99 $generated@@5 ($generated@@100 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@157 $generated@@159) ($generated@@24 $generated@@25 $generated@@158 $generated@@26)) ($generated@@156 $generated@@25 $generated@@158 $generated@@26 $generated@@159))
 :pattern ( ($generated@@156 $generated@@25 $generated@@158 $generated@@26 $generated@@159))
)))
(assert (= ($generated@@160 $generated@@26) $generated@@0))
(assert (= ($generated@@161 $generated@@26) $generated@@3))
(assert (= $generated@@30 ($generated@@39 $generated@@25 $generated@@30)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and ($generated@@157 $generated@@163) (and ($generated@@51 $generated@@162) ($generated@@156 $generated@@25 $generated@@162 $generated@@26 $generated@@163))) ($generated@@156 $generated@@25 ($generated@@28 $generated@@162) $generated@@26 $generated@@163))
 :pattern ( ($generated@@156 $generated@@25 ($generated@@28 $generated@@162) $generated@@26 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@58 ($generated@@39 $generated@@25 $generated@@164)) ($generated@@39 $generated@@25 ($generated@@58 $generated@@164)))
 :pattern ( ($generated@@58 ($generated@@39 $generated@@25 $generated@@164)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@54 $generated@@166 ($generated@@39 $generated@@166 $generated@@165)) ($generated@@39 $generated@@102 ($generated@@54 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@54 $generated@@166 ($generated@@39 $generated@@166 $generated@@165)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@182  (=> (and (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@183 $generated@@26) ($generated@@24 $generated@@25 $generated@@184 $generated@@26)) (and ($generated@@81 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 ($generated@@58 $generated@@184))) (and ($generated@@29 $generated@@183 $generated@@184) ($generated@@29 $generated@@183 ($generated@@58 $generated@@184)))))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 ($generated@@58 $generated@@184)))
 :pattern ( ($generated@@58 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@184)))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and (and (and ($generated@@24 $generated@@25 $generated@@185 $generated@@26) ($generated@@24 $generated@@25 $generated@@186 $generated@@26)) (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@187 $generated@@26) ($generated@@24 $generated@@25 $generated@@188 $generated@@26)) (=> (or (< ($generated@@95 $generated@@187) ($generated@@95 $generated@@185)) (and (= ($generated@@95 $generated@@187) ($generated@@95 $generated@@185)) (< ($generated@@95 $generated@@188) ($generated@@95 $generated@@186)))) ($generated@@45 ($generated@@58 ($generated@@31 ($generated@@22 $generated@@32) $generated@@187 $generated@@188)) ($generated@@31 ($generated@@22 $generated@@32) $generated@@187 ($generated@@58 $generated@@188)))))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@32) $generated@@187 ($generated@@58 $generated@@188)))
 :pattern ( ($generated@@58 ($generated@@31 ($generated@@22 $generated@@32) $generated@@187 $generated@@188)))
))) (and (and true (exists (($generated@@189 T@U) ) (!  (and ($generated@@24 $generated@@25 $generated@@189 $generated@@26) (= ($generated@@58 $generated@@189) $generated@@185))
 :pattern ( ($generated@@58 $generated@@189))
))) (exists (($generated@@190 T@U) ) (!  (and ($generated@@24 $generated@@25 $generated@@190 $generated@@26) (= ($generated@@58 $generated@@190) $generated@@186))
 :pattern ( ($generated@@58 $generated@@190))
)))) ($generated@@45 ($generated@@58 ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@185 $generated@@186)) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@185 ($generated@@58 $generated@@186))))
 :pattern ( ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@185 ($generated@@58 $generated@@186)))
 :pattern ( ($generated@@58 ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@185 $generated@@186)))
)))))
(let (($generated@@191  (=> (and (not (and (and ($generated@@24 $generated@@25 $generated@@167 $generated@@26) ($generated@@156 $generated@@25 $generated@@167 $generated@@26 $generated@@168)) (and ($generated@@24 $generated@@25 $generated@@169 $generated@@26) ($generated@@156 $generated@@25 $generated@@169 $generated@@26 $generated@@168)))) (= (ControlFlow 0 4) 2)) $generated@@182)))
(let (($generated@@192  (=> (and (and ($generated@@24 $generated@@25 $generated@@167 $generated@@26) ($generated@@156 $generated@@25 $generated@@167 $generated@@26 $generated@@168)) (and ($generated@@24 $generated@@25 $generated@@169 $generated@@26) ($generated@@156 $generated@@25 $generated@@169 $generated@@26 $generated@@168))) (=> (and (and (and ($generated@@156 $generated@@25 $generated@@167 $generated@@26 $generated@@168) ($generated@@156 $generated@@25 $generated@@169 $generated@@26 $generated@@168)) (and ($generated@@29 $generated@@167 $generated@@169) ($generated@@156 $generated@@25 $generated@@167 $generated@@26 $generated@@168))) (and (and (= $generated@@170 ($generated@@58 $generated@@169)) ($generated@@156 $generated@@25 $generated@@170 $generated@@26 $generated@@168)) (and ($generated@@29 $generated@@167 ($generated@@58 $generated@@169)) (= (ControlFlow 0 3) 2)))) $generated@@182))))
(let (($generated@@193  (=> (and ($generated@@157 $generated@@171) ($generated@@172 $generated@@171)) (=> (and (and ($generated@@24 $generated@@25 $generated@@173 $generated@@26) ($generated@@156 $generated@@25 $generated@@173 $generated@@26 $generated@@171)) ($generated@@81 $generated@@173)) (=> (and (and (and (and (and ($generated@@24 $generated@@25 $generated@@174 $generated@@26) ($generated@@156 $generated@@25 $generated@@174 $generated@@26 $generated@@171)) ($generated@@81 $generated@@174)) (and (and (= 3 $generated@@20) (= $generated@@175 ($generated@@100 $generated@@176 $generated@@171 $generated false))) (and ($generated@@81 $generated@@173) ($generated@@81 $generated@@174)))) (and (and (and ($generated@@157 $generated@@168) ($generated@@172 $generated@@168)) (= $generated@@171 $generated@@168)) (and (and (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (and (and (and ($generated@@24 $generated@@25 $generated@@194 $generated@@26) ($generated@@24 $generated@@25 $generated@@195 $generated@@26)) ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 true)))) (or (< ($generated@@95 $generated@@194) ($generated@@95 $generated@@173)) (and (= ($generated@@95 $generated@@194) ($generated@@95 $generated@@173)) (< ($generated@@95 $generated@@195) ($generated@@95 $generated@@174))))) ($generated@@45 ($generated@@21 ($generated@@22 $generated@@32) $generated@@194 ($generated@@31 ($generated@@22 $generated@@32) $generated@@195 $generated@@195)) ($generated@@21 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@194 $generated@@194) $generated@@195)))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@32) $generated@@194 $generated@@194) ($generated@@31 ($generated@@22 $generated@@32) $generated@@195 $generated@@195))
)) (or (not (= $generated@@173 $generated@@30)) (not true))) (and (= $generated@@173 ($generated@@58 $generated@@177)) ($generated@@24 $generated@@25 $generated@@177 $generated@@26))))) (and (and (and (and ($generated@@24 $generated@@25 $generated@@178 $generated@@26) ($generated@@156 $generated@@25 $generated@@178 $generated@@26 $generated@@168)) (= $generated@@179 $generated@@177)) (and (and ($generated@@24 $generated@@25 $generated@@179 $generated@@26) (= $generated@@178 $generated@@179)) (and (= $generated@@180 ($generated@@58 $generated@@178)) ($generated@@156 $generated@@25 $generated@@180 $generated@@26 $generated@@168)))) (and (and (and ($generated@@156 $generated@@25 $generated@@178 $generated@@26 $generated@@168) ($generated@@29 ($generated@@58 $generated@@178) $generated@@178)) (and (= $generated@@181 ($generated@@58 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@58 $generated@@178) $generated@@178))) ($generated@@156 $generated@@25 $generated@@181 $generated@@26 $generated@@168))) (and (and ($generated@@156 $generated@@25 $generated@@174 $generated@@26 $generated@@168) ($generated@@23 ($generated@@58 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@58 $generated@@178) $generated@@178)) $generated@@174)) (and ($generated@@29 ($generated@@58 $generated@@178) $generated@@178) ($generated@@23 ($generated@@58 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@58 $generated@@178) $generated@@178)) $generated@@174)))))) (and (=> (= (ControlFlow 0 5) 3) $generated@@192) (=> (= (ControlFlow 0 5) 4) $generated@@191)))))))
$generated@@193)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
