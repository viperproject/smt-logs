(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@29 (Int) Int)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@53 (T@U Int T@U) Int)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (Int T@U) Bool)
(declare-fun $generated@@84 (T@U) Int)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ) (! ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@28)))
)))
(assert (forall (($generated@@30 Int) ) (! (= ($generated@@29 $generated@@30) $generated@@30)
 :pattern ( ($generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@T) ) (! (= ($generated@@31 $generated@@33 $generated@@32) $generated@@32)
 :pattern ( ($generated@@31 $generated@@33 $generated@@32))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@34 $generated@@37 $generated@@38) ($generated@@27 $generated@@36))  (and ($generated@@35 $generated@@37 $generated@@36) ($generated@@25 $generated@@26 $generated@@38 ($generated@@27 $generated@@36))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@34 $generated@@37 $generated@@38) ($generated@@27 $generated@@36)))
)))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@39 $generated@@40) (= ($generated@@23 $generated@@40) $generated@@3))
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@41 $generated@@42) (= ($generated@@23 $generated@@42) $generated@@4))
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 ($generated@@43 $generated@@46 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@43 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ) (!  (=> ($generated@@41 $generated@@47) (exists (($generated@@48 T@U) ($generated@@49 T@U) ) (= $generated@@47 ($generated@@34 $generated@@48 $generated@@49))))
 :pattern ( ($generated@@41 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ) (!  (=> ($generated@@39 $generated@@50) (= $generated@@50 $generated@@24))
 :pattern ( ($generated@@39 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@52)) $generated@@2) (= ($generated@@51 ($generated@@27 $generated@@52)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ($generated@@57 T@U) ) (! (= ($generated@@53 ($generated@@54 $generated@@55) $generated@@56 $generated@@57) ($generated@@53 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@53 ($generated@@54 $generated@@55) $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@59 ($generated@@27 $generated@@58)) (or ($generated@@39 $generated@@59) ($generated@@41 $generated@@59)))
 :pattern ( ($generated@@41 $generated@@59) ($generated@@25 $generated@@26 $generated@@59 ($generated@@27 $generated@@58)))
 :pattern ( ($generated@@39 $generated@@59) ($generated@@25 $generated@@26 $generated@@59 ($generated@@27 $generated@@58)))
)))
(assert (forall (($generated@@60 T@U) ) (!  (=> ($generated@@35 $generated@@60 $generated) (and (= ($generated@@44 $generated@@8 ($generated@@43 $generated@@8 $generated@@60)) $generated@@60) ($generated@@25 $generated@@8 ($generated@@43 $generated@@8 $generated@@60) $generated)))
 :pattern ( ($generated@@35 $generated@@60 $generated))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@35 ($generated@@44 $generated@@63 $generated@@61) $generated@@62) ($generated@@25 $generated@@63 $generated@@61 $generated@@62))
 :pattern ( ($generated@@35 ($generated@@44 $generated@@63 $generated@@61) $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@23 ($generated@@34 $generated@@64 $generated@@65)) $generated@@4)
 :pattern ( ($generated@@34 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@66 ($generated@@34 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@34 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 ($generated@@34 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@34 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 ($generated@@27 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@27 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@43 $generated@@75 ($generated@@44 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@44 $generated@@75 $generated@@74))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@78 T@U) ($generated@@79 Int) ($generated@@80 T@U) ) (!  (=> (or ($generated@@77 $generated@@79 $generated@@80) (and (< 1 $generated@@76) ($generated@@25 $generated@@26 $generated@@80 ($generated@@27 $generated)))) (and (=> (not ($generated@@39 $generated@@80)) (let (($generated@@81 ($generated@@69 $generated@@80)))
($generated@@77 $generated@@79 $generated@@81))) (= ($generated@@53 ($generated@@54 $generated@@78) $generated@@79 $generated@@80) (ite ($generated@@39 $generated@@80) 0 (let (($generated@@82 ($generated@@69 $generated@@80)))
(let (($generated@@83 ($generated@@13 ($generated@@43 $generated@@8 ($generated@@66 $generated@@80)))))
(+ (ite (= $generated@@79 $generated@@83) 1 0) ($generated@@53 $generated@@78 $generated@@79 $generated@@82))))))))
 :pattern ( ($generated@@53 ($generated@@54 $generated@@78) $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (< ($generated@@84 $generated@@86) ($generated@@85 ($generated@@34 $generated@@86 $generated@@87)))
 :pattern ( ($generated@@34 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (< ($generated@@85 $generated@@89) ($generated@@85 ($generated@@34 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@34 $generated@@88 $generated@@89))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@90 $generated@@101 $generated@@102 $generated@@103 ($generated@@97 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@90 $generated@@108 $generated@@109 $generated@@110 ($generated@@97 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@90 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@90 $generated@@117 $generated@@118 $generated@@119 ($generated@@97 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))) (= ($generated@@6 $generated@@91) 4)) (= ($generated@@6 $generated@@92) 5)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@94 $generated@@126 $generated@@127 ($generated@@98 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@94 $generated@@131 $generated@@132 ($generated@@98 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@94 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (= ($generated@@6 $generated@@95) 6)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@6 ($generated@@96 $generated@@137 $generated@@138)) 7))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@11 ($generated@@90 $generated@@91 $generated@@92 $generated@@7 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@11 ($generated@@43 $generated@@7 ($generated@@94 $generated@@92 $generated@@95 ($generated@@94 $generated@@91 ($generated@@96 $generated@@92 $generated@@95) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92 $generated@@7 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@84 ($generated@@44 $generated@@26 $generated@@149)) ($generated@@85 $generated@@149))
 :pattern ( ($generated@@84 ($generated@@44 $generated@@26 $generated@@149)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@150 T@U) ($generated@@151 Int) ($generated@@152 T@U) ) (!  (=> (or ($generated@@77 ($generated@@29 $generated@@151) ($generated@@31 $generated@@26 $generated@@152)) (and (< 1 $generated@@76) ($generated@@25 $generated@@26 $generated@@152 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@31 $generated@@7 ($generated@@10 ($generated@@39 ($generated@@31 $generated@@26 $generated@@152)))))) (let (($generated@@153 ($generated@@31 $generated@@26 ($generated@@69 ($generated@@31 $generated@@26 $generated@@152)))))
($generated@@77 ($generated@@29 $generated@@151) $generated@@153))) (= ($generated@@53 ($generated@@54 $generated@@150) ($generated@@29 $generated@@151) ($generated@@31 $generated@@26 $generated@@152)) (ite ($generated@@39 ($generated@@31 $generated@@26 $generated@@152)) 0 (let (($generated@@154 ($generated@@31 $generated@@26 ($generated@@69 ($generated@@31 $generated@@26 $generated@@152)))))
(let (($generated@@155 ($generated@@29 ($generated@@13 ($generated@@43 $generated@@8 ($generated@@66 ($generated@@31 $generated@@26 $generated@@152)))))))
(+ (ite (= ($generated@@29 $generated@@151) $generated@@155) 1 0) ($generated@@53 ($generated@@54 $generated@@150) ($generated@@29 $generated@@151) $generated@@154))))))))
 :weight 3
 :pattern ( ($generated@@53 ($generated@@54 $generated@@150) ($generated@@29 $generated@@151) ($generated@@31 $generated@@26 $generated@@152)))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@35 $generated@@157 ($generated@@27 $generated@@156)) (and (= ($generated@@44 $generated@@26 ($generated@@43 $generated@@26 $generated@@157)) $generated@@157) ($generated@@25 $generated@@26 ($generated@@43 $generated@@26 $generated@@157) ($generated@@27 $generated@@156))))
 :pattern ( ($generated@@35 $generated@@157 ($generated@@27 $generated@@156)))
)))
(assert (= $generated@@24 ($generated@@31 $generated@@26 $generated@@24)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@34 ($generated@@31 $generated@@95 $generated@@158) ($generated@@31 $generated@@26 $generated@@159)) ($generated@@31 $generated@@26 ($generated@@34 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@34 ($generated@@31 $generated@@95 $generated@@158) ($generated@@31 $generated@@26 $generated@@159)))
)))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@44 $generated@@8 ($generated@@12 ($generated@@29 $generated@@160))) ($generated@@31 $generated@@95 ($generated@@44 $generated@@8 ($generated@@12 $generated@@160))))
 :pattern ( ($generated@@44 $generated@@8 ($generated@@12 ($generated@@29 $generated@@160))))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@44 $generated@@162 ($generated@@31 $generated@@162 $generated@@161)) ($generated@@31 $generated@@95 ($generated@@44 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@44 $generated@@162 ($generated@@31 $generated@@162 $generated@@161)))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 T@U) ) (!  (=> (or ($generated@@77 $generated@@164 $generated@@165) (and (< 1 $generated@@76) ($generated@@25 $generated@@26 $generated@@165 ($generated@@27 $generated)))) (<= ($generated@@29 0) ($generated@@53 $generated@@163 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@53 $generated@@163 $generated@@164 $generated@@165))
))))
(assert (forall (($generated@@166 T@U) ) (! ($generated@@25 $generated@@8 $generated@@166 $generated)
 :pattern ( ($generated@@25 $generated@@8 $generated@@166 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@173  (=> (and (= $generated@@167 ($generated@@93 $generated@@168 $generated@@169 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (= ($generated@@29 ($generated@@53 ($generated@@54 ($generated@@54 $generated@@170)) ($generated@@29 36725) ($generated@@31 $generated@@26 ($generated@@34 ($generated@@44 $generated@@8 ($generated@@12 ($generated@@29 3))) ($generated@@31 $generated@@26 ($generated@@34 ($generated@@44 $generated@@8 ($generated@@12 ($generated@@29 7))) ($generated@@31 $generated@@26 ($generated@@34 ($generated@@44 $generated@@8 ($generated@@12 ($generated@@29 3))) ($generated@@31 $generated@@26 $generated@@24))))))))) ($generated@@29 0)))))
(let (($generated@@174  (=> (and (and ($generated@@171 $generated@@169) ($generated@@172 $generated@@169)) (and (= 2 $generated@@76) (= (ControlFlow 0 3) 2))) $generated@@173)))
$generated@@174)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
