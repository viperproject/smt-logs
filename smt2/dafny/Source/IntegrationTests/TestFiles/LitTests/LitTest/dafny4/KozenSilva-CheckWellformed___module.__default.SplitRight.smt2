(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U T@U) T@U)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@T T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U T@U) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@T T@T) T@T)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@114 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@24) 3))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (or ($generated@@22 $generated@@32 $generated@@34) (and (< 1 $generated@@19) ($generated@@23 $generated@@24 $generated@@34 ($generated@@25 $generated@@32)))) (and (and ($generated@@26 $generated@@34) (and ($generated@@26 $generated@@34) ($generated@@27 $generated@@32 ($generated@@28 $generated@@34)))) (= ($generated@@20 $generated@@32 ($generated@@21 $generated@@33) $generated@@34) ($generated@@29 ($generated@@30 $generated@@34) ($generated@@31 $generated@@32 $generated@@33 ($generated@@28 $generated@@34))))))
 :pattern ( ($generated@@20 $generated@@32 ($generated@@21 $generated@@33) $generated@@34))
))))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@20 $generated@@35 ($generated@@21 $generated@@36) $generated@@37) ($generated@@20 $generated@@35 $generated@@36 $generated@@37))
 :pattern ( ($generated@@20 $generated@@35 ($generated@@21 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@31 $generated@@38 ($generated@@21 $generated@@39) $generated@@40) ($generated@@31 $generated@@38 $generated@@39 $generated@@40))
 :pattern ( ($generated@@31 $generated@@38 ($generated@@21 $generated@@39) $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> ($generated@@23 $generated@@24 $generated@@42 ($generated@@25 $generated@@41)) ($generated@@26 $generated@@42))
 :pattern ( ($generated@@26 $generated@@42) ($generated@@23 $generated@@24 $generated@@42 ($generated@@25 $generated@@41)))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@27 $generated@@43 $generated@@45) (and (< 1 $generated@@19) ($generated@@23 $generated@@24 $generated@@45 ($generated@@25 $generated@@43)))) (and (and ($generated@@26 $generated@@45) ($generated@@22 $generated@@43 ($generated@@28 $generated@@45))) (= ($generated@@31 $generated@@43 ($generated@@21 $generated@@44) $generated@@45) ($generated@@20 $generated@@43 $generated@@44 ($generated@@28 $generated@@45)))))
 :pattern ( ($generated@@31 $generated@@43 ($generated@@21 $generated@@44) $generated@@45))
))))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@23 $generated@@24 ($generated@@29 $generated@@53 $generated@@54) ($generated@@25 $generated@@52))  (and ($generated@@51 $generated@@53 $generated@@52) ($generated@@23 $generated@@24 $generated@@54 ($generated@@25 $generated@@52))))
 :pattern ( ($generated@@23 $generated@@24 ($generated@@29 $generated@@53 $generated@@54) ($generated@@25 $generated@@52)))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@26 $generated@@56) (= ($generated@@55 $generated@@56) $generated@@1))
 :pattern ( ($generated@@26 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@57 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@57 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@26 $generated@@61) (exists (($generated@@62 T@U) ($generated@@63 T@U) ) (= $generated@@61 ($generated@@29 $generated@@62 $generated@@63))))
 :pattern ( ($generated@@26 $generated@@61))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@64 ($generated@@58 $generated@@69 $generated@@66) $generated@@67 $generated@@68) ($generated@@65 $generated@@69 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@64 ($generated@@58 $generated@@69 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@72 T@U) ) (!  (and (= ($generated@@70 ($generated@@25 $generated@@72)) $generated@@0) (= ($generated@@71 ($generated@@25 $generated@@72)) $generated@@2))
 :pattern ( ($generated@@25 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@51 ($generated@@58 $generated@@75 $generated@@73) $generated@@74) ($generated@@23 $generated@@75 $generated@@73 $generated@@74))
 :pattern ( ($generated@@51 ($generated@@58 $generated@@75 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@55 ($generated@@29 $generated@@76 $generated@@77)) $generated@@1)
 :pattern ( ($generated@@29 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@30 ($generated@@29 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@29 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@29 $generated@@80 $generated@@81))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and (or ($generated@@22 $generated@@84 $generated@@86) (and (< 1 $generated@@19) (and ($generated@@23 $generated@@24 $generated@@86 ($generated@@25 $generated@@84)) ($generated@@65 $generated@@24 $generated@@86 ($generated@@25 $generated@@84) $generated@@83)))) ($generated@@82 $generated@@83)) ($generated@@65 $generated@@24 ($generated@@20 $generated@@84 $generated@@85 $generated@@86) ($generated@@25 $generated@@84) $generated@@83))
 :pattern ( ($generated@@65 $generated@@24 ($generated@@20 $generated@@84 $generated@@85 $generated@@86) ($generated@@25 $generated@@84) $generated@@83))
))))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@88 $generated@@90) (and (< 1 $generated@@19) (and ($generated@@23 $generated@@24 $generated@@90 ($generated@@25 $generated@@88)) ($generated@@65 $generated@@24 $generated@@90 ($generated@@25 $generated@@88) $generated@@87)))) ($generated@@82 $generated@@87)) ($generated@@65 $generated@@24 ($generated@@31 $generated@@88 $generated@@89 $generated@@90) ($generated@@25 $generated@@88) $generated@@87))
 :pattern ( ($generated@@65 $generated@@24 ($generated@@31 $generated@@88 $generated@@89 $generated@@90) ($generated@@25 $generated@@88) $generated@@87))
))))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@91 ($generated@@25 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@25 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@57 $generated@@94 ($generated@@58 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@58 $generated@@94 $generated@@93))
)))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@22 $generated@@95 $generated@@97) (and (< 1 $generated@@19) ($generated@@23 $generated@@24 $generated@@97 ($generated@@25 $generated@@95)))) ($generated@@23 $generated@@24 ($generated@@20 $generated@@95 $generated@@96 $generated@@97) ($generated@@25 $generated@@95)))
 :pattern ( ($generated@@20 $generated@@95 $generated@@96 $generated@@97))
))))
(assert  (=> (<= 1 $generated@@19) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@27 $generated@@98 $generated@@100) (and (< 1 $generated@@19) ($generated@@23 $generated@@24 $generated@@100 ($generated@@25 $generated@@98)))) ($generated@@23 $generated@@24 ($generated@@31 $generated@@98 $generated@@99 $generated@@100) ($generated@@25 $generated@@98)))
 :pattern ( ($generated@@31 $generated@@98 $generated@@99 $generated@@100))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@82 $generated@@103) (and ($generated@@26 $generated@@101) ($generated@@65 $generated@@24 $generated@@101 ($generated@@25 $generated@@102) $generated@@103))) ($generated@@64 ($generated@@30 $generated@@101) $generated@@102 $generated@@103))
 :pattern ( ($generated@@64 ($generated@@30 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@104 $generated@@115 $generated@@116 $generated@@117 ($generated@@111 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@104 $generated@@122 $generated@@123 $generated@@124 ($generated@@111 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@104 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@104 $generated@@131 $generated@@132 $generated@@133 ($generated@@111 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@104 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))) (= ($generated@@3 $generated@@105) 4)) (= ($generated@@3 $generated@@106) 5)) (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@108 $generated@@140 $generated@@141 ($generated@@112 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@142) $generated@@144) $generated@@142)
 :weight 0
))) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@149 $generated@@150) (= ($generated@@108 $generated@@145 $generated@@146 ($generated@@112 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@150) ($generated@@108 $generated@@145 $generated@@146 $generated@@148 $generated@@150)))
 :weight 0
))) (= ($generated@@3 $generated@@109) 6)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (= ($generated@@3 ($generated@@110 $generated@@151 $generated@@152)) 7))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (! (= ($generated@@113 ($generated@@110 $generated@@153 $generated@@154)) $generated@@153)
 :pattern ( ($generated@@110 $generated@@153 $generated@@154))
))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@114 ($generated@@110 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@110 $generated@@155 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 Bool) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@8 ($generated@@104 $generated@@105 $generated@@106 $generated@@4 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@8 ($generated@@57 $generated@@4 ($generated@@108 $generated@@106 $generated@@109 ($generated@@108 $generated@@105 ($generated@@110 $generated@@106 $generated@@109) $generated@@158 $generated@@161) $generated@@159)))) $generated@@160))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106 $generated@@4 ($generated@@107 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@51 $generated@@164 ($generated@@25 $generated@@163)) (and (= ($generated@@58 $generated@@24 ($generated@@57 $generated@@24 $generated@@164)) $generated@@164) ($generated@@23 $generated@@24 ($generated@@57 $generated@@24 $generated@@164) ($generated@@25 $generated@@163))))
 :pattern ( ($generated@@51 $generated@@164 ($generated@@25 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@82 $generated@@167) (and ($generated@@26 $generated@@165) ($generated@@65 $generated@@24 $generated@@165 ($generated@@25 $generated@@166) $generated@@167))) ($generated@@65 $generated@@24 ($generated@@28 $generated@@165) ($generated@@25 $generated@@166) $generated@@167))
 :pattern ( ($generated@@65 $generated@@24 ($generated@@28 $generated@@165) ($generated@@25 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@58 $generated@@5 ($generated@@9 ($generated@@46 $generated@@168))) ($generated@@48 $generated@@109 ($generated@@58 $generated@@5 ($generated@@9 $generated@@168))))
 :pattern ( ($generated@@58 $generated@@5 ($generated@@9 ($generated@@46 $generated@@168))))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@58 $generated@@170 ($generated@@48 $generated@@170 $generated@@169)) ($generated@@48 $generated@@109 ($generated@@58 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@58 $generated@@170 ($generated@@48 $generated@@170 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@82 $generated@@174) (= ($generated@@65 $generated@@24 ($generated@@29 $generated@@172 $generated@@173) ($generated@@25 $generated@@171) $generated@@174)  (and ($generated@@64 $generated@@172 $generated@@171 $generated@@174) ($generated@@65 $generated@@24 $generated@@173 ($generated@@25 $generated@@171) $generated@@174))))
 :pattern ( ($generated@@65 $generated@@24 ($generated@@29 $generated@@172 $generated@@173) ($generated@@25 $generated@@171) $generated@@174))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@182  (=> ($generated@@26 $generated@@175) (=> (and (= $generated@@176 ($generated@@28 $generated@@175)) ($generated@@65 $generated@@24 $generated@@176 ($generated@@25 $generated@@177) $generated@@178)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (<= 0 ($generated@@46 1)) (= ($generated@@46 0) ($generated@@46 1)))) (=> (or (<= 0 ($generated@@46 1)) (= ($generated@@46 0) ($generated@@46 1))) (=> (= (ControlFlow 0 3) (- 0 2)) (< ($generated@@46 0) ($generated@@46 1)))))))))
(let (($generated@@183 true))
(let (($generated@@184  (=> (= $generated@@179 ($generated@@107 $generated@@180 $generated@@178 $generated false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@183) (=> (= (ControlFlow 0 5) 3) $generated@@182)))))
(let (($generated@@185  (=> (and (and (and ($generated@@82 $generated@@178) ($generated@@181 $generated@@178)) ($generated@@23 $generated@@24 $generated@@175 ($generated@@25 $generated@@177))) (and (= 1 $generated@@19) (= (ControlFlow 0 6) 5))) $generated@@184)))
$generated@@185)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
