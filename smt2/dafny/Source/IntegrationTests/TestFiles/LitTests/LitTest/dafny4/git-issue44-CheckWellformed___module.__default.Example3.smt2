(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (Int) T@U)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@39 (Int) Bool)
(declare-fun $generated@@40 (T@U T@U Int) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U T@U Int) T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@T T@T) T@T)
(declare-fun $generated@@50 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@73 (T@T T@U T@U) Bool)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ) (! ($generated@@23 $generated@@9 $generated@@25 $generated@@24 $generated@@26)
 :pattern ( ($generated@@23 $generated@@9 $generated@@25 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@23 $generated@@9 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@23 $generated@@9 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (= ($generated@@7 $generated@@30) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@23 $generated@@30 $generated@@34 ($generated@@31 $generated@@33) $generated@@35) ($generated@@23 $generated@@30 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@23 $generated@@30 $generated@@34 ($generated@@31 $generated@@33) $generated@@35))
 :pattern ( ($generated@@23 $generated@@30 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@43 Int) ) (!  (=> (or ($generated@@39 ($generated@@38 $generated@@43)) (and (< 1 $generated@@36) (<= ($generated@@38 0) $generated@@43))) (and ($generated@@40 $generated@@27 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@38 5))) ($generated@@38 $generated@@43)) (= ($generated@@37 ($generated@@38 $generated@@43)) ($generated@@42 $generated@@27 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@38 5))) ($generated@@38 $generated@@43)))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@38 $generated@@43)))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@46 $generated@@53 $generated@@54 ($generated@@50 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@57) $generated@@55)
 :weight 0
)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (or (= $generated@@62 $generated@@63) (= ($generated@@46 $generated@@58 $generated@@59 ($generated@@50 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@63) ($generated@@46 $generated@@58 $generated@@59 $generated@@61 $generated@@63)))
 :weight 0
))) (= ($generated@@7 $generated@@47) 4)) (= ($generated@@7 $generated@@48) 5)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (= ($generated@@7 ($generated@@49 $generated@@64 $generated@@65)) 6))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@51 ($generated@@49 $generated@@66 $generated@@67)) $generated@@66)
 :pattern ( ($generated@@49 $generated@@66 $generated@@67))
))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@52 ($generated@@49 $generated@@68 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@49 $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@23 $generated@@30 $generated@@71 ($generated@@32 $generated@@70) $generated@@72)  (or (= $generated@@71 $generated@@44) ($generated@@12 ($generated@@45 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@30 ($generated@@49 $generated@@47 $generated@@48) $generated@@72 $generated@@71) $generated)))))
 :pattern ( ($generated@@23 $generated@@30 $generated@@71 ($generated@@32 $generated@@70) $generated@@72))
)))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@74 Int) ) (!  (=> (or ($generated@@39 $generated@@74) (and (< 1 $generated@@36) (<= ($generated@@38 0) $generated@@74))) ($generated@@73 $generated@@30 ($generated@@37 $generated@@74) ($generated@@31 $generated@@27)))
 :pattern ( ($generated@@37 $generated@@74))
))))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@38 $generated@@75) $generated@@75)
 :pattern ( ($generated@@38 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@78 $generated@@77))
)))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 Int) ) (!  (=> (or ($generated@@40 $generated@@80 $generated@@81 $generated@@82) (and (< 0 $generated@@36) (and ($generated@@79 $generated@@81 $generated@@80) (<= ($generated@@38 0) $generated@@82)))) ($generated@@73 $generated@@30 ($generated@@42 $generated@@80 $generated@@81 $generated@@82) ($generated@@31 $generated@@80)))
 :pattern ( ($generated@@42 $generated@@80 $generated@@81 $generated@@82))
))))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@84 T@U) ($generated@@85 Int) ) (!  (=> (and (or ($generated@@39 $generated@@85) (and (< 1 $generated@@36) (<= ($generated@@38 0) $generated@@85))) ($generated@@83 $generated@@84)) ($generated@@23 $generated@@30 ($generated@@37 $generated@@85) ($generated@@31 $generated@@27) $generated@@84))
 :pattern ( ($generated@@23 $generated@@30 ($generated@@37 $generated@@85) ($generated@@31 $generated@@27) $generated@@84))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@41 $generated@@87 ($generated@@45 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@45 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@73 $generated@@9 $generated@@88 $generated@@24) (<= ($generated@@38 0) ($generated@@14 $generated@@88)))
 :pattern ( ($generated@@73 $generated@@9 $generated@@88 $generated@@24))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@73 $generated@@30 $generated@@90 ($generated@@31 $generated@@89))  (and ($generated@@73 $generated@@30 $generated@@90 ($generated@@32 $generated@@89)) (or (not (= $generated@@90 $generated@@44)) (not true))))
 :pattern ( ($generated@@73 $generated@@30 $generated@@90 ($generated@@31 $generated@@89)))
 :pattern ( ($generated@@73 $generated@@30 $generated@@90 ($generated@@32 $generated@@89)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@91 ($generated@@41 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@23 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@91 ($generated@@41 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ) (!  (and (= ($generated@@96 ($generated@@32 $generated@@98)) $generated@@1) (= ($generated@@97 ($generated@@32 $generated@@98)) $generated@@5))
 :pattern ( ($generated@@32 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (!  (and (= ($generated@@96 ($generated@@31 $generated@@99)) $generated@@2) (= ($generated@@97 ($generated@@31 $generated@@99)) $generated@@5))
 :pattern ( ($generated@@31 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@79 $generated@@100 $generated@@24) (and (= ($generated@@41 $generated@@9 ($generated@@45 $generated@@9 $generated@@100)) $generated@@100) ($generated@@73 $generated@@9 ($generated@@45 $generated@@9 $generated@@100) $generated@@24)))
 :pattern ( ($generated@@79 $generated@@100 $generated@@24))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@79 $generated@@101 $generated@@27) (and (= ($generated@@41 $generated@@9 ($generated@@45 $generated@@9 $generated@@101)) $generated@@101) ($generated@@73 $generated@@9 ($generated@@45 $generated@@9 $generated@@101) $generated@@27)))
 :pattern ( ($generated@@79 $generated@@101 $generated@@27))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@73 $generated@@30 $generated@@104 ($generated@@32 $generated@@103))  (or (= $generated@@104 $generated@@44) (= ($generated@@102 $generated@@104) ($generated@@32 $generated@@103))))
 :pattern ( ($generated@@73 $generated@@30 $generated@@104 ($generated@@32 $generated@@103)))
)))
(assert  (=> (<= 0 $generated@@36) (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 Int) ) (!  (=> (and (or ($generated@@40 $generated@@106 $generated@@107 $generated@@108) (and (< 0 $generated@@36) (and (and ($generated@@79 $generated@@107 $generated@@106) ($generated@@91 $generated@@107 $generated@@106 $generated@@105)) (<= ($generated@@38 0) $generated@@108)))) ($generated@@83 $generated@@105)) ($generated@@23 $generated@@30 ($generated@@42 $generated@@106 $generated@@107 $generated@@108) ($generated@@31 $generated@@106) $generated@@105))
 :pattern ( ($generated@@23 $generated@@30 ($generated@@42 $generated@@106 $generated@@107 $generated@@108) ($generated@@31 $generated@@106) $generated@@105))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@79 ($generated@@41 $generated@@111 $generated@@109) $generated@@110) ($generated@@73 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@79 ($generated@@41 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@32 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@32 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@31 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@31 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@45 $generated@@117 ($generated@@41 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@41 $generated@@117 $generated@@116))
)))
(assert  (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@118 $generated@@121 $generated@@122 $generated@@123 ($generated@@120 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@126 $generated@@127) $generated@@124)
 :weight 0
)) (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@118 $generated@@128 $generated@@129 $generated@@130 ($generated@@120 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@118 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@143 $generated@@145) (= ($generated@@118 $generated@@137 $generated@@138 $generated@@139 ($generated@@120 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@118 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Bool) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@12 ($generated@@118 $generated@@30 $generated@@47 $generated@@8 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))  (=> (and (or (not (= $generated@@150 $generated@@146)) (not true)) ($generated@@12 ($generated@@45 $generated@@8 ($generated@@46 $generated@@47 $generated@@48 ($generated@@46 $generated@@30 ($generated@@49 $generated@@47 $generated@@48) $generated@@147 $generated@@150) $generated@@148)))) $generated@@149))
 :pattern ( ($generated@@118 $generated@@30 $generated@@47 $generated@@8 ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@149) $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@79 $generated@@153 ($generated@@32 $generated@@152)) (and (= ($generated@@41 $generated@@30 ($generated@@45 $generated@@30 $generated@@153)) $generated@@153) ($generated@@73 $generated@@30 ($generated@@45 $generated@@30 $generated@@153) ($generated@@32 $generated@@152))))
 :pattern ( ($generated@@79 $generated@@153 ($generated@@32 $generated@@152)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@79 $generated@@155 ($generated@@31 $generated@@154)) (and (= ($generated@@41 $generated@@30 ($generated@@45 $generated@@30 $generated@@155)) $generated@@155) ($generated@@73 $generated@@30 ($generated@@45 $generated@@30 $generated@@155) ($generated@@31 $generated@@154))))
 :pattern ( ($generated@@79 $generated@@155 ($generated@@31 $generated@@154)))
)))
(assert (= ($generated@@96 $generated@@24) $generated@@0))
(assert (= ($generated@@97 $generated@@24) $generated@@4))
(assert (= ($generated@@96 $generated@@27) $generated@@3))
(assert (= ($generated@@97 $generated@@27) $generated@@6))
(assert  (=> (<= 1 $generated@@36) (forall (($generated@@156 Int) ) (!  (=> (or ($generated@@39 $generated@@156) (and (< 1 $generated@@36) (<= ($generated@@38 0) $generated@@156))) (and ($generated@@40 $generated@@27 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@38 5))) $generated@@156) (= ($generated@@37 $generated@@156) ($generated@@42 $generated@@27 ($generated@@41 $generated@@9 ($generated@@13 ($generated@@38 5))) $generated@@156))))
 :pattern ( ($generated@@37 $generated@@156))
))))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@73 $generated@@9 $generated@@157 $generated@@27)  (and (<= ($generated@@38 0) ($generated@@14 $generated@@157)) (< ($generated@@14 $generated@@157) 4294967296)))
 :pattern ( ($generated@@73 $generated@@9 $generated@@157 $generated@@27))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@41 $generated@@9 ($generated@@13 ($generated@@38 $generated@@158))) ($generated@@76 $generated@@48 ($generated@@41 $generated@@9 ($generated@@13 $generated@@158))))
 :pattern ( ($generated@@41 $generated@@9 ($generated@@13 ($generated@@38 $generated@@158))))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@41 $generated@@160 ($generated@@76 $generated@@160 $generated@@159)) ($generated@@76 $generated@@48 ($generated@@41 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@41 $generated@@160 ($generated@@76 $generated@@160 $generated@@159)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@167  (=> (= $generated@@161 ($generated@@38 5)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= ($generated@@38 0) $generated@@161) (< $generated@@161 4294967296))) (=> (and (<= ($generated@@38 0) $generated@@161) (< $generated@@161 4294967296)) (=> (and (= $generated@@162 ($generated@@38 5)) (= (ControlFlow 0 3) (- 0 2))) (and (<= ($generated@@38 0) $generated@@162) (< $generated@@162 4294967296))))))))
(let (($generated@@168 true))
(let (($generated@@169  (=> (= $generated@@163 ($generated@@119 $generated@@44 $generated@@164 $generated false)) (and (=> (= (ControlFlow 0 5) 1) $generated@@168) (=> (= (ControlFlow 0 5) 3) $generated@@167)))))
(let (($generated@@170  (=> (and (and (and ($generated@@83 $generated@@164) ($generated@@165 $generated@@164)) (<= ($generated@@38 0) $generated@@166)) (and (= 1 $generated@@36) (= (ControlFlow 0 6) 5))) $generated@@169)))
$generated@@170)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
