(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ) (!  (not ($generated@@28 $generated@@29 $generated@@30))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30))
)))
(assert (= ($generated@@11 $generated@@32) 3))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 $generated@@33)  (or (= $generated@@36 $generated@@34) (= ($generated@@35 $generated@@36) $generated@@33)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 $generated@@33))
)))
(assert (= ($generated@@11 $generated@@37) 4))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@37 $generated@@40 ($generated@@38 $generated@@41 $generated@@42)) (forall (($generated@@45 T@U) ) (!  (=> ($generated@@39 $generated@@45 $generated@@43) ($generated@@39 $generated@@45 $generated@@41))
 :pattern ( ($generated@@39 $generated@@45 $generated@@43))
 :pattern ( ($generated@@39 $generated@@45 $generated@@41))
))) (forall (($generated@@46 T@U) ) (!  (=> ($generated@@39 $generated@@46 $generated@@42) ($generated@@39 $generated@@46 $generated@@44))
 :pattern ( ($generated@@39 $generated@@46 $generated@@42))
 :pattern ( ($generated@@39 $generated@@46 $generated@@44))
))) ($generated@@31 $generated@@37 $generated@@40 ($generated@@38 $generated@@43 $generated@@44)))
 :pattern ( ($generated@@31 $generated@@37 $generated@@40 ($generated@@38 $generated@@41 $generated@@42)) ($generated@@31 $generated@@37 $generated@@40 ($generated@@38 $generated@@43 $generated@@44)))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@47 $generated@@32 $generated@@49 $generated@@48 $generated@@50) ($generated@@47 $generated@@32 $generated@@49 $generated@@33 $generated@@50))
 :pattern ( ($generated@@47 $generated@@32 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@47 $generated@@32 $generated@@49 $generated@@33 $generated@@50))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@11 $generated@@53) 5)) (= ($generated@@11 $generated@@54) 6)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@11 ($generated@@55 $generated@@70 $generated@@71)) 7))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@47 $generated@@32 $generated@@76 $generated@@33 $generated@@77)  (or (= $generated@@76 $generated@@34) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@32 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@76) $generated@@1)))))
 :pattern ( ($generated@@47 $generated@@32 $generated@@76 $generated@@33 $generated@@77))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and ($generated@@85 $generated@@89) (and ($generated@@39 $generated@@91 $generated@@87) ($generated@@31 $generated@@37 $generated@@90 ($generated@@38 $generated@@87 $generated@@88)))) (= ($generated@@86 ($generated@@83 $generated@@87 $generated@@88 $generated@@84 $generated@@90 $generated@@91) $generated@@29) ($generated@@86 ($generated@@83 $generated@@87 $generated@@88 $generated@@89 $generated@@90 $generated@@91) $generated@@29)))
 :pattern ( ($generated@@83 $generated@@87 $generated@@88 $generated@@84 $generated@@90 $generated@@91) ($generated@@85 $generated@@89))
 :pattern ( ($generated@@83 $generated@@87 $generated@@88 $generated@@89 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@51 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@51 $generated@@94 $generated@@93))
)))
(assert ($generated@@85 $generated@@84))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@95 ($generated@@92 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@47 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@95 ($generated@@92 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@47 $generated@@37 $generated@@103 ($generated@@100 $generated@@101 $generated@@102) $generated@@104) ($generated@@47 $generated@@37 $generated@@103 ($generated@@38 $generated@@101 $generated@@102) $generated@@104))
 :pattern ( ($generated@@47 $generated@@37 $generated@@103 ($generated@@100 $generated@@101 $generated@@102) $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@47 $generated@@37 $generated@@108 ($generated@@105 $generated@@106 $generated@@107) $generated@@109) ($generated@@47 $generated@@37 $generated@@108 ($generated@@100 $generated@@106 $generated@@107) $generated@@109))
 :pattern ( ($generated@@47 $generated@@37 $generated@@108 ($generated@@105 $generated@@106 $generated@@107) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@39 $generated@@110 $generated@@33) (and (= ($generated@@92 $generated@@32 ($generated@@51 $generated@@32 $generated@@110)) $generated@@110) ($generated@@31 $generated@@32 ($generated@@51 $generated@@32 $generated@@110) $generated@@33)))
 :pattern ( ($generated@@39 $generated@@110 $generated@@33))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@39 $generated@@111 $generated@@48) (and (= ($generated@@92 $generated@@32 ($generated@@51 $generated@@32 $generated@@111)) $generated@@111) ($generated@@31 $generated@@32 ($generated@@51 $generated@@32 $generated@@111) $generated@@48)))
 :pattern ( ($generated@@39 $generated@@111 $generated@@48))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@112 $generated@@48)  (and ($generated@@31 $generated@@32 $generated@@112 $generated@@33) (or (not (= $generated@@112 $generated@@34)) (not true))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@112 $generated@@48))
 :pattern ( ($generated@@31 $generated@@32 $generated@@112 $generated@@33))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@85 $generated@@118) ($generated@@47 $generated@@37 $generated@@115 ($generated@@38 $generated@@116 $generated@@117) $generated@@118)) (forall (($generated@@119 T@U) ) (!  (=> (and ($generated@@95 $generated@@119 $generated@@116 $generated@@118) ($generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115 $generated@@119)) ($generated@@95 ($generated@@113 $generated@@116 $generated@@117 $generated@@118 $generated@@115 $generated@@119) $generated@@117 $generated@@118))
 :pattern ( ($generated@@113 $generated@@116 $generated@@117 $generated@@118 $generated@@115 $generated@@119))
)))
 :pattern ( ($generated@@47 $generated@@37 $generated@@115 ($generated@@38 $generated@@116 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@86 $generated@@120 $generated@@121) (= $generated@@120 $generated@@121))
 :pattern ( ($generated@@86 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@31 $generated@@37 $generated@@122 ($generated@@38 $generated@@123 $generated@@124)) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and (and ($generated@@85 $generated@@125) ($generated@@39 $generated@@126 $generated@@123)) ($generated@@114 $generated@@123 $generated@@124 $generated@@125 $generated@@122 $generated@@126)) ($generated@@39 ($generated@@113 $generated@@123 $generated@@124 $generated@@125 $generated@@122 $generated@@126) $generated@@124))
 :pattern ( ($generated@@113 $generated@@123 $generated@@124 $generated@@125 $generated@@122 $generated@@126))
)))
 :pattern ( ($generated@@31 $generated@@37 $generated@@122 ($generated@@38 $generated@@123 $generated@@124)))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@39 $generated@@127 $generated) (and (= ($generated@@92 $generated@@13 ($generated@@51 $generated@@13 $generated@@127)) $generated@@127) ($generated@@31 $generated@@13 ($generated@@51 $generated@@13 $generated@@127) $generated)))
 :pattern ( ($generated@@39 $generated@@127 $generated))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@39 ($generated@@92 $generated@@130 $generated@@128) $generated@@129) ($generated@@31 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@39 ($generated@@92 $generated@@130 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@131 ($generated@@38 $generated@@132 $generated@@133)) $generated@@132)
 :pattern ( ($generated@@38 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@134 ($generated@@38 $generated@@135 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@38 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@137 ($generated@@100 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@100 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@140 ($generated@@100 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@100 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@143 ($generated@@105 $generated@@144 $generated@@145)) $generated@@144)
 :pattern ( ($generated@@105 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@146 ($generated@@105 $generated@@147 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@105 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@51 $generated@@150 ($generated@@92 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@92 $generated@@150 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@31 $generated@@37 $generated@@153 ($generated@@105 $generated@@151 $generated@@152))  (and ($generated@@31 $generated@@37 $generated@@153 ($generated@@100 $generated@@151 $generated@@152)) (forall (($generated@@154 T@U) )  (=> ($generated@@39 $generated@@154 $generated@@151) ($generated@@114 $generated@@151 $generated@@152 $generated@@84 $generated@@153 $generated@@154)))))
 :pattern ( ($generated@@31 $generated@@37 $generated@@153 ($generated@@105 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@31 $generated@@37 $generated@@157 ($generated@@100 $generated@@155 $generated@@156))  (and ($generated@@31 $generated@@37 $generated@@157 ($generated@@38 $generated@@155 $generated@@156)) (forall (($generated@@158 T@U) )  (=> ($generated@@39 $generated@@158 $generated@@155) ($generated@@86 ($generated@@83 $generated@@155 $generated@@156 $generated@@84 $generated@@157 $generated@@158) $generated@@29)))))
 :pattern ( ($generated@@31 $generated@@37 $generated@@157 ($generated@@100 $generated@@155 $generated@@156)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@85 $generated@@162) (= ($generated@@47 $generated@@37 $generated@@159 ($generated@@38 $generated@@160 $generated@@161) $generated@@162) (forall (($generated@@163 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@163 $generated@@160) ($generated@@95 $generated@@163 $generated@@160 $generated@@162)) ($generated@@114 $generated@@160 $generated@@161 $generated@@162 $generated@@159 $generated@@163)) (forall (($generated@@164 T@U) ) (!  (=> (and (or (not (= $generated@@164 $generated@@34)) (not true)) ($generated@@28 ($generated@@83 $generated@@160 $generated@@161 $generated@@162 $generated@@159 $generated@@163) ($generated@@92 $generated@@32 $generated@@164))) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@32 ($generated@@55 $generated@@53 $generated@@54) $generated@@162 $generated@@164) $generated@@1))))
 :pattern ( ($generated@@28 ($generated@@83 $generated@@160 $generated@@161 $generated@@162 $generated@@159 $generated@@163) ($generated@@92 $generated@@32 $generated@@164)))
)))
 :pattern ( ($generated@@113 $generated@@160 $generated@@161 $generated@@162 $generated@@159 $generated@@163))
 :pattern ( ($generated@@83 $generated@@160 $generated@@161 $generated@@162 $generated@@159 $generated@@163))
))))
 :pattern ( ($generated@@47 $generated@@37 $generated@@159 ($generated@@38 $generated@@160 $generated@@161) $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@39 $generated@@167 ($generated@@38 $generated@@165 $generated@@166)) (and (= ($generated@@92 $generated@@37 ($generated@@51 $generated@@37 $generated@@167)) $generated@@167) ($generated@@31 $generated@@37 ($generated@@51 $generated@@37 $generated@@167) ($generated@@38 $generated@@165 $generated@@166))))
 :pattern ( ($generated@@39 $generated@@167 ($generated@@38 $generated@@165 $generated@@166)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@39 $generated@@170 ($generated@@100 $generated@@168 $generated@@169)) (and (= ($generated@@92 $generated@@37 ($generated@@51 $generated@@37 $generated@@170)) $generated@@170) ($generated@@31 $generated@@37 ($generated@@51 $generated@@37 $generated@@170) ($generated@@100 $generated@@168 $generated@@169))))
 :pattern ( ($generated@@39 $generated@@170 ($generated@@100 $generated@@168 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@39 $generated@@173 ($generated@@105 $generated@@171 $generated@@172)) (and (= ($generated@@92 $generated@@37 ($generated@@51 $generated@@37 $generated@@173)) $generated@@173) ($generated@@31 $generated@@37 ($generated@@51 $generated@@37 $generated@@173) ($generated@@105 $generated@@171 $generated@@172))))
 :pattern ( ($generated@@39 $generated@@173 ($generated@@105 $generated@@171 $generated@@172)))
)))
(assert  (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@174 $generated@@177 $generated@@178 $generated@@179 ($generated@@176 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@182 $generated@@183) $generated@@180)
 :weight 0
)) (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@174 $generated@@184 $generated@@185 $generated@@186 ($generated@@176 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@174 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@174 $generated@@193 $generated@@194 $generated@@195 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@174 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@16 ($generated@@174 $generated@@32 $generated@@53 $generated@@12 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (or (not (= $generated@@206 $generated@@202)) (not true)) ($generated@@16 ($generated@@51 $generated@@12 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@32 ($generated@@55 $generated@@53 $generated@@54) $generated@@203 $generated@@206) $generated@@204)))) $generated@@205))
 :pattern ( ($generated@@174 $generated@@32 $generated@@53 $generated@@12 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (and (= ($generated@@27 ($generated@@38 $generated@@209 $generated@@210)) $generated@@2) (= ($generated@@208 ($generated@@38 $generated@@209 $generated@@210)) $generated@@7))
 :pattern ( ($generated@@38 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (and (= ($generated@@27 ($generated@@100 $generated@@211 $generated@@212)) $generated@@3) (= ($generated@@208 ($generated@@100 $generated@@211 $generated@@212)) $generated@@8))
 :pattern ( ($generated@@100 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (and (= ($generated@@27 ($generated@@105 $generated@@213 $generated@@214)) $generated@@4) (= ($generated@@208 ($generated@@105 $generated@@213 $generated@@214)) $generated@@9))
 :pattern ( ($generated@@105 $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (and ($generated@@85 $generated@@217) (and ($generated@@39 $generated@@219 $generated@@215) ($generated@@31 $generated@@37 $generated@@218 ($generated@@38 $generated@@215 $generated@@216)))) ($generated@@86 ($generated@@83 $generated@@215 $generated@@216 $generated@@84 $generated@@218 $generated@@219) $generated@@29)) (= ($generated@@114 $generated@@215 $generated@@216 $generated@@84 $generated@@218 $generated@@219) ($generated@@114 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219)))
 :pattern ( ($generated@@114 $generated@@215 $generated@@216 $generated@@84 $generated@@218 $generated@@219) ($generated@@85 $generated@@217))
 :pattern ( ($generated@@114 $generated@@215 $generated@@216 $generated@@217 $generated@@218 $generated@@219))
)))
(assert (= ($generated@@27 $generated@@33) $generated@@5))
(assert (= ($generated@@208 $generated@@33) $generated@@10))
(assert (= ($generated@@27 $generated@@48) $generated@@6))
(assert (= ($generated@@208 $generated@@48) $generated@@10))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@86 $generated@@220 $generated@@221) (forall (($generated@@222 T@U) ) (! (= ($generated@@28 $generated@@220 $generated@@222) ($generated@@28 $generated@@221 $generated@@222))
 :pattern ( ($generated@@28 $generated@@220 $generated@@222))
 :pattern ( ($generated@@28 $generated@@221 $generated@@222))
)))
 :pattern ( ($generated@@86 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@223 Int) ) (! (= ($generated@@92 $generated@@13 ($generated@@17 ($generated@@78 $generated@@223))) ($generated@@80 $generated@@54 ($generated@@92 $generated@@13 ($generated@@17 $generated@@223))))
 :pattern ( ($generated@@92 $generated@@13 ($generated@@17 ($generated@@78 $generated@@223))))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (= ($generated@@92 $generated@@225 ($generated@@80 $generated@@225 $generated@@224)) ($generated@@80 $generated@@54 ($generated@@92 $generated@@225 $generated@@224)))
 :pattern ( ($generated@@92 $generated@@225 ($generated@@80 $generated@@225 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! ($generated@@47 $generated@@13 $generated@@227 $generated $generated@@226)
 :pattern ( ($generated@@47 $generated@@13 $generated@@227 $generated $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! ($generated@@31 $generated@@13 $generated@@228 $generated)
 :pattern ( ($generated@@31 $generated@@13 $generated@@228 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@239  (=> (= $generated@@229 ($generated@@175 $generated@@34 $generated@@230 $generated@@1 false)) (=> (and (= $generated@@231 ($generated@@113 $generated $generated@@232 $generated@@230 $generated@@233 ($generated@@92 $generated@@13 ($generated@@17 ($generated@@78 44))))) (= (ControlFlow 0 2) (- 0 1))) true))))
(let (($generated@@240  (=> (and (and ($generated@@85 $generated@@230) ($generated@@234 $generated@@230)) (and (or (not (= $generated@@235 $generated@@34)) (not true)) (and ($generated@@31 $generated@@32 $generated@@235 $generated@@48) ($generated@@47 $generated@@32 $generated@@235 $generated@@48 $generated@@230)))) (=> (and (and (and ($generated@@31 $generated@@37 $generated@@233 ($generated@@105 $generated $generated@@232)) ($generated@@47 $generated@@37 $generated@@233 ($generated@@105 $generated $generated@@232) $generated@@230)) (=> $generated@@236 (and ($generated@@39 $generated@@237 $generated@@232) ($generated@@95 $generated@@237 $generated@@232 $generated@@230)))) (and (= 0 $generated@@238) (= (ControlFlow 0 3) 2))) $generated@@239))))
$generated@@240)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
