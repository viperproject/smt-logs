(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@161 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@162 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ) (!  (not ($generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27))
)))
(assert (= ($generated@@8 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33 $generated@@34)) (forall (($generated@@37 T@U) ) (!  (=> ($generated@@31 $generated@@37 $generated@@35) ($generated@@31 $generated@@37 $generated@@33))
 :pattern ( ($generated@@31 $generated@@37 $generated@@35))
 :pattern ( ($generated@@31 $generated@@37 $generated@@33))
))) (forall (($generated@@38 T@U) ) (!  (=> ($generated@@31 $generated@@38 $generated@@34) ($generated@@31 $generated@@38 $generated@@36))
 :pattern ( ($generated@@31 $generated@@38 $generated@@34))
 :pattern ( ($generated@@31 $generated@@38 $generated@@36))
))) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@35 $generated@@36)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33 $generated@@34)) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@35 $generated@@36)))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@46 $generated@@50) (and ($generated@@31 $generated@@52 $generated@@48) ($generated@@28 $generated@@29 $generated@@51 ($generated@@30 $generated@@48 $generated@@49)))) (= ($generated@@47 ($generated@@44 $generated@@48 $generated@@49 $generated@@45 $generated@@51 $generated@@52) $generated@@26) ($generated@@47 ($generated@@44 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52) $generated@@26)))
 :pattern ( ($generated@@44 $generated@@48 $generated@@49 $generated@@45 $generated@@51 $generated@@52) ($generated@@46 $generated@@50))
 :pattern ( ($generated@@44 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert ($generated@@46 $generated@@45))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@57 ($generated@@54 $generated@@62 $generated@@59) $generated@@60 $generated@@61) ($generated@@58 $generated@@62 $generated@@59 $generated@@60 $generated@@61))
 :pattern ( ($generated@@57 ($generated@@54 $generated@@62 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@58 $generated@@29 $generated@@66 ($generated@@63 $generated@@64 $generated@@65) $generated@@67) ($generated@@58 $generated@@29 $generated@@66 ($generated@@30 $generated@@64 $generated@@65) $generated@@67))
 :pattern ( ($generated@@58 $generated@@29 $generated@@66 ($generated@@63 $generated@@64 $generated@@65) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@58 $generated@@29 $generated@@71 ($generated@@68 $generated@@69 $generated@@70) $generated@@72) ($generated@@58 $generated@@29 $generated@@71 ($generated@@63 $generated@@69 $generated@@70) $generated@@72))
 :pattern ( ($generated@@58 $generated@@29 $generated@@71 ($generated@@68 $generated@@69 $generated@@70) $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and ($generated@@46 $generated@@78) ($generated@@58 $generated@@29 $generated@@75 ($generated@@30 $generated@@76 $generated@@77) $generated@@78)) (forall (($generated@@79 T@U) ) (!  (=> (and ($generated@@57 $generated@@79 $generated@@76 $generated@@78) ($generated@@74 $generated@@76 $generated@@77 $generated@@78 $generated@@75 $generated@@79)) ($generated@@57 ($generated@@73 $generated@@76 $generated@@77 $generated@@78 $generated@@75 $generated@@79) $generated@@77 $generated@@78))
 :pattern ( ($generated@@73 $generated@@76 $generated@@77 $generated@@78 $generated@@75 $generated@@79))
)))
 :pattern ( ($generated@@58 $generated@@29 $generated@@75 ($generated@@30 $generated@@76 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> ($generated@@47 $generated@@80 $generated@@81) (= $generated@@80 $generated@@81))
 :pattern ( ($generated@@47 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@82 ($generated@@30 $generated@@83 $generated@@84)) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@85) ($generated@@31 $generated@@86 $generated@@83)) ($generated@@74 $generated@@83 $generated@@84 $generated@@85 $generated@@82 $generated@@86)) ($generated@@31 ($generated@@73 $generated@@83 $generated@@84 $generated@@85 $generated@@82 $generated@@86) $generated@@84))
 :pattern ( ($generated@@73 $generated@@83 $generated@@84 $generated@@85 $generated@@82 $generated@@86))
)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@82 ($generated@@30 $generated@@83 $generated@@84)))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@31 $generated@@87 $generated) (and (= ($generated@@54 $generated@@10 ($generated@@53 $generated@@10 $generated@@87)) $generated@@87) ($generated@@28 $generated@@10 ($generated@@53 $generated@@10 $generated@@87) $generated)))
 :pattern ( ($generated@@31 $generated@@87 $generated))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@31 ($generated@@54 $generated@@90 $generated@@88) $generated@@89) ($generated@@28 $generated@@90 $generated@@88 $generated@@89))
 :pattern ( ($generated@@31 ($generated@@54 $generated@@90 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 ($generated@@30 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@30 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@94 ($generated@@30 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@30 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 ($generated@@63 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@63 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@100 ($generated@@63 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@63 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@103 ($generated@@68 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@68 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 ($generated@@68 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@68 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@53 $generated@@110 ($generated@@54 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@54 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@113 ($generated@@68 $generated@@111 $generated@@112))  (and ($generated@@28 $generated@@29 $generated@@113 ($generated@@63 $generated@@111 $generated@@112)) (forall (($generated@@114 T@U) )  (=> ($generated@@31 $generated@@114 $generated@@111) ($generated@@74 $generated@@111 $generated@@112 $generated@@45 $generated@@113 $generated@@114)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@113 ($generated@@68 $generated@@111 $generated@@112)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@117 ($generated@@63 $generated@@115 $generated@@116))  (and ($generated@@28 $generated@@29 $generated@@117 ($generated@@30 $generated@@115 $generated@@116)) (forall (($generated@@118 T@U) )  (=> ($generated@@31 $generated@@118 $generated@@115) ($generated@@47 ($generated@@44 $generated@@115 $generated@@116 $generated@@45 $generated@@117 $generated@@118) $generated@@26)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@117 ($generated@@63 $generated@@115 $generated@@116)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@119) 4) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@121 $generated@@128 $generated@@129 ($generated@@125 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@130) $generated@@132) $generated@@130)
 :weight 0
))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@137 $generated@@138) (= ($generated@@121 $generated@@133 $generated@@134 ($generated@@125 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@135) $generated@@138) ($generated@@121 $generated@@133 $generated@@134 $generated@@136 $generated@@138)))
 :weight 0
))) (= ($generated@@8 $generated@@122) 5)) (= ($generated@@8 $generated@@123) 6)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (= ($generated@@8 ($generated@@124 $generated@@139 $generated@@140)) 7))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@126 ($generated@@124 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@124 $generated@@141 $generated@@142))
))) (forall (($generated@@143 T@T) ($generated@@144 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@124 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@46 $generated@@148) (= ($generated@@58 $generated@@29 $generated@@145 ($generated@@30 $generated@@146 $generated@@147) $generated@@148) (forall (($generated@@149 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@149 $generated@@146) ($generated@@57 $generated@@149 $generated@@146 $generated@@148)) ($generated@@74 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149)) (forall (($generated@@150 T@U) ) (!  (=> (and (or (not (= $generated@@150 $generated@@120)) (not true)) ($generated@@25 ($generated@@44 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149) ($generated@@54 $generated@@119 $generated@@150))) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@121 $generated@@122 $generated@@123 ($generated@@121 $generated@@119 ($generated@@124 $generated@@122 $generated@@123) $generated@@148 $generated@@150) $generated@@1))))
 :pattern ( ($generated@@25 ($generated@@44 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149) ($generated@@54 $generated@@119 $generated@@150)))
)))
 :pattern ( ($generated@@73 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149))
 :pattern ( ($generated@@44 $generated@@146 $generated@@147 $generated@@148 $generated@@145 $generated@@149))
))))
 :pattern ( ($generated@@58 $generated@@29 $generated@@145 ($generated@@30 $generated@@146 $generated@@147) $generated@@148))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@31 $generated@@153 ($generated@@30 $generated@@151 $generated@@152)) (and (= ($generated@@54 $generated@@29 ($generated@@53 $generated@@29 $generated@@153)) $generated@@153) ($generated@@28 $generated@@29 ($generated@@53 $generated@@29 $generated@@153) ($generated@@30 $generated@@151 $generated@@152))))
 :pattern ( ($generated@@31 $generated@@153 ($generated@@30 $generated@@151 $generated@@152)))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@31 $generated@@156 ($generated@@63 $generated@@154 $generated@@155)) (and (= ($generated@@54 $generated@@29 ($generated@@53 $generated@@29 $generated@@156)) $generated@@156) ($generated@@28 $generated@@29 ($generated@@53 $generated@@29 $generated@@156) ($generated@@63 $generated@@154 $generated@@155))))
 :pattern ( ($generated@@31 $generated@@156 ($generated@@63 $generated@@154 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@31 $generated@@159 ($generated@@68 $generated@@157 $generated@@158)) (and (= ($generated@@54 $generated@@29 ($generated@@53 $generated@@29 $generated@@159)) $generated@@159) ($generated@@28 $generated@@29 ($generated@@53 $generated@@29 $generated@@159) ($generated@@68 $generated@@157 $generated@@158))))
 :pattern ( ($generated@@31 $generated@@159 ($generated@@68 $generated@@157 $generated@@158)))
)))
(assert  (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@160 $generated@@163 $generated@@164 $generated@@165 ($generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@168 $generated@@169) $generated@@166)
 :weight 0
)) (and (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@160 $generated@@170 $generated@@171 $generated@@172 ($generated@@162 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@160 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)) (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@160 $generated@@179 $generated@@180 $generated@@181 ($generated@@162 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@160 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@13 ($generated@@160 $generated@@119 $generated@@122 $generated@@9 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@121 $generated@@122 $generated@@123 ($generated@@121 $generated@@119 ($generated@@124 $generated@@122 $generated@@123) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@160 $generated@@119 $generated@@122 $generated@@9 ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (and (= ($generated@@24 ($generated@@30 $generated@@195 $generated@@196)) $generated@@2) (= ($generated@@194 ($generated@@30 $generated@@195 $generated@@196)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (and (= ($generated@@24 ($generated@@63 $generated@@197 $generated@@198)) $generated@@3) (= ($generated@@194 ($generated@@63 $generated@@197 $generated@@198)) $generated@@6))
 :pattern ( ($generated@@63 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (and (= ($generated@@24 ($generated@@68 $generated@@199 $generated@@200)) $generated@@4) (= ($generated@@194 ($generated@@68 $generated@@199 $generated@@200)) $generated@@7))
 :pattern ( ($generated@@68 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@203) (and ($generated@@31 $generated@@205 $generated@@201) ($generated@@28 $generated@@29 $generated@@204 ($generated@@30 $generated@@201 $generated@@202)))) ($generated@@47 ($generated@@44 $generated@@201 $generated@@202 $generated@@45 $generated@@204 $generated@@205) $generated@@26)) (= ($generated@@74 $generated@@201 $generated@@202 $generated@@45 $generated@@204 $generated@@205) ($generated@@74 $generated@@201 $generated@@202 $generated@@203 $generated@@204 $generated@@205)))
 :pattern ( ($generated@@74 $generated@@201 $generated@@202 $generated@@45 $generated@@204 $generated@@205) ($generated@@46 $generated@@203))
 :pattern ( ($generated@@74 $generated@@201 $generated@@202 $generated@@203 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@47 $generated@@206 $generated@@207) (forall (($generated@@208 T@U) ) (! (= ($generated@@25 $generated@@206 $generated@@208) ($generated@@25 $generated@@207 $generated@@208))
 :pattern ( ($generated@@25 $generated@@206 $generated@@208))
 :pattern ( ($generated@@25 $generated@@207 $generated@@208))
)))
 :pattern ( ($generated@@47 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@209 Int) ) (! (= ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 $generated@@209))) ($generated@@41 $generated@@123 ($generated@@54 $generated@@10 ($generated@@14 $generated@@209))))
 :pattern ( ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 $generated@@209))))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@T) ) (! (= ($generated@@54 $generated@@211 ($generated@@41 $generated@@211 $generated@@210)) ($generated@@41 $generated@@123 ($generated@@54 $generated@@211 $generated@@210)))
 :pattern ( ($generated@@54 $generated@@211 ($generated@@41 $generated@@211 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! ($generated@@58 $generated@@10 $generated@@213 $generated $generated@@212)
 :pattern ( ($generated@@58 $generated@@10 $generated@@213 $generated $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ) (! ($generated@@28 $generated@@10 $generated@@214 $generated)
 :pattern ( ($generated@@28 $generated@@10 $generated@@214 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 () Bool)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@224  (=> (= $generated@@215 ($generated@@161 $generated@@120 $generated@@216 $generated@@1 false)) (=> (and (= $generated@@217 ($generated@@73 $generated $generated@@218 $generated@@216 $generated@@219 ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 44))))) (= (ControlFlow 0 2) (- 0 1))) true))))
(let (($generated@@225  (=> (and ($generated@@46 $generated@@216) ($generated@@220 $generated@@216)) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@219 ($generated@@68 $generated $generated@@218)) ($generated@@58 $generated@@29 $generated@@219 ($generated@@68 $generated $generated@@218) $generated@@216)) (=> $generated@@221 (and ($generated@@31 $generated@@222 $generated@@218) ($generated@@57 $generated@@222 $generated@@218 $generated@@216)))) (and (= 0 $generated@@223) (= (ControlFlow 0 3) 2))) $generated@@224))))
$generated@@225)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
