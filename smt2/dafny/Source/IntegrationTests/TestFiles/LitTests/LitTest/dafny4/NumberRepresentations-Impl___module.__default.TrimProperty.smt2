(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@U Int) T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@95 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@96 () T@T)
(declare-fun $generated@@97 (T@T T@T) T@T)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@101 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (= ($generated@@3 $generated@@26) 3))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@27 ($generated@@25 $generated@@26 $generated@@35)) (and (< 0 $generated@@22) ($generated@@28 $generated@@26 $generated@@35 ($generated@@29 $generated)))) (and (=> (and (or (not (= ($generated@@20 ($generated@@25 $generated@@26 $generated@@35)) 0)) (not true)) (= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@31 ($generated@@25 $generated@@26 $generated@@35) (- ($generated@@20 ($generated@@25 $generated@@26 $generated@@35)) 1)))) ($generated@@32 0))) ($generated@@27 ($generated@@33 ($generated@@25 $generated@@26 $generated@@35) (- ($generated@@20 ($generated@@25 $generated@@26 $generated@@35)) 1)))) (= ($generated@@23 ($generated@@24 $generated@@34) ($generated@@25 $generated@@26 $generated@@35)) (ite  (and (or (not (= ($generated@@20 ($generated@@25 $generated@@26 $generated@@35)) 0)) (not true)) (= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@31 ($generated@@25 $generated@@26 $generated@@35) (- ($generated@@20 ($generated@@25 $generated@@26 $generated@@35)) 1)))) ($generated@@32 0))) ($generated@@23 ($generated@@24 $generated@@34) ($generated@@33 ($generated@@25 $generated@@26 $generated@@35) (- ($generated@@20 ($generated@@25 $generated@@26 $generated@@35)) 1))) $generated@@35))))
 :weight 3
 :pattern ( ($generated@@23 ($generated@@24 $generated@@34) ($generated@@25 $generated@@26 $generated@@35)))
))))
(assert (forall (($generated@@37 T@U) ($generated@@38 Int) ) (!  (=> (= $generated@@38 0) (= ($generated@@36 $generated@@37 $generated@@38) $generated@@37))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@39 Int) ) (! (= ($generated@@32 $generated@@39) $generated@@39)
 :pattern ( ($generated@@32 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@25 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@25 $generated@@41 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 Int) ($generated@@44 Int) ) (!  (=> (and (and (<= 0 $generated@@44) (< $generated@@44 $generated@@43)) (< $generated@@44 ($generated@@20 $generated@@42))) (= ($generated@@31 ($generated@@33 $generated@@42 $generated@@43) $generated@@44) ($generated@@31 $generated@@42 $generated@@44)))
 :weight 25
 :pattern ( ($generated@@31 ($generated@@33 $generated@@42 $generated@@43) $generated@@44))
 :pattern ( ($generated@@31 $generated@@42 $generated@@44) ($generated@@33 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (and (<= 0 $generated@@46) (<= $generated@@46 ($generated@@20 $generated@@45))) (= ($generated@@20 ($generated@@36 $generated@@45 $generated@@46)) (- ($generated@@20 $generated@@45) $generated@@46)))
 :pattern ( ($generated@@20 ($generated@@36 $generated@@45 $generated@@46)))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@49)  (and (= ($generated@@20 $generated@@48) ($generated@@20 $generated@@49)) (forall (($generated@@50 Int) ) (!  (=> (and (<= 0 $generated@@50) (< $generated@@50 ($generated@@20 $generated@@48))) (= ($generated@@31 $generated@@48 $generated@@50) ($generated@@31 $generated@@49 $generated@@50)))
 :pattern ( ($generated@@31 $generated@@48 $generated@@50))
 :pattern ( ($generated@@31 $generated@@49 $generated@@50))
))))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@30 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@30 $generated@@53 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ) (!  (=> (and (<= 0 $generated@@56) (< $generated@@56 ($generated@@20 $generated@@55))) (< ($generated@@54 ($generated@@33 $generated@@55 $generated@@56)) ($generated@@54 $generated@@55)))
 :pattern ( ($generated@@54 ($generated@@33 $generated@@55 $generated@@56)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 Int) ) (!  (=> (and (< 0 $generated@@58) (<= $generated@@58 ($generated@@20 $generated@@57))) (< ($generated@@54 ($generated@@36 $generated@@57 $generated@@58)) ($generated@@54 $generated@@57)))
 :pattern ( ($generated@@54 ($generated@@36 $generated@@57 $generated@@58)))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@59 ($generated@@51 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@60 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@59 ($generated@@51 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 Int) ($generated@@67 Int) ) (!  (=> (and (and (<= 0 $generated@@66) (<= 0 $generated@@67)) (< $generated@@67 (- ($generated@@20 $generated@@65) $generated@@66))) (= ($generated@@31 ($generated@@36 $generated@@65 $generated@@66) $generated@@67) ($generated@@31 $generated@@65 (+ $generated@@67 $generated@@66))))
 :weight 25
 :pattern ( ($generated@@31 ($generated@@36 $generated@@65 $generated@@66) $generated@@67))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@27 $generated@@69) (and (< 0 $generated@@22) ($generated@@28 $generated@@26 $generated@@69 ($generated@@29 $generated)))) (and (=> (and (or (not (= ($generated@@20 $generated@@69) 0)) (not true)) (= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@31 $generated@@69 (- ($generated@@20 $generated@@69) 1)))) ($generated@@32 0))) ($generated@@27 ($generated@@33 $generated@@69 (- ($generated@@20 $generated@@69) 1)))) (= ($generated@@23 ($generated@@24 $generated@@68) $generated@@69) (ite  (and (or (not (= ($generated@@20 $generated@@69) 0)) (not true)) (= ($generated@@10 ($generated@@30 $generated@@5 ($generated@@31 $generated@@69 (- ($generated@@20 $generated@@69) 1)))) ($generated@@32 0))) ($generated@@23 $generated@@68 ($generated@@33 $generated@@69 (- ($generated@@20 $generated@@69) 1))) $generated@@69))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@68) $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@47 $generated@@70 $generated@@71) (= $generated@@70 $generated@@71))
 :pattern ( ($generated@@47 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> (and (<= 0 $generated@@73) (<= $generated@@73 ($generated@@20 $generated@@72))) (= ($generated@@20 ($generated@@33 $generated@@72 $generated@@73)) $generated@@73))
 :pattern ( ($generated@@20 ($generated@@33 $generated@@72 $generated@@73)))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@74 $generated@@75 $generated) (and (= ($generated@@51 $generated@@5 ($generated@@30 $generated@@5 $generated@@75)) $generated@@75) ($generated@@28 $generated@@5 ($generated@@30 $generated@@5 $generated@@75) $generated)))
 :pattern ( ($generated@@74 $generated@@75 $generated))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@51 $generated@@78 $generated@@76) $generated@@77) ($generated@@28 $generated@@78 $generated@@76 $generated@@77))
 :pattern ( ($generated@@74 ($generated@@51 $generated@@78 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (<= 0 ($generated@@20 $generated@@79))
 :pattern ( ($generated@@20 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@60 $generated@@26 $generated@@80 ($generated@@29 $generated@@81) $generated@@82) (forall (($generated@@83 Int) ) (!  (=> (and (<= 0 $generated@@83) (< $generated@@83 ($generated@@20 $generated@@80))) ($generated@@59 ($generated@@31 $generated@@80 $generated@@83) $generated@@81 $generated@@82))
 :pattern ( ($generated@@31 $generated@@80 $generated@@83))
)))
 :pattern ( ($generated@@60 $generated@@26 $generated@@80 ($generated@@29 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 ($generated@@29 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@29 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@19 ($generated@@29 $generated@@86)) $generated@@1)
 :pattern ( ($generated@@29 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@30 $generated@@88 ($generated@@51 $generated@@88 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@51 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@89) $generated@@90) ($generated@@23 $generated@@89 $generated@@90))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@89) $generated@@90))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@91 $generated@@102 $generated@@103 $generated@@104 ($generated@@98 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@91 $generated@@109 $generated@@110 $generated@@111 ($generated@@98 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@91 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@91 $generated@@118 $generated@@119 $generated@@120 ($generated@@98 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@91 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))) (= ($generated@@3 $generated@@92) 4)) (= ($generated@@3 $generated@@93) 5)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@95 $generated@@127 $generated@@128 ($generated@@99 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@129) $generated@@131) $generated@@129)
 :weight 0
))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@136 $generated@@137) (= ($generated@@95 $generated@@132 $generated@@133 ($generated@@99 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@134) $generated@@137) ($generated@@95 $generated@@132 $generated@@133 $generated@@135 $generated@@137)))
 :weight 0
))) (= ($generated@@3 $generated@@96) 6)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (= ($generated@@3 ($generated@@97 $generated@@138 $generated@@139)) 7))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@100 ($generated@@97 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@97 $generated@@140 $generated@@141))
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ) (! (= ($generated@@101 ($generated@@97 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@97 $generated@@142 $generated@@143))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 Bool) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@8 ($generated@@91 $generated@@92 $generated@@93 $generated@@4 ($generated@@94 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))  (=> (and (or (not (= $generated@@148 $generated@@144)) (not true)) ($generated@@8 ($generated@@30 $generated@@4 ($generated@@95 $generated@@93 $generated@@96 ($generated@@95 $generated@@92 ($generated@@97 $generated@@93 $generated@@96) $generated@@145 $generated@@148) $generated@@146)))) $generated@@147))
 :pattern ( ($generated@@91 $generated@@92 $generated@@93 $generated@@4 ($generated@@94 $generated@@144 $generated@@145 $generated@@146 $generated@@147) $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@74 $generated@@150 ($generated@@29 $generated@@151)) (and (= ($generated@@51 $generated@@26 ($generated@@30 $generated@@26 $generated@@150)) $generated@@150) ($generated@@28 $generated@@26 ($generated@@30 $generated@@26 $generated@@150) ($generated@@29 $generated@@151))))
 :pattern ( ($generated@@74 $generated@@150 ($generated@@29 $generated@@151)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 Int) ) (!  (=> (and (and (<= 0 $generated@@153) (<= $generated@@153 $generated@@154)) (< $generated@@154 ($generated@@20 $generated@@152))) (= ($generated@@31 ($generated@@36 $generated@@152 $generated@@153) (- $generated@@154 $generated@@153)) ($generated@@31 $generated@@152 $generated@@154)))
 :weight 25
 :pattern ( ($generated@@31 $generated@@152 $generated@@154) ($generated@@36 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 Int) ($generated@@157 Int) ) (!  (=> (and (and (<= 0 $generated@@156) (<= 0 $generated@@157)) (<= (+ $generated@@156 $generated@@157) ($generated@@20 $generated@@155))) (= ($generated@@36 ($generated@@36 $generated@@155 $generated@@156) $generated@@157) ($generated@@36 $generated@@155 (+ $generated@@156 $generated@@157))))
 :pattern ( ($generated@@36 ($generated@@36 $generated@@155 $generated@@156) $generated@@157))
)))
(assert (forall (($generated@@158 Int) ) (! (= ($generated@@51 $generated@@5 ($generated@@9 ($generated@@32 $generated@@158))) ($generated@@25 $generated@@96 ($generated@@51 $generated@@5 ($generated@@9 $generated@@158))))
 :pattern ( ($generated@@51 $generated@@5 ($generated@@9 ($generated@@32 $generated@@158))))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@51 $generated@@160 ($generated@@25 $generated@@160 $generated@@159)) ($generated@@25 $generated@@96 ($generated@@51 $generated@@160 $generated@@159)))
 :pattern ( ($generated@@51 $generated@@160 ($generated@@25 $generated@@160 $generated@@159)))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> (= ($generated@@20 $generated@@161) 0) (= $generated@@161 $generated@@21))
 :pattern ( ($generated@@20 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 Int) ) (!  (=> (= $generated@@163 0) (= ($generated@@33 $generated@@162 $generated@@163) $generated@@21))
 :pattern ( ($generated@@33 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! ($generated@@60 $generated@@5 $generated@@165 $generated $generated@@164)
 :pattern ( ($generated@@60 $generated@@5 $generated@@165 $generated $generated@@164))
)))
(assert  (=> (<= 0 $generated@@22) (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (or ($generated@@27 $generated@@167) (and (< 0 $generated@@22) ($generated@@28 $generated@@26 $generated@@167 ($generated@@29 $generated)))) ($generated@@28 $generated@@26 ($generated@@23 $generated@@166 $generated@@167) ($generated@@29 $generated)))
 :pattern ( ($generated@@23 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@28 $generated@@26 $generated@@168 ($generated@@29 $generated@@169)) (forall (($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@20 $generated@@168))) ($generated@@74 ($generated@@31 $generated@@168 $generated@@170) $generated@@169))
 :pattern ( ($generated@@31 $generated@@168 $generated@@170))
)))
 :pattern ( ($generated@@28 $generated@@26 $generated@@168 ($generated@@29 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@28 $generated@@5 $generated@@171 $generated)
 :pattern ( ($generated@@28 $generated@@5 $generated@@171 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@181  (=> (forall (($generated@@182 T@U) ) (!  (=> ($generated@@28 $generated@@26 $generated@@182 ($generated@@29 $generated)) ($generated@@27 $generated@@182))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@172) $generated@@182))
)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@183 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@26 $generated@@183 ($generated@@29 $generated)) (forall (($generated@@184 T@U) ) (!  (=> ($generated@@28 $generated@@26 $generated@@184 ($generated@@29 $generated)) (=> (< ($generated@@54 $generated@@184) ($generated@@54 $generated@@183)) (<= ($generated@@20 ($generated@@23 ($generated@@24 $generated@@172) $generated@@184)) ($generated@@20 $generated@@184))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@172) $generated@@184))
))) true) (<= ($generated@@20 ($generated@@23 ($generated@@24 ($generated@@24 $generated@@172)) $generated@@183)) ($generated@@20 $generated@@183)))
 :pattern ( ($generated@@23 ($generated@@24 ($generated@@24 $generated@@172)) $generated@@183))
))) (=> (and (forall (($generated@@185 T@U) ) (!  (=> ($generated@@28 $generated@@26 $generated@@185 ($generated@@29 $generated)) (<= ($generated@@20 ($generated@@23 ($generated@@24 $generated@@172) $generated@@185)) ($generated@@20 $generated@@185)))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@172) $generated@@185))
)) (= (ControlFlow 0 2) (- 0 1))) (or ($generated@@47 $generated@@173 $generated@@21) ($generated@@47 ($generated@@36 $generated@@173 ($generated@@32 1)) ($generated@@23 ($generated@@24 ($generated@@24 $generated@@172)) ($generated@@36 $generated@@173 ($generated@@32 1))))))))))
(let (($generated@@186  (=> (and (not (and ($generated@@28 $generated@@26 $generated@@174 ($generated@@29 $generated)) ($generated@@60 $generated@@26 $generated@@174 ($generated@@29 $generated) $generated@@175))) (= (ControlFlow 0 5) 2)) $generated@@181)))
(let (($generated@@187  (=> (and (and (and ($generated@@28 $generated@@26 $generated@@174 ($generated@@29 $generated)) ($generated@@60 $generated@@26 $generated@@174 ($generated@@29 $generated) $generated@@175)) ($generated@@60 $generated@@26 $generated@@174 ($generated@@29 $generated) $generated@@175)) (and ($generated@@27 $generated@@174) (= (ControlFlow 0 4) 2))) $generated@@181)))
(let (($generated@@188  (=> (= $generated@@176 ($generated@@94 $generated@@177 $generated@@178 $generated@@2 false)) (=> (and (and ($generated@@179 $generated@@175) ($generated@@180 $generated@@175)) (and (= $generated@@178 $generated@@175) (forall (($generated@@189 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@26 $generated@@189 ($generated@@29 $generated)) ($generated@@47 $generated@@189 ($generated@@23 ($generated@@24 $generated@@172) $generated@@189))) (< ($generated@@54 $generated@@189) ($generated@@54 $generated@@173))) (or ($generated@@47 $generated@@189 $generated@@21) ($generated@@47 ($generated@@36 $generated@@189 ($generated@@32 1)) ($generated@@23 ($generated@@24 $generated@@172) ($generated@@36 $generated@@189 ($generated@@32 1))))))
 :pattern ( ($generated@@36 $generated@@189 ($generated@@32 1)))
)))) (and (=> (= (ControlFlow 0 6) 4) $generated@@187) (=> (= (ControlFlow 0 6) 5) $generated@@186))))))
(let (($generated@@190  (=> (and ($generated@@179 $generated@@178) ($generated@@180 $generated@@178)) (=> (and (and (and ($generated@@28 $generated@@26 $generated@@173 ($generated@@29 $generated)) ($generated@@60 $generated@@26 $generated@@173 ($generated@@29 $generated) $generated@@178)) (= 1 $generated@@22)) (and ($generated@@47 $generated@@173 ($generated@@23 ($generated@@24 ($generated@@24 $generated@@172)) $generated@@173)) (= (ControlFlow 0 7) 6))) $generated@@188))))
$generated@@190))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
