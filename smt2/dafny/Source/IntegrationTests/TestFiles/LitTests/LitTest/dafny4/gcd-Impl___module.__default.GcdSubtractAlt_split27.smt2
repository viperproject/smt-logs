(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@26 () Int)
(declare-fun $generated@@27 (Int Int) Bool)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 (Int Int) Bool)
(declare-fun $generated@@30 (Int Int) Int)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@40 (Bool Int Int) Int)
(declare-fun $generated@@41 (Int Int) Bool)
(declare-fun $generated@@45 (Int) T@U)
(declare-fun $generated@@46 (Int) Bool)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U) Int)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@U Int Int) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@70 () T@T)
(declare-fun $generated@@71 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T) T@T)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@185 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert (forall (($generated@@25 T@U) ) (!  (not ($generated@@23 $generated@@24 $generated@@25))
 :pattern ( ($generated@@23 $generated@@24 $generated@@25))
)))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (or ($generated@@29 ($generated@@28 $generated@@31) ($generated@@28 $generated@@32)) (and (< 1 $generated@@26) (and (<= ($generated@@28 1) $generated@@31) (<= ($generated@@28 1) $generated@@32)))) (= ($generated@@27 ($generated@@28 $generated@@31) ($generated@@28 $generated@@32)) (exists (($generated@@33 Int) ) (! (= ($generated@@30 ($generated@@28 $generated@@31) $generated@@33) ($generated@@28 $generated@@32))
 :pattern ( ($generated@@30 $generated@@31 $generated@@33))
))))
 :weight 3
 :pattern ( ($generated@@27 ($generated@@28 $generated@@31) ($generated@@28 $generated@@32)))
))))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@23 ($generated@@34 $generated@@35 $generated@@36) $generated@@37)  (and ($generated@@23 $generated@@35 $generated@@37) ($generated@@23 $generated@@36 $generated@@37)))
 :pattern ( ($generated@@23 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@34 ($generated@@34 $generated@@38 $generated@@39) $generated@@39) ($generated@@34 $generated@@38 $generated@@39))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@38 $generated@@39) $generated@@39))
)))
(assert  (=> (<= 4 $generated@@26) (forall (($generated@@42 Bool) ($generated@@43 Int) ($generated@@44 Int) ) (!  (=> (or ($generated@@41 $generated@@43 $generated@@44) (and (< 4 $generated@@26) (and (<= ($generated@@28 1) $generated@@43) (<= ($generated@@28 1) $generated@@44)))) (<= ($generated@@28 1) ($generated@@40 $generated@@42 $generated@@43 $generated@@44)))
 :pattern ( ($generated@@40 $generated@@42 $generated@@43 $generated@@44))
))))
(assert (= ($generated@@3 $generated@@48) 3))
(assert  (=> (<= 2 $generated@@26) (forall (($generated@@50 Int) ) (!  (=> (or ($generated@@46 $generated@@50) (and (< 2 $generated@@26) (<= ($generated@@28 1) $generated@@50))) ($generated@@47 $generated@@48 ($generated@@45 $generated@@50) ($generated@@49 $generated@@20)))
 :pattern ( ($generated@@45 $generated@@50))
))))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@28 $generated@@51) $generated@@51)
 :pattern ( ($generated@@28 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@54 $generated@@53))
)))
(assert  (=> (<= 4 $generated@@26) (forall (($generated@@57 Int) ($generated@@58 Int) ) (!  (=> (or ($generated@@41 $generated@@57 $generated@@58) (and (< 4 $generated@@26) (and (<= ($generated@@28 1) $generated@@57) (<= ($generated@@28 1) $generated@@58)))) (and (and (and ($generated@@46 $generated@@57) ($generated@@46 $generated@@58)) (let (($generated@@59 ($generated@@34 ($generated@@45 $generated@@57) ($generated@@45 $generated@@58))))
($generated@@55 $generated@@59))) (= ($generated@@40 true $generated@@57 $generated@@58) (let (($generated@@60 ($generated@@34 ($generated@@45 $generated@@57) ($generated@@45 $generated@@58))))
($generated@@56 $generated@@60)))))
 :pattern ( ($generated@@40 true $generated@@57 $generated@@58))
))))
(assert  (=> (<= 2 $generated@@26) (forall (($generated@@63 Int) ) (!  (=> (or ($generated@@46 ($generated@@28 $generated@@63)) (and (< 2 $generated@@26) (<= ($generated@@28 1) $generated@@63))) (and (forall (($generated@@64 Int) ) (!  (=> (<= ($generated@@28 1) $generated@@64) (=> (<= $generated@@64 ($generated@@28 $generated@@63)) ($generated@@29 $generated@@64 ($generated@@28 $generated@@63))))
 :pattern ( ($generated@@27 $generated@@64 $generated@@63))
)) (= ($generated@@45 ($generated@@28 $generated@@63)) ($generated@@61 ($generated@@62 $generated@@20 ($generated@@28 $generated@@63) ($generated@@28 $generated@@63))))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@28 $generated@@63)))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert  (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@69 $generated@@72 $generated@@73 ($generated@@71 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@76) $generated@@74)
 :weight 0
)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@69 $generated@@77 $generated@@78 ($generated@@71 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@69 $generated@@77 $generated@@78 $generated@@80 $generated@@82)))
 :weight 0
))) (= ($generated@@3 $generated@@70) 4)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@23 ($generated@@61 $generated@@83) $generated@@84) ($generated@@8 ($generated@@69 $generated@@70 $generated@@4 $generated@@83 $generated@@84)))
 :pattern ( ($generated@@23 ($generated@@61 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@86 ($generated@@49 $generated@@87)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@23 $generated@@86 $generated@@88) ($generated@@85 $generated@@88 $generated@@87))
 :pattern ( ($generated@@23 $generated@@86 $generated@@88))
)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@86 ($generated@@49 $generated@@87)))
)))
(assert  (=> (<= 1 $generated@@26) (forall (($generated@@89 Int) ($generated@@90 Int) ) (!  (=> (or ($generated@@29 $generated@@89 $generated@@90) (and (< 1 $generated@@26) (and (<= ($generated@@28 1) $generated@@89) (<= ($generated@@28 1) $generated@@90)))) (= ($generated@@27 $generated@@89 $generated@@90) (exists (($generated@@91 Int) ) (! (= ($generated@@30 $generated@@89 $generated@@91) $generated@@90)
 :pattern ( ($generated@@30 $generated@@89 $generated@@91))
))))
 :pattern ( ($generated@@27 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@47 $generated@@5 $generated@@92 $generated@@20) (<= ($generated@@28 1) ($generated@@10 $generated@@92)))
 :pattern ( ($generated@@47 $generated@@5 $generated@@92 $generated@@20))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@93 ($generated@@66 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@19 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@93 ($generated@@66 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert  (=> (<= 3 $generated@@26) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or ($generated@@55 $generated@@103) (and (< 3 $generated@@26) (and (and ($generated@@98 $generated@@102) ($generated@@47 $generated@@48 $generated@@103 ($generated@@49 $generated@@20))) (not ($generated@@99 $generated@@103 $generated@@24))))) (and ($generated@@100 $generated@@103) (= ($generated@@56 $generated@@103) (let (($generated@@104 ($generated@@101 $generated@@103)))
$generated@@104))))
 :pattern ( ($generated@@56 $generated@@103) ($generated@@98 $generated@@102))
))))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@85 $generated@@105 $generated@@20) (and (= ($generated@@66 $generated@@5 ($generated@@65 $generated@@5 $generated@@105)) $generated@@105) ($generated@@47 $generated@@5 ($generated@@65 $generated@@5 $generated@@105) $generated@@20)))
 :pattern ( ($generated@@85 $generated@@105 $generated@@20))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@99 $generated@@106 $generated@@107) (= $generated@@106 $generated@@107))
 :pattern ( ($generated@@99 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 Int) ($generated@@110 Int) ($generated@@111 T@U) ) (! (= ($generated@@8 ($generated@@69 $generated@@70 $generated@@4 ($generated@@62 $generated@@108 $generated@@109 $generated@@110) $generated@@111))  (and ($generated@@85 $generated@@111 $generated@@108) (and (<= ($generated@@10 ($generated@@65 $generated@@5 $generated@@111)) $generated@@109) ($generated@@27 ($generated@@10 ($generated@@65 $generated@@5 $generated@@111)) $generated@@110))))
 :pattern ( ($generated@@69 $generated@@70 $generated@@4 ($generated@@62 $generated@@108 $generated@@109 $generated@@110) $generated@@111))
)))
(assert  (=> (<= 4 $generated@@26) (forall (($generated@@112 Int) ($generated@@113 Int) ) (!  (=> (or ($generated@@41 ($generated@@28 $generated@@112) ($generated@@28 $generated@@113)) (and (< 4 $generated@@26) (and (<= ($generated@@28 1) $generated@@112) (<= ($generated@@28 1) $generated@@113)))) (and (and (and ($generated@@46 ($generated@@28 $generated@@112)) ($generated@@46 ($generated@@28 $generated@@113))) (let (($generated@@114 ($generated@@34 ($generated@@45 ($generated@@28 $generated@@112)) ($generated@@45 ($generated@@28 $generated@@113)))))
($generated@@55 $generated@@114))) (= ($generated@@40 true ($generated@@28 $generated@@112) ($generated@@28 $generated@@113)) (let (($generated@@115 ($generated@@34 ($generated@@45 ($generated@@28 $generated@@112)) ($generated@@45 ($generated@@28 $generated@@113)))))
($generated@@56 $generated@@115)))))
 :weight 3
 :pattern ( ($generated@@40 true ($generated@@28 $generated@@112) ($generated@@28 $generated@@113)))
))))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@85 ($generated@@66 $generated@@118 $generated@@116) $generated@@117) ($generated@@47 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@85 ($generated@@66 $generated@@118 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@100 $generated@@119) (and ($generated@@23 $generated@@119 ($generated@@66 $generated@@5 ($generated@@9 ($generated@@101 $generated@@119)))) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@23 $generated@@119 ($generated@@66 $generated@@5 $generated@@120)) (<= ($generated@@10 $generated@@120) ($generated@@101 $generated@@119)))
 :pattern ( ($generated@@23 $generated@@119 ($generated@@66 $generated@@5 $generated@@120)))
))))
 :pattern ( ($generated@@101 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@19 $generated@@48 $generated@@121 ($generated@@49 $generated@@122) $generated@@123) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@23 $generated@@121 $generated@@124) ($generated@@93 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@23 $generated@@121 $generated@@124))
)))
 :pattern ( ($generated@@19 $generated@@48 $generated@@121 ($generated@@49 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@49 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@49 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@49 $generated@@128)) $generated)
 :pattern ( ($generated@@49 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@65 $generated@@130 ($generated@@66 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@66 $generated@@130 $generated@@129))
)))
(assert  (=> (<= 3 $generated@@26) (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@55 ($generated@@52 $generated@@48 $generated@@132)) (and (< 3 $generated@@26) (and (and ($generated@@98 $generated@@131) ($generated@@47 $generated@@48 $generated@@132 ($generated@@49 $generated@@20))) (not ($generated@@99 $generated@@132 $generated@@24))))) (and ($generated@@100 ($generated@@52 $generated@@48 $generated@@132)) (= ($generated@@56 ($generated@@52 $generated@@48 $generated@@132)) (let (($generated@@133 ($generated@@101 ($generated@@52 $generated@@48 $generated@@132))))
$generated@@133))))
 :weight 3
 :pattern ( ($generated@@56 ($generated@@52 $generated@@48 $generated@@132)) ($generated@@98 $generated@@131))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@34 $generated@@134 ($generated@@34 $generated@@134 $generated@@135)) ($generated@@34 $generated@@134 $generated@@135))
 :pattern ( ($generated@@34 $generated@@134 ($generated@@34 $generated@@134 $generated@@135)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@136 $generated@@144 $generated@@145 $generated@@146 ($generated@@141 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@136 $generated@@151 $generated@@152 $generated@@153 ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@136 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@136 $generated@@160 $generated@@161 $generated@@162 ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@136 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))) (= ($generated@@3 $generated@@137) 5)) (= ($generated@@3 $generated@@138) 6)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (= ($generated@@3 ($generated@@140 $generated@@169 $generated@@170)) 7))) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (! (= ($generated@@142 ($generated@@140 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@140 $generated@@171 $generated@@172))
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@173 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@140 $generated@@173 $generated@@174))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@8 ($generated@@136 $generated@@137 $generated@@138 $generated@@4 ($generated@@139 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@8 ($generated@@65 $generated@@4 ($generated@@69 $generated@@138 $generated@@70 ($generated@@69 $generated@@137 ($generated@@140 $generated@@138 $generated@@70) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@4 ($generated@@139 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 Int) ($generated@@182 Int) ) (! (= ($generated@@30 $generated@@181 $generated@@182) (* $generated@@181 $generated@@182))
 :pattern ( ($generated@@30 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@85 $generated@@183 ($generated@@49 $generated@@184)) (and (= ($generated@@66 $generated@@48 ($generated@@65 $generated@@48 $generated@@183)) $generated@@183) ($generated@@47 $generated@@48 ($generated@@65 $generated@@48 $generated@@183) ($generated@@49 $generated@@184))))
 :pattern ( ($generated@@85 $generated@@183 ($generated@@49 $generated@@184)))
)))
(assert (= ($generated@@127 $generated@@20) $generated@@1))
(assert (= ($generated@@185 $generated@@20) $generated@@2))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@99 $generated@@186 $generated@@187) (forall (($generated@@188 T@U) ) (! (= ($generated@@23 $generated@@186 $generated@@188) ($generated@@23 $generated@@187 $generated@@188))
 :pattern ( ($generated@@23 $generated@@186 $generated@@188))
 :pattern ( ($generated@@23 $generated@@187 $generated@@188))
)))
 :pattern ( ($generated@@99 $generated@@186 $generated@@187))
)))
(assert  (=> (<= 2 $generated@@26) (forall (($generated@@189 Int) ) (!  (=> (or ($generated@@46 $generated@@189) (and (< 2 $generated@@26) (<= ($generated@@28 1) $generated@@189))) (and (forall (($generated@@190 Int) ) (!  (=> (<= ($generated@@28 1) $generated@@190) (=> (<= $generated@@190 $generated@@189) ($generated@@29 $generated@@190 $generated@@189)))
 :pattern ( ($generated@@27 $generated@@190 $generated@@189))
)) (= ($generated@@45 $generated@@189) ($generated@@61 ($generated@@62 $generated@@20 $generated@@189 $generated@@189)))))
 :pattern ( ($generated@@45 $generated@@189))
))))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@66 $generated@@5 ($generated@@9 ($generated@@28 $generated@@191))) ($generated@@52 $generated@@70 ($generated@@66 $generated@@5 ($generated@@9 $generated@@191))))
 :pattern ( ($generated@@66 $generated@@5 ($generated@@9 ($generated@@28 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@66 $generated@@193 ($generated@@52 $generated@@193 $generated@@192)) ($generated@@52 $generated@@70 ($generated@@66 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@66 $generated@@193 ($generated@@52 $generated@@193 $generated@@192)))
)))
(assert  (=> (<= 3 $generated@@26) (forall (($generated@@194 T@U) ) (!  (=> (or ($generated@@55 $generated@@194) (and (< 3 $generated@@26) (and ($generated@@47 $generated@@48 $generated@@194 ($generated@@49 $generated@@20)) (not ($generated@@99 $generated@@194 $generated@@24))))) (<= ($generated@@28 1) ($generated@@56 $generated@@194)))
 :pattern ( ($generated@@56 $generated@@194))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () Int)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@218  (=> (or (and ($generated@@47 $generated@@5 ($generated@@9 ($generated@@28 1)) $generated@@20) (= ($generated@@30 $generated@@195 ($generated@@28 1)) $generated@@196)) (or (and ($generated@@47 $generated@@5 ($generated@@9 ($generated@@28 0)) $generated@@20) (= ($generated@@30 $generated@@195 ($generated@@28 0)) $generated@@196)) (exists (($generated@@219 Int) )  (and (<= ($generated@@28 1) $generated@@219) (= ($generated@@30 $generated@@195 $generated@@219) $generated@@196))))) (=> (and (and (<= ($generated@@28 1) $generated@@197) (= ($generated@@30 $generated@@195 $generated@@197) $generated@@196)) (and (= $generated@@198 ($generated@@30 $generated@@195 $generated@@197)) (= (ControlFlow 0 2) (- 0 1)))) (<= ($generated@@28 1) $generated@@198)))))
(let (($generated@@220  (=> (and (< $generated@@199 ($generated@@28 1)) (= (ControlFlow 0 4) 2)) $generated@@218)))
(let (($generated@@221  (=> (and (and (<= ($generated@@28 1) $generated@@199) (= $generated@@200 ($generated@@30 $generated@@195 $generated@@199))) (and (<= ($generated@@28 1) $generated@@200) (= (ControlFlow 0 3) 2))) $generated@@218)))
(let (($generated@@222  (=> (or (and ($generated@@47 $generated@@5 ($generated@@9 ($generated@@28 1)) $generated@@20) (= ($generated@@30 $generated@@195 ($generated@@28 1)) $generated@@201)) (or (and ($generated@@47 $generated@@5 ($generated@@9 ($generated@@28 0)) $generated@@20) (= ($generated@@30 $generated@@195 ($generated@@28 0)) $generated@@201)) (exists (($generated@@223 Int) )  (and (<= ($generated@@28 1) $generated@@223) (= ($generated@@30 $generated@@195 $generated@@223) $generated@@201))))) (=> (and (<= ($generated@@28 1) $generated@@202) (= ($generated@@30 $generated@@195 $generated@@202) $generated@@201)) (and (=> (= (ControlFlow 0 5) 3) $generated@@221) (=> (= (ControlFlow 0 5) 4) $generated@@220))))))
(let (($generated@@224  (=> (and (< $generated@@203 ($generated@@28 1)) (= (ControlFlow 0 7) 5)) $generated@@222)))
(let (($generated@@225  (=> (and (and (<= ($generated@@28 1) $generated@@203) (= $generated@@204 ($generated@@30 $generated@@195 $generated@@203))) (and (<= ($generated@@28 1) $generated@@204) (= (ControlFlow 0 6) 5))) $generated@@222)))
(let (($generated@@226  (=> (and ($generated@@98 $generated@@205) ($generated@@206 $generated@@205)) (=> (and (and (and (<= ($generated@@28 1) $generated@@201) (<= ($generated@@28 1) $generated@@196)) (and (<= ($generated@@28 1) $generated@@207) true)) (and (and (<= ($generated@@28 1) $generated@@208) true) (and (<= ($generated@@28 1) $generated@@209) true))) (=> (and (and (and (and (and ($generated@@47 $generated@@48 $generated@@210 ($generated@@49 $generated@@20)) ($generated@@19 $generated@@48 $generated@@210 ($generated@@49 $generated@@20) $generated@@205)) true) (and (<= ($generated@@28 1) $generated@@211) true)) (and (and (and (<= ($generated@@28 1) $generated@@212) true) (= 6 $generated@@26)) (and (and (< $generated@@201 $generated@@196) (= $generated@@213 ($generated@@139 $generated@@214 $generated@@205 $generated@@0 false))) (and ($generated@@98 $generated@@215) ($generated@@206 $generated@@215))))) (and (and (and (and ($generated@@41 $generated@@201 $generated@@196) ($generated@@41 $generated@@196 $generated@@201)) (= ($generated@@40 $generated@@216 $generated@@201 $generated@@196) ($generated@@40 $generated@@216 $generated@@196 $generated@@201))) (and (= $generated@@205 $generated@@215) ($generated@@19 $generated@@5 ($generated@@9 $generated@@201) $generated@@20 $generated@@215))) (and (and (and ($generated@@19 $generated@@5 ($generated@@9 $generated@@196) $generated@@20 $generated@@215) ($generated@@41 $generated@@201 $generated@@196)) (and ($generated@@41 $generated@@201 $generated@@196) (= $generated@@195 ($generated@@40 $generated@@216 $generated@@201 $generated@@196)))) (and (and ($generated@@98 $generated@@217) ($generated@@206 $generated@@217)) (and (= $generated@@215 $generated@@217) $generated@@216))))) (and (=> (= (ControlFlow 0 8) 6) $generated@@225) (=> (= (ControlFlow 0 8) 7) $generated@@224)))))))
$generated@@226))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
