(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@57 () Int)
(declare-fun $generated@@58 (T@U T@U Int) Int)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@U Int) Bool)
(declare-fun $generated@@61 (T@U T@U) T@U)
(declare-fun $generated@@62 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 (T@T T@T) T@T)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@179 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@181 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@213 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ) (!  (not ($generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27))
)))
(assert (= ($generated@@8 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33 $generated@@34)) (forall (($generated@@37 T@U) ) (!  (=> ($generated@@31 $generated@@37 $generated@@35) ($generated@@31 $generated@@37 $generated@@33))
 :pattern ( ($generated@@31 $generated@@37 $generated@@35))
 :pattern ( ($generated@@31 $generated@@37 $generated@@33))
))) (forall (($generated@@38 T@U) ) (!  (=> ($generated@@31 $generated@@38 $generated@@34) ($generated@@31 $generated@@38 $generated@@36))
 :pattern ( ($generated@@31 $generated@@38 $generated@@34))
 :pattern ( ($generated@@31 $generated@@38 $generated@@36))
))) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@35 $generated@@36)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33 $generated@@34)) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@35 $generated@@36)))
)))
(assert (forall (($generated@@40 Int) ) (! (= ($generated@@39 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@46 $generated@@50) (and ($generated@@31 $generated@@52 $generated@@48) ($generated@@28 $generated@@29 $generated@@51 ($generated@@30 $generated@@48 $generated@@49)))) (= ($generated@@47 ($generated@@44 $generated@@48 $generated@@49 $generated@@45 $generated@@51 $generated@@52) $generated@@26) ($generated@@47 ($generated@@44 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52) $generated@@26)))
 :pattern ( ($generated@@44 $generated@@48 $generated@@49 $generated@@45 $generated@@51 $generated@@52) ($generated@@46 $generated@@50))
 :pattern ( ($generated@@44 $generated@@48 $generated@@49 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert  (=> (<= 0 $generated@@57) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 Int) ) (!  (=> (or ($generated@@60 ($generated@@41 $generated@@29 $generated@@65) ($generated@@39 $generated@@66)) (and (< 0 $generated@@57) (and ($generated@@46 $generated@@64) ($generated@@28 $generated@@29 $generated@@65 ($generated@@61 $generated $generated))))) (and (=> (< ($generated@@39 0) ($generated@@39 $generated@@66)) ($generated@@60 ($generated@@41 $generated@@29 $generated@@65) ($generated@@39 (- $generated@@66 1)))) (= ($generated@@58 ($generated@@59 $generated@@63) ($generated@@41 $generated@@29 $generated@@65) ($generated@@39 $generated@@66)) (ite (<= ($generated@@39 $generated@@66) ($generated@@39 0)) ($generated@@15 ($generated@@53 $generated@@10 ($generated@@62 $generated $generated $generated@@64 ($generated@@41 $generated@@29 $generated@@65) ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 1)))))) ($generated@@15 ($generated@@53 $generated@@10 ($generated@@62 $generated $generated $generated@@64 ($generated@@41 $generated@@29 $generated@@65) ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 ($generated@@58 ($generated@@59 $generated@@63) ($generated@@41 $generated@@29 $generated@@65) ($generated@@39 (- $generated@@66 1)))))))))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@59 $generated@@63) ($generated@@41 $generated@@29 $generated@@65) ($generated@@39 $generated@@66)) ($generated@@46 $generated@@64))
))))
(assert ($generated@@46 $generated@@45))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@67 ($generated@@54 $generated@@72 $generated@@69) $generated@@70 $generated@@71) ($generated@@68 $generated@@72 $generated@@69 $generated@@70 $generated@@71))
 :pattern ( ($generated@@67 ($generated@@54 $generated@@72 $generated@@69) $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@68 $generated@@29 $generated@@76 ($generated@@73 $generated@@74 $generated@@75) $generated@@77) ($generated@@68 $generated@@29 $generated@@76 ($generated@@30 $generated@@74 $generated@@75) $generated@@77))
 :pattern ( ($generated@@68 $generated@@29 $generated@@76 ($generated@@73 $generated@@74 $generated@@75) $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@68 $generated@@29 $generated@@80 ($generated@@61 $generated@@78 $generated@@79) $generated@@81) ($generated@@68 $generated@@29 $generated@@80 ($generated@@73 $generated@@78 $generated@@79) $generated@@81))
 :pattern ( ($generated@@68 $generated@@29 $generated@@80 ($generated@@61 $generated@@78 $generated@@79) $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (! (= ($generated@@58 ($generated@@59 $generated@@82) $generated@@83 $generated@@84) ($generated@@58 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and ($generated@@46 $generated@@89) ($generated@@68 $generated@@29 $generated@@86 ($generated@@30 $generated@@87 $generated@@88) $generated@@89)) (forall (($generated@@90 T@U) ) (!  (=> (and ($generated@@67 $generated@@90 $generated@@87 $generated@@89) ($generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86 $generated@@90)) ($generated@@67 ($generated@@62 $generated@@87 $generated@@88 $generated@@89 $generated@@86 $generated@@90) $generated@@88 $generated@@89))
 :pattern ( ($generated@@62 $generated@@87 $generated@@88 $generated@@89 $generated@@86 $generated@@90))
)))
 :pattern ( ($generated@@68 $generated@@29 $generated@@86 ($generated@@30 $generated@@87 $generated@@88) $generated@@89))
)))
(assert  (=> (<= 0 $generated@@57) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ) (!  (=> (or ($generated@@60 $generated@@93 ($generated@@39 $generated@@94)) (and (< 0 $generated@@57) (and ($generated@@46 $generated@@92) ($generated@@28 $generated@@29 $generated@@93 ($generated@@61 $generated $generated))))) (and (=> (< ($generated@@39 0) ($generated@@39 $generated@@94)) ($generated@@60 $generated@@93 ($generated@@39 (- $generated@@94 1)))) (= ($generated@@58 ($generated@@59 $generated@@91) $generated@@93 ($generated@@39 $generated@@94)) (ite (<= ($generated@@39 $generated@@94) ($generated@@39 0)) ($generated@@15 ($generated@@53 $generated@@10 ($generated@@62 $generated $generated $generated@@92 $generated@@93 ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 1)))))) ($generated@@15 ($generated@@53 $generated@@10 ($generated@@62 $generated $generated $generated@@92 $generated@@93 ($generated@@54 $generated@@10 ($generated@@14 ($generated@@58 ($generated@@59 $generated@@91) $generated@@93 ($generated@@39 (- $generated@@94 1))))))))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@59 $generated@@91) $generated@@93 ($generated@@39 $generated@@94)) ($generated@@46 $generated@@92))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@47 $generated@@95 $generated@@96) (= $generated@@95 $generated@@96))
 :pattern ( ($generated@@47 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@97 ($generated@@30 $generated@@98 $generated@@99)) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@100) ($generated@@31 $generated@@101 $generated@@98)) ($generated@@85 $generated@@98 $generated@@99 $generated@@100 $generated@@97 $generated@@101)) ($generated@@31 ($generated@@62 $generated@@98 $generated@@99 $generated@@100 $generated@@97 $generated@@101) $generated@@99))
 :pattern ( ($generated@@62 $generated@@98 $generated@@99 $generated@@100 $generated@@97 $generated@@101))
)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@97 ($generated@@30 $generated@@98 $generated@@99)))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@31 $generated@@102 $generated) (and (= ($generated@@54 $generated@@10 ($generated@@53 $generated@@10 $generated@@102)) $generated@@102) ($generated@@28 $generated@@10 ($generated@@53 $generated@@10 $generated@@102) $generated)))
 :pattern ( ($generated@@31 $generated@@102 $generated))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@31 ($generated@@54 $generated@@105 $generated@@103) $generated@@104) ($generated@@28 $generated@@105 $generated@@103 $generated@@104))
 :pattern ( ($generated@@31 ($generated@@54 $generated@@105 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 ($generated@@30 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@30 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@30 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@30 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@73 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@73 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@73 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@73 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@61 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@61 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@121 ($generated@@61 $generated@@122 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@61 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@53 $generated@@125 ($generated@@54 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@54 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@128 ($generated@@61 $generated@@126 $generated@@127))  (and ($generated@@28 $generated@@29 $generated@@128 ($generated@@73 $generated@@126 $generated@@127)) (forall (($generated@@129 T@U) )  (=> ($generated@@31 $generated@@129 $generated@@126) ($generated@@85 $generated@@126 $generated@@127 $generated@@45 $generated@@128 $generated@@129)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@128 ($generated@@61 $generated@@126 $generated@@127)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@132 ($generated@@73 $generated@@130 $generated@@131))  (and ($generated@@28 $generated@@29 $generated@@132 ($generated@@30 $generated@@130 $generated@@131)) (forall (($generated@@133 T@U) )  (=> ($generated@@31 $generated@@133 $generated@@130) ($generated@@47 ($generated@@44 $generated@@130 $generated@@131 $generated@@45 $generated@@132 $generated@@133) $generated@@26)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@132 ($generated@@73 $generated@@130 $generated@@131)))
)))
(assert  (=> (<= 0 $generated@@57) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 Int) ) (!  (=> (or ($generated@@60 $generated@@136 $generated@@137) (and (< 0 $generated@@57) (and ($generated@@46 $generated@@135) ($generated@@28 $generated@@29 $generated@@136 ($generated@@61 $generated $generated))))) (and (=> (< ($generated@@39 0) $generated@@137) ($generated@@60 $generated@@136 (- $generated@@137 1))) (= ($generated@@58 ($generated@@59 $generated@@134) $generated@@136 $generated@@137) (ite (<= $generated@@137 ($generated@@39 0)) ($generated@@15 ($generated@@53 $generated@@10 ($generated@@62 $generated $generated $generated@@135 $generated@@136 ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 1)))))) ($generated@@15 ($generated@@53 $generated@@10 ($generated@@62 $generated $generated $generated@@135 $generated@@136 ($generated@@54 $generated@@10 ($generated@@14 ($generated@@58 $generated@@134 $generated@@136 (- $generated@@137 1)))))))))))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@134) $generated@@136 $generated@@137) ($generated@@46 $generated@@135))
))))
(assert  (and (and (and (and (and (and (and (= ($generated@@8 $generated@@138) 4) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@140 $generated@@147 $generated@@148 ($generated@@144 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@151) $generated@@149)
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@156 $generated@@157) (= ($generated@@140 $generated@@152 $generated@@153 ($generated@@144 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@140 $generated@@152 $generated@@153 $generated@@155 $generated@@157)))
 :weight 0
))) (= ($generated@@8 $generated@@141) 5)) (= ($generated@@8 $generated@@142) 6)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (= ($generated@@8 ($generated@@143 $generated@@158 $generated@@159)) 7))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@145 ($generated@@143 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@143 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@146 ($generated@@143 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@143 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@46 $generated@@167) (= ($generated@@68 $generated@@29 $generated@@164 ($generated@@30 $generated@@165 $generated@@166) $generated@@167) (forall (($generated@@168 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@168 $generated@@165) ($generated@@67 $generated@@168 $generated@@165 $generated@@167)) ($generated@@85 $generated@@165 $generated@@166 $generated@@167 $generated@@164 $generated@@168)) (forall (($generated@@169 T@U) ) (!  (=> (and (or (not (= $generated@@169 $generated@@139)) (not true)) ($generated@@25 ($generated@@44 $generated@@165 $generated@@166 $generated@@167 $generated@@164 $generated@@168) ($generated@@54 $generated@@138 $generated@@169))) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@140 $generated@@141 $generated@@142 ($generated@@140 $generated@@138 ($generated@@143 $generated@@141 $generated@@142) $generated@@167 $generated@@169) $generated@@1))))
 :pattern ( ($generated@@25 ($generated@@44 $generated@@165 $generated@@166 $generated@@167 $generated@@164 $generated@@168) ($generated@@54 $generated@@138 $generated@@169)))
)))
 :pattern ( ($generated@@62 $generated@@165 $generated@@166 $generated@@167 $generated@@164 $generated@@168))
 :pattern ( ($generated@@44 $generated@@165 $generated@@166 $generated@@167 $generated@@164 $generated@@168))
))))
 :pattern ( ($generated@@68 $generated@@29 $generated@@164 ($generated@@30 $generated@@165 $generated@@166) $generated@@167))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@31 $generated@@172 ($generated@@30 $generated@@170 $generated@@171)) (and (= ($generated@@54 $generated@@29 ($generated@@53 $generated@@29 $generated@@172)) $generated@@172) ($generated@@28 $generated@@29 ($generated@@53 $generated@@29 $generated@@172) ($generated@@30 $generated@@170 $generated@@171))))
 :pattern ( ($generated@@31 $generated@@172 ($generated@@30 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@31 $generated@@175 ($generated@@73 $generated@@173 $generated@@174)) (and (= ($generated@@54 $generated@@29 ($generated@@53 $generated@@29 $generated@@175)) $generated@@175) ($generated@@28 $generated@@29 ($generated@@53 $generated@@29 $generated@@175) ($generated@@73 $generated@@173 $generated@@174))))
 :pattern ( ($generated@@31 $generated@@175 ($generated@@73 $generated@@173 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@31 $generated@@178 ($generated@@61 $generated@@176 $generated@@177)) (and (= ($generated@@54 $generated@@29 ($generated@@53 $generated@@29 $generated@@178)) $generated@@178) ($generated@@28 $generated@@29 ($generated@@53 $generated@@29 $generated@@178) ($generated@@61 $generated@@176 $generated@@177))))
 :pattern ( ($generated@@31 $generated@@178 ($generated@@61 $generated@@176 $generated@@177)))
)))
(assert  (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@179 $generated@@182 $generated@@183 $generated@@184 ($generated@@181 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@187 $generated@@188) $generated@@185)
 :weight 0
)) (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@179 $generated@@189 $generated@@190 $generated@@191 ($generated@@181 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@179 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@T) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (or (= $generated@@204 $generated@@206) (= ($generated@@179 $generated@@198 $generated@@199 $generated@@200 ($generated@@181 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@203 $generated@@204 $generated@@201) $generated@@205 $generated@@206) ($generated@@179 $generated@@198 $generated@@199 $generated@@200 $generated@@202 $generated@@205 $generated@@206)))
 :weight 0
)))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@13 ($generated@@179 $generated@@138 $generated@@141 $generated@@9 ($generated@@180 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (or (not (= $generated@@211 $generated@@207)) (not true)) ($generated@@13 ($generated@@53 $generated@@9 ($generated@@140 $generated@@141 $generated@@142 ($generated@@140 $generated@@138 ($generated@@143 $generated@@141 $generated@@142) $generated@@208 $generated@@211) $generated@@209)))) $generated@@210))
 :pattern ( ($generated@@179 $generated@@138 $generated@@141 $generated@@9 ($generated@@180 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (and (= ($generated@@24 ($generated@@30 $generated@@214 $generated@@215)) $generated@@2) (= ($generated@@213 ($generated@@30 $generated@@214 $generated@@215)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (and (= ($generated@@24 ($generated@@73 $generated@@216 $generated@@217)) $generated@@3) (= ($generated@@213 ($generated@@73 $generated@@216 $generated@@217)) $generated@@6))
 :pattern ( ($generated@@73 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (and (= ($generated@@24 ($generated@@61 $generated@@218 $generated@@219)) $generated@@4) (= ($generated@@213 ($generated@@61 $generated@@218 $generated@@219)) $generated@@7))
 :pattern ( ($generated@@61 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and (and ($generated@@46 $generated@@222) (and ($generated@@31 $generated@@224 $generated@@220) ($generated@@28 $generated@@29 $generated@@223 ($generated@@30 $generated@@220 $generated@@221)))) ($generated@@47 ($generated@@44 $generated@@220 $generated@@221 $generated@@45 $generated@@223 $generated@@224) $generated@@26)) (= ($generated@@85 $generated@@220 $generated@@221 $generated@@45 $generated@@223 $generated@@224) ($generated@@85 $generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224)))
 :pattern ( ($generated@@85 $generated@@220 $generated@@221 $generated@@45 $generated@@223 $generated@@224) ($generated@@46 $generated@@222))
 :pattern ( ($generated@@85 $generated@@220 $generated@@221 $generated@@222 $generated@@223 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@47 $generated@@225 $generated@@226) (forall (($generated@@227 T@U) ) (! (= ($generated@@25 $generated@@225 $generated@@227) ($generated@@25 $generated@@226 $generated@@227))
 :pattern ( ($generated@@25 $generated@@225 $generated@@227))
 :pattern ( ($generated@@25 $generated@@226 $generated@@227))
)))
 :pattern ( ($generated@@47 $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@228 Int) ) (! (= ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 $generated@@228))) ($generated@@41 $generated@@142 ($generated@@54 $generated@@10 ($generated@@14 $generated@@228))))
 :pattern ( ($generated@@54 $generated@@10 ($generated@@14 ($generated@@39 $generated@@228))))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (= ($generated@@54 $generated@@230 ($generated@@41 $generated@@230 $generated@@229)) ($generated@@41 $generated@@142 ($generated@@54 $generated@@230 $generated@@229)))
 :pattern ( ($generated@@54 $generated@@230 ($generated@@41 $generated@@230 $generated@@229)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! ($generated@@68 $generated@@10 $generated@@232 $generated $generated@@231)
 :pattern ( ($generated@@68 $generated@@10 $generated@@232 $generated $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ) (! ($generated@@28 $generated@@10 $generated@@233 $generated)
 :pattern ( ($generated@@28 $generated@@10 $generated@@233 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@240  (=> (and (and (< ($generated@@39 0) $generated@@234) ($generated@@68 $generated@@29 $generated@@235 ($generated@@61 $generated $generated) $generated@@236)) (and (= $generated@@237 (- $generated@@234 1)) ($generated@@68 $generated@@10 ($generated@@14 $generated@@237) $generated $generated@@236))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@234) (= $generated@@237 $generated@@234))) (=> (or (<= 0 $generated@@234) (= $generated@@237 $generated@@234)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@237 $generated@@234)))))))
(let (($generated@@241 true))
(let (($generated@@242 true))
(let (($generated@@243  (=> (= $generated@@238 ($generated@@180 $generated@@139 $generated@@236 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@242) (=> (= (ControlFlow 0 6) 2) $generated@@241)) (=> (= (ControlFlow 0 6) 4) $generated@@240)))))
(let (($generated@@244  (=> (and (and (and ($generated@@46 $generated@@236) ($generated@@239 $generated@@236)) ($generated@@28 $generated@@29 $generated@@235 ($generated@@61 $generated $generated))) (and (= 0 $generated@@57) (= (ControlFlow 0 7) 6))) $generated@@243)))
$generated@@244))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
