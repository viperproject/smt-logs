(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U Int) T@U)
(declare-fun $generated@@33 (Int) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@41 (Int) T@U)
(declare-fun $generated@@42 (Int) Bool)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (Int) Int)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@63 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@65 (T@U T@U T@U) Bool)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@102 () T@U)
(declare-fun $generated@@107 (T@U) Int)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@177 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ) (!  (=> ($generated@@22 $generated@@24) ($generated@@23 $generated@@24))
 :pattern ( ($generated@@22 $generated@@24))
)))
(assert (= ($generated@@5 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)) ($generated@@23 $generated@@30))
 :pattern ( ($generated@@23 $generated@@30) ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@34 T@U) ($generated@@35 Int) ) (!  (=> (or ($generated@@33 $generated@@35) (< 0 $generated@@31)) ($generated@@25 $generated@@26 ($generated@@32 $generated@@34 $generated@@35) ($generated@@27 $generated $generated)))
 :pattern ( ($generated@@32 $generated@@34 $generated@@35))
))))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@36 $generated@@39 $generated@@40)  (and (= ($generated@@37 $generated@@39) ($generated@@37 $generated@@40)) (= ($generated@@38 $generated@@39) ($generated@@38 $generated@@40))))
 :pattern ( ($generated@@36 $generated@@39 $generated@@40))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@43 Int) ) (!  (=> (or ($generated@@42 $generated@@43) (< 1 $generated@@31)) ($generated@@25 $generated@@26 ($generated@@41 $generated@@43) ($generated@@27 $generated $generated)))
 :pattern ( ($generated@@41 $generated@@43))
))))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@44 $generated@@48 $generated@@49) ($generated@@27 $generated@@46 $generated@@47))  (and ($generated@@45 $generated@@48 $generated@@46) ($generated@@45 $generated@@49 $generated@@47)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@44 $generated@@48 $generated@@49) ($generated@@27 $generated@@46 $generated@@47)))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@54 T@U) ($generated@@55 Int) ) (!  (=> (or ($generated@@33 $generated@@55) (< 0 $generated@@31)) (= ($generated@@32 ($generated@@50 $generated@@54) $generated@@55) ($generated@@51 $generated@@26 ($generated@@44 ($generated@@52 $generated@@7 ($generated@@11 ($generated@@53 5))) ($generated@@52 $generated@@7 ($generated@@11 ($generated@@53 7)))))))
 :pattern ( ($generated@@32 ($generated@@50 $generated@@54) $generated@@55))
))))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@57 Int) ) (!  (=> (or ($generated@@42 ($generated@@53 $generated@@57)) (< 1 $generated@@31)) (and ($generated@@33 ($generated@@53 $generated@@57)) (= ($generated@@41 ($generated@@53 $generated@@57)) ($generated@@51 $generated@@26 ($generated@@32 $generated@@56 ($generated@@53 $generated@@57))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@53 $generated@@57)))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@36 $generated@@58 $generated@@59) (= $generated@@58 $generated@@59))
 :pattern ( ($generated@@36 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@53 $generated@@60) $generated@@60)
 :pattern ( ($generated@@53 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@51 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@51 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@64 $generated@@70) (= ($generated@@63 $generated@@26 ($generated@@44 $generated@@68 $generated@@69) ($generated@@27 $generated@@66 $generated@@67) $generated@@70)  (and ($generated@@65 $generated@@68 $generated@@66 $generated@@70) ($generated@@65 $generated@@69 $generated@@67 $generated@@70))))
 :pattern ( ($generated@@63 $generated@@26 ($generated@@44 $generated@@68 $generated@@69) ($generated@@27 $generated@@66 $generated@@67) $generated@@70))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@71 T@U) ($generated@@72 Int) ) (!  (=> (or ($generated@@33 ($generated@@53 $generated@@72)) (< 0 $generated@@31)) (= ($generated@@32 ($generated@@50 $generated@@71) ($generated@@53 $generated@@72)) ($generated@@51 $generated@@26 ($generated@@44 ($generated@@52 $generated@@7 ($generated@@11 ($generated@@53 5))) ($generated@@52 $generated@@7 ($generated@@11 ($generated@@53 7)))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@50 $generated@@71) ($generated@@53 $generated@@72)))
))))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@23 $generated@@74) (= ($generated@@73 $generated@@74) $generated@@2))
 :pattern ( ($generated@@23 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@52 $generated@@77 ($generated@@75 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@23 $generated@@78) (exists (($generated@@79 T@U) ($generated@@80 T@U) ) (= $generated@@78 ($generated@@44 $generated@@79 $generated@@80))))
 :pattern ( ($generated@@23 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@65 ($generated@@52 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@63 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@65 ($generated@@52 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@45 $generated@@85 $generated) (and (= ($generated@@52 $generated@@7 ($generated@@75 $generated@@7 $generated@@85)) $generated@@85) ($generated@@25 $generated@@7 ($generated@@75 $generated@@7 $generated@@85) $generated)))
 :pattern ( ($generated@@45 $generated@@85 $generated))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@45 ($generated@@52 $generated@@88 $generated@@86) $generated@@87) ($generated@@25 $generated@@88 $generated@@86 $generated@@87))
 :pattern ( ($generated@@45 ($generated@@52 $generated@@88 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@73 ($generated@@44 $generated@@89 $generated@@90)) $generated@@2)
 :pattern ( ($generated@@44 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 ($generated@@27 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@27 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@94 ($generated@@27 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@27 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@37 ($generated@@44 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@44 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@38 ($generated@@44 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@44 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 Int) ) (! (= ($generated@@32 $generated@@103 $generated@@104) ($generated@@32 $generated@@102 $generated@@104))
 :pattern ( ($generated@@32 ($generated@@101 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@75 $generated@@106 ($generated@@52 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@52 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (< ($generated@@107 $generated@@109) ($generated@@108 ($generated@@44 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@44 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (< ($generated@@107 $generated@@112) ($generated@@108 ($generated@@44 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@44 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 Int) ) (! (= ($generated@@32 ($generated@@50 $generated@@113) $generated@@114) ($generated@@32 $generated@@113 $generated@@114))
 :pattern ( ($generated@@32 ($generated@@50 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@45 $generated@@117 ($generated@@27 $generated@@115 $generated@@116)) (and (= ($generated@@52 $generated@@26 ($generated@@75 $generated@@26 $generated@@117)) $generated@@117) ($generated@@25 $generated@@26 ($generated@@75 $generated@@26 $generated@@117) ($generated@@27 $generated@@115 $generated@@116))))
 :pattern ( ($generated@@45 $generated@@117 ($generated@@27 $generated@@115 $generated@@116)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@118 $generated@@129 $generated@@130 $generated@@131 ($generated@@125 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@118 $generated@@136 $generated@@137 $generated@@138 ($generated@@125 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@118 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@118 $generated@@145 $generated@@146 $generated@@147 ($generated@@125 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))) (= ($generated@@5 $generated@@119) 4)) (= ($generated@@5 $generated@@120) 5)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@122 $generated@@154 $generated@@155 ($generated@@126 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@122 $generated@@159 $generated@@160 ($generated@@126 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@122 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (= ($generated@@5 $generated@@123) 6)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@5 ($generated@@124 $generated@@165 $generated@@166)) 7))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@124 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@128 ($generated@@124 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@124 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@10 ($generated@@118 $generated@@119 $generated@@120 $generated@@6 ($generated@@121 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@10 ($generated@@75 $generated@@6 ($generated@@122 $generated@@120 $generated@@123 ($generated@@122 $generated@@119 ($generated@@124 $generated@@120 $generated@@123) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@118 $generated@@119 $generated@@120 $generated@@6 ($generated@@121 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (and (= ($generated@@21 ($generated@@27 $generated@@178 $generated@@179)) $generated@@3) (= ($generated@@177 ($generated@@27 $generated@@178 $generated@@179)) $generated@@4))
 :pattern ( ($generated@@27 $generated@@178 $generated@@179))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@180 Int) ) (!  (=> (or ($generated@@42 $generated@@180) (< 1 $generated@@31)) (and ($generated@@33 $generated@@180) (= ($generated@@41 $generated@@180) ($generated@@32 $generated@@56 $generated@@180))))
 :pattern ( ($generated@@41 $generated@@180))
))))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@107 ($generated@@52 $generated@@26 $generated@@181)) ($generated@@108 $generated@@181))
 :pattern ( ($generated@@107 ($generated@@52 $generated@@26 $generated@@181)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@64 $generated@@184) (and ($generated@@23 $generated@@182) (exists (($generated@@185 T@U) ) (! ($generated@@63 $generated@@26 $generated@@182 ($generated@@27 $generated@@183 $generated@@185) $generated@@184)
 :pattern ( ($generated@@63 $generated@@26 $generated@@182 ($generated@@27 $generated@@183 $generated@@185) $generated@@184))
)))) ($generated@@65 ($generated@@37 $generated@@182) $generated@@183 $generated@@184))
 :pattern ( ($generated@@65 ($generated@@37 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@64 $generated@@188) (and ($generated@@23 $generated@@186) (exists (($generated@@189 T@U) ) (! ($generated@@63 $generated@@26 $generated@@186 ($generated@@27 $generated@@189 $generated@@187) $generated@@188)
 :pattern ( ($generated@@63 $generated@@26 $generated@@186 ($generated@@27 $generated@@189 $generated@@187) $generated@@188))
)))) ($generated@@65 ($generated@@38 $generated@@186) $generated@@187 $generated@@188))
 :pattern ( ($generated@@65 ($generated@@38 $generated@@186) $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@44 ($generated@@51 $generated@@123 $generated@@190) ($generated@@51 $generated@@123 $generated@@191)) ($generated@@51 $generated@@26 ($generated@@44 $generated@@190 $generated@@191)))
 :pattern ( ($generated@@44 ($generated@@51 $generated@@123 $generated@@190) ($generated@@51 $generated@@123 $generated@@191)))
)))
(assert (forall (($generated@@192 Int) ) (! (= ($generated@@52 $generated@@7 ($generated@@11 ($generated@@53 $generated@@192))) ($generated@@51 $generated@@123 ($generated@@52 $generated@@7 ($generated@@11 $generated@@192))))
 :pattern ( ($generated@@52 $generated@@7 ($generated@@11 ($generated@@53 $generated@@192))))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@52 $generated@@194 ($generated@@51 $generated@@194 $generated@@193)) ($generated@@51 $generated@@123 ($generated@@52 $generated@@194 $generated@@193)))
 :pattern ( ($generated@@52 $generated@@194 ($generated@@51 $generated@@194 $generated@@193)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! ($generated@@63 $generated@@7 $generated@@196 $generated $generated@@195)
 :pattern ( ($generated@@63 $generated@@7 $generated@@196 $generated $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ) (! ($generated@@25 $generated@@7 $generated@@197 $generated)
 :pattern ( ($generated@@25 $generated@@7 $generated@@197 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@206  (=> (and (= ($generated@@101 $generated@@56) $generated@@56) (= ($generated@@101 $generated@@198) $generated@@198)) (=> (and (and (and (= $generated@@199 ($generated@@121 $generated@@200 $generated@@201 $generated@@1 false)) ($generated@@63 $generated@@7 ($generated@@11 $generated@@202) $generated $generated@@201)) (and ($generated@@33 $generated@@202) ($generated@@23 ($generated@@32 $generated@@56 $generated@@202)))) (and (and ($generated@@22 ($generated@@32 $generated@@56 $generated@@202)) ($generated@@33 $generated@@202)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@36 ($generated@@44 ($generated@@52 $generated@@7 ($generated@@11 $generated@@203)) ($generated@@52 $generated@@7 ($generated@@11 $generated@@204))) ($generated@@32 $generated@@198 $generated@@202))))))
(let (($generated@@207  (=> (and ($generated@@64 $generated@@201) ($generated@@205 $generated@@201)) (=> (and (and (= 2 $generated@@31) (= $generated@@203 ($generated@@12 ($generated@@75 $generated@@7 ($generated@@37 ($generated@@41 $generated@@202)))))) (and (= $generated@@204 ($generated@@12 ($generated@@75 $generated@@7 ($generated@@38 ($generated@@41 $generated@@202))))) (= (ControlFlow 0 3) 2))) $generated@@206))))
$generated@@207)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
