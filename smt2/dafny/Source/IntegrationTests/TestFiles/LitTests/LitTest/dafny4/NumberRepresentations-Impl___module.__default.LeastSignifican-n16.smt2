(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@25 (Int) Int)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@30 () Int)
(declare-fun $generated@@31 (T@U T@U Int) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U Int) Bool)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (Int Int) Int)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U) Int)
(declare-fun $generated@@55 (T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@95 () T@T)
(declare-fun $generated@@96 (T@T T@T) T@T)
(declare-fun $generated@@97 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@100 (T@T) T@T)
(declare-fun $generated@@149 (T@U Int Int) Bool)
(declare-fun $generated@@150 (T@U Int Int) Bool)
(declare-fun $generated@@155 (Int Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@23 T@U) ($generated@@24 Int) ) (!  (=> (= $generated@@24 0) (= ($generated@@22 $generated@@23 $generated@@24) $generated@@23))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 Int) ) (! (= ($generated@@25 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@T) ) (! (= ($generated@@27 $generated@@29 $generated@@28) $generated@@28)
 :pattern ( ($generated@@27 $generated@@29 $generated@@28))
)))
(assert (= ($generated@@3 $generated@@33) 3))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@34 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@41 ($generated@@36 $generated)) (<= ($generated@@25 2) ($generated@@25 $generated@@42))))) (and (=> (or (not (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@41)) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 1))) ($generated@@25 $generated@@42))) (= ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)) (ite (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@41)) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 0)))) ($generated@@39 ($generated@@25 $generated@@42) ($generated@@25 ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 1))) ($generated@@25 $generated@@42)))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@32 $generated@@40) ($generated@@27 $generated@@33 $generated@@41) ($generated@@25 $generated@@42)))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 Int) ) (!  (=> (and (<= 0 $generated@@44) (<= $generated@@44 ($generated@@20 $generated@@43))) (= ($generated@@20 ($generated@@22 $generated@@43 $generated@@44)) (- ($generated@@20 $generated@@43) $generated@@44)))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@43 $generated@@44)))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@47)  (and (= ($generated@@20 $generated@@46) ($generated@@20 $generated@@47)) (forall (($generated@@48 Int) ) (!  (=> (and (<= 0 $generated@@48) (< $generated@@48 ($generated@@20 $generated@@46))) (= ($generated@@38 $generated@@46 $generated@@48) ($generated@@38 $generated@@47 $generated@@48)))
 :pattern ( ($generated@@38 $generated@@46 $generated@@48))
 :pattern ( ($generated@@38 $generated@@47 $generated@@48))
))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@37 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@37 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 Int) ) (!  (=> (and (< 0 $generated@@54) (<= $generated@@54 ($generated@@20 $generated@@53))) (< ($generated@@52 ($generated@@22 $generated@@53 $generated@@54)) ($generated@@52 $generated@@53)))
 :pattern ( ($generated@@52 ($generated@@22 $generated@@53 $generated@@54)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@55 ($generated@@49 $generated@@60 $generated@@57) $generated@@58 $generated@@59) ($generated@@56 $generated@@60 $generated@@57 $generated@@58 $generated@@59))
 :pattern ( ($generated@@55 ($generated@@49 $generated@@60 $generated@@57) $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 Int) ($generated@@63 Int) ) (!  (=> (and (and (<= 0 $generated@@62) (<= 0 $generated@@63)) (< $generated@@63 (- ($generated@@20 $generated@@61) $generated@@62))) (= ($generated@@38 ($generated@@22 $generated@@61 $generated@@62) $generated@@63) ($generated@@38 $generated@@61 (+ $generated@@63 $generated@@62))))
 :weight 25
 :pattern ( ($generated@@38 ($generated@@22 $generated@@61 $generated@@62) $generated@@63))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 Int) ) (! (= ($generated@@31 ($generated@@32 $generated@@64) $generated@@65 $generated@@66) ($generated@@31 $generated@@64 $generated@@65 $generated@@66))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@64) $generated@@65 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@45 $generated@@67 $generated@@68) (= $generated@@67 $generated@@68))
 :pattern ( ($generated@@45 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated) (and (= ($generated@@49 $generated@@5 ($generated@@37 $generated@@5 $generated@@70)) $generated@@70) ($generated@@35 $generated@@5 ($generated@@37 $generated@@5 $generated@@70) $generated)))
 :pattern ( ($generated@@69 $generated@@70 $generated))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@49 $generated@@73 $generated@@71) $generated@@72) ($generated@@35 $generated@@73 $generated@@71 $generated@@72))
 :pattern ( ($generated@@69 ($generated@@49 $generated@@73 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (<= 0 ($generated@@20 $generated@@74))
 :pattern ( ($generated@@20 $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@56 $generated@@33 $generated@@75 ($generated@@36 $generated@@76) $generated@@77) (forall (($generated@@78 Int) ) (!  (=> (and (<= 0 $generated@@78) (< $generated@@78 ($generated@@20 $generated@@75))) ($generated@@55 ($generated@@38 $generated@@75 $generated@@78) $generated@@76 $generated@@77))
 :pattern ( ($generated@@38 $generated@@75 $generated@@78))
)))
 :pattern ( ($generated@@56 $generated@@33 $generated@@75 ($generated@@36 $generated@@76) $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 ($generated@@36 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@36 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@19 ($generated@@36 $generated@@81)) $generated@@1)
 :pattern ( ($generated@@36 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@37 $generated@@83 ($generated@@49 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@49 $generated@@83 $generated@@82))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 Int) ) (!  (=> (or ($generated@@34 $generated@@85 $generated@@86) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@85 ($generated@@36 $generated)) (<= ($generated@@25 2) $generated@@86)))) (and (=> (or (not (= ($generated@@20 $generated@@85) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@22 $generated@@85 ($generated@@25 1)) $generated@@86)) (= ($generated@@31 ($generated@@32 $generated@@84) $generated@@85 $generated@@86) (ite (= ($generated@@20 $generated@@85) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@85 ($generated@@25 0)))) ($generated@@39 $generated@@86 ($generated@@31 $generated@@84 ($generated@@22 $generated@@85 ($generated@@25 1)) $generated@@86)))))))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@84) $generated@@85 $generated@@86))
))))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (or ($generated@@34 ($generated@@27 $generated@@33 $generated@@88) $generated@@89) (and (< 0 $generated@@30) (and ($generated@@35 $generated@@33 $generated@@88 ($generated@@36 $generated)) (<= ($generated@@25 2) $generated@@89)))) (and (=> (or (not (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@88)) ($generated@@25 0))) (not true)) ($generated@@34 ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@88) ($generated@@25 1))) $generated@@89)) (= ($generated@@31 ($generated@@32 $generated@@87) ($generated@@27 $generated@@33 $generated@@88) $generated@@89) (ite (= ($generated@@20 ($generated@@27 $generated@@33 $generated@@88)) ($generated@@25 0)) 0 (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@88) ($generated@@25 0)))) ($generated@@39 $generated@@89 ($generated@@31 ($generated@@32 $generated@@87) ($generated@@27 $generated@@33 ($generated@@22 ($generated@@27 $generated@@33 $generated@@88) ($generated@@25 1))) $generated@@89)))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@32 $generated@@87) ($generated@@27 $generated@@33 $generated@@88) $generated@@89))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@90 $generated@@101 $generated@@102 $generated@@103 ($generated@@97 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@106 $generated@@107) $generated@@104)
 :weight 0
)) (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (or (= $generated@@113 $generated@@115) (= ($generated@@90 $generated@@108 $generated@@109 $generated@@110 ($generated@@97 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@115 $generated@@116) ($generated@@90 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@115 $generated@@116)))
 :weight 0
)) (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@90 $generated@@117 $generated@@118 $generated@@119 ($generated@@97 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@90 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)))) (= ($generated@@3 $generated@@91) 4)) (= ($generated@@3 $generated@@92) 5)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@94 $generated@@126 $generated@@127 ($generated@@98 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@130) $generated@@128)
 :weight 0
))) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@135 $generated@@136) (= ($generated@@94 $generated@@131 $generated@@132 ($generated@@98 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@133) $generated@@136) ($generated@@94 $generated@@131 $generated@@132 $generated@@134 $generated@@136)))
 :weight 0
))) (= ($generated@@3 $generated@@95) 6)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ) (= ($generated@@3 ($generated@@96 $generated@@137 $generated@@138)) 7))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ) (! (= ($generated@@99 ($generated@@96 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@96 $generated@@139 $generated@@140))
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ) (! (= ($generated@@100 ($generated@@96 $generated@@141 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@96 $generated@@141 $generated@@142))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 Bool) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@8 ($generated@@90 $generated@@91 $generated@@92 $generated@@4 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))  (=> (and (or (not (= $generated@@147 $generated@@143)) (not true)) ($generated@@8 ($generated@@37 $generated@@4 ($generated@@94 $generated@@92 $generated@@95 ($generated@@94 $generated@@91 ($generated@@96 $generated@@92 $generated@@95) $generated@@144 $generated@@147) $generated@@145)))) $generated@@146))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92 $generated@@4 ($generated@@93 $generated@@143 $generated@@144 $generated@@145 $generated@@146) $generated@@147 $generated@@148))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@151 T@U) ($generated@@152 Int) ($generated@@153 Int) ) (!  (=> (or ($generated@@150 $generated@@151 $generated@@152 $generated@@153) (and (< 0 $generated@@30) ($generated@@35 $generated@@33 $generated@@151 ($generated@@36 $generated)))) (= ($generated@@149 $generated@@151 $generated@@152 $generated@@153)  (and (and (<= ($generated@@25 2) $generated@@153) (and (<= $generated@@152 ($generated@@25 0)) (< 0 (+ $generated@@152 $generated@@153)))) (forall (($generated@@154 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@154) (< $generated@@154 ($generated@@20 $generated@@151))) (<= $generated@@152 ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@151 $generated@@154))))) (=> (and (<= ($generated@@25 0) $generated@@154) (< $generated@@154 ($generated@@20 $generated@@151))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@151 $generated@@154))) (+ $generated@@152 $generated@@153))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@151 $generated@@154)))
)))))
 :pattern ( ($generated@@149 $generated@@151 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@156 Int) ($generated@@157 Int) ) (! (= ($generated@@155 $generated@@156 $generated@@157) (mod $generated@@156 $generated@@157))
 :pattern ( ($generated@@155 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 Int) ($generated@@159 Int) ) (! (= ($generated@@39 $generated@@158 $generated@@159) (* $generated@@158 $generated@@159))
 :pattern ( ($generated@@39 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@69 $generated@@160 ($generated@@36 $generated@@161)) (and (= ($generated@@49 $generated@@33 ($generated@@37 $generated@@33 $generated@@160)) $generated@@160) ($generated@@35 $generated@@33 ($generated@@37 $generated@@33 $generated@@160) ($generated@@36 $generated@@161))))
 :pattern ( ($generated@@69 $generated@@160 ($generated@@36 $generated@@161)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 Int) ($generated@@164 Int) ) (!  (=> (and (and (<= 0 $generated@@163) (<= $generated@@163 $generated@@164)) (< $generated@@164 ($generated@@20 $generated@@162))) (= ($generated@@38 ($generated@@22 $generated@@162 $generated@@163) (- $generated@@164 $generated@@163)) ($generated@@38 $generated@@162 $generated@@164)))
 :weight 25
 :pattern ( ($generated@@38 $generated@@162 $generated@@164) ($generated@@22 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 Int) ($generated@@167 Int) ) (!  (=> (and (and (<= 0 $generated@@166) (<= 0 $generated@@167)) (<= (+ $generated@@166 $generated@@167) ($generated@@20 $generated@@165))) (= ($generated@@22 ($generated@@22 $generated@@165 $generated@@166) $generated@@167) ($generated@@22 $generated@@165 (+ $generated@@166 $generated@@167))))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@165 $generated@@166) $generated@@167))
)))
(assert  (=> (<= 0 $generated@@30) (forall (($generated@@168 T@U) ($generated@@169 Int) ($generated@@170 Int) ) (!  (=> (or ($generated@@150 ($generated@@27 $generated@@33 $generated@@168) ($generated@@25 $generated@@169) ($generated@@25 $generated@@170)) (and (< 0 $generated@@30) ($generated@@35 $generated@@33 $generated@@168 ($generated@@36 $generated)))) (= ($generated@@149 ($generated@@27 $generated@@33 $generated@@168) ($generated@@25 $generated@@169) ($generated@@25 $generated@@170))  (and (and (<= ($generated@@25 2) ($generated@@25 $generated@@170)) (and (<= ($generated@@25 $generated@@169) ($generated@@25 0)) (< 0 (+ $generated@@169 $generated@@170)))) (forall (($generated@@171 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@171) (< $generated@@171 ($generated@@20 ($generated@@27 $generated@@33 $generated@@168)))) (<= ($generated@@25 $generated@@169) ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@168) $generated@@171))))) (=> (and (<= ($generated@@25 0) $generated@@171) (< $generated@@171 ($generated@@20 ($generated@@27 $generated@@33 $generated@@168)))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 ($generated@@27 $generated@@33 $generated@@168) $generated@@171))) (+ $generated@@169 $generated@@170))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@168 $generated@@171)))
)))))
 :weight 3
 :pattern ( ($generated@@149 ($generated@@27 $generated@@33 $generated@@168) ($generated@@25 $generated@@169) ($generated@@25 $generated@@170)))
))))
(assert (forall (($generated@@172 Int) ) (! (= ($generated@@49 $generated@@5 ($generated@@9 ($generated@@25 $generated@@172))) ($generated@@27 $generated@@95 ($generated@@49 $generated@@5 ($generated@@9 $generated@@172))))
 :pattern ( ($generated@@49 $generated@@5 ($generated@@9 ($generated@@25 $generated@@172))))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@49 $generated@@174 ($generated@@27 $generated@@174 $generated@@173)) ($generated@@27 $generated@@95 ($generated@@49 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@49 $generated@@174 ($generated@@27 $generated@@174 $generated@@173)))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> (= ($generated@@20 $generated@@175) 0) (= $generated@@175 $generated@@21))
 :pattern ( ($generated@@20 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@56 $generated@@5 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@56 $generated@@5 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@35 $generated@@33 $generated@@178 ($generated@@36 $generated@@179)) (forall (($generated@@180 Int) ) (!  (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@20 $generated@@178))) ($generated@@69 ($generated@@38 $generated@@178 $generated@@180) $generated@@179))
 :pattern ( ($generated@@38 $generated@@178 $generated@@180))
)))
 :pattern ( ($generated@@35 $generated@@33 $generated@@178 ($generated@@36 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@35 $generated@@5 $generated@@181 $generated)
 :pattern ( ($generated@@35 $generated@@5 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 (T@U) Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 19) (let (($generated@@194  (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@195 ($generated@@155 ($generated@@31 ($generated@@32 ($generated@@32 $generated@@182)) $generated@@183 $generated@@184) $generated@@184)))
 (or (= ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0)))) $generated@@195) (= ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0)))) (- $generated@@195 $generated@@184)))))))
(let (($generated@@196  (=> (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0)))) ($generated@@25 0)) (and (=> (= (ControlFlow 0 10) (- 0 16)) (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (<= ($generated@@25 2) $generated@@184)))) (=> (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (<= ($generated@@25 2) $generated@@184))) (and (=> (= (ControlFlow 0 10) (- 0 15)) (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (<= $generated@@185 ($generated@@25 0))))) (=> (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (<= $generated@@185 ($generated@@25 0)))) (and (=> (= (ControlFlow 0 10) (- 0 14)) (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (< 0 (+ $generated@@185 $generated@@184))))) (=> (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (< 0 (+ $generated@@185 $generated@@184)))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (forall (($generated@@197 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@197) (< $generated@@197 ($generated@@20 $generated@@183))) (<= $generated@@185 ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@197))))) (=> (and (<= ($generated@@25 0) $generated@@197) (< $generated@@197 ($generated@@20 $generated@@183))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@197))) (+ $generated@@185 $generated@@184))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@197)))
))))) (=> (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (forall (($generated@@198 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@198) (< $generated@@198 ($generated@@20 $generated@@183))) (<= $generated@@185 ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@198))))) (=> (and (<= ($generated@@25 0) $generated@@198) (< $generated@@198 ($generated@@20 $generated@@183))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@198))) (+ $generated@@185 $generated@@184))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@198)))
)))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (not ($generated@@45 $generated@@183 $generated@@21))) (=> (not ($generated@@45 $generated@@183 $generated@@21)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0)))) 0)) (=> (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0)))) 0) (=> (and ($generated@@186 $generated@@187) ($generated@@188 $generated@@187)) (=> (and (and ($generated@@34 $generated@@183 $generated@@184) (= ($generated@@155 ($generated@@31 ($generated@@32 ($generated@@32 $generated@@182)) $generated@@183 $generated@@184) $generated@@184) (+ ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0)))) $generated@@184))) (and (= $generated@@189 $generated@@187) (= (ControlFlow 0 10) 2))) $generated@@194)))))))))))))))))
(let (($generated@@199  (=> (<= ($generated@@25 0) ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0))))) (and (=> (= (ControlFlow 0 3) (- 0 9)) (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (<= ($generated@@25 2) $generated@@184)))) (=> (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (<= ($generated@@25 2) $generated@@184))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (<= $generated@@185 ($generated@@25 0))))) (=> (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (<= $generated@@185 ($generated@@25 0)))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (< 0 (+ $generated@@185 $generated@@184))))) (=> (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (< 0 (+ $generated@@185 $generated@@184)))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (forall (($generated@@200 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@200) (< $generated@@200 ($generated@@20 $generated@@183))) (<= $generated@@185 ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@200))))) (=> (and (<= ($generated@@25 0) $generated@@200) (< $generated@@200 ($generated@@20 $generated@@183))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@200))) (+ $generated@@185 $generated@@184))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@200)))
))))) (=> (=> ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (or ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (forall (($generated@@201 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@201) (< $generated@@201 ($generated@@20 $generated@@183))) (<= $generated@@185 ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@201))))) (=> (and (<= ($generated@@25 0) $generated@@201) (< $generated@@201 ($generated@@20 $generated@@183))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@201))) (+ $generated@@185 $generated@@184))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@201)))
)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (not ($generated@@45 $generated@@183 $generated@@21))) (=> (not ($generated@@45 $generated@@183 $generated@@21)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@25 0) ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0)))))) (=> (<= ($generated@@25 0) ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0))))) (=> (and ($generated@@186 $generated@@190) ($generated@@188 $generated@@190)) (=> (and (and ($generated@@34 $generated@@183 $generated@@184) (= ($generated@@155 ($generated@@31 ($generated@@32 ($generated@@32 $generated@@182)) $generated@@183 $generated@@184) $generated@@184) ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 ($generated@@25 0)))))) (and (= $generated@@189 $generated@@190) (= (ControlFlow 0 3) 2))) $generated@@194)))))))))))))))))
(let (($generated@@202  (=> (= $generated@@191 ($generated@@93 $generated@@192 $generated@@193 $generated@@2 false)) (=> (and (and ($generated@@186 $generated@@189) ($generated@@188 $generated@@189)) (and (= $generated@@193 $generated@@189) (forall (($generated@@203 T@U) ($generated@@204 Int) ) (!  (=> (and (and ($generated@@35 $generated@@33 $generated@@203 ($generated@@36 $generated)) (and ($generated@@149 $generated@@203 $generated@@185 $generated@@204) (not ($generated@@45 $generated@@203 $generated@@21)))) (or (< ($generated@@52 $generated@@203) ($generated@@52 $generated@@183)) (and (= ($generated@@52 $generated@@203) ($generated@@52 $generated@@183)) (or (and (<= 0 $generated@@185) (< $generated@@185 $generated@@185)) (and (= $generated@@185 $generated@@185) (and (<= 0 $generated@@204) (< $generated@@204 $generated@@184))))))) (let (($generated@@205 ($generated@@155 ($generated@@31 ($generated@@32 $generated@@182) $generated@@203 $generated@@204) $generated@@204)))
 (or (= ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@203 ($generated@@25 0)))) $generated@@205) (= ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@203 ($generated@@25 0)))) (- $generated@@205 $generated@@204)))))
 :pattern ( ($generated@@31 ($generated@@32 $generated@@182) $generated@@203 $generated@@204))
 :pattern ( ($generated@@149 $generated@@203 $generated@@185 $generated@@204))
)))) (and (=> (= (ControlFlow 0 17) (- 0 18)) (and (<= 0 ($generated@@25 0)) (< ($generated@@25 0) ($generated@@20 $generated@@183)))) (=> (and (<= 0 ($generated@@25 0)) (< ($generated@@25 0) ($generated@@20 $generated@@183))) (and (=> (= (ControlFlow 0 17) 3) $generated@@199) (=> (= (ControlFlow 0 17) 10) $generated@@196))))))))
(let (($generated@@206  (=> (and ($generated@@186 $generated@@193) ($generated@@188 $generated@@193)) (=> (and (and (and ($generated@@35 $generated@@33 $generated@@183 ($generated@@36 $generated)) ($generated@@56 $generated@@33 $generated@@183 ($generated@@36 $generated) $generated@@193)) (= 3 $generated@@30)) (and (and ($generated@@150 $generated@@183 $generated@@185 $generated@@184) (and ($generated@@149 $generated@@183 $generated@@185 $generated@@184) (and (and (<= ($generated@@25 2) $generated@@184) (and (<= $generated@@185 ($generated@@25 0)) (< 0 (+ $generated@@185 $generated@@184)))) (forall (($generated@@207 Int) ) (!  (and (=> (and (<= ($generated@@25 0) $generated@@207) (< $generated@@207 ($generated@@20 $generated@@183))) (<= $generated@@185 ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@207))))) (=> (and (<= ($generated@@25 0) $generated@@207) (< $generated@@207 ($generated@@20 $generated@@183))) (< ($generated@@10 ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@207))) (+ $generated@@185 $generated@@184))))
 :pattern ( ($generated@@37 $generated@@5 ($generated@@38 $generated@@183 $generated@@207)))
))))) (and (not ($generated@@45 $generated@@183 $generated@@21)) (= (ControlFlow 0 19) 17)))) $generated@@202))))
$generated@@206))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
