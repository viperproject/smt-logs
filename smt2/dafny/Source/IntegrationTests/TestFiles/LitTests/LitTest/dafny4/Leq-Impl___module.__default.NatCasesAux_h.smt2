(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U T@U) Bool)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 (Int) T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 () Int)
(declare-fun $generated@@44 (T@U Int) T@U)
(declare-fun $generated@@45 (Int) Bool)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@47 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@112 (T@U T@U) Bool)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@152 (T@T T@T) T@T)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@211 (T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@24) $generated@@25 $generated@@26) (= $generated@@25 $generated@@26))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@24) $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30)) ($generated@@27 $generated@@28 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@29 $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@27 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! ($generated@@31 $generated@@8 $generated@@33 $generated@@32 $generated@@34)
 :pattern ( ($generated@@31 $generated@@8 $generated@@33 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ($generated@@40 Int) ) (!  (=> (and (and (<= 0 $generated@@39) (<= 0 $generated@@40)) (<= (+ $generated@@39 $generated@@40) ($generated@@37 $generated@@38))) (= ($generated@@35 ($generated@@35 $generated@@38 ($generated@@36 $generated@@39)) ($generated@@36 $generated@@40)) ($generated@@35 $generated@@38 ($generated@@36 (+ $generated@@39 $generated@@40)))))
 :pattern ( ($generated@@35 ($generated@@35 $generated@@38 ($generated@@36 $generated@@39)) ($generated@@36 $generated@@40)))
)))
(assert (= ($generated@@41 $generated@@42) $generated@@2))
(assert (= ($generated@@6 $generated@@48) 3))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (or ($generated@@45 $generated@@51) (and (< 1 $generated@@43) (<= ($generated@@46 0) $generated@@51))) ($generated@@47 $generated@@48 ($generated@@44 $generated@@50 $generated@@51) $generated@@49))
 :pattern ( ($generated@@44 $generated@@50 $generated@@51))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (forall (($generated@@56 Int) ) (!  (=> (<= 0 $generated@@56) ($generated@@52 ($generated@@36 $generated@@56) ($generated@@23 $generated@@53) $generated@@54 $generated@@55))
 :pattern ( ($generated@@52 ($generated@@36 $generated@@56) ($generated@@23 $generated@@53) $generated@@54 $generated@@55))
)) ($generated@@22 ($generated@@23 $generated@@53) $generated@@54 $generated@@55))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@53) $generated@@54 $generated@@55))
)))
(assert ($generated@@47 $generated@@48 $generated@@42 $generated@@49))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@61 T@U) ) (!  (=> (or ($generated@@58 $generated@@61) (and (< 2 $generated@@43) ($generated@@47 $generated@@48 $generated@@61 $generated@@49))) (and (forall (($generated@@62 Int) ) (!  (=> (<= ($generated@@46 0) $generated@@62) (and (and ($generated@@60 $generated@@61) ($generated@@60 ($generated@@44 ($generated@@23 $generated@@59) $generated@@62))) ($generated@@45 $generated@@62)))
 :pattern ( ($generated@@44 ($generated@@23 $generated@@59) $generated@@62))
)) (= ($generated@@57 $generated@@61) (exists (($generated@@63 Int) ) (!  (and (<= ($generated@@46 0) $generated@@63) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) $generated@@61 ($generated@@44 ($generated@@23 $generated@@59) $generated@@63)))
 :pattern ( ($generated@@44 ($generated@@23 $generated@@59) $generated@@63))
)))))
 :pattern ( ($generated@@57 $generated@@61))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> (and ($generated@@27 $generated@@64 $generated@@68) ($generated@@52 $generated@@68 ($generated@@23 $generated@@65) $generated@@66 $generated@@67)) ($generated@@52 $generated@@64 ($generated@@23 $generated@@65) $generated@@66 $generated@@67))
 :pattern ( ($generated@@52 $generated@@64 ($generated@@23 $generated@@65) $generated@@66 $generated@@67) ($generated@@52 $generated@@68 ($generated@@23 $generated@@65) $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 Int) ) (! (= ($generated@@46 $generated@@69) $generated@@69)
 :pattern ( ($generated@@46 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 $generated@@74) (= ($generated@@41 $generated@@74) $generated@@2))
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@75 $generated@@76) (= ($generated@@41 $generated@@76) $generated@@3))
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@77 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@77 $generated@@80 $generated@@79))
)))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and ($generated@@47 $generated@@48 $generated@@83 $generated@@49) (= $generated@@84 ($generated@@36 0))) ($generated@@81 $generated@@82 $generated@@84 $generated@@83))
 :pattern ( ($generated@@81 $generated@@82 $generated@@84 $generated@@83))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and ($generated@@47 $generated@@48 $generated@@88 $generated@@49) ($generated@@47 $generated@@48 $generated@@89 $generated@@49)) (= ($generated@@52 $generated@@86 ($generated@@23 $generated@@87) $generated@@88 $generated@@89)  (and (=> (< 0 ($generated@@37 $generated@@86)) (or (and ($generated@@73 $generated@@88) ($generated@@73 $generated@@89)) (and (and ($generated@@75 $generated@@88) ($generated@@75 $generated@@89)) (=> (and ($generated@@75 $generated@@88) ($generated@@75 $generated@@89)) ($generated@@52 ($generated@@35 $generated@@86 ($generated@@36 1)) $generated@@87 ($generated@@85 $generated@@88) ($generated@@85 $generated@@89)))))) (=> (and (or (not (= $generated@@86 ($generated@@36 0))) (not true)) (= ($generated@@37 $generated@@86) 0)) ($generated@@22 $generated@@87 $generated@@88 $generated@@89)))))
 :pattern ( ($generated@@52 $generated@@86 ($generated@@23 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@73 $generated@@90) (= $generated@@90 $generated@@42))
 :pattern ( ($generated@@73 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@75 $generated@@92) (exists (($generated@@93 T@U) ) (= $generated@@92 ($generated@@91 $generated@@93))))
 :pattern ( ($generated@@75 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@47 $generated@@8 $generated@@94 $generated@@32) (<= ($generated@@46 0) ($generated@@13 $generated@@94)))
 :pattern ( ($generated@@47 $generated@@8 $generated@@94 $generated@@32))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and ($generated@@47 $generated@@48 $generated@@96 $generated@@49) ($generated@@47 $generated@@48 $generated@@97 $generated@@49)) (= ($generated@@22 ($generated@@23 $generated@@95) $generated@@96 $generated@@97)  (or (and ($generated@@73 $generated@@96) ($generated@@73 $generated@@97)) (and (and ($generated@@75 $generated@@96) ($generated@@75 $generated@@97)) (=> (and ($generated@@75 $generated@@96) ($generated@@75 $generated@@97)) ($generated@@22 $generated@@95 ($generated@@85 $generated@@96) ($generated@@85 $generated@@97)))))))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or (not (= $generated@@98 ($generated@@36 0))) (not true)) (= ($generated@@52 $generated@@98 ($generated@@23 $generated@@99) $generated@@100 $generated@@101) ($generated@@52 $generated@@98 $generated@@99 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@52 $generated@@98 ($generated@@23 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@81 ($generated@@23 $generated@@102) $generated@@103 $generated@@104) ($generated@@81 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@105) $generated@@106 $generated@@107) ($generated@@22 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@105) $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and ($generated@@108 $generated@@110) (<= ($generated@@37 $generated@@110) ($generated@@37 $generated@@109))) (and (= ($generated@@108 ($generated@@35 $generated@@109 $generated@@110)) ($generated@@108 $generated@@109)) (= ($generated@@37 ($generated@@35 $generated@@109 $generated@@110)) (- ($generated@@37 $generated@@109) ($generated@@37 $generated@@110)))))
 :pattern ( ($generated@@35 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 Int) ) (!  (=> (<= 0 $generated@@111) (and ($generated@@108 ($generated@@36 $generated@@111)) (= ($generated@@37 ($generated@@36 $generated@@111)) $generated@@111)))
 :pattern ( ($generated@@36 $generated@@111))
)))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@112 $generated@@114 $generated@@115) (and (< 2 $generated@@43) ($generated@@47 $generated@@48 $generated@@115 $generated@@49))) (and (and (=> (< 0 ($generated@@37 $generated@@114)) (=> ($generated@@75 $generated@@115) ($generated@@112 ($generated@@35 $generated@@114 ($generated@@36 1)) ($generated@@85 $generated@@115)))) (=> (=> (< 0 ($generated@@37 $generated@@114)) (and ($generated@@75 $generated@@115) ($generated@@81 $generated@@113 ($generated@@35 $generated@@114 ($generated@@36 1)) ($generated@@85 $generated@@115)))) (=> (= ($generated@@46 0) ($generated@@37 $generated@@114)) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@27 $generated@@116 $generated@@114) ($generated@@112 $generated@@116 $generated@@115))
 :pattern ( ($generated@@81 $generated@@113 $generated@@116 $generated@@115))
))))) (= ($generated@@81 ($generated@@23 $generated@@113) $generated@@114 $generated@@115)  (and (=> (< 0 ($generated@@37 $generated@@114)) (and ($generated@@75 $generated@@115) ($generated@@81 $generated@@113 ($generated@@35 $generated@@114 ($generated@@36 1)) ($generated@@85 $generated@@115)))) (=> (= ($generated@@46 0) ($generated@@37 $generated@@114)) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@27 $generated@@117 $generated@@114) ($generated@@81 $generated@@113 $generated@@117 $generated@@115))
 :pattern ( ($generated@@81 $generated@@113 $generated@@117 $generated@@115))
)))))))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@113) $generated@@114 $generated@@115))
))))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@47 $generated@@48 ($generated@@91 $generated@@118) $generated@@49) ($generated@@47 $generated@@48 $generated@@118 $generated@@49))
 :pattern ( ($generated@@47 $generated@@48 ($generated@@91 $generated@@118) $generated@@49))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@119) $generated@@120 $generated@@121) (forall (($generated@@122 T@U) ) (! ($generated@@52 $generated@@122 ($generated@@23 $generated@@119) $generated@@120 $generated@@121)
 :pattern ( ($generated@@52 $generated@@122 ($generated@@23 $generated@@119) $generated@@120 $generated@@121))
)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@119) $generated@@120 $generated@@121))
)))
(assert (= ($generated@@6 $generated@@123) 4))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or ($generated@@112 ($generated@@70 $generated@@123 $generated@@125) ($generated@@70 $generated@@48 $generated@@126)) (and (< 2 $generated@@43) ($generated@@47 $generated@@48 $generated@@126 $generated@@49))) (and (and (=> (< 0 ($generated@@37 $generated@@125)) (=> ($generated@@11 ($generated@@70 $generated@@7 ($generated@@10 ($generated@@75 ($generated@@70 $generated@@48 $generated@@126))))) ($generated@@112 ($generated@@35 $generated@@125 ($generated@@36 1)) ($generated@@70 $generated@@48 ($generated@@85 ($generated@@70 $generated@@48 $generated@@126)))))) (=> (=> (< 0 ($generated@@37 $generated@@125)) (and ($generated@@75 ($generated@@70 $generated@@48 $generated@@126)) ($generated@@81 ($generated@@23 $generated@@124) ($generated@@35 $generated@@125 ($generated@@36 1)) ($generated@@70 $generated@@48 ($generated@@85 ($generated@@70 $generated@@48 $generated@@126)))))) (=> (= ($generated@@46 0) ($generated@@37 $generated@@125)) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@27 $generated@@127 $generated@@125) ($generated@@112 $generated@@127 $generated@@126))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@124) $generated@@127 $generated@@126))
))))) (= ($generated@@81 ($generated@@23 $generated@@124) ($generated@@70 $generated@@123 $generated@@125) ($generated@@70 $generated@@48 $generated@@126))  (and (=> (< 0 ($generated@@37 $generated@@125)) (and ($generated@@75 ($generated@@70 $generated@@48 $generated@@126)) ($generated@@81 ($generated@@23 $generated@@124) ($generated@@35 $generated@@125 ($generated@@36 1)) ($generated@@70 $generated@@48 ($generated@@85 ($generated@@70 $generated@@48 $generated@@126)))))) (=> (= ($generated@@46 0) ($generated@@37 $generated@@125)) (forall (($generated@@128 T@U) ) (!  (=> ($generated@@27 $generated@@128 $generated@@125) ($generated@@81 ($generated@@23 $generated@@124) $generated@@128 $generated@@126))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@124) $generated@@128 $generated@@126))
)))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@23 $generated@@124) ($generated@@70 $generated@@123 $generated@@125) ($generated@@70 $generated@@48 $generated@@126)))
))))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@60 $generated@@129) (or ($generated@@73 $generated@@129) ($generated@@75 $generated@@129)))
 :pattern ( ($generated@@60 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (or ($generated@@27 $generated@@130 $generated@@131) (= $generated@@130 $generated@@131)) ($generated@@27 $generated@@131 $generated@@130))
 :pattern ( ($generated@@27 $generated@@130 $generated@@131) ($generated@@27 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@47 $generated@@48 $generated@@132 $generated@@49) (or ($generated@@73 $generated@@132) ($generated@@75 $generated@@132)))
 :pattern ( ($generated@@75 $generated@@132) ($generated@@47 $generated@@48 $generated@@132 $generated@@49))
 :pattern ( ($generated@@73 $generated@@132) ($generated@@47 $generated@@48 $generated@@132 $generated@@49))
)))
(assert (forall (($generated@@133 T@U) ) (! (<= 0 ($generated@@37 $generated@@133))
 :pattern ( ($generated@@37 $generated@@133))
)))
(assert  (=> (<= 1 $generated@@43) (forall (($generated@@134 T@U) ($generated@@135 Int) ) (!  (=> (or ($generated@@45 $generated@@135) (and (< 1 $generated@@43) (<= ($generated@@46 0) $generated@@135))) (and (=> (or (not (= $generated@@135 ($generated@@46 0))) (not true)) ($generated@@45 (- $generated@@135 1))) (= ($generated@@44 ($generated@@23 $generated@@134) $generated@@135) (ite (= $generated@@135 ($generated@@46 0)) $generated@@42 ($generated@@91 ($generated@@44 $generated@@134 (- $generated@@135 1)))))))
 :pattern ( ($generated@@44 ($generated@@23 $generated@@134) $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@41 ($generated@@91 $generated@@136)) $generated@@3)
 :pattern ( ($generated@@91 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@85 ($generated@@91 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@91 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@77 $generated@@139 ($generated@@78 $generated@@139 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@78 $generated@@139 $generated@@138))
)))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@140 T@U) ) (!  (=> (or ($generated@@58 ($generated@@70 $generated@@48 $generated@@140)) (and (< 2 $generated@@43) ($generated@@47 $generated@@48 $generated@@140 $generated@@49))) (and (forall (($generated@@141 Int) ) (!  (=> (<= ($generated@@46 0) $generated@@141) (and (and ($generated@@60 ($generated@@70 $generated@@48 $generated@@140)) ($generated@@60 ($generated@@44 ($generated@@23 $generated@@59) $generated@@141))) ($generated@@45 $generated@@141)))
 :pattern ( ($generated@@44 ($generated@@23 $generated@@59) $generated@@141))
)) (= ($generated@@57 ($generated@@70 $generated@@48 $generated@@140)) (exists (($generated@@142 Int) ) (!  (and (<= ($generated@@46 0) $generated@@142) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) $generated@@140 ($generated@@44 ($generated@@23 $generated@@59) $generated@@142)))
 :pattern ( ($generated@@44 ($generated@@23 $generated@@59) $generated@@142))
)))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@70 $generated@@48 $generated@@140)))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (and (and (and (=> ($generated@@27 $generated@@143 $generated@@144) (or (not (= $generated@@143 $generated@@144)) (not true))) (=> (and ($generated@@108 $generated@@143) (not ($generated@@108 $generated@@144))) ($generated@@27 $generated@@143 $generated@@144))) (=> (and ($generated@@108 $generated@@143) ($generated@@108 $generated@@144)) (= ($generated@@27 $generated@@143 $generated@@144) (< ($generated@@37 $generated@@143) ($generated@@37 $generated@@144))))) (=> (and ($generated@@27 $generated@@143 $generated@@144) ($generated@@108 $generated@@144)) ($generated@@108 $generated@@143)))
 :pattern ( ($generated@@27 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 Int) ) (! (= ($generated@@44 ($generated@@23 $generated@@145) $generated@@146) ($generated@@44 $generated@@145 $generated@@146))
 :pattern ( ($generated@@44 ($generated@@23 $generated@@145) $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@147 $generated@@157 $generated@@158 $generated@@159 ($generated@@153 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@162 $generated@@163) $generated@@160)
 :weight 0
)) (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@147 $generated@@164 $generated@@165 $generated@@166 ($generated@@153 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@171 $generated@@172) ($generated@@147 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@171 $generated@@172)))
 :weight 0
)) (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@179 $generated@@181) (= ($generated@@147 $generated@@173 $generated@@174 $generated@@175 ($generated@@153 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@180 $generated@@181) ($generated@@147 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@180 $generated@@181)))
 :weight 0
)))) (= ($generated@@6 $generated@@148) 5)) (= ($generated@@6 $generated@@149) 6)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@151 $generated@@182 $generated@@183 ($generated@@154 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@184) $generated@@186) $generated@@184)
 :weight 0
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@191 $generated@@192) (= ($generated@@151 $generated@@187 $generated@@188 ($generated@@154 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@189) $generated@@192) ($generated@@151 $generated@@187 $generated@@188 $generated@@190 $generated@@192)))
 :weight 0
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (= ($generated@@6 ($generated@@152 $generated@@193 $generated@@194)) 7))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ) (! (= ($generated@@155 ($generated@@152 $generated@@195 $generated@@196)) $generated@@195)
 :pattern ( ($generated@@152 $generated@@195 $generated@@196))
))) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (! (= ($generated@@156 ($generated@@152 $generated@@197 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@152 $generated@@197 $generated@@198))
))))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 Bool) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@11 ($generated@@147 $generated@@148 $generated@@149 $generated@@7 ($generated@@150 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))  (=> (and (or (not (= $generated@@203 $generated@@199)) (not true)) ($generated@@11 ($generated@@77 $generated@@7 ($generated@@151 $generated@@149 $generated@@123 ($generated@@151 $generated@@148 ($generated@@152 $generated@@149 $generated@@123) $generated@@200 $generated@@203) $generated@@201)))) $generated@@202))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149 $generated@@7 ($generated@@150 $generated@@199 $generated@@200 $generated@@201 $generated@@202) $generated@@203 $generated@@204))
)))
(assert  (=> (<= 2 $generated@@43) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (or ($generated@@112 ($generated@@70 $generated@@123 $generated@@206) $generated@@207) (and (< 2 $generated@@43) ($generated@@47 $generated@@48 $generated@@207 $generated@@49))) (and (and (=> (< 0 ($generated@@37 $generated@@206)) (=> ($generated@@75 $generated@@207) ($generated@@112 ($generated@@35 $generated@@206 ($generated@@36 1)) ($generated@@85 $generated@@207)))) (=> (=> (< 0 ($generated@@37 $generated@@206)) (and ($generated@@75 $generated@@207) ($generated@@81 ($generated@@23 $generated@@205) ($generated@@35 $generated@@206 ($generated@@36 1)) ($generated@@85 $generated@@207)))) (=> (= ($generated@@46 0) ($generated@@37 $generated@@206)) (forall (($generated@@208 T@U) ) (!  (=> ($generated@@27 $generated@@208 $generated@@206) ($generated@@112 $generated@@208 $generated@@207))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@205) $generated@@208 $generated@@207))
))))) (= ($generated@@81 ($generated@@23 $generated@@205) ($generated@@70 $generated@@123 $generated@@206) $generated@@207)  (and (=> (< 0 ($generated@@37 $generated@@206)) (and ($generated@@75 $generated@@207) ($generated@@81 ($generated@@23 $generated@@205) ($generated@@35 $generated@@206 ($generated@@36 1)) ($generated@@85 $generated@@207)))) (=> (= ($generated@@46 0) ($generated@@37 $generated@@206)) (forall (($generated@@209 T@U) ) (!  (=> ($generated@@27 $generated@@209 $generated@@206) ($generated@@81 ($generated@@23 $generated@@205) $generated@@209 $generated@@207))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@205) $generated@@209 $generated@@207))
)))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@23 $generated@@205) ($generated@@70 $generated@@123 $generated@@206) $generated@@207))
))))
(assert (forall (($generated@@210 T@U) ) (!  (=> ($generated@@108 $generated@@210) (= $generated@@210 ($generated@@36 ($generated@@37 $generated@@210))))
 :pattern ( ($generated@@37 $generated@@210))
 :pattern ( ($generated@@108 $generated@@210))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@211 $generated@@213) ($generated@@47 $generated@@48 $generated@@212 $generated@@49)) ($generated@@31 $generated@@48 $generated@@212 $generated@@49 $generated@@213))
 :pattern ( ($generated@@31 $generated@@48 $generated@@212 $generated@@49 $generated@@213))
)))
(assert (= ($generated@@214 $generated@@32) $generated@@0))
(assert (= ($generated@@215 $generated@@32) $generated@@4))
(assert (= ($generated@@214 $generated@@49) $generated@@1))
(assert (= ($generated@@215 $generated@@49) $generated@@5))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@108 $generated@@217) (<= ($generated@@37 $generated@@217) ($generated@@37 $generated@@216))) (or (and (= $generated@@217 ($generated@@36 0)) (= ($generated@@35 $generated@@216 $generated@@217) $generated@@216)) (and (or (not (= $generated@@217 ($generated@@36 0))) (not true)) ($generated@@27 ($generated@@35 $generated@@216 $generated@@217) $generated@@216))))
 :pattern ( ($generated@@35 $generated@@216 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@211 $generated@@219) (and ($generated@@75 $generated@@218) ($generated@@31 $generated@@48 $generated@@218 $generated@@49 $generated@@219))) ($generated@@31 $generated@@48 ($generated@@85 $generated@@218) $generated@@49 $generated@@219))
 :pattern ( ($generated@@31 $generated@@48 ($generated@@85 $generated@@218) $generated@@49 $generated@@219))
)))
(assert (forall (($generated@@220 Int) ) (! (= ($generated@@78 $generated@@8 ($generated@@12 ($generated@@46 $generated@@220))) ($generated@@70 $generated@@123 ($generated@@78 $generated@@8 ($generated@@12 $generated@@220))))
 :pattern ( ($generated@@78 $generated@@8 ($generated@@12 ($generated@@46 $generated@@220))))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@T) ) (! (= ($generated@@78 $generated@@222 ($generated@@70 $generated@@222 $generated@@221)) ($generated@@70 $generated@@123 ($generated@@78 $generated@@222 $generated@@221)))
 :pattern ( ($generated@@78 $generated@@222 ($generated@@70 $generated@@222 $generated@@221)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (= $generated@@225 $generated@@226) ($generated@@52 $generated@@223 ($generated@@23 $generated@@224) $generated@@225 $generated@@226))
 :pattern ( ($generated@@52 $generated@@223 ($generated@@23 $generated@@224) $generated@@225 $generated@@226))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@244  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@112 $generated@@227 $generated@@228) (or ($generated@@81 ($generated@@23 $generated@@59) $generated@@227 $generated@@228) (=> (< 0 ($generated@@37 $generated@@227)) ($generated@@75 $generated@@228))))) (=> (=> ($generated@@112 $generated@@227 $generated@@228) (or ($generated@@81 ($generated@@23 $generated@@59) $generated@@227 $generated@@228) (=> (< 0 ($generated@@37 $generated@@227)) ($generated@@75 $generated@@228)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@112 $generated@@227 $generated@@228) (or ($generated@@81 ($generated@@23 $generated@@59) $generated@@227 $generated@@228) (=> (< 0 ($generated@@37 $generated@@227)) ($generated@@81 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@35 $generated@@227 ($generated@@36 1)) ($generated@@85 $generated@@228)))))) (=> (=> ($generated@@112 $generated@@227 $generated@@228) (or ($generated@@81 ($generated@@23 $generated@@59) $generated@@227 $generated@@228) (=> (< 0 ($generated@@37 $generated@@227)) ($generated@@81 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@35 $generated@@227 ($generated@@36 1)) ($generated@@85 $generated@@228))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@112 $generated@@227 $generated@@228) (or ($generated@@81 ($generated@@23 $generated@@59) $generated@@227 $generated@@228) (=> (= ($generated@@46 0) ($generated@@37 $generated@@227)) (forall (($generated@@245 T@U) ) (!  (=> ($generated@@27 $generated@@245 $generated@@227) ($generated@@81 ($generated@@23 ($generated@@23 $generated@@59)) $generated@@245 $generated@@228))
 :pattern ( ($generated@@81 ($generated@@23 ($generated@@23 $generated@@59)) $generated@@245 $generated@@228))
))))))))))))
(let (($generated@@246  (and (=> (= (ControlFlow 0 6) (- 0 10)) ($generated@@108 ($generated@@70 $generated@@123 ($generated@@36 1)))) (=> ($generated@@108 ($generated@@70 $generated@@123 ($generated@@36 1))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (<= ($generated@@37 ($generated@@70 $generated@@123 ($generated@@36 1))) ($generated@@37 $generated@@227))) (=> (<= ($generated@@37 ($generated@@70 $generated@@123 ($generated@@36 1))) ($generated@@37 $generated@@227)) (=> (= $generated@@229 ($generated@@35 $generated@@227 ($generated@@36 1))) (and (=> (= (ControlFlow 0 6) (- 0 8)) ($generated@@75 $generated@@228)) (=> ($generated@@75 $generated@@228) (=> (= $generated@@230 ($generated@@85 $generated@@228)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (not ($generated@@57 $generated@@230))) (=> (not ($generated@@57 $generated@@230)) (=> (and (and (and ($generated@@211 $generated@@231) ($generated@@232 $generated@@231)) ($generated@@112 $generated@@229 $generated@@230)) (and (and ($generated@@112 $generated@@229 $generated@@230) (and ($generated@@81 ($generated@@23 $generated@@59) $generated@@229 $generated@@230) (and (=> (< 0 ($generated@@37 $generated@@229)) (and ($generated@@75 $generated@@230) ($generated@@81 ($generated@@23 $generated@@59) ($generated@@35 $generated@@229 ($generated@@36 1)) ($generated@@85 $generated@@230)))) (=> (= ($generated@@46 0) ($generated@@37 $generated@@229)) (forall (($generated@@247 T@U) ) (!  (=> ($generated@@27 $generated@@247 $generated@@229) ($generated@@81 ($generated@@23 $generated@@59) $generated@@247 $generated@@230))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@59) $generated@@247 $generated@@230))
)))))) (and (= $generated@@233 $generated@@231) (= (ControlFlow 0 6) 2)))) $generated@@244)))))))))))))
(let (($generated@@248  (and (=> (= (ControlFlow 0 12) (- 0 16)) (or (and ($generated@@47 $generated@@8 ($generated@@12 ($generated@@46 0)) $generated@@32) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@85 $generated@@228) ($generated@@44 ($generated@@23 $generated@@59) ($generated@@46 0)))) (or (and ($generated@@47 $generated@@8 ($generated@@12 ($generated@@46 0)) $generated@@32) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@85 $generated@@228) ($generated@@44 ($generated@@23 $generated@@59) ($generated@@46 0)))) (exists (($generated@@249 Int) )  (and (<= ($generated@@46 0) $generated@@249) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@85 $generated@@228) ($generated@@44 ($generated@@23 $generated@@59) $generated@@249))))))) (=> (or (and ($generated@@47 $generated@@8 ($generated@@12 ($generated@@46 0)) $generated@@32) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@85 $generated@@228) ($generated@@44 ($generated@@23 $generated@@59) ($generated@@46 0)))) (or (and ($generated@@47 $generated@@8 ($generated@@12 ($generated@@46 0)) $generated@@32) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@85 $generated@@228) ($generated@@44 ($generated@@23 $generated@@59) ($generated@@46 0)))) (exists (($generated@@250 Int) )  (and (<= ($generated@@46 0) $generated@@250) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@85 $generated@@228) ($generated@@44 ($generated@@23 $generated@@59) $generated@@250)))))) (=> (and (<= ($generated@@46 0) $generated@@234) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@85 $generated@@228) ($generated@@44 ($generated@@23 $generated@@59) $generated@@234))) (and (=> (= (ControlFlow 0 12) (- 0 15)) ($generated@@47 $generated@@8 ($generated@@12 (+ $generated@@234 1)) $generated@@32)) (=> ($generated@@47 $generated@@8 ($generated@@12 (+ $generated@@234 1)) $generated@@32) (=> (= $generated@@235 (+ $generated@@234 1)) (=> (and ($generated@@31 $generated@@8 ($generated@@12 $generated@@235) $generated@@32 $generated@@233) ($generated@@45 (+ $generated@@234 1))) (=> (and (and ($generated@@60 $generated@@228) ($generated@@60 ($generated@@44 ($generated@@23 $generated@@59) (+ $generated@@234 1)))) ($generated@@45 (+ $generated@@234 1))) (and (=> (= (ControlFlow 0 12) (- 0 14)) ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) $generated@@228 ($generated@@44 ($generated@@23 ($generated@@23 $generated@@59)) (+ $generated@@234 1)))) (=> ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) $generated@@228 ($generated@@44 ($generated@@23 $generated@@59) (+ $generated@@234 1))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@11 ($generated@@70 $generated@@7 ($generated@@10 false)))) (=> ($generated@@11 ($generated@@70 $generated@@7 ($generated@@10 false))) (=> (= (ControlFlow 0 12) 6) $generated@@246)))))))))))))))
(let (($generated@@251  (=> (and (< $generated@@236 ($generated@@46 0)) (= (ControlFlow 0 19) 12)) $generated@@248)))
(let (($generated@@252  (=> (<= ($generated@@46 0) $generated@@236) (and (=> (= (ControlFlow 0 17) (- 0 18)) ($generated@@75 $generated@@228)) (=> ($generated@@75 $generated@@228) (=> (and ($generated@@31 $generated@@8 ($generated@@12 $generated@@236) $generated@@32 $generated@@233) ($generated@@45 $generated@@236)) (=> (and (and (and ($generated@@60 ($generated@@85 $generated@@228)) ($generated@@60 ($generated@@44 ($generated@@23 $generated@@59) $generated@@236))) ($generated@@45 $generated@@236)) (= (ControlFlow 0 17) 12)) $generated@@248)))))))
(let (($generated@@253  (=> ($generated@@57 ($generated@@85 $generated@@228)) (and (=> (= (ControlFlow 0 20) 17) $generated@@252) (=> (= (ControlFlow 0 20) 19) $generated@@251)))))
(let (($generated@@254  (=> (and (not ($generated@@57 ($generated@@85 $generated@@228))) (= (ControlFlow 0 11) 6)) $generated@@246)))
(let (($generated@@255  (=> (< 0 ($generated@@37 $generated@@227)) (and (=> (= (ControlFlow 0 21) (- 0 24)) ($generated@@47 $generated@@8 ($generated@@12 ($generated@@46 0)) $generated@@32)) (=> ($generated@@47 $generated@@8 ($generated@@12 ($generated@@46 0)) $generated@@32) (=> (= $generated@@237 ($generated@@46 0)) (=> (and ($generated@@31 $generated@@8 ($generated@@12 $generated@@237) $generated@@32 $generated@@233) ($generated@@45 ($generated@@46 0))) (=> (and (and ($generated@@60 $generated@@228) ($generated@@60 ($generated@@70 $generated@@48 ($generated@@44 ($generated@@23 $generated@@59) ($generated@@46 0))))) ($generated@@45 ($generated@@46 0))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (not ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) $generated@@228 ($generated@@44 ($generated@@23 ($generated@@23 $generated@@59)) ($generated@@46 0))))) (=> (not ($generated@@22 ($generated@@23 ($generated@@23 $generated@@59)) $generated@@228 ($generated@@44 ($generated@@23 $generated@@59) ($generated@@46 0)))) (and (=> (= (ControlFlow 0 21) (- 0 22)) ($generated@@75 $generated@@228)) (=> ($generated@@75 $generated@@228) (=> (and (and (= $generated@@238 ($generated@@85 $generated@@228)) ($generated@@31 $generated@@48 $generated@@238 $generated@@49 $generated@@233)) (and ($generated@@58 ($generated@@85 $generated@@228)) ($generated@@58 ($generated@@85 $generated@@228)))) (and (=> (= (ControlFlow 0 21) 20) $generated@@253) (=> (= (ControlFlow 0 21) 11) $generated@@254)))))))))))))))
(let (($generated@@256  (=> (<= ($generated@@37 $generated@@227) 0) (=> (and (and (and ($generated@@211 $generated@@239) ($generated@@232 $generated@@239)) (= $generated@@233 $generated@@239)) (and (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and ($generated@@47 $generated@@48 $generated@@258 $generated@@49) (and ($generated@@27 $generated@@257 $generated@@227) (not ($generated@@57 $generated@@258)))) ($generated@@81 ($generated@@23 $generated@@59) $generated@@257 $generated@@258))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@59) $generated@@257 $generated@@258))
 :pattern ( ($generated@@57 $generated@@258) ($generated@@27 $generated@@257 $generated@@227))
)) (= (ControlFlow 0 5) 2))) $generated@@244))))
(let (($generated@@259  (=> (and (= $generated@@240 ($generated@@150 $generated@@241 $generated@@242 $generated false)) ($generated@@60 $generated@@228)) (=> (and (and ($generated@@211 $generated@@233) ($generated@@232 $generated@@233)) (and (= $generated@@242 $generated@@233) (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and (and ($generated@@47 $generated@@48 $generated@@261 $generated@@49) (not ($generated@@57 $generated@@261))) ($generated@@27 $generated@@260 $generated@@227)) ($generated@@81 ($generated@@23 $generated@@59) $generated@@260 $generated@@261))
 :pattern ( ($generated@@81 ($generated@@23 $generated@@59) $generated@@260 $generated@@261))
)))) (and (=> (= (ControlFlow 0 25) 21) $generated@@255) (=> (= (ControlFlow 0 25) 5) $generated@@256))))))
(let (($generated@@262  (=> (and ($generated@@211 $generated@@242) ($generated@@232 $generated@@242)) (=> (and (and ($generated@@47 $generated@@48 $generated@@228 $generated@@49) ($generated@@31 $generated@@48 $generated@@228 $generated@@49 $generated@@242)) ($generated@@60 $generated@@228)) (=> (and (and (and (<= ($generated@@46 0) $generated@@243) true) (= 4 $generated@@43)) (and (not ($generated@@57 $generated@@228)) (= (ControlFlow 0 26) 25))) $generated@@259)))))
$generated@@262))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
