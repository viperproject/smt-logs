(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 () Int)
(declare-fun $generated@@18 (T@U T@U) T@U)
(declare-fun $generated@@19 (T@U T@U) Bool)
(declare-fun $generated@@20 (T@T T@U T@U) Bool)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 (T@U Int) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@48 (T@U T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@69 (T@U) T@U)
(declare-fun $generated@@73 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@77 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 (T@T T@T) T@T)
(declare-fun $generated@@80 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@136 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (= ($generated@@1 $generated@@21) 3))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> (or ($generated@@19 $generated@@24 $generated@@25) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@25 ($generated@@22 $generated@@24)) (> ($generated@@23 $generated@@25) 0)))) (and (= ($generated@@23 ($generated@@18 $generated@@24 $generated@@25)) (- ($generated@@23 $generated@@25) 1)) ($generated@@20 $generated@@21 ($generated@@18 $generated@@24 $generated@@25) ($generated@@22 $generated@@24))))
 :pattern ( ($generated@@18 $generated@@24 $generated@@25))
))))
(assert (= ($generated@@23 $generated@@26) 0))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (or ($generated@@19 $generated@@29 ($generated@@27 $generated@@21 $generated@@30)) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@30 ($generated@@22 $generated@@29)) (> ($generated@@23 ($generated@@27 $generated@@21 $generated@@30)) 0)))) (= ($generated@@18 $generated@@29 ($generated@@27 $generated@@21 $generated@@30)) ($generated@@28 ($generated@@27 $generated@@21 $generated@@30) (- ($generated@@23 ($generated@@27 $generated@@21 $generated@@30)) 1))))
 :weight 3
 :pattern ( ($generated@@18 $generated@@29 ($generated@@27 $generated@@21 $generated@@30)))
))))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@T) ) (! (= ($generated@@27 $generated@@32 $generated@@31) $generated@@31)
 :pattern ( ($generated@@27 $generated@@32 $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 Int) ) (!  (=> (and (and (<= 0 $generated@@36) (< $generated@@36 $generated@@35)) (< $generated@@36 ($generated@@23 $generated@@34))) (= ($generated@@33 ($generated@@28 $generated@@34 $generated@@35) $generated@@36) ($generated@@33 $generated@@34 $generated@@36)))
 :weight 25
 :pattern ( ($generated@@33 ($generated@@28 $generated@@34 $generated@@35) $generated@@36))
 :pattern ( ($generated@@33 $generated@@34 $generated@@36) ($generated@@28 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@39)  (and (= ($generated@@23 $generated@@38) ($generated@@23 $generated@@39)) (forall (($generated@@40 Int) ) (!  (=> (and (<= 0 $generated@@40) (< $generated@@40 ($generated@@23 $generated@@38))) (= ($generated@@33 $generated@@38 $generated@@40) ($generated@@33 $generated@@39 $generated@@40)))
 :pattern ( ($generated@@33 $generated@@38 $generated@@40))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40))
))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 ($generated@@41 $generated@@44 $generated@@43)) $generated@@43)
 :pattern ( ($generated@@41 $generated@@44 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (and (<= 0 $generated@@47) (< $generated@@47 ($generated@@23 $generated@@46))) (< ($generated@@45 ($generated@@28 $generated@@46 $generated@@47)) ($generated@@45 $generated@@46)))
 :pattern ( ($generated@@45 ($generated@@28 $generated@@46 $generated@@47)))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@48 ($generated@@42 $generated@@53 $generated@@50) $generated@@51 $generated@@52) ($generated@@49 $generated@@53 $generated@@50 $generated@@51 $generated@@52))
 :pattern ( ($generated@@48 ($generated@@42 $generated@@53 $generated@@50) $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> ($generated@@37 $generated@@54 $generated@@55) (= $generated@@54 $generated@@55))
 :pattern ( ($generated@@37 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (and (<= 0 $generated@@57) (<= $generated@@57 ($generated@@23 $generated@@56))) (= ($generated@@23 ($generated@@28 $generated@@56 $generated@@57)) $generated@@57))
 :pattern ( ($generated@@23 ($generated@@28 $generated@@56 $generated@@57)))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@58 ($generated@@42 $generated@@61 $generated@@59) $generated@@60) ($generated@@20 $generated@@61 $generated@@59 $generated@@60))
 :pattern ( ($generated@@58 ($generated@@42 $generated@@61 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated@@23 $generated@@62))
 :pattern ( ($generated@@23 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@49 $generated@@21 $generated@@63 ($generated@@22 $generated@@64) $generated@@65) (forall (($generated@@66 Int) ) (!  (=> (and (<= 0 $generated@@66) (< $generated@@66 ($generated@@23 $generated@@63))) ($generated@@48 ($generated@@33 $generated@@63 $generated@@66) $generated@@64 $generated@@65))
 :pattern ( ($generated@@33 $generated@@63 $generated@@66))
)))
 :pattern ( ($generated@@49 $generated@@21 $generated@@63 ($generated@@22 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 ($generated@@22 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@22 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 ($generated@@22 $generated@@70)) $generated)
 :pattern ( ($generated@@22 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@41 $generated@@72 ($generated@@42 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@42 $generated@@72 $generated@@71))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@73 $generated@@84 $generated@@85 $generated@@86 ($generated@@80 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@87) $generated@@89 $generated@@90) $generated@@87)
 :weight 0
)) (and (forall (($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (or (= $generated@@96 $generated@@98) (= ($generated@@73 $generated@@91 $generated@@92 $generated@@93 ($generated@@80 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@97 $generated@@94) $generated@@98 $generated@@99) ($generated@@73 $generated@@91 $generated@@92 $generated@@93 $generated@@95 $generated@@98 $generated@@99)))
 :weight 0
)) (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (or (= $generated@@106 $generated@@108) (= ($generated@@73 $generated@@100 $generated@@101 $generated@@102 ($generated@@80 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@107 $generated@@108) ($generated@@73 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@107 $generated@@108)))
 :weight 0
)))) (= ($generated@@1 $generated@@74) 4)) (= ($generated@@1 $generated@@75) 5)) (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@77 $generated@@109 $generated@@110 ($generated@@81 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@111) $generated@@113) $generated@@111)
 :weight 0
))) (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@118 $generated@@119) (= ($generated@@77 $generated@@114 $generated@@115 ($generated@@81 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@116) $generated@@119) ($generated@@77 $generated@@114 $generated@@115 $generated@@117 $generated@@119)))
 :weight 0
))) (= ($generated@@1 $generated@@78) 6)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (= ($generated@@1 ($generated@@79 $generated@@120 $generated@@121)) 7))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@82 ($generated@@79 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@79 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@83 ($generated@@79 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@79 $generated@@124 $generated@@125))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 Bool) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@6 ($generated@@73 $generated@@74 $generated@@75 $generated@@2 ($generated@@76 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))  (=> (and (or (not (= $generated@@130 $generated@@126)) (not true)) ($generated@@6 ($generated@@41 $generated@@2 ($generated@@77 $generated@@75 $generated@@78 ($generated@@77 $generated@@74 ($generated@@79 $generated@@75 $generated@@78) $generated@@127 $generated@@130) $generated@@128)))) $generated@@129))
 :pattern ( ($generated@@73 $generated@@74 $generated@@75 $generated@@2 ($generated@@76 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@58 $generated@@132 ($generated@@22 $generated@@133)) (and (= ($generated@@42 $generated@@21 ($generated@@41 $generated@@21 $generated@@132)) $generated@@132) ($generated@@20 $generated@@21 ($generated@@41 $generated@@21 $generated@@132) ($generated@@22 $generated@@133))))
 :pattern ( ($generated@@58 $generated@@132 ($generated@@22 $generated@@133)))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (or ($generated@@19 $generated@@134 $generated@@135) (and (< 0 $generated@@17) (and ($generated@@20 $generated@@21 $generated@@135 ($generated@@22 $generated@@134)) (> ($generated@@23 $generated@@135) 0)))) (= ($generated@@18 $generated@@134 $generated@@135) ($generated@@28 $generated@@135 (- ($generated@@23 $generated@@135) 1))))
 :pattern ( ($generated@@18 $generated@@134 $generated@@135))
))))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (or ($generated@@19 $generated@@138 $generated@@139) (and (< 0 $generated@@17) (and (and ($generated@@20 $generated@@21 $generated@@139 ($generated@@22 $generated@@138)) ($generated@@49 $generated@@21 $generated@@139 ($generated@@22 $generated@@138) $generated@@137)) (> ($generated@@23 $generated@@139) 0)))) ($generated@@136 $generated@@137)) ($generated@@49 $generated@@21 ($generated@@18 $generated@@138 $generated@@139) ($generated@@22 $generated@@138) $generated@@137))
 :pattern ( ($generated@@49 $generated@@21 ($generated@@18 $generated@@138 $generated@@139) ($generated@@22 $generated@@138) $generated@@137))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@42 $generated@@141 ($generated@@27 $generated@@141 $generated@@140)) ($generated@@27 $generated@@78 ($generated@@42 $generated@@141 $generated@@140)))
 :pattern ( ($generated@@42 $generated@@141 ($generated@@27 $generated@@141 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> (= ($generated@@23 $generated@@142) 0) (= $generated@@142 $generated@@26))
 :pattern ( ($generated@@23 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 Int) ) (!  (=> (= $generated@@144 0) (= ($generated@@28 $generated@@143 $generated@@144) $generated@@26))
 :pattern ( ($generated@@28 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@20 $generated@@21 $generated@@145 ($generated@@22 $generated@@146)) (forall (($generated@@147 Int) ) (!  (=> (and (<= 0 $generated@@147) (< $generated@@147 ($generated@@23 $generated@@145))) ($generated@@58 ($generated@@33 $generated@@145 $generated@@147) $generated@@146))
 :pattern ( ($generated@@33 $generated@@145 $generated@@147))
)))
 :pattern ( ($generated@@20 $generated@@21 $generated@@145 ($generated@@22 $generated@@146)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@154  (=> (= (ControlFlow 0 5) (- 0 4)) (= ($generated@@23 ($generated@@18 $generated@@148 $generated@@149)) (- ($generated@@23 $generated@@149) 1)))))
(let (($generated@@155  (and (=> (= (ControlFlow 0 6) (- 0 7)) (and (<= 0 (- ($generated@@23 $generated@@149) 1)) (<= (- ($generated@@23 $generated@@149) 1) ($generated@@23 $generated@@149)))) (=> (and (<= 0 (- ($generated@@23 $generated@@149) 1)) (<= (- ($generated@@23 $generated@@149) 1) ($generated@@23 $generated@@149))) (=> (= ($generated@@18 $generated@@148 $generated@@149) ($generated@@28 $generated@@149 (- ($generated@@23 $generated@@149) 1))) (=> (and ($generated@@20 $generated@@21 ($generated@@18 $generated@@148 $generated@@149) ($generated@@22 $generated@@148)) (= (ControlFlow 0 6) 5)) $generated@@154))))))
(let (($generated@@156  (=> (and ($generated@@20 $generated@@21 ($generated@@18 $generated@@148 $generated@@149) ($generated@@22 $generated@@148)) ($generated@@49 $generated@@21 $generated@@149 ($generated@@22 $generated@@148) $generated@@150)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated@@23 $generated@@149) 0)) (=> (and (> ($generated@@23 $generated@@149) 0) (= (ControlFlow 0 2) (- 0 1))) (or ($generated@@37 $generated@@149 $generated@@149) (< ($generated@@45 $generated@@149) ($generated@@45 $generated@@149))))))))
(let (($generated@@157  (=> (and (= $generated@@151 ($generated@@76 $generated@@152 $generated@@150 $generated@@0 false)) (> ($generated@@23 $generated@@149) 0)) (and (=> (= (ControlFlow 0 8) 2) $generated@@156) (=> (= (ControlFlow 0 8) 6) $generated@@155)))))
(let (($generated@@158  (=> (and (and (and ($generated@@136 $generated@@150) ($generated@@153 $generated@@150)) ($generated@@20 $generated@@21 $generated@@149 ($generated@@22 $generated@@148))) (and (= 0 $generated@@17) (= (ControlFlow 0 9) 8))) $generated@@157)))
$generated@@158))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
