(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 (T@U T@U T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U Int) T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U Int) T@U)
(declare-fun $generated@@52 (Int) Int)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@123 () T@T)
(declare-fun $generated@@124 (T@T T@T) T@T)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T) T@T)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27) ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) 0))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 Int) ) (!  (=> (and (<= 0 $generated@@34) (<= $generated@@34 ($generated@@28 $generated@@32))) (= ($generated@@30 ($generated@@31 $generated@@32 $generated@@33) $generated@@34) ($generated@@31 ($generated@@30 $generated@@32 $generated@@34) $generated@@33)))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@32 $generated@@33) $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (= $generated@@39 ($generated@@28 $generated@@37)) (and (= ($generated@@35 ($generated@@36 $generated@@37 $generated@@38) $generated@@39) $generated@@37) (= ($generated@@30 ($generated@@36 $generated@@37 $generated@@38) $generated@@39) $generated@@38)))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@37 $generated@@38) $generated@@39))
 :pattern ( ($generated@@30 ($generated@@36 $generated@@37 $generated@@38) $generated@@39))
)))
(assert (= ($generated@@3 $generated@@43) 3))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (or ($generated@@44 $generated@@48 ($generated@@42 $generated@@43 $generated@@49)) (and (< 0 $generated@@40) (and ($generated@@45 $generated@@43 $generated@@49 ($generated@@46 $generated@@48)) (> ($generated@@28 ($generated@@42 $generated@@43 $generated@@49)) 0)))) (= ($generated@@41 $generated@@48 ($generated@@42 $generated@@43 $generated@@49)) ($generated@@47 ($generated@@42 $generated@@43 $generated@@49) (- ($generated@@28 ($generated@@42 $generated@@43 $generated@@49)) 1))))
 :weight 3
 :pattern ( ($generated@@41 $generated@@48 ($generated@@42 $generated@@43 $generated@@49)))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (= $generated@@51 0) (= ($generated@@30 $generated@@50 $generated@@51) $generated@@50))
 :pattern ( ($generated@@30 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@52 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@42 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@42 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@45 $generated@@43 $generated@@57 ($generated@@46 $generated@@59)) ($generated@@56 $generated@@58 $generated@@59)) ($generated@@45 $generated@@43 ($generated@@31 $generated@@57 $generated@@58) ($generated@@46 $generated@@59)))
 :pattern ( ($generated@@45 $generated@@43 ($generated@@31 $generated@@57 $generated@@58) ($generated@@46 $generated@@59)))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 Int) ($generated@@62 Int) ) (!  (=> (and (and (<= 0 $generated@@62) (< $generated@@62 $generated@@61)) (< $generated@@62 ($generated@@28 $generated@@60))) (= ($generated@@47 ($generated@@35 $generated@@60 $generated@@61) $generated@@62) ($generated@@47 $generated@@60 $generated@@62)))
 :weight 25
 :pattern ( ($generated@@47 ($generated@@35 $generated@@60 $generated@@61) $generated@@62))
 :pattern ( ($generated@@47 $generated@@60 $generated@@62) ($generated@@35 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 Int) ) (!  (=> (and (<= 0 $generated@@64) (<= $generated@@64 ($generated@@28 $generated@@63))) (= ($generated@@28 ($generated@@30 $generated@@63 $generated@@64)) (- ($generated@@28 $generated@@63) $generated@@64)))
 :pattern ( ($generated@@28 ($generated@@30 $generated@@63 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@65 $generated@@66 $generated@@67)  (and (= ($generated@@28 $generated@@66) ($generated@@28 $generated@@67)) (forall (($generated@@68 Int) ) (!  (=> (and (<= 0 $generated@@68) (< $generated@@68 ($generated@@28 $generated@@66))) (= ($generated@@47 $generated@@66 $generated@@68) ($generated@@47 $generated@@67 $generated@@68)))
 :pattern ( ($generated@@47 $generated@@66 $generated@@68))
 :pattern ( ($generated@@47 $generated@@67 $generated@@68))
))))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@28 ($generated@@31 $generated@@73 $generated@@74)) (+ 1 ($generated@@28 $generated@@73)))
 :pattern ( ($generated@@31 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@75 ($generated@@70 $generated@@79 $generated@@76) $generated@@77 $generated@@78) ($generated@@19 $generated@@79 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@75 ($generated@@70 $generated@@79 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ($generated@@82 Int) ) (!  (=> (and (and (<= 0 $generated@@81) (<= 0 $generated@@82)) (< $generated@@82 (- ($generated@@28 $generated@@80) $generated@@81))) (= ($generated@@47 ($generated@@30 $generated@@80 $generated@@81) $generated@@82) ($generated@@47 $generated@@80 (+ $generated@@82 $generated@@81))))
 :weight 25
 :pattern ( ($generated@@47 ($generated@@30 $generated@@80 $generated@@81) $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@28 ($generated@@36 $generated@@83 $generated@@84)) (+ ($generated@@28 $generated@@83) ($generated@@28 $generated@@84)))
 :pattern ( ($generated@@28 ($generated@@36 $generated@@83 $generated@@84)))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@56 $generated@@85 $generated@@20) (and (= ($generated@@70 $generated@@5 ($generated@@69 $generated@@5 $generated@@85)) $generated@@85) ($generated@@45 $generated@@5 ($generated@@69 $generated@@5 $generated@@85) $generated@@20)))
 :pattern ( ($generated@@56 $generated@@85 $generated@@20))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 T@U) ) (!  (and (=> (= $generated@@87 ($generated@@28 $generated@@86)) (= ($generated@@47 ($generated@@31 $generated@@86 $generated@@88) $generated@@87) $generated@@88)) (=> (or (not (= $generated@@87 ($generated@@28 $generated@@86))) (not true)) (= ($generated@@47 ($generated@@31 $generated@@86 $generated@@88) $generated@@87) ($generated@@47 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@47 ($generated@@31 $generated@@86 $generated@@88) $generated@@87))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@44 $generated@@89 $generated@@90) (and (< 0 $generated@@40) (and ($generated@@45 $generated@@43 $generated@@90 ($generated@@46 $generated@@89)) (> ($generated@@28 $generated@@90) 0)))) ($generated@@56 ($generated@@41 $generated@@89 $generated@@90) $generated@@89))
 :pattern ( ($generated@@41 $generated@@89 $generated@@90))
))))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@91 $generated@@92 $generated@@94) (and (< 0 $generated@@40) ($generated@@45 $generated@@43 $generated@@94 ($generated@@46 ($generated@@46 $generated@@92))))) (and (=> (or (not (= ($generated@@28 $generated@@94) ($generated@@52 0))) (not true)) ($generated@@91 $generated@@92 ($generated@@30 $generated@@94 ($generated@@52 1)))) (= ($generated@@23 $generated@@92 ($generated@@24 $generated@@93) $generated@@94) (ite (= ($generated@@28 $generated@@94) ($generated@@52 0)) $generated@@29 ($generated@@36 ($generated@@69 $generated@@43 ($generated@@47 $generated@@94 ($generated@@52 0))) ($generated@@23 $generated@@92 $generated@@93 ($generated@@30 $generated@@94 ($generated@@52 1))))))))
 :pattern ( ($generated@@23 $generated@@92 ($generated@@24 $generated@@93) $generated@@94))
))))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and (or ($generated@@91 $generated@@97 $generated@@99) (and (< 0 $generated@@40) (and ($generated@@45 $generated@@43 $generated@@99 ($generated@@46 ($generated@@46 $generated@@97))) ($generated@@19 $generated@@43 $generated@@99 ($generated@@46 ($generated@@46 $generated@@97)) $generated@@96)))) ($generated@@95 $generated@@96)) ($generated@@19 $generated@@43 ($generated@@23 $generated@@97 $generated@@98 $generated@@99) ($generated@@46 $generated@@97) $generated@@96))
 :pattern ( ($generated@@19 $generated@@43 ($generated@@23 $generated@@97 $generated@@98 $generated@@99) ($generated@@46 $generated@@97) $generated@@96))
))))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@65 $generated@@100 $generated@@101) (= $generated@@100 $generated@@101))
 :pattern ( ($generated@@65 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 Int) ) (!  (=> (and (<= 0 $generated@@103) (<= $generated@@103 ($generated@@28 $generated@@102))) (= ($generated@@28 ($generated@@35 $generated@@102 $generated@@103)) $generated@@103))
 :pattern ( ($generated@@28 ($generated@@35 $generated@@102 $generated@@103)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@56 ($generated@@70 $generated@@106 $generated@@104) $generated@@105) ($generated@@45 $generated@@106 $generated@@104 $generated@@105))
 :pattern ( ($generated@@56 ($generated@@70 $generated@@106 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (<= 0 ($generated@@28 $generated@@107))
 :pattern ( ($generated@@28 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@19 $generated@@43 $generated@@108 ($generated@@46 $generated@@109) $generated@@110) (forall (($generated@@111 Int) ) (!  (=> (and (<= 0 $generated@@111) (< $generated@@111 ($generated@@28 $generated@@108))) ($generated@@75 ($generated@@47 $generated@@108 $generated@@111) $generated@@109 $generated@@110))
 :pattern ( ($generated@@47 $generated@@108 $generated@@111))
)))
 :pattern ( ($generated@@19 $generated@@43 $generated@@108 ($generated@@46 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@46 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@46 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@46 $generated@@115)) $generated)
 :pattern ( ($generated@@46 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@69 $generated@@117 ($generated@@70 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@70 $generated@@117 $generated@@116))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@118 $generated@@129 $generated@@130 $generated@@131 ($generated@@125 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@118 $generated@@136 $generated@@137 $generated@@138 ($generated@@125 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@118 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@118 $generated@@145 $generated@@146 $generated@@147 ($generated@@125 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@118 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))) (= ($generated@@3 $generated@@119) 4)) (= ($generated@@3 $generated@@120) 5)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@122 $generated@@154 $generated@@155 ($generated@@126 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@156) $generated@@158) $generated@@156)
 :weight 0
))) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@163 $generated@@164) (= ($generated@@122 $generated@@159 $generated@@160 ($generated@@126 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@164) ($generated@@122 $generated@@159 $generated@@160 $generated@@162 $generated@@164)))
 :weight 0
))) (= ($generated@@3 $generated@@123) 6)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (= ($generated@@3 ($generated@@124 $generated@@165 $generated@@166)) 7))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@127 ($generated@@124 $generated@@167 $generated@@168)) $generated@@167)
 :pattern ( ($generated@@124 $generated@@167 $generated@@168))
))) (forall (($generated@@169 T@T) ($generated@@170 T@T) ) (! (= ($generated@@128 ($generated@@124 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@124 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@8 ($generated@@118 $generated@@119 $generated@@120 $generated@@4 ($generated@@121 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@8 ($generated@@69 $generated@@4 ($generated@@122 $generated@@120 $generated@@123 ($generated@@122 $generated@@119 ($generated@@124 $generated@@120 $generated@@123) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@118 $generated@@119 $generated@@120 $generated@@4 ($generated@@121 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (and (= ($generated@@177 ($generated@@31 $generated@@179 $generated@@180)) $generated@@179) (= ($generated@@178 ($generated@@31 $generated@@179 $generated@@180)) $generated@@180))
 :pattern ( ($generated@@31 $generated@@179 $generated@@180))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (or ($generated@@91 $generated@@181 $generated@@183) (and (< 0 $generated@@40) ($generated@@45 $generated@@43 $generated@@183 ($generated@@46 ($generated@@46 $generated@@181))))) ($generated@@45 $generated@@43 ($generated@@23 $generated@@181 $generated@@182 $generated@@183) ($generated@@46 $generated@@181)))
 :pattern ( ($generated@@23 $generated@@181 $generated@@182 $generated@@183))
))))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@56 $generated@@184 ($generated@@46 $generated@@185)) (and (= ($generated@@70 $generated@@43 ($generated@@69 $generated@@43 $generated@@184)) $generated@@184) ($generated@@45 $generated@@43 ($generated@@69 $generated@@43 $generated@@184) ($generated@@46 $generated@@185))))
 :pattern ( ($generated@@56 $generated@@184 ($generated@@46 $generated@@185)))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and (or ($generated@@44 $generated@@187 $generated@@188) (and (< 0 $generated@@40) (and (and ($generated@@45 $generated@@43 $generated@@188 ($generated@@46 $generated@@187)) ($generated@@19 $generated@@43 $generated@@188 ($generated@@46 $generated@@187) $generated@@186)) (> ($generated@@28 $generated@@188) 0)))) ($generated@@95 $generated@@186)) ($generated@@75 ($generated@@41 $generated@@187 $generated@@188) $generated@@187 $generated@@186))
 :pattern ( ($generated@@75 ($generated@@41 $generated@@187 $generated@@188) $generated@@187 $generated@@186))
))))
(assert (= ($generated@@114 $generated@@20) $generated@@1))
(assert (= ($generated@@189 $generated@@20) $generated@@2))
(assert (forall (($generated@@190 T@U) ($generated@@191 Int) ($generated@@192 Int) ) (!  (=> (and (and (<= 0 $generated@@191) (<= $generated@@191 $generated@@192)) (< $generated@@192 ($generated@@28 $generated@@190))) (= ($generated@@47 ($generated@@30 $generated@@190 $generated@@191) (- $generated@@192 $generated@@191)) ($generated@@47 $generated@@190 $generated@@192)))
 :weight 25
 :pattern ( ($generated@@47 $generated@@190 $generated@@192) ($generated@@30 $generated@@190 $generated@@191))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (or ($generated@@44 $generated@@193 $generated@@194) (and (< 0 $generated@@40) (and ($generated@@45 $generated@@43 $generated@@194 ($generated@@46 $generated@@193)) (> ($generated@@28 $generated@@194) 0)))) (= ($generated@@41 $generated@@193 $generated@@194) ($generated@@47 $generated@@194 (- ($generated@@28 $generated@@194) 1))))
 :pattern ( ($generated@@41 $generated@@193 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 Int) ($generated@@197 Int) ) (!  (=> (and (and (<= 0 $generated@@196) (<= 0 $generated@@197)) (<= (+ $generated@@196 $generated@@197) ($generated@@28 $generated@@195))) (= ($generated@@30 ($generated@@30 $generated@@195 $generated@@196) $generated@@197) ($generated@@30 $generated@@195 (+ $generated@@196 $generated@@197))))
 :pattern ( ($generated@@30 ($generated@@30 $generated@@195 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 Int) ) (!  (and (=> (< $generated@@200 ($generated@@28 $generated@@198)) (= ($generated@@47 ($generated@@36 $generated@@198 $generated@@199) $generated@@200) ($generated@@47 $generated@@198 $generated@@200))) (=> (<= ($generated@@28 $generated@@198) $generated@@200) (= ($generated@@47 ($generated@@36 $generated@@198 $generated@@199) $generated@@200) ($generated@@47 $generated@@199 (- $generated@@200 ($generated@@28 $generated@@198))))))
 :pattern ( ($generated@@47 ($generated@@36 $generated@@198 $generated@@199) $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@45 $generated@@5 $generated@@201 $generated@@20)  (and (<= ($generated@@52 0) ($generated@@10 $generated@@201)) (< ($generated@@10 $generated@@201) 4294967296)))
 :pattern ( ($generated@@45 $generated@@5 $generated@@201 $generated@@20))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@70 $generated@@5 ($generated@@9 ($generated@@52 $generated@@202))) ($generated@@42 $generated@@123 ($generated@@70 $generated@@5 ($generated@@9 $generated@@202))))
 :pattern ( ($generated@@70 $generated@@5 ($generated@@9 ($generated@@52 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@70 $generated@@204 ($generated@@42 $generated@@204 $generated@@203)) ($generated@@42 $generated@@123 ($generated@@70 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@70 $generated@@204 ($generated@@42 $generated@@204 $generated@@203)))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (or ($generated@@91 $generated@@205 ($generated@@42 $generated@@43 $generated@@207)) (and (< 0 $generated@@40) ($generated@@45 $generated@@43 $generated@@207 ($generated@@46 ($generated@@46 $generated@@205))))) (and (=> (or (not (= ($generated@@28 ($generated@@42 $generated@@43 $generated@@207)) ($generated@@52 0))) (not true)) ($generated@@91 $generated@@205 ($generated@@42 $generated@@43 ($generated@@30 ($generated@@42 $generated@@43 $generated@@207) ($generated@@52 1))))) (= ($generated@@23 $generated@@205 ($generated@@24 $generated@@206) ($generated@@42 $generated@@43 $generated@@207)) (ite (= ($generated@@28 ($generated@@42 $generated@@43 $generated@@207)) ($generated@@52 0)) $generated@@29 ($generated@@36 ($generated@@69 $generated@@43 ($generated@@47 ($generated@@42 $generated@@43 $generated@@207) ($generated@@52 0))) ($generated@@23 $generated@@205 ($generated@@24 $generated@@206) ($generated@@42 $generated@@43 ($generated@@30 ($generated@@42 $generated@@43 $generated@@207) ($generated@@52 1)))))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@205 ($generated@@24 $generated@@206) ($generated@@42 $generated@@43 $generated@@207)))
))))
(assert (forall (($generated@@208 T@U) ) (!  (=> (= ($generated@@28 $generated@@208) 0) (= $generated@@208 $generated@@29))
 :pattern ( ($generated@@28 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 Int) ) (!  (=> (= $generated@@210 0) (= ($generated@@35 $generated@@209 $generated@@210) $generated@@29))
 :pattern ( ($generated@@35 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@45 $generated@@43 $generated@@211 ($generated@@46 $generated@@212)) (forall (($generated@@213 Int) ) (!  (=> (and (<= 0 $generated@@213) (< $generated@@213 ($generated@@28 $generated@@211))) ($generated@@56 ($generated@@47 $generated@@211 $generated@@213) $generated@@212))
 :pattern ( ($generated@@47 $generated@@211 $generated@@213))
)))
 :pattern ( ($generated@@45 $generated@@43 $generated@@211 ($generated@@46 $generated@@212)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 (T@U) Bool)
(declare-fun $generated@@222 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@223  (=> (= $generated@@214 ($generated@@121 $generated@@215 $generated@@216 $generated@@0 false)) (=> (and (= $generated@@217 ($generated@@36 $generated@@218 ($generated@@31 $generated@@29 ($generated@@70 $generated@@43 $generated@@219)))) ($generated@@19 $generated@@43 $generated@@217 ($generated@@46 ($generated@@46 $generated@@20)) $generated@@216)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (> ($generated@@28 $generated@@217) 0)) (=> (and ($generated@@44 ($generated@@46 $generated@@20) $generated@@217) ($generated@@44 ($generated@@46 $generated@@20) $generated@@217)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@65 ($generated@@69 $generated@@43 ($generated@@41 ($generated@@46 $generated@@20) $generated@@217)) $generated@@219)) (=> ($generated@@65 ($generated@@69 $generated@@43 ($generated@@41 ($generated@@46 $generated@@20) $generated@@217)) $generated@@219) (=> ($generated@@19 $generated@@43 $generated@@218 ($generated@@46 ($generated@@46 $generated@@20)) $generated@@216) (=> (and ($generated@@91 $generated@@20 $generated@@218) ($generated@@19 $generated@@43 $generated@@217 ($generated@@46 ($generated@@46 $generated@@20)) $generated@@216)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (> ($generated@@28 $generated@@217) 0)) (=> ($generated@@44 ($generated@@46 $generated@@20) $generated@@217) (=> (and ($generated@@19 $generated@@43 $generated@@218 ($generated@@46 ($generated@@46 $generated@@20)) $generated@@216) ($generated@@91 $generated@@20 $generated@@218)) (=> (and (and (and ($generated@@91 $generated@@20 $generated@@218) ($generated@@44 ($generated@@46 $generated@@20) $generated@@217)) ($generated@@91 $generated@@20 $generated@@218)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@65 ($generated@@36 ($generated@@23 $generated@@20 ($generated@@24 ($generated@@24 $generated@@220)) $generated@@218) ($generated@@69 $generated@@43 ($generated@@41 ($generated@@46 $generated@@20) $generated@@217))) ($generated@@36 ($generated@@23 $generated@@20 ($generated@@24 ($generated@@24 $generated@@220)) $generated@@218) $generated@@219))))))))))))))))
(let (($generated@@224  (=> (and ($generated@@95 $generated@@216) ($generated@@221 $generated@@216)) (=> (and (and ($generated@@45 $generated@@43 $generated@@218 ($generated@@46 ($generated@@46 $generated@@20))) ($generated@@19 $generated@@43 $generated@@218 ($generated@@46 ($generated@@46 $generated@@20)) $generated@@216)) (and ($generated@@45 $generated@@43 $generated@@219 ($generated@@46 $generated@@20)) ($generated@@19 $generated@@43 $generated@@219 ($generated@@46 $generated@@20) $generated@@216))) (=> (and (and (and ($generated@@45 $generated@@43 $generated@@222 ($generated@@46 ($generated@@46 $generated@@20))) ($generated@@19 $generated@@43 $generated@@222 ($generated@@46 ($generated@@46 $generated@@20)) $generated@@216)) true) (and (= 1 $generated@@40) (= (ControlFlow 0 6) 2))) $generated@@223)))))
$generated@@224)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
