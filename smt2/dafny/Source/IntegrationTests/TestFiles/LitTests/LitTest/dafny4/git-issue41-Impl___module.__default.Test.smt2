(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 (T@U T@U T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@U Int) T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U Int) T@U)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@128 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@T T@T) T@T)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@195 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@3 $generated@@23) 3))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> (or ($generated@@21 $generated@@26 $generated@@27) (and (< 0 $generated@@19) (and ($generated@@22 $generated@@23 $generated@@27 ($generated@@24 $generated@@26)) (> ($generated@@25 $generated@@27) 0)))) (and (= ($generated@@25 ($generated@@20 $generated@@26 $generated@@27)) (- ($generated@@25 $generated@@27) 1)) ($generated@@22 $generated@@23 ($generated@@20 $generated@@26 $generated@@27) ($generated@@24 $generated@@26))))
 :pattern ( ($generated@@20 $generated@@26 $generated@@27))
))))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@28 $generated@@5 $generated@@30 $generated@@29 $generated@@31)
 :pattern ( ($generated@@28 $generated@@5 $generated@@30 $generated@@29 $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@32 $generated@@34 ($generated@@33 $generated@@35) $generated@@36) ($generated@@32 $generated@@34 $generated@@35 $generated@@36))
 :pattern ( ($generated@@32 $generated@@34 ($generated@@33 $generated@@35) $generated@@36))
)))
(assert (= ($generated@@25 $generated@@37) 0))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (and (<= 0 $generated@@42) (<= $generated@@42 ($generated@@25 $generated@@40))) (= ($generated@@38 ($generated@@39 $generated@@40 $generated@@41) $generated@@42) ($generated@@39 ($generated@@38 $generated@@40 $generated@@42) $generated@@41)))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@40 $generated@@41) $generated@@42))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (= $generated@@47 ($generated@@25 $generated@@45)) (and (= ($generated@@43 ($generated@@44 $generated@@45 $generated@@46) $generated@@47) $generated@@45) (= ($generated@@38 ($generated@@44 $generated@@45 $generated@@46) $generated@@47) $generated@@46)))
 :pattern ( ($generated@@43 ($generated@@44 $generated@@45 $generated@@46) $generated@@47))
 :pattern ( ($generated@@38 ($generated@@44 $generated@@45 $generated@@46) $generated@@47))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@50 $generated@@52 ($generated@@49 $generated@@23 $generated@@53)) (and (< 0 $generated@@19) (and ($generated@@22 $generated@@23 $generated@@53 ($generated@@24 $generated@@52)) (> ($generated@@25 ($generated@@49 $generated@@23 $generated@@53)) 0)))) (= ($generated@@48 $generated@@52 ($generated@@49 $generated@@23 $generated@@53)) ($generated@@51 ($generated@@49 $generated@@23 $generated@@53) (- ($generated@@25 ($generated@@49 $generated@@23 $generated@@53)) 1))))
 :weight 3
 :pattern ( ($generated@@48 $generated@@52 ($generated@@49 $generated@@23 $generated@@53)))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (or ($generated@@21 $generated@@54 ($generated@@49 $generated@@23 $generated@@55)) (and (< 0 $generated@@19) (and ($generated@@22 $generated@@23 $generated@@55 ($generated@@24 $generated@@54)) (> ($generated@@25 ($generated@@49 $generated@@23 $generated@@55)) 0)))) (= ($generated@@20 $generated@@54 ($generated@@49 $generated@@23 $generated@@55)) ($generated@@43 ($generated@@49 $generated@@23 $generated@@55) (- ($generated@@25 ($generated@@49 $generated@@23 $generated@@55)) 1))))
 :weight 3
 :pattern ( ($generated@@20 $generated@@54 ($generated@@49 $generated@@23 $generated@@55)))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 Int) ) (!  (=> (= $generated@@57 0) (= ($generated@@38 $generated@@56 $generated@@57) $generated@@56))
 :pattern ( ($generated@@38 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 Int) ) (! (= ($generated@@58 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@49 $generated@@61 $generated@@60) $generated@@60)
 :pattern ( ($generated@@49 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (and ($generated@@22 $generated@@23 $generated@@63 ($generated@@24 $generated@@65)) ($generated@@62 $generated@@64 $generated@@65)) ($generated@@22 $generated@@23 ($generated@@39 $generated@@63 $generated@@64) ($generated@@24 $generated@@65)))
 :pattern ( ($generated@@22 $generated@@23 ($generated@@39 $generated@@63 $generated@@64) ($generated@@24 $generated@@65)))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 Int) ($generated@@68 Int) ) (!  (=> (and (and (<= 0 $generated@@68) (< $generated@@68 $generated@@67)) (< $generated@@68 ($generated@@25 $generated@@66))) (= ($generated@@51 ($generated@@43 $generated@@66 $generated@@67) $generated@@68) ($generated@@51 $generated@@66 $generated@@68)))
 :weight 25
 :pattern ( ($generated@@51 ($generated@@43 $generated@@66 $generated@@67) $generated@@68))
 :pattern ( ($generated@@51 $generated@@66 $generated@@68) ($generated@@43 $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 Int) ) (!  (=> (and (<= 0 $generated@@70) (<= $generated@@70 ($generated@@25 $generated@@69))) (= ($generated@@25 ($generated@@38 $generated@@69 $generated@@70)) (- ($generated@@25 $generated@@69) $generated@@70)))
 :pattern ( ($generated@@25 ($generated@@38 $generated@@69 $generated@@70)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@71 $generated@@72 $generated@@73)  (and (= ($generated@@25 $generated@@72) ($generated@@25 $generated@@73)) (forall (($generated@@74 Int) ) (!  (=> (and (<= 0 $generated@@74) (< $generated@@74 ($generated@@25 $generated@@72))) (= ($generated@@51 $generated@@72 $generated@@74) ($generated@@51 $generated@@73 $generated@@74)))
 :pattern ( ($generated@@51 $generated@@72 $generated@@74))
 :pattern ( ($generated@@51 $generated@@73 $generated@@74))
))))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@75 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@75 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@25 ($generated@@39 $generated@@79 $generated@@80)) (+ 1 ($generated@@25 $generated@@79)))
 :pattern ( ($generated@@39 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@81 ($generated@@76 $generated@@85 $generated@@82) $generated@@83 $generated@@84) ($generated@@28 $generated@@85 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@81 ($generated@@76 $generated@@85 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 Int) ) (!  (=> (and (and (<= 0 $generated@@87) (<= 0 $generated@@88)) (< $generated@@88 (- ($generated@@25 $generated@@86) $generated@@87))) (= ($generated@@51 ($generated@@38 $generated@@86 $generated@@87) $generated@@88) ($generated@@51 $generated@@86 (+ $generated@@88 $generated@@87))))
 :weight 25
 :pattern ( ($generated@@51 ($generated@@38 $generated@@86 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@25 ($generated@@44 $generated@@89 $generated@@90)) (+ ($generated@@25 $generated@@89) ($generated@@25 $generated@@90)))
 :pattern ( ($generated@@25 ($generated@@44 $generated@@89 $generated@@90)))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@62 $generated@@91 $generated@@29) (and (= ($generated@@76 $generated@@5 ($generated@@75 $generated@@5 $generated@@91)) $generated@@91) ($generated@@22 $generated@@5 ($generated@@75 $generated@@5 $generated@@91) $generated@@29)))
 :pattern ( ($generated@@62 $generated@@91 $generated@@29))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 Int) ($generated@@94 T@U) ) (!  (and (=> (= $generated@@93 ($generated@@25 $generated@@92)) (= ($generated@@51 ($generated@@39 $generated@@92 $generated@@94) $generated@@93) $generated@@94)) (=> (or (not (= $generated@@93 ($generated@@25 $generated@@92))) (not true)) (= ($generated@@51 ($generated@@39 $generated@@92 $generated@@94) $generated@@93) ($generated@@51 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@51 ($generated@@39 $generated@@92 $generated@@94) $generated@@93))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@50 $generated@@95 $generated@@96) (and (< 0 $generated@@19) (and ($generated@@22 $generated@@23 $generated@@96 ($generated@@24 $generated@@95)) (> ($generated@@25 $generated@@96) 0)))) ($generated@@62 ($generated@@48 $generated@@95 $generated@@96) $generated@@95))
 :pattern ( ($generated@@48 $generated@@95 $generated@@96))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@97 $generated@@98 $generated@@100) (and (< 0 $generated@@19) ($generated@@22 $generated@@23 $generated@@100 ($generated@@24 ($generated@@24 $generated@@98))))) (and (=> (or (not (= ($generated@@25 $generated@@100) ($generated@@58 0))) (not true)) ($generated@@97 $generated@@98 ($generated@@38 $generated@@100 ($generated@@58 1)))) (= ($generated@@32 $generated@@98 ($generated@@33 $generated@@99) $generated@@100) (ite (= ($generated@@25 $generated@@100) ($generated@@58 0)) $generated@@37 ($generated@@44 ($generated@@75 $generated@@23 ($generated@@51 $generated@@100 ($generated@@58 0))) ($generated@@32 $generated@@98 $generated@@99 ($generated@@38 $generated@@100 ($generated@@58 1))))))))
 :pattern ( ($generated@@32 $generated@@98 ($generated@@33 $generated@@99) $generated@@100))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (and (or ($generated@@97 $generated@@103 $generated@@105) (and (< 0 $generated@@19) (and ($generated@@22 $generated@@23 $generated@@105 ($generated@@24 ($generated@@24 $generated@@103))) ($generated@@28 $generated@@23 $generated@@105 ($generated@@24 ($generated@@24 $generated@@103)) $generated@@102)))) ($generated@@101 $generated@@102)) ($generated@@28 $generated@@23 ($generated@@32 $generated@@103 $generated@@104 $generated@@105) ($generated@@24 $generated@@103) $generated@@102))
 :pattern ( ($generated@@28 $generated@@23 ($generated@@32 $generated@@103 $generated@@104 $generated@@105) ($generated@@24 $generated@@103) $generated@@102))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@71 $generated@@106 $generated@@107) (= $generated@@106 $generated@@107))
 :pattern ( ($generated@@71 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 Int) ) (!  (=> (and (<= 0 $generated@@109) (<= $generated@@109 ($generated@@25 $generated@@108))) (= ($generated@@25 ($generated@@43 $generated@@108 $generated@@109)) $generated@@109))
 :pattern ( ($generated@@25 ($generated@@43 $generated@@108 $generated@@109)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@62 ($generated@@76 $generated@@112 $generated@@110) $generated@@111) ($generated@@22 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@62 ($generated@@76 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (<= 0 ($generated@@25 $generated@@113))
 :pattern ( ($generated@@25 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@28 $generated@@23 $generated@@114 ($generated@@24 $generated@@115) $generated@@116) (forall (($generated@@117 Int) ) (!  (=> (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@25 $generated@@114))) ($generated@@81 ($generated@@51 $generated@@114 $generated@@117) $generated@@115 $generated@@116))
 :pattern ( ($generated@@51 $generated@@114 $generated@@117))
)))
 :pattern ( ($generated@@28 $generated@@23 $generated@@114 ($generated@@24 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@24 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@24 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@24 $generated@@121)) $generated)
 :pattern ( ($generated@@24 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@75 $generated@@123 ($generated@@76 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@76 $generated@@123 $generated@@122))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@124 $generated@@135 $generated@@136 $generated@@137 ($generated@@131 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@140 $generated@@141) $generated@@138)
 :weight 0
)) (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@124 $generated@@142 $generated@@143 $generated@@144 ($generated@@131 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@124 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@124 $generated@@151 $generated@@152 $generated@@153 ($generated@@131 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))) (= ($generated@@3 $generated@@125) 4)) (= ($generated@@3 $generated@@126) 5)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@128 $generated@@160 $generated@@161 ($generated@@132 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@162) $generated@@164) $generated@@162)
 :weight 0
))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@169 $generated@@170) (= ($generated@@128 $generated@@165 $generated@@166 ($generated@@132 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@167) $generated@@170) ($generated@@128 $generated@@165 $generated@@166 $generated@@168 $generated@@170)))
 :weight 0
))) (= ($generated@@3 $generated@@129) 6)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ) (= ($generated@@3 ($generated@@130 $generated@@171 $generated@@172)) 7))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (! (= ($generated@@133 ($generated@@130 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@130 $generated@@173 $generated@@174))
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@134 ($generated@@130 $generated@@175 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@130 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Bool) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@8 ($generated@@124 $generated@@125 $generated@@126 $generated@@4 ($generated@@127 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))  (=> (and (or (not (= $generated@@181 $generated@@177)) (not true)) ($generated@@8 ($generated@@75 $generated@@4 ($generated@@128 $generated@@126 $generated@@129 ($generated@@128 $generated@@125 ($generated@@130 $generated@@126 $generated@@129) $generated@@178 $generated@@181) $generated@@179)))) $generated@@180))
 :pattern ( ($generated@@124 $generated@@125 $generated@@126 $generated@@4 ($generated@@127 $generated@@177 $generated@@178 $generated@@179 $generated@@180) $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (and (= ($generated@@183 ($generated@@39 $generated@@185 $generated@@186)) $generated@@185) (= ($generated@@184 ($generated@@39 $generated@@185 $generated@@186)) $generated@@186))
 :pattern ( ($generated@@39 $generated@@185 $generated@@186))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (or ($generated@@97 $generated@@187 $generated@@189) (and (< 0 $generated@@19) ($generated@@22 $generated@@23 $generated@@189 ($generated@@24 ($generated@@24 $generated@@187))))) ($generated@@22 $generated@@23 ($generated@@32 $generated@@187 $generated@@188 $generated@@189) ($generated@@24 $generated@@187)))
 :pattern ( ($generated@@32 $generated@@187 $generated@@188 $generated@@189))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@62 $generated@@190 ($generated@@24 $generated@@191)) (and (= ($generated@@76 $generated@@23 ($generated@@75 $generated@@23 $generated@@190)) $generated@@190) ($generated@@22 $generated@@23 ($generated@@75 $generated@@23 $generated@@190) ($generated@@24 $generated@@191))))
 :pattern ( ($generated@@62 $generated@@190 ($generated@@24 $generated@@191)))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (or ($generated@@50 $generated@@193 $generated@@194) (and (< 0 $generated@@19) (and (and ($generated@@22 $generated@@23 $generated@@194 ($generated@@24 $generated@@193)) ($generated@@28 $generated@@23 $generated@@194 ($generated@@24 $generated@@193) $generated@@192)) (> ($generated@@25 $generated@@194) 0)))) ($generated@@101 $generated@@192)) ($generated@@81 ($generated@@48 $generated@@193 $generated@@194) $generated@@193 $generated@@192))
 :pattern ( ($generated@@81 ($generated@@48 $generated@@193 $generated@@194) $generated@@193 $generated@@192))
))))
(assert (= ($generated@@120 $generated@@29) $generated@@1))
(assert (= ($generated@@195 $generated@@29) $generated@@2))
(assert (forall (($generated@@196 T@U) ($generated@@197 Int) ($generated@@198 Int) ) (!  (=> (and (and (<= 0 $generated@@197) (<= $generated@@197 $generated@@198)) (< $generated@@198 ($generated@@25 $generated@@196))) (= ($generated@@51 ($generated@@38 $generated@@196 $generated@@197) (- $generated@@198 $generated@@197)) ($generated@@51 $generated@@196 $generated@@198)))
 :weight 25
 :pattern ( ($generated@@51 $generated@@196 $generated@@198) ($generated@@38 $generated@@196 $generated@@197))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> (or ($generated@@50 $generated@@199 $generated@@200) (and (< 0 $generated@@19) (and ($generated@@22 $generated@@23 $generated@@200 ($generated@@24 $generated@@199)) (> ($generated@@25 $generated@@200) 0)))) (= ($generated@@48 $generated@@199 $generated@@200) ($generated@@51 $generated@@200 (- ($generated@@25 $generated@@200) 1))))
 :pattern ( ($generated@@48 $generated@@199 $generated@@200))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (or ($generated@@21 $generated@@201 $generated@@202) (and (< 0 $generated@@19) (and ($generated@@22 $generated@@23 $generated@@202 ($generated@@24 $generated@@201)) (> ($generated@@25 $generated@@202) 0)))) (= ($generated@@20 $generated@@201 $generated@@202) ($generated@@43 $generated@@202 (- ($generated@@25 $generated@@202) 1))))
 :pattern ( ($generated@@20 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 Int) ($generated@@205 Int) ) (!  (=> (and (and (<= 0 $generated@@204) (<= 0 $generated@@205)) (<= (+ $generated@@204 $generated@@205) ($generated@@25 $generated@@203))) (= ($generated@@38 ($generated@@38 $generated@@203 $generated@@204) $generated@@205) ($generated@@38 $generated@@203 (+ $generated@@204 $generated@@205))))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@203 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 Int) ) (!  (and (=> (< $generated@@208 ($generated@@25 $generated@@206)) (= ($generated@@51 ($generated@@44 $generated@@206 $generated@@207) $generated@@208) ($generated@@51 $generated@@206 $generated@@208))) (=> (<= ($generated@@25 $generated@@206) $generated@@208) (= ($generated@@51 ($generated@@44 $generated@@206 $generated@@207) $generated@@208) ($generated@@51 $generated@@207 (- $generated@@208 ($generated@@25 $generated@@206))))))
 :pattern ( ($generated@@51 ($generated@@44 $generated@@206 $generated@@207) $generated@@208))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (or ($generated@@21 $generated@@210 $generated@@211) (and (< 0 $generated@@19) (and (and ($generated@@22 $generated@@23 $generated@@211 ($generated@@24 $generated@@210)) ($generated@@28 $generated@@23 $generated@@211 ($generated@@24 $generated@@210) $generated@@209)) (> ($generated@@25 $generated@@211) 0)))) ($generated@@101 $generated@@209)) ($generated@@28 $generated@@23 ($generated@@20 $generated@@210 $generated@@211) ($generated@@24 $generated@@210) $generated@@209))
 :pattern ( ($generated@@28 $generated@@23 ($generated@@20 $generated@@210 $generated@@211) ($generated@@24 $generated@@210) $generated@@209))
))))
(assert (forall (($generated@@212 T@U) ) (! (= ($generated@@22 $generated@@5 $generated@@212 $generated@@29)  (and (<= ($generated@@58 0) ($generated@@10 $generated@@212)) (< ($generated@@10 $generated@@212) 4294967296)))
 :pattern ( ($generated@@22 $generated@@5 $generated@@212 $generated@@29))
)))
(assert (forall (($generated@@213 Int) ) (! (= ($generated@@76 $generated@@5 ($generated@@9 ($generated@@58 $generated@@213))) ($generated@@49 $generated@@129 ($generated@@76 $generated@@5 ($generated@@9 $generated@@213))))
 :pattern ( ($generated@@76 $generated@@5 ($generated@@9 ($generated@@58 $generated@@213))))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@T) ) (! (= ($generated@@76 $generated@@215 ($generated@@49 $generated@@215 $generated@@214)) ($generated@@49 $generated@@129 ($generated@@76 $generated@@215 $generated@@214)))
 :pattern ( ($generated@@76 $generated@@215 ($generated@@49 $generated@@215 $generated@@214)))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (or ($generated@@97 $generated@@216 ($generated@@49 $generated@@23 $generated@@218)) (and (< 0 $generated@@19) ($generated@@22 $generated@@23 $generated@@218 ($generated@@24 ($generated@@24 $generated@@216))))) (and (=> (or (not (= ($generated@@25 ($generated@@49 $generated@@23 $generated@@218)) ($generated@@58 0))) (not true)) ($generated@@97 $generated@@216 ($generated@@49 $generated@@23 ($generated@@38 ($generated@@49 $generated@@23 $generated@@218) ($generated@@58 1))))) (= ($generated@@32 $generated@@216 ($generated@@33 $generated@@217) ($generated@@49 $generated@@23 $generated@@218)) (ite (= ($generated@@25 ($generated@@49 $generated@@23 $generated@@218)) ($generated@@58 0)) $generated@@37 ($generated@@44 ($generated@@75 $generated@@23 ($generated@@51 ($generated@@49 $generated@@23 $generated@@218) ($generated@@58 0))) ($generated@@32 $generated@@216 ($generated@@33 $generated@@217) ($generated@@49 $generated@@23 ($generated@@38 ($generated@@49 $generated@@23 $generated@@218) ($generated@@58 1)))))))))
 :weight 3
 :pattern ( ($generated@@32 $generated@@216 ($generated@@33 $generated@@217) ($generated@@49 $generated@@23 $generated@@218)))
))))
(assert (forall (($generated@@219 T@U) ) (!  (=> (= ($generated@@25 $generated@@219) 0) (= $generated@@219 $generated@@37))
 :pattern ( ($generated@@25 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 Int) ) (!  (=> (= $generated@@221 0) (= ($generated@@43 $generated@@220 $generated@@221) $generated@@37))
 :pattern ( ($generated@@43 $generated@@220 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@222 ($generated@@24 $generated@@223)) (forall (($generated@@224 Int) ) (!  (=> (and (<= 0 $generated@@224) (< $generated@@224 ($generated@@25 $generated@@222))) ($generated@@62 ($generated@@51 $generated@@222 $generated@@224) $generated@@223))
 :pattern ( ($generated@@51 $generated@@222 $generated@@224))
)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@222 ($generated@@24 $generated@@223)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@237 true))
(let (($generated@@238  (=> (and (and ($generated@@28 $generated@@23 $generated@@225 ($generated@@24 ($generated@@24 $generated@@29)) $generated@@226) ($generated@@97 $generated@@29 $generated@@225)) (and ($generated@@97 $generated@@29 $generated@@225) (= $generated@@227 $generated@@29))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (> ($generated@@25 $generated@@225) 0)) (=> (> ($generated@@25 $generated@@225) 0) (=> (and ($generated@@101 $generated@@228) ($generated@@229 $generated@@228)) (=> (and (and (and ($generated@@97 $generated@@227 $generated@@225) (and (and ($generated@@21 ($generated@@24 $generated@@227) $generated@@225) ($generated@@97 $generated@@227 ($generated@@20 ($generated@@24 $generated@@227) $generated@@225))) ($generated@@50 ($generated@@24 $generated@@227) $generated@@225))) ($generated@@71 ($generated@@32 $generated@@227 ($generated@@33 ($generated@@33 $generated@@230)) $generated@@225) ($generated@@44 ($generated@@32 $generated@@227 ($generated@@33 ($generated@@33 $generated@@230)) ($generated@@20 ($generated@@24 $generated@@227) $generated@@225)) ($generated@@75 $generated@@23 ($generated@@48 ($generated@@24 $generated@@227) $generated@@225))))) (and (= $generated@@226 $generated@@228) ($generated@@28 $generated@@23 $generated@@225 ($generated@@24 ($generated@@24 $generated@@29)) $generated@@228))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (> ($generated@@25 $generated@@225) 0)) (=> ($generated@@21 ($generated@@24 $generated@@29) $generated@@225) (=> (and (and (= $generated@@231 ($generated@@20 ($generated@@24 $generated@@29) $generated@@225)) ($generated@@28 $generated@@23 $generated@@231 ($generated@@24 ($generated@@24 $generated@@29)) $generated@@228)) (and ($generated@@97 $generated@@29 ($generated@@20 ($generated@@24 $generated@@29) $generated@@225)) ($generated@@28 $generated@@23 $generated@@225 ($generated@@24 ($generated@@24 $generated@@29)) $generated@@228))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (> ($generated@@25 $generated@@225) 0)) (=> ($generated@@50 ($generated@@24 $generated@@29) $generated@@225) (=> (and (and (and ($generated@@21 ($generated@@24 $generated@@29) $generated@@225) ($generated@@97 $generated@@29 ($generated@@20 ($generated@@24 $generated@@29) $generated@@225))) ($generated@@50 ($generated@@24 $generated@@29) $generated@@225)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@71 ($generated@@32 $generated@@29 ($generated@@33 ($generated@@33 $generated@@230)) $generated@@225) ($generated@@44 ($generated@@32 $generated@@29 ($generated@@33 ($generated@@33 $generated@@230)) ($generated@@20 ($generated@@24 $generated@@29) $generated@@225)) ($generated@@75 $generated@@23 ($generated@@48 ($generated@@24 $generated@@29) $generated@@225)))))))))))))))))
(let (($generated@@239 true))
(let (($generated@@240  (=> (and (= $generated@@232 ($generated@@127 $generated@@233 $generated@@226 $generated@@0 false)) (= $generated@@225 ($generated@@44 $generated@@234 ($generated@@39 $generated@@37 ($generated@@76 $generated@@23 $generated@@235))))) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@239) (=> (= (ControlFlow 0 8) 3) $generated@@238)) (=> (= (ControlFlow 0 8) 7) $generated@@237)))))
(let (($generated@@241  (=> (and ($generated@@101 $generated@@226) ($generated@@229 $generated@@226)) (=> (and (and ($generated@@22 $generated@@23 $generated@@234 ($generated@@24 ($generated@@24 $generated@@29))) ($generated@@28 $generated@@23 $generated@@234 ($generated@@24 ($generated@@24 $generated@@29)) $generated@@226)) (and ($generated@@22 $generated@@23 $generated@@235 ($generated@@24 $generated@@29)) ($generated@@28 $generated@@23 $generated@@235 ($generated@@24 $generated@@29) $generated@@226))) (=> (and (and (and ($generated@@22 $generated@@23 $generated@@236 ($generated@@24 ($generated@@24 $generated@@29))) ($generated@@28 $generated@@23 $generated@@236 ($generated@@24 ($generated@@24 $generated@@29)) $generated@@226)) true) (and (= 2 $generated@@19) (= (ControlFlow 0 9) 8))) $generated@@240)))))
$generated@@241))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
