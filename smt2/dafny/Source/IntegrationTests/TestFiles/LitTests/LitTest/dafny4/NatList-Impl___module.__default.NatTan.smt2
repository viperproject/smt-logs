(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (Int) Int)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U) Bool)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@117 (T@U) Int)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@27) 3))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@28 ($generated@@26 $generated@@27 $generated@@37)) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@37 ($generated@@30 $generated)))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@37)))))) (let (($generated@@38 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@37)))))
(let (($generated@@39 ($generated@@33 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 ($generated@@26 $generated@@27 $generated@@37)))))))
 (=> (<= ($generated@@33 0) $generated@@39) ($generated@@28 $generated@@38))))) (= ($generated@@24 ($generated@@25 $generated@@36) ($generated@@26 $generated@@27 $generated@@37)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@37)) true (let (($generated@@40 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@37)))))
(let (($generated@@41 ($generated@@33 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 ($generated@@26 $generated@@27 $generated@@37)))))))
 (and (<= ($generated@@33 0) $generated@@41) ($generated@@24 ($generated@@25 $generated@@36) $generated@@40))))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@25 $generated@@36) ($generated@@26 $generated@@27 $generated@@37)))
))))
(assert (= ($generated@@42 $generated@@43) $generated@@3))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@45 $generated@@47) ($generated@@44 $generated@@27 $generated@@43 ($generated@@30 $generated@@46) $generated@@47))
 :pattern ( ($generated@@44 $generated@@27 $generated@@43 ($generated@@30 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ) (! ($generated@@29 $generated@@27 $generated@@43 ($generated@@30 $generated@@48))
 :pattern ( ($generated@@29 $generated@@27 $generated@@43 ($generated@@30 $generated@@48)))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@33 $generated@@49) $generated@@49)
 :pattern ( ($generated@@33 $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@26 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@26 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@29 $generated@@27 ($generated@@52 $generated@@55 $generated@@56) ($generated@@30 $generated@@54))  (and ($generated@@53 $generated@@55 $generated@@54) ($generated@@29 $generated@@27 $generated@@56 ($generated@@30 $generated@@54))))
 :pattern ( ($generated@@29 $generated@@27 ($generated@@52 $generated@@55 $generated@@56) ($generated@@30 $generated@@54)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@58 ($generated@@26 $generated@@27 $generated@@61)) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@61 ($generated@@30 $generated)))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@61)))))) (let (($generated@@62 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@61)))))
($generated@@58 $generated@@62))) (= ($generated@@57 ($generated@@25 $generated@@60) ($generated@@26 $generated@@27 $generated@@61)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@61)) $generated@@43 (let (($generated@@63 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@61)))))
(let (($generated@@64 ($generated@@33 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 ($generated@@26 $generated@@27 $generated@@61)))))))
($generated@@26 $generated@@27 ($generated@@52 ($generated@@59 $generated@@8 ($generated@@12 ($generated@@33 (- 0 $generated@@64)))) ($generated@@26 $generated@@27 ($generated@@57 ($generated@@25 $generated@@60) $generated@@63))))))))))
 :weight 3
 :pattern ( ($generated@@57 ($generated@@25 $generated@@60) ($generated@@26 $generated@@27 $generated@@61)))
))))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@31 $generated@@65) (= ($generated@@42 $generated@@65) $generated@@3))
 :pattern ( ($generated@@31 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@42 $generated@@67) $generated@@4))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@59 $generated@@69 ($generated@@34 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@34 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@66 $generated@@70) (exists (($generated@@71 T@U) ($generated@@72 T@U) ) (= $generated@@70 ($generated@@52 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@66 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@31 $generated@@73) (= $generated@@73 $generated@@43))
 :pattern ( ($generated@@31 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@74 ($generated@@59 $generated@@78 $generated@@75) $generated@@76 $generated@@77) ($generated@@44 $generated@@78 $generated@@75 $generated@@76 $generated@@77))
 :pattern ( ($generated@@74 ($generated@@59 $generated@@78 $generated@@75) $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (!  (and (= ($generated@@22 ($generated@@30 $generated@@80)) $generated@@2) (= ($generated@@79 ($generated@@30 $generated@@80)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@81 $generated@@82) (or ($generated@@31 $generated@@82) ($generated@@66 $generated@@82)))
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@29 $generated@@27 $generated@@84 ($generated@@30 $generated@@83)) (or ($generated@@31 $generated@@84) ($generated@@66 $generated@@84)))
 :pattern ( ($generated@@66 $generated@@84) ($generated@@29 $generated@@27 $generated@@84 ($generated@@30 $generated@@83)))
 :pattern ( ($generated@@31 $generated@@84) ($generated@@29 $generated@@27 $generated@@84 ($generated@@30 $generated@@83)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@58 $generated@@86) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@86 ($generated@@30 $generated)))) (and (=> (not ($generated@@31 $generated@@86)) (let (($generated@@87 ($generated@@32 $generated@@86)))
($generated@@58 $generated@@87))) (= ($generated@@57 ($generated@@25 $generated@@85) $generated@@86) (ite ($generated@@31 $generated@@86) $generated@@43 (let (($generated@@88 ($generated@@32 $generated@@86)))
(let (($generated@@89 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 $generated@@86)))))
($generated@@52 ($generated@@59 $generated@@8 ($generated@@12 (- 0 $generated@@89))) ($generated@@57 $generated@@85 $generated@@88))))))))
 :pattern ( ($generated@@57 ($generated@@25 $generated@@85) $generated@@86))
))))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@53 $generated@@90 $generated) (and (= ($generated@@59 $generated@@8 ($generated@@34 $generated@@8 $generated@@90)) $generated@@90) ($generated@@29 $generated@@8 ($generated@@34 $generated@@8 $generated@@90) $generated)))
 :pattern ( ($generated@@53 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@91) $generated@@92) ($generated@@24 $generated@@91 $generated@@92))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@93 ($generated@@25 $generated@@94) $generated@@95) ($generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@93 ($generated@@25 $generated@@94) $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@53 ($generated@@59 $generated@@98 $generated@@96) $generated@@97) ($generated@@29 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@53 ($generated@@59 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@42 ($generated@@52 $generated@@99 $generated@@100)) $generated@@4)
 :pattern ( ($generated@@52 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@35 ($generated@@52 $generated@@101 $generated@@102)) $generated@@101)
 :pattern ( ($generated@@52 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@32 ($generated@@52 $generated@@103 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@52 $generated@@103 $generated@@104))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or ($generated@@105 $generated@@107) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@107 ($generated@@30 $generated)))) (and (=> (not ($generated@@31 $generated@@107)) (let (($generated@@108 ($generated@@32 $generated@@107)))
(let (($generated@@109 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 $generated@@107)))))
 (=> (<= $generated@@109 ($generated@@33 0)) ($generated@@105 $generated@@108))))) (= ($generated@@93 ($generated@@25 $generated@@106) $generated@@107) (ite ($generated@@31 $generated@@107) true (let (($generated@@110 ($generated@@32 $generated@@107)))
(let (($generated@@111 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 $generated@@107)))))
 (and (<= $generated@@111 ($generated@@33 0)) ($generated@@93 $generated@@106 $generated@@110))))))))
 :pattern ( ($generated@@93 ($generated@@25 $generated@@106) $generated@@107))
))))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 ($generated@@30 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@30 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@34 $generated@@115 ($generated@@59 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@59 $generated@@115 $generated@@114))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (< ($generated@@116 $generated@@118) ($generated@@117 ($generated@@52 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@52 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (< ($generated@@117 $generated@@121) ($generated@@117 ($generated@@52 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@52 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@57 ($generated@@25 $generated@@122) $generated@@123) ($generated@@57 $generated@@122 $generated@@123))
 :pattern ( ($generated@@57 ($generated@@25 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@45 $generated@@126) (and ($generated@@66 $generated@@124) ($generated@@44 $generated@@27 $generated@@124 ($generated@@30 $generated@@125) $generated@@126))) ($generated@@74 ($generated@@35 $generated@@124) $generated@@125 $generated@@126))
 :pattern ( ($generated@@74 ($generated@@35 $generated@@124) $generated@@125 $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@127 $generated@@138 $generated@@139 $generated@@140 ($generated@@134 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@143 $generated@@144) $generated@@141)
 :weight 0
)) (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@127 $generated@@145 $generated@@146 $generated@@147 ($generated@@134 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@127 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@127 $generated@@154 $generated@@155 $generated@@156 ($generated@@134 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)))) (= ($generated@@6 $generated@@128) 4)) (= ($generated@@6 $generated@@129) 5)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@131 $generated@@163 $generated@@164 ($generated@@135 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@165) $generated@@167) $generated@@165)
 :weight 0
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@172 $generated@@173) (= ($generated@@131 $generated@@168 $generated@@169 ($generated@@135 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@170) $generated@@173) ($generated@@131 $generated@@168 $generated@@169 $generated@@171 $generated@@173)))
 :weight 0
))) (= ($generated@@6 $generated@@132) 6)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@6 ($generated@@133 $generated@@174 $generated@@175)) 7))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@136 ($generated@@133 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@133 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@137 ($generated@@133 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@133 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@11 ($generated@@127 $generated@@128 $generated@@129 $generated@@7 ($generated@@130 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@11 ($generated@@34 $generated@@7 ($generated@@131 $generated@@129 $generated@@132 ($generated@@131 $generated@@128 ($generated@@133 $generated@@129 $generated@@132) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129 $generated@@7 ($generated@@130 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@116 ($generated@@59 $generated@@27 $generated@@186)) ($generated@@117 $generated@@186))
 :pattern ( ($generated@@116 ($generated@@59 $generated@@27 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@53 $generated@@188 ($generated@@30 $generated@@187)) (and (= ($generated@@59 $generated@@27 ($generated@@34 $generated@@27 $generated@@188)) $generated@@188) ($generated@@29 $generated@@27 ($generated@@34 $generated@@27 $generated@@188) ($generated@@30 $generated@@187))))
 :pattern ( ($generated@@53 $generated@@188 ($generated@@30 $generated@@187)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (or ($generated@@28 $generated@@190) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@190 ($generated@@30 $generated)))) (and (=> (not ($generated@@31 $generated@@190)) (let (($generated@@191 ($generated@@32 $generated@@190)))
(let (($generated@@192 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 $generated@@190)))))
 (=> (<= ($generated@@33 0) $generated@@192) ($generated@@28 $generated@@191))))) (= ($generated@@24 ($generated@@25 $generated@@189) $generated@@190) (ite ($generated@@31 $generated@@190) true (let (($generated@@193 ($generated@@32 $generated@@190)))
(let (($generated@@194 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 $generated@@190)))))
 (and (<= ($generated@@33 0) $generated@@194) ($generated@@24 $generated@@189 $generated@@193))))))))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@189) $generated@@190))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@45 $generated@@197) (and ($generated@@66 $generated@@195) ($generated@@44 $generated@@27 $generated@@195 ($generated@@30 $generated@@196) $generated@@197))) ($generated@@44 $generated@@27 ($generated@@32 $generated@@195) ($generated@@30 $generated@@196) $generated@@197))
 :pattern ( ($generated@@44 $generated@@27 ($generated@@32 $generated@@195) ($generated@@30 $generated@@196) $generated@@197))
)))
(assert (= $generated@@43 ($generated@@26 $generated@@27 $generated@@43)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@52 ($generated@@26 $generated@@132 $generated@@198) ($generated@@26 $generated@@27 $generated@@199)) ($generated@@26 $generated@@27 ($generated@@52 $generated@@198 $generated@@199)))
 :pattern ( ($generated@@52 ($generated@@26 $generated@@132 $generated@@198) ($generated@@26 $generated@@27 $generated@@199)))
)))
(assert (forall (($generated@@200 Int) ) (! (= ($generated@@59 $generated@@8 ($generated@@12 ($generated@@33 $generated@@200))) ($generated@@26 $generated@@132 ($generated@@59 $generated@@8 ($generated@@12 $generated@@200))))
 :pattern ( ($generated@@59 $generated@@8 ($generated@@12 ($generated@@33 $generated@@200))))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@59 $generated@@202 ($generated@@26 $generated@@202 $generated@@201)) ($generated@@26 $generated@@132 ($generated@@59 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@59 $generated@@202 ($generated@@26 $generated@@202 $generated@@201)))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (or ($generated@@105 ($generated@@26 $generated@@27 $generated@@204)) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@204 ($generated@@30 $generated)))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@204)))))) (let (($generated@@205 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@204)))))
(let (($generated@@206 ($generated@@33 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 ($generated@@26 $generated@@27 $generated@@204)))))))
 (=> (<= $generated@@206 ($generated@@33 0)) ($generated@@105 $generated@@205))))) (= ($generated@@93 ($generated@@25 $generated@@203) ($generated@@26 $generated@@27 $generated@@204)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@204)) true (let (($generated@@207 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@204)))))
(let (($generated@@208 ($generated@@33 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 ($generated@@26 $generated@@27 $generated@@204)))))))
 (and (<= $generated@@208 ($generated@@33 0)) ($generated@@93 ($generated@@25 $generated@@203) $generated@@207))))))))
 :weight 3
 :pattern ( ($generated@@93 ($generated@@25 $generated@@203) ($generated@@26 $generated@@27 $generated@@204)))
))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (! ($generated@@44 $generated@@8 $generated@@210 $generated $generated@@209)
 :pattern ( ($generated@@44 $generated@@8 $generated@@210 $generated $generated@@209))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@45 $generated@@214) (= ($generated@@44 $generated@@27 ($generated@@52 $generated@@212 $generated@@213) ($generated@@30 $generated@@211) $generated@@214)  (and ($generated@@74 $generated@@212 $generated@@211 $generated@@214) ($generated@@44 $generated@@27 $generated@@213 ($generated@@30 $generated@@211) $generated@@214))))
 :pattern ( ($generated@@44 $generated@@27 ($generated@@52 $generated@@212 $generated@@213) ($generated@@30 $generated@@211) $generated@@214))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (or ($generated@@58 $generated@@216) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@216 ($generated@@30 $generated)))) ($generated@@29 $generated@@27 ($generated@@57 $generated@@215 $generated@@216) ($generated@@30 $generated)))
 :pattern ( ($generated@@57 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ) (! ($generated@@29 $generated@@8 $generated@@217 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@217 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@225  (=> (and (= $generated@@218 ($generated@@130 $generated@@219 $generated@@220 $generated@@1 false)) ($generated@@81 $generated@@221)) (=> (and (and ($generated@@45 $generated@@222) ($generated@@223 $generated@@222)) (and (= $generated@@220 $generated@@222) (forall (($generated@@226 T@U) ) (!  (=> (and (and ($generated@@29 $generated@@27 $generated@@226 ($generated@@30 $generated)) ($generated@@93 ($generated@@25 $generated@@224) $generated@@226)) (< ($generated@@117 $generated@@226) ($generated@@117 $generated@@221))) ($generated@@24 ($generated@@25 $generated@@224) ($generated@@57 ($generated@@25 $generated@@224) $generated@@226)))
 :pattern ( ($generated@@57 ($generated@@25 $generated@@224) $generated@@226))
 :pattern ( ($generated@@93 ($generated@@25 $generated@@224) $generated@@226))
)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@28 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (or ($generated@@24 ($generated@@25 $generated@@224) ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (=> ($generated@@31 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 true))))))) (=> (=> ($generated@@28 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (or ($generated@@24 ($generated@@25 $generated@@224) ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (=> ($generated@@31 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@28 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (or ($generated@@24 ($generated@@25 $generated@@224) ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (=> (not ($generated@@31 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221))) (let (($generated@@227 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 ($generated@@57 ($generated@@25 ($generated@@25 $generated@@224)) $generated@@221))))))
(<= ($generated@@33 0) $generated@@227)))))) (=> (=> ($generated@@28 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (or ($generated@@24 ($generated@@25 $generated@@224) ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (=> (not ($generated@@31 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221))) (let (($generated@@228 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 ($generated@@57 ($generated@@25 ($generated@@25 $generated@@224)) $generated@@221))))))
(<= ($generated@@33 0) $generated@@228))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@28 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (or ($generated@@24 ($generated@@25 $generated@@224) ($generated@@57 ($generated@@25 $generated@@224) $generated@@221)) (=> (not ($generated@@31 ($generated@@57 ($generated@@25 $generated@@224) $generated@@221))) (let (($generated@@229 ($generated@@32 ($generated@@57 ($generated@@25 ($generated@@25 $generated@@224)) $generated@@221))))
($generated@@24 ($generated@@25 ($generated@@25 $generated@@224)) $generated@@229))))))))))))))
(let (($generated@@230  (=> (and ($generated@@45 $generated@@220) ($generated@@223 $generated@@220)) (=> (and (and (and (and ($generated@@29 $generated@@27 $generated@@221 ($generated@@30 $generated)) ($generated@@44 $generated@@27 $generated@@221 ($generated@@30 $generated) $generated@@220)) ($generated@@81 $generated@@221)) (= 2 $generated@@23)) (and (and ($generated@@105 $generated@@221) (and ($generated@@93 ($generated@@25 $generated@@224) $generated@@221) (ite ($generated@@31 $generated@@221) true (let (($generated@@231 ($generated@@32 $generated@@221)))
(let (($generated@@232 ($generated@@13 ($generated@@34 $generated@@8 ($generated@@35 $generated@@221)))))
 (and (<= $generated@@232 ($generated@@33 0)) ($generated@@93 ($generated@@25 $generated@@224) $generated@@231))))))) (= (ControlFlow 0 5) 2))) $generated@@225))))
$generated@@230)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
