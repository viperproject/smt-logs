(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (Int) Int)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U Int) Bool)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@46 (T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@53 () Int)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U Int) Bool)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@U Int) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@79 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@83 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@T T@T) T@T)
(declare-fun $generated@@86 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@T) T@T)
(declare-fun $generated@@89 (T@T) T@T)
(declare-fun $generated@@140 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@1))
(assert (= ($generated@@23 $generated@@0) $generated@@2))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ) (! ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27)
 :pattern ( ($generated@@24 $generated@@9 $generated@@26 $generated@@25 $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) 0))
(assert (forall (($generated@@31 Int) ) (! (= ($generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@T) ) (! (= ($generated@@32 $generated@@34 $generated@@33) $generated@@33)
 :pattern ( ($generated@@32 $generated@@34 $generated@@33))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 ($generated@@35 $generated@@38 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@35 $generated@@38 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@39 $generated@@9 $generated@@40 $generated@@25) (<= ($generated@@30 0) ($generated@@14 $generated@@40)))
 :pattern ( ($generated@@39 $generated@@9 $generated@@40 $generated@@25))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 Int) ) (! (= ($generated@@41 ($generated@@42 $generated@@43) $generated@@44 $generated@@45) ($generated@@41 $generated@@43 $generated@@44 $generated@@45))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@43) $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@46 ($generated@@36 $generated@@50 $generated@@47) $generated@@48 $generated@@49) ($generated@@24 $generated@@50 $generated@@47 $generated@@48 $generated@@49))
 :pattern ( ($generated@@46 ($generated@@36 $generated@@50 $generated@@47) $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@51 $generated@@52 $generated@@25) (and (= ($generated@@36 $generated@@9 ($generated@@35 $generated@@9 $generated@@52)) $generated@@52) ($generated@@39 $generated@@9 ($generated@@35 $generated@@9 $generated@@52) $generated@@25)))
 :pattern ( ($generated@@51 $generated@@52 $generated@@25))
)))
(assert (= ($generated@@7 $generated@@54) 3))
(assert  (=> (<= 0 $generated@@53) (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 Int) ) (!  (=> (or ($generated@@55 ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 $generated@@60)) (and (< 0 $generated@@53) (and (and ($generated@@39 $generated@@54 $generated@@59 ($generated@@56 $generated@@0)) (<= ($generated@@30 0) $generated@@60)) (<= ($generated@@30 $generated@@60) ($generated@@28 ($generated@@32 $generated@@54 $generated@@59)))))) (and (=> (not ($generated@@12 ($generated@@32 $generated@@8 ($generated@@11 (< $generated@@60 2))))) (=> (< ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 (- $generated@@60 2))))) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 (- $generated@@60 1)))))) ($generated@@55 ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 (- $generated@@60 1))))) (= ($generated@@41 ($generated@@42 $generated@@58) ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 $generated@@60))  (or (< $generated@@60 2) (and (< ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 (- $generated@@60 2))))) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 (- $generated@@60 1)))))) ($generated@@41 ($generated@@42 $generated@@58) ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 (- $generated@@60 1))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@58) ($generated@@32 $generated@@54 $generated@@59) ($generated@@30 $generated@@60)))
))))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@51 $generated@@61 $generated@@0) (and (= ($generated@@36 $generated@@9 ($generated@@35 $generated@@9 $generated@@61)) $generated@@61) ($generated@@39 $generated@@9 ($generated@@35 $generated@@9 $generated@@61) $generated@@0)))
 :pattern ( ($generated@@51 $generated@@61 $generated@@0))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@51 $generated@@62 $generated) (and (= ($generated@@36 $generated@@8 ($generated@@35 $generated@@8 $generated@@62)) $generated@@62) ($generated@@39 $generated@@8 ($generated@@35 $generated@@8 $generated@@62) $generated)))
 :pattern ( ($generated@@51 $generated@@62 $generated))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@51 ($generated@@36 $generated@@65 $generated@@63) $generated@@64) ($generated@@39 $generated@@65 $generated@@63 $generated@@64))
 :pattern ( ($generated@@51 ($generated@@36 $generated@@65 $generated@@63) $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (<= 0 ($generated@@28 $generated@@66))
 :pattern ( ($generated@@28 $generated@@66))
)))
(assert  (=> (<= 0 $generated@@53) (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 Int) ) (!  (=> (or ($generated@@55 $generated@@68 $generated@@69) (and (< 0 $generated@@53) (and (and ($generated@@39 $generated@@54 $generated@@68 ($generated@@56 $generated@@0)) (<= ($generated@@30 0) $generated@@69)) (<= $generated@@69 ($generated@@28 $generated@@68))))) (and (=> (<= 2 $generated@@69) (=> (< ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 $generated@@68 (- $generated@@69 2)))) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 $generated@@68 (- $generated@@69 1))))) ($generated@@55 $generated@@68 (- $generated@@69 1)))) (= ($generated@@41 ($generated@@42 $generated@@67) $generated@@68 $generated@@69)  (or (< $generated@@69 2) (and (< ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 $generated@@68 (- $generated@@69 2)))) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 $generated@@68 (- $generated@@69 1))))) ($generated@@41 $generated@@67 $generated@@68 (- $generated@@69 1)))))))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@67) $generated@@68 $generated@@69))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@24 $generated@@54 $generated@@70 ($generated@@56 $generated@@71) $generated@@72) (forall (($generated@@73 Int) ) (!  (=> (and (<= 0 $generated@@73) (< $generated@@73 ($generated@@28 $generated@@70))) ($generated@@46 ($generated@@57 $generated@@70 $generated@@73) $generated@@71 $generated@@72))
 :pattern ( ($generated@@57 $generated@@70 $generated@@73))
)))
 :pattern ( ($generated@@24 $generated@@54 $generated@@70 ($generated@@56 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@74 ($generated@@56 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@56 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@23 ($generated@@56 $generated@@76)) $generated@@3)
 :pattern ( ($generated@@56 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@35 $generated@@78 ($generated@@36 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@36 $generated@@78 $generated@@77))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@79 $generated@@90 $generated@@91 $generated@@92 ($generated@@86 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96 $generated@@93) $generated@@95 $generated@@96) $generated@@93)
 :weight 0
)) (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or (= $generated@@102 $generated@@104) (= ($generated@@79 $generated@@97 $generated@@98 $generated@@99 ($generated@@86 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@104 $generated@@105) ($generated@@79 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@104 $generated@@105)))
 :weight 0
)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@79 $generated@@106 $generated@@107 $generated@@108 ($generated@@86 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@113 $generated@@114) ($generated@@79 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@113 $generated@@114)))
 :weight 0
)))) (= ($generated@@7 $generated@@80) 4)) (= ($generated@@7 $generated@@81) 5)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@83 $generated@@115 $generated@@116 ($generated@@87 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@119) $generated@@117)
 :weight 0
))) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@124 $generated@@125) (= ($generated@@83 $generated@@120 $generated@@121 ($generated@@87 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@122) $generated@@125) ($generated@@83 $generated@@120 $generated@@121 $generated@@123 $generated@@125)))
 :weight 0
))) (= ($generated@@7 $generated@@84) 6)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (= ($generated@@7 ($generated@@85 $generated@@126 $generated@@127)) 7))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@88 ($generated@@85 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@85 $generated@@128 $generated@@129))
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (! (= ($generated@@89 ($generated@@85 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@85 $generated@@130 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 Bool) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@12 ($generated@@79 $generated@@80 $generated@@81 $generated@@8 ($generated@@82 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))  (=> (and (or (not (= $generated@@136 $generated@@132)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@83 $generated@@81 $generated@@84 ($generated@@83 $generated@@80 ($generated@@85 $generated@@81 $generated@@84) $generated@@133 $generated@@136) $generated@@134)))) $generated@@135))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81 $generated@@8 ($generated@@82 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@51 $generated@@138 ($generated@@56 $generated@@139)) (and (= ($generated@@36 $generated@@54 ($generated@@35 $generated@@54 $generated@@138)) $generated@@138) ($generated@@39 $generated@@54 ($generated@@35 $generated@@54 $generated@@138) ($generated@@56 $generated@@139))))
 :pattern ( ($generated@@51 $generated@@138 ($generated@@56 $generated@@139)))
)))
(assert (= ($generated@@23 $generated@@25) $generated@@5))
(assert (= ($generated@@140 $generated@@25) $generated@@6))
(assert (forall (($generated@@141 Int) ) (! (= ($generated@@36 $generated@@9 ($generated@@13 ($generated@@30 $generated@@141))) ($generated@@32 $generated@@84 ($generated@@36 $generated@@9 ($generated@@13 $generated@@141))))
 :pattern ( ($generated@@36 $generated@@9 ($generated@@13 ($generated@@30 $generated@@141))))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@36 $generated@@143 ($generated@@32 $generated@@143 $generated@@142)) ($generated@@32 $generated@@84 ($generated@@36 $generated@@143 $generated@@142)))
 :pattern ( ($generated@@36 $generated@@143 ($generated@@32 $generated@@143 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= ($generated@@28 $generated@@144) 0) (= $generated@@144 $generated@@29))
 :pattern ( ($generated@@28 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! ($generated@@24 $generated@@9 $generated@@146 $generated@@0 $generated@@145)
 :pattern ( ($generated@@24 $generated@@9 $generated@@146 $generated@@0 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! ($generated@@24 $generated@@8 $generated@@148 $generated $generated@@147)
 :pattern ( ($generated@@24 $generated@@8 $generated@@148 $generated $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@39 $generated@@54 $generated@@149 ($generated@@56 $generated@@150)) (forall (($generated@@151 Int) ) (!  (=> (and (<= 0 $generated@@151) (< $generated@@151 ($generated@@28 $generated@@149))) ($generated@@51 ($generated@@57 $generated@@149 $generated@@151) $generated@@150))
 :pattern ( ($generated@@57 $generated@@149 $generated@@151))
)))
 :pattern ( ($generated@@39 $generated@@54 $generated@@149 ($generated@@56 $generated@@150)))
)))
(assert (forall (($generated@@152 T@U) ) (! ($generated@@39 $generated@@9 $generated@@152 $generated@@0)
 :pattern ( ($generated@@39 $generated@@9 $generated@@152 $generated@@0))
)))
(assert (forall (($generated@@153 T@U) ) (! ($generated@@39 $generated@@8 $generated@@153 $generated)
 :pattern ( ($generated@@39 $generated@@8 $generated@@153 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@163 true))
(let (($generated@@164  (=> (and (<= ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 $generated@@154 (- $generated@@155 1)))) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 $generated@@154 (- $generated@@155 2))))) (= (ControlFlow 0 9) 2)) $generated@@163)))
(let (($generated@@165  (=> (and (< ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 $generated@@154 (- $generated@@155 2)))) ($generated@@14 ($generated@@35 $generated@@9 ($generated@@57 $generated@@154 (- $generated@@155 1))))) ($generated@@24 $generated@@54 $generated@@154 ($generated@@56 $generated@@0) $generated@@156)) (and (=> (= (ControlFlow 0 4) (- 0 8)) ($generated@@39 $generated@@9 ($generated@@13 (- $generated@@155 1)) $generated@@25)) (=> ($generated@@39 $generated@@9 ($generated@@13 (- $generated@@155 1)) $generated@@25) (=> (and (= $generated@@157 (- $generated@@155 1)) ($generated@@24 $generated@@9 ($generated@@13 $generated@@157) $generated@@25 $generated@@156)) (and (=> (= (ControlFlow 0 4) (- 0 7)) (<= $generated@@157 ($generated@@28 $generated@@154))) (=> (<= $generated@@157 ($generated@@28 $generated@@154)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@155) (< ($generated@@158 $generated@@154) ($generated@@158 $generated@@154))) (= $generated@@157 $generated@@155))) (=> (or (or (<= 0 $generated@@155) (< ($generated@@158 $generated@@154) ($generated@@158 $generated@@154))) (= $generated@@157 $generated@@155)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (< ($generated@@158 $generated@@154) ($generated@@158 $generated@@154)) (and (= ($generated@@158 $generated@@154) ($generated@@158 $generated@@154)) (< $generated@@157 $generated@@155)))) (=> (or (< ($generated@@158 $generated@@154) ($generated@@158 $generated@@154)) (and (= ($generated@@158 $generated@@154) ($generated@@158 $generated@@154)) (< $generated@@157 $generated@@155))) (=> (and ($generated@@55 $generated@@154 (- $generated@@155 1)) (= (ControlFlow 0 4) 2)) $generated@@163)))))))))))))
(let (($generated@@166  (=> (<= 2 $generated@@155) (and (=> (= (ControlFlow 0 10) (- 0 12)) (and (<= 0 (- $generated@@155 2)) (< (- $generated@@155 2) ($generated@@28 $generated@@154)))) (=> (and (<= 0 (- $generated@@155 2)) (< (- $generated@@155 2) ($generated@@28 $generated@@154))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 (- $generated@@155 1)) (< (- $generated@@155 1) ($generated@@28 $generated@@154)))) (=> (and (<= 0 (- $generated@@155 1)) (< (- $generated@@155 1) ($generated@@28 $generated@@154))) (and (=> (= (ControlFlow 0 10) 4) $generated@@165) (=> (= (ControlFlow 0 10) 9) $generated@@164)))))))))
(let (($generated@@167  (=> (and (< $generated@@155 2) (= (ControlFlow 0 3) 2)) $generated@@163)))
(let (($generated@@168 true))
(let (($generated@@169  (=> (and (= $generated@@159 ($generated@@82 $generated@@160 $generated@@156 $generated@@4 false)) (<= $generated@@155 ($generated@@28 $generated@@154))) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@168) (=> (= (ControlFlow 0 13) 10) $generated@@166)) (=> (= (ControlFlow 0 13) 3) $generated@@167)))))
(let (($generated@@170  (=> (and ($generated@@161 $generated@@156) ($generated@@162 $generated@@156)) (=> (and (and ($generated@@39 $generated@@54 $generated@@154 ($generated@@56 $generated@@0)) (<= ($generated@@30 0) $generated@@155)) (and (= 0 $generated@@53) (= (ControlFlow 0 14) 13))) $generated@@169))))
$generated@@170)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
