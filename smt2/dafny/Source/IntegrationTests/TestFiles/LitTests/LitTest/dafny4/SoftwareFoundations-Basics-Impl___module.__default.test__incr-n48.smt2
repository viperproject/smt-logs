(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@162 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@164 () T@T)
(declare-fun $generated@@165 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@166 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@168 (T@T T@T) T@T)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@172 (T@T) T@T)
(declare-fun $generated@@222 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@228 (T@U) T@U)
(declare-fun $generated@@229 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@30) 3))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@28 $generated@@43) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@43 $generated@@31))) (and (=> (not ($generated@@32 $generated@@43)) (and (=> ($generated@@33 $generated@@43) (let (($generated@@44 ($generated@@34 $generated@@43)))
 (and ($generated@@28 $generated@@44) (let (($generated@@45 ($generated@@26 $generated@@42 $generated@@44)))
($generated@@35 $generated@@45 $generated@@45))))) (=> (not ($generated@@33 $generated@@43)) (let (($generated@@46 ($generated@@36 $generated@@43)))
 (and ($generated@@28 $generated@@46) (let (($generated@@47 ($generated@@26 $generated@@42 $generated@@46)))
 (and ($generated@@35 $generated@@47 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))) ($generated@@35 $generated@@47 ($generated@@40 ($generated@@27 $generated@@41) $generated@@47 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))))))))))) (= ($generated@@26 ($generated@@27 $generated@@42) $generated@@43) (ite ($generated@@32 $generated@@43) $generated@@39 (ite ($generated@@33 $generated@@43) (let (($generated@@48 ($generated@@34 $generated@@43)))
(let (($generated@@49 ($generated@@26 $generated@@42 $generated@@48)))
($generated@@40 ($generated@@27 $generated@@41) $generated@@49 $generated@@49))) (let (($generated@@50 ($generated@@36 $generated@@43)))
(let (($generated@@51 ($generated@@26 $generated@@42 $generated@@50)))
($generated@@40 ($generated@@27 $generated@@41) $generated@@51 ($generated@@40 ($generated@@27 $generated@@41) $generated@@51 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@42) $generated@@43))
))))
(assert (= ($generated@@52 $generated@@39) $generated@@2))
(assert (= ($generated@@52 $generated@@53) $generated@@4))
(assert ($generated@@29 $generated@@30 $generated@@39 $generated@@54))
(assert ($generated@@29 $generated@@30 $generated@@53 $generated@@31))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@55 $generated@@56 $generated@@57) (= $generated@@56 $generated@@57))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@58 $generated@@59 $generated@@60) (= $generated@@59 $generated@@60))
 :pattern ( ($generated@@58 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@37 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@37 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@52 $generated@@64) $generated@@2))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@52 $generated@@66) $generated@@3))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@32 $generated@@67) (= ($generated@@52 $generated@@67) $generated@@4))
 :pattern ( ($generated@@32 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@33 $generated@@68) (= ($generated@@52 $generated@@68) $generated@@5))
 :pattern ( ($generated@@33 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@52 $generated@@70) $generated@@6))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@71 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@63 $generated@@75) (= $generated@@75 $generated@@39))
 :pattern ( ($generated@@63 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@32 $generated@@76) (= $generated@@76 $generated@@53))
 :pattern ( ($generated@@32 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@65 $generated@@77) (exists (($generated@@78 T@U) ) (= $generated@@77 ($generated@@38 $generated@@78))))
 :pattern ( ($generated@@65 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@33 $generated@@80) (exists (($generated@@81 T@U) ) (= $generated@@80 ($generated@@79 $generated@@81))))
 :pattern ( ($generated@@33 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@69 $generated@@83) (exists (($generated@@84 T@U) ) (= $generated@@83 ($generated@@82 $generated@@84))))
 :pattern ( ($generated@@69 $generated@@83))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@35 ($generated@@37 $generated@@30 $generated@@87) ($generated@@37 $generated@@30 $generated@@88)) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@87 $generated@@54) ($generated@@29 $generated@@30 $generated@@88 $generated@@54)))) (and (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@63 ($generated@@37 $generated@@30 $generated@@87)))))) (let (($generated@@89 ($generated@@37 $generated@@30 ($generated@@85 ($generated@@37 $generated@@30 $generated@@87)))))
($generated@@35 $generated@@89 ($generated@@37 $generated@@30 $generated@@88)))) (= ($generated@@40 ($generated@@27 $generated@@86) ($generated@@37 $generated@@30 $generated@@87) ($generated@@37 $generated@@30 $generated@@88)) (ite ($generated@@63 ($generated@@37 $generated@@30 $generated@@87)) $generated@@88 (let (($generated@@90 ($generated@@37 $generated@@30 ($generated@@85 ($generated@@37 $generated@@30 $generated@@87)))))
($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@86) $generated@@90 ($generated@@37 $generated@@30 $generated@@88))))))))))
 :weight 3
 :pattern ( ($generated@@40 ($generated@@27 $generated@@86) ($generated@@37 $generated@@30 $generated@@87) ($generated@@37 $generated@@30 $generated@@88)))
))))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@38 $generated@@91) $generated@@54) ($generated@@29 $generated@@30 $generated@@91 $generated@@54))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@38 $generated@@91) $generated@@54))
)))
(assert (forall (($generated@@92 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@79 $generated@@92) $generated@@31) ($generated@@29 $generated@@30 $generated@@92 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@79 $generated@@92) $generated@@31))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@82 $generated@@93) $generated@@31) ($generated@@29 $generated@@30 $generated@@93 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@82 $generated@@93) $generated@@31))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and ($generated@@65 $generated@@94) ($generated@@65 $generated@@95)) (= ($generated@@55 $generated@@94 $generated@@95) ($generated@@55 ($generated@@85 $generated@@94) ($generated@@85 $generated@@95))))
 :pattern ( ($generated@@55 $generated@@94 $generated@@95) ($generated@@65 $generated@@94))
 :pattern ( ($generated@@55 $generated@@94 $generated@@95) ($generated@@65 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and ($generated@@33 $generated@@96) ($generated@@33 $generated@@97)) (= ($generated@@58 $generated@@96 $generated@@97) ($generated@@58 ($generated@@34 $generated@@96) ($generated@@34 $generated@@97))))
 :pattern ( ($generated@@58 $generated@@96 $generated@@97) ($generated@@33 $generated@@96))
 :pattern ( ($generated@@58 $generated@@96 $generated@@97) ($generated@@33 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (and ($generated@@69 $generated@@98) ($generated@@69 $generated@@99)) (= ($generated@@58 $generated@@98 $generated@@99) ($generated@@58 ($generated@@36 $generated@@98) ($generated@@36 $generated@@99))))
 :pattern ( ($generated@@58 $generated@@98 $generated@@99) ($generated@@69 $generated@@98))
 :pattern ( ($generated@@58 $generated@@98 $generated@@99) ($generated@@69 $generated@@99))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@35 $generated@@101 $generated@@102) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@101 $generated@@54) ($generated@@29 $generated@@30 $generated@@102 $generated@@54)))) ($generated@@29 $generated@@30 ($generated@@40 $generated@@100 $generated@@101 $generated@@102) $generated@@54))
 :pattern ( ($generated@@40 $generated@@100 $generated@@101 $generated@@102))
))))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@40 ($generated@@27 $generated@@103) $generated@@104 $generated@@105) ($generated@@40 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@40 ($generated@@27 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@106 $generated@@107) (or ($generated@@63 $generated@@107) ($generated@@65 $generated@@107)))
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@109 $generated@@111) (and (< 1 $generated@@25) ($generated@@29 $generated@@30 $generated@@111 $generated@@31))) (and (=> (not ($generated@@32 $generated@@111)) (=> (not ($generated@@33 $generated@@111)) (let (($generated@@112 ($generated@@36 $generated@@111)))
($generated@@109 $generated@@112)))) (= ($generated@@108 ($generated@@27 $generated@@110) $generated@@111) (ite ($generated@@32 $generated@@111) ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)) (ite ($generated@@33 $generated@@111) (let (($generated@@113 ($generated@@34 $generated@@111)))
($generated@@82 $generated@@113)) (let (($generated@@114 ($generated@@36 $generated@@111)))
($generated@@79 ($generated@@108 $generated@@110 $generated@@114))))))))
 :pattern ( ($generated@@108 ($generated@@27 $generated@@110) $generated@@111))
))))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or ($generated@@109 $generated@@116) (and (< 1 $generated@@25) ($generated@@29 $generated@@30 $generated@@116 $generated@@31))) ($generated@@29 $generated@@30 ($generated@@108 $generated@@115 $generated@@116) $generated@@31))
 :pattern ( ($generated@@108 $generated@@115 $generated@@116))
))))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@28 $generated@@118) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@118 $generated@@31))) ($generated@@29 $generated@@30 ($generated@@26 $generated@@117 $generated@@118) $generated@@54))
 :pattern ( ($generated@@26 $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@119 $generated@@54) (or ($generated@@63 $generated@@119) ($generated@@65 $generated@@119)))
 :pattern ( ($generated@@65 $generated@@119) ($generated@@29 $generated@@30 $generated@@119 $generated@@54))
 :pattern ( ($generated@@63 $generated@@119) ($generated@@29 $generated@@30 $generated@@119 $generated@@54))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> (or ($generated@@109 ($generated@@37 $generated@@30 $generated@@121)) (and (< 1 $generated@@25) ($generated@@29 $generated@@30 $generated@@121 $generated@@31))) (and (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@32 ($generated@@37 $generated@@30 $generated@@121)))))) (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@33 ($generated@@37 $generated@@30 $generated@@121)))))) (let (($generated@@122 ($generated@@37 $generated@@30 ($generated@@36 ($generated@@37 $generated@@30 $generated@@121)))))
($generated@@109 $generated@@122)))) (= ($generated@@108 ($generated@@27 $generated@@120) ($generated@@37 $generated@@30 $generated@@121)) (ite ($generated@@32 ($generated@@37 $generated@@30 $generated@@121)) ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)) (ite ($generated@@33 ($generated@@37 $generated@@30 $generated@@121)) (let (($generated@@123 ($generated@@37 $generated@@30 ($generated@@34 ($generated@@37 $generated@@30 $generated@@121)))))
($generated@@37 $generated@@30 ($generated@@82 $generated@@123))) (let (($generated@@124 ($generated@@37 $generated@@30 ($generated@@36 ($generated@@37 $generated@@30 $generated@@121)))))
($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@108 ($generated@@27 $generated@@120) $generated@@124))))))))))
 :weight 3
 :pattern ( ($generated@@108 ($generated@@27 $generated@@120) ($generated@@37 $generated@@30 $generated@@121)))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@63 $generated@@125) ($generated@@63 $generated@@126)) ($generated@@55 $generated@@125 $generated@@126))
 :pattern ( ($generated@@55 $generated@@125 $generated@@126) ($generated@@63 $generated@@125))
 :pattern ( ($generated@@55 $generated@@125 $generated@@126) ($generated@@63 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@32 $generated@@127) ($generated@@32 $generated@@128)) ($generated@@58 $generated@@127 $generated@@128))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128) ($generated@@32 $generated@@127))
 :pattern ( ($generated@@58 $generated@@127 $generated@@128) ($generated@@32 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@52 ($generated@@38 $generated@@129)) $generated@@3)
 :pattern ( ($generated@@38 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@85 ($generated@@38 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@38 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@52 ($generated@@79 $generated@@131)) $generated@@5)
 :pattern ( ($generated@@79 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@34 ($generated@@79 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@79 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@52 ($generated@@82 $generated@@133)) $generated@@6)
 :pattern ( ($generated@@82 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@36 ($generated@@82 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@82 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@71 $generated@@136 ($generated@@72 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@72 $generated@@136 $generated@@135))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@35 $generated@@138 $generated@@139) (and (< 1 $generated@@25) (and ($generated@@29 $generated@@30 $generated@@138 $generated@@54) ($generated@@29 $generated@@30 $generated@@139 $generated@@54)))) (and (=> (not ($generated@@63 $generated@@138)) (let (($generated@@140 ($generated@@85 $generated@@138)))
($generated@@35 $generated@@140 $generated@@139))) (= ($generated@@40 ($generated@@27 $generated@@137) $generated@@138 $generated@@139) (ite ($generated@@63 $generated@@138) $generated@@139 (let (($generated@@141 ($generated@@85 $generated@@138)))
($generated@@38 ($generated@@40 $generated@@137 $generated@@141 $generated@@139)))))))
 :pattern ( ($generated@@40 ($generated@@27 $generated@@137) $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@142 $generated@@143) (or (or ($generated@@32 $generated@@143) ($generated@@33 $generated@@143)) ($generated@@69 $generated@@143)))
 :pattern ( ($generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@108 ($generated@@27 $generated@@144) $generated@@145) ($generated@@108 $generated@@144 $generated@@145))
 :pattern ( ($generated@@108 ($generated@@27 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@146) $generated@@147) ($generated@@26 $generated@@146 $generated@@147))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@146) $generated@@147))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (or ($generated@@28 ($generated@@37 $generated@@30 $generated@@149)) (and (< 2 $generated@@25) ($generated@@29 $generated@@30 $generated@@149 $generated@@31))) (and (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@32 ($generated@@37 $generated@@30 $generated@@149)))))) (and (=> ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@33 ($generated@@37 $generated@@30 $generated@@149))))) (let (($generated@@150 ($generated@@37 $generated@@30 ($generated@@34 ($generated@@37 $generated@@30 $generated@@149)))))
 (and ($generated@@28 $generated@@150) (let (($generated@@151 ($generated@@26 ($generated@@27 $generated@@148) $generated@@150)))
($generated@@35 $generated@@151 $generated@@151))))) (=> (not ($generated@@14 ($generated@@37 $generated@@10 ($generated@@13 ($generated@@33 ($generated@@37 $generated@@30 $generated@@149)))))) (let (($generated@@152 ($generated@@37 $generated@@30 ($generated@@36 ($generated@@37 $generated@@30 $generated@@149)))))
 (and ($generated@@28 $generated@@152) (let (($generated@@153 ($generated@@26 ($generated@@27 $generated@@148) $generated@@152)))
 (and ($generated@@35 $generated@@153 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))) ($generated@@35 $generated@@153 ($generated@@40 ($generated@@27 $generated@@41) $generated@@153 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))))))))))) (= ($generated@@26 ($generated@@27 $generated@@148) ($generated@@37 $generated@@30 $generated@@149)) (ite ($generated@@32 ($generated@@37 $generated@@30 $generated@@149)) $generated@@39 (ite ($generated@@33 ($generated@@37 $generated@@30 $generated@@149)) (let (($generated@@154 ($generated@@37 $generated@@30 ($generated@@34 ($generated@@37 $generated@@30 $generated@@149)))))
(let (($generated@@155 ($generated@@37 $generated@@30 ($generated@@26 ($generated@@27 $generated@@148) $generated@@154))))
($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@155 $generated@@155)))) (let (($generated@@156 ($generated@@37 $generated@@30 ($generated@@36 ($generated@@37 $generated@@30 $generated@@149)))))
(let (($generated@@157 ($generated@@37 $generated@@30 ($generated@@26 ($generated@@27 $generated@@148) $generated@@156))))
($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@157 ($generated@@37 $generated@@30 ($generated@@40 ($generated@@27 $generated@@41) $generated@@157 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@148) ($generated@@37 $generated@@30 $generated@@149)))
))))
(assert (forall (($generated@@159 T@U) ) (! (< ($generated@@158 $generated@@159) ($generated@@158 ($generated@@38 $generated@@159)))
 :pattern ( ($generated@@38 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (< ($generated@@158 $generated@@160) ($generated@@158 ($generated@@79 $generated@@160)))
 :pattern ( ($generated@@79 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (! (< ($generated@@158 $generated@@161) ($generated@@158 ($generated@@82 $generated@@161)))
 :pattern ( ($generated@@82 $generated@@161))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@162 $generated@@173 $generated@@174 $generated@@175 ($generated@@169 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@178 $generated@@179) $generated@@176)
 :weight 0
)) (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@162 $generated@@180 $generated@@181 $generated@@182 ($generated@@169 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@162 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@162 $generated@@189 $generated@@190 $generated@@191 ($generated@@169 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@162 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))) (= ($generated@@9 $generated@@163) 4)) (= ($generated@@9 $generated@@164) 5)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@166 $generated@@198 $generated@@199 ($generated@@170 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@200) $generated@@202) $generated@@200)
 :weight 0
))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@207 $generated@@208) (= ($generated@@166 $generated@@203 $generated@@204 ($generated@@170 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@205) $generated@@208) ($generated@@166 $generated@@203 $generated@@204 $generated@@206 $generated@@208)))
 :weight 0
))) (= ($generated@@9 $generated@@167) 6)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ) (= ($generated@@9 ($generated@@168 $generated@@209 $generated@@210)) 7))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (! (= ($generated@@171 ($generated@@168 $generated@@211 $generated@@212)) $generated@@211)
 :pattern ( ($generated@@168 $generated@@211 $generated@@212))
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@172 ($generated@@168 $generated@@213 $generated@@214)) $generated@@214)
 :pattern ( ($generated@@168 $generated@@213 $generated@@214))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 Bool) ($generated@@219 T@U) ($generated@@220 T@U) ) (! (= ($generated@@14 ($generated@@162 $generated@@163 $generated@@164 $generated@@10 ($generated@@165 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))  (=> (and (or (not (= $generated@@219 $generated@@215)) (not true)) ($generated@@14 ($generated@@71 $generated@@10 ($generated@@166 $generated@@164 $generated@@167 ($generated@@166 $generated@@163 ($generated@@168 $generated@@164 $generated@@167) $generated@@216 $generated@@219) $generated@@217)))) $generated@@218))
 :pattern ( ($generated@@162 $generated@@163 $generated@@164 $generated@@10 ($generated@@165 $generated@@215 $generated@@216 $generated@@217 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@221 $generated@@31) (or (or ($generated@@32 $generated@@221) ($generated@@33 $generated@@221)) ($generated@@69 $generated@@221)))
 :pattern ( ($generated@@69 $generated@@221) ($generated@@29 $generated@@30 $generated@@221 $generated@@31))
 :pattern ( ($generated@@33 $generated@@221) ($generated@@29 $generated@@30 $generated@@221 $generated@@31))
 :pattern ( ($generated@@32 $generated@@221) ($generated@@29 $generated@@30 $generated@@221 $generated@@31))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@223 $generated@@225) ($generated@@29 $generated@@30 $generated@@224 $generated@@54)) ($generated@@222 $generated@@30 $generated@@224 $generated@@54 $generated@@225))
 :pattern ( ($generated@@222 $generated@@30 $generated@@224 $generated@@54 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@223 $generated@@227) ($generated@@29 $generated@@30 $generated@@226 $generated@@31)) ($generated@@222 $generated@@30 $generated@@226 $generated@@31 $generated@@227))
 :pattern ( ($generated@@222 $generated@@30 $generated@@226 $generated@@31 $generated@@227))
)))
(assert (= ($generated@@228 $generated@@54) $generated@@0))
(assert (= ($generated@@229 $generated@@54) $generated@@7))
(assert (= ($generated@@228 $generated@@31) $generated@@1))
(assert (= ($generated@@229 $generated@@31) $generated@@8))
(assert (= $generated@@39 ($generated@@37 $generated@@30 $generated@@39)))
(assert (= $generated@@53 ($generated@@37 $generated@@30 $generated@@53)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and ($generated@@223 $generated@@231) (and ($generated@@65 $generated@@230) ($generated@@222 $generated@@30 $generated@@230 $generated@@54 $generated@@231))) ($generated@@222 $generated@@30 ($generated@@85 $generated@@230) $generated@@54 $generated@@231))
 :pattern ( ($generated@@222 $generated@@30 ($generated@@85 $generated@@230) $generated@@54 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> (and ($generated@@223 $generated@@233) (and ($generated@@33 $generated@@232) ($generated@@222 $generated@@30 $generated@@232 $generated@@31 $generated@@233))) ($generated@@222 $generated@@30 ($generated@@34 $generated@@232) $generated@@31 $generated@@233))
 :pattern ( ($generated@@222 $generated@@30 ($generated@@34 $generated@@232) $generated@@31 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and ($generated@@223 $generated@@235) (and ($generated@@69 $generated@@234) ($generated@@222 $generated@@30 $generated@@234 $generated@@31 $generated@@235))) ($generated@@222 $generated@@30 ($generated@@36 $generated@@234) $generated@@31 $generated@@235))
 :pattern ( ($generated@@222 $generated@@30 ($generated@@36 $generated@@234) $generated@@31 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (! (= ($generated@@38 ($generated@@37 $generated@@30 $generated@@236)) ($generated@@37 $generated@@30 ($generated@@38 $generated@@236)))
 :pattern ( ($generated@@38 ($generated@@37 $generated@@30 $generated@@236)))
)))
(assert (forall (($generated@@237 T@U) ) (! (= ($generated@@79 ($generated@@37 $generated@@30 $generated@@237)) ($generated@@37 $generated@@30 ($generated@@79 $generated@@237)))
 :pattern ( ($generated@@79 ($generated@@37 $generated@@30 $generated@@237)))
)))
(assert (forall (($generated@@238 T@U) ) (! (= ($generated@@82 ($generated@@37 $generated@@30 $generated@@238)) ($generated@@37 $generated@@30 ($generated@@82 $generated@@238)))
 :pattern ( ($generated@@82 ($generated@@37 $generated@@30 $generated@@238)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@T) ) (! (= ($generated@@72 $generated@@240 ($generated@@37 $generated@@240 $generated@@239)) ($generated@@37 $generated@@167 ($generated@@72 $generated@@240 $generated@@239)))
 :pattern ( ($generated@@72 $generated@@240 ($generated@@37 $generated@@240 $generated@@239)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 (T@U) Bool)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@255  (=> (= $generated@@241 ($generated@@165 $generated@@242 $generated@@243 $generated false)) (=> (and (and (and (= $generated@@244 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)))))))))) (= $generated@@245 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))))))))))))))))))) (and (= $generated@@246 ($generated@@38 $generated@@245)) (= $generated@@247 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)))))))))) (and (and ($generated@@222 $generated@@30 $generated@@247 $generated@@31 $generated@@243) ($generated@@109 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53))))))))) (and ($generated@@142 ($generated@@37 $generated@@30 ($generated@@108 ($generated@@27 $generated@@41) ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)))))))))) ($generated@@109 ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53))))))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@58 ($generated@@108 ($generated@@27 ($generated@@27 $generated@@41)) ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)))))))) ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)))))))) (=> ($generated@@58 ($generated@@108 ($generated@@27 $generated@@41) ($generated@@37 $generated@@30 ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)))))))) ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53))))))) (=> (and (and ($generated@@222 $generated@@30 $generated@@244 $generated@@31 $generated@@243) ($generated@@109 $generated@@244)) (and ($generated@@142 ($generated@@108 ($generated@@27 $generated@@41) $generated@@244)) ($generated@@109 $generated@@244))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@58 ($generated@@108 ($generated@@27 ($generated@@27 $generated@@41)) $generated@@244) ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53)))))))))) (=> ($generated@@58 ($generated@@108 ($generated@@27 $generated@@41) $generated@@244) ($generated@@79 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 ($generated@@82 ($generated@@37 $generated@@30 $generated@@53))))))))) (=> (and (and ($generated@@222 $generated@@30 $generated@@244 $generated@@31 $generated@@243) ($generated@@109 $generated@@244)) (and (= $generated@@248 ($generated@@108 ($generated@@27 $generated@@41) $generated@@244)) ($generated@@222 $generated@@30 $generated@@248 $generated@@31 $generated@@243))) (=> (and (and (and (and ($generated@@28 ($generated@@108 ($generated@@27 $generated@@41) $generated@@244)) ($generated@@222 $generated@@30 $generated@@244 $generated@@31 $generated@@243)) (and ($generated@@28 $generated@@244) (= $generated@@249 ($generated@@26 ($generated@@27 $generated@@41) $generated@@244)))) (and (and ($generated@@222 $generated@@30 $generated@@249 $generated@@54 $generated@@243) (= $generated@@250 ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))) (and ($generated@@222 $generated@@30 $generated@@250 $generated@@54 $generated@@243) ($generated@@35 ($generated@@26 ($generated@@27 $generated@@41) $generated@@244) ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))) (and (and (and ($generated@@106 ($generated@@26 ($generated@@27 $generated@@41) ($generated@@108 ($generated@@27 $generated@@41) $generated@@244))) ($generated@@106 ($generated@@40 ($generated@@27 $generated@@41) ($generated@@26 ($generated@@27 $generated@@41) $generated@@244) ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39)))))) (and (and ($generated@@109 $generated@@244) ($generated@@28 ($generated@@108 ($generated@@27 $generated@@41) $generated@@244))) (and ($generated@@28 $generated@@244) ($generated@@35 ($generated@@26 ($generated@@27 $generated@@41) $generated@@244) ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@55 ($generated@@26 ($generated@@27 ($generated@@27 $generated@@41)) ($generated@@108 ($generated@@27 ($generated@@27 $generated@@41)) $generated@@244)) ($generated@@40 ($generated@@27 ($generated@@27 $generated@@41)) ($generated@@26 ($generated@@27 ($generated@@27 $generated@@41)) $generated@@244) ($generated@@37 $generated@@30 ($generated@@38 ($generated@@37 $generated@@30 $generated@@39))))))))))))))))
(let (($generated@@256  (=> (and ($generated@@223 $generated@@243) ($generated@@251 $generated@@243)) (=> (and (and (and (and ($generated@@29 $generated@@30 $generated@@252 $generated@@31) ($generated@@222 $generated@@30 $generated@@252 $generated@@31 $generated@@243)) true) (and (and ($generated@@29 $generated@@30 $generated@@253 $generated@@54) ($generated@@222 $generated@@30 $generated@@253 $generated@@54 $generated@@243)) true)) (and (and (and ($generated@@29 $generated@@30 $generated@@254 $generated@@54) ($generated@@222 $generated@@30 $generated@@254 $generated@@54 $generated@@243)) true) (and (= 3 $generated@@25) (= (ControlFlow 0 5) 2)))) $generated@@255))))
$generated@@256)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
