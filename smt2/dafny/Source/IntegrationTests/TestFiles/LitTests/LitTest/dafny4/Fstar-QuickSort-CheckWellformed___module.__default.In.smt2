(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@69 (T@U Int T@U) Int)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@92 () Int)
(declare-fun $generated@@93 (Int T@U) Bool)
(declare-fun $generated@@100 (T@U) Int)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@T T@T) T@T)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@119 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@29 $generated@@30) $generated@@4))
(assert (= ($generated@@8 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@33 $generated@@35) ($generated@@25 $generated@@31 $generated@@30 ($generated@@32 $generated@@34) $generated@@35))
 :pattern ( ($generated@@25 $generated@@31 $generated@@30 ($generated@@32 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ) (! ($generated@@36 $generated@@31 $generated@@30 ($generated@@32 $generated@@37))
 :pattern ( ($generated@@36 $generated@@31 $generated@@30 ($generated@@32 $generated@@37)))
)))
(assert (forall (($generated@@39 Int) ) (! (= ($generated@@38 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@31 ($generated@@43 $generated@@46 $generated@@47) ($generated@@32 $generated@@45))  (and ($generated@@44 $generated@@46 $generated@@45) ($generated@@36 $generated@@31 $generated@@47 ($generated@@32 $generated@@45))))
 :pattern ( ($generated@@36 $generated@@31 ($generated@@43 $generated@@46 $generated@@47) ($generated@@32 $generated@@45)))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@48 $generated@@49) (= ($generated@@29 $generated@@49) $generated@@4))
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@29 $generated@@51) $generated@@5))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@52 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@50 $generated@@56) (exists (($generated@@57 T@U) ($generated@@58 T@U) ) (= $generated@@56 ($generated@@43 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@50 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@48 $generated@@59) (= $generated@@59 $generated@@30))
 :pattern ( ($generated@@48 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@36 $generated@@10 $generated@@60 $generated@@26) (<= ($generated@@38 0) ($generated@@15 $generated@@60)))
 :pattern ( ($generated@@36 $generated@@10 $generated@@60 $generated@@26))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@61 ($generated@@53 $generated@@65 $generated@@62) $generated@@63 $generated@@64) ($generated@@25 $generated@@65 $generated@@62 $generated@@63 $generated@@64))
 :pattern ( ($generated@@61 ($generated@@53 $generated@@65 $generated@@62) $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ) (!  (and (= ($generated@@24 ($generated@@32 $generated@@67)) $generated@@3) (= ($generated@@66 ($generated@@32 $generated@@67)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@44 $generated@@68 $generated@@26) (and (= ($generated@@53 $generated@@10 ($generated@@52 $generated@@10 $generated@@68)) $generated@@68) ($generated@@36 $generated@@10 ($generated@@52 $generated@@10 $generated@@68) $generated@@26)))
 :pattern ( ($generated@@44 $generated@@68 $generated@@26))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 Int) ($generated@@73 T@U) ) (! (= ($generated@@69 ($generated@@70 $generated@@71) $generated@@72 $generated@@73) ($generated@@69 $generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@69 ($generated@@70 $generated@@71) $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@36 $generated@@31 $generated@@75 ($generated@@32 $generated@@74)) (or ($generated@@48 $generated@@75) ($generated@@50 $generated@@75)))
 :pattern ( ($generated@@50 $generated@@75) ($generated@@36 $generated@@31 $generated@@75 ($generated@@32 $generated@@74)))
 :pattern ( ($generated@@48 $generated@@75) ($generated@@36 $generated@@31 $generated@@75 ($generated@@32 $generated@@74)))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@44 $generated@@76 $generated) (and (= ($generated@@53 $generated@@10 ($generated@@52 $generated@@10 $generated@@76)) $generated@@76) ($generated@@36 $generated@@10 ($generated@@52 $generated@@10 $generated@@76) $generated)))
 :pattern ( ($generated@@44 $generated@@76 $generated))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@44 ($generated@@53 $generated@@79 $generated@@77) $generated@@78) ($generated@@36 $generated@@79 $generated@@77 $generated@@78))
 :pattern ( ($generated@@44 ($generated@@53 $generated@@79 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@29 ($generated@@43 $generated@@80 $generated@@81)) $generated@@5)
 :pattern ( ($generated@@43 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@82 ($generated@@43 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@43 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@43 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@43 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 ($generated@@32 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@32 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@52 $generated@@91 ($generated@@53 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@53 $generated@@91 $generated@@90))
)))
(assert  (=> (<= 1 $generated@@92) (forall (($generated@@94 T@U) ($generated@@95 Int) ($generated@@96 T@U) ) (!  (=> (or ($generated@@93 $generated@@95 $generated@@96) (and (< 1 $generated@@92) ($generated@@36 $generated@@31 $generated@@96 ($generated@@32 $generated)))) (and (=> (not ($generated@@48 $generated@@96)) (let (($generated@@97 ($generated@@85 $generated@@96)))
($generated@@93 $generated@@95 $generated@@97))) (= ($generated@@69 ($generated@@70 $generated@@94) $generated@@95 $generated@@96) (ite ($generated@@48 $generated@@96) 0 (let (($generated@@98 ($generated@@85 $generated@@96)))
(let (($generated@@99 ($generated@@15 ($generated@@52 $generated@@10 ($generated@@82 $generated@@96)))))
(+ (ite (= $generated@@95 $generated@@99) 1 0) ($generated@@69 $generated@@94 $generated@@95 $generated@@98))))))))
 :pattern ( ($generated@@69 ($generated@@70 $generated@@94) $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@100 $generated@@102) ($generated@@101 ($generated@@43 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@43 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (< ($generated@@101 $generated@@105) ($generated@@101 ($generated@@43 $generated@@104 $generated@@105)))
 :pattern ( ($generated@@43 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and ($generated@@33 $generated@@108) (and ($generated@@50 $generated@@106) ($generated@@25 $generated@@31 $generated@@106 ($generated@@32 $generated@@107) $generated@@108))) ($generated@@61 ($generated@@82 $generated@@106) $generated@@107 $generated@@108))
 :pattern ( ($generated@@61 ($generated@@82 $generated@@106) $generated@@107 $generated@@108))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@109 $generated@@120 $generated@@121 $generated@@122 ($generated@@116 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@125 $generated@@126) $generated@@123)
 :weight 0
)) (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@109 $generated@@127 $generated@@128 $generated@@129 ($generated@@116 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@109 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@109 $generated@@136 $generated@@137 $generated@@138 ($generated@@116 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)))) (= ($generated@@8 $generated@@110) 4)) (= ($generated@@8 $generated@@111) 5)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@113 $generated@@145 $generated@@146 ($generated@@117 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@147) $generated@@149) $generated@@147)
 :weight 0
))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@154 $generated@@155) (= ($generated@@113 $generated@@150 $generated@@151 ($generated@@117 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@152) $generated@@155) ($generated@@113 $generated@@150 $generated@@151 $generated@@153 $generated@@155)))
 :weight 0
))) (= ($generated@@8 $generated@@114) 6)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (= ($generated@@8 ($generated@@115 $generated@@156 $generated@@157)) 7))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (! (= ($generated@@118 ($generated@@115 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@115 $generated@@158 $generated@@159))
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@119 ($generated@@115 $generated@@160 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@115 $generated@@160 $generated@@161))
))))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Bool) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@13 ($generated@@109 $generated@@110 $generated@@111 $generated@@9 ($generated@@112 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))  (=> (and (or (not (= $generated@@166 $generated@@162)) (not true)) ($generated@@13 ($generated@@52 $generated@@9 ($generated@@113 $generated@@111 $generated@@114 ($generated@@113 $generated@@110 ($generated@@115 $generated@@111 $generated@@114) $generated@@163 $generated@@166) $generated@@164)))) $generated@@165))
 :pattern ( ($generated@@109 $generated@@110 $generated@@111 $generated@@9 ($generated@@112 $generated@@162 $generated@@163 $generated@@164 $generated@@165) $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@100 ($generated@@53 $generated@@31 $generated@@168)) ($generated@@101 $generated@@168))
 :pattern ( ($generated@@100 ($generated@@53 $generated@@31 $generated@@168)))
)))
(assert  (=> (<= 1 $generated@@92) (forall (($generated@@169 T@U) ($generated@@170 Int) ($generated@@171 T@U) ) (!  (=> (or ($generated@@93 ($generated@@38 $generated@@170) ($generated@@40 $generated@@31 $generated@@171)) (and (< 1 $generated@@92) ($generated@@36 $generated@@31 $generated@@171 ($generated@@32 $generated)))) (and (=> (not ($generated@@13 ($generated@@40 $generated@@9 ($generated@@12 ($generated@@48 ($generated@@40 $generated@@31 $generated@@171)))))) (let (($generated@@172 ($generated@@40 $generated@@31 ($generated@@85 ($generated@@40 $generated@@31 $generated@@171)))))
($generated@@93 ($generated@@38 $generated@@170) $generated@@172))) (= ($generated@@69 ($generated@@70 $generated@@169) ($generated@@38 $generated@@170) ($generated@@40 $generated@@31 $generated@@171)) (ite ($generated@@48 ($generated@@40 $generated@@31 $generated@@171)) 0 (let (($generated@@173 ($generated@@40 $generated@@31 ($generated@@85 ($generated@@40 $generated@@31 $generated@@171)))))
(let (($generated@@174 ($generated@@38 ($generated@@15 ($generated@@52 $generated@@10 ($generated@@82 ($generated@@40 $generated@@31 $generated@@171)))))))
(+ (ite (= ($generated@@38 $generated@@170) $generated@@174) 1 0) ($generated@@69 ($generated@@70 $generated@@169) ($generated@@38 $generated@@170) $generated@@173))))))))
 :weight 3
 :pattern ( ($generated@@69 ($generated@@70 $generated@@169) ($generated@@38 $generated@@170) ($generated@@40 $generated@@31 $generated@@171)))
))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> ($generated@@44 $generated@@176 ($generated@@32 $generated@@175)) (and (= ($generated@@53 $generated@@31 ($generated@@52 $generated@@31 $generated@@176)) $generated@@176) ($generated@@36 $generated@@31 ($generated@@52 $generated@@31 $generated@@176) ($generated@@32 $generated@@175))))
 :pattern ( ($generated@@44 $generated@@176 ($generated@@32 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> (and ($generated@@33 $generated@@179) (and ($generated@@50 $generated@@177) ($generated@@25 $generated@@31 $generated@@177 ($generated@@32 $generated@@178) $generated@@179))) ($generated@@25 $generated@@31 ($generated@@85 $generated@@177) ($generated@@32 $generated@@178) $generated@@179))
 :pattern ( ($generated@@25 $generated@@31 ($generated@@85 $generated@@177) ($generated@@32 $generated@@178) $generated@@179))
)))
(assert (= ($generated@@24 $generated@@26) $generated@@2))
(assert (= ($generated@@66 $generated@@26) $generated@@6))
(assert (= $generated@@30 ($generated@@40 $generated@@31 $generated@@30)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@43 ($generated@@40 $generated@@114 $generated@@180) ($generated@@40 $generated@@31 $generated@@181)) ($generated@@40 $generated@@31 ($generated@@43 $generated@@180 $generated@@181)))
 :pattern ( ($generated@@43 ($generated@@40 $generated@@114 $generated@@180) ($generated@@40 $generated@@31 $generated@@181)))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@53 $generated@@10 ($generated@@14 ($generated@@38 $generated@@182))) ($generated@@40 $generated@@114 ($generated@@53 $generated@@10 ($generated@@14 $generated@@182))))
 :pattern ( ($generated@@53 $generated@@10 ($generated@@14 ($generated@@38 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@53 $generated@@184 ($generated@@40 $generated@@184 $generated@@183)) ($generated@@40 $generated@@114 ($generated@@53 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@53 $generated@@184 ($generated@@40 $generated@@184 $generated@@183)))
)))
(assert  (=> (<= 1 $generated@@92) (forall (($generated@@185 T@U) ($generated@@186 Int) ($generated@@187 T@U) ) (!  (=> (or ($generated@@93 $generated@@186 $generated@@187) (and (< 1 $generated@@92) ($generated@@36 $generated@@31 $generated@@187 ($generated@@32 $generated)))) (<= ($generated@@38 0) ($generated@@69 $generated@@185 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@69 $generated@@185 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! ($generated@@25 $generated@@10 $generated@@189 $generated $generated@@188)
 :pattern ( ($generated@@25 $generated@@10 $generated@@189 $generated $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@33 $generated@@193) (= ($generated@@25 $generated@@31 ($generated@@43 $generated@@191 $generated@@192) ($generated@@32 $generated@@190) $generated@@193)  (and ($generated@@61 $generated@@191 $generated@@190 $generated@@193) ($generated@@25 $generated@@31 $generated@@192 ($generated@@32 $generated@@190) $generated@@193))))
 :pattern ( ($generated@@25 $generated@@31 ($generated@@43 $generated@@191 $generated@@192) ($generated@@32 $generated@@190) $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ) (! ($generated@@36 $generated@@10 $generated@@194 $generated)
 :pattern ( ($generated@@36 $generated@@10 $generated@@194 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@208  (=> (and ($generated@@25 $generated@@10 ($generated@@14 $generated@@195) $generated $generated@@196) ($generated@@25 $generated@@31 $generated@@197 ($generated@@32 $generated) $generated@@196)) (and (=> (= (ControlFlow 0 6) (- 0 8)) (or (<= 0 $generated@@195) (= $generated@@195 $generated@@195))) (=> (or (<= 0 $generated@@195) (= $generated@@195 $generated@@195)) (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (< $generated@@195 $generated@@195) (and (= $generated@@195 $generated@@195) (< ($generated@@101 $generated@@197) ($generated@@101 $generated@@198))))) (=> (or (< $generated@@195 $generated@@195) (and (= $generated@@195 $generated@@195) (< ($generated@@101 $generated@@197) ($generated@@101 $generated@@198)))) (=> (and ($generated@@93 $generated@@195 $generated@@197) (= (ControlFlow 0 6) (- 0 5))) ($generated@@36 $generated@@10 ($generated@@14 (+ (ite (= $generated@@195 $generated@@199) 1 0) ($generated@@69 ($generated@@70 $generated@@200) $generated@@195 $generated@@197))) $generated@@26)))))))))
(let (($generated@@209  (=> (and (or (not (= $generated@@195 $generated@@199)) (not true)) (= (ControlFlow 0 10) 6)) $generated@@208)))
(let (($generated@@210  (=> (and (= $generated@@195 $generated@@199) (= (ControlFlow 0 9) 6)) $generated@@208)))
(let (($generated@@211  (=> (and (and (and (= $generated@@198 ($generated@@43 ($generated@@53 $generated@@10 ($generated@@14 $generated@@201)) $generated@@202)) ($generated@@36 $generated@@31 $generated@@202 ($generated@@32 $generated))) (and (= $generated@@203 $generated@@202) ($generated@@36 $generated@@31 $generated@@203 ($generated@@32 $generated)))) (and (and (= $generated@@197 $generated@@203) (= $generated@@204 $generated@@201)) (and ($generated@@36 $generated@@10 ($generated@@14 $generated@@204) $generated) (= $generated@@199 $generated@@204)))) (and (=> (= (ControlFlow 0 11) 9) $generated@@210) (=> (= (ControlFlow 0 11) 10) $generated@@209)))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (or (not (= $generated@@198 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@211) (=> (= (ControlFlow 0 12) 4) $generated@@212)))))
(let (($generated@@214  (=> (and (= $generated@@198 $generated@@30) (= (ControlFlow 0 3) (- 0 2))) ($generated@@36 $generated@@10 ($generated@@14 ($generated@@38 0)) $generated@@26))))
(let (($generated@@215 true))
(let (($generated@@216  (=> (= $generated@@205 ($generated@@112 $generated@@206 $generated@@196 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@215) (=> (= (ControlFlow 0 13) 3) $generated@@214)) (=> (= (ControlFlow 0 13) 12) $generated@@213)))))
(let (($generated@@217  (=> (and (and (and ($generated@@33 $generated@@196) ($generated@@207 $generated@@196)) ($generated@@36 $generated@@31 $generated@@198 ($generated@@32 $generated))) (and (= 1 $generated@@92) (= (ControlFlow 0 14) 13))) $generated@@216)))
$generated@@217)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
