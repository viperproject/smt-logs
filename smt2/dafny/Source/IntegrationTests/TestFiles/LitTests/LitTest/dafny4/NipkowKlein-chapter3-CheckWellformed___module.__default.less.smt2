(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 (T@U Int) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) Int)
(declare-fun $generated@@46 (T@U) Int)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 () Int)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 (Bool) T@U)
(declare-fun $generated@@58 (T@U) Int)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@76 (Int) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 () T@T)
(declare-fun $generated@@139 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@140 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@T T@T) T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@T) T@T)
(declare-fun $generated@@146 (T@T) T@T)
(declare-fun $generated@@196 () T@T)
(declare-fun $generated@@199 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated) $generated@@2))
(assert (= ($generated@@32 $generated@@0) $generated@@3))
(assert (= ($generated@@32 $generated@@1) $generated@@4))
(assert (= ($generated@@16 $generated@@34) 3))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@35 $generated@@37 $generated@@38) $generated@@36)  (and ($generated@@33 $generated@@34 $generated@@37 $generated@@36) ($generated@@33 $generated@@34 $generated@@38 $generated@@36)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@35 $generated@@37 $generated@@38) $generated@@36))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@39 $generated@@41 $generated@@42) $generated@@40)  (and ($generated@@33 $generated@@34 $generated@@41 $generated@@36) ($generated@@33 $generated@@34 $generated@@42 $generated@@36)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@39 $generated@@41 $generated@@42) $generated@@40))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 Int) ) (!  (=> (and (<= 0 $generated@@49) (< $generated@@49 ($generated@@45 $generated@@48))) (< ($generated@@46 ($generated@@47 $generated@@34 ($generated@@43 $generated@@48 $generated@@49))) ($generated@@46 ($generated@@44 $generated@@48))))
 :pattern ( ($generated@@43 $generated@@48 $generated@@49) ($generated@@44 $generated@@48))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (or ($generated@@52 $generated@@53 $generated@@54) (and (< 3 $generated@@50) (and ($generated@@33 $generated@@34 $generated@@53 $generated@@36) ($generated@@33 $generated@@34 $generated@@54 $generated@@36)))) ($generated@@33 $generated@@34 ($generated@@51 $generated@@53 $generated@@54) $generated@@40))
 :pattern ( ($generated@@51 $generated@@53 $generated@@54))
))))
(assert (= ($generated@@45 $generated@@55) 0))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@52 $generated@@59 $generated@@60) (and (< 3 $generated@@50) (and ($generated@@33 $generated@@34 $generated@@59 $generated@@36) ($generated@@33 $generated@@34 $generated@@60 $generated@@36)))) (= ($generated@@51 $generated@@59 $generated@@60) (ite  (and ($generated@@56 $generated@@59) ($generated@@56 $generated@@60)) ($generated@@57 (< ($generated@@58 $generated@@59) ($generated@@58 $generated@@60))) ($generated@@39 $generated@@59 $generated@@60))))
 :pattern ( ($generated@@51 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 $generated@@62) $generated@@62)
 :pattern ( ($generated@@61 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@56 $generated@@65) (= ($generated@@64 $generated@@65) $generated@@9))
 :pattern ( ($generated@@56 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@64 $generated@@67) $generated@@10))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 $generated@@69) (= ($generated@@64 $generated@@69) $generated@@11))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@47 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@47 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@68 $generated@@73) (exists (($generated@@74 T@U) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@35 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@68 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@56 $generated@@77) (exists (($generated@@78 Int) ) (= $generated@@77 ($generated@@76 $generated@@78))))
 :pattern ( ($generated@@56 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@66 $generated@@79) (exists (($generated@@80 T@U) ) (= $generated@@79 ($generated@@44 $generated@@80))))
 :pattern ( ($generated@@66 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@36) (and (= ($generated@@70 $generated@@34 ($generated@@47 $generated@@34 $generated@@82)) $generated@@82) ($generated@@33 $generated@@34 ($generated@@47 $generated@@34 $generated@@82) $generated@@36)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@36))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@81 $generated@@83 $generated@@40) (and (= ($generated@@70 $generated@@34 ($generated@@47 $generated@@34 $generated@@83)) $generated@@83) ($generated@@33 $generated@@34 ($generated@@47 $generated@@34 $generated@@83) $generated@@40)))
 :pattern ( ($generated@@81 $generated@@83 $generated@@40))
)))
(assert  (=> (<= 3 $generated@@50) (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@52 ($generated@@61 $generated@@34 $generated@@84) ($generated@@61 $generated@@34 $generated@@85)) (and (< 3 $generated@@50) (and ($generated@@33 $generated@@34 $generated@@84 $generated@@36) ($generated@@33 $generated@@34 $generated@@85 $generated@@36)))) (= ($generated@@51 ($generated@@61 $generated@@34 $generated@@84) ($generated@@61 $generated@@34 $generated@@85)) (ite  (and ($generated@@56 ($generated@@61 $generated@@34 $generated@@84)) ($generated@@56 ($generated@@61 $generated@@34 $generated@@85))) ($generated@@57 ($generated@@21 ($generated@@61 $generated@@17 ($generated@@20 (< ($generated@@58 ($generated@@61 $generated@@34 $generated@@84)) ($generated@@58 ($generated@@61 $generated@@34 $generated@@85))))))) ($generated@@39 ($generated@@61 $generated@@34 $generated@@84) ($generated@@61 $generated@@34 $generated@@85)))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@61 $generated@@34 $generated@@84) ($generated@@61 $generated@@34 $generated@@85)))
))))
(assert (forall (($generated@@87 Bool) ) (! (= ($generated@@86 ($generated@@57 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@57 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@81 $generated@@88 $generated@@1) (and (= ($generated@@70 $generated@@18 ($generated@@47 $generated@@18 $generated@@88)) $generated@@88) ($generated@@33 $generated@@18 ($generated@@47 $generated@@18 $generated@@88) $generated@@1)))
 :pattern ( ($generated@@81 $generated@@88 $generated@@1))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@81 $generated@@89 $generated) (and (= ($generated@@70 $generated@@17 ($generated@@47 $generated@@17 $generated@@89)) $generated@@89) ($generated@@33 $generated@@17 ($generated@@47 $generated@@17 $generated@@89) $generated)))
 :pattern ( ($generated@@81 $generated@@89 $generated))
)))
(assert (= ($generated@@16 $generated@@90) 4))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@81 $generated@@91 $generated@@0) (and (= ($generated@@70 $generated@@90 ($generated@@47 $generated@@90 $generated@@91)) $generated@@91) ($generated@@33 $generated@@90 ($generated@@47 $generated@@90 $generated@@91) $generated@@0)))
 :pattern ( ($generated@@81 $generated@@91 $generated@@0))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@81 ($generated@@70 $generated@@94 $generated@@92) $generated@@93) ($generated@@33 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@81 ($generated@@70 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (<= 0 ($generated@@45 $generated@@95))
 :pattern ( ($generated@@45 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@64 ($generated@@35 $generated@@96 $generated@@97)) $generated@@11)
 :pattern ( ($generated@@35 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@98 ($generated@@35 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@35 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 ($generated@@35 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@35 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@64 ($generated@@39 $generated@@104 $generated@@105)) $generated@@13)
 :pattern ( ($generated@@39 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 ($generated@@39 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@39 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@39 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@39 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@113 ($generated@@112 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@112 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@32 ($generated@@112 $generated@@115)) $generated@@5)
 :pattern ( ($generated@@112 $generated@@115))
)))
(assert (forall (($generated@@116 Int) ) (! (= ($generated@@64 ($generated@@76 $generated@@116)) $generated@@9)
 :pattern ( ($generated@@76 $generated@@116))
)))
(assert (forall (($generated@@117 Int) ) (! (= ($generated@@58 ($generated@@76 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@76 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@64 ($generated@@44 $generated@@118)) $generated@@10)
 :pattern ( ($generated@@44 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@44 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@44 $generated@@120))
)))
(assert (forall (($generated@@121 Bool) ) (! (= ($generated@@64 ($generated@@57 $generated@@121)) $generated@@12)
 :pattern ( ($generated@@57 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@47 $generated@@123 ($generated@@70 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@70 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (< ($generated@@46 $generated@@124) ($generated@@46 ($generated@@35 $generated@@124 $generated@@125)))
 :pattern ( ($generated@@35 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (< ($generated@@46 $generated@@127) ($generated@@46 ($generated@@35 $generated@@126 $generated@@127)))
 :pattern ( ($generated@@35 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (< ($generated@@46 $generated@@128) ($generated@@46 ($generated@@39 $generated@@128 $generated@@129)))
 :pattern ( ($generated@@39 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (< ($generated@@46 $generated@@131) ($generated@@46 ($generated@@39 $generated@@130 $generated@@131)))
 :pattern ( ($generated@@39 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 Int) ) (! (= ($generated@@33 $generated@@34 ($generated@@76 $generated@@132) $generated@@36) ($generated@@33 $generated@@18 ($generated@@22 $generated@@132) $generated@@1))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@76 $generated@@132) $generated@@36))
)))
(assert (forall (($generated@@133 Bool) ) (! (= ($generated@@33 $generated@@34 ($generated@@57 $generated@@133) $generated@@40) ($generated@@33 $generated@@17 ($generated@@20 $generated@@133) $generated))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@57 $generated@@133) $generated@@40))
)))
(assert (forall (($generated@@135 T@U) ) (! (< ($generated@@134 $generated@@135) ($generated@@46 ($generated@@44 $generated@@135)))
 :pattern ( ($generated@@44 $generated@@135))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@136 $generated@@147 $generated@@148 $generated@@149 ($generated@@143 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@136 $generated@@154 $generated@@155 $generated@@156 ($generated@@143 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@136 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@136 $generated@@163 $generated@@164 $generated@@165 ($generated@@143 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@136 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))) (= ($generated@@16 $generated@@137) 5)) (= ($generated@@16 $generated@@138) 6)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@140 $generated@@172 $generated@@173 ($generated@@144 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@174) $generated@@176) $generated@@174)
 :weight 0
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@181 $generated@@182) (= ($generated@@140 $generated@@177 $generated@@178 ($generated@@144 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@182) ($generated@@140 $generated@@177 $generated@@178 $generated@@180 $generated@@182)))
 :weight 0
))) (= ($generated@@16 $generated@@141) 7)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (= ($generated@@16 ($generated@@142 $generated@@183 $generated@@184)) 8))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@145 ($generated@@142 $generated@@185 $generated@@186)) $generated@@185)
 :pattern ( ($generated@@142 $generated@@185 $generated@@186))
))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@146 ($generated@@142 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@142 $generated@@187 $generated@@188))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@21 ($generated@@136 $generated@@137 $generated@@138 $generated@@17 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@21 ($generated@@47 $generated@@17 ($generated@@140 $generated@@138 $generated@@141 ($generated@@140 $generated@@137 ($generated@@142 $generated@@138 $generated@@141) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@136 $generated@@137 $generated@@138 $generated@@17 ($generated@@139 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@195 $generated@@36) (or (or ($generated@@56 $generated@@195) ($generated@@66 $generated@@195)) ($generated@@68 $generated@@195)))
 :pattern ( ($generated@@68 $generated@@195) ($generated@@33 $generated@@34 $generated@@195 $generated@@36))
 :pattern ( ($generated@@66 $generated@@195) ($generated@@33 $generated@@34 $generated@@195 $generated@@36))
 :pattern ( ($generated@@56 $generated@@195) ($generated@@33 $generated@@34 $generated@@195 $generated@@36))
)))
(assert (= ($generated@@16 $generated@@196) 9))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@81 $generated@@197 ($generated@@112 $generated@@198)) (and (= ($generated@@70 $generated@@196 ($generated@@47 $generated@@196 $generated@@197)) $generated@@197) ($generated@@33 $generated@@196 ($generated@@47 $generated@@196 $generated@@197) ($generated@@112 $generated@@198))))
 :pattern ( ($generated@@81 $generated@@197 ($generated@@112 $generated@@198)))
)))
(assert (= ($generated@@32 $generated@@36) $generated@@7))
(assert (= ($generated@@199 $generated@@36) $generated@@14))
(assert (= ($generated@@32 $generated@@40) $generated@@8))
(assert (= ($generated@@199 $generated@@40) $generated@@15))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@44 $generated@@200) $generated@@36) ($generated@@33 $generated@@196 $generated@@200 ($generated@@112 $generated@@0)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@44 $generated@@200) $generated@@36))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@35 ($generated@@61 $generated@@34 $generated@@201) ($generated@@61 $generated@@34 $generated@@202)) ($generated@@61 $generated@@34 ($generated@@35 $generated@@201 $generated@@202)))
 :pattern ( ($generated@@35 ($generated@@61 $generated@@34 $generated@@201) ($generated@@61 $generated@@34 $generated@@202)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@39 ($generated@@61 $generated@@34 $generated@@203) ($generated@@61 $generated@@34 $generated@@204)) ($generated@@61 $generated@@34 ($generated@@39 $generated@@203 $generated@@204)))
 :pattern ( ($generated@@39 ($generated@@61 $generated@@34 $generated@@203) ($generated@@61 $generated@@34 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@44 ($generated@@61 $generated@@196 $generated@@205)) ($generated@@61 $generated@@34 ($generated@@44 $generated@@205)))
 :pattern ( ($generated@@44 ($generated@@61 $generated@@196 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@57 ($generated@@21 ($generated@@61 $generated@@17 $generated@@206))) ($generated@@61 $generated@@34 ($generated@@57 ($generated@@21 $generated@@206))))
 :pattern ( ($generated@@57 ($generated@@21 ($generated@@61 $generated@@17 $generated@@206))))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@70 $generated@@208 ($generated@@61 $generated@@208 $generated@@207)) ($generated@@61 $generated@@141 ($generated@@70 $generated@@208 $generated@@207)))
 :pattern ( ($generated@@70 $generated@@208 ($generated@@61 $generated@@208 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ) (!  (=> (= ($generated@@45 $generated@@209) 0) (= $generated@@209 $generated@@55))
 :pattern ( ($generated@@45 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@33 $generated@@196 $generated@@210 ($generated@@112 $generated@@211)) (forall (($generated@@212 Int) ) (!  (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@45 $generated@@210))) ($generated@@81 ($generated@@43 $generated@@210 $generated@@212) $generated@@211))
 :pattern ( ($generated@@43 $generated@@210 $generated@@212))
)))
 :pattern ( ($generated@@33 $generated@@196 $generated@@210 ($generated@@112 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 Int) ) (!  (=> (and (<= 0 $generated@@214) (< $generated@@214 ($generated@@45 $generated@@213))) (< ($generated@@46 ($generated@@47 $generated@@34 ($generated@@43 $generated@@213 $generated@@214))) ($generated@@134 $generated@@213)))
 :pattern ( ($generated@@46 ($generated@@47 $generated@@34 ($generated@@43 $generated@@213 $generated@@214))))
)))
(assert (forall (($generated@@215 T@U) ) (! ($generated@@33 $generated@@18 $generated@@215 $generated@@1)
 :pattern ( ($generated@@33 $generated@@18 $generated@@215 $generated@@1))
)))
(assert (forall (($generated@@216 T@U) ) (! ($generated@@33 $generated@@17 $generated@@216 $generated)
 :pattern ( ($generated@@33 $generated@@17 $generated@@216 $generated))
)))
(assert (forall (($generated@@217 T@U) ) (! ($generated@@33 $generated@@90 $generated@@217 $generated@@0)
 :pattern ( ($generated@@33 $generated@@90 $generated@@217 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 (T@U) Bool)
(declare-fun $generated@@224 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@225 true))
(let (($generated@@226  (=> (and ($generated@@56 $generated@@218) ($generated@@56 $generated@@219)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@56 $generated@@218)) (=> ($generated@@56 $generated@@218) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@56 $generated@@219)))))))
(let (($generated@@227  (=> (not ($generated@@56 $generated@@218)) (and (=> (= (ControlFlow 0 7) 3) $generated@@226) (=> (= (ControlFlow 0 7) 5) $generated@@225)))))
(let (($generated@@228  (=> ($generated@@56 $generated@@218) (and (=> (= (ControlFlow 0 6) 3) $generated@@226) (=> (= (ControlFlow 0 6) 5) $generated@@225)))))
(let (($generated@@229 true))
(let (($generated@@230  (=> (= $generated@@220 ($generated@@139 $generated@@221 $generated@@222 $generated@@6 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@229) (=> (= (ControlFlow 0 8) 6) $generated@@228)) (=> (= (ControlFlow 0 8) 7) $generated@@227)))))
(let (($generated@@231  (=> (and ($generated@@223 $generated@@222) ($generated@@224 $generated@@222)) (=> (and (and ($generated@@33 $generated@@34 $generated@@218 $generated@@36) ($generated@@33 $generated@@34 $generated@@219 $generated@@36)) (and (= 3 $generated@@50) (= (ControlFlow 0 9) 8))) $generated@@230))))
$generated@@231))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
