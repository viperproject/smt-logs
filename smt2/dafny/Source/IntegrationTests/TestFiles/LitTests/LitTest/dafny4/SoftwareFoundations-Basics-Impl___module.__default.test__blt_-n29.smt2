(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@82 (T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@127 (T@U) Int)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T T@T) T@T)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(declare-fun $generated@@191 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@28) 3))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (or ($generated@@26 $generated@@30 $generated@@31) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@30 $generated@@29) ($generated@@27 $generated@@28 $generated@@31 $generated@@29)))) ($generated@@27 $generated@@28 ($generated@@25 $generated@@30 $generated@@31) $generated@@29))
 :pattern ( ($generated@@25 $generated@@30 $generated@@31))
))))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@33 $generated@@35 $generated@@36) (and (< 2 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@35 $generated@@34) ($generated@@27 $generated@@28 $generated@@36 $generated@@34)))) ($generated@@27 $generated@@28 ($generated@@32 $generated@@35 $generated@@36) $generated@@29))
 :pattern ( ($generated@@32 $generated@@35 $generated@@36))
))))
(assert (= ($generated@@37 $generated@@38) $generated@@2))
(assert (= ($generated@@37 $generated@@39) $generated@@3))
(assert (= ($generated@@37 $generated@@40) $generated@@4))
(assert ($generated@@27 $generated@@28 $generated@@38 $generated@@29))
(assert ($generated@@27 $generated@@28 $generated@@39 $generated@@29))
(assert ($generated@@27 $generated@@28 $generated@@40 $generated@@34))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@26 $generated@@42 $generated@@43) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@42 $generated@@29) ($generated@@27 $generated@@28 $generated@@43 $generated@@29)))) (= ($generated@@25 $generated@@42 $generated@@43) (ite ($generated@@41 $generated@@42) $generated@@43 $generated@@39)))
 :pattern ( ($generated@@25 $generated@@42 $generated@@43))
))))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@46) (= $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@41 $generated@@50) (= ($generated@@37 $generated@@50) $generated@@2))
 :pattern ( ($generated@@41 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@37 $generated@@52) $generated@@3))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@37 $generated@@54) $generated@@4))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@37 $generated@@56) $generated@@5))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@57 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@57 $generated@@60 $generated@@59))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@63 $generated@@66 $generated@@67) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@66 $generated@@34) ($generated@@27 $generated@@28 $generated@@67 $generated@@34)))) (and (=> (not ($generated@@53 $generated@@66)) (let (($generated@@68 ($generated@@64 $generated@@66)))
 (=> (not ($generated@@53 $generated@@67)) (let (($generated@@69 ($generated@@64 $generated@@67)))
($generated@@63 $generated@@68 $generated@@69))))) (= ($generated@@61 ($generated@@62 $generated@@65) $generated@@66 $generated@@67) (ite ($generated@@53 $generated@@66) (ite ($generated@@53 $generated@@67) $generated@@38 ($generated@@47 $generated@@28 $generated@@39)) (let (($generated@@70 ($generated@@64 $generated@@66)))
(ite ($generated@@53 $generated@@67) $generated@@39 (let (($generated@@71 ($generated@@64 $generated@@67)))
($generated@@61 $generated@@65 $generated@@70 $generated@@71))))))))
 :pattern ( ($generated@@61 ($generated@@62 $generated@@65) $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@41 $generated@@72) (= $generated@@72 $generated@@38))
 :pattern ( ($generated@@41 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@51 $generated@@73) (= $generated@@73 $generated@@39))
 :pattern ( ($generated@@51 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@53 $generated@@74) (= $generated@@74 $generated@@40))
 :pattern ( ($generated@@53 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@55 $generated@@76) (exists (($generated@@77 T@U) ) (= $generated@@76 ($generated@@75 $generated@@77))))
 :pattern ( ($generated@@55 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@75 $generated@@78) $generated@@34) ($generated@@27 $generated@@28 $generated@@78 $generated@@34))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@75 $generated@@78) $generated@@34))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@33 $generated@@84 $generated@@85) (and (< 2 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@84 $generated@@34) ($generated@@27 $generated@@28 $generated@@85 $generated@@34)))) (and (and (and ($generated@@79 $generated@@84 $generated@@85) (and ($generated@@63 $generated@@84 $generated@@85) ($generated@@80 ($generated@@61 ($generated@@62 $generated@@81) $generated@@84 $generated@@85)))) ($generated@@26 ($generated@@82 ($generated@@62 $generated@@81) $generated@@84 $generated@@85) ($generated@@83 ($generated@@61 ($generated@@62 $generated@@81) $generated@@84 $generated@@85)))) (= ($generated@@32 $generated@@84 $generated@@85) ($generated@@25 ($generated@@82 ($generated@@62 $generated@@81) $generated@@84 $generated@@85) ($generated@@83 ($generated@@61 ($generated@@62 $generated@@81) $generated@@84 $generated@@85))))))
 :pattern ( ($generated@@32 $generated@@84 $generated@@85))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@63 $generated@@87 $generated@@88) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@87 $generated@@34) ($generated@@27 $generated@@28 $generated@@88 $generated@@34)))) ($generated@@27 $generated@@28 ($generated@@61 $generated@@86 $generated@@87 $generated@@88) $generated@@29))
 :pattern ( ($generated@@61 $generated@@86 $generated@@87 $generated@@88))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@79 $generated@@90 $generated@@91) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@90 $generated@@34) ($generated@@27 $generated@@28 $generated@@91 $generated@@34)))) ($generated@@27 $generated@@28 ($generated@@82 $generated@@89 $generated@@90 $generated@@91) $generated@@29))
 :pattern ( ($generated@@82 $generated@@89 $generated@@90 $generated@@91))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@61 ($generated@@62 $generated@@92) $generated@@93 $generated@@94) ($generated@@61 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@61 ($generated@@62 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@82 ($generated@@62 $generated@@95) $generated@@96 $generated@@97) ($generated@@82 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@82 ($generated@@62 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@98 $generated@@99) (or ($generated@@41 $generated@@99) ($generated@@51 $generated@@99)))
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@33 ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101)) (and (< 2 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@100 $generated@@34) ($generated@@27 $generated@@28 $generated@@101 $generated@@34)))) (and (and (and ($generated@@79 ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101)) (and ($generated@@63 ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101)) ($generated@@80 ($generated@@47 $generated@@28 ($generated@@61 ($generated@@62 $generated@@81) ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101)))))) ($generated@@26 ($generated@@47 $generated@@28 ($generated@@82 ($generated@@62 $generated@@81) ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101))) ($generated@@47 $generated@@28 ($generated@@83 ($generated@@47 $generated@@28 ($generated@@61 ($generated@@62 $generated@@81) ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101))))))) (= ($generated@@32 ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101)) ($generated@@47 $generated@@28 ($generated@@25 ($generated@@47 $generated@@28 ($generated@@82 ($generated@@62 $generated@@81) ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101))) ($generated@@47 $generated@@28 ($generated@@83 ($generated@@47 $generated@@28 ($generated@@61 ($generated@@62 $generated@@81) ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101))))))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@47 $generated@@28 $generated@@100) ($generated@@47 $generated@@28 $generated@@101)))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@79 ($generated@@47 $generated@@28 $generated@@103) ($generated@@47 $generated@@28 $generated@@104)) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@103 $generated@@34) ($generated@@27 $generated@@28 $generated@@104 $generated@@34)))) (and (=> (not ($generated@@13 ($generated@@47 $generated@@9 ($generated@@12 ($generated@@53 ($generated@@47 $generated@@28 $generated@@103)))))) (let (($generated@@105 ($generated@@47 $generated@@28 ($generated@@64 ($generated@@47 $generated@@28 $generated@@103)))))
 (=> (not ($generated@@13 ($generated@@47 $generated@@9 ($generated@@12 ($generated@@53 ($generated@@47 $generated@@28 $generated@@104)))))) (let (($generated@@106 ($generated@@47 $generated@@28 ($generated@@64 ($generated@@47 $generated@@28 $generated@@104)))))
($generated@@79 $generated@@105 $generated@@106))))) (= ($generated@@82 ($generated@@62 $generated@@102) ($generated@@47 $generated@@28 $generated@@103) ($generated@@47 $generated@@28 $generated@@104)) (ite ($generated@@53 ($generated@@47 $generated@@28 $generated@@103)) $generated@@38 (let (($generated@@107 ($generated@@47 $generated@@28 ($generated@@64 ($generated@@47 $generated@@28 $generated@@103)))))
(ite ($generated@@53 ($generated@@47 $generated@@28 $generated@@104)) $generated@@39 (let (($generated@@108 ($generated@@47 $generated@@28 ($generated@@64 ($generated@@47 $generated@@28 $generated@@104)))))
($generated@@47 $generated@@28 ($generated@@82 ($generated@@62 $generated@@102) $generated@@107 $generated@@108)))))))))
 :weight 3
 :pattern ( ($generated@@82 ($generated@@62 $generated@@102) ($generated@@47 $generated@@28 $generated@@103) ($generated@@47 $generated@@28 $generated@@104)))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@79 $generated@@110 $generated@@111) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@110 $generated@@34) ($generated@@27 $generated@@28 $generated@@111 $generated@@34)))) (and (=> (not ($generated@@53 $generated@@110)) (let (($generated@@112 ($generated@@64 $generated@@110)))
 (=> (not ($generated@@53 $generated@@111)) (let (($generated@@113 ($generated@@64 $generated@@111)))
($generated@@79 $generated@@112 $generated@@113))))) (= ($generated@@82 ($generated@@62 $generated@@109) $generated@@110 $generated@@111) (ite ($generated@@53 $generated@@110) $generated@@38 (let (($generated@@114 ($generated@@64 $generated@@110)))
(ite ($generated@@53 $generated@@111) $generated@@39 (let (($generated@@115 ($generated@@64 $generated@@111)))
($generated@@82 $generated@@109 $generated@@114 $generated@@115))))))))
 :pattern ( ($generated@@82 ($generated@@62 $generated@@109) $generated@@110 $generated@@111))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@116 T@U) ) (!  (=> (or ($generated@@80 $generated@@116) (and (< 1 $generated@@24) ($generated@@27 $generated@@28 $generated@@116 $generated@@29))) ($generated@@27 $generated@@28 ($generated@@83 $generated@@116) $generated@@29))
 :pattern ( ($generated@@83 $generated@@116))
))))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@117 $generated@@29) (or ($generated@@41 $generated@@117) ($generated@@51 $generated@@117)))
 :pattern ( ($generated@@51 $generated@@117) ($generated@@27 $generated@@28 $generated@@117 $generated@@29))
 :pattern ( ($generated@@41 $generated@@117) ($generated@@27 $generated@@28 $generated@@117 $generated@@29))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@118 $generated@@34) (or ($generated@@53 $generated@@118) ($generated@@55 $generated@@118)))
 :pattern ( ($generated@@55 $generated@@118) ($generated@@27 $generated@@28 $generated@@118 $generated@@34))
 :pattern ( ($generated@@53 $generated@@118) ($generated@@27 $generated@@28 $generated@@118 $generated@@34))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@41 $generated@@119) ($generated@@41 $generated@@120)) ($generated@@44 $generated@@119 $generated@@120))
 :pattern ( ($generated@@44 $generated@@119 $generated@@120) ($generated@@41 $generated@@119))
 :pattern ( ($generated@@44 $generated@@119 $generated@@120) ($generated@@41 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@51 $generated@@121) ($generated@@51 $generated@@122)) ($generated@@44 $generated@@121 $generated@@122))
 :pattern ( ($generated@@44 $generated@@121 $generated@@122) ($generated@@51 $generated@@121))
 :pattern ( ($generated@@44 $generated@@121 $generated@@122) ($generated@@51 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@37 ($generated@@75 $generated@@123)) $generated@@5)
 :pattern ( ($generated@@75 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@64 ($generated@@75 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@75 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@57 $generated@@126 ($generated@@58 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@58 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@128 T@U) ) (! (< ($generated@@127 $generated@@128) ($generated@@127 ($generated@@75 $generated@@128)))
 :pattern ( ($generated@@75 $generated@@128))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@129 $generated@@140 $generated@@141 $generated@@142 ($generated@@136 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@129 $generated@@147 $generated@@148 $generated@@149 ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@129 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@129 $generated@@156 $generated@@157 $generated@@158 ($generated@@136 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@129 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))) (= ($generated@@8 $generated@@130) 4)) (= ($generated@@8 $generated@@131) 5)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@133 $generated@@165 $generated@@166 ($generated@@137 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@167) $generated@@169) $generated@@167)
 :weight 0
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@174 $generated@@175) (= ($generated@@133 $generated@@170 $generated@@171 ($generated@@137 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@175) ($generated@@133 $generated@@170 $generated@@171 $generated@@173 $generated@@175)))
 :weight 0
))) (= ($generated@@8 $generated@@134) 6)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@8 ($generated@@135 $generated@@176 $generated@@177)) 7))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@135 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@139 ($generated@@135 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@135 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@13 ($generated@@129 $generated@@130 $generated@@131 $generated@@9 ($generated@@132 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@13 ($generated@@57 $generated@@9 ($generated@@133 $generated@@131 $generated@@134 ($generated@@133 $generated@@130 ($generated@@135 $generated@@131 $generated@@134) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@129 $generated@@130 $generated@@131 $generated@@9 ($generated@@132 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@188 T@U) ) (!  (=> (or ($generated@@80 $generated@@188) (and (< 1 $generated@@24) ($generated@@27 $generated@@28 $generated@@188 $generated@@29))) (= ($generated@@83 $generated@@188) (ite ($generated@@41 $generated@@188) $generated@@39 $generated@@38)))
 :pattern ( ($generated@@83 $generated@@188))
))))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (or ($generated@@26 ($generated@@47 $generated@@28 $generated@@189) ($generated@@47 $generated@@28 $generated@@190)) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@189 $generated@@29) ($generated@@27 $generated@@28 $generated@@190 $generated@@29)))) (= ($generated@@25 ($generated@@47 $generated@@28 $generated@@189) ($generated@@47 $generated@@28 $generated@@190)) (ite ($generated@@41 ($generated@@47 $generated@@28 $generated@@189)) $generated@@190 $generated@@39)))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@47 $generated@@28 $generated@@189) ($generated@@47 $generated@@28 $generated@@190)))
))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@192 $generated@@194) ($generated@@27 $generated@@28 $generated@@193 $generated@@29)) ($generated@@191 $generated@@28 $generated@@193 $generated@@29 $generated@@194))
 :pattern ( ($generated@@191 $generated@@28 $generated@@193 $generated@@29 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@192 $generated@@196) ($generated@@27 $generated@@28 $generated@@195 $generated@@34)) ($generated@@191 $generated@@28 $generated@@195 $generated@@34 $generated@@196))
 :pattern ( ($generated@@191 $generated@@28 $generated@@195 $generated@@34 $generated@@196))
)))
(assert (= ($generated@@197 $generated@@29) $generated@@0))
(assert (= ($generated@@198 $generated@@29) $generated@@6))
(assert (= ($generated@@197 $generated@@34) $generated@@1))
(assert (= ($generated@@198 $generated@@34) $generated@@7))
(assert (= $generated@@38 ($generated@@47 $generated@@28 $generated@@38)))
(assert (= $generated@@39 ($generated@@47 $generated@@28 $generated@@39)))
(assert (= $generated@@40 ($generated@@47 $generated@@28 $generated@@40)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (or ($generated@@63 ($generated@@47 $generated@@28 $generated@@200) ($generated@@47 $generated@@28 $generated@@201)) (and (< 1 $generated@@24) (and ($generated@@27 $generated@@28 $generated@@200 $generated@@34) ($generated@@27 $generated@@28 $generated@@201 $generated@@34)))) (and (=> (not ($generated@@13 ($generated@@47 $generated@@9 ($generated@@12 ($generated@@53 ($generated@@47 $generated@@28 $generated@@200)))))) (let (($generated@@202 ($generated@@47 $generated@@28 ($generated@@64 ($generated@@47 $generated@@28 $generated@@200)))))
 (=> (not ($generated@@13 ($generated@@47 $generated@@9 ($generated@@12 ($generated@@53 ($generated@@47 $generated@@28 $generated@@201)))))) (let (($generated@@203 ($generated@@47 $generated@@28 ($generated@@64 ($generated@@47 $generated@@28 $generated@@201)))))
($generated@@63 $generated@@202 $generated@@203))))) (= ($generated@@61 ($generated@@62 $generated@@199) ($generated@@47 $generated@@28 $generated@@200) ($generated@@47 $generated@@28 $generated@@201)) (ite ($generated@@53 ($generated@@47 $generated@@28 $generated@@200)) (ite ($generated@@53 ($generated@@47 $generated@@28 $generated@@201)) $generated@@38 ($generated@@47 $generated@@28 $generated@@39)) (let (($generated@@204 ($generated@@47 $generated@@28 ($generated@@64 ($generated@@47 $generated@@28 $generated@@200)))))
(ite ($generated@@53 ($generated@@47 $generated@@28 $generated@@201)) $generated@@39 (let (($generated@@205 ($generated@@47 $generated@@28 ($generated@@64 ($generated@@47 $generated@@28 $generated@@201)))))
($generated@@47 $generated@@28 ($generated@@61 ($generated@@62 $generated@@199) $generated@@204 $generated@@205)))))))))
 :weight 3
 :pattern ( ($generated@@61 ($generated@@62 $generated@@199) ($generated@@47 $generated@@28 $generated@@200) ($generated@@47 $generated@@28 $generated@@201)))
))))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@192 $generated@@207) (and ($generated@@55 $generated@@206) ($generated@@191 $generated@@28 $generated@@206 $generated@@34 $generated@@207))) ($generated@@191 $generated@@28 ($generated@@64 $generated@@206) $generated@@34 $generated@@207))
 :pattern ( ($generated@@191 $generated@@28 ($generated@@64 $generated@@206) $generated@@34 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ) (! (= ($generated@@75 ($generated@@47 $generated@@28 $generated@@208)) ($generated@@47 $generated@@28 ($generated@@75 $generated@@208)))
 :pattern ( ($generated@@75 ($generated@@47 $generated@@28 $generated@@208)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@T) ) (! (= ($generated@@58 $generated@@210 ($generated@@47 $generated@@210 $generated@@209)) ($generated@@47 $generated@@134 ($generated@@58 $generated@@210 $generated@@209)))
 :pattern ( ($generated@@58 $generated@@210 ($generated@@47 $generated@@210 $generated@@209)))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@211 T@U) ) (!  (=> (or ($generated@@80 ($generated@@47 $generated@@28 $generated@@211)) (and (< 1 $generated@@24) ($generated@@27 $generated@@28 $generated@@211 $generated@@29))) (= ($generated@@83 ($generated@@47 $generated@@28 $generated@@211)) (ite ($generated@@41 ($generated@@47 $generated@@28 $generated@@211)) $generated@@39 $generated@@38)))
 :weight 3
 :pattern ( ($generated@@83 ($generated@@47 $generated@@28 $generated@@211)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@220  (=> (and (and (and (= $generated@@212 ($generated@@132 $generated@@213 $generated@@214 $generated false)) (= $generated@@215 ($generated@@47 $generated@@28 ($generated@@75 ($generated@@47 $generated@@28 ($generated@@75 ($generated@@47 $generated@@28 $generated@@40))))))) (and (= $generated@@216 ($generated@@75 ($generated@@75 $generated@@215))) ($generated@@191 $generated@@28 $generated@@215 $generated@@34 $generated@@214))) (and (and ($generated@@191 $generated@@28 $generated@@215 $generated@@34 $generated@@214) ($generated@@33 $generated@@215 $generated@@215)) (and ($generated@@98 ($generated@@32 $generated@@215 $generated@@215)) ($generated@@33 $generated@@215 $generated@@215)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@44 ($generated@@32 $generated@@215 $generated@@215) $generated@@39)) (=> ($generated@@44 ($generated@@32 $generated@@215 $generated@@215) $generated@@39) (=> ($generated@@191 $generated@@28 $generated@@215 $generated@@34 $generated@@214) (=> (and (and ($generated@@191 $generated@@28 $generated@@216 $generated@@34 $generated@@214) ($generated@@33 $generated@@215 $generated@@216)) (and ($generated@@98 ($generated@@32 $generated@@215 $generated@@216)) ($generated@@33 $generated@@215 $generated@@216))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@44 ($generated@@32 $generated@@215 $generated@@216) $generated@@38)) (=> ($generated@@44 ($generated@@32 $generated@@215 $generated@@216) $generated@@38) (=> ($generated@@191 $generated@@28 $generated@@216 $generated@@34 $generated@@214) (=> (and ($generated@@191 $generated@@28 $generated@@215 $generated@@34 $generated@@214) ($generated@@33 $generated@@216 $generated@@215)) (=> (and (and ($generated@@98 ($generated@@32 $generated@@216 $generated@@215)) ($generated@@33 $generated@@216 $generated@@215)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@44 ($generated@@32 $generated@@216 $generated@@215) $generated@@39)))))))))))))
(let (($generated@@221  (=> (and ($generated@@192 $generated@@214) ($generated@@217 $generated@@214)) (=> (and (and ($generated@@27 $generated@@28 $generated@@218 $generated@@34) ($generated@@191 $generated@@28 $generated@@218 $generated@@34 $generated@@214)) true) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@219 $generated@@34) ($generated@@191 $generated@@28 $generated@@219 $generated@@34 $generated@@214)) true) (and (= 3 $generated@@24) (= (ControlFlow 0 5) 2))) $generated@@220)))))
$generated@@221)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
