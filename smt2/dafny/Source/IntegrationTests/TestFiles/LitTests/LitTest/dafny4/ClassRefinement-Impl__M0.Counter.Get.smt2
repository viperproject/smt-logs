(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@T T@T) T@T)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 () T@T)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@128 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@164 (T@U T@U) Bool)
(declare-fun $generated@@167 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@2) 0))
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@31 $generated@@2) $generated@@3))
(assert (= ($generated@@13 $generated@@33) 3))
(assert (forall (($generated@@37 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 $generated@@34)  (or (= $generated@@37 $generated@@35) (= ($generated@@36 $generated@@37) $generated@@34)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 $generated@@34))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@38 $generated@@33 $generated@@41 $generated@@39 $generated@@42) ($generated@@38 $generated@@33 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@38 $generated@@33 $generated@@41 $generated@@39 $generated@@42))
 :pattern ( ($generated@@38 $generated@@33 $generated@@41 $generated@@40 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@38 $generated@@33 $generated@@44 $generated@@43 $generated@@45) ($generated@@38 $generated@@33 $generated@@44 $generated@@34 $generated@@45))
 :pattern ( ($generated@@38 $generated@@33 $generated@@44 $generated@@43 $generated@@45))
 :pattern ( ($generated@@38 $generated@@33 $generated@@44 $generated@@34 $generated@@45))
)))
(assert (= ($generated@@29 $generated@@46) 0))
(assert (= ($generated@@47 $generated@@6 $generated@@11) $generated@@46))
(assert ($generated@@48 $generated@@46))
(assert (= ($generated@@29 $generated@@49) 0))
(assert (= ($generated@@47 $generated@@6 $generated@@12) $generated@@49))
(assert ($generated@@48 $generated@@49))
(assert  (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@51 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@51 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@51 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@13 $generated@@52) 4)) (= ($generated@@13 $generated@@53) 5)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@13 ($generated@@54 $generated@@69 $generated@@70)) 6))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@54 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@54 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@54 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@54 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@38 $generated@@33 $generated@@75 $generated@@40 $generated@@76)  (or (= $generated@@75 $generated@@35) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@76 $generated@@75) $generated@@2)))))
 :pattern ( ($generated@@38 $generated@@33 $generated@@75 $generated@@40 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@38 $generated@@33 $generated@@77 $generated@@34 $generated@@78)  (or (= $generated@@77 $generated@@35) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@78 $generated@@77) $generated@@2)))))
 :pattern ( ($generated@@38 $generated@@33 $generated@@77 $generated@@34 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 ($generated@@50 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@50 $generated@@81 $generated@@80))
)))
(assert (= ($generated@@13 $generated@@82) 7))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@32 $generated@@82 $generated@@86 ($generated@@83 $generated@@87)) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@84 $generated@@86 $generated@@88) ($generated@@85 $generated@@88 $generated@@87))
 :pattern ( ($generated@@84 $generated@@86 $generated@@88))
)))
 :pattern ( ($generated@@32 $generated@@82 $generated@@86 ($generated@@83 $generated@@87)))
)))
(assert ($generated@@48 $generated@@2))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (and (and ($generated@@89 $generated@@90) (and (or (not (= $generated@@91 $generated@@35)) (not true)) (= ($generated@@36 $generated@@91) $generated@@34))) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@90 $generated@@91) $generated@@2)))) ($generated@@38 $generated@@15 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@90 $generated@@91) $generated@@46)) $generated $generated@@90))
 :pattern ( ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@90 $generated@@91) $generated@@46)))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@92 ($generated@@79 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@38 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@92 ($generated@@79 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@85 $generated@@97 $generated@@40) (and (= ($generated@@79 $generated@@33 ($generated@@50 $generated@@33 $generated@@97)) $generated@@97) ($generated@@32 $generated@@33 ($generated@@50 $generated@@33 $generated@@97) $generated@@40)))
 :pattern ( ($generated@@85 $generated@@97 $generated@@40))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@85 $generated@@98 $generated@@39) (and (= ($generated@@79 $generated@@33 ($generated@@50 $generated@@33 $generated@@98)) $generated@@98) ($generated@@32 $generated@@33 ($generated@@50 $generated@@33 $generated@@98) $generated@@39)))
 :pattern ( ($generated@@85 $generated@@98 $generated@@39))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@85 $generated@@99 $generated@@34) (and (= ($generated@@79 $generated@@33 ($generated@@50 $generated@@33 $generated@@99)) $generated@@99) ($generated@@32 $generated@@33 ($generated@@50 $generated@@33 $generated@@99) $generated@@34)))
 :pattern ( ($generated@@85 $generated@@99 $generated@@34))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@85 $generated@@100 $generated@@43) (and (= ($generated@@79 $generated@@33 ($generated@@50 $generated@@33 $generated@@100)) $generated@@100) ($generated@@32 $generated@@33 ($generated@@50 $generated@@33 $generated@@100) $generated@@43)))
 :pattern ( ($generated@@85 $generated@@100 $generated@@43))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@101 $generated@@39)  (and ($generated@@32 $generated@@33 $generated@@101 $generated@@40) (or (not (= $generated@@101 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@101 $generated@@39))
 :pattern ( ($generated@@32 $generated@@33 $generated@@101 $generated@@40))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@102 $generated@@43)  (and ($generated@@32 $generated@@33 $generated@@102 $generated@@34) (or (not (= $generated@@102 $generated@@35)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@102 $generated@@43))
 :pattern ( ($generated@@32 $generated@@33 $generated@@102 $generated@@34))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (and ($generated@@89 $generated@@103) (and (or (not (= $generated@@104 $generated@@35)) (not true)) (= ($generated@@36 $generated@@104) $generated@@34))) ($generated@@32 $generated@@82 ($generated@@50 $generated@@82 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@103 $generated@@104) $generated@@49)) ($generated@@83 $generated@@39)))
 :pattern ( ($generated@@50 $generated@@82 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@103 $generated@@104) $generated@@49)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and (and ($generated@@89 $generated@@105) (and (or (not (= $generated@@106 $generated@@35)) (not true)) (= ($generated@@36 $generated@@106) $generated@@34))) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@105 $generated@@106) $generated@@2)))) ($generated@@38 $generated@@82 ($generated@@50 $generated@@82 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@105 $generated@@106) $generated@@49)) ($generated@@83 $generated@@39) $generated@@105))
 :pattern ( ($generated@@50 $generated@@82 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@105 $generated@@106) $generated@@49)))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (and (= ($generated@@107 ($generated@@47 $generated@@108 $generated@@109)) $generated@@108) (= ($generated@@31 ($generated@@47 $generated@@108 $generated@@109)) $generated@@109))
 :pattern ( ($generated@@47 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@85 $generated@@110 $generated) (and (= ($generated@@79 $generated@@15 ($generated@@50 $generated@@15 $generated@@110)) $generated@@110) ($generated@@32 $generated@@15 ($generated@@50 $generated@@15 $generated@@110) $generated)))
 :pattern ( ($generated@@85 $generated@@110 $generated))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@85 ($generated@@79 $generated@@113 $generated@@111) $generated@@112) ($generated@@32 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@85 ($generated@@79 $generated@@113 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@38 $generated@@82 $generated@@114 ($generated@@83 $generated@@115) $generated@@116) (forall (($generated@@117 T@U) ) (!  (=> ($generated@@84 $generated@@114 $generated@@117) ($generated@@92 $generated@@117 $generated@@115 $generated@@116))
 :pattern ( ($generated@@84 $generated@@114 $generated@@117))
)))
 :pattern ( ($generated@@38 $generated@@82 $generated@@114 ($generated@@83 $generated@@115) $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! ($generated@@32 $generated@@33 $generated@@118 $generated@@40)
 :pattern ( ($generated@@32 $generated@@33 $generated@@118 $generated@@40))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@83 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@83 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@30 ($generated@@83 $generated@@121)) $generated@@1)
 :pattern ( ($generated@@83 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@50 $generated@@123 ($generated@@79 $generated@@123 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@79 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@89 $generated@@124) (and (or (not (= $generated@@125 $generated@@35)) (not true)) (= ($generated@@36 $generated@@125) $generated@@34))) ($generated@@32 $generated@@15 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@124 $generated@@125) $generated@@46)) $generated))
 :pattern ( ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@124 $generated@@125) $generated@@46)))
)))
(assert  (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@126 $generated@@129 $generated@@130 $generated@@131 ($generated@@128 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@134 $generated@@135) $generated@@132)
 :weight 0
)) (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@141 $generated@@143) (= ($generated@@126 $generated@@136 $generated@@137 $generated@@138 ($generated@@128 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@143 $generated@@144) ($generated@@126 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@143 $generated@@144)))
 :weight 0
)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@126 $generated@@145 $generated@@146 $generated@@147 ($generated@@128 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@126 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@18 ($generated@@126 $generated@@33 $generated@@52 $generated@@14 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@18 ($generated@@50 $generated@@14 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@126 $generated@@33 $generated@@52 $generated@@14 ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> ($generated@@85 $generated@@160 ($generated@@83 $generated@@161)) (and (= ($generated@@79 $generated@@82 ($generated@@50 $generated@@82 $generated@@160)) $generated@@160) ($generated@@32 $generated@@82 ($generated@@50 $generated@@82 $generated@@160) ($generated@@83 $generated@@161))))
 :pattern ( ($generated@@85 $generated@@160 ($generated@@83 $generated@@161)))
)))
(assert  (=> (<= 0 $generated@@162) (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or ($generated@@164 $generated@@165 $generated@@166) (and (< 0 $generated@@162) (and ($generated@@89 $generated@@165) (and (or (not (= $generated@@166 $generated@@35)) (not true)) (and ($generated@@32 $generated@@33 $generated@@166 $generated@@43) ($generated@@38 $generated@@33 $generated@@166 $generated@@43 $generated@@165)))))) (=> ($generated@@163 $generated@@165 $generated@@166) ($generated@@84 ($generated@@50 $generated@@82 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@165 $generated@@166) $generated@@49)) ($generated@@79 $generated@@33 $generated@@166))))
 :pattern ( ($generated@@163 $generated@@165 $generated@@166))
))))
(assert (= ($generated@@30 $generated@@40) $generated@@4))
(assert (= ($generated@@167 $generated@@40) $generated@@9))
(assert (= ($generated@@30 $generated@@39) $generated@@5))
(assert (= ($generated@@167 $generated@@39) $generated@@9))
(assert (= ($generated@@30 $generated@@34) $generated@@7))
(assert (= ($generated@@167 $generated@@34) $generated@@10))
(assert (= ($generated@@30 $generated@@43) $generated@@8))
(assert (= ($generated@@167 $generated@@43) $generated@@10))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! ($generated@@38 $generated@@15 $generated@@169 $generated $generated@@168)
 :pattern ( ($generated@@38 $generated@@15 $generated@@169 $generated $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@32 $generated@@15 $generated@@170 $generated)
 :pattern ( ($generated@@32 $generated@@15 $generated@@170 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@177  (=> (= (ControlFlow 0 3) (- 0 2)) (= $generated@@171 ($generated@@20 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@172 $generated@@173) $generated@@46)))))))
(let (($generated@@178  (=> (= $generated@@174 ($generated@@20 ($generated@@50 $generated@@15 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@33 ($generated@@54 $generated@@52 $generated@@53) $generated@@172 $generated@@173) $generated@@46)))) (=> (and (= $generated@@171 $generated@@174) (= (ControlFlow 0 4) 3)) $generated@@177))))
(let (($generated@@179 true))
(let (($generated@@180  (=> (= $generated@@175 ($generated@@127 $generated@@35 $generated@@172 $generated@@2 false)) (and (=> (= (ControlFlow 0 5) 4) $generated@@178) (=> (= (ControlFlow 0 5) 1) $generated@@179)))))
(let (($generated@@181  (=> (and ($generated@@89 $generated@@172) ($generated@@176 $generated@@172)) (=> (and (and (and (or (not (= $generated@@173 $generated@@35)) (not true)) (and ($generated@@32 $generated@@33 $generated@@173 $generated@@43) ($generated@@38 $generated@@33 $generated@@173 $generated@@43 $generated@@172))) (= 1 $generated@@162)) (and ($generated@@163 $generated@@172 $generated@@173) (= (ControlFlow 0 6) 5))) $generated@@180))))
$generated@@181))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
