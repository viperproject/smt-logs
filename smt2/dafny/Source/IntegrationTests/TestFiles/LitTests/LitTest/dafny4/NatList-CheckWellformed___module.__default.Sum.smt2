(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@58 () Int)
(declare-fun $generated@@59 (T@U T@U) Int)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@69 (T@U T@U T@U) Bool)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Int)
(declare-fun $generated@@101 (T@U) Int)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@8 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@8 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) $generated@@2))
(assert (= ($generated@@6 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@22 $generated@@28 $generated@@27 ($generated@@29 $generated@@31) $generated@@32))
 :pattern ( ($generated@@22 $generated@@28 $generated@@27 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@28 $generated@@27 ($generated@@29 $generated@@34))
 :pattern ( ($generated@@33 $generated@@28 $generated@@27 ($generated@@29 $generated@@34)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@33 $generated@@28 ($generated@@40 $generated@@43 $generated@@44) ($generated@@29 $generated@@42))  (and ($generated@@41 $generated@@43 $generated@@42) ($generated@@33 $generated@@28 $generated@@44 ($generated@@29 $generated@@42))))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@40 $generated@@43 $generated@@44) ($generated@@29 $generated@@42)))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@45 $generated@@46) (= ($generated@@26 $generated@@46) $generated@@2))
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@26 $generated@@48) $generated@@3))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@47 $generated@@53) (exists (($generated@@54 T@U) ($generated@@55 T@U) ) (= $generated@@53 ($generated@@40 $generated@@54 $generated@@55))))
 :pattern ( ($generated@@47 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@45 $generated@@56) (= $generated@@56 $generated@@27))
 :pattern ( ($generated@@45 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@33 $generated@@8 $generated@@57 $generated@@23) (<= ($generated@@35 0) ($generated@@13 $generated@@57)))
 :pattern ( ($generated@@33 $generated@@8 $generated@@57 $generated@@23))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@61 $generated@@65) (and (< 1 $generated@@58) ($generated@@33 $generated@@28 $generated@@65 ($generated@@29 $generated@@23)))) (and (=> (not ($generated@@45 $generated@@65)) (let (($generated@@66 ($generated@@62 $generated@@65)))
($generated@@61 $generated@@66))) (= ($generated@@59 ($generated@@60 $generated@@64) $generated@@65) (ite ($generated@@45 $generated@@65) 0 (let (($generated@@67 ($generated@@62 $generated@@65)))
(let (($generated@@68 ($generated@@13 ($generated@@49 $generated@@8 ($generated@@63 $generated@@65)))))
(+ $generated@@68 ($generated@@59 $generated@@64 $generated@@67))))))))
 :pattern ( ($generated@@59 ($generated@@60 $generated@@64) $generated@@65))
))))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@69 ($generated@@50 $generated@@73 $generated@@70) $generated@@71 $generated@@72) ($generated@@22 $generated@@73 $generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@69 ($generated@@50 $generated@@73 $generated@@70) $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ) (!  (and (= ($generated@@74 ($generated@@29 $generated@@76)) $generated@@1) (= ($generated@@75 ($generated@@29 $generated@@76)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@41 $generated@@77 $generated@@23) (and (= ($generated@@50 $generated@@8 ($generated@@49 $generated@@8 $generated@@77)) $generated@@77) ($generated@@33 $generated@@8 ($generated@@49 $generated@@8 $generated@@77) $generated@@23)))
 :pattern ( ($generated@@41 $generated@@77 $generated@@23))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@61 ($generated@@37 $generated@@28 $generated@@79)) (and (< 1 $generated@@58) ($generated@@33 $generated@@28 $generated@@79 ($generated@@29 $generated@@23)))) (and (=> (not ($generated@@11 ($generated@@37 $generated@@7 ($generated@@10 ($generated@@45 ($generated@@37 $generated@@28 $generated@@79)))))) (let (($generated@@80 ($generated@@37 $generated@@28 ($generated@@62 ($generated@@37 $generated@@28 $generated@@79)))))
($generated@@61 $generated@@80))) (= ($generated@@59 ($generated@@60 $generated@@78) ($generated@@37 $generated@@28 $generated@@79)) (ite ($generated@@45 ($generated@@37 $generated@@28 $generated@@79)) 0 (let (($generated@@81 ($generated@@37 $generated@@28 ($generated@@62 ($generated@@37 $generated@@28 $generated@@79)))))
(let (($generated@@82 ($generated@@35 ($generated@@13 ($generated@@49 $generated@@8 ($generated@@63 ($generated@@37 $generated@@28 $generated@@79)))))))
($generated@@35 (+ $generated@@82 ($generated@@59 ($generated@@60 $generated@@78) $generated@@81)))))))))
 :weight 3
 :pattern ( ($generated@@59 ($generated@@60 $generated@@78) ($generated@@37 $generated@@28 $generated@@79)))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@33 $generated@@28 $generated@@84 ($generated@@29 $generated@@83)) (or ($generated@@45 $generated@@84) ($generated@@47 $generated@@84)))
 :pattern ( ($generated@@47 $generated@@84) ($generated@@33 $generated@@28 $generated@@84 ($generated@@29 $generated@@83)))
 :pattern ( ($generated@@45 $generated@@84) ($generated@@33 $generated@@28 $generated@@84 ($generated@@29 $generated@@83)))
)))
(assert  (=> (<= 1 $generated@@58) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@61 $generated@@86) (and (< 1 $generated@@58) ($generated@@33 $generated@@28 $generated@@86 ($generated@@29 $generated@@23)))) (<= ($generated@@35 0) ($generated@@59 $generated@@85 $generated@@86)))
 :pattern ( ($generated@@59 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@41 ($generated@@50 $generated@@89 $generated@@87) $generated@@88) ($generated@@33 $generated@@89 $generated@@87 $generated@@88))
 :pattern ( ($generated@@41 ($generated@@50 $generated@@89 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@26 ($generated@@40 $generated@@90 $generated@@91)) $generated@@3)
 :pattern ( ($generated@@40 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@63 ($generated@@40 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@40 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@62 ($generated@@40 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@40 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@29 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@29 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@49 $generated@@99 ($generated@@50 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@50 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@100 $generated@@102) ($generated@@101 ($generated@@40 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@40 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (< ($generated@@101 $generated@@105) ($generated@@101 ($generated@@40 $generated@@104 $generated@@105)))
 :pattern ( ($generated@@40 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@59 ($generated@@60 $generated@@106) $generated@@107) ($generated@@59 $generated@@106 $generated@@107))
 :pattern ( ($generated@@59 ($generated@@60 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and ($generated@@30 $generated@@110) (and ($generated@@47 $generated@@108) ($generated@@22 $generated@@28 $generated@@108 ($generated@@29 $generated@@109) $generated@@110))) ($generated@@69 ($generated@@63 $generated@@108) $generated@@109 $generated@@110))
 :pattern ( ($generated@@69 ($generated@@63 $generated@@108) $generated@@109 $generated@@110))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@111 $generated@@122 $generated@@123 $generated@@124 ($generated@@118 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@111 $generated@@129 $generated@@130 $generated@@131 ($generated@@118 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@111 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@111 $generated@@138 $generated@@139 $generated@@140 ($generated@@118 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))) (= ($generated@@6 $generated@@112) 4)) (= ($generated@@6 $generated@@113) 5)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@115 $generated@@147 $generated@@148 ($generated@@119 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@151) $generated@@149)
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@156 $generated@@157) (= ($generated@@115 $generated@@152 $generated@@153 ($generated@@119 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@115 $generated@@152 $generated@@153 $generated@@155 $generated@@157)))
 :weight 0
))) (= ($generated@@6 $generated@@116) 6)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (= ($generated@@6 ($generated@@117 $generated@@158 $generated@@159)) 7))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@117 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@117 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@11 ($generated@@111 $generated@@112 $generated@@113 $generated@@7 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@11 ($generated@@49 $generated@@7 ($generated@@115 $generated@@113 $generated@@116 ($generated@@115 $generated@@112 ($generated@@117 $generated@@113 $generated@@116) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113 $generated@@7 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ) (! (= ($generated@@100 ($generated@@50 $generated@@28 $generated@@170)) ($generated@@101 $generated@@170))
 :pattern ( ($generated@@100 ($generated@@50 $generated@@28 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@41 $generated@@172 ($generated@@29 $generated@@171)) (and (= ($generated@@50 $generated@@28 ($generated@@49 $generated@@28 $generated@@172)) $generated@@172) ($generated@@33 $generated@@28 ($generated@@49 $generated@@28 $generated@@172) ($generated@@29 $generated@@171))))
 :pattern ( ($generated@@41 $generated@@172 ($generated@@29 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@30 $generated@@175) (and ($generated@@47 $generated@@173) ($generated@@22 $generated@@28 $generated@@173 ($generated@@29 $generated@@174) $generated@@175))) ($generated@@22 $generated@@28 ($generated@@62 $generated@@173) ($generated@@29 $generated@@174) $generated@@175))
 :pattern ( ($generated@@22 $generated@@28 ($generated@@62 $generated@@173) ($generated@@29 $generated@@174) $generated@@175))
)))
(assert (= ($generated@@74 $generated@@23) $generated@@0))
(assert (= ($generated@@75 $generated@@23) $generated@@4))
(assert (= $generated@@27 ($generated@@37 $generated@@28 $generated@@27)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@40 ($generated@@37 $generated@@116 $generated@@176) ($generated@@37 $generated@@28 $generated@@177)) ($generated@@37 $generated@@28 ($generated@@40 $generated@@176 $generated@@177)))
 :pattern ( ($generated@@40 ($generated@@37 $generated@@116 $generated@@176) ($generated@@37 $generated@@28 $generated@@177)))
)))
(assert (forall (($generated@@178 Int) ) (! (= ($generated@@50 $generated@@8 ($generated@@12 ($generated@@35 $generated@@178))) ($generated@@37 $generated@@116 ($generated@@50 $generated@@8 ($generated@@12 $generated@@178))))
 :pattern ( ($generated@@50 $generated@@8 ($generated@@12 ($generated@@35 $generated@@178))))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@50 $generated@@180 ($generated@@37 $generated@@180 $generated@@179)) ($generated@@37 $generated@@116 ($generated@@50 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@50 $generated@@180 ($generated@@37 $generated@@180 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@30 $generated@@184) (= ($generated@@22 $generated@@28 ($generated@@40 $generated@@182 $generated@@183) ($generated@@29 $generated@@181) $generated@@184)  (and ($generated@@69 $generated@@182 $generated@@181 $generated@@184) ($generated@@22 $generated@@28 $generated@@183 ($generated@@29 $generated@@181) $generated@@184))))
 :pattern ( ($generated@@22 $generated@@28 ($generated@@40 $generated@@182 $generated@@183) ($generated@@29 $generated@@181) $generated@@184))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Int)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@197 true))
(let (($generated@@198  (=> (and (= $generated@@185 ($generated@@40 ($generated@@50 $generated@@8 ($generated@@12 $generated@@186)) $generated@@187)) (<= ($generated@@35 0) $generated@@186)) (=> (and (and (and ($generated@@33 $generated@@28 $generated@@187 ($generated@@29 $generated@@23)) (= $generated@@188 $generated@@187)) (and ($generated@@33 $generated@@28 $generated@@188 ($generated@@29 $generated@@23)) (= $generated@@189 $generated@@188))) (and (and (= $generated@@190 $generated@@186) ($generated@@33 $generated@@8 ($generated@@12 $generated@@190) $generated@@23)) (and (= $generated@@191 $generated@@190) ($generated@@22 $generated@@28 $generated@@189 ($generated@@29 $generated@@23) $generated@@192)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@101 $generated@@189) ($generated@@101 $generated@@185))) (=> (< ($generated@@101 $generated@@189) ($generated@@101 $generated@@185)) (=> (and ($generated@@61 $generated@@189) (= (ControlFlow 0 5) (- 0 4))) ($generated@@33 $generated@@8 ($generated@@12 (+ $generated@@191 ($generated@@59 ($generated@@60 $generated@@193) $generated@@189))) $generated@@23))))))))
(let (($generated@@199  (=> (or (not (= $generated@@185 $generated@@27)) (not true)) (and (=> (= (ControlFlow 0 8) 5) $generated@@198) (=> (= (ControlFlow 0 8) 7) $generated@@197)))))
(let (($generated@@200  (=> (and (= $generated@@185 $generated@@27) (= (ControlFlow 0 3) (- 0 2))) ($generated@@33 $generated@@8 ($generated@@12 ($generated@@35 0)) $generated@@23))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (= $generated@@194 ($generated@@114 $generated@@195 $generated@@192 $generated false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@201) (=> (= (ControlFlow 0 9) 3) $generated@@200)) (=> (= (ControlFlow 0 9) 8) $generated@@199)))))
(let (($generated@@203  (=> (and (and (and ($generated@@30 $generated@@192) ($generated@@196 $generated@@192)) ($generated@@33 $generated@@28 $generated@@185 ($generated@@29 $generated@@23))) (and (= 1 $generated@@58) (= (ControlFlow 0 10) 9))) $generated@@202)))
$generated@@203))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
