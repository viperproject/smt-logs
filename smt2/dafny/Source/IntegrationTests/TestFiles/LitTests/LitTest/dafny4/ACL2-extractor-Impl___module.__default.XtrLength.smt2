(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 () Int)
(declare-fun $generated@@23 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U T@U) Bool)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U Int T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U Bool Int T@U) T@U)
(declare-fun $generated@@39 () Bool)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U T@U) Int)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 (T@U Int T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@63 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@70 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) Bool)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@130 (T@U) Bool)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@168 () T@T)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 (T@T T@T) T@T)
(declare-fun $generated@@173 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@176 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@6 $generated@@26) 3))
(assert  (=> (<= 4 $generated@@22) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@27 $generated@@40 ($generated@@25 $generated@@26 $generated@@42) ($generated@@25 $generated@@26 $generated@@43)) (and (< 4 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@42 ($generated@@29 $generated)) ($generated@@28 $generated@@26 $generated@@43 ($generated@@29 $generated@@40))))) (and (=> (not ($generated@@11 ($generated@@25 $generated@@7 ($generated@@10 ($generated@@30 ($generated@@25 $generated@@26 $generated@@42)))))) (let (($generated@@44 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@42)))))
(let (($generated@@45 ($generated@@32 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@25 $generated@@26 $generated@@42)))))))
 (and ($generated@@35 $generated@@40 $generated@@45 ($generated@@25 $generated@@26 $generated@@43)) ($generated@@27 $generated@@40 $generated@@44 ($generated@@25 $generated@@26 $generated@@43)))))) (= ($generated@@23 $generated@@40 ($generated@@24 $generated@@41) ($generated@@25 $generated@@26 $generated@@42) ($generated@@25 $generated@@26 $generated@@43)) (ite ($generated@@30 ($generated@@25 $generated@@26 $generated@@42)) $generated@@36 (let (($generated@@46 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@42)))))
(let (($generated@@47 ($generated@@32 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 ($generated@@25 $generated@@26 $generated@@42)))))))
($generated@@37 ($generated@@38 $generated@@40 $generated@@39 $generated@@47 ($generated@@25 $generated@@26 $generated@@43)) ($generated@@25 $generated@@26 ($generated@@23 $generated@@40 ($generated@@24 $generated@@41) $generated@@46 ($generated@@25 $generated@@26 $generated@@43))))))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@40 ($generated@@24 $generated@@41) ($generated@@25 $generated@@26 $generated@@42) ($generated@@25 $generated@@26 $generated@@43)))
))))
(assert  (=> (<= 4 $generated@@22) (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (or ($generated@@27 $generated@@48 $generated@@50 $generated@@51) (and (< 4 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@50 ($generated@@29 $generated)) ($generated@@28 $generated@@26 $generated@@51 ($generated@@29 $generated@@48))))) (and (=> (not ($generated@@30 $generated@@50)) (let (($generated@@52 ($generated@@31 $generated@@50)))
(let (($generated@@53 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@50)))))
 (and ($generated@@35 $generated@@48 $generated@@53 $generated@@51) ($generated@@27 $generated@@48 $generated@@52 $generated@@51))))) (= ($generated@@23 $generated@@48 ($generated@@24 $generated@@49) $generated@@50 $generated@@51) (ite ($generated@@30 $generated@@50) $generated@@36 (let (($generated@@54 ($generated@@31 $generated@@50)))
(let (($generated@@55 ($generated@@13 ($generated@@33 $generated@@8 ($generated@@34 $generated@@50)))))
($generated@@37 ($generated@@38 $generated@@48 $generated@@39 $generated@@55 $generated@@51) ($generated@@23 $generated@@48 $generated@@49 $generated@@54 $generated@@51))))))))
 :pattern ( ($generated@@23 $generated@@48 ($generated@@24 $generated@@49) $generated@@50 $generated@@51))
))))
(assert (= ($generated@@56 $generated) $generated@@0))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 Int) ($generated@@68 T@U) ) (!  (=> (or ($generated@@35 $generated@@65 $generated@@67 $generated@@68) (and (< 3 $generated@@22) (and ($generated@@57 $generated@@66) ($generated@@28 $generated@@26 $generated@@68 ($generated@@29 $generated@@65))))) (and (and (and (=> (<= ($generated@@32 0) $generated@@67) ($generated@@58 $generated@@65 $generated@@68)) (=> (and (<= ($generated@@32 0) $generated@@67) (< $generated@@67 ($generated@@59 $generated@@65 ($generated@@24 $generated@@60) $generated@@68))) ($generated@@61 $generated@@65 $generated@@67 $generated@@68))) (=> (not (and (<= ($generated@@32 0) $generated@@67) (< $generated@@67 ($generated@@59 $generated@@65 ($generated@@24 $generated@@60) $generated@@68)))) ($generated@@62 $generated@@65))) (= ($generated@@38 $generated@@65 true $generated@@67 $generated@@68) (ite  (and (<= ($generated@@32 0) $generated@@67) (< $generated@@67 ($generated@@59 $generated@@65 ($generated@@24 $generated@@60) $generated@@68))) ($generated@@63 $generated@@65 ($generated@@24 $generated@@60) $generated@@67 $generated@@68) (let (($generated@@69 ($generated@@64 $generated@@65)))
$generated@@69)))))
 :pattern ( ($generated@@38 $generated@@65 true $generated@@67 $generated@@68) ($generated@@57 $generated@@66))
))))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 Bool) ($generated@@75 Int) ($generated@@76 T@U) ) (!  (=> (and (or ($generated@@35 $generated@@73 $generated@@75 $generated@@76) (and (< 3 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@76 ($generated@@29 $generated@@73)) ($generated@@71 $generated@@26 $generated@@76 ($generated@@29 $generated@@73) $generated@@72)))) ($generated@@57 $generated@@72)) ($generated@@70 ($generated@@38 $generated@@73 $generated@@74 $generated@@75 $generated@@76) $generated@@73 $generated@@72))
 :pattern ( ($generated@@70 ($generated@@38 $generated@@73 $generated@@74 $generated@@75 $generated@@76) $generated@@73 $generated@@72))
))))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@62 $generated@@77) ($generated@@11 ($generated@@25 $generated@@7 ($generated@@10 true))))
 :pattern ( ($generated@@64 $generated@@77))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@58 $generated@@78 ($generated@@25 $generated@@26 $generated@@80)) (and (< 1 $generated@@22) ($generated@@28 $generated@@26 $generated@@80 ($generated@@29 $generated@@78)))) (and (=> (not ($generated@@11 ($generated@@25 $generated@@7 ($generated@@10 ($generated@@30 ($generated@@25 $generated@@26 $generated@@80)))))) (let (($generated@@81 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@80)))))
($generated@@58 $generated@@78 $generated@@81))) (= ($generated@@59 $generated@@78 ($generated@@24 $generated@@79) ($generated@@25 $generated@@26 $generated@@80)) (ite ($generated@@30 ($generated@@25 $generated@@26 $generated@@80)) 0 (let (($generated@@82 ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@80)))))
($generated@@32 (+ 1 ($generated@@59 $generated@@78 ($generated@@24 $generated@@79) $generated@@82))))))))
 :weight 3
 :pattern ( ($generated@@59 $generated@@78 ($generated@@24 $generated@@79) ($generated@@25 $generated@@26 $generated@@80)))
))))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@59 $generated@@83 ($generated@@24 $generated@@84) $generated@@85) ($generated@@59 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@59 $generated@@83 ($generated@@24 $generated@@84) $generated@@85))
)))
(assert (= ($generated@@86 $generated@@36) $generated@@3))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@57 $generated@@88) ($generated@@71 $generated@@26 $generated@@36 ($generated@@29 $generated@@87) $generated@@88))
 :pattern ( ($generated@@71 $generated@@26 $generated@@36 ($generated@@29 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ) (! ($generated@@28 $generated@@26 $generated@@36 ($generated@@29 $generated@@89))
 :pattern ( ($generated@@28 $generated@@26 $generated@@36 ($generated@@29 $generated@@89)))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 T@U) ) (!  (=> (or ($generated@@61 $generated@@90 $generated@@92 $generated@@93) (and (< 2 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@93 ($generated@@29 $generated@@90)) (and (<= ($generated@@32 0) $generated@@92) (< $generated@@92 ($generated@@59 $generated@@90 ($generated@@24 $generated@@60) $generated@@93)))))) (and (=> (or (not (= $generated@@92 ($generated@@32 0))) (not true)) ($generated@@61 $generated@@90 (- $generated@@92 1) ($generated@@31 $generated@@93))) (= ($generated@@63 $generated@@90 ($generated@@24 $generated@@91) $generated@@92 $generated@@93) (ite (= $generated@@92 ($generated@@32 0)) ($generated@@34 $generated@@93) ($generated@@63 $generated@@90 $generated@@91 (- $generated@@92 1) ($generated@@31 $generated@@93))))))
 :pattern ( ($generated@@63 $generated@@90 ($generated@@24 $generated@@91) $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@94 Int) ) (! (= ($generated@@32 $generated@@94) $generated@@94)
 :pattern ( ($generated@@32 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@25 $generated@@96 $generated@@95) $generated@@95)
 :pattern ( ($generated@@25 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@28 $generated@@26 ($generated@@37 $generated@@99 $generated@@100) ($generated@@29 $generated@@98))  (and ($generated@@97 $generated@@99 $generated@@98) ($generated@@28 $generated@@26 $generated@@100 ($generated@@29 $generated@@98))))
 :pattern ( ($generated@@28 $generated@@26 ($generated@@37 $generated@@99 $generated@@100) ($generated@@29 $generated@@98)))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@30 $generated@@101) (= ($generated@@86 $generated@@101) $generated@@3))
 :pattern ( ($generated@@30 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@102 $generated@@103) (= ($generated@@86 $generated@@103) $generated@@4))
 :pattern ( ($generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 ($generated@@33 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@33 $generated@@106 $generated@@105))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 Int) ($generated@@110 T@U) ) (!  (=> (or ($generated@@61 $generated@@107 ($generated@@32 $generated@@109) ($generated@@25 $generated@@26 $generated@@110)) (and (< 2 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@110 ($generated@@29 $generated@@107)) (and (<= ($generated@@32 0) ($generated@@32 $generated@@109)) (< $generated@@109 ($generated@@59 $generated@@107 ($generated@@24 $generated@@60) ($generated@@25 $generated@@26 $generated@@110))))))) (and (=> (or (not (= ($generated@@32 $generated@@109) ($generated@@32 0))) (not true)) ($generated@@61 $generated@@107 ($generated@@32 (- $generated@@109 1)) ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@110))))) (= ($generated@@63 $generated@@107 ($generated@@24 $generated@@108) ($generated@@32 $generated@@109) ($generated@@25 $generated@@26 $generated@@110)) (ite (= ($generated@@32 $generated@@109) ($generated@@32 0)) ($generated@@34 ($generated@@25 $generated@@26 $generated@@110)) ($generated@@63 $generated@@107 ($generated@@24 $generated@@108) ($generated@@32 (- $generated@@109 1)) ($generated@@25 $generated@@26 ($generated@@31 ($generated@@25 $generated@@26 $generated@@110))))))))
 :weight 3
 :pattern ( ($generated@@63 $generated@@107 ($generated@@24 $generated@@108) ($generated@@32 $generated@@109) ($generated@@25 $generated@@26 $generated@@110)))
))))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@102 $generated@@111) (exists (($generated@@112 T@U) ($generated@@113 T@U) ) (= $generated@@111 ($generated@@37 $generated@@112 $generated@@113))))
 :pattern ( ($generated@@102 $generated@@111))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@30 $generated@@114) (= $generated@@114 $generated@@36))
 :pattern ( ($generated@@30 $generated@@114))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@58 $generated@@115 $generated@@117) (and (< 1 $generated@@22) ($generated@@28 $generated@@26 $generated@@117 ($generated@@29 $generated@@115)))) (and (=> (not ($generated@@30 $generated@@117)) (let (($generated@@118 ($generated@@31 $generated@@117)))
($generated@@58 $generated@@115 $generated@@118))) (= ($generated@@59 $generated@@115 ($generated@@24 $generated@@116) $generated@@117) (ite ($generated@@30 $generated@@117) 0 (let (($generated@@119 ($generated@@31 $generated@@117)))
(+ 1 ($generated@@59 $generated@@115 $generated@@116 $generated@@119)))))))
 :pattern ( ($generated@@59 $generated@@115 ($generated@@24 $generated@@116) $generated@@117))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@70 ($generated@@104 $generated@@123 $generated@@120) $generated@@121 $generated@@122) ($generated@@71 $generated@@123 $generated@@120 $generated@@121 $generated@@122))
 :pattern ( ($generated@@70 ($generated@@104 $generated@@123 $generated@@120) $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (!  (and (= ($generated@@56 ($generated@@29 $generated@@125)) $generated@@2) (= ($generated@@124 ($generated@@29 $generated@@125)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@125))
)))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@126 T@U) ($generated@@127 Bool) ($generated@@128 Int) ($generated@@129 T@U) ) (!  (=> (or ($generated@@35 $generated@@126 $generated@@128 $generated@@129) (and (< 3 $generated@@22) ($generated@@28 $generated@@26 $generated@@129 ($generated@@29 $generated@@126)))) ($generated@@97 ($generated@@38 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@126))
 :pattern ( ($generated@@38 $generated@@126 $generated@@127 $generated@@128 $generated@@129))
))))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@130 $generated@@131) (or ($generated@@30 $generated@@131) ($generated@@102 $generated@@131)))
 :pattern ( ($generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@28 $generated@@26 $generated@@133 ($generated@@29 $generated@@132)) (or ($generated@@30 $generated@@133) ($generated@@102 $generated@@133)))
 :pattern ( ($generated@@102 $generated@@133) ($generated@@28 $generated@@26 $generated@@133 ($generated@@29 $generated@@132)))
 :pattern ( ($generated@@30 $generated@@133) ($generated@@28 $generated@@26 $generated@@133 ($generated@@29 $generated@@132)))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@97 $generated@@134 $generated) (and (= ($generated@@104 $generated@@8 ($generated@@33 $generated@@8 $generated@@134)) $generated@@134) ($generated@@28 $generated@@8 ($generated@@33 $generated@@8 $generated@@134) $generated)))
 :pattern ( ($generated@@97 $generated@@134 $generated))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@97 ($generated@@104 $generated@@137 $generated@@135) $generated@@136) ($generated@@28 $generated@@137 $generated@@135 $generated@@136))
 :pattern ( ($generated@@97 ($generated@@104 $generated@@137 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@86 ($generated@@37 $generated@@138 $generated@@139)) $generated@@4)
 :pattern ( ($generated@@37 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@34 ($generated@@37 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@37 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@31 ($generated@@37 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@37 $generated@@142 $generated@@143))
)))
(assert  (=> (<= 4 $generated@@22) (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (or ($generated@@27 $generated@@144 $generated@@146 $generated@@147) (and (< 4 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@146 ($generated@@29 $generated)) ($generated@@28 $generated@@26 $generated@@147 ($generated@@29 $generated@@144))))) ($generated@@28 $generated@@26 ($generated@@23 $generated@@144 $generated@@145 $generated@@146 $generated@@147) ($generated@@29 $generated@@144)))
 :pattern ( ($generated@@23 $generated@@144 $generated@@145 $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@29 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@29 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@33 $generated@@151 ($generated@@104 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@104 $generated@@151 $generated@@150))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@152 $generated@@154) ($generated@@153 ($generated@@37 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@37 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (< ($generated@@153 $generated@@157) ($generated@@153 ($generated@@37 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@37 $generated@@156 $generated@@157))
)))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Int) ($generated@@162 T@U) ) (!  (=> (and (or ($generated@@61 $generated@@159 $generated@@161 $generated@@162) (and (< 2 $generated@@22) (and (and ($generated@@28 $generated@@26 $generated@@162 ($generated@@29 $generated@@159)) ($generated@@71 $generated@@26 $generated@@162 ($generated@@29 $generated@@159) $generated@@158)) (and (<= ($generated@@32 0) $generated@@161) (< $generated@@161 ($generated@@59 $generated@@159 ($generated@@24 $generated@@60) $generated@@162)))))) ($generated@@57 $generated@@158)) ($generated@@70 ($generated@@63 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@159 $generated@@158))
 :pattern ( ($generated@@70 ($generated@@63 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@159 $generated@@158))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@57 $generated@@165) (and ($generated@@102 $generated@@163) ($generated@@71 $generated@@26 $generated@@163 ($generated@@29 $generated@@164) $generated@@165))) ($generated@@70 ($generated@@34 $generated@@163) $generated@@164 $generated@@165))
 :pattern ( ($generated@@70 ($generated@@34 $generated@@163) $generated@@164 $generated@@165))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@166 $generated@@177 $generated@@178 $generated@@179 ($generated@@173 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@182 $generated@@183) $generated@@180)
 :weight 0
)) (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@166 $generated@@184 $generated@@185 $generated@@186 ($generated@@173 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@166 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@166 $generated@@193 $generated@@194 $generated@@195 ($generated@@173 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@166 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))) (= ($generated@@6 $generated@@167) 4)) (= ($generated@@6 $generated@@168) 5)) (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@170 $generated@@202 $generated@@203 ($generated@@174 $generated@@202 $generated@@203 $generated@@205 $generated@@206 $generated@@204) $generated@@206) $generated@@204)
 :weight 0
))) (forall (($generated@@207 T@T) ($generated@@208 T@T) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (or (= $generated@@211 $generated@@212) (= ($generated@@170 $generated@@207 $generated@@208 ($generated@@174 $generated@@207 $generated@@208 $generated@@210 $generated@@211 $generated@@209) $generated@@212) ($generated@@170 $generated@@207 $generated@@208 $generated@@210 $generated@@212)))
 :weight 0
))) (= ($generated@@6 $generated@@171) 6)) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (= ($generated@@6 ($generated@@172 $generated@@213 $generated@@214)) 7))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@175 ($generated@@172 $generated@@215 $generated@@216)) $generated@@215)
 :pattern ( ($generated@@172 $generated@@215 $generated@@216))
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (! (= ($generated@@176 ($generated@@172 $generated@@217 $generated@@218)) $generated@@218)
 :pattern ( ($generated@@172 $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 Bool) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@11 ($generated@@166 $generated@@167 $generated@@168 $generated@@7 ($generated@@169 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))  (=> (and (or (not (= $generated@@223 $generated@@219)) (not true)) ($generated@@11 ($generated@@33 $generated@@7 ($generated@@170 $generated@@168 $generated@@171 ($generated@@170 $generated@@167 ($generated@@172 $generated@@168 $generated@@171) $generated@@220 $generated@@223) $generated@@221)))) $generated@@222))
 :pattern ( ($generated@@166 $generated@@167 $generated@@168 $generated@@7 ($generated@@169 $generated@@219 $generated@@220 $generated@@221 $generated@@222) $generated@@223 $generated@@224))
)))
(assert  (=> (<= 4 $generated@@22) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@226 $generated@@228 $generated@@229) (and (< 4 $generated@@22) (and (and ($generated@@28 $generated@@26 $generated@@228 ($generated@@29 $generated)) ($generated@@71 $generated@@26 $generated@@228 ($generated@@29 $generated) $generated@@225)) (and ($generated@@28 $generated@@26 $generated@@229 ($generated@@29 $generated@@226)) ($generated@@71 $generated@@26 $generated@@229 ($generated@@29 $generated@@226) $generated@@225))))) ($generated@@57 $generated@@225)) ($generated@@71 $generated@@26 ($generated@@23 $generated@@226 $generated@@227 $generated@@228 $generated@@229) ($generated@@29 $generated@@226) $generated@@225))
 :pattern ( ($generated@@71 $generated@@26 ($generated@@23 $generated@@226 $generated@@227 $generated@@228 $generated@@229) ($generated@@29 $generated@@226) $generated@@225))
))))
(assert  (=> (<= 3 $generated@@22) (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 Int) ($generated@@233 T@U) ) (!  (=> (or ($generated@@35 $generated@@230 ($generated@@32 $generated@@232) ($generated@@25 $generated@@26 $generated@@233)) (and (< 3 $generated@@22) (and ($generated@@57 $generated@@231) ($generated@@28 $generated@@26 $generated@@233 ($generated@@29 $generated@@230))))) (and (and (and (=> (<= ($generated@@32 0) ($generated@@32 $generated@@232)) ($generated@@58 $generated@@230 ($generated@@25 $generated@@26 $generated@@233))) (=> (and (<= ($generated@@32 0) ($generated@@32 $generated@@232)) (< $generated@@232 ($generated@@59 $generated@@230 ($generated@@24 $generated@@60) ($generated@@25 $generated@@26 $generated@@233)))) ($generated@@61 $generated@@230 ($generated@@32 $generated@@232) ($generated@@25 $generated@@26 $generated@@233)))) (=> (not (and (<= ($generated@@32 0) ($generated@@32 $generated@@232)) (< $generated@@232 ($generated@@59 $generated@@230 ($generated@@24 $generated@@60) ($generated@@25 $generated@@26 $generated@@233))))) ($generated@@62 $generated@@230))) (= ($generated@@38 $generated@@230 true ($generated@@32 $generated@@232) ($generated@@25 $generated@@26 $generated@@233)) (ite  (and (<= ($generated@@32 0) ($generated@@32 $generated@@232)) (< $generated@@232 ($generated@@59 $generated@@230 ($generated@@24 $generated@@60) ($generated@@25 $generated@@26 $generated@@233)))) ($generated@@63 $generated@@230 ($generated@@24 $generated@@60) ($generated@@32 $generated@@232) ($generated@@25 $generated@@26 $generated@@233)) (let (($generated@@234 ($generated@@64 $generated@@230)))
$generated@@234)))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@230 true ($generated@@32 $generated@@232) ($generated@@25 $generated@@26 $generated@@233)) ($generated@@57 $generated@@231))
))))
(assert (forall (($generated@@235 T@U) ) (! (= ($generated@@152 ($generated@@104 $generated@@26 $generated@@235)) ($generated@@153 $generated@@235))
 :pattern ( ($generated@@152 ($generated@@104 $generated@@26 $generated@@235)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 Int) ($generated@@239 T@U) ) (! (= ($generated@@63 $generated@@236 ($generated@@24 $generated@@237) $generated@@238 $generated@@239) ($generated@@63 $generated@@236 $generated@@237 $generated@@238 $generated@@239))
 :pattern ( ($generated@@63 $generated@@236 ($generated@@24 $generated@@237) $generated@@238 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (! (= ($generated@@23 $generated@@240 ($generated@@24 $generated@@241) $generated@@242 $generated@@243) ($generated@@23 $generated@@240 $generated@@241 $generated@@242 $generated@@243))
 :pattern ( ($generated@@23 $generated@@240 ($generated@@24 $generated@@241) $generated@@242 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ) (!  (=> ($generated@@97 $generated@@245 ($generated@@29 $generated@@244)) (and (= ($generated@@104 $generated@@26 ($generated@@33 $generated@@26 $generated@@245)) $generated@@245) ($generated@@28 $generated@@26 ($generated@@33 $generated@@26 $generated@@245) ($generated@@29 $generated@@244))))
 :pattern ( ($generated@@97 $generated@@245 ($generated@@29 $generated@@244)))
)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> (and ($generated@@57 $generated@@248) (and ($generated@@102 $generated@@246) ($generated@@71 $generated@@26 $generated@@246 ($generated@@29 $generated@@247) $generated@@248))) ($generated@@71 $generated@@26 ($generated@@31 $generated@@246) ($generated@@29 $generated@@247) $generated@@248))
 :pattern ( ($generated@@71 $generated@@26 ($generated@@31 $generated@@246) ($generated@@29 $generated@@247) $generated@@248))
)))
(assert (= $generated@@36 ($generated@@25 $generated@@26 $generated@@36)))
(assert (forall (($generated@@249 T@U) ($generated@@250 T@U) ) (! (= ($generated@@37 ($generated@@25 $generated@@171 $generated@@249) ($generated@@25 $generated@@26 $generated@@250)) ($generated@@25 $generated@@26 ($generated@@37 $generated@@249 $generated@@250)))
 :pattern ( ($generated@@37 ($generated@@25 $generated@@171 $generated@@249) ($generated@@25 $generated@@26 $generated@@250)))
)))
(assert (forall (($generated@@251 Int) ) (! (= ($generated@@104 $generated@@8 ($generated@@12 ($generated@@32 $generated@@251))) ($generated@@25 $generated@@171 ($generated@@104 $generated@@8 ($generated@@12 $generated@@251))))
 :pattern ( ($generated@@104 $generated@@8 ($generated@@12 ($generated@@32 $generated@@251))))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@T) ) (! (= ($generated@@104 $generated@@253 ($generated@@25 $generated@@253 $generated@@252)) ($generated@@25 $generated@@171 ($generated@@104 $generated@@253 $generated@@252)))
 :pattern ( ($generated@@104 $generated@@253 ($generated@@25 $generated@@253 $generated@@252)))
)))
(assert  (=> (<= 1 $generated@@22) (forall (($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (or ($generated@@58 $generated@@254 $generated@@256) (and (< 1 $generated@@22) ($generated@@28 $generated@@26 $generated@@256 ($generated@@29 $generated@@254)))) (<= ($generated@@32 0) ($generated@@59 $generated@@254 $generated@@255 $generated@@256)))
 :pattern ( ($generated@@59 $generated@@254 $generated@@255 $generated@@256))
))))
(assert  (=> (<= 2 $generated@@22) (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 Int) ($generated@@260 T@U) ) (!  (=> (or ($generated@@61 $generated@@257 $generated@@259 $generated@@260) (and (< 2 $generated@@22) (and ($generated@@28 $generated@@26 $generated@@260 ($generated@@29 $generated@@257)) (and (<= ($generated@@32 0) $generated@@259) (< $generated@@259 ($generated@@59 $generated@@257 ($generated@@24 $generated@@60) $generated@@260)))))) ($generated@@97 ($generated@@63 $generated@@257 $generated@@258 $generated@@259 $generated@@260) $generated@@257))
 :pattern ( ($generated@@63 $generated@@257 $generated@@258 $generated@@259 $generated@@260))
))))
(assert (forall (($generated@@261 T@U) ($generated@@262 T@U) ) (! ($generated@@71 $generated@@8 $generated@@262 $generated $generated@@261)
 :pattern ( ($generated@@71 $generated@@8 $generated@@262 $generated $generated@@261))
)))
(assert (forall (($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (!  (=> ($generated@@57 $generated@@266) (= ($generated@@71 $generated@@26 ($generated@@37 $generated@@264 $generated@@265) ($generated@@29 $generated@@263) $generated@@266)  (and ($generated@@70 $generated@@264 $generated@@263 $generated@@266) ($generated@@71 $generated@@26 $generated@@265 ($generated@@29 $generated@@263) $generated@@266))))
 :pattern ( ($generated@@71 $generated@@26 ($generated@@37 $generated@@264 $generated@@265) ($generated@@29 $generated@@263) $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ) (! ($generated@@28 $generated@@8 $generated@@267 $generated)
 :pattern ( ($generated@@28 $generated@@8 $generated@@267 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 (T@U) Bool)
(declare-fun $generated@@275 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@276  (=> (= $generated@@268 ($generated@@169 $generated@@269 $generated@@270 $generated@@1 false)) (=> (and ($generated@@130 $generated@@271) ($generated@@130 $generated@@272)) (=> (and (and (and ($generated@@57 $generated@@273) ($generated@@274 $generated@@273)) (= $generated@@270 $generated@@273)) (and (forall (($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (and (and (and ($generated@@28 $generated@@26 $generated@@277 ($generated@@29 $generated)) ($generated@@28 $generated@@26 $generated@@278 ($generated@@29 $generated@@275))) ($generated@@11 ($generated@@25 $generated@@7 ($generated@@10 true)))) (or (< ($generated@@153 $generated@@277) ($generated@@153 $generated@@271)) (and (= ($generated@@153 $generated@@277) ($generated@@153 $generated@@271)) (< ($generated@@153 $generated@@278) ($generated@@153 $generated@@272))))) (= ($generated@@59 $generated@@275 ($generated@@24 $generated@@60) ($generated@@23 $generated@@275 ($generated@@24 $generated@@60) $generated@@277 $generated@@278)) ($generated@@59 $generated ($generated@@24 $generated@@60) $generated@@277)))
 :pattern ( ($generated@@23 $generated@@275 ($generated@@24 $generated@@60) $generated@@277 $generated@@278))
)) (= (ControlFlow 0 2) (- 0 1)))) (= ($generated@@59 $generated@@275 ($generated@@24 ($generated@@24 $generated@@60)) ($generated@@23 $generated@@275 ($generated@@24 ($generated@@24 $generated@@60)) $generated@@271 $generated@@272)) ($generated@@59 $generated ($generated@@24 ($generated@@24 $generated@@60)) $generated@@271)))))))
(let (($generated@@279  (=> (and ($generated@@57 $generated@@270) ($generated@@274 $generated@@270)) (=> (and (and ($generated@@28 $generated@@26 $generated@@271 ($generated@@29 $generated)) ($generated@@71 $generated@@26 $generated@@271 ($generated@@29 $generated) $generated@@270)) ($generated@@130 $generated@@271)) (=> (and (and (and ($generated@@28 $generated@@26 $generated@@272 ($generated@@29 $generated@@275)) ($generated@@71 $generated@@26 $generated@@272 ($generated@@29 $generated@@275) $generated@@270)) ($generated@@130 $generated@@272)) (and (= 5 $generated@@22) (= (ControlFlow 0 3) 2))) $generated@@276)))))
$generated@@279)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
