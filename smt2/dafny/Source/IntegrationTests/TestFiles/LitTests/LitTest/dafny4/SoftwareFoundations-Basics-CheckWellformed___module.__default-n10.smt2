(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U T@U T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@U) Int)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@110 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@T T@T) T@T)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@116 (T@T) T@T)
(declare-fun $generated@@165 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@4 $generated@@25) 3))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@23 $generated@@34 $generated@@35) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@34 $generated@@26) ($generated@@24 $generated@@25 $generated@@35 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@34)) (let (($generated@@36 ($generated@@28 $generated@@34)))
 (and ($generated@@23 $generated@@36 $generated@@35) ($generated@@29 $generated@@35 ($generated@@21 $generated@@33 $generated@@36 $generated@@35))))) (= ($generated@@21 ($generated@@22 $generated@@33) $generated@@34 $generated@@35) (ite ($generated@@27 $generated@@34) $generated@@30 (let (($generated@@37 ($generated@@28 $generated@@34)))
($generated@@31 ($generated@@22 $generated@@32) $generated@@35 ($generated@@21 $generated@@33 $generated@@37 $generated@@35)))))))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@33) $generated@@34 $generated@@35))
))))
(assert (= ($generated@@38 $generated@@30) $generated@@1))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (or ($generated@@23 ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@41 $generated@@26) ($generated@@24 $generated@@25 $generated@@42 $generated@@26)))) (and (=> (not ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 ($generated@@27 ($generated@@39 $generated@@25 $generated@@41)))))) (let (($generated@@43 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@41)))))
 (and ($generated@@23 $generated@@43 ($generated@@39 $generated@@25 $generated@@42)) ($generated@@29 ($generated@@39 $generated@@25 $generated@@42) ($generated@@21 ($generated@@22 $generated@@40) $generated@@43 ($generated@@39 $generated@@25 $generated@@42)))))) (= ($generated@@21 ($generated@@22 $generated@@40) ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)) (ite ($generated@@27 ($generated@@39 $generated@@25 $generated@@41)) $generated@@30 (let (($generated@@44 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@41)))))
($generated@@39 $generated@@25 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@39 $generated@@25 $generated@@42) ($generated@@39 $generated@@25 ($generated@@21 ($generated@@22 $generated@@40) $generated@@44 ($generated@@39 $generated@@25 $generated@@42))))))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@22 $generated@@40) ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)))
))))
(assert ($generated@@24 $generated@@25 $generated@@30 $generated@@26))
(assert  (=> (<= 3 $generated@@20) (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@46 $generated@@49 $generated@@50) (and (< 3 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@49 $generated@@26) ($generated@@24 $generated@@25 $generated@@50 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@50)) (let (($generated@@51 ($generated@@28 $generated@@50)))
 (and ($generated@@46 $generated@@49 $generated@@51) ($generated@@23 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51))))) (= ($generated@@45 ($generated@@22 $generated@@48) $generated@@49 $generated@@50) (ite ($generated@@27 $generated@@50) ($generated@@47 ($generated@@39 $generated@@25 $generated@@30)) (let (($generated@@52 ($generated@@28 $generated@@50)))
($generated@@21 ($generated@@22 $generated@@32) $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@52)))))))
 :pattern ( ($generated@@45 ($generated@@22 $generated@@48) $generated@@49 $generated@@50))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@39 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@39 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@27 $generated@@55) (= ($generated@@38 $generated@@55) $generated@@1))
 :pattern ( ($generated@@27 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@38 $generated@@57) $generated@@2))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 ($generated@@58 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@58 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@27 $generated@@62) (= $generated@@62 $generated@@30))
 :pattern ( ($generated@@27 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@56 $generated@@63) (exists (($generated@@64 T@U) ) (= $generated@@63 ($generated@@47 $generated@@64))))
 :pattern ( ($generated@@56 $generated@@63))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@29 ($generated@@39 $generated@@25 $generated@@66) ($generated@@39 $generated@@25 $generated@@67)) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@66 $generated@@26) ($generated@@24 $generated@@25 $generated@@67 $generated@@26)))) (and (=> (not ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 ($generated@@27 ($generated@@39 $generated@@25 $generated@@66)))))) (let (($generated@@68 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@66)))))
($generated@@29 $generated@@68 ($generated@@39 $generated@@25 $generated@@67)))) (= ($generated@@31 ($generated@@22 $generated@@65) ($generated@@39 $generated@@25 $generated@@66) ($generated@@39 $generated@@25 $generated@@67)) (ite ($generated@@27 ($generated@@39 $generated@@25 $generated@@66)) $generated@@67 (let (($generated@@69 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@66)))))
($generated@@39 $generated@@25 ($generated@@47 ($generated@@39 $generated@@25 ($generated@@31 ($generated@@22 $generated@@65) $generated@@69 ($generated@@39 $generated@@25 $generated@@67))))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@22 $generated@@65) ($generated@@39 $generated@@25 $generated@@66) ($generated@@39 $generated@@25 $generated@@67)))
))))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@47 $generated@@70) $generated@@26) ($generated@@24 $generated@@25 $generated@@70 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@47 $generated@@70) $generated@@26))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@29 $generated@@72 $generated@@73) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@72 $generated@@26) ($generated@@24 $generated@@25 $generated@@73 $generated@@26)))) ($generated@@24 $generated@@25 ($generated@@31 $generated@@71 $generated@@72 $generated@@73) $generated@@26))
 :pattern ( ($generated@@31 $generated@@71 $generated@@72 $generated@@73))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@23 $generated@@75 $generated@@76) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@75 $generated@@26) ($generated@@24 $generated@@25 $generated@@76 $generated@@26)))) ($generated@@24 $generated@@25 ($generated@@21 $generated@@74 $generated@@75 $generated@@76) $generated@@26))
 :pattern ( ($generated@@21 $generated@@74 $generated@@75 $generated@@76))
))))
(assert  (=> (<= 3 $generated@@20) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@46 $generated@@78 $generated@@79) (and (< 3 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@78 $generated@@26) ($generated@@24 $generated@@25 $generated@@79 $generated@@26)))) ($generated@@24 $generated@@25 ($generated@@45 $generated@@77 $generated@@78 $generated@@79) $generated@@26))
 :pattern ( ($generated@@45 $generated@@77 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@31 ($generated@@22 $generated@@80) $generated@@81 $generated@@82) ($generated@@31 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@83) $generated@@84 $generated@@85) ($generated@@21 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@45 ($generated@@22 $generated@@86) $generated@@87 $generated@@88) ($generated@@45 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@45 ($generated@@22 $generated@@86) $generated@@87 $generated@@88))
)))
(assert  (=> (<= 3 $generated@@20) (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@46 ($generated@@39 $generated@@25 $generated@@90) ($generated@@39 $generated@@25 $generated@@91)) (and (< 3 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@90 $generated@@26) ($generated@@24 $generated@@25 $generated@@91 $generated@@26)))) (and (=> (not ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 ($generated@@27 ($generated@@39 $generated@@25 $generated@@91)))))) (let (($generated@@92 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@91)))))
 (and ($generated@@46 ($generated@@39 $generated@@25 $generated@@90) $generated@@92) ($generated@@23 ($generated@@39 $generated@@25 $generated@@90) ($generated@@45 ($generated@@22 $generated@@89) ($generated@@39 $generated@@25 $generated@@90) $generated@@92))))) (= ($generated@@45 ($generated@@22 $generated@@89) ($generated@@39 $generated@@25 $generated@@90) ($generated@@39 $generated@@25 $generated@@91)) (ite ($generated@@27 ($generated@@39 $generated@@25 $generated@@91)) ($generated@@47 ($generated@@39 $generated@@25 $generated@@30)) (let (($generated@@93 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@91)))))
($generated@@39 $generated@@25 ($generated@@21 ($generated@@22 $generated@@32) ($generated@@39 $generated@@25 $generated@@90) ($generated@@39 $generated@@25 ($generated@@45 ($generated@@22 $generated@@89) ($generated@@39 $generated@@25 $generated@@90) $generated@@93)))))))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@22 $generated@@89) ($generated@@39 $generated@@25 $generated@@90) ($generated@@39 $generated@@25 $generated@@91)))
))))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@94 $generated@@26) (or ($generated@@27 $generated@@94) ($generated@@56 $generated@@94)))
 :pattern ( ($generated@@56 $generated@@94) ($generated@@24 $generated@@25 $generated@@94 $generated@@26))
 :pattern ( ($generated@@27 $generated@@94) ($generated@@24 $generated@@25 $generated@@94 $generated@@26))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@38 ($generated@@47 $generated@@95)) $generated@@2)
 :pattern ( ($generated@@47 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@28 ($generated@@47 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@47 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@58 $generated@@98 ($generated@@59 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@59 $generated@@98 $generated@@97))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@29 $generated@@100 $generated@@101) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@100 $generated@@26) ($generated@@24 $generated@@25 $generated@@101 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@100)) (let (($generated@@102 ($generated@@28 $generated@@100)))
($generated@@29 $generated@@102 $generated@@101))) (= ($generated@@31 ($generated@@22 $generated@@99) $generated@@100 $generated@@101) (ite ($generated@@27 $generated@@100) $generated@@101 (let (($generated@@103 ($generated@@28 $generated@@100)))
($generated@@47 ($generated@@31 $generated@@99 $generated@@103 $generated@@101)))))))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@99) $generated@@100 $generated@@101))
))))
(assert (forall (($generated@@105 T@U) ) (! (< ($generated@@104 $generated@@105) ($generated@@104 ($generated@@47 $generated@@105)))
 :pattern ( ($generated@@47 $generated@@105))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@106 $generated@@117 $generated@@118 $generated@@119 ($generated@@113 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@122 $generated@@123) $generated@@120)
 :weight 0
)) (and (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@106 $generated@@124 $generated@@125 $generated@@126 ($generated@@113 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@106 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)) (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@106 $generated@@133 $generated@@134 $generated@@135 ($generated@@113 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)))) (= ($generated@@4 $generated@@107) 4)) (= ($generated@@4 $generated@@108) 5)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@110 $generated@@142 $generated@@143 ($generated@@114 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@146) $generated@@144)
 :weight 0
))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@151 $generated@@152) (= ($generated@@110 $generated@@147 $generated@@148 ($generated@@114 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@152) ($generated@@110 $generated@@147 $generated@@148 $generated@@150 $generated@@152)))
 :weight 0
))) (= ($generated@@4 $generated@@111) 6)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ) (= ($generated@@4 ($generated@@112 $generated@@153 $generated@@154)) 7))) (forall (($generated@@155 T@T) ($generated@@156 T@T) ) (! (= ($generated@@115 ($generated@@112 $generated@@155 $generated@@156)) $generated@@155)
 :pattern ( ($generated@@112 $generated@@155 $generated@@156))
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ) (! (= ($generated@@116 ($generated@@112 $generated@@157 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@112 $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@9 ($generated@@106 $generated@@107 $generated@@108 $generated@@5 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@9 ($generated@@58 $generated@@5 ($generated@@110 $generated@@108 $generated@@111 ($generated@@110 $generated@@107 ($generated@@112 $generated@@108 $generated@@111) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@106 $generated@@107 $generated@@108 $generated@@5 ($generated@@109 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@166 $generated@@168) ($generated@@24 $generated@@25 $generated@@167 $generated@@26)) ($generated@@165 $generated@@25 $generated@@167 $generated@@26 $generated@@168))
 :pattern ( ($generated@@165 $generated@@25 $generated@@167 $generated@@26 $generated@@168))
)))
(assert (= ($generated@@169 $generated@@26) $generated@@0))
(assert (= ($generated@@170 $generated@@26) $generated@@3))
(assert (= $generated@@30 ($generated@@39 $generated@@25 $generated@@30)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (and ($generated@@166 $generated@@172) (and ($generated@@56 $generated@@171) ($generated@@165 $generated@@25 $generated@@171 $generated@@26 $generated@@172))) ($generated@@165 $generated@@25 ($generated@@28 $generated@@171) $generated@@26 $generated@@172))
 :pattern ( ($generated@@165 $generated@@25 ($generated@@28 $generated@@171) $generated@@26 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@47 ($generated@@39 $generated@@25 $generated@@173)) ($generated@@39 $generated@@25 ($generated@@47 $generated@@173)))
 :pattern ( ($generated@@47 ($generated@@39 $generated@@25 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@59 $generated@@175 ($generated@@39 $generated@@175 $generated@@174)) ($generated@@39 $generated@@111 ($generated@@59 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@59 $generated@@175 ($generated@@39 $generated@@175 $generated@@174)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@185 true))
(let (($generated@@186  (=> (= $generated@@176 ($generated@@47 $generated@@177)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@177 $generated@@26) (= $generated@@178 $generated@@177)) (and ($generated@@24 $generated@@25 $generated@@178 $generated@@26) (= $generated@@179 $generated@@178))) (and (and ($generated@@165 $generated@@25 $generated@@180 $generated@@26 $generated@@181) ($generated@@165 $generated@@25 $generated@@180 $generated@@26 $generated@@181)) (and ($generated@@165 $generated@@25 $generated@@179 $generated@@26 $generated@@181) (= (ControlFlow 0 4) (- 0 3))))) (or (< ($generated@@104 $generated@@180) ($generated@@104 $generated@@180)) (and (= ($generated@@104 $generated@@180) ($generated@@104 $generated@@180)) (< ($generated@@104 $generated@@179) ($generated@@104 $generated@@176))))))))
(let (($generated@@187  (=> (or (not (= $generated@@176 $generated@@30)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@186) (=> (= (ControlFlow 0 6) 5) $generated@@185)))))
(let (($generated@@188 true))
(let (($generated@@189 true))
(let (($generated@@190  (=> (= $generated@@182 ($generated@@109 $generated@@183 $generated@@181 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@189) (=> (= (ControlFlow 0 7) 2) $generated@@188)) (=> (= (ControlFlow 0 7) 6) $generated@@187)))))
(let (($generated@@191  (=> (and ($generated@@166 $generated@@181) ($generated@@184 $generated@@181)) (=> (and (and ($generated@@24 $generated@@25 $generated@@180 $generated@@26) ($generated@@24 $generated@@25 $generated@@176 $generated@@26)) (and (= 3 $generated@@20) (= (ControlFlow 0 8) 7))) $generated@@190))))
$generated@@191))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
