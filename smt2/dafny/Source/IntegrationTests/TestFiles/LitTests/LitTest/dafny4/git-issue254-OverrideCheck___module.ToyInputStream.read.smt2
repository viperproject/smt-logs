(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () Int)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@73 () T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@83 () T@U)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@127 (T@U) Bool)
(declare-fun $generated@@134 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@1) 0))
(assert (= ($generated@@31 $generated) $generated@@0))
(assert (= ($generated@@32 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (= ($generated@@14 $generated@@39) 3) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@43 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@43 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@43 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@14 $generated@@44) 4)) (= ($generated@@14 $generated@@45) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@14 ($generated@@46 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@46 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@46 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@46 $generated@@67 $generated@@68))
))))
(assert  (=> (<= 0 $generated@@33) (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (or ($generated@@36 $generated@@69 $generated@@70) (and (< 0 $generated@@33) (and ($generated@@35 $generated@@69) (and (or (not (= $generated@@70 $generated@@37)) (not true)) (and ($generated@@38 $generated@@39 $generated@@70 $generated@@40) ($generated@@41 $generated@@39 $generated@@70 $generated@@40 $generated@@69)))))) (= ($generated@@34 $generated@@69 $generated@@70) (= ($generated@@21 ($generated@@42 $generated@@16 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@69 $generated@@70) $generated@@47))) ($generated@@48 7))))
 :pattern ( ($generated@@34 $generated@@69 $generated@@70) ($generated@@35 $generated@@69))
))))
(assert ($generated@@71 $generated@@72))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@75 $generated@@73)  (or (= $generated@@75 $generated@@37) (= ($generated@@74 $generated@@75) $generated@@73)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@75 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@76 $generated@@72)  (or (= $generated@@76 $generated@@37) (= ($generated@@74 $generated@@76) $generated@@72)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@76 $generated@@72))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and ($generated@@35 $generated@@78) (and (or (not (= $generated@@79 $generated@@37)) (not true)) ($generated@@38 $generated@@39 $generated@@79 $generated@@77))) ($generated@@38 $generated@@16 ($generated@@42 $generated@@16 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@78 $generated@@79) $generated@@47)) $generated))
 :pattern ( ($generated@@42 $generated@@16 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@78 $generated@@79) $generated@@47)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@41 $generated@@39 $generated@@81 $generated@@80 $generated@@82) ($generated@@41 $generated@@39 $generated@@81 $generated@@73 $generated@@82))
 :pattern ( ($generated@@41 $generated@@39 $generated@@81 $generated@@80 $generated@@82))
 :pattern ( ($generated@@41 $generated@@39 $generated@@81 $generated@@73 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@41 $generated@@39 $generated@@84 $generated@@83 $generated@@85) ($generated@@41 $generated@@39 $generated@@84 $generated@@77 $generated@@85))
 :pattern ( ($generated@@41 $generated@@39 $generated@@84 $generated@@83 $generated@@85))
 :pattern ( ($generated@@41 $generated@@39 $generated@@84 $generated@@77 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@41 $generated@@39 $generated@@86 $generated@@40 $generated@@87) ($generated@@41 $generated@@39 $generated@@86 $generated@@72 $generated@@87))
 :pattern ( ($generated@@41 $generated@@39 $generated@@86 $generated@@40 $generated@@87))
 :pattern ( ($generated@@41 $generated@@39 $generated@@86 $generated@@72 $generated@@87))
)))
(assert (= ($generated@@30 $generated@@47) 0))
(assert (= ($generated@@88 $generated@@5 $generated@@13) $generated@@47))
(assert  (not ($generated@@89 $generated@@47)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@41 $generated@@39 $generated@@90 $generated@@73 $generated@@91)  (or (= $generated@@90 $generated@@37) ($generated@@19 ($generated@@42 $generated@@15 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@91 $generated@@90) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@39 $generated@@90 $generated@@73 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@41 $generated@@39 $generated@@92 $generated@@77 $generated@@93)  (or (= $generated@@92 $generated@@37) ($generated@@19 ($generated@@42 $generated@@15 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@93 $generated@@92) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@39 $generated@@92 $generated@@77 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@41 $generated@@39 $generated@@94 $generated@@72 $generated@@95)  (or (= $generated@@94 $generated@@37) ($generated@@19 ($generated@@42 $generated@@15 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@95 $generated@@94) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@39 $generated@@94 $generated@@72 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@96 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@19 ($generated@@42 $generated@@15 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@97 $generated@@99) $generated@@1))) ($generated@@19 ($generated@@42 $generated@@15 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@98 $generated@@99) $generated@@1))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@98 $generated@@99) $generated@@1))
)))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 Int) ) (! (= ($generated@@48 $generated@@100) $generated@@100)
 :pattern ( ($generated@@48 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 $generated@@102) $generated@@102)
 :pattern ( ($generated@@101 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 ($generated@@42 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@42 $generated@@106 $generated@@105))
)))
(assert ($generated@@89 $generated@@1))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (!  (=> ($generated@@96 $generated@@107 $generated@@108) (=> ($generated@@41 $generated@@111 $generated@@109 $generated@@110 $generated@@107) ($generated@@41 $generated@@111 $generated@@109 $generated@@110 $generated@@108)))
 :pattern ( ($generated@@96 $generated@@107 $generated@@108) ($generated@@41 $generated@@111 $generated@@109 $generated@@110 $generated@@107))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@112 $generated@@80)  (and ($generated@@38 $generated@@39 $generated@@112 $generated@@73) (or (not (= $generated@@112 $generated@@37)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@112 $generated@@80))
 :pattern ( ($generated@@38 $generated@@39 $generated@@112 $generated@@73))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@113 $generated@@83)  (and ($generated@@38 $generated@@39 $generated@@113 $generated@@77) (or (not (= $generated@@113 $generated@@37)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@113 $generated@@83))
 :pattern ( ($generated@@38 $generated@@39 $generated@@113 $generated@@77))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@114 $generated@@40)  (and ($generated@@38 $generated@@39 $generated@@114 $generated@@72) (or (not (= $generated@@114 $generated@@37)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@114 $generated@@40))
 :pattern ( ($generated@@38 $generated@@39 $generated@@114 $generated@@72))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@41 $generated@@39 $generated@@115 $generated@@72 $generated@@116) ($generated@@41 $generated@@39 $generated@@115 $generated@@77 $generated@@116))
 :pattern ( ($generated@@41 $generated@@39 $generated@@115 $generated@@72 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or (not (= $generated@@117 $generated@@119)) (not true)) (=> (and ($generated@@96 $generated@@117 $generated@@118) ($generated@@96 $generated@@118 $generated@@119)) ($generated@@96 $generated@@117 $generated@@119)))
 :pattern ( ($generated@@96 $generated@@117 $generated@@118) ($generated@@96 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (and (= ($generated@@120 ($generated@@88 $generated@@121 $generated@@122)) $generated@@121) (= ($generated@@32 ($generated@@88 $generated@@121 $generated@@122)) $generated@@122))
 :pattern ( ($generated@@88 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@123) (and (or (not (= $generated@@124 $generated@@37)) (not true)) ($generated@@38 $generated@@39 $generated@@124 $generated@@77))) ($generated@@19 ($generated@@42 $generated@@15 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@123 $generated@@124) $generated@@1)))) ($generated@@41 $generated@@16 ($generated@@42 $generated@@16 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@123 $generated@@124) $generated@@47)) $generated $generated@@123))
 :pattern ( ($generated@@42 $generated@@16 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@123 $generated@@124) $generated@@47)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@42 $generated@@126 ($generated@@104 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@104 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and (and (and ($generated@@35 $generated@@128) ($generated@@35 $generated@@129)) (and (or (not (= $generated@@130 $generated@@37)) (not true)) ($generated@@38 $generated@@39 $generated@@130 $generated@@40))) (and ($generated@@127 $generated@@128) ($generated@@96 $generated@@128 $generated@@129))) (=> (forall (($generated@@131 T@U) ($generated@@132 T@U) )  (=> (and (or (not (= $generated@@131 $generated@@37)) (not true)) (= $generated@@131 $generated@@130)) (= ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@128 $generated@@131) $generated@@132) ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@129 $generated@@131) $generated@@132)))) (= ($generated@@34 $generated@@128 $generated@@130) ($generated@@34 $generated@@129 $generated@@130))))
 :pattern ( ($generated@@127 $generated@@128) ($generated@@96 $generated@@128 $generated@@129) ($generated@@34 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@38 $generated@@39 $generated@@133 $generated@@72) ($generated@@38 $generated@@39 $generated@@133 $generated@@77))
 :pattern ( ($generated@@38 $generated@@39 $generated@@133 $generated@@72))
)))
(assert (= ($generated@@31 $generated@@73) $generated@@3))
(assert (= ($generated@@134 $generated@@73) $generated@@10))
(assert (= ($generated@@31 $generated@@80) $generated@@4))
(assert (= ($generated@@134 $generated@@80) $generated@@10))
(assert (= ($generated@@31 $generated@@77) $generated@@6))
(assert (= ($generated@@134 $generated@@77) $generated@@11))
(assert (= ($generated@@31 $generated@@83) $generated@@7))
(assert (= ($generated@@134 $generated@@83) $generated@@11))
(assert (= ($generated@@31 $generated@@72) $generated@@8))
(assert (= ($generated@@134 $generated@@72) $generated@@12))
(assert (= ($generated@@31 $generated@@40) $generated@@9))
(assert (= ($generated@@134 $generated@@40) $generated@@12))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@135 $generated@@77)  (or (= $generated@@135 $generated@@37) ($generated@@71 ($generated@@74 $generated@@135))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@135 $generated@@77))
)))
(assert (forall (($generated@@136 Int) ) (! (= ($generated@@104 $generated@@16 ($generated@@20 ($generated@@48 $generated@@136))) ($generated@@101 $generated@@45 ($generated@@104 $generated@@16 ($generated@@20 $generated@@136))))
 :pattern ( ($generated@@104 $generated@@16 ($generated@@20 ($generated@@48 $generated@@136))))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@104 $generated@@138 ($generated@@101 $generated@@138 $generated@@137)) ($generated@@101 $generated@@45 ($generated@@104 $generated@@138 $generated@@137)))
 :pattern ( ($generated@@104 $generated@@138 ($generated@@101 $generated@@138 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! ($generated@@41 $generated@@16 $generated@@140 $generated $generated@@139)
 :pattern ( ($generated@@41 $generated@@16 $generated@@140 $generated $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@38 $generated@@16 $generated@@141 $generated)
 :pattern ( ($generated@@38 $generated@@16 $generated@@141 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@145  (=> ($generated@@34 $generated@@142 $generated@@143) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@36 $generated@@142 $generated@@143) (or ($generated@@34 $generated@@142 $generated@@143) (= ($generated@@21 ($generated@@42 $generated@@16 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@142 $generated@@143) $generated@@47))) ($generated@@48 7))))) (=> (=> ($generated@@36 $generated@@142 $generated@@143) (or ($generated@@34 $generated@@142 $generated@@143) (= ($generated@@21 ($generated@@42 $generated@@16 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@39 ($generated@@46 $generated@@44 $generated@@45) $generated@@142 $generated@@143) $generated@@47))) ($generated@@48 7)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> (or (not (= $generated@@144 $generated@@37)) (not true)) (or (not (= $generated@@144 $generated@@37)) (not true)))) (=> (=> (or (not (= $generated@@144 $generated@@37)) (not true)) (or (not (= $generated@@144 $generated@@37)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@146 T@U) ($generated@@147 T@U) ) true)) (=> (forall (($generated@@148 T@U) ($generated@@149 T@U) ) true) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) true)))))))))))
(let (($generated@@152  (=> (and (and (and ($generated@@35 $generated@@142) ($generated@@127 $generated@@142)) (and (or (not (= $generated@@143 $generated@@37)) (not true)) (and ($generated@@38 $generated@@39 $generated@@143 $generated@@40) ($generated@@41 $generated@@39 $generated@@143 $generated@@40 $generated@@142)))) (and (and ($generated@@38 $generated@@39 $generated@@144 $generated@@80) ($generated@@41 $generated@@39 $generated@@144 $generated@@80 $generated@@142)) (and (= 1 $generated@@33) (= (ControlFlow 0 6) 2)))) $generated@@145)))
$generated@@152)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
