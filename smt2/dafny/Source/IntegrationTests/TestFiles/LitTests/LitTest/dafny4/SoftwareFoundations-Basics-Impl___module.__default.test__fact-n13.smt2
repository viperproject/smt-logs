(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U T@U T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) T@U)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@109 (T@U) Int)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@170 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@4 $generated@@25) 3))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (or ($generated@@23 $generated@@34 $generated@@35) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@34 $generated@@26) ($generated@@24 $generated@@25 $generated@@35 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@34)) (let (($generated@@36 ($generated@@28 $generated@@34)))
 (and ($generated@@23 $generated@@36 $generated@@35) ($generated@@29 $generated@@35 ($generated@@21 $generated@@33 $generated@@36 $generated@@35))))) (= ($generated@@21 ($generated@@22 $generated@@33) $generated@@34 $generated@@35) (ite ($generated@@27 $generated@@34) $generated@@30 (let (($generated@@37 ($generated@@28 $generated@@34)))
($generated@@31 ($generated@@22 $generated@@32) $generated@@35 ($generated@@21 $generated@@33 $generated@@37 $generated@@35)))))))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@33) $generated@@34 $generated@@35))
))))
(assert (= ($generated@@38 $generated@@30) $generated@@1))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (or ($generated@@23 ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@41 $generated@@26) ($generated@@24 $generated@@25 $generated@@42 $generated@@26)))) (and (=> (not ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 ($generated@@27 ($generated@@39 $generated@@25 $generated@@41)))))) (let (($generated@@43 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@41)))))
 (and ($generated@@23 $generated@@43 ($generated@@39 $generated@@25 $generated@@42)) ($generated@@29 ($generated@@39 $generated@@25 $generated@@42) ($generated@@21 ($generated@@22 $generated@@40) $generated@@43 ($generated@@39 $generated@@25 $generated@@42)))))) (= ($generated@@21 ($generated@@22 $generated@@40) ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)) (ite ($generated@@27 ($generated@@39 $generated@@25 $generated@@41)) $generated@@30 (let (($generated@@44 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@41)))))
($generated@@39 $generated@@25 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@39 $generated@@25 $generated@@42) ($generated@@39 $generated@@25 ($generated@@21 ($generated@@22 $generated@@40) $generated@@44 ($generated@@39 $generated@@25 $generated@@42))))))))))
 :weight 3
 :pattern ( ($generated@@21 ($generated@@22 $generated@@40) ($generated@@39 $generated@@25 $generated@@41) ($generated@@39 $generated@@25 $generated@@42)))
))))
(assert ($generated@@24 $generated@@25 $generated@@30 $generated@@26))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@47) (= $generated@@46 $generated@@47))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@39 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@39 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@27 $generated@@50) (= ($generated@@38 $generated@@50) $generated@@1))
 :pattern ( ($generated@@27 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@38 $generated@@52) $generated@@2))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@54 $generated@@56 ($generated@@53 $generated@@56 $generated@@55)) $generated@@55)
 :pattern ( ($generated@@53 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@27 $generated@@57) (= $generated@@57 $generated@@30))
 :pattern ( ($generated@@27 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@51 $generated@@59) (exists (($generated@@60 T@U) ) (= $generated@@59 ($generated@@58 $generated@@60))))
 :pattern ( ($generated@@51 $generated@@59))
)))
(assert  (=> (<= 3 $generated@@20) (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> (or ($generated@@62 ($generated@@39 $generated@@25 $generated@@64)) (and (< 3 $generated@@20) ($generated@@24 $generated@@25 $generated@@64 $generated@@26))) (and (=> (not ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 ($generated@@27 ($generated@@39 $generated@@25 $generated@@64)))))) (let (($generated@@65 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@64)))))
 (and ($generated@@62 $generated@@65) ($generated@@23 ($generated@@39 $generated@@25 $generated@@64) ($generated@@61 ($generated@@22 $generated@@63) $generated@@65))))) (= ($generated@@61 ($generated@@22 $generated@@63) ($generated@@39 $generated@@25 $generated@@64)) (ite ($generated@@27 ($generated@@39 $generated@@25 $generated@@64)) ($generated@@58 ($generated@@39 $generated@@25 $generated@@30)) (let (($generated@@66 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@64)))))
($generated@@39 $generated@@25 ($generated@@21 ($generated@@22 $generated@@32) ($generated@@39 $generated@@25 $generated@@64) ($generated@@39 $generated@@25 ($generated@@61 ($generated@@22 $generated@@63) $generated@@66)))))))))
 :weight 3
 :pattern ( ($generated@@61 ($generated@@22 $generated@@63) ($generated@@39 $generated@@25 $generated@@64)))
))))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@29 ($generated@@39 $generated@@25 $generated@@68) ($generated@@39 $generated@@25 $generated@@69)) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@68 $generated@@26) ($generated@@24 $generated@@25 $generated@@69 $generated@@26)))) (and (=> (not ($generated@@9 ($generated@@39 $generated@@5 ($generated@@8 ($generated@@27 ($generated@@39 $generated@@25 $generated@@68)))))) (let (($generated@@70 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@68)))))
($generated@@29 $generated@@70 ($generated@@39 $generated@@25 $generated@@69)))) (= ($generated@@31 ($generated@@22 $generated@@67) ($generated@@39 $generated@@25 $generated@@68) ($generated@@39 $generated@@25 $generated@@69)) (ite ($generated@@27 ($generated@@39 $generated@@25 $generated@@68)) $generated@@69 (let (($generated@@71 ($generated@@39 $generated@@25 ($generated@@28 ($generated@@39 $generated@@25 $generated@@68)))))
($generated@@39 $generated@@25 ($generated@@58 ($generated@@39 $generated@@25 ($generated@@31 ($generated@@22 $generated@@67) $generated@@71 ($generated@@39 $generated@@25 $generated@@69))))))))))
 :weight 3
 :pattern ( ($generated@@31 ($generated@@22 $generated@@67) ($generated@@39 $generated@@25 $generated@@68) ($generated@@39 $generated@@25 $generated@@69)))
))))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@58 $generated@@72) $generated@@26) ($generated@@24 $generated@@25 $generated@@72 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@58 $generated@@72) $generated@@26))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (and ($generated@@51 $generated@@73) ($generated@@51 $generated@@74)) (= ($generated@@45 $generated@@73 $generated@@74) ($generated@@45 ($generated@@28 $generated@@73) ($generated@@28 $generated@@74))))
 :pattern ( ($generated@@45 $generated@@73 $generated@@74) ($generated@@51 $generated@@73))
 :pattern ( ($generated@@45 $generated@@73 $generated@@74) ($generated@@51 $generated@@74))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@29 $generated@@76 $generated@@77) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@76 $generated@@26) ($generated@@24 $generated@@25 $generated@@77 $generated@@26)))) ($generated@@24 $generated@@25 ($generated@@31 $generated@@75 $generated@@76 $generated@@77) $generated@@26))
 :pattern ( ($generated@@31 $generated@@75 $generated@@76 $generated@@77))
))))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@23 $generated@@79 $generated@@80) (and (< 2 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@79 $generated@@26) ($generated@@24 $generated@@25 $generated@@80 $generated@@26)))) ($generated@@24 $generated@@25 ($generated@@21 $generated@@78 $generated@@79 $generated@@80) $generated@@26))
 :pattern ( ($generated@@21 $generated@@78 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@31 ($generated@@22 $generated@@81) $generated@@82 $generated@@83) ($generated@@31 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@84) $generated@@85 $generated@@86) ($generated@@21 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@21 ($generated@@22 $generated@@84) $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@87 $generated@@88) (or ($generated@@27 $generated@@88) ($generated@@51 $generated@@88)))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert  (=> (<= 3 $generated@@20) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@62 $generated@@90) (and (< 3 $generated@@20) ($generated@@24 $generated@@25 $generated@@90 $generated@@26))) ($generated@@24 $generated@@25 ($generated@@61 $generated@@89 $generated@@90) $generated@@26))
 :pattern ( ($generated@@61 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@91 $generated@@26) (or ($generated@@27 $generated@@91) ($generated@@51 $generated@@91)))
 :pattern ( ($generated@@51 $generated@@91) ($generated@@24 $generated@@25 $generated@@91 $generated@@26))
 :pattern ( ($generated@@27 $generated@@91) ($generated@@24 $generated@@25 $generated@@91 $generated@@26))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@27 $generated@@92) ($generated@@27 $generated@@93)) ($generated@@45 $generated@@92 $generated@@93))
 :pattern ( ($generated@@45 $generated@@92 $generated@@93) ($generated@@27 $generated@@92))
 :pattern ( ($generated@@45 $generated@@92 $generated@@93) ($generated@@27 $generated@@93))
)))
(assert  (=> (<= 3 $generated@@20) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@62 $generated@@95) (and (< 3 $generated@@20) ($generated@@24 $generated@@25 $generated@@95 $generated@@26))) (and (=> (not ($generated@@27 $generated@@95)) (let (($generated@@96 ($generated@@28 $generated@@95)))
 (and ($generated@@62 $generated@@96) ($generated@@23 $generated@@95 ($generated@@61 $generated@@94 $generated@@96))))) (= ($generated@@61 ($generated@@22 $generated@@94) $generated@@95) (ite ($generated@@27 $generated@@95) ($generated@@58 ($generated@@39 $generated@@25 $generated@@30)) (let (($generated@@97 ($generated@@28 $generated@@95)))
($generated@@21 ($generated@@22 $generated@@32) $generated@@95 ($generated@@61 $generated@@94 $generated@@97)))))))
 :pattern ( ($generated@@61 ($generated@@22 $generated@@94) $generated@@95))
))))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@38 ($generated@@58 $generated@@98)) $generated@@2)
 :pattern ( ($generated@@58 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@28 ($generated@@58 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@58 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@53 $generated@@101 ($generated@@54 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@54 $generated@@101 $generated@@100))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@29 $generated@@103 $generated@@104) (and (< 1 $generated@@20) (and ($generated@@24 $generated@@25 $generated@@103 $generated@@26) ($generated@@24 $generated@@25 $generated@@104 $generated@@26)))) (and (=> (not ($generated@@27 $generated@@103)) (let (($generated@@105 ($generated@@28 $generated@@103)))
($generated@@29 $generated@@105 $generated@@104))) (= ($generated@@31 ($generated@@22 $generated@@102) $generated@@103 $generated@@104) (ite ($generated@@27 $generated@@103) $generated@@104 (let (($generated@@106 ($generated@@28 $generated@@103)))
($generated@@58 ($generated@@31 $generated@@102 $generated@@106 $generated@@104)))))))
 :pattern ( ($generated@@31 ($generated@@22 $generated@@102) $generated@@103 $generated@@104))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@61 ($generated@@22 $generated@@107) $generated@@108) ($generated@@61 $generated@@107 $generated@@108))
 :pattern ( ($generated@@61 ($generated@@22 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (< ($generated@@109 $generated@@110) ($generated@@109 ($generated@@58 $generated@@110)))
 :pattern ( ($generated@@58 $generated@@110))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@111 $generated@@122 $generated@@123 $generated@@124 ($generated@@118 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@111 $generated@@129 $generated@@130 $generated@@131 ($generated@@118 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@111 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@111 $generated@@138 $generated@@139 $generated@@140 ($generated@@118 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))) (= ($generated@@4 $generated@@112) 4)) (= ($generated@@4 $generated@@113) 5)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@115 $generated@@147 $generated@@148 ($generated@@119 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@151) $generated@@149)
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@156 $generated@@157) (= ($generated@@115 $generated@@152 $generated@@153 ($generated@@119 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@115 $generated@@152 $generated@@153 $generated@@155 $generated@@157)))
 :weight 0
))) (= ($generated@@4 $generated@@116) 6)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (= ($generated@@4 ($generated@@117 $generated@@158 $generated@@159)) 7))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@117 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@117 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@9 ($generated@@111 $generated@@112 $generated@@113 $generated@@5 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@9 ($generated@@53 $generated@@5 ($generated@@115 $generated@@113 $generated@@116 ($generated@@115 $generated@@112 ($generated@@117 $generated@@113 $generated@@116) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113 $generated@@5 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@171 $generated@@173) ($generated@@24 $generated@@25 $generated@@172 $generated@@26)) ($generated@@170 $generated@@25 $generated@@172 $generated@@26 $generated@@173))
 :pattern ( ($generated@@170 $generated@@25 $generated@@172 $generated@@26 $generated@@173))
)))
(assert (= ($generated@@174 $generated@@26) $generated@@0))
(assert (= ($generated@@175 $generated@@26) $generated@@3))
(assert (= $generated@@30 ($generated@@39 $generated@@25 $generated@@30)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and ($generated@@171 $generated@@177) (and ($generated@@51 $generated@@176) ($generated@@170 $generated@@25 $generated@@176 $generated@@26 $generated@@177))) ($generated@@170 $generated@@25 ($generated@@28 $generated@@176) $generated@@26 $generated@@177))
 :pattern ( ($generated@@170 $generated@@25 ($generated@@28 $generated@@176) $generated@@26 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@58 ($generated@@39 $generated@@25 $generated@@178)) ($generated@@39 $generated@@25 ($generated@@58 $generated@@178)))
 :pattern ( ($generated@@58 ($generated@@39 $generated@@25 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@54 $generated@@180 ($generated@@39 $generated@@180 $generated@@179)) ($generated@@39 $generated@@116 ($generated@@54 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@54 $generated@@180 ($generated@@39 $generated@@180 $generated@@179)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 (T@U) Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@210 true))
(let (($generated@@211  (=> (and (and ($generated@@170 $generated@@25 $generated@@181 $generated@@26 $generated@@182) ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@182)) (and ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@182) ($generated@@29 $generated@@183 $generated@@183))) (=> (and (and (and (and (= $generated@@184 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183)) ($generated@@170 $generated@@25 $generated@@184 $generated@@26 $generated@@182)) (and ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@182) ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@182))) (and (and ($generated@@29 $generated@@183 $generated@@183) (= $generated@@185 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183))) (and ($generated@@170 $generated@@25 $generated@@185 $generated@@26 $generated@@182) (= $generated@@186 ($generated@@39 $generated@@25 $generated@@30))))) (and (and (and ($generated@@170 $generated@@25 $generated@@186 $generated@@26 $generated@@182) ($generated@@29 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))) (and (= $generated@@187 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))) ($generated@@170 $generated@@25 $generated@@187 $generated@@26 $generated@@182))) (and (and ($generated@@29 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))) (= $generated@@188 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))))) (and ($generated@@170 $generated@@25 $generated@@188 $generated@@26 $generated@@182) ($generated@@23 $generated@@181 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30)))))))) (=> (and (and (and (and (and (and (and ($generated@@29 $generated@@183 $generated@@183) (and ($generated@@29 $generated@@183 $generated@@183) ($generated@@29 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30)))) ($generated@@29 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30)))) ($generated@@23 $generated@@181 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))))) ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@182)) (and ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@182) ($generated@@29 $generated@@183 $generated@@183))) (and (and ($generated@@29 $generated@@183 $generated@@183) (= $generated@@189 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183))) (and ($generated@@171 $generated@@190) ($generated@@191 $generated@@190)))) (and (and (and (and (and ($generated@@87 ($generated@@21 ($generated@@22 $generated@@32) $generated@@181 ($generated@@31 ($generated@@22 $generated@@32) $generated@@189 $generated@@189))) ($generated@@87 ($generated@@21 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@181 $generated@@181) $generated@@189))) (and (and ($generated@@29 $generated@@189 $generated@@189) ($generated@@23 $generated@@181 ($generated@@31 ($generated@@22 $generated@@32) $generated@@189 $generated@@189))) (and ($generated@@29 $generated@@181 $generated@@181) ($generated@@23 ($generated@@31 ($generated@@22 $generated@@32) $generated@@181 $generated@@181) $generated@@189)))) ($generated@@45 ($generated@@21 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@181 ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@189 $generated@@189)) ($generated@@21 ($generated@@22 ($generated@@22 $generated@@32)) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@181 $generated@@181) $generated@@189))) (and (= $generated@@182 $generated@@190) ($generated@@170 $generated@@25 $generated@@192 $generated@@26 $generated@@190))) (and (and ($generated@@170 $generated@@25 $generated@@193 $generated@@26 $generated@@190) ($generated@@23 $generated@@192 $generated@@193)) (and ($generated@@23 $generated@@192 $generated@@193) (= (ControlFlow 0 5) (- 0 4)))))) ($generated@@45 ($generated@@21 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@181 ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30)))) ($generated@@21 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@192 $generated@@193)))))))
(let (($generated@@212  (=> ($generated@@170 $generated@@25 $generated@@181 $generated@@26 $generated@@182) (=> (and (and ($generated@@62 $generated@@181) ($generated@@62 $generated@@181)) (and ($generated@@171 $generated@@194) ($generated@@191 $generated@@194))) (=> (and (and (and (and ($generated@@87 ($generated@@21 ($generated@@22 $generated@@32) $generated@@195 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183))) ($generated@@87 ($generated@@21 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@195 $generated@@195) $generated@@183))) (and (and ($generated@@29 $generated@@183 $generated@@183) ($generated@@23 $generated@@195 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183))) (and ($generated@@29 $generated@@195 $generated@@195) ($generated@@23 ($generated@@31 ($generated@@22 $generated@@32) $generated@@195 $generated@@195) $generated@@183)))) (and ($generated@@45 ($generated@@21 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@195 ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@183 $generated@@183)) ($generated@@21 ($generated@@22 ($generated@@22 $generated@@32)) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@195 $generated@@195) $generated@@183)) (= $generated@@182 $generated@@194))) (and (and ($generated@@170 $generated@@25 $generated@@181 $generated@@26 $generated@@194) ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@194)) (and ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@194) ($generated@@29 $generated@@183 $generated@@183)))) (=> (and (and (and (and (and (= $generated@@196 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183)) ($generated@@170 $generated@@25 $generated@@196 $generated@@26 $generated@@194)) (and ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@194) ($generated@@170 $generated@@25 $generated@@183 $generated@@26 $generated@@194))) (and (and ($generated@@29 $generated@@183 $generated@@183) (= $generated@@197 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183))) (and ($generated@@170 $generated@@25 $generated@@197 $generated@@26 $generated@@194) (= $generated@@198 ($generated@@39 $generated@@25 $generated@@30))))) (and (and (and ($generated@@170 $generated@@25 $generated@@198 $generated@@26 $generated@@194) ($generated@@29 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))) (and (= $generated@@199 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))) ($generated@@170 $generated@@25 $generated@@199 $generated@@26 $generated@@194))) (and (and ($generated@@29 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))) (= $generated@@200 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))))) (and ($generated@@170 $generated@@25 $generated@@200 $generated@@26 $generated@@194) ($generated@@23 $generated@@181 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30)))))))) (and (and (and (and ($generated@@29 $generated@@183 $generated@@183) (and ($generated@@29 $generated@@183 $generated@@183) ($generated@@29 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30)))) ($generated@@29 ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30)))) ($generated@@23 $generated@@181 ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 $generated@@32) ($generated@@31 ($generated@@22 $generated@@32) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30))))) (= (ControlFlow 0 3) (- 0 2)))) ($generated@@45 ($generated@@61 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@181) ($generated@@21 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@181 ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@183 $generated@@183) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) ($generated@@31 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@183 $generated@@183) ($generated@@39 $generated@@25 $generated@@30)))))))))))
(let (($generated@@213 true))
(let (($generated@@214  (=> (= $generated@@201 ($generated@@114 $generated@@202 $generated@@182 $generated false)) (=> (and (= $generated@@195 ($generated@@39 $generated@@25 ($generated@@58 ($generated@@39 $generated@@25 ($generated@@58 ($generated@@39 $generated@@25 $generated@@30)))))) (= $generated@@203 ($generated@@58 $generated@@195))) (=> (and (and (and (= $generated@@181 ($generated@@58 ($generated@@58 $generated@@203))) (= $generated@@183 ($generated@@58 $generated@@181))) (and ($generated@@170 $generated@@25 $generated@@203 $generated@@26 $generated@@182) ($generated@@62 $generated@@203))) (and (and ($generated@@87 ($generated@@61 ($generated@@22 $generated@@32) $generated@@203)) ($generated@@87 $generated@@183)) ($generated@@62 $generated@@203))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@45 ($generated@@61 ($generated@@22 ($generated@@22 $generated@@32)) $generated@@203) $generated@@183)) (=> ($generated@@45 ($generated@@61 ($generated@@22 $generated@@32) $generated@@203) $generated@@183) (=> (and (= $generated@@192 ($generated@@58 ($generated@@58 ($generated@@58 ($generated@@58 $generated@@183))))) (= $generated@@193 ($generated@@58 ($generated@@58 $generated@@192)))) (and (and (and (=> (= (ControlFlow 0 7) 1) $generated@@213) (=> (= (ControlFlow 0 7) 3) $generated@@212)) (=> (= (ControlFlow 0 7) 5) $generated@@211)) (=> (= (ControlFlow 0 7) 6) $generated@@210))))))))))
(let (($generated@@215  (=> (and ($generated@@171 $generated@@182) ($generated@@191 $generated@@182)) (=> (and (and ($generated@@24 $generated@@25 $generated@@204 $generated@@26) ($generated@@170 $generated@@25 $generated@@204 $generated@@26 $generated@@182)) true) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@205 $generated@@26) ($generated@@170 $generated@@25 $generated@@205 $generated@@26 $generated@@182)) true) (and (and ($generated@@24 $generated@@25 $generated@@206 $generated@@26) ($generated@@170 $generated@@25 $generated@@206 $generated@@26 $generated@@182)) true)) (=> (and (and (and (and ($generated@@24 $generated@@25 $generated@@207 $generated@@26) ($generated@@170 $generated@@25 $generated@@207 $generated@@26 $generated@@182)) true) (and (and ($generated@@24 $generated@@25 $generated@@208 $generated@@26) ($generated@@170 $generated@@25 $generated@@208 $generated@@26 $generated@@182)) true)) (and (and (and ($generated@@24 $generated@@25 $generated@@209 $generated@@26) ($generated@@170 $generated@@25 $generated@@209 $generated@@26 $generated@@182)) true) (and (= 4 $generated@@20) (= (ControlFlow 0 9) 7)))) $generated@@214))))))
$generated@@215)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
