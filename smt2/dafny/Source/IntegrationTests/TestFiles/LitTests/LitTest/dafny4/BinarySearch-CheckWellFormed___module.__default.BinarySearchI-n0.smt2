(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@72 (Int) Int)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U) T@U)
(declare-fun $generated@@108 (T@U Int) T@U)
(declare-fun $generated@@118 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) Int)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (= ($generated@@5 $generated@@31) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35) ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@32 $generated@@33) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 ($generated@@24 $generated@@33) $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ) (!  (not ($generated@@36 $generated@@37 $generated@@38))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38))
)))
(assert (= ($generated@@39 $generated@@37) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@5 $generated@@42) 4)) (= ($generated@@5 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@5 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@66 ($generated@@24 $generated@@65) $generated@@67)  (or (= $generated@@66 $generated@@25) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@67 $generated@@66) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@66 ($generated@@24 $generated@@65) $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@68 $generated@@69 $generated@@70) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@10 ($generated@@40 $generated@@6 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@69 $generated@@71) $generated@@1))) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@71) $generated@@1))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@70 $generated@@71) $generated@@1))
)))
 :pattern ( ($generated@@68 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 Int) ) (! (= ($generated@@72 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 $generated@@75) $generated@@75)
 :pattern ( ($generated@@74 $generated@@76 $generated@@75))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 Int) ) (!  (=> (and (and (and ($generated@@78 $generated@@81) (and (or (not (= $generated@@82 $generated@@25)) (not true)) (= ($generated@@26 $generated@@82) ($generated@@24 $generated@@80)))) (and (<= 0 $generated@@83) (< $generated@@83 ($generated@@23 $generated@@82)))) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@81 $generated@@82) $generated@@1)))) ($generated@@79 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@81 $generated@@82) ($generated@@77 $generated@@83)) $generated@@80 $generated@@81))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@81 $generated@@82) ($generated@@77 $generated@@83)) ($generated@@24 $generated@@80))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@84 $generated@@86 ($generated@@40 $generated@@86 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@40 $generated@@86 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@88 ($generated@@32 $generated@@87))  (and ($generated@@27 $generated@@31 $generated@@88 ($generated@@24 $generated@@87)) (or (not (= $generated@@88 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@88 ($generated@@32 $generated@@87)))
 :pattern ( ($generated@@27 $generated@@31 $generated@@88 ($generated@@24 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@79 ($generated@@84 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@30 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@79 ($generated@@84 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@68 $generated@@93 $generated@@94) (=> ($generated@@79 $generated@@95 $generated@@96 $generated@@93) ($generated@@79 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@68 $generated@@93 $generated@@94) ($generated@@79 $generated@@95 $generated@@96 $generated@@93))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (!  (=> ($generated@@68 $generated@@97 $generated@@98) (=> ($generated@@30 $generated@@101 $generated@@99 $generated@@100 $generated@@97) ($generated@@30 $generated@@101 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@68 $generated@@97 $generated@@98) ($generated@@30 $generated@@101 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@103)) $generated@@2) (= ($generated@@102 ($generated@@24 $generated@@103)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@104)) $generated@@3) (= ($generated@@102 ($generated@@32 $generated@@104)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@27 $generated@@31 $generated@@106 ($generated@@24 $generated@@105))  (or (= $generated@@106 $generated@@25) (= ($generated@@26 $generated@@106) ($generated@@24 $generated@@105))))
 :pattern ( ($generated@@27 $generated@@31 $generated@@106 ($generated@@24 $generated@@105)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (forall (($generated@@111 Int) ) (!  (=> (and (<= 0 $generated@@111) (< $generated@@111 ($generated@@39 ($generated@@107 $generated@@109 $generated@@110)))) (= ($generated@@108 ($generated@@107 $generated@@109 $generated@@110) $generated@@111) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@109 $generated@@110) ($generated@@77 $generated@@111))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@109 $generated@@110) ($generated@@77 $generated@@111)))
 :pattern ( ($generated@@108 ($generated@@107 $generated@@109 $generated@@110) $generated@@111))
))
 :pattern ( ($generated@@107 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@36 $generated@@112 $generated@@113) (exists (($generated@@114 Int) ) (!  (and (and (<= 0 $generated@@114) (< $generated@@114 ($generated@@39 $generated@@112))) (= ($generated@@108 $generated@@112 $generated@@114) $generated@@113))
 :pattern ( ($generated@@108 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@36 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or (not (= $generated@@115 $generated@@117)) (not true)) (=> (and ($generated@@68 $generated@@115 $generated@@116) ($generated@@68 $generated@@116 $generated@@117)) ($generated@@68 $generated@@115 $generated@@117)))
 :pattern ( ($generated@@68 $generated@@115 $generated@@116) ($generated@@68 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@118 $generated@@119 $generated) (and (= ($generated@@84 $generated@@7 ($generated@@40 $generated@@7 $generated@@119)) $generated@@119) ($generated@@27 $generated@@7 ($generated@@40 $generated@@7 $generated@@119) $generated)))
 :pattern ( ($generated@@118 $generated@@119 $generated))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@118 ($generated@@84 $generated@@122 $generated@@120) $generated@@121) ($generated@@27 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@118 ($generated@@84 $generated@@122 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@23 $generated@@123))
 :pattern ( ($generated@@23 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (<= 0 ($generated@@39 $generated@@124))
 :pattern ( ($generated@@39 $generated@@124))
)))
(assert (forall (($generated@@125 Int) ) (! (= ($generated@@21 ($generated@@77 $generated@@125)) 1)
 :pattern ( ($generated@@77 $generated@@125))
)))
(assert (forall (($generated@@127 Int) ) (! (= ($generated@@126 ($generated@@77 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@77 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@24 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@24 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@32 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@32 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@40 $generated@@133 ($generated@@84 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@84 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and ($generated@@78 $generated@@135) (and (or (not (= $generated@@136 $generated@@25)) (not true)) (= ($generated@@26 $generated@@136) ($generated@@24 $generated@@134)))) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@135 $generated@@136) $generated@@1)))) ($generated@@30 $generated@@7 ($generated@@11 ($generated@@23 $generated@@136)) $generated $generated@@135))
 :pattern ( ($generated@@23 $generated@@136) ($generated@@40 $generated@@6 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@135 $generated@@136) $generated@@1)) ($generated@@24 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Int) ) (!  (=> (and (and ($generated@@78 $generated@@138) (and (or (not (= $generated@@139 $generated@@25)) (not true)) (= ($generated@@26 $generated@@139) ($generated@@24 $generated@@137)))) (and (<= 0 $generated@@140) (< $generated@@140 ($generated@@23 $generated@@139)))) ($generated@@118 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@138 $generated@@139) ($generated@@77 $generated@@140)) $generated@@137))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@138 $generated@@139) ($generated@@77 $generated@@140)) ($generated@@24 $generated@@137))
)))
(assert  (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@141 $generated@@144 $generated@@145 $generated@@146 ($generated@@143 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@149 $generated@@150) $generated@@147)
 :weight 0
)) (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@141 $generated@@151 $generated@@152 $generated@@153 ($generated@@143 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@141 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@141 $generated@@160 $generated@@161 $generated@@162 ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@141 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@10 ($generated@@141 $generated@@31 $generated@@42 $generated@@6 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@141 $generated@@31 $generated@@42 $generated@@6 ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (and (and (and ($generated@@78 $generated@@175) ($generated@@78 $generated@@176)) ($generated@@68 $generated@@175 $generated@@176)) (= ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@175 $generated@@177) ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@176 $generated@@177))) (= ($generated@@107 $generated@@175 $generated@@177) ($generated@@107 $generated@@176 $generated@@177)))
 :pattern ( ($generated@@107 $generated@@176 $generated@@177) ($generated@@68 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@39 ($generated@@107 $generated@@178 $generated@@179)) ($generated@@23 $generated@@179))
 :pattern ( ($generated@@39 ($generated@@107 $generated@@178 $generated@@179)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@118 $generated@@181 ($generated@@24 $generated@@180)) (and (= ($generated@@84 $generated@@31 ($generated@@40 $generated@@31 $generated@@181)) $generated@@181) ($generated@@27 $generated@@31 ($generated@@40 $generated@@31 $generated@@181) ($generated@@24 $generated@@180))))
 :pattern ( ($generated@@118 $generated@@181 ($generated@@24 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@118 $generated@@183 ($generated@@32 $generated@@182)) (and (= ($generated@@84 $generated@@31 ($generated@@40 $generated@@31 $generated@@183)) $generated@@183) ($generated@@27 $generated@@31 ($generated@@40 $generated@@31 $generated@@183) ($generated@@32 $generated@@182))))
 :pattern ( ($generated@@118 $generated@@183 ($generated@@32 $generated@@182)))
)))
(assert (forall (($generated@@184 Int) ) (! (= ($generated@@84 $generated@@7 ($generated@@11 ($generated@@72 $generated@@184))) ($generated@@74 $generated@@43 ($generated@@84 $generated@@7 ($generated@@11 $generated@@184))))
 :pattern ( ($generated@@84 $generated@@7 ($generated@@11 ($generated@@72 $generated@@184))))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@T) ) (! (= ($generated@@84 $generated@@186 ($generated@@74 $generated@@186 $generated@@185)) ($generated@@74 $generated@@43 ($generated@@84 $generated@@186 $generated@@185)))
 :pattern ( ($generated@@84 $generated@@186 ($generated@@74 $generated@@186 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ) (!  (=> (= ($generated@@39 $generated@@187) 0) (= $generated@@187 $generated@@37))
 :pattern ( ($generated@@39 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! ($generated@@30 $generated@@7 $generated@@189 $generated $generated@@188)
 :pattern ( ($generated@@30 $generated@@7 $generated@@189 $generated $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@27 $generated@@7 $generated@@190 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () Int)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 () Int)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 27) (let (($generated@@206 true))
(let (($generated@@207  (=> (= $generated@@191 ($generated@@72 0)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (and (<= ($generated@@72 (- 0 2147483648)) $generated@@191) (< $generated@@191 2147483648))) (=> (and (<= ($generated@@72 (- 0 2147483648)) $generated@@191) (< $generated@@191 2147483648)) (=> (and (< $generated@@192 0) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@193 $generated@@25)) (not true))))))))
(let (($generated@@208  (=> (=> (<= ($generated@@72 0) $generated@@192) (and (< $generated@@192 ($generated@@23 $generated@@193)) (= ($generated@@12 ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@194 $generated@@193) ($generated@@77 $generated@@192)))) $generated@@195))) (and (=> (= (ControlFlow 0 12) 2) $generated@@207) (=> (= (ControlFlow 0 12) 4) $generated@@206)))))
(let (($generated@@209  (=> (= $generated@@196 ($generated@@72 0)) (and (=> (= (ControlFlow 0 5) (- 0 11)) (and (<= ($generated@@72 (- 0 2147483648)) $generated@@196) (< $generated@@196 2147483648))) (=> (and (<= ($generated@@72 (- 0 2147483648)) $generated@@196) (< $generated@@196 2147483648)) (=> (<= ($generated@@72 0) $generated@@192) (and (=> (= (ControlFlow 0 5) (- 0 10)) (or (not (= $generated@@193 $generated@@25)) (not true))) (=> (or (not (= $generated@@193 $generated@@25)) (not true)) (=> (= $generated@@197 ($generated@@23 $generated@@193)) (and (=> (= (ControlFlow 0 5) (- 0 9)) (and (<= ($generated@@72 (- 0 2147483648)) $generated@@197) (< $generated@@197 2147483648))) (=> (and (<= ($generated@@72 (- 0 2147483648)) $generated@@197) (< $generated@@197 2147483648)) (=> (= $generated@@198 ($generated@@23 $generated@@193)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and (<= ($generated@@72 (- 0 2147483648)) $generated@@198) (< $generated@@198 2147483648))) (=> (and (<= ($generated@@72 (- 0 2147483648)) $generated@@198) (< $generated@@198 2147483648)) (=> (< $generated@@192 ($generated@@23 $generated@@193)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (not (= $generated@@193 $generated@@25)) (not true))) (=> (or (not (= $generated@@193 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@23 $generated@@193)))) (=> (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@23 $generated@@193))) (=> (= ($generated@@12 ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@194 $generated@@193) ($generated@@77 $generated@@192)))) $generated@@195) (and (=> (= (ControlFlow 0 5) 2) $generated@@207) (=> (= (ControlFlow 0 5) 4) $generated@@206))))))))))))))))))))))
(let (($generated@@210  (=> (forall (($generated@@211 Int) ($generated@@212 Int) ) (!  (=> (and (and (<= ($generated@@72 0) $generated@@211) (< $generated@@211 $generated@@212)) (< $generated@@212 ($generated@@23 $generated@@193))) (<= ($generated@@12 ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@193) ($generated@@77 $generated@@211)))) ($generated@@12 ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@193) ($generated@@77 $generated@@212))))))
 :pattern ( ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@193) ($generated@@77 $generated@@212))) ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@193) ($generated@@77 $generated@@211))))
)) (=> (and ($generated@@78 $generated@@194) ($generated@@200 $generated@@194)) (=> (and (and (forall (($generated@@213 T@U) ) (!  (=> (and (or (not (= $generated@@213 $generated@@25)) (not true)) ($generated@@10 ($generated@@40 $generated@@6 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@213) $generated@@1)))) (= ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@194 $generated@@213) ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@213)))
 :pattern ( ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@194 $generated@@213))
)) ($generated@@68 $generated@@199 $generated@@194)) (and (<= ($generated@@72 (- 0 2147483648)) $generated@@192) (< $generated@@192 2147483648))) (and (=> (= (ControlFlow 0 13) 5) $generated@@209) (=> (= (ControlFlow 0 13) 12) $generated@@208)))))))
(let (($generated@@214  (=> (and (and (<= ($generated@@72 0) $generated@@201) (< $generated@@201 $generated@@202)) (< $generated@@202 ($generated@@23 $generated@@193))) (and (=> (= (ControlFlow 0 15) (- 0 19)) (or (not (= $generated@@193 $generated@@25)) (not true))) (=> (or (not (= $generated@@193 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 15) (- 0 18)) (and (<= 0 $generated@@201) (< $generated@@201 ($generated@@23 $generated@@193)))) (=> (and (<= 0 $generated@@201) (< $generated@@201 ($generated@@23 $generated@@193))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (or (not (= $generated@@193 $generated@@25)) (not true))) (=> (or (not (= $generated@@193 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 15) (- 0 16)) (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@23 $generated@@193)))) (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@23 $generated@@193))) (=> (and (<= ($generated@@12 ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@193) ($generated@@77 $generated@@201)))) ($generated@@12 ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@193) ($generated@@77 $generated@@202))))) (= (ControlFlow 0 15) 13)) $generated@@210))))))))))))
(let (($generated@@215  (=> (and (not (and (<= ($generated@@72 0) $generated@@201) (< $generated@@201 $generated@@202))) (= (ControlFlow 0 22) 15)) $generated@@214)))
(let (($generated@@216  (=> (and (<= ($generated@@72 0) $generated@@201) (< $generated@@201 $generated@@202)) (and (=> (= (ControlFlow 0 20) (- 0 21)) (or (not (= $generated@@193 $generated@@25)) (not true))) (=> (or (not (= $generated@@193 $generated@@25)) (not true)) (=> (= (ControlFlow 0 20) 15) $generated@@214))))))
(let (($generated@@217  (=> (< $generated@@201 ($generated@@72 0)) (and (=> (= (ControlFlow 0 24) 20) $generated@@216) (=> (= (ControlFlow 0 24) 22) $generated@@215)))))
(let (($generated@@218  (=> (<= ($generated@@72 0) $generated@@201) (and (=> (= (ControlFlow 0 23) 20) $generated@@216) (=> (= (ControlFlow 0 23) 22) $generated@@215)))))
(let (($generated@@219  (=> (and (=> (and (and (<= ($generated@@72 0) $generated@@201) (< $generated@@201 $generated@@202)) (< $generated@@202 ($generated@@23 $generated@@193))) (<= ($generated@@12 ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@193) ($generated@@77 $generated@@201)))) ($generated@@12 ($generated@@40 $generated@@7 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@31 ($generated@@44 $generated@@42 $generated@@43) $generated@@199 $generated@@193) ($generated@@77 $generated@@202)))))) (= (ControlFlow 0 14) 13)) $generated@@210)))
(let (($generated@@220  (=> (= $generated@@203 ($generated@@142 $generated@@25 $generated@@199 $generated@@1 false)) (and (=> (= (ControlFlow 0 25) (- 0 26)) (or (not (= $generated@@193 $generated@@25)) (not true))) (=> (or (not (= $generated@@193 $generated@@25)) (not true)) (=> (< ($generated@@23 $generated@@193) 2147483648) (and (and (=> (= (ControlFlow 0 25) 14) $generated@@219) (=> (= (ControlFlow 0 25) 23) $generated@@218)) (=> (= (ControlFlow 0 25) 24) $generated@@217))))))))
(let (($generated@@221  (=> (and (and (and ($generated@@78 $generated@@199) ($generated@@200 $generated@@199)) (and ($generated@@27 $generated@@31 $generated@@193 ($generated@@32 $generated)) ($generated@@30 $generated@@31 $generated@@193 ($generated@@32 $generated) $generated@@199))) (and (and (<= ($generated@@72 (- 0 2147483648)) $generated@@204) (< $generated@@204 2147483648)) (and (= 1 $generated@@205) (= (ControlFlow 0 27) 25)))) $generated@@220)))
$generated@@221))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
