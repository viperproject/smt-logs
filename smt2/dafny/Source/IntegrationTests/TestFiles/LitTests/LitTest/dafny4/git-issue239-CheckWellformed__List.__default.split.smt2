(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Bool)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@51 (T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@86 () Int)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@129 (T@U) Int)
(declare-fun $generated@@130 (T@U) Int)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@25) 3))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@29 ($generated@@26 $generated@@27 $generated@@28)) ($generated@@23 $generated@@29))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@25 $generated@@29 ($generated@@26 $generated@@27 $generated@@28)))
)))
(assert (= ($generated@@30 $generated@@31) $generated@@3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@34 $generated@@36) ($generated@@32 $generated@@25 $generated@@31 ($generated@@33 $generated@@35) $generated@@36))
 :pattern ( ($generated@@32 $generated@@25 $generated@@31 ($generated@@33 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@37 $generated@@41 $generated@@42) ($generated@@26 $generated@@39 $generated@@40))  (and ($generated@@38 $generated@@41 $generated@@39) ($generated@@38 $generated@@42 $generated@@40)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@37 $generated@@41 $generated@@42) ($generated@@26 $generated@@39 $generated@@40)))
)))
(assert (forall (($generated@@43 T@U) ) (! ($generated@@24 $generated@@25 $generated@@31 ($generated@@33 $generated@@43))
 :pattern ( ($generated@@24 $generated@@25 $generated@@31 ($generated@@33 $generated@@43)))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@47 $generated@@49 $generated@@50) ($generated@@33 $generated@@48))  (and ($generated@@38 $generated@@49 $generated@@48) ($generated@@24 $generated@@25 $generated@@50 ($generated@@33 $generated@@48))))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@47 $generated@@49 $generated@@50) ($generated@@33 $generated@@48)))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@34 $generated@@56) (= ($generated@@32 $generated@@25 ($generated@@37 $generated@@54 $generated@@55) ($generated@@26 $generated@@52 $generated@@53) $generated@@56)  (and ($generated@@51 $generated@@54 $generated@@52 $generated@@56) ($generated@@51 $generated@@55 $generated@@53 $generated@@56))))
 :pattern ( ($generated@@32 $generated@@25 ($generated@@37 $generated@@54 $generated@@55) ($generated@@26 $generated@@52 $generated@@53) $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@23 $generated@@57) (= ($generated@@30 $generated@@57) $generated@@0))
 :pattern ( ($generated@@23 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@30 $generated@@59) $generated@@3))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@30 $generated@@61) $generated@@4))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@62 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@62 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@23 $generated@@66) (exists (($generated@@67 T@U) ($generated@@68 T@U) ) (= $generated@@66 ($generated@@37 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@23 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@60 $generated@@69) (exists (($generated@@70 T@U) ($generated@@71 T@U) ) (= $generated@@69 ($generated@@47 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@60 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@58 $generated@@72) (= $generated@@72 $generated@@31))
 :pattern ( ($generated@@58 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@51 ($generated@@63 $generated@@76 $generated@@73) $generated@@74 $generated@@75) ($generated@@32 $generated@@76 $generated@@73 $generated@@74 $generated@@75))
 :pattern ( ($generated@@51 ($generated@@63 $generated@@76 $generated@@73) $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@79 T@U) ) (!  (and (= ($generated@@77 ($generated@@33 $generated@@79)) $generated@@2) (= ($generated@@78 ($generated@@33 $generated@@79)) $generated@@6))
 :pattern ( ($generated@@33 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@80 $generated@@82 $generated@@83 ($generated@@81 $generated@@84) $generated@@85) ($generated@@80 $generated@@82 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@80 $generated@@82 $generated@@83 ($generated@@81 $generated@@84) $generated@@85))
)))
(assert  (=> (<= 1 $generated@@86) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@87 $generated@@92 $generated@@93 $generated@@95) (and (< 1 $generated@@86) ($generated@@24 $generated@@25 $generated@@95 ($generated@@33 ($generated@@26 $generated@@92 $generated@@93))))) (and (=> (not ($generated@@58 $generated@@95)) (let (($generated@@96 ($generated@@88 $generated@@95)))
 (and ($generated@@23 ($generated@@62 $generated@@25 ($generated@@89 $generated@@95))) (and ($generated@@23 ($generated@@62 $generated@@25 ($generated@@89 $generated@@95))) ($generated@@87 $generated@@92 $generated@@93 $generated@@96))))) (= ($generated@@80 $generated@@92 $generated@@93 ($generated@@81 $generated@@94) $generated@@95) (ite ($generated@@58 $generated@@95) ($generated@@37 ($generated@@63 $generated@@25 ($generated@@44 $generated@@25 $generated@@31)) ($generated@@63 $generated@@25 ($generated@@44 $generated@@25 $generated@@31))) (let (($generated@@97 ($generated@@88 $generated@@95)))
(let (($generated@@98 ($generated@@90 ($generated@@62 $generated@@25 ($generated@@89 $generated@@95)))))
(let (($generated@@99 ($generated@@91 ($generated@@62 $generated@@25 ($generated@@89 $generated@@95)))))
(let (($generated@@100 ($generated@@62 $generated@@25 ($generated@@90 ($generated@@80 $generated@@92 $generated@@93 $generated@@94 $generated@@97)))))
(let (($generated@@101 ($generated@@62 $generated@@25 ($generated@@91 ($generated@@80 $generated@@92 $generated@@93 $generated@@94 $generated@@97)))))
($generated@@37 ($generated@@63 $generated@@25 ($generated@@47 $generated@@99 $generated@@101)) ($generated@@63 $generated@@25 ($generated@@47 $generated@@98 $generated@@100))))))))))))
 :pattern ( ($generated@@80 $generated@@92 $generated@@93 ($generated@@81 $generated@@94) $generated@@95))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@103 ($generated@@33 $generated@@102)) (or ($generated@@58 $generated@@103) ($generated@@60 $generated@@103)))
 :pattern ( ($generated@@60 $generated@@103) ($generated@@24 $generated@@25 $generated@@103 ($generated@@33 $generated@@102)))
 :pattern ( ($generated@@58 $generated@@103) ($generated@@24 $generated@@25 $generated@@103 ($generated@@33 $generated@@102)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@38 ($generated@@63 $generated@@106 $generated@@104) $generated@@105) ($generated@@24 $generated@@106 $generated@@104 $generated@@105))
 :pattern ( ($generated@@38 ($generated@@63 $generated@@106 $generated@@104) $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@30 ($generated@@37 $generated@@107 $generated@@108)) $generated@@0)
 :pattern ( ($generated@@37 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@26 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@26 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@26 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@26 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@91 ($generated@@37 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@37 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@90 ($generated@@37 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@37 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@30 ($generated@@47 $generated@@119 $generated@@120)) $generated@@4)
 :pattern ( ($generated@@47 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@89 ($generated@@47 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@47 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@88 ($generated@@47 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@47 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@33 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@33 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@62 $generated@@128 ($generated@@63 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@63 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@129 $generated@@131) ($generated@@130 ($generated@@37 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@37 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (< ($generated@@129 $generated@@134) ($generated@@130 ($generated@@37 $generated@@133 $generated@@134)))
 :pattern ( ($generated@@37 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (< ($generated@@129 $generated@@135) ($generated@@130 ($generated@@47 $generated@@135 $generated@@136)))
 :pattern ( ($generated@@47 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (< ($generated@@130 $generated@@138) ($generated@@130 ($generated@@47 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@47 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@38 $generated@@141 ($generated@@26 $generated@@139 $generated@@140)) (and (= ($generated@@63 $generated@@25 ($generated@@62 $generated@@25 $generated@@141)) $generated@@141) ($generated@@24 $generated@@25 ($generated@@62 $generated@@25 $generated@@141) ($generated@@26 $generated@@139 $generated@@140))))
 :pattern ( ($generated@@38 $generated@@141 ($generated@@26 $generated@@139 $generated@@140)))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and ($generated@@34 $generated@@144) (and ($generated@@60 $generated@@142) ($generated@@32 $generated@@25 $generated@@142 ($generated@@33 $generated@@143) $generated@@144))) ($generated@@51 ($generated@@89 $generated@@142) $generated@@143 $generated@@144))
 :pattern ( ($generated@@51 ($generated@@89 $generated@@142) $generated@@143 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@145 $generated@@156 $generated@@157 $generated@@158 ($generated@@152 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@145 $generated@@163 $generated@@164 $generated@@165 ($generated@@152 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@145 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@145 $generated@@172 $generated@@173 $generated@@174 ($generated@@152 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (= ($generated@@7 $generated@@146) 4)) (= ($generated@@7 $generated@@147) 5)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@149 $generated@@181 $generated@@182 ($generated@@153 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@183) $generated@@185) $generated@@183)
 :weight 0
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@190 $generated@@191) (= ($generated@@149 $generated@@186 $generated@@187 ($generated@@153 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@188) $generated@@191) ($generated@@149 $generated@@186 $generated@@187 $generated@@189 $generated@@191)))
 :weight 0
))) (= ($generated@@7 $generated@@150) 6)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@7 ($generated@@151 $generated@@192 $generated@@193)) 7))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@154 ($generated@@151 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@151 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@155 ($generated@@151 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@151 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@12 ($generated@@145 $generated@@146 $generated@@147 $generated@@8 ($generated@@148 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (or (not (= $generated@@202 $generated@@198)) (not true)) ($generated@@12 ($generated@@62 $generated@@8 ($generated@@149 $generated@@147 $generated@@150 ($generated@@149 $generated@@146 ($generated@@151 $generated@@147 $generated@@150) $generated@@199 $generated@@202) $generated@@200)))) $generated@@201))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147 $generated@@8 ($generated@@148 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (and (= ($generated@@77 ($generated@@26 $generated@@204 $generated@@205)) $generated@@1) (= ($generated@@78 ($generated@@26 $generated@@204 $generated@@205)) $generated@@5))
 :pattern ( ($generated@@26 $generated@@204 $generated@@205))
)))
(assert  (=> (<= 1 $generated@@86) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (or ($generated@@87 $generated@@206 $generated@@207 $generated@@209) (and (< 1 $generated@@86) ($generated@@24 $generated@@25 $generated@@209 ($generated@@33 ($generated@@26 $generated@@206 $generated@@207))))) ($generated@@24 $generated@@25 ($generated@@80 $generated@@206 $generated@@207 $generated@@208 $generated@@209) ($generated@@26 ($generated@@33 $generated@@206) ($generated@@33 $generated@@207))))
 :pattern ( ($generated@@80 $generated@@206 $generated@@207 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@210 T@U) ) (! (= ($generated@@129 ($generated@@63 $generated@@25 $generated@@210)) ($generated@@130 $generated@@210))
 :pattern ( ($generated@@129 ($generated@@63 $generated@@25 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> ($generated@@38 $generated@@212 ($generated@@33 $generated@@211)) (and (= ($generated@@63 $generated@@25 ($generated@@62 $generated@@25 $generated@@212)) $generated@@212) ($generated@@24 $generated@@25 ($generated@@62 $generated@@25 $generated@@212) ($generated@@33 $generated@@211))))
 :pattern ( ($generated@@38 $generated@@212 ($generated@@33 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@34 $generated@@215) (and ($generated@@60 $generated@@213) ($generated@@32 $generated@@25 $generated@@213 ($generated@@33 $generated@@214) $generated@@215))) ($generated@@32 $generated@@25 ($generated@@88 $generated@@213) ($generated@@33 $generated@@214) $generated@@215))
 :pattern ( ($generated@@32 $generated@@25 ($generated@@88 $generated@@213) ($generated@@33 $generated@@214) $generated@@215))
)))
(assert (= $generated@@31 ($generated@@44 $generated@@25 $generated@@31)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and ($generated@@34 $generated@@218) (and ($generated@@23 $generated@@216) (exists (($generated@@219 T@U) ) (! ($generated@@32 $generated@@25 $generated@@216 ($generated@@26 $generated@@217 $generated@@219) $generated@@218)
 :pattern ( ($generated@@32 $generated@@25 $generated@@216 ($generated@@26 $generated@@217 $generated@@219) $generated@@218))
)))) ($generated@@51 ($generated@@91 $generated@@216) $generated@@217 $generated@@218))
 :pattern ( ($generated@@51 ($generated@@91 $generated@@216) $generated@@217 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@34 $generated@@222) (and ($generated@@23 $generated@@220) (exists (($generated@@223 T@U) ) (! ($generated@@32 $generated@@25 $generated@@220 ($generated@@26 $generated@@223 $generated@@221) $generated@@222)
 :pattern ( ($generated@@32 $generated@@25 $generated@@220 ($generated@@26 $generated@@223 $generated@@221) $generated@@222))
)))) ($generated@@51 ($generated@@90 $generated@@220) $generated@@221 $generated@@222))
 :pattern ( ($generated@@51 ($generated@@90 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@37 ($generated@@44 $generated@@150 $generated@@224) ($generated@@44 $generated@@150 $generated@@225)) ($generated@@44 $generated@@25 ($generated@@37 $generated@@224 $generated@@225)))
 :pattern ( ($generated@@37 ($generated@@44 $generated@@150 $generated@@224) ($generated@@44 $generated@@150 $generated@@225)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! (= ($generated@@47 ($generated@@44 $generated@@150 $generated@@226) ($generated@@44 $generated@@25 $generated@@227)) ($generated@@44 $generated@@25 ($generated@@47 $generated@@226 $generated@@227)))
 :pattern ( ($generated@@47 ($generated@@44 $generated@@150 $generated@@226) ($generated@@44 $generated@@25 $generated@@227)))
)))
(assert  (=> (<= 1 $generated@@86) (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (or ($generated@@87 $generated@@228 $generated@@229 ($generated@@44 $generated@@25 $generated@@231)) (and (< 1 $generated@@86) ($generated@@24 $generated@@25 $generated@@231 ($generated@@33 ($generated@@26 $generated@@228 $generated@@229))))) (and (=> (not ($generated@@12 ($generated@@44 $generated@@8 ($generated@@11 ($generated@@58 ($generated@@44 $generated@@25 $generated@@231)))))) (let (($generated@@232 ($generated@@44 $generated@@25 ($generated@@88 ($generated@@44 $generated@@25 $generated@@231)))))
 (and ($generated@@23 ($generated@@44 $generated@@25 ($generated@@62 $generated@@25 ($generated@@89 ($generated@@44 $generated@@25 $generated@@231))))) (and ($generated@@23 ($generated@@44 $generated@@25 ($generated@@62 $generated@@25 ($generated@@89 ($generated@@44 $generated@@25 $generated@@231))))) ($generated@@87 $generated@@228 $generated@@229 $generated@@232))))) (= ($generated@@80 $generated@@228 $generated@@229 ($generated@@81 $generated@@230) ($generated@@44 $generated@@25 $generated@@231)) (ite ($generated@@58 ($generated@@44 $generated@@25 $generated@@231)) ($generated@@37 ($generated@@63 $generated@@25 ($generated@@44 $generated@@25 $generated@@31)) ($generated@@63 $generated@@25 ($generated@@44 $generated@@25 $generated@@31))) (let (($generated@@233 ($generated@@44 $generated@@25 ($generated@@88 ($generated@@44 $generated@@25 $generated@@231)))))
(let (($generated@@234 ($generated@@44 $generated@@150 ($generated@@90 ($generated@@44 $generated@@25 ($generated@@62 $generated@@25 ($generated@@89 ($generated@@44 $generated@@25 $generated@@231))))))))
(let (($generated@@235 ($generated@@44 $generated@@150 ($generated@@91 ($generated@@44 $generated@@25 ($generated@@62 $generated@@25 ($generated@@89 ($generated@@44 $generated@@25 $generated@@231))))))))
(let (($generated@@236 ($generated@@62 $generated@@25 ($generated@@90 ($generated@@44 $generated@@25 ($generated@@80 $generated@@228 $generated@@229 ($generated@@81 $generated@@230) $generated@@233))))))
(let (($generated@@237 ($generated@@62 $generated@@25 ($generated@@91 ($generated@@44 $generated@@25 ($generated@@80 $generated@@228 $generated@@229 ($generated@@81 $generated@@230) $generated@@233))))))
($generated@@37 ($generated@@63 $generated@@25 ($generated@@47 $generated@@235 $generated@@237)) ($generated@@63 $generated@@25 ($generated@@47 $generated@@234 $generated@@236))))))))))))
 :weight 3
 :pattern ( ($generated@@80 $generated@@228 $generated@@229 ($generated@@81 $generated@@230) ($generated@@44 $generated@@25 $generated@@231)))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@T) ) (! (= ($generated@@63 $generated@@239 ($generated@@44 $generated@@239 $generated@@238)) ($generated@@44 $generated@@150 ($generated@@63 $generated@@239 $generated@@238)))
 :pattern ( ($generated@@63 $generated@@239 ($generated@@44 $generated@@239 $generated@@238)))
)))
(assert  (=> (<= 1 $generated@@86) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> (and (or ($generated@@87 $generated@@241 $generated@@242 $generated@@244) (and (< 1 $generated@@86) (and ($generated@@24 $generated@@25 $generated@@244 ($generated@@33 ($generated@@26 $generated@@241 $generated@@242))) ($generated@@32 $generated@@25 $generated@@244 ($generated@@33 ($generated@@26 $generated@@241 $generated@@242)) $generated@@240)))) ($generated@@34 $generated@@240)) ($generated@@32 $generated@@25 ($generated@@80 $generated@@241 $generated@@242 $generated@@243 $generated@@244) ($generated@@26 ($generated@@33 $generated@@241) ($generated@@33 $generated@@242)) $generated@@240))
 :pattern ( ($generated@@32 $generated@@25 ($generated@@80 $generated@@241 $generated@@242 $generated@@243 $generated@@244) ($generated@@26 ($generated@@33 $generated@@241) ($generated@@33 $generated@@242)) $generated@@240))
))))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (=> ($generated@@34 $generated@@248) (= ($generated@@32 $generated@@25 ($generated@@47 $generated@@246 $generated@@247) ($generated@@33 $generated@@245) $generated@@248)  (and ($generated@@51 $generated@@246 $generated@@245 $generated@@248) ($generated@@32 $generated@@25 $generated@@247 ($generated@@33 $generated@@245) $generated@@248))))
 :pattern ( ($generated@@32 $generated@@25 ($generated@@47 $generated@@246 $generated@@247) ($generated@@33 $generated@@245) $generated@@248))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@266 true))
(let (($generated@@267  (=> (and (= $generated@@249 ($generated@@37 $generated@@250 $generated@@251)) ($generated@@38 $generated@@250 $generated@@252)) (=> (and (and ($generated@@38 $generated@@251 $generated@@253) (= $generated@@254 $generated@@255)) (and ($generated@@24 $generated@@25 $generated@@254 ($generated@@33 ($generated@@26 $generated@@252 $generated@@253))) (= $generated@@256 $generated@@254))) (=> (and (and (and (= $generated@@257 $generated@@251) ($generated@@38 $generated@@257 $generated@@253)) (and (= $generated@@258 $generated@@257) (= $generated@@259 $generated@@250))) (and (and ($generated@@38 $generated@@259 $generated@@252) (= $generated@@260 $generated@@259)) (and ($generated@@32 $generated@@25 $generated@@256 ($generated@@33 ($generated@@26 $generated@@252 $generated@@253)) $generated@@261) (= (ControlFlow 0 5) (- 0 4))))) (< ($generated@@130 $generated@@256) ($generated@@130 $generated@@262)))))))
(let (($generated@@268  (=> (= $generated@@262 ($generated@@47 ($generated@@63 $generated@@25 $generated@@249) $generated@@255)) (=> (and ($generated@@24 $generated@@25 $generated@@249 ($generated@@26 $generated@@252 $generated@@253)) ($generated@@24 $generated@@25 $generated@@255 ($generated@@33 ($generated@@26 $generated@@252 $generated@@253)))) (and (=> (= (ControlFlow 0 7) 5) $generated@@267) (=> (= (ControlFlow 0 7) 6) $generated@@266))))))
(let (($generated@@269 true))
(let (($generated@@270  (=> (or (not (= $generated@@262 $generated@@31)) (not true)) (and (=> (= (ControlFlow 0 8) 7) $generated@@268) (=> (= (ControlFlow 0 8) 3) $generated@@269)))))
(let (($generated@@271 true))
(let (($generated@@272 true))
(let (($generated@@273  (=> (= $generated@@263 ($generated@@148 $generated@@264 $generated@@261 $generated false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@272) (=> (= (ControlFlow 0 9) 2) $generated@@271)) (=> (= (ControlFlow 0 9) 8) $generated@@270)))))
(let (($generated@@274  (=> (and (and (and ($generated@@34 $generated@@261) ($generated@@265 $generated@@261)) ($generated@@24 $generated@@25 $generated@@262 ($generated@@33 ($generated@@26 $generated@@252 $generated@@253)))) (and (= 1 $generated@@86) (= (ControlFlow 0 10) 9))) $generated@@273)))
$generated@@274))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
