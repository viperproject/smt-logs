(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U Int T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (Int T@U T@U) Bool)
(declare-fun $generated@@27 (Int) Int)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@102 () T@U)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@115 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@121 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@7 $generated@@29) 3))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@35 T@U) ($generated@@36 Int) ($generated@@37 T@U) ($generated@@38 T@U) ) (!  (=> (or ($generated@@26 $generated@@36 $generated@@37 $generated@@38) (and (< 1 $generated@@23) (and (and (<= ($generated@@27 0) $generated@@36) ($generated@@28 $generated@@29 $generated@@37 ($generated@@30 $generated))) ($generated@@28 $generated@@29 $generated@@38 ($generated@@30 $generated))))) (and (=> (or (not (= $generated@@36 ($generated@@27 0))) (not true)) (and (and ($generated@@31 $generated@@37) ($generated@@31 $generated@@38)) (=> (<= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@37))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@38)))) (and (and ($generated@@31 $generated@@37) ($generated@@31 $generated@@38)) (=> (= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@37))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@38)))) (and (and ($generated@@31 $generated@@37) ($generated@@31 $generated@@38)) ($generated@@26 (- $generated@@36 1) ($generated@@34 $generated@@37) ($generated@@34 $generated@@38)))))))) (= ($generated@@24 ($generated@@25 $generated@@35) $generated@@36 $generated@@37 $generated@@38) (ite (= $generated@@36 ($generated@@27 0)) false  (or (not (<= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@37))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@38))))) (and (= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@37))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@38)))) ($generated@@24 $generated@@35 (- $generated@@36 1) ($generated@@34 $generated@@37) ($generated@@34 $generated@@38))))))))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@35) $generated@@36 $generated@@37 $generated@@38))
))))
(assert (= ($generated@@39 $generated) $generated@@0))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! ($generated@@40 $generated@@9 $generated@@42 $generated@@41 $generated@@43)
 :pattern ( ($generated@@40 $generated@@9 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@44 $generated@@45) ($generated@@31 $generated@@45))
 :pattern ( ($generated@@44 $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@47 ($generated@@30 $generated@@46)) ($generated@@31 $generated@@47))
 :pattern ( ($generated@@31 $generated@@47) ($generated@@28 $generated@@29 $generated@@47 ($generated@@30 $generated@@46)))
)))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@27 $generated@@48) $generated@@48)
 :pattern ( ($generated@@27 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@52 $generated@@55 $generated@@56) ($generated@@30 $generated@@54))  (and ($generated@@53 $generated@@55 $generated@@54) ($generated@@28 $generated@@29 $generated@@56 ($generated@@30 $generated@@54))))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@52 $generated@@55 $generated@@56) ($generated@@30 $generated@@54)))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@31 $generated@@58) (= ($generated@@57 $generated@@58) $generated@@4))
 :pattern ( ($generated@@31 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 ($generated@@32 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@32 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@31 $generated@@62) (exists (($generated@@63 T@U) ($generated@@64 T@U) ) (= $generated@@62 ($generated@@52 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@31 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@28 $generated@@9 $generated@@65 $generated@@41) (<= ($generated@@27 0) ($generated@@14 $generated@@65)))
 :pattern ( ($generated@@28 $generated@@9 $generated@@65 $generated@@41))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@66 ($generated@@59 $generated@@70 $generated@@67) $generated@@68 $generated@@69) ($generated@@40 $generated@@70 $generated@@67 $generated@@68 $generated@@69))
 :pattern ( ($generated@@66 ($generated@@59 $generated@@70 $generated@@67) $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ) (!  (and (= ($generated@@39 ($generated@@30 $generated@@72)) $generated@@3) (= ($generated@@71 ($generated@@30 $generated@@72)) $generated@@6))
 :pattern ( ($generated@@30 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@53 $generated@@73 $generated@@41) (and (= ($generated@@59 $generated@@9 ($generated@@32 $generated@@9 $generated@@73)) $generated@@73) ($generated@@28 $generated@@9 ($generated@@32 $generated@@9 $generated@@73) $generated@@41)))
 :pattern ( ($generated@@53 $generated@@73 $generated@@41))
)))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@74 T@U) ($generated@@75 Int) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (or ($generated@@26 ($generated@@27 $generated@@75) ($generated@@49 $generated@@29 $generated@@76) ($generated@@49 $generated@@29 $generated@@77)) (and (< 1 $generated@@23) (and (and (<= ($generated@@27 0) $generated@@75) ($generated@@28 $generated@@29 $generated@@76 ($generated@@30 $generated))) ($generated@@28 $generated@@29 $generated@@77 ($generated@@30 $generated))))) (and (=> (or (not (= ($generated@@27 $generated@@75) ($generated@@27 0))) (not true)) (and (and ($generated@@31 ($generated@@49 $generated@@29 $generated@@76)) ($generated@@31 ($generated@@49 $generated@@29 $generated@@77))) (=> (<= ($generated@@27 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@49 $generated@@29 $generated@@76))))) ($generated@@27 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@49 $generated@@29 $generated@@77)))))) (and (and ($generated@@31 ($generated@@49 $generated@@29 $generated@@76)) ($generated@@31 ($generated@@49 $generated@@29 $generated@@77))) (=> (= ($generated@@27 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@49 $generated@@29 $generated@@76))))) ($generated@@27 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@49 $generated@@29 $generated@@77)))))) (and (and ($generated@@31 ($generated@@49 $generated@@29 $generated@@76)) ($generated@@31 ($generated@@49 $generated@@29 $generated@@77))) ($generated@@26 ($generated@@27 (- $generated@@75 1)) ($generated@@49 $generated@@29 ($generated@@34 ($generated@@49 $generated@@29 $generated@@76))) ($generated@@49 $generated@@29 ($generated@@34 ($generated@@49 $generated@@29 $generated@@77)))))))))) (= ($generated@@24 ($generated@@25 $generated@@74) ($generated@@27 $generated@@75) ($generated@@49 $generated@@29 $generated@@76) ($generated@@49 $generated@@29 $generated@@77)) (ite (= ($generated@@27 $generated@@75) ($generated@@27 0)) false  (or (not (<= ($generated@@27 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@49 $generated@@29 $generated@@76))))) ($generated@@27 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@49 $generated@@29 $generated@@77))))))) (and (= ($generated@@27 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@49 $generated@@29 $generated@@76))))) ($generated@@27 ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 ($generated@@49 $generated@@29 $generated@@77)))))) ($generated@@24 ($generated@@25 $generated@@74) ($generated@@27 (- $generated@@75 1)) ($generated@@49 $generated@@29 ($generated@@34 ($generated@@49 $generated@@29 $generated@@76))) ($generated@@49 $generated@@29 ($generated@@34 ($generated@@49 $generated@@29 $generated@@77))))))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@25 $generated@@74) ($generated@@27 $generated@@75) ($generated@@49 $generated@@29 $generated@@76) ($generated@@49 $generated@@29 $generated@@77)))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@78 T@U) ($generated@@79 Int) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@26 ($generated@@27 $generated@@79) $generated@@80 $generated@@81) (and (< 1 $generated@@23) (and (and (<= ($generated@@27 0) $generated@@79) ($generated@@28 $generated@@29 $generated@@80 ($generated@@30 $generated))) ($generated@@28 $generated@@29 $generated@@81 ($generated@@30 $generated))))) (and (=> (or (not (= ($generated@@27 $generated@@79) ($generated@@27 0))) (not true)) (and (and ($generated@@31 $generated@@80) ($generated@@31 $generated@@81)) (=> (<= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@80))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@81)))) (and (and ($generated@@31 $generated@@80) ($generated@@31 $generated@@81)) (=> (= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@80))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@81)))) (and (and ($generated@@31 $generated@@80) ($generated@@31 $generated@@81)) ($generated@@26 ($generated@@27 (- $generated@@79 1)) ($generated@@34 $generated@@80) ($generated@@34 $generated@@81)))))))) (= ($generated@@24 ($generated@@25 $generated@@78) ($generated@@27 $generated@@79) $generated@@80 $generated@@81) (ite (= ($generated@@27 $generated@@79) ($generated@@27 0)) false  (or (not (<= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@80))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@81))))) (and (= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@80))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@81)))) ($generated@@24 ($generated@@25 $generated@@78) ($generated@@27 (- $generated@@79 1)) ($generated@@34 $generated@@80) ($generated@@34 $generated@@81))))))))
 :weight 3
 :pattern ( ($generated@@24 ($generated@@25 $generated@@78) ($generated@@27 $generated@@79) $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@53 $generated@@82 $generated) (and (= ($generated@@59 $generated@@9 ($generated@@32 $generated@@9 $generated@@82)) $generated@@82) ($generated@@28 $generated@@9 ($generated@@32 $generated@@9 $generated@@82) $generated)))
 :pattern ( ($generated@@53 $generated@@82 $generated))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@53 ($generated@@59 $generated@@85 $generated@@83) $generated@@84) ($generated@@28 $generated@@85 $generated@@83 $generated@@84))
 :pattern ( ($generated@@53 ($generated@@59 $generated@@85 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@86) $generated@@87 $generated@@88 $generated@@89) ($generated@@24 $generated@@86 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@86) $generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@57 ($generated@@52 $generated@@90 $generated@@91)) $generated@@4)
 :pattern ( ($generated@@52 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@33 ($generated@@52 $generated@@92 $generated@@93)) $generated@@92)
 :pattern ( ($generated@@52 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@34 ($generated@@52 $generated@@94 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@52 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@30 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@30 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@32 $generated@@99 ($generated@@59 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@59 $generated@@99 $generated@@98))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@101 ($generated@@49 $generated@@29 $generated@@103) ($generated@@49 $generated@@29 $generated@@104)) (and (< 2 $generated@@23) (and ($generated@@28 $generated@@29 $generated@@103 ($generated@@30 $generated)) ($generated@@28 $generated@@29 $generated@@104 ($generated@@30 $generated))))) (and (forall (($generated@@105 Int) ) (!  (=> (<= ($generated@@27 0) $generated@@105) ($generated@@26 $generated@@105 ($generated@@49 $generated@@29 $generated@@103) ($generated@@49 $generated@@29 $generated@@104)))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@102) $generated@@105 $generated@@103 $generated@@104))
)) (= ($generated@@100 ($generated@@49 $generated@@29 $generated@@103) ($generated@@49 $generated@@29 $generated@@104)) (exists (($generated@@106 Int) ) (!  (and (<= ($generated@@27 0) $generated@@106) ($generated@@24 ($generated@@25 $generated@@102) $generated@@106 ($generated@@49 $generated@@29 $generated@@103) ($generated@@49 $generated@@29 $generated@@104)))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@102) $generated@@106 $generated@@103 $generated@@104))
)))))
 :weight 3
 :pattern ( ($generated@@100 ($generated@@49 $generated@@29 $generated@@103) ($generated@@49 $generated@@29 $generated@@104)))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and ($generated@@107 $generated@@110) (and ($generated@@31 $generated@@108) ($generated@@40 $generated@@29 $generated@@108 ($generated@@30 $generated@@109) $generated@@110))) ($generated@@66 ($generated@@33 $generated@@108) $generated@@109 $generated@@110))
 :pattern ( ($generated@@66 ($generated@@33 $generated@@108) $generated@@109 $generated@@110))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@111 $generated@@122 $generated@@123 $generated@@124 ($generated@@118 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@111 $generated@@129 $generated@@130 $generated@@131 ($generated@@118 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@111 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@111 $generated@@138 $generated@@139 $generated@@140 ($generated@@118 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@111 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))) (= ($generated@@7 $generated@@112) 4)) (= ($generated@@7 $generated@@113) 5)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@115 $generated@@147 $generated@@148 ($generated@@119 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@149) $generated@@151) $generated@@149)
 :weight 0
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@156 $generated@@157) (= ($generated@@115 $generated@@152 $generated@@153 ($generated@@119 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@157) ($generated@@115 $generated@@152 $generated@@153 $generated@@155 $generated@@157)))
 :weight 0
))) (= ($generated@@7 $generated@@116) 6)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ) (= ($generated@@7 ($generated@@117 $generated@@158 $generated@@159)) 7))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@160 $generated@@161)) $generated@@160)
 :pattern ( ($generated@@117 $generated@@160 $generated@@161))
))) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (! (= ($generated@@121 ($generated@@117 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@117 $generated@@162 $generated@@163))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@12 ($generated@@111 $generated@@112 $generated@@113 $generated@@8 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@12 ($generated@@32 $generated@@8 ($generated@@115 $generated@@113 $generated@@116 ($generated@@115 $generated@@112 ($generated@@117 $generated@@113 $generated@@116) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@111 $generated@@112 $generated@@113 $generated@@8 ($generated@@114 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@53 $generated@@171 ($generated@@30 $generated@@170)) (and (= ($generated@@59 $generated@@29 ($generated@@32 $generated@@29 $generated@@171)) $generated@@171) ($generated@@28 $generated@@29 ($generated@@32 $generated@@29 $generated@@171) ($generated@@30 $generated@@170))))
 :pattern ( ($generated@@53 $generated@@171 ($generated@@30 $generated@@170)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@107 $generated@@174) (and ($generated@@31 $generated@@172) ($generated@@40 $generated@@29 $generated@@172 ($generated@@30 $generated@@173) $generated@@174))) ($generated@@40 $generated@@29 ($generated@@34 $generated@@172) ($generated@@30 $generated@@173) $generated@@174))
 :pattern ( ($generated@@40 $generated@@29 ($generated@@34 $generated@@172) ($generated@@30 $generated@@173) $generated@@174))
)))
(assert (= ($generated@@39 $generated@@41) $generated@@2))
(assert (= ($generated@@71 $generated@@41) $generated@@5))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (or ($generated@@101 $generated@@175 $generated@@176) (and (< 2 $generated@@23) (and ($generated@@28 $generated@@29 $generated@@175 ($generated@@30 $generated)) ($generated@@28 $generated@@29 $generated@@176 ($generated@@30 $generated))))) (and (forall (($generated@@177 Int) ) (!  (=> (<= ($generated@@27 0) $generated@@177) ($generated@@26 $generated@@177 $generated@@175 $generated@@176))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@102) $generated@@177 $generated@@175 $generated@@176))
)) (= ($generated@@100 $generated@@175 $generated@@176) (exists (($generated@@178 Int) ) (!  (and (<= ($generated@@27 0) $generated@@178) ($generated@@24 ($generated@@25 $generated@@102) $generated@@178 $generated@@175 $generated@@176))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@102) $generated@@178 $generated@@175 $generated@@176))
)))))
 :pattern ( ($generated@@100 $generated@@175 $generated@@176))
))))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@59 $generated@@9 ($generated@@13 ($generated@@27 $generated@@179))) ($generated@@49 $generated@@116 ($generated@@59 $generated@@9 ($generated@@13 $generated@@179))))
 :pattern ( ($generated@@59 $generated@@9 ($generated@@13 ($generated@@27 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@59 $generated@@181 ($generated@@49 $generated@@181 $generated@@180)) ($generated@@49 $generated@@116 ($generated@@59 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@59 $generated@@181 ($generated@@49 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@40 $generated@@9 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@40 $generated@@9 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@107 $generated@@187) (= ($generated@@40 $generated@@29 ($generated@@52 $generated@@185 $generated@@186) ($generated@@30 $generated@@184) $generated@@187)  (and ($generated@@66 $generated@@185 $generated@@184 $generated@@187) ($generated@@40 $generated@@29 $generated@@186 ($generated@@30 $generated@@184) $generated@@187))))
 :pattern ( ($generated@@40 $generated@@29 ($generated@@52 $generated@@185 $generated@@186) ($generated@@30 $generated@@184) $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@28 $generated@@9 $generated@@188 $generated)
 :pattern ( ($generated@@28 $generated@@9 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () Int)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@198  (=> (= (ControlFlow 0 5) (- 0 4)) (or ($generated@@100 $generated@@189 $generated@@190) ($generated@@100 $generated@@190 $generated@@191)))))
(let (($generated@@199  (=> (and (and (and ($generated@@107 $generated@@192) ($generated@@193 $generated@@192)) (= $generated@@194 $generated@@192)) (and (forall (($generated@@200 Int) ) (!  (=> (and (<= ($generated@@27 0) $generated@@200) ($generated@@24 ($generated@@25 $generated@@102) $generated@@200 $generated@@189 $generated@@191)) (or ($generated@@24 ($generated@@25 $generated@@102) $generated@@200 $generated@@189 $generated@@190) ($generated@@24 ($generated@@25 $generated@@102) $generated@@200 $generated@@190 $generated@@191)))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@102) $generated@@200 $generated@@190 $generated@@191))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@102) $generated@@200 $generated@@189 $generated@@190))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@102) $generated@@200 $generated@@189 $generated@@191))
)) (= (ControlFlow 0 6) 5))) $generated@@198)))
(let (($generated@@201  (=> (<= ($generated@@27 0) $generated@@195) (=> (and ($generated@@40 $generated@@9 ($generated@@13 $generated@@195) $generated@@41 $generated@@194) ($generated@@40 $generated@@29 $generated@@189 ($generated@@30 $generated) $generated@@194)) (=> (and (and ($generated@@40 $generated@@29 $generated@@191 ($generated@@30 $generated) $generated@@194) ($generated@@26 $generated@@195 $generated@@189 $generated@@191)) (and ($generated@@26 $generated@@195 $generated@@189 $generated@@191) ($generated@@24 ($generated@@25 $generated@@102) $generated@@195 $generated@@189 $generated@@191))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@26 $generated@@195 $generated@@189 $generated@@191) (or ($generated@@24 ($generated@@25 $generated@@102) $generated@@195 $generated@@189 $generated@@191) (=> (= $generated@@195 ($generated@@27 0)) ($generated@@12 ($generated@@49 $generated@@8 ($generated@@11 false))))))) (=> (=> ($generated@@26 $generated@@195 $generated@@189 $generated@@191) (or ($generated@@24 ($generated@@25 $generated@@102) $generated@@195 $generated@@189 $generated@@191) (=> (= $generated@@195 ($generated@@27 0)) ($generated@@12 ($generated@@49 $generated@@8 ($generated@@11 false)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@26 $generated@@195 $generated@@189 $generated@@191) (or ($generated@@24 ($generated@@25 $generated@@102) $generated@@195 $generated@@189 $generated@@191) (=> (or (not (= $generated@@195 ($generated@@27 0))) (not true)) (or (not (<= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@189))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@191))))) (and (= ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@189))) ($generated@@14 ($generated@@32 $generated@@9 ($generated@@33 $generated@@191)))) ($generated@@24 ($generated@@25 ($generated@@25 $generated@@102)) (- $generated@@195 1) ($generated@@34 $generated@@189) ($generated@@34 $generated@@191)))))))))))))))
(let (($generated@@202  (=> (= $generated@@196 ($generated@@114 $generated@@197 $generated@@194 $generated@@1 false)) (and (=> (= (ControlFlow 0 7) 2) $generated@@201) (=> (= (ControlFlow 0 7) 6) $generated@@199)))))
(let (($generated@@203  (=> (and ($generated@@107 $generated@@194) ($generated@@193 $generated@@194)) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@189 ($generated@@30 $generated)) ($generated@@40 $generated@@29 $generated@@189 ($generated@@30 $generated) $generated@@194)) ($generated@@44 $generated@@189)) (and (and ($generated@@28 $generated@@29 $generated@@190 ($generated@@30 $generated)) ($generated@@40 $generated@@29 $generated@@190 ($generated@@30 $generated) $generated@@194)) ($generated@@44 $generated@@190))) (=> (and (and (and (and ($generated@@28 $generated@@29 $generated@@191 ($generated@@30 $generated)) ($generated@@40 $generated@@29 $generated@@191 ($generated@@30 $generated) $generated@@194)) ($generated@@44 $generated@@191)) (= 3 $generated@@23)) (and (and ($generated@@101 $generated@@189 $generated@@191) (and ($generated@@100 $generated@@189 $generated@@191) (exists (($generated@@204 Int) ) (!  (and (<= ($generated@@27 0) $generated@@204) ($generated@@24 ($generated@@25 $generated@@102) $generated@@204 $generated@@189 $generated@@191))
 :pattern ( ($generated@@24 ($generated@@25 $generated@@102) $generated@@204 $generated@@189 $generated@@191))
)))) (= (ControlFlow 0 8) 7))) $generated@@202)))))
$generated@@203))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
