(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@54 (T@U) Int)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@58 (Int) Int)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@74 (T@T T@U T@U) Bool)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 () Int)
(declare-fun $generated@@94 (T@U T@U) Int)
(declare-fun $generated@@95 (T@U) T@U)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@127 () T@T)
(declare-fun $generated@@128 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@129 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 (T@T T@T) T@T)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T) T@T)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@193 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@23 ($generated@@22 $generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@28) ($generated@@23 ($generated@@22 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@22 $generated@@26 $generated@@27) ($generated@@23 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@23 $generated@@30 $generated@@32) ($generated@@23 ($generated@@29 $generated@@30 $generated@@31) $generated@@32))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31) ($generated@@23 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@23 $generated@@34 $generated@@35) ($generated@@23 ($generated@@29 $generated@@33 $generated@@34) $generated@@35))
 :pattern ( ($generated@@29 $generated@@33 $generated@@34) ($generated@@23 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! ($generated@@36 $generated@@7 $generated@@38 $generated@@37 $generated@@39)
 :pattern ( ($generated@@36 $generated@@7 $generated@@38 $generated@@37 $generated@@39))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@40 $generated@@41) $generated@@42)  (or (= $generated@@42 $generated@@41) ($generated@@23 $generated@@40 $generated@@42)))
 :pattern ( ($generated@@23 ($generated@@22 $generated@@40 $generated@@41) $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> ($generated@@23 $generated@@45 $generated@@46) (not ($generated@@23 ($generated@@43 $generated@@44 $generated@@45) $generated@@46)))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45) ($generated@@23 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (!  (not ($generated@@23 $generated@@47 $generated@@48))
 :pattern ( ($generated@@23 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@29 ($generated@@29 $generated@@49 $generated@@50) $generated@@50) ($generated@@29 $generated@@49 $generated@@50))
 :pattern ( ($generated@@29 ($generated@@29 $generated@@49 $generated@@50) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@23 ($generated@@43 $generated@@51 $generated@@52) $generated@@53)  (and ($generated@@23 $generated@@51 $generated@@53) (not ($generated@@23 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@23 ($generated@@43 $generated@@51 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@55 $generated@@57) ($generated@@23 $generated@@57 ($generated@@56 $generated@@7 ($generated@@11 ($generated@@54 $generated@@57)))))
 :pattern ( ($generated@@54 $generated@@57))
)))
(assert (forall (($generated@@59 Int) ) (! (= ($generated@@58 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@63 $generated@@64 $generated@@65) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@23 $generated@@64 $generated@@66) ($generated@@23 $generated@@65 $generated@@66))
 :pattern ( ($generated@@23 $generated@@64 $generated@@66))
 :pattern ( ($generated@@23 $generated@@65 $generated@@66))
)))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@56 $generated@@69 ($generated@@67 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@70 $generated@@71 $generated@@72) (forall (($generated@@73 T@U) ) (!  (or (not ($generated@@23 $generated@@71 $generated@@73)) (not ($generated@@23 $generated@@72 $generated@@73)))
 :pattern ( ($generated@@23 $generated@@71 $generated@@73))
 :pattern ( ($generated@@23 $generated@@72 $generated@@73))
)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (= ($generated@@5 $generated@@75) 3))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@74 $generated@@75 $generated@@78 ($generated@@76 $generated@@79)) (forall (($generated@@80 T@U) ) (!  (=> ($generated@@23 $generated@@78 $generated@@80) ($generated@@77 $generated@@80 $generated@@79))
 :pattern ( ($generated@@23 $generated@@78 $generated@@80))
)))
 :pattern ( ($generated@@74 $generated@@75 $generated@@78 ($generated@@76 $generated@@79)))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@74 $generated@@7 $generated@@81 $generated@@37) (<= ($generated@@58 1) ($generated@@12 $generated@@81)))
 :pattern ( ($generated@@74 $generated@@7 $generated@@81 $generated@@37))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@56 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@36 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@56 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@77 $generated@@87 $generated@@37) (and (= ($generated@@56 $generated@@7 ($generated@@67 $generated@@7 $generated@@87)) $generated@@87) ($generated@@74 $generated@@7 ($generated@@67 $generated@@7 $generated@@87) $generated@@37)))
 :pattern ( ($generated@@77 $generated@@87 $generated@@37))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@23 ($generated@@29 $generated@@88 $generated@@89) $generated@@90)  (or ($generated@@23 $generated@@88 $generated@@90) ($generated@@23 $generated@@89 $generated@@90)))
 :pattern ( ($generated@@23 ($generated@@29 $generated@@88 $generated@@89) $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@70 $generated@@91 $generated@@92) (and (= ($generated@@43 ($generated@@29 $generated@@91 $generated@@92) $generated@@91) $generated@@92) (= ($generated@@43 ($generated@@29 $generated@@91 $generated@@92) $generated@@92) $generated@@91)))
 :pattern ( ($generated@@29 $generated@@91 $generated@@92))
)))
(assert  (=> (<= 1 $generated@@93) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@97 ($generated@@60 $generated@@75 $generated@@101)) (and (< 1 $generated@@93) (and (and ($generated@@96 $generated@@100) ($generated@@74 $generated@@75 $generated@@101 ($generated@@76 $generated@@37))) (not ($generated@@98 $generated@@101 $generated@@47))))) (and (and ($generated@@55 ($generated@@60 $generated@@75 $generated@@101)) (=> (not ($generated@@98 $generated@@101 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 ($generated@@54 ($generated@@60 $generated@@75 $generated@@101))))))) (let (($generated@@102 ($generated@@43 $generated@@101 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 ($generated@@54 ($generated@@60 $generated@@75 $generated@@101))))))))
($generated@@97 $generated@@102)))) (= ($generated@@94 ($generated@@95 $generated@@99) ($generated@@60 $generated@@75 $generated@@101)) (let (($generated@@103 ($generated@@54 ($generated@@60 $generated@@75 $generated@@101))))
(ite ($generated@@98 $generated@@101 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@103)))) $generated@@103 (let (($generated@@104 ($generated@@43 $generated@@101 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@103))))))
(let (($generated@@105 ($generated@@94 ($generated@@95 $generated@@99) $generated@@104)))
(ite (< $generated@@103 $generated@@105) $generated@@105 $generated@@103))))))))
 :weight 3
 :pattern ( ($generated@@94 ($generated@@95 $generated@@99) ($generated@@60 $generated@@75 $generated@@101)) ($generated@@96 $generated@@100))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@98 $generated@@106 $generated@@107) (= $generated@@106 $generated@@107))
 :pattern ( ($generated@@98 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@77 $generated@@108 $generated) (and (= ($generated@@56 $generated@@7 ($generated@@67 $generated@@7 $generated@@108)) $generated@@108) ($generated@@74 $generated@@7 ($generated@@67 $generated@@7 $generated@@108) $generated)))
 :pattern ( ($generated@@77 $generated@@108 $generated))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@77 ($generated@@56 $generated@@111 $generated@@109) $generated@@110) ($generated@@74 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@77 ($generated@@56 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@36 $generated@@75 $generated@@112 ($generated@@76 $generated@@113) $generated@@114) (forall (($generated@@115 T@U) ) (!  (=> ($generated@@23 $generated@@112 $generated@@115) ($generated@@82 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@23 $generated@@112 $generated@@115))
)))
 :pattern ( ($generated@@36 $generated@@75 $generated@@112 ($generated@@76 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@76 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@76 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@21 ($generated@@76 $generated@@118)) $generated@@1)
 :pattern ( ($generated@@76 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@67 $generated@@120 ($generated@@56 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@56 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@94 ($generated@@95 $generated@@121) $generated@@122) ($generated@@94 $generated@@121 $generated@@122))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@29 $generated@@123 ($generated@@29 $generated@@123 $generated@@124)) ($generated@@29 $generated@@123 $generated@@124))
 :pattern ( ($generated@@29 $generated@@123 ($generated@@29 $generated@@123 $generated@@124)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@125 $generated@@136 $generated@@137 $generated@@138 ($generated@@132 $generated@@136 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@142 $generated@@139) $generated@@141 $generated@@142) $generated@@139)
 :weight 0
)) (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@125 $generated@@143 $generated@@144 $generated@@145 ($generated@@132 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@125 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@125 $generated@@152 $generated@@153 $generated@@154 ($generated@@132 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@125 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)))) (= ($generated@@5 $generated@@126) 4)) (= ($generated@@5 $generated@@127) 5)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@129 $generated@@161 $generated@@162 ($generated@@133 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@163) $generated@@165) $generated@@163)
 :weight 0
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@170 $generated@@171) (= ($generated@@129 $generated@@166 $generated@@167 ($generated@@133 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@168) $generated@@171) ($generated@@129 $generated@@166 $generated@@167 $generated@@169 $generated@@171)))
 :weight 0
))) (= ($generated@@5 $generated@@130) 6)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (= ($generated@@5 ($generated@@131 $generated@@172 $generated@@173)) 7))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@134 ($generated@@131 $generated@@174 $generated@@175)) $generated@@174)
 :pattern ( ($generated@@131 $generated@@174 $generated@@175))
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@135 ($generated@@131 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@131 $generated@@176 $generated@@177))
))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Bool) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@10 ($generated@@125 $generated@@126 $generated@@127 $generated@@6 ($generated@@128 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))  (=> (and (or (not (= $generated@@182 $generated@@178)) (not true)) ($generated@@10 ($generated@@67 $generated@@6 ($generated@@129 $generated@@127 $generated@@130 ($generated@@129 $generated@@126 ($generated@@131 $generated@@127 $generated@@130) $generated@@179 $generated@@182) $generated@@180)))) $generated@@181))
 :pattern ( ($generated@@125 $generated@@126 $generated@@127 $generated@@6 ($generated@@128 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))
)))
(assert  (=> (<= 1 $generated@@93) (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (or ($generated@@97 $generated@@186) (and (< 1 $generated@@93) (and (and ($generated@@96 $generated@@185) ($generated@@74 $generated@@75 $generated@@186 ($generated@@76 $generated@@37))) (not ($generated@@98 $generated@@186 $generated@@47))))) (and (and ($generated@@55 $generated@@186) (=> (not ($generated@@98 $generated@@186 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 ($generated@@54 $generated@@186)))))) (let (($generated@@187 ($generated@@43 $generated@@186 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 ($generated@@54 $generated@@186)))))))
($generated@@97 $generated@@187)))) (= ($generated@@94 ($generated@@95 $generated@@184) $generated@@186) (let (($generated@@188 ($generated@@54 $generated@@186)))
(ite ($generated@@98 $generated@@186 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@188)))) $generated@@188 (let (($generated@@189 ($generated@@43 $generated@@186 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@188))))))
(let (($generated@@190 ($generated@@94 $generated@@184 $generated@@189)))
(ite (< $generated@@188 $generated@@190) $generated@@190 $generated@@188))))))))
 :pattern ( ($generated@@94 ($generated@@95 $generated@@184) $generated@@186) ($generated@@96 $generated@@185))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@77 $generated@@191 ($generated@@76 $generated@@192)) (and (= ($generated@@56 $generated@@75 ($generated@@67 $generated@@75 $generated@@191)) $generated@@191) ($generated@@74 $generated@@75 ($generated@@67 $generated@@75 $generated@@191) ($generated@@76 $generated@@192))))
 :pattern ( ($generated@@77 $generated@@191 ($generated@@76 $generated@@192)))
)))
(assert (= ($generated@@21 $generated@@37) $generated@@3))
(assert (= ($generated@@193 $generated@@37) $generated@@4))
(assert  (=> (<= 1 $generated@@93) (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (or ($generated@@97 $generated@@195) (and (< 1 $generated@@93) (and ($generated@@74 $generated@@75 $generated@@195 ($generated@@76 $generated@@37)) (not ($generated@@98 $generated@@195 $generated@@47))))) (and (and ($generated@@23 $generated@@195 ($generated@@56 $generated@@7 ($generated@@11 ($generated@@94 $generated@@194 $generated@@195)))) (forall (($generated@@196 T@U) ) (!  (=> ($generated@@23 $generated@@195 ($generated@@56 $generated@@7 $generated@@196)) (<= ($generated@@12 $generated@@196) ($generated@@94 $generated@@194 $generated@@195)))
 :pattern ( ($generated@@23 $generated@@195 ($generated@@56 $generated@@7 $generated@@196)))
))) (<= ($generated@@58 1) ($generated@@94 $generated@@194 $generated@@195))))
 :pattern ( ($generated@@94 $generated@@194 $generated@@195))
))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@98 $generated@@197 $generated@@198) (forall (($generated@@199 T@U) ) (! (= ($generated@@23 $generated@@197 $generated@@199) ($generated@@23 $generated@@198 $generated@@199))
 :pattern ( ($generated@@23 $generated@@197 $generated@@199))
 :pattern ( ($generated@@23 $generated@@198 $generated@@199))
)))
 :pattern ( ($generated@@98 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@200 Int) ) (! (= ($generated@@56 $generated@@7 ($generated@@11 ($generated@@58 $generated@@200))) ($generated@@60 $generated@@130 ($generated@@56 $generated@@7 ($generated@@11 $generated@@200))))
 :pattern ( ($generated@@56 $generated@@7 ($generated@@11 ($generated@@58 $generated@@200))))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@T) ) (! (= ($generated@@56 $generated@@202 ($generated@@60 $generated@@202 $generated@@201)) ($generated@@60 $generated@@130 ($generated@@56 $generated@@202 $generated@@201)))
 :pattern ( ($generated@@56 $generated@@202 ($generated@@60 $generated@@202 $generated@@201)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! ($generated@@36 $generated@@7 $generated@@204 $generated $generated@@203)
 :pattern ( ($generated@@36 $generated@@7 $generated@@204 $generated $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@74 $generated@@7 $generated@@205 $generated)
 :pattern ( ($generated@@74 $generated@@7 $generated@@205 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () Int)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@219 true))
(let (($generated@@220  (=> (and (=> ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@207))) (<= $generated@@207 $generated@@208)) (= (ControlFlow 0 19) 17)) $generated@@219)))
(let (($generated@@221  (=> ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@207))) (=> (and (<= $generated@@207 $generated@@208) (= (ControlFlow 0 18) 17)) $generated@@219))))
(let (($generated@@222  (=> (<= ($generated@@58 1) ($generated@@94 ($generated@@95 $generated@@209) $generated@@206)) (=> (and (<= ($generated@@58 1) $generated@@208) ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@208)))) (and (=> (= (ControlFlow 0 20) 18) $generated@@221) (=> (= (ControlFlow 0 20) 19) $generated@@220))))))
(let (($generated@@223  (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@208)))) (=> ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@208))) (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@224 Int) ) (!  (=> ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@224))) (<= $generated@@224 $generated@@208))
 :pattern ( ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@224))))
)))))))
(let (($generated@@225  (=> ($generated@@55 $generated@@206) (and (=> (= (ControlFlow 0 5) (- 0 6)) ($generated@@74 $generated@@7 ($generated@@11 (ite ($generated@@98 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210)))) $generated@@210 (let (($generated@@226 ($generated@@43 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210))))))
(let (($generated@@227 ($generated@@94 ($generated@@95 $generated@@209) $generated@@226)))
(ite (< $generated@@210 $generated@@227) $generated@@227 $generated@@210))))) $generated@@37)) (=> ($generated@@74 $generated@@7 ($generated@@11 (ite ($generated@@98 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210)))) $generated@@210 (let (($generated@@228 ($generated@@43 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210))))))
(let (($generated@@229 ($generated@@94 ($generated@@95 $generated@@209) $generated@@228)))
(ite (< $generated@@210 $generated@@229) $generated@@229 $generated@@210))))) $generated@@37) (=> (= ($generated@@94 ($generated@@95 $generated@@209) $generated@@206) (ite ($generated@@98 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210)))) $generated@@210 (let (($generated@@230 ($generated@@43 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210))))))
(let (($generated@@231 ($generated@@94 ($generated@@95 $generated@@209) $generated@@230)))
(ite (< $generated@@210 $generated@@231) $generated@@231 $generated@@210))))) (=> (and (and (=> (not ($generated@@98 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210))))) (let (($generated@@232 ($generated@@43 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210))))))
($generated@@97 $generated@@232))) ($generated@@74 $generated@@7 ($generated@@11 ($generated@@94 ($generated@@95 $generated@@209) $generated@@206)) $generated@@37)) (and (= ($generated@@94 ($generated@@95 $generated@@209) $generated@@206) $generated@@208) (= (ControlFlow 0 5) 3))) $generated@@223)))))))
(let (($generated@@233  (=> (and (<= $generated@@211 $generated@@210) (= (ControlFlow 0 9) 5)) $generated@@225)))
(let (($generated@@234  (=> (and (< $generated@@210 $generated@@211) (= (ControlFlow 0 8) 5)) $generated@@225)))
(let (($generated@@235  (=> (and (and (not ($generated@@98 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210))))) (= $generated@@212 ($generated@@43 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210)))))) (and ($generated@@74 $generated@@75 $generated@@212 ($generated@@76 $generated)) (= $generated@@213 $generated@@212))) (and (=> (= (ControlFlow 0 10) (- 0 14)) ($generated@@98 $generated@@206 ($generated@@29 $generated@@213 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210)))))) (=> ($generated@@98 $generated@@206 ($generated@@29 $generated@@213 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210))))) (and (=> (= (ControlFlow 0 10) (- 0 13)) ($generated@@74 $generated@@75 $generated@@213 ($generated@@76 $generated@@37))) (=> ($generated@@74 $generated@@75 $generated@@213 ($generated@@76 $generated@@37)) (=> ($generated@@36 $generated@@75 $generated@@213 ($generated@@76 $generated@@37) $generated@@214) (and (=> (= (ControlFlow 0 10) (- 0 12)) (not ($generated@@98 $generated@@213 $generated@@47))) (=> (not ($generated@@98 $generated@@213 $generated@@47)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and ($generated@@63 $generated@@213 $generated@@206) (not ($generated@@63 $generated@@206 $generated@@213)))) (=> (and ($generated@@63 $generated@@213 $generated@@206) (not ($generated@@63 $generated@@206 $generated@@213))) (=> ($generated@@97 $generated@@213) (=> (and (and (= $generated@@215 ($generated@@94 ($generated@@95 $generated@@209) $generated@@213)) ($generated@@97 $generated@@213)) (and ($generated@@74 $generated@@7 ($generated@@11 $generated@@215) $generated@@37) (= $generated@@211 $generated@@215))) (and (=> (= (ControlFlow 0 10) 8) $generated@@234) (=> (= (ControlFlow 0 10) 9) $generated@@233))))))))))))))))
(let (($generated@@236  (=> (and ($generated@@98 $generated@@206 ($generated@@22 $generated@@47 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210)))) (= (ControlFlow 0 7) 5)) $generated@@225)))
(let (($generated@@237  (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (and ($generated@@74 $generated@@7 ($generated@@11 ($generated@@58 0)) $generated) ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 ($generated@@58 0))))) (exists (($generated@@238 T@U) ) ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 $generated@@238))))) (=> (or (and ($generated@@74 $generated@@7 ($generated@@11 ($generated@@58 0)) $generated) ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 ($generated@@58 0))))) (exists (($generated@@239 Int) ) ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@239))))) (=> ($generated@@23 $generated@@206 ($generated@@56 $generated@@7 ($generated@@11 $generated@@210))) (and (=> (= (ControlFlow 0 15) 7) $generated@@236) (=> (= (ControlFlow 0 15) 10) $generated@@235)))))))
(let (($generated@@240 true))
(let (($generated@@241  (=> (and (= $generated@@216 ($generated@@128 $generated@@217 $generated@@214 $generated@@2 false)) (not ($generated@@98 $generated@@206 $generated@@47))) (and (and (=> (= (ControlFlow 0 21) 20) $generated@@222) (=> (= (ControlFlow 0 21) 15) $generated@@237)) (=> (= (ControlFlow 0 21) 1) $generated@@240)))))
(let (($generated@@242  (=> (and (and (and ($generated@@96 $generated@@214) ($generated@@218 $generated@@214)) ($generated@@74 $generated@@75 $generated@@206 ($generated@@76 $generated@@37))) (and (= 1 $generated@@93) (= (ControlFlow 0 22) 21))) $generated@@241)))
$generated@@242)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
