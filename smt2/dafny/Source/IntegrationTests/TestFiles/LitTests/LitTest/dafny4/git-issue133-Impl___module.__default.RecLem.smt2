(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@53 (T@T T@U T@U) Bool)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@130 (T@U) Int)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert  (and (= ($generated@@5 $generated@@22) 3) (= ($generated@@5 $generated@@26) 4)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@25 $generated@@31) (= ($generated@@21 $generated@@22 ($generated@@23 $generated@@29 $generated@@30) ($generated@@24 $generated@@28) $generated@@31)  (and ($generated@@21 $generated@@22 $generated@@29 ($generated@@24 $generated@@28) $generated@@31) ($generated@@21 $generated@@26 $generated@@30 ($generated@@27 $generated@@28) $generated@@31))))
 :pattern ( ($generated@@21 $generated@@22 ($generated@@23 $generated@@29 $generated@@30) ($generated@@24 $generated@@28) $generated@@31))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@36) ($generated@@33 ($generated@@32 $generated@@34 $generated@@35) $generated@@36))
 :pattern ( ($generated@@32 $generated@@34 $generated@@35) ($generated@@33 $generated@@34 $generated@@36))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@33 $generated@@38 $generated@@39) ($generated@@33 ($generated@@32 $generated@@37 $generated@@38) $generated@@39))
 :pattern ( ($generated@@32 $generated@@37 $generated@@38) ($generated@@33 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> ($generated@@33 $generated@@42 $generated@@43) (not ($generated@@33 ($generated@@40 $generated@@41 $generated@@42) $generated@@43)))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42) ($generated@@33 $generated@@42 $generated@@43))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@2))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@32 ($generated@@32 $generated@@46 $generated@@47) $generated@@47) ($generated@@32 $generated@@46 $generated@@47))
 :pattern ( ($generated@@32 ($generated@@32 $generated@@46 $generated@@47) $generated@@47))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@33 ($generated@@40 $generated@@48 $generated@@49) $generated@@50)  (and ($generated@@33 $generated@@48 $generated@@50) (not ($generated@@33 $generated@@49 $generated@@50))))
 :pattern ( ($generated@@33 ($generated@@40 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@25 $generated@@52) ($generated@@21 $generated@@22 $generated@@45 ($generated@@24 $generated@@51) $generated@@52))
 :pattern ( ($generated@@21 $generated@@22 $generated@@45 ($generated@@24 $generated@@51) $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! ($generated@@53 $generated@@22 $generated@@45 ($generated@@24 $generated@@54))
 :pattern ( ($generated@@53 $generated@@22 $generated@@45 ($generated@@24 $generated@@54)))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@55 $generated@@56 $generated@@57) (= $generated@@56 $generated@@57))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 $generated@@62) (= ($generated@@44 $generated@@62) $generated@@2))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@44 $generated@@64) $generated@@3))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (or (not ($generated@@33 $generated@@70 $generated@@72)) (not ($generated@@33 $generated@@71 $generated@@72)))
 :pattern ( ($generated@@33 $generated@@70 $generated@@72))
 :pattern ( ($generated@@33 $generated@@71 $generated@@72))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@63 $generated@@73) (exists (($generated@@74 T@U) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@23 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@63 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@53 $generated@@22 ($generated@@23 $generated@@77 $generated@@78) ($generated@@24 $generated@@76))  (and ($generated@@53 $generated@@22 $generated@@77 ($generated@@24 $generated@@76)) ($generated@@53 $generated@@26 $generated@@78 ($generated@@27 $generated@@76))))
 :pattern ( ($generated@@53 $generated@@22 ($generated@@23 $generated@@77 $generated@@78) ($generated@@24 $generated@@76)))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@61 $generated@@79) (= $generated@@79 $generated@@45))
 :pattern ( ($generated@@61 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@53 $generated@@26 $generated@@81 ($generated@@27 $generated@@82)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@33 $generated@@81 $generated@@83) ($generated@@80 $generated@@83 $generated@@82))
 :pattern ( ($generated@@33 $generated@@81 $generated@@83))
)))
 :pattern ( ($generated@@53 $generated@@26 $generated@@81 ($generated@@27 $generated@@82)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@84 ($generated@@66 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@21 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@84 ($generated@@66 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= ($generated@@89 ($generated@@24 $generated@@91)) $generated@@1) (= ($generated@@90 ($generated@@24 $generated@@91)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@33 ($generated@@32 $generated@@92 $generated@@93) $generated@@94)  (or ($generated@@33 $generated@@92 $generated@@94) ($generated@@33 $generated@@93 $generated@@94)))
 :pattern ( ($generated@@33 ($generated@@32 $generated@@92 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@69 $generated@@95 $generated@@96) (and (= ($generated@@40 ($generated@@32 $generated@@95 $generated@@96) $generated@@95) $generated@@96) (= ($generated@@40 ($generated@@32 $generated@@95 $generated@@96) $generated@@96) $generated@@95)))
 :pattern ( ($generated@@32 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@97 $generated@@98) (or ($generated@@61 $generated@@98) ($generated@@63 $generated@@98)))
 :pattern ( ($generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@53 $generated@@22 $generated@@100 ($generated@@24 $generated@@99)) (or ($generated@@61 $generated@@100) ($generated@@63 $generated@@100)))
 :pattern ( ($generated@@63 $generated@@100) ($generated@@53 $generated@@22 $generated@@100 ($generated@@24 $generated@@99)))
 :pattern ( ($generated@@61 $generated@@100) ($generated@@53 $generated@@22 $generated@@100 ($generated@@24 $generated@@99)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@101 $generated@@102 $generated@@103) (= $generated@@102 $generated@@103))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and ($generated@@63 $generated@@106) ($generated@@63 $generated@@107)) (= ($generated@@55 $generated@@106 $generated@@107)  (and ($generated@@55 ($generated@@104 $generated@@106) ($generated@@104 $generated@@107)) ($generated@@101 ($generated@@105 $generated@@106) ($generated@@105 $generated@@107)))))
 :pattern ( ($generated@@55 $generated@@106 $generated@@107) ($generated@@63 $generated@@106))
 :pattern ( ($generated@@55 $generated@@106 $generated@@107) ($generated@@63 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@80 ($generated@@66 $generated@@110 $generated@@108) $generated@@109) ($generated@@53 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@80 ($generated@@66 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and ($generated@@61 $generated@@111) ($generated@@61 $generated@@112)) ($generated@@55 $generated@@111 $generated@@112))
 :pattern ( ($generated@@55 $generated@@111 $generated@@112) ($generated@@61 $generated@@111))
 :pattern ( ($generated@@55 $generated@@111 $generated@@112) ($generated@@61 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@21 $generated@@26 $generated@@113 ($generated@@27 $generated@@114) $generated@@115) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@33 $generated@@113 $generated@@116) ($generated@@84 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@33 $generated@@113 $generated@@116))
)))
 :pattern ( ($generated@@21 $generated@@26 $generated@@113 ($generated@@27 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@44 ($generated@@23 $generated@@117 $generated@@118)) $generated@@3)
 :pattern ( ($generated@@23 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@104 ($generated@@23 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@23 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@105 ($generated@@23 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@23 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@27 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@27 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@89 ($generated@@27 $generated@@125)) $generated)
 :pattern ( ($generated@@27 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@24 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@24 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@65 $generated@@129 ($generated@@66 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@66 $generated@@129 $generated@@128))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@130 $generated@@131) ($generated@@130 ($generated@@23 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@23 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@32 $generated@@133 ($generated@@32 $generated@@133 $generated@@134)) ($generated@@32 $generated@@133 $generated@@134))
 :pattern ( ($generated@@32 $generated@@133 ($generated@@32 $generated@@133 $generated@@134)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@135 $generated@@146 $generated@@147 $generated@@148 ($generated@@142 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@135 $generated@@153 $generated@@154 $generated@@155 ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@135 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@135 $generated@@162 $generated@@163 $generated@@164 ($generated@@142 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))) (= ($generated@@5 $generated@@136) 5)) (= ($generated@@5 $generated@@137) 6)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@139 $generated@@171 $generated@@172 ($generated@@143 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@173) $generated@@175) $generated@@173)
 :weight 0
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@180 $generated@@181) (= ($generated@@139 $generated@@176 $generated@@177 ($generated@@143 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@181) ($generated@@139 $generated@@176 $generated@@177 $generated@@179 $generated@@181)))
 :weight 0
))) (= ($generated@@5 $generated@@140) 7)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@5 ($generated@@141 $generated@@182 $generated@@183)) 8))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@144 ($generated@@141 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@141 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@145 ($generated@@141 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@141 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@10 ($generated@@135 $generated@@136 $generated@@137 $generated@@6 ($generated@@138 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@10 ($generated@@65 $generated@@6 ($generated@@139 $generated@@137 $generated@@140 ($generated@@139 $generated@@136 ($generated@@141 $generated@@137 $generated@@140) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137 $generated@@6 ($generated@@138 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> ($generated@@80 $generated@@194 ($generated@@27 $generated@@195)) (and (= ($generated@@66 $generated@@26 ($generated@@65 $generated@@26 $generated@@194)) $generated@@194) ($generated@@53 $generated@@26 ($generated@@65 $generated@@26 $generated@@194) ($generated@@27 $generated@@195))))
 :pattern ( ($generated@@80 $generated@@194 ($generated@@27 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@80 $generated@@197 ($generated@@24 $generated@@196)) (and (= ($generated@@66 $generated@@22 ($generated@@65 $generated@@22 $generated@@197)) $generated@@197) ($generated@@53 $generated@@22 ($generated@@65 $generated@@22 $generated@@197) ($generated@@24 $generated@@196))))
 :pattern ( ($generated@@80 $generated@@197 ($generated@@24 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@33 $generated@@199 ($generated@@66 $generated@@22 $generated@@200)) (< ($generated@@130 $generated@@200) ($generated@@130 ($generated@@23 $generated@@198 $generated@@199))))
 :pattern ( ($generated@@33 $generated@@199 ($generated@@66 $generated@@22 $generated@@200)) ($generated@@23 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and ($generated@@25 $generated@@203) (and ($generated@@63 $generated@@201) ($generated@@21 $generated@@22 $generated@@201 ($generated@@24 $generated@@202) $generated@@203))) ($generated@@21 $generated@@22 ($generated@@104 $generated@@201) ($generated@@24 $generated@@202) $generated@@203))
 :pattern ( ($generated@@21 $generated@@22 ($generated@@104 $generated@@201) ($generated@@24 $generated@@202) $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@25 $generated@@206) (and ($generated@@63 $generated@@204) ($generated@@21 $generated@@22 $generated@@204 ($generated@@24 $generated@@205) $generated@@206))) ($generated@@21 $generated@@26 ($generated@@105 $generated@@204) ($generated@@27 $generated@@205) $generated@@206))
 :pattern ( ($generated@@21 $generated@@26 ($generated@@105 $generated@@204) ($generated@@27 $generated@@205) $generated@@206))
)))
(assert (= $generated@@45 ($generated@@58 $generated@@22 $generated@@45)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@101 $generated@@207 $generated@@208) (forall (($generated@@209 T@U) ) (! (= ($generated@@33 $generated@@207 $generated@@209) ($generated@@33 $generated@@208 $generated@@209))
 :pattern ( ($generated@@33 $generated@@207 $generated@@209))
 :pattern ( ($generated@@33 $generated@@208 $generated@@209))
)))
 :pattern ( ($generated@@101 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@23 ($generated@@58 $generated@@22 $generated@@210) ($generated@@58 $generated@@26 $generated@@211)) ($generated@@58 $generated@@22 ($generated@@23 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@23 ($generated@@58 $generated@@22 $generated@@210) ($generated@@58 $generated@@26 $generated@@211)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@T) ) (! (= ($generated@@66 $generated@@213 ($generated@@58 $generated@@213 $generated@@212)) ($generated@@58 $generated@@140 ($generated@@66 $generated@@213 $generated@@212)))
 :pattern ( ($generated@@66 $generated@@213 ($generated@@58 $generated@@213 $generated@@212)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@236  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@55 $generated@@214 $generated@@215))))
(let (($generated@@237  (=> (= $generated@@214 ($generated@@23 $generated@@216 $generated@@217)) (=> (and ($generated@@53 $generated@@22 $generated@@216 ($generated@@24 $generated@@218)) ($generated@@53 $generated@@26 $generated@@217 ($generated@@27 $generated@@218))) (=> (and (and (and (and ($generated@@53 $generated@@26 $generated@@219 ($generated@@27 $generated@@218)) ($generated@@21 $generated@@26 $generated@@219 ($generated@@27 $generated@@218) $generated@@220)) (= $generated@@221 $generated@@217)) (and ($generated@@53 $generated@@26 $generated@@221 ($generated@@27 $generated@@218)) (= $generated@@219 $generated@@221))) (and (and (and ($generated@@53 $generated@@22 $generated@@222 ($generated@@24 $generated@@218)) ($generated@@21 $generated@@22 $generated@@222 ($generated@@24 $generated@@218) $generated@@220)) (= $generated@@223 $generated@@216)) (and ($generated@@53 $generated@@22 $generated@@223 ($generated@@24 $generated@@218)) (= $generated@@222 $generated@@223)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@130 $generated@@222) ($generated@@130 $generated@@214))) (=> (< ($generated@@130 $generated@@222) ($generated@@130 $generated@@214)) (=> (and ($generated@@53 $generated@@22 $generated@@224 ($generated@@24 $generated@@225)) ($generated@@21 $generated@@22 $generated@@224 ($generated@@24 $generated@@225) $generated@@220)) (=> (and (and ($generated@@25 $generated@@226) ($generated@@227 $generated@@226)) (and ($generated@@53 $generated@@22 $generated@@228 ($generated@@24 $generated@@218)) ($generated@@21 $generated@@22 $generated@@228 ($generated@@24 $generated@@218) $generated@@226))) (=> (and (and (and ($generated@@97 $generated@@222) ($generated@@97 $generated@@228)) ($generated@@55 $generated@@222 $generated@@228)) (and (and (= $generated@@220 $generated@@226) (= $generated@@229 ($generated@@23 $generated@@228 ($generated@@32 $generated@@219 $generated@@219)))) (and (= $generated@@215 $generated@@229) (= (ControlFlow 0 5) 3)))) $generated@@236))))))))))
(let (($generated@@238  (=> (and (and (= $generated@@214 $generated@@45) (= $generated@@230 ($generated@@58 $generated@@22 $generated@@45))) (and (= $generated@@215 $generated@@230) (= (ControlFlow 0 4) 3))) $generated@@236)))
(let (($generated@@239 true))
(let (($generated@@240  (=> (or (not (= $generated@@214 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 7) 5) $generated@@237) (=> (= (ControlFlow 0 7) 1) $generated@@239)))))
(let (($generated@@241  (=> (= $generated@@231 ($generated@@138 $generated@@232 $generated@@220 $generated@@0 false)) (and (=> (= (ControlFlow 0 8) 4) $generated@@238) (=> (= (ControlFlow 0 8) 7) $generated@@240)))))
(let (($generated@@242  (=> (and ($generated@@25 $generated@@220) ($generated@@227 $generated@@220)) (=> (and (and (and (and ($generated@@53 $generated@@22 $generated@@214 ($generated@@24 $generated@@218)) ($generated@@21 $generated@@22 $generated@@214 ($generated@@24 $generated@@218) $generated@@220)) ($generated@@97 $generated@@214)) (and ($generated@@53 $generated@@22 $generated@@233 ($generated@@24 $generated@@218)) ($generated@@21 $generated@@22 $generated@@233 ($generated@@24 $generated@@218) $generated@@220))) (and (and (and ($generated@@53 $generated@@22 $generated@@234 ($generated@@24 $generated@@218)) ($generated@@21 $generated@@22 $generated@@234 ($generated@@24 $generated@@218) $generated@@220)) true) (and (= 1 $generated@@235) (= (ControlFlow 0 9) 8)))) $generated@@241))))
$generated@@242))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
