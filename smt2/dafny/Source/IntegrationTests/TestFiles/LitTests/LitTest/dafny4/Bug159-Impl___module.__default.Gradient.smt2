(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@113 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) Int)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@140 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (or (not (= $generated@@32 $generated@@25)) (not true)) (= ($generated@@26 $generated@@32) ($generated@@24 $generated@@31))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@30 $generated@@32)) $generated))
 :pattern ( ($generated@@30 $generated@@32) ($generated@@24 $generated@@31))
)))
(assert (= ($generated@@5 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38) ($generated@@33 $generated@@34 $generated@@37 ($generated@@24 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@24 $generated@@36) $generated@@38))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@40 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@40 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@40 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@5 $generated@@41) 4)) (= ($generated@@5 $generated@@42) 5)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@5 ($generated@@43 $generated@@58 $generated@@59)) 6))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@43 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@43 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@43 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@65 ($generated@@24 $generated@@64) $generated@@66)  (or (= $generated@@65 $generated@@25) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@66 $generated@@65) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@65 ($generated@@24 $generated@@64) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@68 $generated@@70) $generated@@1))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@69 $generated@@70) $generated@@1))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@69 $generated@@70) $generated@@1))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@39 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@39 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ) (! (= ($generated@@21 ($generated@@79 $generated@@80 $generated@@81)) (+ ($generated@@21 $generated@@80) 1))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@83 ($generated@@35 $generated@@82))  (and ($generated@@27 $generated@@34 $generated@@83 ($generated@@24 $generated@@82)) (or (not (= $generated@@83 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@34 $generated@@83 ($generated@@35 $generated@@82)))
 :pattern ( ($generated@@27 $generated@@34 $generated@@83 ($generated@@24 $generated@@82)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@84 ($generated@@76 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@33 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@84 ($generated@@76 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 Int) ) (!  (=> (and (and (and ($generated@@90 $generated@@92) (and (or (not (= $generated@@93 $generated@@25)) (not true)) (= ($generated@@26 $generated@@93) ($generated@@24 $generated@@91)))) (and (and (<= 0 $generated@@94) (< $generated@@94 ($generated@@23 $generated@@93))) (and (<= 0 $generated@@95) (< $generated@@95 ($generated@@30 $generated@@93))))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@92 $generated@@93) $generated@@1)))) ($generated@@84 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@92 $generated@@93) ($generated@@79 ($generated@@89 $generated@@94) $generated@@95)) $generated@@91 $generated@@92))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@92 $generated@@93) ($generated@@79 ($generated@@89 $generated@@94) $generated@@95)) ($generated@@24 $generated@@91))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@67 $generated@@96 $generated@@97) (=> ($generated@@84 $generated@@98 $generated@@99 $generated@@96) ($generated@@84 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@67 $generated@@96 $generated@@97) ($generated@@84 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (!  (=> ($generated@@67 $generated@@100 $generated@@101) (=> ($generated@@33 $generated@@104 $generated@@102 $generated@@103 $generated@@100) ($generated@@33 $generated@@104 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@67 $generated@@100 $generated@@101) ($generated@@33 $generated@@104 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@106)) $generated@@2) (= ($generated@@105 ($generated@@24 $generated@@106)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@22 ($generated@@35 $generated@@107)) $generated@@3) (= ($generated@@105 ($generated@@35 $generated@@107)) $generated@@4))
 :pattern ( ($generated@@35 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@109 ($generated@@24 $generated@@108))  (or (= $generated@@109 $generated@@25) (= ($generated@@26 $generated@@109) ($generated@@24 $generated@@108))))
 :pattern ( ($generated@@27 $generated@@34 $generated@@109 ($generated@@24 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or (not (= $generated@@110 $generated@@112)) (not true)) (=> (and ($generated@@67 $generated@@110 $generated@@111) ($generated@@67 $generated@@111 $generated@@112)) ($generated@@67 $generated@@110 $generated@@112)))
 :pattern ( ($generated@@67 $generated@@110 $generated@@111) ($generated@@67 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 Int) ($generated@@118 Int) ) (!  (=> (and (and ($generated@@90 $generated@@115) (and (or (not (= $generated@@116 $generated@@25)) (not true)) (= ($generated@@26 $generated@@116) ($generated@@24 $generated@@114)))) (and (and (<= 0 $generated@@117) (< $generated@@117 ($generated@@23 $generated@@116))) (and (<= 0 $generated@@118) (< $generated@@118 ($generated@@30 $generated@@116))))) ($generated@@113 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@115 $generated@@116) ($generated@@79 ($generated@@89 $generated@@117) $generated@@118)) $generated@@114))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@115 $generated@@116) ($generated@@79 ($generated@@89 $generated@@117) $generated@@118)) ($generated@@24 $generated@@114))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@113 $generated@@119 $generated) (and (= ($generated@@76 $generated@@7 ($generated@@39 $generated@@7 $generated@@119)) $generated@@119) ($generated@@27 $generated@@7 ($generated@@39 $generated@@7 $generated@@119) $generated)))
 :pattern ( ($generated@@113 $generated@@119 $generated))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@113 ($generated@@76 $generated@@122 $generated@@120) $generated@@121) ($generated@@27 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@113 ($generated@@76 $generated@@122 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@23 $generated@@123))
 :pattern ( ($generated@@23 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (<= 0 ($generated@@30 $generated@@124))
 :pattern ( ($generated@@30 $generated@@124))
)))
(assert (forall (($generated@@125 Int) ) (! (= ($generated@@21 ($generated@@89 $generated@@125)) 1)
 :pattern ( ($generated@@89 $generated@@125))
)))
(assert (forall (($generated@@127 Int) ) (! (= ($generated@@126 ($generated@@89 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@89 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@24 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@24 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@35 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@35 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@39 $generated@@133 ($generated@@76 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@76 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@135) (and (or (not (= $generated@@136 $generated@@25)) (not true)) (= ($generated@@26 $generated@@136) ($generated@@24 $generated@@134)))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@135 $generated@@136) $generated@@1)))) ($generated@@33 $generated@@7 ($generated@@11 ($generated@@23 $generated@@136)) $generated $generated@@135))
 :pattern ( ($generated@@23 $generated@@136) ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@135 $generated@@136) $generated@@1)) ($generated@@24 $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@138) (and (or (not (= $generated@@139 $generated@@25)) (not true)) (= ($generated@@26 $generated@@139) ($generated@@24 $generated@@137)))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@138 $generated@@139) $generated@@1)))) ($generated@@33 $generated@@7 ($generated@@11 ($generated@@30 $generated@@139)) $generated $generated@@138))
 :pattern ( ($generated@@30 $generated@@139) ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@138 $generated@@139) $generated@@1)) ($generated@@24 $generated@@137))
)))
(assert  (and (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@140 $generated@@143 $generated@@144 $generated@@145 ($generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@148 $generated@@149) $generated@@146)
 :weight 0
)) (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@140 $generated@@150 $generated@@151 $generated@@152 ($generated@@142 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@140 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@140 $generated@@159 $generated@@160 $generated@@161 ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@140 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@10 ($generated@@140 $generated@@34 $generated@@41 $generated@@6 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@140 $generated@@34 $generated@@41 $generated@@6 ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ) (!  (and (= ($generated@@174 ($generated@@79 $generated@@176 $generated@@177)) $generated@@176) (= ($generated@@175 ($generated@@79 $generated@@176 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@79 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@113 $generated@@179 ($generated@@24 $generated@@178)) (and (= ($generated@@76 $generated@@34 ($generated@@39 $generated@@34 $generated@@179)) $generated@@179) ($generated@@27 $generated@@34 ($generated@@39 $generated@@34 $generated@@179) ($generated@@24 $generated@@178))))
 :pattern ( ($generated@@113 $generated@@179 ($generated@@24 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@113 $generated@@181 ($generated@@35 $generated@@180)) (and (= ($generated@@76 $generated@@34 ($generated@@39 $generated@@34 $generated@@181)) $generated@@181) ($generated@@27 $generated@@34 ($generated@@39 $generated@@34 $generated@@181) ($generated@@35 $generated@@180))))
 :pattern ( ($generated@@113 $generated@@181 ($generated@@35 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@90 ($generated@@44 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@182 $generated@@183 ($generated@@44 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@182 $generated@@183) $generated@@184 $generated@@185))) ($generated@@67 $generated@@182 ($generated@@44 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@182 $generated@@183 ($generated@@44 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@182 $generated@@183) $generated@@184 $generated@@185))))
 :pattern ( ($generated@@44 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@182 $generated@@183 ($generated@@44 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@182 $generated@@183) $generated@@184 $generated@@185)))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@76 $generated@@7 ($generated@@11 ($generated@@71 $generated@@186))) ($generated@@73 $generated@@42 ($generated@@76 $generated@@7 ($generated@@11 $generated@@186))))
 :pattern ( ($generated@@76 $generated@@7 ($generated@@11 ($generated@@71 $generated@@186))))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@T) ) (! (= ($generated@@76 $generated@@188 ($generated@@73 $generated@@188 $generated@@187)) ($generated@@73 $generated@@42 ($generated@@76 $generated@@188 $generated@@187)))
 :pattern ( ($generated@@76 $generated@@188 ($generated@@73 $generated@@188 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! ($generated@@33 $generated@@7 $generated@@190 $generated $generated@@189)
 :pattern ( ($generated@@33 $generated@@7 $generated@@190 $generated $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ) (! ($generated@@27 $generated@@7 $generated@@191 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@191 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () Int)
(declare-fun $generated@@198 () Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 22) (let (($generated@@206  (=> (and (and (<= ($generated@@71 0) $generated@@192) (< $generated@@192 $generated@@193)) (and (<= ($generated@@71 0) $generated@@194) (< $generated@@194 $generated@@193))) (and (=> (= (ControlFlow 0 7) (- 0 11)) (or (not (= $generated@@195 $generated@@25)) (not true))) (=> (or (not (= $generated@@195 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@23 $generated@@195)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@194) (< $generated@@194 ($generated@@30 $generated@@195)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@10 ($generated@@140 $generated@@34 $generated@@41 $generated@@6 $generated@@196 $generated@@195 ($generated@@79 ($generated@@89 $generated@@192) $generated@@194)))) (=> ($generated@@10 ($generated@@140 $generated@@34 $generated@@41 $generated@@6 $generated@@196 $generated@@195 ($generated@@79 ($generated@@89 $generated@@192) $generated@@194))) (=> (and (and (and (<= ($generated@@71 0) $generated@@197) (< $generated@@197 $generated@@193)) (and (<= ($generated@@71 0) $generated@@198) (< $generated@@198 $generated@@193))) (and (not (and (= $generated@@192 $generated@@197) (= $generated@@194 $generated@@198))) (= (ControlFlow 0 7) (- 0 6)))) (or (or (or (not (= $generated@@195 $generated@@195)) (not true)) (or (not (= ($generated@@79 ($generated@@89 $generated@@192) $generated@@194) ($generated@@79 ($generated@@89 $generated@@197) $generated@@198))) (not true))) (= (+ $generated@@192 $generated@@194) (+ $generated@@197 $generated@@198)))))))))))))
(let (($generated@@207  (=> (and (< $generated@@194 ($generated@@71 0)) (= (ControlFlow 0 14) 7)) $generated@@206)))
(let (($generated@@208  (=> (and (<= ($generated@@71 0) $generated@@194) (= (ControlFlow 0 13) 7)) $generated@@206)))
(let (($generated@@209  (=> (and (<= ($generated@@71 0) $generated@@192) (< $generated@@192 $generated@@193)) (and (=> (= (ControlFlow 0 15) 13) $generated@@208) (=> (= (ControlFlow 0 15) 14) $generated@@207)))))
(let (($generated@@210  (=> (and (not (and (<= ($generated@@71 0) $generated@@192) (< $generated@@192 $generated@@193))) (= (ControlFlow 0 12) 7)) $generated@@206)))
(let (($generated@@211  (=> (< $generated@@192 ($generated@@71 0)) (and (=> (= (ControlFlow 0 17) 15) $generated@@209) (=> (= (ControlFlow 0 17) 12) $generated@@210)))))
(let (($generated@@212  (=> (<= ($generated@@71 0) $generated@@192) (and (=> (= (ControlFlow 0 16) 15) $generated@@209) (=> (= (ControlFlow 0 16) 12) $generated@@210)))))
(let (($generated@@213  (and (=> (= (ControlFlow 0 18) 16) $generated@@212) (=> (= (ControlFlow 0 18) 17) $generated@@211))))
(let (($generated@@214  (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($generated@@23 $generated@@195) ($generated@@30 $generated@@195))) (=> (= ($generated@@23 $generated@@195) ($generated@@30 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@30 $generated@@195) $generated@@193)) (=> (= ($generated@@30 $generated@@195) $generated@@193) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@215 Int) ($generated@@216 Int) ) (!  (=> (and (and (<= ($generated@@71 0) $generated@@215) (< $generated@@215 $generated@@193)) (and (<= ($generated@@71 0) $generated@@216) (< $generated@@216 $generated@@193))) (= ($generated@@12 ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@199 $generated@@195) ($generated@@79 ($generated@@89 $generated@@215) $generated@@216)))) (+ $generated@@216 $generated@@215)))
 :pattern ( ($generated@@39 $generated@@7 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@199 $generated@@195) ($generated@@79 ($generated@@89 $generated@@215) $generated@@216))))
)))))))))
(let (($generated@@217  (=> (and (and (and ($generated@@90 $generated@@200) ($generated@@201 $generated@@200)) ($generated@@67 $generated@@202 $generated@@200)) (and (and (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@200 $generated@@218) $generated@@219) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@202 $generated@@218) $generated@@219)) (exists (($generated@@220 Int) ($generated@@221 Int) )  (and (and (and (and (<= ($generated@@71 0) $generated@@220) (< $generated@@220 $generated@@193)) (and (<= ($generated@@71 0) $generated@@221) (< $generated@@221 $generated@@193))) (= $generated@@218 $generated@@195)) (= $generated@@219 ($generated@@79 ($generated@@89 $generated@@220) $generated@@221)))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@200 $generated@@218) $generated@@219))
)) (forall (($generated@@222 Int) ($generated@@223 Int) )  (=> (and (and (<= ($generated@@71 0) $generated@@222) (< $generated@@222 $generated@@193)) (and (<= ($generated@@71 0) $generated@@223) (< $generated@@223 $generated@@193))) (= ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@200 $generated@@195) ($generated@@79 ($generated@@89 $generated@@222) $generated@@223)) ($generated@@76 $generated@@7 ($generated@@11 (+ $generated@@222 $generated@@223))))))) (and (= $generated@@199 $generated@@200) (= (ControlFlow 0 5) 2)))) $generated@@214)))
(let (($generated@@224  (=> (= $generated@@196 ($generated@@141 $generated@@25 $generated@@203 $generated@@1 false)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (<= 0 $generated@@193)) (=> (<= 0 $generated@@193) (and (=> (= (ControlFlow 0 19) (- 0 20)) (<= 0 $generated@@193)) (=> (<= 0 $generated@@193) (=> (and (and (and (or (not (= $generated@@195 $generated@@25)) (not true)) ($generated@@27 $generated@@34 $generated@@195 ($generated@@24 $generated))) (and (not ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@203 $generated@@195) $generated@@1)))) (= ($generated@@23 $generated@@195) $generated@@193))) (and (and (= ($generated@@30 $generated@@195) $generated@@193) (= $generated@@202 ($generated@@44 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@203 $generated@@195 ($generated@@44 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@203 $generated@@195) $generated@@1 ($generated@@76 $generated@@6 ($generated@@9 true)))))) (and ($generated@@90 $generated@@202) ($generated@@201 $generated@@202)))) (and (=> (= (ControlFlow 0 19) 18) $generated@@213) (=> (= (ControlFlow 0 19) 5) $generated@@217))))))))))
(let (($generated@@225  (=> (and (and (and ($generated@@90 $generated@@203) ($generated@@201 $generated@@203)) (<= ($generated@@71 0) $generated@@193)) (and (and ($generated@@27 $generated@@34 $generated@@204 ($generated@@35 $generated)) ($generated@@33 $generated@@34 $generated@@204 ($generated@@35 $generated) $generated@@203)) (and (= 0 $generated@@205) (= (ControlFlow 0 22) 19)))) $generated@@224)))
$generated@@225)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
