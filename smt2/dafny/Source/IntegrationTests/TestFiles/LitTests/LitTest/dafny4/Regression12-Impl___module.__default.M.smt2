(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@145 (T@U) Int)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@U) T@U)
(declare-fun $generated@@198 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@26) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)) ($generated@@24 $generated@@30))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@28 $generated@@29)))
)))
(assert (= ($generated@@8 $generated@@31) 4))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@25 $generated@@31 $generated@@35 $generated@@32)  (or (= $generated@@35 $generated@@33) (= ($generated@@34 $generated@@35) $generated@@32)))
 :pattern ( ($generated@@25 $generated@@31 $generated@@35 $generated@@32))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39) ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@40 $generated@@44 $generated@@45) ($generated@@27 $generated@@42 $generated@@43))  (and ($generated@@41 $generated@@44 $generated@@42) ($generated@@41 $generated@@45 $generated@@43)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@40 $generated@@44 $generated@@45) ($generated@@27 $generated@@42 $generated@@43)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@47 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@47 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@8 $generated@@48) 5)) (= ($generated@@8 $generated@@49) 6)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@8 ($generated@@50 $generated@@65 $generated@@66)) 7))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@71 $generated@@32 $generated@@72)  (or (= $generated@@71 $generated@@33) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@31 ($generated@@50 $generated@@48 $generated@@49) $generated@@72 $generated@@71) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@31 $generated@@71 $generated@@32 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@73 $generated@@79) (= ($generated@@36 $generated@@26 ($generated@@40 $generated@@77 $generated@@78) ($generated@@27 $generated@@75 $generated@@76) $generated@@79)  (and ($generated@@74 $generated@@77 $generated@@75 $generated@@79) ($generated@@74 $generated@@78 $generated@@76 $generated@@79))))
 :pattern ( ($generated@@36 $generated@@26 ($generated@@40 $generated@@77 $generated@@78) ($generated@@27 $generated@@75 $generated@@76) $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@24 $generated@@81) (= ($generated@@80 $generated@@81) $generated@@2))
 :pattern ( ($generated@@24 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@46 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@46 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@24 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@40 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@24 $generated@@85))
)))
(assert (= ($generated@@8 $generated@@88) 8))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@25 $generated@@88 $generated@@91 ($generated@@89 $generated@@92)) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@90 $generated@@91 $generated@@93) ($generated@@41 $generated@@93 $generated@@92))
 :pattern ( ($generated@@90 $generated@@91 $generated@@93))
)))
 :pattern ( ($generated@@25 $generated@@88 $generated@@91 ($generated@@89 $generated@@92)))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@74 ($generated@@82 $generated@@97 $generated@@94) $generated@@95 $generated@@96) ($generated@@36 $generated@@97 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@74 ($generated@@82 $generated@@97 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@41 $generated@@98 $generated@@37) (and (= ($generated@@82 $generated@@31 ($generated@@46 $generated@@31 $generated@@98)) $generated@@98) ($generated@@25 $generated@@31 ($generated@@46 $generated@@31 $generated@@98) $generated@@37)))
 :pattern ( ($generated@@41 $generated@@98 $generated@@37))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@41 $generated@@99 $generated@@32) (and (= ($generated@@82 $generated@@31 ($generated@@46 $generated@@31 $generated@@99)) $generated@@99) ($generated@@25 $generated@@31 ($generated@@46 $generated@@31 $generated@@99) $generated@@32)))
 :pattern ( ($generated@@41 $generated@@99 $generated@@32))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@25 $generated@@31 $generated@@100 $generated@@37)  (and ($generated@@25 $generated@@31 $generated@@100 $generated@@32) (or (not (= $generated@@100 $generated@@33)) (not true))))
 :pattern ( ($generated@@25 $generated@@31 $generated@@100 $generated@@37))
 :pattern ( ($generated@@25 $generated@@31 $generated@@100 $generated@@32))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@41 ($generated@@82 $generated@@103 $generated@@101) $generated@@102) ($generated@@25 $generated@@103 $generated@@101 $generated@@102))
 :pattern ( ($generated@@41 ($generated@@82 $generated@@103 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@36 $generated@@88 $generated@@104 ($generated@@89 $generated@@105) $generated@@106) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@90 $generated@@104 $generated@@107) ($generated@@74 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@90 $generated@@104 $generated@@107))
)))
 :pattern ( ($generated@@36 $generated@@88 $generated@@104 ($generated@@89 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@108 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@108 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@108 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@108 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@108 $generated@@116 $generated@@117)) $generated@@0)
 :pattern ( ($generated@@108 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@80 ($generated@@40 $generated@@118 $generated@@119)) $generated@@2)
 :pattern ( ($generated@@40 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@120 ($generated@@27 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@27 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@123 ($generated@@27 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@27 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@126 ($generated@@40 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@40 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@129 ($generated@@40 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@40 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@89 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@89 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@115 ($generated@@89 $generated@@134)) $generated)
 :pattern ( ($generated@@89 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@46 $generated@@136 ($generated@@82 $generated@@136 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@82 $generated@@136 $generated@@135))
)))
(assert (= ($generated@@8 $generated@@137) 9))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@36 $generated@@137 $generated@@140 ($generated@@108 $generated@@141 $generated@@142) $generated@@143) (forall (($generated@@144 T@U) ) (!  (=> ($generated@@90 ($generated@@139 $generated@@140) $generated@@144) (and ($generated@@74 ($generated@@47 $generated@@49 $generated@@49 ($generated@@138 $generated@@140) $generated@@144) $generated@@142 $generated@@143) ($generated@@74 $generated@@144 $generated@@141 $generated@@143)))
 :pattern ( ($generated@@47 $generated@@49 $generated@@49 ($generated@@138 $generated@@140) $generated@@144))
 :pattern ( ($generated@@90 ($generated@@139 $generated@@140) $generated@@144))
)))
 :pattern ( ($generated@@36 $generated@@137 $generated@@140 ($generated@@108 $generated@@141 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (< ($generated@@145 $generated@@147) ($generated@@146 ($generated@@40 $generated@@147 $generated@@148)))
 :pattern ( ($generated@@40 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (< ($generated@@145 $generated@@150) ($generated@@146 ($generated@@40 $generated@@149 $generated@@150)))
 :pattern ( ($generated@@40 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (!  (not ($generated@@90 ($generated@@139 $generated@@151) $generated@@152))
 :pattern ( ($generated@@90 ($generated@@139 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@41 $generated@@153 ($generated@@108 $generated@@154 $generated@@155)) (and (= ($generated@@82 $generated@@137 ($generated@@46 $generated@@137 $generated@@153)) $generated@@153) ($generated@@25 $generated@@137 ($generated@@46 $generated@@137 $generated@@153) ($generated@@108 $generated@@154 $generated@@155))))
 :pattern ( ($generated@@41 $generated@@153 ($generated@@108 $generated@@154 $generated@@155)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@41 $generated@@158 ($generated@@27 $generated@@156 $generated@@157)) (and (= ($generated@@82 $generated@@26 ($generated@@46 $generated@@26 $generated@@158)) $generated@@158) ($generated@@25 $generated@@26 ($generated@@46 $generated@@26 $generated@@158) ($generated@@27 $generated@@156 $generated@@157))))
 :pattern ( ($generated@@41 $generated@@158 ($generated@@27 $generated@@156 $generated@@157)))
)))
(assert  (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@159 $generated@@162 $generated@@163 $generated@@164 ($generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@159 $generated@@169 $generated@@170 $generated@@171 ($generated@@161 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@159 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@159 $generated@@178 $generated@@179 $generated@@180 ($generated@@161 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@159 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@13 ($generated@@159 $generated@@31 $generated@@48 $generated@@9 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@31 ($generated@@50 $generated@@48 $generated@@49) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@159 $generated@@31 $generated@@48 $generated@@9 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (and (= ($generated@@115 ($generated@@27 $generated@@194 $generated@@195)) $generated@@3) (= ($generated@@193 ($generated@@27 $generated@@194 $generated@@195)) $generated@@6))
 :pattern ( ($generated@@27 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (!  (or (= $generated@@196 $generated@@151) (exists (($generated@@197 T@U) ) ($generated@@90 ($generated@@139 $generated@@196) $generated@@197)))
 :pattern ( ($generated@@139 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ) (!  (or (= $generated@@199 $generated@@151) (exists (($generated@@200 T@U) ) ($generated@@90 ($generated@@198 $generated@@199) $generated@@200)))
 :pattern ( ($generated@@198 $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@90 ($generated@@201 $generated@@202) $generated@@203)  (and ($generated@@90 ($generated@@139 $generated@@202) ($generated@@126 ($generated@@46 $generated@@26 $generated@@203))) (= ($generated@@47 $generated@@49 $generated@@49 ($generated@@138 $generated@@202) ($generated@@126 ($generated@@46 $generated@@26 $generated@@203))) ($generated@@129 ($generated@@46 $generated@@26 $generated@@203)))))
 :pattern ( ($generated@@90 ($generated@@201 $generated@@202) $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@90 ($generated@@198 $generated@@204) $generated@@205) (exists (($generated@@206 T@U) ) (!  (and ($generated@@90 ($generated@@139 $generated@@204) $generated@@206) (= $generated@@205 ($generated@@47 $generated@@49 $generated@@49 ($generated@@138 $generated@@204) $generated@@206)))
 :pattern ( ($generated@@90 ($generated@@139 $generated@@204) $generated@@206))
 :pattern ( ($generated@@47 $generated@@49 $generated@@49 ($generated@@138 $generated@@204) $generated@@206))
)))
 :pattern ( ($generated@@90 ($generated@@198 $generated@@204) $generated@@205))
)))
(assert (forall (($generated@@207 T@U) ) (! (= ($generated@@145 ($generated@@82 $generated@@26 $generated@@207)) ($generated@@146 $generated@@207))
 :pattern ( ($generated@@145 ($generated@@82 $generated@@26 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@41 $generated@@208 ($generated@@89 $generated@@209)) (and (= ($generated@@82 $generated@@88 ($generated@@46 $generated@@88 $generated@@208)) $generated@@208) ($generated@@25 $generated@@88 ($generated@@46 $generated@@88 $generated@@208) ($generated@@89 $generated@@209))))
 :pattern ( ($generated@@41 $generated@@208 ($generated@@89 $generated@@209)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@25 $generated@@137 $generated@@210 ($generated@@108 $generated@@211 $generated@@212)) (forall (($generated@@213 T@U) ) (!  (=> ($generated@@90 ($generated@@139 $generated@@210) $generated@@213) (and ($generated@@41 ($generated@@47 $generated@@49 $generated@@49 ($generated@@138 $generated@@210) $generated@@213) $generated@@212) ($generated@@41 $generated@@213 $generated@@211)))
 :pattern ( ($generated@@47 $generated@@49 $generated@@49 ($generated@@138 $generated@@210) $generated@@213))
 :pattern ( ($generated@@90 ($generated@@139 $generated@@210) $generated@@213))
)))
 :pattern ( ($generated@@25 $generated@@137 $generated@@210 ($generated@@108 $generated@@211 $generated@@212)))
)))
(assert (= ($generated@@115 $generated@@37) $generated@@4))
(assert (= ($generated@@193 $generated@@37) $generated@@7))
(assert (= ($generated@@115 $generated@@32) $generated@@5))
(assert (= ($generated@@193 $generated@@32) $generated@@7))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@73 $generated@@216) (and ($generated@@24 $generated@@214) (exists (($generated@@217 T@U) ) (! ($generated@@36 $generated@@26 $generated@@214 ($generated@@27 $generated@@215 $generated@@217) $generated@@216)
 :pattern ( ($generated@@36 $generated@@26 $generated@@214 ($generated@@27 $generated@@215 $generated@@217) $generated@@216))
)))) ($generated@@74 ($generated@@126 $generated@@214) $generated@@215 $generated@@216))
 :pattern ( ($generated@@74 ($generated@@126 $generated@@214) $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and ($generated@@73 $generated@@220) (and ($generated@@24 $generated@@218) (exists (($generated@@221 T@U) ) (! ($generated@@36 $generated@@26 $generated@@218 ($generated@@27 $generated@@221 $generated@@219) $generated@@220)
 :pattern ( ($generated@@36 $generated@@26 $generated@@218 ($generated@@27 $generated@@221 $generated@@219) $generated@@220))
)))) ($generated@@74 ($generated@@129 $generated@@218) $generated@@219 $generated@@220))
 :pattern ( ($generated@@74 ($generated@@129 $generated@@218) $generated@@219 $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ) (!  (or (= $generated@@222 $generated@@151) (exists (($generated@@223 T@U) ($generated@@224 T@U) ) ($generated@@90 ($generated@@201 $generated@@222) ($generated@@82 $generated@@26 ($generated@@40 $generated@@223 $generated@@224)))))
 :pattern ( ($generated@@201 $generated@@222))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> ($generated@@25 $generated@@137 $generated@@225 ($generated@@108 $generated@@226 $generated@@227)) (and (and ($generated@@25 $generated@@88 ($generated@@139 $generated@@225) ($generated@@89 $generated@@226)) ($generated@@25 $generated@@88 ($generated@@198 $generated@@225) ($generated@@89 $generated@@227))) ($generated@@25 $generated@@88 ($generated@@201 $generated@@225) ($generated@@89 ($generated@@27 $generated@@226 $generated@@227)))))
 :pattern ( ($generated@@25 $generated@@137 $generated@@225 ($generated@@108 $generated@@226 $generated@@227)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 (T@U) Bool)
(declare-fun $generated@@233 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@234  (=> (= $generated@@228 ($generated@@160 $generated@@33 $generated@@229 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) (not ($generated@@90 ($generated@@139 $generated@@230) ($generated@@82 $generated@@31 $generated@@33)))) (=> (not ($generated@@90 ($generated@@139 $generated@@230) ($generated@@82 $generated@@31 $generated@@33))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (not ($generated@@90 $generated@@231 ($generated@@82 $generated@@31 $generated@@33)))) (=> (not ($generated@@90 $generated@@231 ($generated@@82 $generated@@31 $generated@@33))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@90 ($generated@@139 $generated@@230) ($generated@@82 $generated@@31 $generated@@33)))) (=> (not ($generated@@90 ($generated@@139 $generated@@230) ($generated@@82 $generated@@31 $generated@@33))) (=> (= (ControlFlow 0 2) (- 0 1)) (not ($generated@@90 ($generated@@198 $generated@@230) ($generated@@82 $generated@@31 $generated@@33)))))))))))))
(let (($generated@@235  (=> (and (and (and ($generated@@73 $generated@@229) ($generated@@232 $generated@@229)) (and ($generated@@25 $generated@@137 $generated@@230 ($generated@@108 $generated@@37 $generated@@37)) ($generated@@36 $generated@@137 $generated@@230 ($generated@@108 $generated@@37 $generated@@37) $generated@@229))) (and (and ($generated@@25 $generated@@88 $generated@@231 ($generated@@89 $generated@@37)) ($generated@@36 $generated@@88 $generated@@231 ($generated@@89 $generated@@37) $generated@@229)) (and (= 1 $generated@@233) (= (ControlFlow 0 6) 2)))) $generated@@234)))
$generated@@235)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
