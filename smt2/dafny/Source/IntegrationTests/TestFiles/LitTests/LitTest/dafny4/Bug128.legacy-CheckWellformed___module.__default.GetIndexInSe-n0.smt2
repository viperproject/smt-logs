(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@29 (T@U T@U T@U) Int)
(declare-fun $generated@@30 (T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@U Int) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@49 () Int)
(declare-fun $generated@@50 (T@U T@U T@U) Int)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@53 (T@U T@U T@U) Bool)
(declare-fun $generated@@54 (T@T T@U T@U) Bool)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@90 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@94 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@95 (T@T T@T) T@T)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ) (!  (not ($generated@@20 $generated@@21 $generated@@22))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22))
)))
(assert (= ($generated@@23 $generated@@21) 0))
(assert (forall (($generated@@25 Int) ) (! (= ($generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@24 $generated@@25))
)))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@T) ) (! (= ($generated@@26 $generated@@28 $generated@@27) $generated@@27)
 :pattern ( ($generated@@26 $generated@@28 $generated@@27))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@30 $generated@@32 $generated@@33 $generated@@34) (and (and (<= ($generated@@24 0) ($generated@@29 $generated@@32 $generated@@33 $generated@@34)) (< ($generated@@29 $generated@@32 $generated@@33 $generated@@34) ($generated@@23 $generated@@33))) (= ($generated@@31 $generated@@33 ($generated@@29 $generated@@32 $generated@@33 $generated@@34)) $generated@@34)))
 :pattern ( ($generated@@29 $generated@@32 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@37)  (and (= ($generated@@23 $generated@@36) ($generated@@23 $generated@@37)) (forall (($generated@@38 Int) ) (!  (=> (and (<= 0 $generated@@38) (< $generated@@38 ($generated@@23 $generated@@36))) (= ($generated@@31 $generated@@36 $generated@@38) ($generated@@31 $generated@@37 $generated@@38)))
 :pattern ( ($generated@@31 $generated@@36 $generated@@38))
 :pattern ( ($generated@@31 $generated@@37 $generated@@38))
))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 ($generated@@39 $generated@@42 $generated@@41)) $generated@@41)
 :pattern ( ($generated@@39 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@43 ($generated@@40 $generated@@48 $generated@@45) $generated@@46 $generated@@47) ($generated@@44 $generated@@48 $generated@@45 $generated@@46 $generated@@47))
 :pattern ( ($generated@@43 ($generated@@40 $generated@@48 $generated@@45) $generated@@46 $generated@@47))
)))
(assert (= ($generated@@3 $generated@@51) 3))
(assert  (=> (<= 0 $generated@@49) (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> (or ($generated@@53 $generated@@57 ($generated@@26 $generated@@51 $generated@@59) $generated@@60) (and (< 0 $generated@@49) (and (and (and ($generated@@52 $generated@@58) ($generated@@54 $generated@@51 $generated@@59 ($generated@@55 $generated@@57))) ($generated@@56 $generated@@60 $generated@@57)) ($generated@@20 $generated@@59 $generated@@60)))) (and ($generated@@30 $generated@@57 ($generated@@26 $generated@@51 $generated@@59) $generated@@60) (= ($generated@@50 $generated@@57 ($generated@@26 $generated@@51 $generated@@59) $generated@@60) (let (($generated@@61 ($generated@@29 $generated@@57 ($generated@@26 $generated@@51 $generated@@59) $generated@@60)))
$generated@@61))))
 :weight 3
 :pattern ( ($generated@@50 $generated@@57 ($generated@@26 $generated@@51 $generated@@59) $generated@@60) ($generated@@52 $generated@@58))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@20 $generated@@62 $generated@@63) (exists (($generated@@64 Int) ) (!  (and (and (<= 0 $generated@@64) (< $generated@@64 ($generated@@23 $generated@@62))) (= ($generated@@31 $generated@@62 $generated@@64) $generated@@63))
 :pattern ( ($generated@@31 $generated@@62 $generated@@64))
)))
 :pattern ( ($generated@@20 $generated@@62 $generated@@63))
)))
(assert  (=> (<= 0 $generated@@49) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@53 $generated@@65 $generated@@66 $generated@@67) (and (< 0 $generated@@49) (and (and ($generated@@54 $generated@@51 $generated@@66 ($generated@@55 $generated@@65)) ($generated@@56 $generated@@67 $generated@@65)) ($generated@@20 $generated@@66 $generated@@67)))) (and (and (<= ($generated@@24 0) ($generated@@50 $generated@@65 $generated@@66 $generated@@67)) (< ($generated@@50 $generated@@65 $generated@@66 $generated@@67) ($generated@@23 $generated@@66))) (= ($generated@@31 $generated@@66 ($generated@@50 $generated@@65 $generated@@66 $generated@@67)) $generated@@67)))
 :pattern ( ($generated@@50 $generated@@65 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@35 $generated@@68 $generated@@69) (= $generated@@68 $generated@@69))
 :pattern ( ($generated@@35 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@56 $generated@@70 $generated) (and (= ($generated@@40 $generated@@5 ($generated@@39 $generated@@5 $generated@@70)) $generated@@70) ($generated@@54 $generated@@5 ($generated@@39 $generated@@5 $generated@@70) $generated)))
 :pattern ( ($generated@@56 $generated@@70 $generated))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@40 $generated@@73 $generated@@71) $generated@@72) ($generated@@54 $generated@@73 $generated@@71 $generated@@72))
 :pattern ( ($generated@@56 ($generated@@40 $generated@@73 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (<= 0 ($generated@@23 $generated@@74))
 :pattern ( ($generated@@23 $generated@@74))
)))
(assert (= ($generated@@3 $generated@@75) 4))
(assert  (=> (<= 0 $generated@@49) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@53 $generated@@76 ($generated@@26 $generated@@51 $generated@@78) ($generated@@26 $generated@@75 $generated@@79)) (and (< 0 $generated@@49) (and (and (and ($generated@@52 $generated@@77) ($generated@@54 $generated@@51 $generated@@78 ($generated@@55 $generated@@76))) ($generated@@56 $generated@@79 $generated@@76)) ($generated@@20 $generated@@78 $generated@@79)))) (and ($generated@@30 $generated@@76 ($generated@@26 $generated@@51 $generated@@78) ($generated@@26 $generated@@75 $generated@@79)) (= ($generated@@50 $generated@@76 ($generated@@26 $generated@@51 $generated@@78) ($generated@@26 $generated@@75 $generated@@79)) (let (($generated@@80 ($generated@@29 $generated@@76 ($generated@@26 $generated@@51 $generated@@78) ($generated@@26 $generated@@75 $generated@@79))))
$generated@@80))))
 :weight 3
 :pattern ( ($generated@@50 $generated@@76 ($generated@@26 $generated@@51 $generated@@78) ($generated@@26 $generated@@75 $generated@@79)) ($generated@@52 $generated@@77))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@81 ($generated@@55 $generated@@82) $generated@@83) (forall (($generated@@84 Int) ) (!  (=> (and (<= 0 $generated@@84) (< $generated@@84 ($generated@@23 $generated@@81))) ($generated@@43 ($generated@@31 $generated@@81 $generated@@84) $generated@@82 $generated@@83))
 :pattern ( ($generated@@31 $generated@@81 $generated@@84))
)))
 :pattern ( ($generated@@44 $generated@@51 $generated@@81 ($generated@@55 $generated@@82) $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 ($generated@@55 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@55 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@19 ($generated@@55 $generated@@87)) $generated@@1)
 :pattern ( ($generated@@55 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@39 $generated@@89 ($generated@@40 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@40 $generated@@89 $generated@@88))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@90 $generated@@100 $generated@@101 $generated@@102 ($generated@@96 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@90 $generated@@107 $generated@@108 $generated@@109 ($generated@@96 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@90 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@90 $generated@@116 $generated@@117 $generated@@118 ($generated@@96 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@90 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))) (= ($generated@@3 $generated@@91) 5)) (= ($generated@@3 $generated@@92) 6)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@94 $generated@@125 $generated@@126 ($generated@@97 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@127) $generated@@129) $generated@@127)
 :weight 0
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@94 $generated@@130 $generated@@131 ($generated@@97 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@94 $generated@@130 $generated@@131 $generated@@133 $generated@@135)))
 :weight 0
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (= ($generated@@3 ($generated@@95 $generated@@136 $generated@@137)) 7))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@98 ($generated@@95 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@95 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@99 ($generated@@95 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@95 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Bool) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@8 ($generated@@90 $generated@@91 $generated@@92 $generated@@4 ($generated@@93 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))  (=> (and (or (not (= $generated@@146 $generated@@142)) (not true)) ($generated@@8 ($generated@@39 $generated@@4 ($generated@@94 $generated@@92 $generated@@75 ($generated@@94 $generated@@91 ($generated@@95 $generated@@92 $generated@@75) $generated@@143 $generated@@146) $generated@@144)))) $generated@@145))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92 $generated@@4 ($generated@@93 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@56 $generated@@148 ($generated@@55 $generated@@149)) (and (= ($generated@@40 $generated@@51 ($generated@@39 $generated@@51 $generated@@148)) $generated@@148) ($generated@@54 $generated@@51 ($generated@@39 $generated@@51 $generated@@148) ($generated@@55 $generated@@149))))
 :pattern ( ($generated@@56 $generated@@148 ($generated@@55 $generated@@149)))
)))
(assert  (=> (<= 0 $generated@@49) (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (or ($generated@@53 $generated@@150 $generated@@152 $generated@@153) (and (< 0 $generated@@49) (and (and (and ($generated@@52 $generated@@151) ($generated@@54 $generated@@51 $generated@@152 ($generated@@55 $generated@@150))) ($generated@@56 $generated@@153 $generated@@150)) ($generated@@20 $generated@@152 $generated@@153)))) (and ($generated@@30 $generated@@150 $generated@@152 $generated@@153) (= ($generated@@50 $generated@@150 $generated@@152 $generated@@153) (let (($generated@@154 ($generated@@29 $generated@@150 $generated@@152 $generated@@153)))
$generated@@154))))
 :pattern ( ($generated@@50 $generated@@150 $generated@@152 $generated@@153) ($generated@@52 $generated@@151))
))))
(assert (forall (($generated@@155 Int) ) (! (= ($generated@@40 $generated@@5 ($generated@@9 ($generated@@24 $generated@@155))) ($generated@@26 $generated@@75 ($generated@@40 $generated@@5 ($generated@@9 $generated@@155))))
 :pattern ( ($generated@@40 $generated@@5 ($generated@@9 ($generated@@24 $generated@@155))))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@40 $generated@@157 ($generated@@26 $generated@@157 $generated@@156)) ($generated@@26 $generated@@75 ($generated@@40 $generated@@157 $generated@@156)))
 :pattern ( ($generated@@40 $generated@@157 ($generated@@26 $generated@@157 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> (= ($generated@@23 $generated@@158) 0) (= $generated@@158 $generated@@21))
 :pattern ( ($generated@@23 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! ($generated@@44 $generated@@5 $generated@@160 $generated $generated@@159)
 :pattern ( ($generated@@44 $generated@@5 $generated@@160 $generated $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@54 $generated@@51 $generated@@161 ($generated@@55 $generated@@162)) (forall (($generated@@163 Int) ) (!  (=> (and (<= 0 $generated@@163) (< $generated@@163 ($generated@@23 $generated@@161))) ($generated@@56 ($generated@@31 $generated@@161 $generated@@163) $generated@@162))
 :pattern ( ($generated@@31 $generated@@161 $generated@@163))
)))
 :pattern ( ($generated@@54 $generated@@51 $generated@@161 ($generated@@55 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (! ($generated@@54 $generated@@5 $generated@@164 $generated)
 :pattern ( ($generated@@54 $generated@@5 $generated@@164 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@165 () T@U)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Int)
(declare-fun $generated@@170 () Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@174  (=> (and (and (<= ($generated@@24 0) ($generated@@50 $generated@@165 $generated@@166 $generated@@167)) (< ($generated@@50 $generated@@165 $generated@@166 $generated@@167) ($generated@@23 $generated@@166))) (and ($generated@@44 $generated@@51 $generated@@166 ($generated@@55 $generated@@165) $generated@@168) ($generated@@43 $generated@@167 $generated@@165 $generated@@168))) (and (=> (= (ControlFlow 0 15) (- 0 17)) ($generated@@20 $generated@@166 $generated@@167)) (=> ($generated@@20 $generated@@166 $generated@@167) (and (=> (= (ControlFlow 0 15) (- 0 16)) (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) (< ($generated@@169 $generated@@166) ($generated@@169 $generated@@166)))) (=> (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) (< ($generated@@169 $generated@@166) ($generated@@169 $generated@@166))) (=> (and (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) ($generated@@53 $generated@@165 $generated@@166 $generated@@167)) (= (ControlFlow 0 15) (- 0 14))) (and (<= 0 ($generated@@50 $generated@@165 $generated@@166 $generated@@167)) (< ($generated@@50 $generated@@165 $generated@@166 $generated@@167) ($generated@@23 $generated@@166)))))))))))
(let (($generated@@175  (=> (and (< ($generated@@50 $generated@@165 $generated@@166 $generated@@167) ($generated@@24 0)) (= (ControlFlow 0 21) 15)) $generated@@174)))
(let (($generated@@176  (=> (<= ($generated@@24 0) ($generated@@50 $generated@@165 $generated@@166 $generated@@167)) (=> (and ($generated@@44 $generated@@51 $generated@@166 ($generated@@55 $generated@@165) $generated@@168) ($generated@@43 $generated@@167 $generated@@165 $generated@@168)) (and (=> (= (ControlFlow 0 18) (- 0 20)) ($generated@@20 $generated@@166 $generated@@167)) (=> ($generated@@20 $generated@@166 $generated@@167) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) (< ($generated@@169 $generated@@166) ($generated@@169 $generated@@166)))) (=> (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) (< ($generated@@169 $generated@@166) ($generated@@169 $generated@@166))) (=> (and (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) ($generated@@53 $generated@@165 $generated@@166 $generated@@167)) (= (ControlFlow 0 18) 15)) $generated@@174)))))))))
(let (($generated@@177  (=> (and ($generated@@44 $generated@@51 $generated@@166 ($generated@@55 $generated@@165) $generated@@168) ($generated@@43 $generated@@167 $generated@@165 $generated@@168)) (and (=> (= (ControlFlow 0 22) (- 0 24)) ($generated@@20 $generated@@166 $generated@@167)) (=> ($generated@@20 $generated@@166 $generated@@167) (and (=> (= (ControlFlow 0 22) (- 0 23)) (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) (< ($generated@@169 $generated@@166) ($generated@@169 $generated@@166)))) (=> (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) (< ($generated@@169 $generated@@166) ($generated@@169 $generated@@166))) (=> (or (and ($generated@@35 $generated@@166 $generated@@166) (= $generated@@167 $generated@@167)) ($generated@@53 $generated@@165 $generated@@166 $generated@@167)) (and (=> (= (ControlFlow 0 22) 18) $generated@@176) (=> (= (ControlFlow 0 22) 21) $generated@@175))))))))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= ($generated@@24 0) ($generated@@50 $generated@@165 $generated@@166 $generated@@167))) (=> (<= ($generated@@24 0) ($generated@@50 $generated@@165 $generated@@166 $generated@@167)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (< ($generated@@50 $generated@@165 $generated@@166 $generated@@167) ($generated@@23 $generated@@166))) (=> (< ($generated@@50 $generated@@165 $generated@@166 $generated@@167) ($generated@@23 $generated@@166)) (=> (= (ControlFlow 0 3) (- 0 2)) (= ($generated@@31 $generated@@166 ($generated@@50 $generated@@165 $generated@@166 $generated@@167)) $generated@@167))))))))
(let (($generated@@179  (and (=> (= (ControlFlow 0 6) (- 0 7)) (or (and ($generated@@54 $generated@@5 ($generated@@9 (- ($generated@@23 $generated@@166) 1)) $generated) (and (and (<= ($generated@@24 0) (- ($generated@@23 $generated@@166) 1)) (< (- ($generated@@23 $generated@@166) 1) ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 (- ($generated@@23 $generated@@166) 1)) $generated@@167))) (or (and ($generated@@54 $generated@@5 ($generated@@9 ($generated@@24 0)) $generated) (and (and (<= ($generated@@24 0) ($generated@@24 0)) (< 0 ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 ($generated@@24 0)) $generated@@167))) (or (and ($generated@@54 $generated@@5 ($generated@@9 ($generated@@24 0)) $generated) (and (and (<= ($generated@@24 0) ($generated@@24 0)) (< 0 ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 ($generated@@24 0)) $generated@@167))) (exists (($generated@@180 Int) )  (and (and (<= ($generated@@24 0) $generated@@180) (< $generated@@180 ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 $generated@@180) $generated@@167))))))) (=> (or (and ($generated@@54 $generated@@5 ($generated@@9 (- ($generated@@23 $generated@@166) 1)) $generated) (and (and (<= ($generated@@24 0) (- ($generated@@23 $generated@@166) 1)) (< (- ($generated@@23 $generated@@166) 1) ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 (- ($generated@@23 $generated@@166) 1)) $generated@@167))) (or (and ($generated@@54 $generated@@5 ($generated@@9 ($generated@@24 0)) $generated) (and (and (<= ($generated@@24 0) ($generated@@24 0)) (< 0 ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 ($generated@@24 0)) $generated@@167))) (or (and ($generated@@54 $generated@@5 ($generated@@9 ($generated@@24 0)) $generated) (and (and (<= ($generated@@24 0) ($generated@@24 0)) (< 0 ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 ($generated@@24 0)) $generated@@167))) (exists (($generated@@181 Int) )  (and (and (<= ($generated@@24 0) $generated@@181) (< $generated@@181 ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 $generated@@181) $generated@@167)))))) (=> (and (and (and (<= ($generated@@24 0) $generated@@170) (< $generated@@170 ($generated@@23 $generated@@166))) (= ($generated@@31 $generated@@166 $generated@@170) $generated@@167)) (and (and ($generated@@30 $generated@@165 $generated@@166 $generated@@167) (= ($generated@@50 $generated@@165 $generated@@166 $generated@@167) $generated@@170)) (and ($generated@@54 $generated@@5 ($generated@@9 ($generated@@50 $generated@@165 $generated@@166 $generated@@167)) $generated) (= (ControlFlow 0 6) 3)))) $generated@@178)))))
(let (($generated@@182  (=> (and (not (and (<= ($generated@@24 0) $generated@@170) (< $generated@@170 ($generated@@23 $generated@@166)))) (= (ControlFlow 0 10) 6)) $generated@@179)))
(let (($generated@@183  (=> (and (<= ($generated@@24 0) $generated@@170) (< $generated@@170 ($generated@@23 $generated@@166))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@23 $generated@@166)))) (=> (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@23 $generated@@166))) (=> (= (ControlFlow 0 8) 6) $generated@@179))))))
(let (($generated@@184  (=> (< $generated@@170 ($generated@@24 0)) (and (=> (= (ControlFlow 0 12) 8) $generated@@183) (=> (= (ControlFlow 0 12) 10) $generated@@182)))))
(let (($generated@@185  (=> (<= ($generated@@24 0) $generated@@170) (and (=> (= (ControlFlow 0 11) 8) $generated@@183) (=> (= (ControlFlow 0 11) 10) $generated@@182)))))
(let (($generated@@186  (and (=> (= (ControlFlow 0 13) 11) $generated@@185) (=> (= (ControlFlow 0 13) 12) $generated@@184))))
(let (($generated@@187 true))
(let (($generated@@188  (=> (and (= $generated@@171 ($generated@@93 $generated@@172 $generated@@168 $generated@@2 false)) ($generated@@20 $generated@@166 $generated@@167)) (and (and (=> (= (ControlFlow 0 25) 22) $generated@@177) (=> (= (ControlFlow 0 25) 13) $generated@@186)) (=> (= (ControlFlow 0 25) 1) $generated@@187)))))
(let (($generated@@189  (=> (and ($generated@@52 $generated@@168) ($generated@@173 $generated@@168)) (=> (and (and ($generated@@54 $generated@@51 $generated@@166 ($generated@@55 $generated@@165)) ($generated@@56 $generated@@167 $generated@@165)) (and (= 0 $generated@@49) (= (ControlFlow 0 26) 25))) $generated@@188))))
$generated@@189)))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
