(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U Int Int T@U) Bool)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (Int Int T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@107 (T@U) Int)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (= ($generated@@25 $generated@@26) $generated@@5))
(assert (= ($generated@@8 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> ($generated@@30 $generated@@32) ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
 :pattern ( ($generated@@27 $generated@@28 $generated@@26 ($generated@@29 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ) (! ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34))
 :pattern ( ($generated@@33 $generated@@28 $generated@@26 ($generated@@29 $generated@@34)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert  (=> (<= 1 $generated@@40) (forall (($generated@@48 T@U) ($generated@@49 Int) ($generated@@50 Int) ($generated@@51 T@U) ) (!  (=> (or ($generated@@43 $generated@@49 $generated@@50 ($generated@@37 $generated@@28 $generated@@51)) (and (< 1 $generated@@40) ($generated@@33 $generated@@28 $generated@@51 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@13 ($generated@@37 $generated@@9 ($generated@@12 ($generated@@44 ($generated@@37 $generated@@28 $generated@@51)))))) (let (($generated@@52 ($generated@@37 $generated@@28 ($generated@@45 ($generated@@37 $generated@@28 $generated@@51)))))
(let (($generated@@53 ($generated@@35 ($generated@@15 ($generated@@46 $generated@@10 ($generated@@47 ($generated@@37 $generated@@28 $generated@@51)))))))
 (=> (<= $generated@@49 $generated@@53) (=> (<= $generated@@53 $generated@@50) ($generated@@43 $generated@@53 $generated@@50 $generated@@52)))))) (= ($generated@@41 ($generated@@42 $generated@@48) $generated@@49 $generated@@50 ($generated@@37 $generated@@28 $generated@@51)) (ite ($generated@@44 ($generated@@37 $generated@@28 $generated@@51)) (<= $generated@@49 $generated@@50) (let (($generated@@54 ($generated@@37 $generated@@28 ($generated@@45 ($generated@@37 $generated@@28 $generated@@51)))))
(let (($generated@@55 ($generated@@35 ($generated@@15 ($generated@@46 $generated@@10 ($generated@@47 ($generated@@37 $generated@@28 $generated@@51)))))))
 (and (and (<= $generated@@49 $generated@@55) (<= $generated@@55 $generated@@50)) ($generated@@41 ($generated@@42 $generated@@48) $generated@@55 $generated@@50 $generated@@54))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@48) $generated@@49 $generated@@50 ($generated@@37 $generated@@28 $generated@@51)))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@33 $generated@@28 ($generated@@56 $generated@@59 $generated@@60) ($generated@@29 $generated@@58))  (and ($generated@@57 $generated@@59 $generated@@58) ($generated@@33 $generated@@28 $generated@@60 ($generated@@29 $generated@@58))))
 :pattern ( ($generated@@33 $generated@@28 ($generated@@56 $generated@@59 $generated@@60) ($generated@@29 $generated@@58)))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@44 $generated@@61) (= ($generated@@25 $generated@@61) $generated@@5))
 :pattern ( ($generated@@44 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@25 $generated@@63) $generated@@6))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 ($generated@@46 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@46 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@62 $generated@@67) (exists (($generated@@68 T@U) ($generated@@69 T@U) ) (= $generated@@67 ($generated@@56 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@62 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@44 $generated@@70) (= $generated@@70 $generated@@26))
 :pattern ( ($generated@@44 $generated@@70))
)))
(assert  (=> (<= 1 $generated@@40) (forall (($generated@@71 T@U) ($generated@@72 Int) ($generated@@73 Int) ($generated@@74 T@U) ) (!  (=> (or ($generated@@43 ($generated@@35 $generated@@72) ($generated@@35 $generated@@73) ($generated@@37 $generated@@28 $generated@@74)) (and (< 1 $generated@@40) ($generated@@33 $generated@@28 $generated@@74 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@13 ($generated@@37 $generated@@9 ($generated@@12 ($generated@@44 ($generated@@37 $generated@@28 $generated@@74)))))) (let (($generated@@75 ($generated@@37 $generated@@28 ($generated@@45 ($generated@@37 $generated@@28 $generated@@74)))))
(let (($generated@@76 ($generated@@35 ($generated@@15 ($generated@@46 $generated@@10 ($generated@@47 ($generated@@37 $generated@@28 $generated@@74)))))))
 (=> (<= ($generated@@35 $generated@@72) $generated@@76) (=> (<= $generated@@76 ($generated@@35 $generated@@73)) ($generated@@43 $generated@@76 ($generated@@35 $generated@@73) $generated@@75)))))) (= ($generated@@41 ($generated@@42 $generated@@71) ($generated@@35 $generated@@72) ($generated@@35 $generated@@73) ($generated@@37 $generated@@28 $generated@@74)) (ite ($generated@@44 ($generated@@37 $generated@@28 $generated@@74)) (<= ($generated@@35 $generated@@72) ($generated@@35 $generated@@73)) (let (($generated@@77 ($generated@@37 $generated@@28 ($generated@@45 ($generated@@37 $generated@@28 $generated@@74)))))
(let (($generated@@78 ($generated@@35 ($generated@@15 ($generated@@46 $generated@@10 ($generated@@47 ($generated@@37 $generated@@28 $generated@@74)))))))
 (and (and (<= ($generated@@35 $generated@@72) $generated@@78) (<= $generated@@78 ($generated@@35 $generated@@73))) ($generated@@41 ($generated@@42 $generated@@71) $generated@@78 ($generated@@35 $generated@@73) $generated@@77))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@71) ($generated@@35 $generated@@72) ($generated@@35 $generated@@73) ($generated@@37 $generated@@28 $generated@@74)))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@64 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@27 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@79 ($generated@@64 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (and (= ($generated@@24 ($generated@@29 $generated@@85)) $generated@@4) (= ($generated@@84 ($generated@@29 $generated@@85)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@33 $generated@@28 $generated@@87 ($generated@@29 $generated@@86)) (or ($generated@@44 $generated@@87) ($generated@@62 $generated@@87)))
 :pattern ( ($generated@@62 $generated@@87) ($generated@@33 $generated@@28 $generated@@87 ($generated@@29 $generated@@86)))
 :pattern ( ($generated@@44 $generated@@87) ($generated@@33 $generated@@28 $generated@@87 ($generated@@29 $generated@@86)))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@57 $generated@@88 $generated@@0) (and (= ($generated@@64 $generated@@10 ($generated@@46 $generated@@10 $generated@@88)) $generated@@88) ($generated@@33 $generated@@10 ($generated@@46 $generated@@10 $generated@@88) $generated@@0)))
 :pattern ( ($generated@@57 $generated@@88 $generated@@0))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@57 $generated@@89 $generated) (and (= ($generated@@64 $generated@@9 ($generated@@46 $generated@@9 $generated@@89)) $generated@@89) ($generated@@33 $generated@@9 ($generated@@46 $generated@@9 $generated@@89) $generated)))
 :pattern ( ($generated@@57 $generated@@89 $generated))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@57 ($generated@@64 $generated@@92 $generated@@90) $generated@@91) ($generated@@33 $generated@@92 $generated@@90 $generated@@91))
 :pattern ( ($generated@@57 ($generated@@64 $generated@@92 $generated@@90) $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 Int) ($generated@@96 T@U) ) (! (= ($generated@@41 ($generated@@42 $generated@@93) $generated@@94 $generated@@95 $generated@@96) ($generated@@41 $generated@@93 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@93) $generated@@94 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@25 ($generated@@56 $generated@@97 $generated@@98)) $generated@@6)
 :pattern ( ($generated@@56 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@47 ($generated@@56 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@56 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@45 ($generated@@56 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@56 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@103 ($generated@@29 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@29 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@46 $generated@@106 ($generated@@64 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@64 $generated@@106 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (< ($generated@@107 $generated@@109) ($generated@@108 ($generated@@56 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@56 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (< ($generated@@108 $generated@@112) ($generated@@108 ($generated@@56 $generated@@111 $generated@@112)))
 :pattern ( ($generated@@56 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@30 $generated@@115) (and ($generated@@62 $generated@@113) ($generated@@27 $generated@@28 $generated@@113 ($generated@@29 $generated@@114) $generated@@115))) ($generated@@79 ($generated@@47 $generated@@113) $generated@@114 $generated@@115))
 :pattern ( ($generated@@79 ($generated@@47 $generated@@113) $generated@@114 $generated@@115))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@116 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@116 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@116 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@8 $generated@@117) 4)) (= ($generated@@8 $generated@@118) 5)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@120 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@120 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@120 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@8 $generated@@121) 6)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@8 ($generated@@122 $generated@@163 $generated@@164)) 7))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@13 ($generated@@116 $generated@@117 $generated@@118 $generated@@9 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@13 ($generated@@46 $generated@@9 ($generated@@120 $generated@@118 $generated@@121 ($generated@@120 $generated@@117 ($generated@@122 $generated@@118 $generated@@121) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@9 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@107 ($generated@@64 $generated@@28 $generated@@175)) ($generated@@108 $generated@@175))
 :pattern ( ($generated@@107 ($generated@@64 $generated@@28 $generated@@175)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@57 $generated@@177 ($generated@@29 $generated@@176)) (and (= ($generated@@64 $generated@@28 ($generated@@46 $generated@@28 $generated@@177)) $generated@@177) ($generated@@33 $generated@@28 ($generated@@46 $generated@@28 $generated@@177) ($generated@@29 $generated@@176))))
 :pattern ( ($generated@@57 $generated@@177 ($generated@@29 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@30 $generated@@180) (and ($generated@@62 $generated@@178) ($generated@@27 $generated@@28 $generated@@178 ($generated@@29 $generated@@179) $generated@@180))) ($generated@@27 $generated@@28 ($generated@@45 $generated@@178) ($generated@@29 $generated@@179) $generated@@180))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@45 $generated@@178) ($generated@@29 $generated@@179) $generated@@180))
)))
(assert (= $generated@@26 ($generated@@37 $generated@@28 $generated@@26)))
(assert  (=> (<= 1 $generated@@40) (forall (($generated@@181 T@U) ($generated@@182 Int) ($generated@@183 Int) ($generated@@184 T@U) ) (!  (=> (or ($generated@@43 $generated@@182 $generated@@183 $generated@@184) (and (< 1 $generated@@40) ($generated@@33 $generated@@28 $generated@@184 ($generated@@29 $generated@@0)))) (and (=> (not ($generated@@44 $generated@@184)) (let (($generated@@185 ($generated@@45 $generated@@184)))
(let (($generated@@186 ($generated@@15 ($generated@@46 $generated@@10 ($generated@@47 $generated@@184)))))
 (=> (<= $generated@@182 $generated@@186) (=> (<= $generated@@186 $generated@@183) ($generated@@43 $generated@@186 $generated@@183 $generated@@185)))))) (= ($generated@@41 ($generated@@42 $generated@@181) $generated@@182 $generated@@183 $generated@@184) (ite ($generated@@44 $generated@@184) (<= $generated@@182 $generated@@183) (let (($generated@@187 ($generated@@45 $generated@@184)))
(let (($generated@@188 ($generated@@15 ($generated@@46 $generated@@10 ($generated@@47 $generated@@184)))))
 (and (and (<= $generated@@182 $generated@@188) (<= $generated@@188 $generated@@183)) ($generated@@41 $generated@@181 $generated@@188 $generated@@183 $generated@@187))))))))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@181) $generated@@182 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@56 ($generated@@37 $generated@@121 $generated@@189) ($generated@@37 $generated@@28 $generated@@190)) ($generated@@37 $generated@@28 ($generated@@56 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@56 ($generated@@37 $generated@@121 $generated@@189) ($generated@@37 $generated@@28 $generated@@190)))
)))
(assert (forall (($generated@@191 Int) ) (! (= ($generated@@64 $generated@@10 ($generated@@14 ($generated@@35 $generated@@191))) ($generated@@37 $generated@@121 ($generated@@64 $generated@@10 ($generated@@14 $generated@@191))))
 :pattern ( ($generated@@64 $generated@@10 ($generated@@14 ($generated@@35 $generated@@191))))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@64 $generated@@193 ($generated@@37 $generated@@193 $generated@@192)) ($generated@@37 $generated@@121 ($generated@@64 $generated@@193 $generated@@192)))
 :pattern ( ($generated@@64 $generated@@193 ($generated@@37 $generated@@193 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@27 $generated@@10 $generated@@195 $generated@@0 $generated@@194)
 :pattern ( ($generated@@27 $generated@@10 $generated@@195 $generated@@0 $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! ($generated@@27 $generated@@9 $generated@@197 $generated $generated@@196)
 :pattern ( ($generated@@27 $generated@@9 $generated@@197 $generated $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@30 $generated@@201) (= ($generated@@27 $generated@@28 ($generated@@56 $generated@@199 $generated@@200) ($generated@@29 $generated@@198) $generated@@201)  (and ($generated@@79 $generated@@199 $generated@@198 $generated@@201) ($generated@@27 $generated@@28 $generated@@200 ($generated@@29 $generated@@198) $generated@@201))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@56 $generated@@199 $generated@@200) ($generated@@29 $generated@@198) $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ) (! ($generated@@33 $generated@@10 $generated@@202 $generated@@0)
 :pattern ( ($generated@@33 $generated@@10 $generated@@202 $generated@@0))
)))
(assert (forall (($generated@@203 T@U) ) (! ($generated@@33 $generated@@9 $generated@@203 $generated)
 :pattern ( ($generated@@33 $generated@@9 $generated@@203 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@204 () Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@217 true))
(let (($generated@@218  (=> (and (not (and (<= $generated@@204 $generated@@205) (<= $generated@@205 $generated@@206))) (= (ControlFlow 0 7) 4)) $generated@@217)))
(let (($generated@@219  (=> (and (and (and (<= $generated@@204 $generated@@205) (<= $generated@@205 $generated@@206)) ($generated@@27 $generated@@10 ($generated@@14 $generated@@205) $generated@@0 $generated@@207)) (and ($generated@@27 $generated@@10 ($generated@@14 $generated@@206) $generated@@0 $generated@@207) ($generated@@27 $generated@@28 $generated@@208 ($generated@@29 $generated@@0) $generated@@207))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@108 $generated@@208) ($generated@@108 $generated@@209))) (=> (< ($generated@@108 $generated@@208) ($generated@@108 $generated@@209)) (=> (and ($generated@@43 $generated@@205 $generated@@206 $generated@@208) (= (ControlFlow 0 5) 4)) $generated@@217))))))
(let (($generated@@220  (=> (< $generated@@205 $generated@@204) (and (=> (= (ControlFlow 0 9) 5) $generated@@219) (=> (= (ControlFlow 0 9) 7) $generated@@218)))))
(let (($generated@@221  (=> (<= $generated@@204 $generated@@205) (and (=> (= (ControlFlow 0 8) 5) $generated@@219) (=> (= (ControlFlow 0 8) 7) $generated@@218)))))
(let (($generated@@222  (=> (and (and (and (= $generated@@209 ($generated@@56 ($generated@@64 $generated@@10 ($generated@@14 $generated@@210)) $generated@@211)) ($generated@@33 $generated@@28 $generated@@211 ($generated@@29 $generated@@0))) (and (= $generated@@212 $generated@@211) ($generated@@33 $generated@@28 $generated@@212 ($generated@@29 $generated@@0)))) (and (and (= $generated@@208 $generated@@212) (= $generated@@213 $generated@@210)) (and ($generated@@33 $generated@@10 ($generated@@14 $generated@@213) $generated@@0) (= $generated@@205 $generated@@213)))) (and (=> (= (ControlFlow 0 10) 8) $generated@@221) (=> (= (ControlFlow 0 10) 9) $generated@@220)))))
(let (($generated@@223 true))
(let (($generated@@224  (=> (or (not (= $generated@@209 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@222) (=> (= (ControlFlow 0 11) 3) $generated@@223)))))
(let (($generated@@225 true))
(let (($generated@@226 true))
(let (($generated@@227  (=> (= $generated@@214 ($generated@@119 $generated@@215 $generated@@207 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 12) 1) $generated@@226) (=> (= (ControlFlow 0 12) 2) $generated@@225)) (=> (= (ControlFlow 0 12) 11) $generated@@224)))))
(let (($generated@@228  (=> (and (and (and ($generated@@30 $generated@@207) ($generated@@216 $generated@@207)) ($generated@@33 $generated@@28 $generated@@209 ($generated@@29 $generated@@0))) (and (= 1 $generated@@40) (= (ControlFlow 0 13) 12))) $generated@@227)))
$generated@@228)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
