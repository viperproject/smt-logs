(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Int)
(declare-fun $generated@@109 (T@U) Int)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@122 () T@T)
(declare-fun $generated@@123 (T@T T@T) T@T)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@127 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ) (! ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28)
 :pattern ( ($generated@@25 $generated@@10 $generated@@27 $generated@@26 $generated@@28))
)))
(assert (= ($generated@@8 $generated@@33) 3))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@34 ($generated@@32 $generated@@33 $generated@@43)) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@43 ($generated@@36 $generated)))) (and (=> (not ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 ($generated@@37 ($generated@@32 $generated@@33 $generated@@43)))))) (let (($generated@@44 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@43)))))
(let (($generated@@45 ($generated@@39 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@32 $generated@@33 $generated@@43)))))))
 (=> (<= ($generated@@39 0) $generated@@45) ($generated@@34 $generated@@44))))) (= ($generated@@30 ($generated@@31 $generated@@42) ($generated@@32 $generated@@33 $generated@@43)) (ite ($generated@@37 ($generated@@32 $generated@@33 $generated@@43)) true (let (($generated@@46 ($generated@@32 $generated@@33 ($generated@@38 ($generated@@32 $generated@@33 $generated@@43)))))
(let (($generated@@47 ($generated@@39 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 ($generated@@32 $generated@@33 $generated@@43)))))))
 (and (<= ($generated@@39 0) $generated@@47) ($generated@@30 ($generated@@31 $generated@@42) $generated@@46))))))))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@31 $generated@@42) ($generated@@32 $generated@@33 $generated@@43)))
))))
(assert (= ($generated@@48 $generated@@49) $generated@@4))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@50 $generated@@52) ($generated@@25 $generated@@33 $generated@@49 ($generated@@36 $generated@@51) $generated@@52))
 :pattern ( ($generated@@25 $generated@@33 $generated@@49 ($generated@@36 $generated@@51) $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! ($generated@@35 $generated@@33 $generated@@49 ($generated@@36 $generated@@53))
 :pattern ( ($generated@@35 $generated@@33 $generated@@49 ($generated@@36 $generated@@53)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@54 $generated@@55 $generated@@56) (= $generated@@55 $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@57 $generated@@58) ($generated@@57 $generated@@59)) (= ($generated@@54 $generated@@58 $generated@@59)  (and (= ($generated@@41 $generated@@58) ($generated@@41 $generated@@59)) ($generated@@54 ($generated@@38 $generated@@58) ($generated@@38 $generated@@59)))))
 :pattern ( ($generated@@54 $generated@@58 $generated@@59) ($generated@@57 $generated@@58))
 :pattern ( ($generated@@54 $generated@@58 $generated@@59) ($generated@@57 $generated@@59))
)))
(assert (forall (($generated@@60 Int) ) (! (= ($generated@@39 $generated@@60) $generated@@60)
 :pattern ( ($generated@@39 $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@32 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@32 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@35 $generated@@33 ($generated@@63 $generated@@66 $generated@@67) ($generated@@36 $generated@@65))  (and ($generated@@64 $generated@@66 $generated@@65) ($generated@@35 $generated@@33 $generated@@67 ($generated@@36 $generated@@65))))
 :pattern ( ($generated@@35 $generated@@33 ($generated@@63 $generated@@66 $generated@@67) ($generated@@36 $generated@@65)))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@37 $generated@@68) (= ($generated@@48 $generated@@68) $generated@@4))
 :pattern ( ($generated@@37 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@57 $generated@@69) (= ($generated@@48 $generated@@69) $generated@@5))
 :pattern ( ($generated@@57 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@40 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@40 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@57 $generated@@73) (exists (($generated@@74 T@U) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@63 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@57 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@37 $generated@@76) (= $generated@@76 $generated@@49))
 :pattern ( ($generated@@37 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@35 $generated@@10 $generated@@77 $generated@@26) (<= ($generated@@39 0) ($generated@@15 $generated@@77)))
 :pattern ( ($generated@@35 $generated@@10 $generated@@77 $generated@@26))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@78 ($generated@@70 $generated@@82 $generated@@79) $generated@@80 $generated@@81) ($generated@@25 $generated@@82 $generated@@79 $generated@@80 $generated@@81))
 :pattern ( ($generated@@78 ($generated@@70 $generated@@82 $generated@@79) $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ) (!  (and (= ($generated@@24 ($generated@@36 $generated@@84)) $generated@@3) (= ($generated@@83 ($generated@@36 $generated@@84)) $generated@@7))
 :pattern ( ($generated@@36 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@64 $generated@@85 $generated@@26) (and (= ($generated@@70 $generated@@10 ($generated@@40 $generated@@10 $generated@@85)) $generated@@85) ($generated@@35 $generated@@10 ($generated@@40 $generated@@10 $generated@@85) $generated@@26)))
 :pattern ( ($generated@@64 $generated@@85 $generated@@26))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@86 $generated@@87) (or ($generated@@37 $generated@@87) ($generated@@57 $generated@@87)))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@35 $generated@@33 $generated@@89 ($generated@@36 $generated@@88)) (or ($generated@@37 $generated@@89) ($generated@@57 $generated@@89)))
 :pattern ( ($generated@@57 $generated@@89) ($generated@@35 $generated@@33 $generated@@89 ($generated@@36 $generated@@88)))
 :pattern ( ($generated@@37 $generated@@89) ($generated@@35 $generated@@33 $generated@@89 ($generated@@36 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@64 $generated@@90 $generated) (and (= ($generated@@70 $generated@@10 ($generated@@40 $generated@@10 $generated@@90)) $generated@@90) ($generated@@35 $generated@@10 ($generated@@40 $generated@@10 $generated@@90) $generated)))
 :pattern ( ($generated@@64 $generated@@90 $generated))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@30 ($generated@@31 $generated@@91) $generated@@92) ($generated@@30 $generated@@91 $generated@@92))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@64 ($generated@@70 $generated@@95 $generated@@93) $generated@@94) ($generated@@35 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@64 ($generated@@70 $generated@@95 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and ($generated@@37 $generated@@96) ($generated@@37 $generated@@97)) ($generated@@54 $generated@@96 $generated@@97))
 :pattern ( ($generated@@54 $generated@@96 $generated@@97) ($generated@@37 $generated@@96))
 :pattern ( ($generated@@54 $generated@@96 $generated@@97) ($generated@@37 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@48 ($generated@@63 $generated@@98 $generated@@99)) $generated@@5)
 :pattern ( ($generated@@63 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@41 ($generated@@63 $generated@@100 $generated@@101)) $generated@@100)
 :pattern ( ($generated@@63 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@38 ($generated@@63 $generated@@102 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@63 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@36 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@36 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@40 $generated@@107 ($generated@@70 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@70 $generated@@107 $generated@@106))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (< ($generated@@108 $generated@@110) ($generated@@109 ($generated@@63 $generated@@110 $generated@@111)))
 :pattern ( ($generated@@63 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (< ($generated@@109 $generated@@113) ($generated@@109 ($generated@@63 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@63 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and ($generated@@50 $generated@@116) (and ($generated@@57 $generated@@114) ($generated@@25 $generated@@33 $generated@@114 ($generated@@36 $generated@@115) $generated@@116))) ($generated@@78 ($generated@@41 $generated@@114) $generated@@115 $generated@@116))
 :pattern ( ($generated@@78 ($generated@@41 $generated@@114) $generated@@115 $generated@@116))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@117 $generated@@128 $generated@@129 $generated@@130 ($generated@@124 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@133 $generated@@134) $generated@@131)
 :weight 0
)) (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (or (= $generated@@140 $generated@@142) (= ($generated@@117 $generated@@135 $generated@@136 $generated@@137 ($generated@@124 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@142 $generated@@143) ($generated@@117 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@142 $generated@@143)))
 :weight 0
)) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@117 $generated@@144 $generated@@145 $generated@@146 ($generated@@124 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@117 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)))) (= ($generated@@8 $generated@@118) 4)) (= ($generated@@8 $generated@@119) 5)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@121 $generated@@153 $generated@@154 ($generated@@125 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@155) $generated@@157) $generated@@155)
 :weight 0
))) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@162 $generated@@163) (= ($generated@@121 $generated@@158 $generated@@159 ($generated@@125 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@160) $generated@@163) ($generated@@121 $generated@@158 $generated@@159 $generated@@161 $generated@@163)))
 :weight 0
))) (= ($generated@@8 $generated@@122) 6)) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (= ($generated@@8 ($generated@@123 $generated@@164 $generated@@165)) 7))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@126 ($generated@@123 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@123 $generated@@166 $generated@@167))
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@127 ($generated@@123 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@123 $generated@@168 $generated@@169))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@13 ($generated@@117 $generated@@118 $generated@@119 $generated@@9 ($generated@@120 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@121 $generated@@119 $generated@@122 ($generated@@121 $generated@@118 ($generated@@123 $generated@@119 $generated@@122) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@117 $generated@@118 $generated@@119 $generated@@9 ($generated@@120 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@108 ($generated@@70 $generated@@33 $generated@@176)) ($generated@@109 $generated@@176))
 :pattern ( ($generated@@108 ($generated@@70 $generated@@33 $generated@@176)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> ($generated@@64 $generated@@178 ($generated@@36 $generated@@177)) (and (= ($generated@@70 $generated@@33 ($generated@@40 $generated@@33 $generated@@178)) $generated@@178) ($generated@@35 $generated@@33 ($generated@@40 $generated@@33 $generated@@178) ($generated@@36 $generated@@177))))
 :pattern ( ($generated@@64 $generated@@178 ($generated@@36 $generated@@177)))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (or ($generated@@34 $generated@@180) (and (< 1 $generated@@29) ($generated@@35 $generated@@33 $generated@@180 ($generated@@36 $generated)))) (and (=> (not ($generated@@37 $generated@@180)) (let (($generated@@181 ($generated@@38 $generated@@180)))
(let (($generated@@182 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@180)))))
 (=> (<= ($generated@@39 0) $generated@@182) ($generated@@34 $generated@@181))))) (= ($generated@@30 ($generated@@31 $generated@@179) $generated@@180) (ite ($generated@@37 $generated@@180) true (let (($generated@@183 ($generated@@38 $generated@@180)))
(let (($generated@@184 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@180)))))
 (and (<= ($generated@@39 0) $generated@@184) ($generated@@30 $generated@@179 $generated@@183))))))))
 :pattern ( ($generated@@30 ($generated@@31 $generated@@179) $generated@@180))
))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and ($generated@@50 $generated@@187) (and ($generated@@57 $generated@@185) ($generated@@25 $generated@@33 $generated@@185 ($generated@@36 $generated@@186) $generated@@187))) ($generated@@25 $generated@@33 ($generated@@38 $generated@@185) ($generated@@36 $generated@@186) $generated@@187))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@38 $generated@@185) ($generated@@36 $generated@@186) $generated@@187))
)))
(assert (= ($generated@@24 $generated@@26) $generated@@2))
(assert (= ($generated@@83 $generated@@26) $generated@@6))
(assert (= $generated@@49 ($generated@@32 $generated@@33 $generated@@49)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@63 ($generated@@32 $generated@@122 $generated@@188) ($generated@@32 $generated@@33 $generated@@189)) ($generated@@32 $generated@@33 ($generated@@63 $generated@@188 $generated@@189)))
 :pattern ( ($generated@@63 ($generated@@32 $generated@@122 $generated@@188) ($generated@@32 $generated@@33 $generated@@189)))
)))
(assert (forall (($generated@@190 Int) ) (! (= ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 $generated@@190))) ($generated@@32 $generated@@122 ($generated@@70 $generated@@10 ($generated@@14 $generated@@190))))
 :pattern ( ($generated@@70 $generated@@10 ($generated@@14 ($generated@@39 $generated@@190))))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@T) ) (! (= ($generated@@70 $generated@@192 ($generated@@32 $generated@@192 $generated@@191)) ($generated@@32 $generated@@122 ($generated@@70 $generated@@192 $generated@@191)))
 :pattern ( ($generated@@70 $generated@@192 ($generated@@32 $generated@@192 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! ($generated@@25 $generated@@10 $generated@@194 $generated $generated@@193)
 :pattern ( ($generated@@25 $generated@@10 $generated@@194 $generated $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@50 $generated@@198) (= ($generated@@25 $generated@@33 ($generated@@63 $generated@@196 $generated@@197) ($generated@@36 $generated@@195) $generated@@198)  (and ($generated@@78 $generated@@196 $generated@@195 $generated@@198) ($generated@@25 $generated@@33 $generated@@197 ($generated@@36 $generated@@195) $generated@@198))))
 :pattern ( ($generated@@25 $generated@@33 ($generated@@63 $generated@@196 $generated@@197) ($generated@@36 $generated@@195) $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ) (! ($generated@@35 $generated@@10 $generated@@199 $generated)
 :pattern ( ($generated@@35 $generated@@10 $generated@@199 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 (T@U) Bool)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@218  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@54 $generated@@200 $generated@@201))))
(let (($generated@@219  (=> (and (= $generated@@200 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@202)) $generated@@203)) ($generated@@35 $generated@@33 $generated@@203 ($generated@@36 $generated))) (=> (and (and (and ($generated@@35 $generated@@33 $generated@@204 ($generated@@36 $generated)) ($generated@@25 $generated@@33 $generated@@204 ($generated@@36 $generated) $generated@@205)) (and (= $generated@@206 $generated@@203) ($generated@@35 $generated@@33 $generated@@206 ($generated@@36 $generated)))) (and (and (= $generated@@204 $generated@@206) (= $generated@@207 $generated@@202)) (and ($generated@@35 $generated@@10 ($generated@@14 $generated@@207) $generated) (= $generated@@208 $generated@@207)))) (and (=> (= (ControlFlow 0 6) (- 0 11)) (< ($generated@@109 $generated@@204) ($generated@@109 $generated@@200))) (=> (< ($generated@@109 $generated@@204) ($generated@@109 $generated@@200)) (=> (and ($generated@@35 $generated@@33 $generated@@209 ($generated@@36 $generated@@26)) ($generated@@25 $generated@@33 $generated@@209 ($generated@@36 $generated@@26) $generated@@205)) (and (=> (= (ControlFlow 0 6) (- 0 10)) (=> ($generated@@34 $generated@@204) (or ($generated@@30 ($generated@@31 $generated@@210) $generated@@204) (=> ($generated@@37 $generated@@204) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 true))))))) (=> (=> ($generated@@34 $generated@@204) (or ($generated@@30 ($generated@@31 $generated@@210) $generated@@204) (=> ($generated@@37 $generated@@204) ($generated@@13 ($generated@@32 $generated@@9 ($generated@@12 true)))))) (and (=> (= (ControlFlow 0 6) (- 0 9)) (=> ($generated@@34 $generated@@204) (or ($generated@@30 ($generated@@31 $generated@@210) $generated@@204) (=> (not ($generated@@37 $generated@@204)) (let (($generated@@220 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@204)))))
(<= ($generated@@39 0) $generated@@220)))))) (=> (=> ($generated@@34 $generated@@204) (or ($generated@@30 ($generated@@31 $generated@@210) $generated@@204) (=> (not ($generated@@37 $generated@@204)) (let (($generated@@221 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@204)))))
(<= ($generated@@39 0) $generated@@221))))) (and (=> (= (ControlFlow 0 6) (- 0 8)) (=> ($generated@@34 $generated@@204) (or ($generated@@30 ($generated@@31 $generated@@210) $generated@@204) (=> (not ($generated@@37 $generated@@204)) (let (($generated@@222 ($generated@@38 $generated@@204)))
($generated@@30 ($generated@@31 ($generated@@31 $generated@@210)) $generated@@222)))))) (=> (=> ($generated@@34 $generated@@204) (or ($generated@@30 ($generated@@31 $generated@@210) $generated@@204) (=> (not ($generated@@37 $generated@@204)) (let (($generated@@223 ($generated@@38 $generated@@204)))
($generated@@30 ($generated@@31 ($generated@@31 $generated@@210)) $generated@@223))))) (=> (and (and (and ($generated@@50 $generated@@211) ($generated@@212 $generated@@211)) (and ($generated@@35 $generated@@33 $generated@@213 ($generated@@36 $generated@@26)) ($generated@@25 $generated@@33 $generated@@213 ($generated@@36 $generated@@26) $generated@@211))) (and (and ($generated@@86 $generated@@204) ($generated@@86 $generated@@213)) (and ($generated@@54 $generated@@204 $generated@@213) (= $generated@@205 $generated@@211)))) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@35 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@208)) $generated@@213) ($generated@@36 $generated@@26))) (=> ($generated@@35 $generated@@33 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@208)) $generated@@213) ($generated@@36 $generated@@26)) (=> (= $generated@@214 ($generated@@63 ($generated@@70 $generated@@10 ($generated@@14 $generated@@208)) $generated@@213)) (=> (and (= $generated@@201 $generated@@214) (= (ControlFlow 0 6) 3)) $generated@@218))))))))))))))))))
(let (($generated@@224  (=> (= $generated@@200 $generated@@49) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@35 $generated@@33 $generated@@200 ($generated@@36 $generated@@26))) (=> ($generated@@35 $generated@@33 $generated@@200 ($generated@@36 $generated@@26)) (=> (and (= $generated@@201 $generated@@200) (= (ControlFlow 0 4) 3)) $generated@@218))))))
(let (($generated@@225 true))
(let (($generated@@226  (=> (or (not (= $generated@@200 $generated@@49)) (not true)) (and (=> (= (ControlFlow 0 12) 6) $generated@@219) (=> (= (ControlFlow 0 12) 1) $generated@@225)))))
(let (($generated@@227  (=> (= $generated@@215 ($generated@@120 $generated@@216 $generated@@205 $generated@@1 false)) (and (=> (= (ControlFlow 0 13) 4) $generated@@224) (=> (= (ControlFlow 0 13) 12) $generated@@226)))))
(let (($generated@@228  (=> (and ($generated@@50 $generated@@205) ($generated@@212 $generated@@205)) (=> (and (and ($generated@@35 $generated@@33 $generated@@200 ($generated@@36 $generated)) ($generated@@25 $generated@@33 $generated@@200 ($generated@@36 $generated) $generated@@205)) ($generated@@86 $generated@@200)) (=> (and (and (and ($generated@@35 $generated@@33 $generated@@217 ($generated@@36 $generated@@26)) ($generated@@25 $generated@@33 $generated@@217 ($generated@@36 $generated@@26) $generated@@205)) (= 2 $generated@@29)) (and (and ($generated@@34 $generated@@200) (and ($generated@@30 ($generated@@31 $generated@@210) $generated@@200) (ite ($generated@@37 $generated@@200) true (let (($generated@@229 ($generated@@38 $generated@@200)))
(let (($generated@@230 ($generated@@15 ($generated@@40 $generated@@10 ($generated@@41 $generated@@200)))))
 (and (<= ($generated@@39 0) $generated@@230) ($generated@@30 ($generated@@31 $generated@@210) $generated@@229))))))) (= (ControlFlow 0 14) 13))) $generated@@227)))))
$generated@@228))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
