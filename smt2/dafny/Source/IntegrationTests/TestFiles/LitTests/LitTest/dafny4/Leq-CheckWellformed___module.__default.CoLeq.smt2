(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U T@U) Bool)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 (Int) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@60 (Int) Int)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@99 (T@U) Bool)
(declare-fun $generated@@108 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@110 () T@U)
(declare-fun $generated@@114 (T@U T@U T@U) Bool)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 () T@T)
(declare-fun $generated@@146 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@147 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@148 (T@T T@T) T@T)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(declare-fun $generated@@202 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@206 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@25) $generated@@26 $generated@@27) (= $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@25) $generated@@26 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@30 $generated@@31)) ($generated@@28 $generated@@29 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@30 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@28 $generated@@29 $generated@@31))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 Int) ($generated@@37 Int) ) (!  (=> (and (and (<= 0 $generated@@36) (<= 0 $generated@@37)) (<= (+ $generated@@36 $generated@@37) ($generated@@34 $generated@@35))) (= ($generated@@32 ($generated@@32 $generated@@35 ($generated@@33 $generated@@36)) ($generated@@33 $generated@@37)) ($generated@@32 $generated@@35 ($generated@@33 (+ $generated@@36 $generated@@37)))))
 :pattern ( ($generated@@32 ($generated@@32 $generated@@35 ($generated@@33 $generated@@36)) ($generated@@33 $generated@@37)))
)))
(assert (= ($generated@@38 $generated@@39) $generated@@3))
(assert (= ($generated@@6 $generated@@43) 3))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@47 $generated@@44) ($generated@@42 $generated@@43 $generated@@48 $generated@@44)) ($generated@@41 ($generated@@24 $generated@@46) $generated@@47 $generated@@48)) (forall (($generated@@49 T@U) ) (! ($generated@@45 ($generated@@24 $generated@@46) $generated@@49 $generated@@47 $generated@@48)
 :pattern ( ($generated@@45 ($generated@@24 $generated@@46) $generated@@49 $generated@@47 $generated@@48))
)))
 :pattern ( ($generated@@41 ($generated@@24 $generated@@46) $generated@@47 $generated@@48))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (forall (($generated@@54 Int) ) (!  (=> (<= 0 $generated@@54) ($generated@@50 ($generated@@33 $generated@@54) ($generated@@24 $generated@@51) $generated@@52 $generated@@53))
 :pattern ( ($generated@@50 ($generated@@33 $generated@@54) ($generated@@24 $generated@@51) $generated@@52 $generated@@53))
)) ($generated@@23 ($generated@@24 $generated@@51) $generated@@52 $generated@@53))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@51) $generated@@52 $generated@@53))
)))
(assert ($generated@@42 $generated@@43 $generated@@39 $generated@@44))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (=> (and ($generated@@28 $generated@@55 $generated@@59) ($generated@@50 $generated@@59 ($generated@@24 $generated@@56) $generated@@57 $generated@@58)) ($generated@@50 $generated@@55 ($generated@@24 $generated@@56) $generated@@57 $generated@@58))
 :pattern ( ($generated@@50 $generated@@55 ($generated@@24 $generated@@56) $generated@@57 $generated@@58) ($generated@@50 $generated@@59 ($generated@@24 $generated@@56) $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 Int) ) (! (= ($generated@@60 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@38 $generated@@66) $generated@@3))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@38 $generated@@68) $generated@@4))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@69 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@69 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and ($generated@@42 $generated@@43 $generated@@76 $generated@@44) ($generated@@42 $generated@@43 $generated@@77 $generated@@44)) (= ($generated@@50 $generated@@74 ($generated@@24 $generated@@75) $generated@@76 $generated@@77)  (and (=> (< 0 ($generated@@34 $generated@@74)) (or (and ($generated@@65 $generated@@76) ($generated@@65 $generated@@77)) (and (and ($generated@@67 $generated@@76) ($generated@@67 $generated@@77)) (=> (and ($generated@@67 $generated@@76) ($generated@@67 $generated@@77)) ($generated@@50 ($generated@@32 $generated@@74 ($generated@@33 1)) $generated@@75 ($generated@@73 $generated@@76) ($generated@@73 $generated@@77)))))) (=> (and (or (not (= $generated@@74 ($generated@@33 0))) (not true)) (= ($generated@@34 $generated@@74) 0)) ($generated@@23 $generated@@75 $generated@@76 $generated@@77)))))
 :pattern ( ($generated@@50 $generated@@74 ($generated@@24 $generated@@75) $generated@@76 $generated@@77))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@79 $generated@@44) ($generated@@42 $generated@@43 $generated@@80 $generated@@44)) (forall (($generated@@81 T@U) ) (! ($generated@@45 ($generated@@24 $generated@@78) $generated@@81 $generated@@79 $generated@@80)
 :pattern ( ($generated@@45 ($generated@@24 $generated@@78) $generated@@81 $generated@@79 $generated@@80))
))) ($generated@@41 ($generated@@24 $generated@@78) $generated@@79 $generated@@80))
 :pattern ( ($generated@@41 ($generated@@24 $generated@@78) $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@65 $generated@@82) (= $generated@@82 $generated@@39))
 :pattern ( ($generated@@65 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@67 $generated@@84) (exists (($generated@@85 T@U) ) (= $generated@@84 ($generated@@83 $generated@@85))))
 :pattern ( ($generated@@67 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and ($generated@@42 $generated@@43 $generated@@87 $generated@@44) ($generated@@42 $generated@@43 $generated@@88 $generated@@44)) (= ($generated@@23 ($generated@@24 $generated@@86) $generated@@87 $generated@@88)  (or (and ($generated@@65 $generated@@87) ($generated@@65 $generated@@88)) (and (and ($generated@@67 $generated@@87) ($generated@@67 $generated@@88)) (=> (and ($generated@@67 $generated@@87) ($generated@@67 $generated@@88)) ($generated@@23 $generated@@86 ($generated@@73 $generated@@87) ($generated@@73 $generated@@88)))))))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or (not (= $generated@@89 ($generated@@33 0))) (not true)) (= ($generated@@50 $generated@@89 ($generated@@24 $generated@@90) $generated@@91 $generated@@92) ($generated@@50 $generated@@89 $generated@@90 $generated@@91 $generated@@92)))
 :pattern ( ($generated@@50 $generated@@89 ($generated@@24 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@41 ($generated@@24 $generated@@93) $generated@@94 $generated@@95) ($generated@@41 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@41 ($generated@@24 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@96) $generated@@97 $generated@@98) ($generated@@23 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and ($generated@@99 $generated@@101) (<= ($generated@@34 $generated@@101) ($generated@@34 $generated@@100))) (and (= ($generated@@99 ($generated@@32 $generated@@100 $generated@@101)) ($generated@@99 $generated@@100)) (= ($generated@@34 ($generated@@32 $generated@@100 $generated@@101)) (- ($generated@@34 $generated@@100) ($generated@@34 $generated@@101)))))
 :pattern ( ($generated@@32 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 Int) ) (!  (=> (<= 0 $generated@@102) (and ($generated@@99 ($generated@@33 $generated@@102)) (= ($generated@@34 ($generated@@33 $generated@@102)) $generated@@102)))
 :pattern ( ($generated@@33 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (! (= ($generated@@42 $generated@@43 ($generated@@83 $generated@@103) $generated@@44) ($generated@@42 $generated@@43 $generated@@103 $generated@@44))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@83 $generated@@103) $generated@@44))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@104) $generated@@105 $generated@@106) (forall (($generated@@107 T@U) ) (! ($generated@@50 $generated@@107 ($generated@@24 $generated@@104) $generated@@105 $generated@@106)
 :pattern ( ($generated@@50 $generated@@107 ($generated@@24 $generated@@104) $generated@@105 $generated@@106))
)))
 :pattern ( ($generated@@23 ($generated@@24 $generated@@104) $generated@@105 $generated@@106))
)))
(assert  (=> (<= 1 $generated@@40) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@108 $generated@@112 $generated@@113) (and (< 1 $generated@@40) (and ($generated@@42 $generated@@43 $generated@@112 $generated@@44) ($generated@@42 $generated@@43 $generated@@113 $generated@@44)))) (and (and ($generated@@109 $generated@@112) (=> (not ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@112 $generated@@39)) (=> ($generated@@67 $generated@@112) (=> ($generated@@67 $generated@@113) ($generated@@108 ($generated@@73 $generated@@112) ($generated@@73 $generated@@113)))))) (= ($generated@@41 ($generated@@24 $generated@@111) $generated@@112 $generated@@113)  (or ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@112 $generated@@39) (and (and ($generated@@67 $generated@@112) ($generated@@67 $generated@@113)) ($generated@@41 $generated@@111 ($generated@@73 $generated@@112) ($generated@@73 $generated@@113)))))))
 :pattern ( ($generated@@41 ($generated@@24 $generated@@111) $generated@@112 $generated@@113))
))))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@114 $generated@@116 $generated@@117 $generated@@118) (and (< 2 $generated@@40) (and ($generated@@42 $generated@@43 $generated@@117 $generated@@44) ($generated@@42 $generated@@43 $generated@@118 $generated@@44)))) (and (and (=> (< 0 ($generated@@34 $generated@@116)) (and ($generated@@109 $generated@@117) (=> (not ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@117 $generated@@39)) (=> ($generated@@67 $generated@@117) (=> ($generated@@67 $generated@@118) ($generated@@114 ($generated@@32 $generated@@116 ($generated@@33 1)) ($generated@@73 $generated@@117) ($generated@@73 $generated@@118))))))) (=> (=> (< 0 ($generated@@34 $generated@@116)) (or ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@117 $generated@@39) (and (and ($generated@@67 $generated@@117) ($generated@@67 $generated@@118)) ($generated@@45 $generated@@115 ($generated@@32 $generated@@116 ($generated@@33 1)) ($generated@@73 $generated@@117) ($generated@@73 $generated@@118))))) (=> (= ($generated@@60 0) ($generated@@34 $generated@@116)) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@28 $generated@@119 $generated@@116) ($generated@@114 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@45 $generated@@115 $generated@@119 $generated@@117 $generated@@118))
))))) (= ($generated@@45 ($generated@@24 $generated@@115) $generated@@116 $generated@@117 $generated@@118)  (and (=> (< 0 ($generated@@34 $generated@@116)) (or ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@117 $generated@@39) (and (and ($generated@@67 $generated@@117) ($generated@@67 $generated@@118)) ($generated@@45 $generated@@115 ($generated@@32 $generated@@116 ($generated@@33 1)) ($generated@@73 $generated@@117) ($generated@@73 $generated@@118))))) (=> (= ($generated@@60 0) ($generated@@34 $generated@@116)) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@28 $generated@@120 $generated@@116) ($generated@@45 $generated@@115 $generated@@120 $generated@@117 $generated@@118))
 :pattern ( ($generated@@45 $generated@@115 $generated@@120 $generated@@117 $generated@@118))
)))))))
 :pattern ( ($generated@@45 ($generated@@24 $generated@@115) $generated@@116 $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@109 $generated@@121) (or ($generated@@65 $generated@@121) ($generated@@67 $generated@@121)))
 :pattern ( ($generated@@109 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (or ($generated@@28 $generated@@122 $generated@@123) (= $generated@@122 $generated@@123)) ($generated@@28 $generated@@123 $generated@@122))
 :pattern ( ($generated@@28 $generated@@122 $generated@@123) ($generated@@28 $generated@@123 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@124 $generated@@44) (or ($generated@@65 $generated@@124) ($generated@@67 $generated@@124)))
 :pattern ( ($generated@@67 $generated@@124) ($generated@@42 $generated@@43 $generated@@124 $generated@@44))
 :pattern ( ($generated@@65 $generated@@124) ($generated@@42 $generated@@43 $generated@@124 $generated@@44))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@45 ($generated@@24 $generated@@125) $generated@@126 $generated@@127 $generated@@128) ($generated@@45 $generated@@125 $generated@@126 $generated@@127 $generated@@128))
 :pattern ( ($generated@@45 ($generated@@24 $generated@@125) $generated@@126 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (<= 0 ($generated@@34 $generated@@129))
 :pattern ( ($generated@@34 $generated@@129))
)))
(assert (= ($generated@@6 $generated@@130) 4))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (or ($generated@@114 ($generated@@62 $generated@@130 $generated@@132) $generated@@133 $generated@@134) (and (< 2 $generated@@40) (and ($generated@@42 $generated@@43 $generated@@133 $generated@@44) ($generated@@42 $generated@@43 $generated@@134 $generated@@44)))) (and (and (=> (< 0 ($generated@@34 $generated@@132)) (and ($generated@@109 $generated@@133) (=> (not ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@133 $generated@@39)) (=> ($generated@@67 $generated@@133) (=> ($generated@@67 $generated@@134) ($generated@@114 ($generated@@32 $generated@@132 ($generated@@33 1)) ($generated@@73 $generated@@133) ($generated@@73 $generated@@134))))))) (=> (=> (< 0 ($generated@@34 $generated@@132)) (or ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@133 $generated@@39) (and (and ($generated@@67 $generated@@133) ($generated@@67 $generated@@134)) ($generated@@45 ($generated@@24 $generated@@131) ($generated@@32 $generated@@132 ($generated@@33 1)) ($generated@@73 $generated@@133) ($generated@@73 $generated@@134))))) (=> (= ($generated@@60 0) ($generated@@34 $generated@@132)) (forall (($generated@@135 T@U) ) (!  (=> ($generated@@28 $generated@@135 $generated@@132) ($generated@@114 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@45 ($generated@@24 $generated@@131) $generated@@135 $generated@@133 $generated@@134))
))))) (= ($generated@@45 ($generated@@24 $generated@@131) ($generated@@62 $generated@@130 $generated@@132) $generated@@133 $generated@@134)  (and (=> (< 0 ($generated@@34 $generated@@132)) (or ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@133 $generated@@39) (and (and ($generated@@67 $generated@@133) ($generated@@67 $generated@@134)) ($generated@@45 ($generated@@24 $generated@@131) ($generated@@32 $generated@@132 ($generated@@33 1)) ($generated@@73 $generated@@133) ($generated@@73 $generated@@134))))) (=> (= ($generated@@60 0) ($generated@@34 $generated@@132)) (forall (($generated@@136 T@U) ) (!  (=> ($generated@@28 $generated@@136 $generated@@132) ($generated@@45 ($generated@@24 $generated@@131) $generated@@136 $generated@@133 $generated@@134))
 :pattern ( ($generated@@45 ($generated@@24 $generated@@131) $generated@@136 $generated@@133 $generated@@134))
)))))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@24 $generated@@131) ($generated@@62 $generated@@130 $generated@@132) $generated@@133 $generated@@134))
))))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@38 ($generated@@83 $generated@@137)) $generated@@4)
 :pattern ( ($generated@@83 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@73 ($generated@@83 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@83 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@69 $generated@@140 ($generated@@70 $generated@@140 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@70 $generated@@140 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (and (and (and (=> ($generated@@28 $generated@@141 $generated@@142) (or (not (= $generated@@141 $generated@@142)) (not true))) (=> (and ($generated@@99 $generated@@141) (not ($generated@@99 $generated@@142))) ($generated@@28 $generated@@141 $generated@@142))) (=> (and ($generated@@99 $generated@@141) ($generated@@99 $generated@@142)) (= ($generated@@28 $generated@@141 $generated@@142) (< ($generated@@34 $generated@@141) ($generated@@34 $generated@@142))))) (=> (and ($generated@@28 $generated@@141 $generated@@142) ($generated@@99 $generated@@142)) ($generated@@99 $generated@@141)))
 :pattern ( ($generated@@28 $generated@@141 $generated@@142))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@149 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@143 $generated@@160 $generated@@161 $generated@@162 ($generated@@149 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@143 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@143 $generated@@169 $generated@@170 $generated@@171 ($generated@@149 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@143 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))) (= ($generated@@6 $generated@@144) 5)) (= ($generated@@6 $generated@@145) 6)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@147 $generated@@178 $generated@@179 ($generated@@150 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@180) $generated@@182) $generated@@180)
 :weight 0
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@187 $generated@@188) (= ($generated@@147 $generated@@183 $generated@@184 ($generated@@150 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@188) ($generated@@147 $generated@@183 $generated@@184 $generated@@186 $generated@@188)))
 :weight 0
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@6 ($generated@@148 $generated@@189 $generated@@190)) 7))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@151 ($generated@@148 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@148 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@152 ($generated@@148 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@148 $generated@@193 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@11 ($generated@@143 $generated@@144 $generated@@145 $generated@@7 ($generated@@146 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@11 ($generated@@69 $generated@@7 ($generated@@147 $generated@@145 $generated@@130 ($generated@@147 $generated@@144 ($generated@@148 $generated@@145 $generated@@130) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@143 $generated@@144 $generated@@145 $generated@@7 ($generated@@146 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> ($generated@@99 $generated@@201) (= $generated@@201 ($generated@@33 ($generated@@34 $generated@@201))))
 :pattern ( ($generated@@34 $generated@@201))
 :pattern ( ($generated@@99 $generated@@201))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@203 $generated@@205) ($generated@@42 $generated@@43 $generated@@204 $generated@@44)) ($generated@@202 $generated@@43 $generated@@204 $generated@@44 $generated@@205))
 :pattern ( ($generated@@202 $generated@@43 $generated@@204 $generated@@44 $generated@@205))
)))
(assert (= ($generated@@22 $generated@@44) $generated@@2))
(assert (= ($generated@@206 $generated@@44) $generated@@5))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@43 $generated@@208 $generated@@44) ($generated@@42 $generated@@43 $generated@@209 $generated@@44)) (= $generated@@210 ($generated@@33 0))) ($generated@@45 $generated@@207 $generated@@210 $generated@@208 $generated@@209))
 :pattern ( ($generated@@45 $generated@@207 $generated@@210 $generated@@208 $generated@@209))
))))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@99 $generated@@212) (<= ($generated@@34 $generated@@212) ($generated@@34 $generated@@211))) (or (and (= $generated@@212 ($generated@@33 0)) (= ($generated@@32 $generated@@211 $generated@@212) $generated@@211)) (and (or (not (= $generated@@212 ($generated@@33 0))) (not true)) ($generated@@28 ($generated@@32 $generated@@211 $generated@@212) $generated@@211))))
 :pattern ( ($generated@@32 $generated@@211 $generated@@212))
)))
(assert  (=> (<= 2 $generated@@40) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (or ($generated@@114 ($generated@@62 $generated@@130 $generated@@214) ($generated@@62 $generated@@43 $generated@@215) ($generated@@62 $generated@@43 $generated@@216)) (and (< 2 $generated@@40) (and ($generated@@42 $generated@@43 $generated@@215 $generated@@44) ($generated@@42 $generated@@43 $generated@@216 $generated@@44)))) (and (and (=> (< 0 ($generated@@34 $generated@@214)) (and ($generated@@109 ($generated@@62 $generated@@43 $generated@@215)) (=> (not ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@215 $generated@@39)) (=> ($generated@@11 ($generated@@62 $generated@@7 ($generated@@10 ($generated@@67 ($generated@@62 $generated@@43 $generated@@215))))) (=> ($generated@@11 ($generated@@62 $generated@@7 ($generated@@10 ($generated@@67 ($generated@@62 $generated@@43 $generated@@216))))) ($generated@@114 ($generated@@32 $generated@@214 ($generated@@33 1)) ($generated@@62 $generated@@43 ($generated@@73 ($generated@@62 $generated@@43 $generated@@215))) ($generated@@62 $generated@@43 ($generated@@73 ($generated@@62 $generated@@43 $generated@@216))))))))) (=> (=> (< 0 ($generated@@34 $generated@@214)) (or ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@215 $generated@@39) (and (and ($generated@@67 ($generated@@62 $generated@@43 $generated@@215)) ($generated@@67 ($generated@@62 $generated@@43 $generated@@216))) ($generated@@45 ($generated@@24 $generated@@213) ($generated@@32 $generated@@214 ($generated@@33 1)) ($generated@@62 $generated@@43 ($generated@@73 ($generated@@62 $generated@@43 $generated@@215))) ($generated@@62 $generated@@43 ($generated@@73 ($generated@@62 $generated@@43 $generated@@216))))))) (=> (= ($generated@@60 0) ($generated@@34 $generated@@214)) (forall (($generated@@217 T@U) ) (!  (=> ($generated@@28 $generated@@217 $generated@@214) ($generated@@114 $generated@@217 $generated@@215 $generated@@216))
 :pattern ( ($generated@@45 ($generated@@24 $generated@@213) $generated@@217 $generated@@215 $generated@@216))
))))) (= ($generated@@45 ($generated@@24 $generated@@213) ($generated@@62 $generated@@130 $generated@@214) ($generated@@62 $generated@@43 $generated@@215) ($generated@@62 $generated@@43 $generated@@216))  (and (=> (< 0 ($generated@@34 $generated@@214)) (or ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@215 $generated@@39) (and (and ($generated@@67 ($generated@@62 $generated@@43 $generated@@215)) ($generated@@67 ($generated@@62 $generated@@43 $generated@@216))) ($generated@@45 ($generated@@24 $generated@@213) ($generated@@32 $generated@@214 ($generated@@33 1)) ($generated@@62 $generated@@43 ($generated@@73 ($generated@@62 $generated@@43 $generated@@215))) ($generated@@62 $generated@@43 ($generated@@73 ($generated@@62 $generated@@43 $generated@@216))))))) (=> (= ($generated@@60 0) ($generated@@34 $generated@@214)) (forall (($generated@@218 T@U) ) (!  (=> ($generated@@28 $generated@@218 $generated@@214) ($generated@@45 ($generated@@24 $generated@@213) $generated@@218 $generated@@215 $generated@@216))
 :pattern ( ($generated@@45 ($generated@@24 $generated@@213) $generated@@218 $generated@@215 $generated@@216))
)))))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@24 $generated@@213) ($generated@@62 $generated@@130 $generated@@214) ($generated@@62 $generated@@43 $generated@@215) ($generated@@62 $generated@@43 $generated@@216)))
))))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and ($generated@@203 $generated@@220) (and ($generated@@67 $generated@@219) ($generated@@202 $generated@@43 $generated@@219 $generated@@44 $generated@@220))) ($generated@@202 $generated@@43 ($generated@@73 $generated@@219) $generated@@44 $generated@@220))
 :pattern ( ($generated@@202 $generated@@43 ($generated@@73 $generated@@219) $generated@@44 $generated@@220))
)))
(assert (forall (($generated@@221 Int) ) (! (= ($generated@@70 $generated@@8 ($generated@@12 ($generated@@60 $generated@@221))) ($generated@@62 $generated@@130 ($generated@@70 $generated@@8 ($generated@@12 $generated@@221))))
 :pattern ( ($generated@@70 $generated@@8 ($generated@@12 ($generated@@60 $generated@@221))))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@T) ) (! (= ($generated@@70 $generated@@223 ($generated@@62 $generated@@223 $generated@@222)) ($generated@@62 $generated@@130 ($generated@@70 $generated@@223 $generated@@222)))
 :pattern ( ($generated@@70 $generated@@223 ($generated@@62 $generated@@223 $generated@@222)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (! ($generated@@202 $generated@@7 $generated@@225 $generated $generated@@224)
 :pattern ( ($generated@@202 $generated@@7 $generated@@225 $generated $generated@@224))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (= $generated@@228 $generated@@229) ($generated@@50 $generated@@226 ($generated@@24 $generated@@227) $generated@@228 $generated@@229))
 :pattern ( ($generated@@50 $generated@@226 ($generated@@24 $generated@@227) $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ) (! ($generated@@42 $generated@@7 $generated@@230 $generated)
 :pattern ( ($generated@@42 $generated@@7 $generated@@230 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@239 true))
(let (($generated@@240  (=> (and (not (and ($generated@@67 $generated@@231) ($generated@@67 $generated@@232))) (= (ControlFlow 0 7) 2)) $generated@@239)))
(let (($generated@@241  (=> (and ($generated@@67 $generated@@231) ($generated@@67 $generated@@232)) (and (=> (= (ControlFlow 0 4) (- 0 6)) ($generated@@67 $generated@@231)) (=> ($generated@@67 $generated@@231) (=> (and (= $generated@@233 ($generated@@73 $generated@@231)) ($generated@@202 $generated@@43 $generated@@233 $generated@@44 $generated@@234)) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@67 $generated@@232)) (=> ($generated@@67 $generated@@232) (=> (and (and (= $generated@@235 ($generated@@73 $generated@@232)) ($generated@@202 $generated@@43 $generated@@235 $generated@@44 $generated@@234)) (and ($generated@@108 ($generated@@73 $generated@@231) ($generated@@73 $generated@@232)) (= (ControlFlow 0 4) 2))) $generated@@239)))))))))
(let (($generated@@242  (=> (not ($generated@@67 $generated@@231)) (and (=> (= (ControlFlow 0 9) 4) $generated@@241) (=> (= (ControlFlow 0 9) 7) $generated@@240)))))
(let (($generated@@243  (=> ($generated@@67 $generated@@231) (and (=> (= (ControlFlow 0 8) 4) $generated@@241) (=> (= (ControlFlow 0 8) 7) $generated@@240)))))
(let (($generated@@244  (=> (not ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@231 $generated@@39)) (and (=> (= (ControlFlow 0 10) 8) $generated@@243) (=> (= (ControlFlow 0 10) 9) $generated@@242)))))
(let (($generated@@245  (=> (and ($generated@@23 ($generated@@24 ($generated@@24 $generated@@110)) $generated@@231 $generated@@39) (= (ControlFlow 0 3) 2)) $generated@@239)))
(let (($generated@@246 true))
(let (($generated@@247  (=> (= $generated@@236 ($generated@@146 $generated@@237 $generated@@234 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@246) (=> (= (ControlFlow 0 11) 10) $generated@@244)) (=> (= (ControlFlow 0 11) 3) $generated@@245)))))
(let (($generated@@248  (=> (and ($generated@@203 $generated@@234) ($generated@@238 $generated@@234)) (=> (and (and ($generated@@42 $generated@@43 $generated@@231 $generated@@44) ($generated@@42 $generated@@43 $generated@@232 $generated@@44)) (and (= 1 $generated@@40) (= (ControlFlow 0 12) 11))) $generated@@247))))
$generated@@248)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
