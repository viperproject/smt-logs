(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@T T@U T@U) Bool)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U T@U) Bool)
(declare-fun $generated@@68 () Int)
(declare-fun $generated@@69 (T@U T@U) Int)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@102 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@T T@T) T@T)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T) T@T)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@20 ($generated@@19 $generated@@21 $generated@@22) $generated@@22)
 :pattern ( ($generated@@19 $generated@@21 $generated@@22))
)))
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ($generated@@25 T@U) ) (!  (=> ($generated@@20 $generated@@23 $generated@@25) ($generated@@20 ($generated@@19 $generated@@23 $generated@@24) $generated@@25))
 :pattern ( ($generated@@19 $generated@@23 $generated@@24) ($generated@@20 $generated@@23 $generated@@25))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (! ($generated@@26 $generated@@5 $generated@@28 $generated@@27 $generated@@29)
 :pattern ( ($generated@@26 $generated@@5 $generated@@28 $generated@@27 $generated@@29))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@20 ($generated@@19 $generated@@30 $generated@@31) $generated@@32)  (or (= $generated@@32 $generated@@31) ($generated@@20 $generated@@30 $generated@@32)))
 :pattern ( ($generated@@20 ($generated@@19 $generated@@30 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@20 $generated@@35 $generated@@36) (not ($generated@@20 ($generated@@33 $generated@@34 $generated@@35) $generated@@36)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35) ($generated@@20 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ) (!  (not ($generated@@20 $generated@@37 $generated@@38))
 :pattern ( ($generated@@20 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@20 ($generated@@33 $generated@@39 $generated@@40) $generated@@41)  (and ($generated@@20 $generated@@39 $generated@@41) (not ($generated@@20 $generated@@40 $generated@@41))))
 :pattern ( ($generated@@20 ($generated@@33 $generated@@39 $generated@@40) $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ) (!  (=> ($generated@@43 $generated@@45) ($generated@@20 $generated@@45 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@42 $generated@@45)))))
 :pattern ( ($generated@@42 $generated@@45))
)))
(assert (forall (($generated@@47 Int) ) (! (= ($generated@@46 $generated@@47) $generated@@47)
 :pattern ( ($generated@@46 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@44 $generated@@53 ($generated@@51 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@51 $generated@@53 $generated@@52))
)))
(assert (= ($generated@@3 $generated@@55) 3))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@54 $generated@@55 $generated@@58 ($generated@@56 $generated@@59)) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@20 $generated@@58 $generated@@60) ($generated@@57 $generated@@60 $generated@@59))
 :pattern ( ($generated@@20 $generated@@58 $generated@@60))
)))
 :pattern ( ($generated@@54 $generated@@55 $generated@@58 ($generated@@56 $generated@@59)))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@54 $generated@@5 $generated@@61 $generated@@27) (<= ($generated@@46 1) ($generated@@10 $generated@@61)))
 :pattern ( ($generated@@54 $generated@@5 $generated@@61 $generated@@27))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@62 ($generated@@44 $generated@@66 $generated@@63) $generated@@64 $generated@@65) ($generated@@26 $generated@@66 $generated@@63 $generated@@64 $generated@@65))
 :pattern ( ($generated@@62 ($generated@@44 $generated@@66 $generated@@63) $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@57 $generated@@67 $generated@@27) (and (= ($generated@@44 $generated@@5 ($generated@@51 $generated@@5 $generated@@67)) $generated@@67) ($generated@@54 $generated@@5 ($generated@@51 $generated@@5 $generated@@67) $generated@@27)))
 :pattern ( ($generated@@57 $generated@@67 $generated@@27))
)))
(assert  (=> (<= 1 $generated@@68) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@72 ($generated@@48 $generated@@55 $generated@@76)) (and (< 1 $generated@@68) (and (and ($generated@@71 $generated@@75) ($generated@@54 $generated@@55 $generated@@76 ($generated@@56 $generated@@27))) (not ($generated@@73 $generated@@76 $generated@@37))))) (and (and ($generated@@43 ($generated@@48 $generated@@55 $generated@@76)) (=> (not ($generated@@73 $generated@@76 ($generated@@19 $generated@@37 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@42 ($generated@@48 $generated@@55 $generated@@76))))))) (let (($generated@@77 ($generated@@33 $generated@@76 ($generated@@19 $generated@@37 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@42 ($generated@@48 $generated@@55 $generated@@76))))))))
($generated@@72 $generated@@77)))) (= ($generated@@69 ($generated@@70 $generated@@74) ($generated@@48 $generated@@55 $generated@@76)) (let (($generated@@78 ($generated@@42 ($generated@@48 $generated@@55 $generated@@76))))
(ite ($generated@@73 $generated@@76 ($generated@@19 $generated@@37 ($generated@@44 $generated@@5 ($generated@@9 $generated@@78)))) $generated@@78 (let (($generated@@79 ($generated@@33 $generated@@76 ($generated@@19 $generated@@37 ($generated@@44 $generated@@5 ($generated@@9 $generated@@78))))))
(let (($generated@@80 ($generated@@69 ($generated@@70 $generated@@74) $generated@@79)))
(ite (< $generated@@78 $generated@@80) $generated@@80 $generated@@78))))))))
 :weight 3
 :pattern ( ($generated@@69 ($generated@@70 $generated@@74) ($generated@@48 $generated@@55 $generated@@76)) ($generated@@71 $generated@@75))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@73 $generated@@81 $generated@@82) (= $generated@@81 $generated@@82))
 :pattern ( ($generated@@73 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@57 ($generated@@44 $generated@@85 $generated@@83) $generated@@84) ($generated@@54 $generated@@85 $generated@@83 $generated@@84))
 :pattern ( ($generated@@57 ($generated@@44 $generated@@85 $generated@@83) $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@26 $generated@@55 $generated@@86 ($generated@@56 $generated@@87) $generated@@88) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@20 $generated@@86 $generated@@89) ($generated@@62 $generated@@89 $generated@@87 $generated@@88))
 :pattern ( ($generated@@20 $generated@@86 $generated@@89))
)))
 :pattern ( ($generated@@26 $generated@@55 $generated@@86 ($generated@@56 $generated@@87) $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ) (! (= ($generated@@90 ($generated@@56 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@56 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@92 ($generated@@56 $generated@@93)) $generated)
 :pattern ( ($generated@@56 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@51 $generated@@95 ($generated@@44 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@44 $generated@@95 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@69 ($generated@@70 $generated@@96) $generated@@97) ($generated@@69 $generated@@96 $generated@@97))
 :pattern ( ($generated@@69 ($generated@@70 $generated@@96) $generated@@97))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@98 $generated@@109 $generated@@110 $generated@@111 ($generated@@105 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@98 $generated@@116 $generated@@117 $generated@@118 ($generated@@105 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@98 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@98 $generated@@125 $generated@@126 $generated@@127 ($generated@@105 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@98 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))) (= ($generated@@3 $generated@@99) 4)) (= ($generated@@3 $generated@@100) 5)) (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@102 $generated@@134 $generated@@135 ($generated@@106 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@136) $generated@@138) $generated@@136)
 :weight 0
))) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (or (= $generated@@143 $generated@@144) (= ($generated@@102 $generated@@139 $generated@@140 ($generated@@106 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@144) ($generated@@102 $generated@@139 $generated@@140 $generated@@142 $generated@@144)))
 :weight 0
))) (= ($generated@@3 $generated@@103) 6)) (forall (($generated@@145 T@T) ($generated@@146 T@T) ) (= ($generated@@3 ($generated@@104 $generated@@145 $generated@@146)) 7))) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (! (= ($generated@@107 ($generated@@104 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@104 $generated@@147 $generated@@148))
))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@108 ($generated@@104 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@104 $generated@@149 $generated@@150))
))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@8 ($generated@@98 $generated@@99 $generated@@100 $generated@@4 ($generated@@101 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@8 ($generated@@51 $generated@@4 ($generated@@102 $generated@@100 $generated@@103 ($generated@@102 $generated@@99 ($generated@@104 $generated@@100 $generated@@103) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@98 $generated@@99 $generated@@100 $generated@@4 ($generated@@101 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert  (=> (<= 1 $generated@@68) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or ($generated@@72 $generated@@159) (and (< 1 $generated@@68) (and (and ($generated@@71 $generated@@158) ($generated@@54 $generated@@55 $generated@@159 ($generated@@56 $generated@@27))) (not ($generated@@73 $generated@@159 $generated@@37))))) (and (and ($generated@@43 $generated@@159) (=> (not ($generated@@73 $generated@@159 ($generated@@19 $generated@@37 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@42 $generated@@159)))))) (let (($generated@@160 ($generated@@33 $generated@@159 ($generated@@19 $generated@@37 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@42 $generated@@159)))))))
($generated@@72 $generated@@160)))) (= ($generated@@69 ($generated@@70 $generated@@157) $generated@@159) (let (($generated@@161 ($generated@@42 $generated@@159)))
(ite ($generated@@73 $generated@@159 ($generated@@19 $generated@@37 ($generated@@44 $generated@@5 ($generated@@9 $generated@@161)))) $generated@@161 (let (($generated@@162 ($generated@@33 $generated@@159 ($generated@@19 $generated@@37 ($generated@@44 $generated@@5 ($generated@@9 $generated@@161))))))
(let (($generated@@163 ($generated@@69 $generated@@157 $generated@@162)))
(ite (< $generated@@161 $generated@@163) $generated@@163 $generated@@161))))))))
 :pattern ( ($generated@@69 ($generated@@70 $generated@@157) $generated@@159) ($generated@@71 $generated@@158))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@57 $generated@@164 ($generated@@56 $generated@@165)) (and (= ($generated@@44 $generated@@55 ($generated@@51 $generated@@55 $generated@@164)) $generated@@164) ($generated@@54 $generated@@55 ($generated@@51 $generated@@55 $generated@@164) ($generated@@56 $generated@@165))))
 :pattern ( ($generated@@57 $generated@@164 ($generated@@56 $generated@@165)))
)))
(assert (= ($generated@@92 $generated@@27) $generated@@1))
(assert (= ($generated@@166 $generated@@27) $generated@@2))
(assert  (=> (<= 1 $generated@@68) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (or ($generated@@72 $generated@@168) (and (< 1 $generated@@68) (and ($generated@@54 $generated@@55 $generated@@168 ($generated@@56 $generated@@27)) (not ($generated@@73 $generated@@168 $generated@@37))))) (and (and ($generated@@20 $generated@@168 ($generated@@44 $generated@@5 ($generated@@9 ($generated@@69 $generated@@167 $generated@@168)))) (forall (($generated@@169 T@U) ) (!  (=> ($generated@@20 $generated@@168 ($generated@@44 $generated@@5 $generated@@169)) (<= ($generated@@10 $generated@@169) ($generated@@69 $generated@@167 $generated@@168)))
 :pattern ( ($generated@@20 $generated@@168 ($generated@@44 $generated@@5 $generated@@169)))
))) (<= ($generated@@46 1) ($generated@@69 $generated@@167 $generated@@168))))
 :pattern ( ($generated@@69 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@73 $generated@@170 $generated@@171) (forall (($generated@@172 T@U) ) (! (= ($generated@@20 $generated@@170 $generated@@172) ($generated@@20 $generated@@171 $generated@@172))
 :pattern ( ($generated@@20 $generated@@170 $generated@@172))
 :pattern ( ($generated@@20 $generated@@171 $generated@@172))
)))
 :pattern ( ($generated@@73 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@173 Int) ) (! (= ($generated@@44 $generated@@5 ($generated@@9 ($generated@@46 $generated@@173))) ($generated@@48 $generated@@103 ($generated@@44 $generated@@5 ($generated@@9 $generated@@173))))
 :pattern ( ($generated@@44 $generated@@5 ($generated@@9 ($generated@@46 $generated@@173))))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@44 $generated@@175 ($generated@@48 $generated@@175 $generated@@174)) ($generated@@48 $generated@@103 ($generated@@44 $generated@@175 $generated@@174)))
 :pattern ( ($generated@@44 $generated@@175 ($generated@@48 $generated@@175 $generated@@174)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@184  (=> (and (= $generated@@176 ($generated@@101 $generated@@177 $generated@@178 $generated@@0 false)) ($generated@@26 $generated@@55 $generated@@179 ($generated@@56 $generated@@27) $generated@@178)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (not ($generated@@73 $generated@@179 $generated@@37))) (=> (not ($generated@@73 $generated@@179 $generated@@37)) (=> (and (and ($generated@@72 $generated@@179) ($generated@@72 $generated@@179)) (and (= $generated@@180 ($generated@@69 ($generated@@70 $generated@@181) $generated@@179)) (= (ControlFlow 0 2) (- 0 1)))) (exists (($generated@@185 T@U) ) (!  (and ($generated@@20 $generated@@179 ($generated@@44 $generated@@5 $generated@@185)) (forall (($generated@@186 Int) ) (!  (=> ($generated@@20 $generated@@179 ($generated@@44 $generated@@5 ($generated@@9 $generated@@186))) (<= $generated@@186 ($generated@@10 $generated@@185)))
 :pattern ( ($generated@@20 $generated@@179 ($generated@@44 $generated@@5 ($generated@@9 $generated@@186))))
)))
 :pattern ( ($generated@@20 $generated@@179 ($generated@@44 $generated@@5 $generated@@185)))
))))))))
(let (($generated@@187  (=> (and (and ($generated@@71 $generated@@178) ($generated@@182 $generated@@178)) (and ($generated@@54 $generated@@55 $generated@@179 ($generated@@56 $generated@@27)) ($generated@@26 $generated@@55 $generated@@179 ($generated@@56 $generated@@27) $generated@@178))) (=> (and (and (and (<= ($generated@@46 1) $generated@@183) true) (= 2 $generated@@68)) (and (not ($generated@@73 $generated@@179 $generated@@37)) (= (ControlFlow 0 4) 2))) $generated@@184))))
$generated@@187)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
