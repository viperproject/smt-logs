(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@55 (Int) Int)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@66 (T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@95 (T@U Int T@U) Int)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@125 (Int T@U) Bool)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@142 () T@T)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 (T@T T@T) T@T)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@200 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@23 $generated@@24) $generated@@3))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@28 $generated@@30) ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
 :pattern ( ($generated@@25 $generated@@26 $generated@@24 ($generated@@27 $generated@@29) $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (! ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32))
 :pattern ( ($generated@@31 $generated@@26 $generated@@24 ($generated@@27 $generated@@32)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@35) (= $generated@@34 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> (and ($generated@@36 $generated@@39) ($generated@@36 $generated@@40)) (= ($generated@@33 $generated@@39 $generated@@40)  (and (= ($generated@@37 $generated@@39) ($generated@@37 $generated@@40)) ($generated@@33 ($generated@@38 $generated@@39) ($generated@@38 $generated@@40)))))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@39))
 :pattern ( ($generated@@33 $generated@@39 $generated@@40) ($generated@@36 $generated@@40))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@44 $generated@@48) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@48 ($generated@@27 $generated)))) (and (=> (not ($generated@@45 $generated@@48)) (let (($generated@@49 ($generated@@38 $generated@@48)))
(let (($generated@@50 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@48)))))
 (=> (not ($generated@@45 $generated@@49)) (let (($generated@@51 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@49)))))
 (=> (<= $generated@@50 $generated@@51) ($generated@@44 $generated@@49))))))) (= ($generated@@42 ($generated@@43 $generated@@47) $generated@@48) (ite ($generated@@45 $generated@@48) true (let (($generated@@52 ($generated@@38 $generated@@48)))
(let (($generated@@53 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@48)))))
(ite ($generated@@45 $generated@@52) true (let (($generated@@54 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@52)))))
 (and (<= $generated@@53 $generated@@54) ($generated@@42 $generated@@47 $generated@@52))))))))))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@47) $generated@@48))
))))
(assert (forall (($generated@@56 Int) ) (! (= ($generated@@55 $generated@@56) $generated@@56)
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@T) ) (! (= ($generated@@57 $generated@@59 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@59 $generated@@58))
)))
(assert  (=> (<= 5 $generated@@41) (forall (($generated@@64 T@U) ) (!  (=> (or ($generated@@61 $generated@@64) (and (< 5 $generated@@41) ($generated@@31 $generated@@26 $generated@@64 ($generated@@27 $generated)))) (and (let (($generated@@65 ($generated@@60 $generated@@64)))
 (and ($generated@@62 $generated@@64 $generated@@65) ($generated@@42 ($generated@@43 $generated@@63) $generated@@65))) ($generated@@31 $generated@@26 ($generated@@60 $generated@@64) ($generated@@27 $generated))))
 :pattern ( ($generated@@60 $generated@@64))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@31 $generated@@26 ($generated@@66 $generated@@69 $generated@@70) ($generated@@27 $generated@@68))  (and ($generated@@67 $generated@@69 $generated@@68) ($generated@@31 $generated@@26 $generated@@70 ($generated@@27 $generated@@68))))
 :pattern ( ($generated@@31 $generated@@26 ($generated@@66 $generated@@69 $generated@@70) ($generated@@27 $generated@@68)))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@45 $generated@@71) (= ($generated@@23 $generated@@71) $generated@@3))
 :pattern ( ($generated@@45 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@36 $generated@@72) (= ($generated@@23 $generated@@72) $generated@@4))
 :pattern ( ($generated@@36 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@46 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@46 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@36 $generated@@76) (exists (($generated@@77 T@U) ($generated@@78 T@U) ) (= $generated@@76 ($generated@@66 $generated@@77 $generated@@78))))
 :pattern ( ($generated@@36 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@45 $generated@@79) (= $generated@@79 $generated@@24))
 :pattern ( ($generated@@45 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@73 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@25 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 ($generated@@73 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (and (= ($generated@@22 ($generated@@27 $generated@@86)) $generated@@2) (= ($generated@@85 ($generated@@27 $generated@@86)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@86))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@44 ($generated@@57 $generated@@26 $generated@@88)) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@88 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 ($generated@@45 ($generated@@57 $generated@@26 $generated@@88)))))) (let (($generated@@89 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@88)))))
(let (($generated@@90 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@88)))))))
 (=> (not ($generated@@45 $generated@@89)) (let (($generated@@91 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@89)))))
 (=> (<= $generated@@90 $generated@@91) ($generated@@44 $generated@@89))))))) (= ($generated@@42 ($generated@@43 $generated@@87) ($generated@@57 $generated@@26 $generated@@88)) (ite ($generated@@45 ($generated@@57 $generated@@26 $generated@@88)) true (let (($generated@@92 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@88)))))
(let (($generated@@93 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@88)))))))
(ite ($generated@@45 $generated@@92) true (let (($generated@@94 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@92))))))
 (and (<= $generated@@93 $generated@@94) ($generated@@42 ($generated@@43 $generated@@87) $generated@@92))))))))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@43 $generated@@87) ($generated@@57 $generated@@26 $generated@@88)))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ($generated@@98 T@U) ) (! (= ($generated@@95 ($generated@@43 $generated@@96) $generated@@97 $generated@@98) ($generated@@95 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@100 $generated@@101) (and ($generated@@31 $generated@@26 ($generated@@99 $generated@@101) ($generated@@27 $generated)) (and ($generated@@62 $generated@@101 ($generated@@99 $generated@@101)) ($generated@@42 ($generated@@43 $generated@@63) ($generated@@99 $generated@@101)))))
 :pattern ( ($generated@@99 $generated@@101))
)))
(assert  (=> (<= 5 $generated@@41) (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or ($generated@@61 $generated@@103) (and (< 5 $generated@@41) (and ($generated@@28 $generated@@102) ($generated@@31 $generated@@26 $generated@@103 ($generated@@27 $generated))))) (and ($generated@@100 $generated@@103) (= ($generated@@60 $generated@@103) (let (($generated@@104 ($generated@@99 $generated@@103)))
$generated@@104))))
 :pattern ( ($generated@@60 $generated@@103) ($generated@@28 $generated@@102))
))))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@106 ($generated@@27 $generated@@105)) (or ($generated@@45 $generated@@106) ($generated@@36 $generated@@106)))
 :pattern ( ($generated@@36 $generated@@106) ($generated@@31 $generated@@26 $generated@@106 ($generated@@27 $generated@@105)))
 :pattern ( ($generated@@45 $generated@@106) ($generated@@31 $generated@@26 $generated@@106 ($generated@@27 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@67 $generated@@107 $generated) (and (= ($generated@@73 $generated@@8 ($generated@@46 $generated@@8 $generated@@107)) $generated@@107) ($generated@@31 $generated@@8 ($generated@@46 $generated@@8 $generated@@107) $generated)))
 :pattern ( ($generated@@67 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@42 ($generated@@43 $generated@@108) $generated@@109) ($generated@@42 $generated@@108 $generated@@109))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@67 ($generated@@73 $generated@@112 $generated@@110) $generated@@111) ($generated@@31 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@67 ($generated@@73 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and ($generated@@45 $generated@@113) ($generated@@45 $generated@@114)) ($generated@@33 $generated@@113 $generated@@114))
 :pattern ( ($generated@@33 $generated@@113 $generated@@114) ($generated@@45 $generated@@113))
 :pattern ( ($generated@@33 $generated@@113 $generated@@114) ($generated@@45 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@23 ($generated@@66 $generated@@115 $generated@@116)) $generated@@4)
 :pattern ( ($generated@@66 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@37 ($generated@@66 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@66 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@38 ($generated@@66 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@66 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@27 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@27 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@46 $generated@@124 ($generated@@73 $generated@@124 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@73 $generated@@124 $generated@@123))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@126 T@U) ($generated@@127 Int) ($generated@@128 T@U) ) (!  (=> (or ($generated@@125 $generated@@127 $generated@@128) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@128 ($generated@@27 $generated)))) (and (=> (not ($generated@@45 $generated@@128)) (let (($generated@@129 ($generated@@38 $generated@@128)))
($generated@@125 $generated@@127 $generated@@129))) (= ($generated@@95 ($generated@@43 $generated@@126) $generated@@127 $generated@@128) (ite ($generated@@45 $generated@@128) 0 (let (($generated@@130 ($generated@@38 $generated@@128)))
(let (($generated@@131 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@128)))))
(+ (ite (= $generated@@127 $generated@@131) 1 0) ($generated@@95 $generated@@126 $generated@@127 $generated@@130))))))))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@126) $generated@@127 $generated@@128))
))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (< ($generated@@132 $generated@@134) ($generated@@133 ($generated@@66 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@66 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (< ($generated@@133 $generated@@137) ($generated@@133 ($generated@@66 $generated@@136 $generated@@137)))
 :pattern ( ($generated@@66 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@28 $generated@@140) (and ($generated@@36 $generated@@138) ($generated@@25 $generated@@26 $generated@@138 ($generated@@27 $generated@@139) $generated@@140))) ($generated@@80 ($generated@@37 $generated@@138) $generated@@139 $generated@@140))
 :pattern ( ($generated@@80 ($generated@@37 $generated@@138) $generated@@139 $generated@@140))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@141 $generated@@152 $generated@@153 $generated@@154 ($generated@@148 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@157 $generated@@158) $generated@@155)
 :weight 0
)) (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@141 $generated@@159 $generated@@160 $generated@@161 ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@141 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@141 $generated@@168 $generated@@169 $generated@@170 ($generated@@148 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@141 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (= ($generated@@6 $generated@@142) 4)) (= ($generated@@6 $generated@@143) 5)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@145 $generated@@177 $generated@@178 ($generated@@149 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@181) $generated@@179)
 :weight 0
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@186 $generated@@187) (= ($generated@@145 $generated@@182 $generated@@183 ($generated@@149 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@184) $generated@@187) ($generated@@145 $generated@@182 $generated@@183 $generated@@185 $generated@@187)))
 :weight 0
))) (= ($generated@@6 $generated@@146) 6)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@6 ($generated@@147 $generated@@188 $generated@@189)) 7))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@150 ($generated@@147 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@147 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@151 ($generated@@147 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@147 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@11 ($generated@@141 $generated@@142 $generated@@143 $generated@@7 ($generated@@144 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))  (=> (and (or (not (= $generated@@198 $generated@@194)) (not true)) ($generated@@11 ($generated@@46 $generated@@7 ($generated@@145 $generated@@143 $generated@@146 ($generated@@145 $generated@@142 ($generated@@147 $generated@@143 $generated@@146) $generated@@195 $generated@@198) $generated@@196)))) $generated@@197))
 :pattern ( ($generated@@141 $generated@@142 $generated@@143 $generated@@7 ($generated@@144 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))
)))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (or ($generated@@200 ($generated@@57 $generated@@26 $generated@@201) ($generated@@57 $generated@@26 $generated@@202)) (and (< 2 $generated@@41) (and ($generated@@31 $generated@@26 $generated@@201 ($generated@@27 $generated)) ($generated@@31 $generated@@26 $generated@@202 ($generated@@27 $generated))))) (and (forall (($generated@@203 Int) ) (!  (and ($generated@@125 $generated@@203 ($generated@@57 $generated@@26 $generated@@201)) ($generated@@125 $generated@@203 ($generated@@57 $generated@@26 $generated@@202)))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@63) $generated@@203 $generated@@202))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@63) $generated@@203 $generated@@201))
)) (= ($generated@@62 ($generated@@57 $generated@@26 $generated@@201) ($generated@@57 $generated@@26 $generated@@202)) (forall (($generated@@204 Int) ) (! (= ($generated@@95 ($generated@@43 $generated@@63) $generated@@204 ($generated@@57 $generated@@26 $generated@@201)) ($generated@@95 ($generated@@43 $generated@@63) $generated@@204 ($generated@@57 $generated@@26 $generated@@202)))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@63) $generated@@204 $generated@@202))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@63) $generated@@204 $generated@@201))
)))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@57 $generated@@26 $generated@@201) ($generated@@57 $generated@@26 $generated@@202)))
))))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@132 ($generated@@73 $generated@@26 $generated@@205)) ($generated@@133 $generated@@205))
 :pattern ( ($generated@@132 ($generated@@73 $generated@@26 $generated@@205)))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@206 T@U) ($generated@@207 Int) ($generated@@208 T@U) ) (!  (=> (or ($generated@@125 ($generated@@55 $generated@@207) ($generated@@57 $generated@@26 $generated@@208)) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@208 ($generated@@27 $generated)))) (and (=> (not ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 ($generated@@45 ($generated@@57 $generated@@26 $generated@@208)))))) (let (($generated@@209 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@208)))))
($generated@@125 ($generated@@55 $generated@@207) $generated@@209))) (= ($generated@@95 ($generated@@43 $generated@@206) ($generated@@55 $generated@@207) ($generated@@57 $generated@@26 $generated@@208)) (ite ($generated@@45 ($generated@@57 $generated@@26 $generated@@208)) 0 (let (($generated@@210 ($generated@@57 $generated@@26 ($generated@@38 ($generated@@57 $generated@@26 $generated@@208)))))
(let (($generated@@211 ($generated@@55 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 ($generated@@57 $generated@@26 $generated@@208)))))))
(+ (ite (= ($generated@@55 $generated@@207) $generated@@211) 1 0) ($generated@@95 ($generated@@43 $generated@@206) ($generated@@55 $generated@@207) $generated@@210))))))))
 :weight 3
 :pattern ( ($generated@@95 ($generated@@43 $generated@@206) ($generated@@55 $generated@@207) ($generated@@57 $generated@@26 $generated@@208)))
))))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@67 $generated@@213 ($generated@@27 $generated@@212)) (and (= ($generated@@73 $generated@@26 ($generated@@46 $generated@@26 $generated@@213)) $generated@@213) ($generated@@31 $generated@@26 ($generated@@46 $generated@@26 $generated@@213) ($generated@@27 $generated@@212))))
 :pattern ( ($generated@@67 $generated@@213 ($generated@@27 $generated@@212)))
)))
(assert  (=> (<= 5 $generated@@41) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (or ($generated@@61 ($generated@@57 $generated@@26 $generated@@215)) (and (< 5 $generated@@41) (and ($generated@@28 $generated@@214) ($generated@@31 $generated@@26 $generated@@215 ($generated@@27 $generated))))) (and ($generated@@100 ($generated@@57 $generated@@26 $generated@@215)) (= ($generated@@60 ($generated@@57 $generated@@26 $generated@@215)) (let (($generated@@216 ($generated@@99 ($generated@@57 $generated@@26 $generated@@215))))
$generated@@216))))
 :weight 3
 :pattern ( ($generated@@60 ($generated@@57 $generated@@26 $generated@@215)) ($generated@@28 $generated@@214))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@28 $generated@@219) (and ($generated@@36 $generated@@217) ($generated@@25 $generated@@26 $generated@@217 ($generated@@27 $generated@@218) $generated@@219))) ($generated@@25 $generated@@26 ($generated@@38 $generated@@217) ($generated@@27 $generated@@218) $generated@@219))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@38 $generated@@217) ($generated@@27 $generated@@218) $generated@@219))
)))
(assert (= $generated@@24 ($generated@@57 $generated@@26 $generated@@24)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@66 ($generated@@57 $generated@@146 $generated@@220) ($generated@@57 $generated@@26 $generated@@221)) ($generated@@57 $generated@@26 ($generated@@66 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@66 ($generated@@57 $generated@@146 $generated@@220) ($generated@@57 $generated@@26 $generated@@221)))
)))
(assert (forall (($generated@@222 Int) ) (! (= ($generated@@73 $generated@@8 ($generated@@12 ($generated@@55 $generated@@222))) ($generated@@57 $generated@@146 ($generated@@73 $generated@@8 ($generated@@12 $generated@@222))))
 :pattern ( ($generated@@73 $generated@@8 ($generated@@12 ($generated@@55 $generated@@222))))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (= ($generated@@73 $generated@@224 ($generated@@57 $generated@@224 $generated@@223)) ($generated@@57 $generated@@146 ($generated@@73 $generated@@224 $generated@@223)))
 :pattern ( ($generated@@73 $generated@@224 ($generated@@57 $generated@@224 $generated@@223)))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@225 T@U) ($generated@@226 Int) ($generated@@227 T@U) ) (!  (=> (or ($generated@@125 $generated@@226 $generated@@227) (and (< 1 $generated@@41) ($generated@@31 $generated@@26 $generated@@227 ($generated@@27 $generated)))) (<= ($generated@@55 0) ($generated@@95 $generated@@225 $generated@@226 $generated@@227)))
 :pattern ( ($generated@@95 $generated@@225 $generated@@226 $generated@@227))
))))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (or ($generated@@200 $generated@@228 $generated@@229) (and (< 2 $generated@@41) (and ($generated@@31 $generated@@26 $generated@@228 ($generated@@27 $generated)) ($generated@@31 $generated@@26 $generated@@229 ($generated@@27 $generated))))) (and (forall (($generated@@230 Int) ) (!  (and ($generated@@125 $generated@@230 $generated@@228) ($generated@@125 $generated@@230 $generated@@229))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@63) $generated@@230 $generated@@229))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@63) $generated@@230 $generated@@228))
)) (= ($generated@@62 $generated@@228 $generated@@229) (forall (($generated@@231 Int) ) (! (= ($generated@@95 ($generated@@43 $generated@@63) $generated@@231 $generated@@228) ($generated@@95 ($generated@@43 $generated@@63) $generated@@231 $generated@@229))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@63) $generated@@231 $generated@@229))
 :pattern ( ($generated@@95 ($generated@@43 $generated@@63) $generated@@231 $generated@@228))
)))))
 :pattern ( ($generated@@62 $generated@@228 $generated@@229))
))))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! ($generated@@25 $generated@@8 $generated@@233 $generated $generated@@232)
 :pattern ( ($generated@@25 $generated@@8 $generated@@233 $generated $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> ($generated@@28 $generated@@237) (= ($generated@@25 $generated@@26 ($generated@@66 $generated@@235 $generated@@236) ($generated@@27 $generated@@234) $generated@@237)  (and ($generated@@80 $generated@@235 $generated@@234 $generated@@237) ($generated@@25 $generated@@26 $generated@@236 ($generated@@27 $generated@@234) $generated@@237))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@66 $generated@@235 $generated@@236) ($generated@@27 $generated@@234) $generated@@237))
)))
(assert (forall (($generated@@238 T@U) ) (! ($generated@@31 $generated@@8 $generated@@238 $generated)
 :pattern ( ($generated@@31 $generated@@8 $generated@@238 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@248 true))
(let (($generated@@249  (=> (and (not ($generated@@62 $generated@@239 $generated@@240)) (= (ControlFlow 0 16) 14)) $generated@@248)))
(let (($generated@@250  (=> (and (and ($generated@@62 $generated@@239 $generated@@240) ($generated@@25 $generated@@26 $generated@@240 ($generated@@27 $generated) $generated@@241)) (and ($generated@@44 $generated@@240) (= (ControlFlow 0 15) 14))) $generated@@248)))
(let (($generated@@251  (=> (and ($generated@@31 $generated@@26 ($generated@@60 $generated@@239) ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@239 ($generated@@27 $generated) $generated@@241)) (and (=> (= (ControlFlow 0 17) (- 0 18)) (or ($generated@@33 $generated@@239 $generated@@239) (< ($generated@@133 $generated@@239) ($generated@@133 $generated@@239)))) (=> (or ($generated@@33 $generated@@239 $generated@@239) (< ($generated@@133 $generated@@239) ($generated@@133 $generated@@239))) (=> (and (and (and (or ($generated@@33 $generated@@239 $generated@@239) ($generated@@61 $generated@@239)) (= $generated@@242 ($generated@@60 $generated@@239))) (and ($generated@@61 $generated@@239) ($generated@@31 $generated@@26 $generated@@242 ($generated@@27 $generated)))) (and (and (= $generated@@240 $generated@@242) ($generated@@25 $generated@@26 $generated@@239 ($generated@@27 $generated) $generated@@241)) (and ($generated@@25 $generated@@26 $generated@@240 ($generated@@27 $generated) $generated@@241) ($generated@@200 $generated@@239 $generated@@240)))) (and (=> (= (ControlFlow 0 17) 15) $generated@@250) (=> (= (ControlFlow 0 17) 16) $generated@@249))))))))
(let (($generated@@252  (and (=> (= (ControlFlow 0 2) (- 0 6)) (let (($generated@@253 ($generated@@60 $generated@@239)))
 (=> ($generated@@200 $generated@@239 $generated@@253) (or ($generated@@62 $generated@@239 $generated@@253) (forall (($generated@@254 Int) ) (! (= ($generated@@95 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@254 $generated@@239) ($generated@@95 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@254 $generated@@253))
 :pattern ( ($generated@@95 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@254 $generated@@253))
 :pattern ( ($generated@@95 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@254 $generated@@239))
)))))) (=> (let (($generated@@255 ($generated@@60 $generated@@239)))
 (=> ($generated@@200 $generated@@239 $generated@@255) (or ($generated@@62 $generated@@239 $generated@@255) (forall (($generated@@256 Int) ) (! (= ($generated@@95 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@256 $generated@@239) ($generated@@95 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@256 $generated@@255))
 :pattern ( ($generated@@95 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@256 $generated@@255))
 :pattern ( ($generated@@95 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@256 $generated@@239))
))))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (let (($generated@@257 ($generated@@60 $generated@@239)))
 (=> ($generated@@44 $generated@@257) (or ($generated@@42 ($generated@@43 $generated@@63) $generated@@257) (=> ($generated@@45 $generated@@257) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true)))))))) (=> (let (($generated@@258 ($generated@@60 $generated@@239)))
 (=> ($generated@@44 $generated@@258) (or ($generated@@42 ($generated@@43 $generated@@63) $generated@@258) (=> ($generated@@45 $generated@@258) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true))))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (let (($generated@@259 ($generated@@60 $generated@@239)))
 (=> ($generated@@44 $generated@@259) (or ($generated@@42 ($generated@@43 $generated@@63) $generated@@259) (=> (not ($generated@@45 $generated@@259)) (let (($generated@@260 ($generated@@38 $generated@@259)))
 (=> ($generated@@45 $generated@@260) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true)))))))))) (=> (let (($generated@@261 ($generated@@60 $generated@@239)))
 (=> ($generated@@44 $generated@@261) (or ($generated@@42 ($generated@@43 $generated@@63) $generated@@261) (=> (not ($generated@@45 $generated@@261)) (let (($generated@@262 ($generated@@38 $generated@@261)))
 (=> ($generated@@45 $generated@@262) ($generated@@11 ($generated@@57 $generated@@7 ($generated@@10 true))))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (let (($generated@@263 ($generated@@60 $generated@@239)))
 (=> ($generated@@44 $generated@@263) (or ($generated@@42 ($generated@@43 $generated@@63) $generated@@263) (=> (not ($generated@@45 $generated@@263)) (let (($generated@@264 ($generated@@38 $generated@@263)))
(let (($generated@@265 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@263)))))
 (=> (not ($generated@@45 $generated@@264)) (let (($generated@@266 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@264)))))
(<= $generated@@265 $generated@@266)))))))))) (=> (let (($generated@@267 ($generated@@60 $generated@@239)))
 (=> ($generated@@44 $generated@@267) (or ($generated@@42 ($generated@@43 $generated@@63) $generated@@267) (=> (not ($generated@@45 $generated@@267)) (let (($generated@@268 ($generated@@38 $generated@@267)))
(let (($generated@@269 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@267)))))
 (=> (not ($generated@@45 $generated@@268)) (let (($generated@@270 ($generated@@13 ($generated@@46 $generated@@8 ($generated@@37 $generated@@268)))))
(<= $generated@@269 $generated@@270))))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (let (($generated@@271 ($generated@@60 $generated@@239)))
 (=> ($generated@@44 $generated@@271) (or ($generated@@42 ($generated@@43 $generated@@63) $generated@@271) (=> (not ($generated@@45 $generated@@271)) (let (($generated@@272 ($generated@@38 $generated@@271)))
 (=> (not ($generated@@45 $generated@@272)) ($generated@@42 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@272))))))))))))))))))
(let (($generated@@273  (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (and ($generated@@31 $generated@@26 ($generated@@57 $generated@@26 $generated@@24) ($generated@@27 $generated)) (and ($generated@@62 $generated@@239 ($generated@@57 $generated@@26 $generated@@24)) ($generated@@42 ($generated@@43 $generated@@63) ($generated@@57 $generated@@26 $generated@@24)))) (exists (($generated@@274 T@U) )  (and ($generated@@31 $generated@@26 $generated@@274 ($generated@@27 $generated)) (and ($generated@@62 $generated@@239 $generated@@274) ($generated@@42 ($generated@@43 $generated@@63) $generated@@274)))))) (=> (or (and ($generated@@31 $generated@@26 ($generated@@57 $generated@@26 $generated@@24) ($generated@@27 $generated)) (and ($generated@@62 $generated@@239 ($generated@@57 $generated@@26 $generated@@24)) ($generated@@42 ($generated@@43 $generated@@63) ($generated@@57 $generated@@26 $generated@@24)))) (exists (($generated@@275 T@U) )  (and ($generated@@31 $generated@@26 $generated@@275 ($generated@@27 $generated)) (and ($generated@@62 $generated@@239 $generated@@275) ($generated@@42 ($generated@@43 $generated@@63) $generated@@275))))) (=> (and (and (and ($generated@@31 $generated@@26 $generated@@243 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@243 ($generated@@27 $generated) $generated@@244)) (and ($generated@@62 $generated@@239 $generated@@243) ($generated@@42 ($generated@@43 $generated@@63) $generated@@243))) (and (and ($generated@@100 $generated@@239) (= ($generated@@60 $generated@@239) $generated@@243)) (and ($generated@@31 $generated@@26 ($generated@@60 $generated@@239) ($generated@@27 $generated)) (= (ControlFlow 0 7) 2)))) $generated@@252)))))
(let (($generated@@276  (=> (and (not ($generated@@62 $generated@@239 $generated@@243)) (= (ControlFlow 0 11) 7)) $generated@@273)))
(let (($generated@@277  (=> (and (and ($generated@@62 $generated@@239 $generated@@243) ($generated@@25 $generated@@26 $generated@@243 ($generated@@27 $generated) $generated@@244)) (and ($generated@@44 $generated@@243) (= (ControlFlow 0 10) 7))) $generated@@273)))
(let (($generated@@278  (=> (and (and (and ($generated@@31 $generated@@26 $generated@@243 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@243 ($generated@@27 $generated) $generated@@244)) ($generated@@25 $generated@@26 $generated@@239 ($generated@@27 $generated) $generated@@244)) (and ($generated@@25 $generated@@26 $generated@@243 ($generated@@27 $generated) $generated@@244) ($generated@@200 $generated@@239 $generated@@243))) (and (=> (= (ControlFlow 0 12) 10) $generated@@277) (=> (= (ControlFlow 0 12) 11) $generated@@276)))))
(let (($generated@@279  (=> (and (not (and ($generated@@31 $generated@@26 $generated@@243 ($generated@@27 $generated)) ($generated@@25 $generated@@26 $generated@@243 ($generated@@27 $generated) $generated@@244))) (= (ControlFlow 0 9) 7)) $generated@@273)))
(let (($generated@@280  (=> (and (and (and ($generated@@28 $generated@@244) ($generated@@245 $generated@@244)) (forall (($generated@@281 T@U) ) (!  (=> ($generated@@31 $generated@@26 $generated@@281 ($generated@@27 $generated)) (and ($generated@@200 $generated@@239 $generated@@281) (=> ($generated@@62 $generated@@239 $generated@@281) ($generated@@44 $generated@@281))))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@63) $generated@@281))
 :pattern ( ($generated@@62 $generated@@239 $generated@@281))
))) (and (exists (($generated@@282 T@U) ) (!  (and ($generated@@31 $generated@@26 $generated@@282 ($generated@@27 $generated)) (and ($generated@@62 $generated@@239 $generated@@282) ($generated@@42 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@282)))
 :pattern ( ($generated@@42 ($generated@@43 ($generated@@43 $generated@@63)) $generated@@282))
 :pattern ( ($generated@@62 $generated@@239 $generated@@282))
)) (= $generated@@241 $generated@@244))) (and (=> (= (ControlFlow 0 13) 12) $generated@@278) (=> (= (ControlFlow 0 13) 9) $generated@@279)))))
(let (($generated@@283  (=> (= $generated@@246 ($generated@@144 $generated@@247 $generated@@241 $generated@@1 false)) (and (=> (= (ControlFlow 0 19) 17) $generated@@251) (=> (= (ControlFlow 0 19) 13) $generated@@280)))))
(let (($generated@@284  (=> (and (and (and ($generated@@28 $generated@@241) ($generated@@245 $generated@@241)) ($generated@@31 $generated@@26 $generated@@239 ($generated@@27 $generated))) (and (= 5 $generated@@41) (= (ControlFlow 0 20) 19))) $generated@@283)))
$generated@@284))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
