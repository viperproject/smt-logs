(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U T@U) Bool)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (Int) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U T@U) Bool)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@U Int) T@U)
(declare-fun $generated@@48 (Int) Bool)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@52 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@109 (T@U T@U) Bool)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@153 (T@T T@T) T@T)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@207 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@22) $generated@@23 $generated@@24) (= $generated@@23 $generated@@24))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@22) $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ($generated@@34 Int) ) (!  (=> (and (and (<= 0 $generated@@33) (<= 0 $generated@@34)) (<= (+ $generated@@33 $generated@@34) ($generated@@31 $generated@@32))) (= ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)) ($generated@@29 $generated@@32 ($generated@@30 (+ $generated@@33 $generated@@34)))))
 :pattern ( ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@1))
(assert (= ($generated@@4 $generated@@40) 3))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@40 $generated@@44 $generated@@41) ($generated@@39 $generated@@40 $generated@@45 $generated@@41)) ($generated@@38 ($generated@@21 $generated@@43) $generated@@44 $generated@@45)) (forall (($generated@@46 T@U) ) (! ($generated@@42 ($generated@@21 $generated@@43) $generated@@46 $generated@@44 $generated@@45)
 :pattern ( ($generated@@42 ($generated@@21 $generated@@43) $generated@@46 $generated@@44 $generated@@45))
)))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@43) $generated@@44 $generated@@45))
))))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@50 T@U) ($generated@@51 Int) ) (!  (=> (or ($generated@@48 $generated@@51) (and (< 1 $generated@@37) (<= ($generated@@49 0) $generated@@51))) ($generated@@39 $generated@@40 ($generated@@47 $generated@@50 $generated@@51) $generated@@41))
 :pattern ( ($generated@@47 $generated@@50 $generated@@51))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (forall (($generated@@56 Int) ) (!  (=> (<= 0 $generated@@56) ($generated@@52 ($generated@@30 $generated@@56) ($generated@@21 $generated@@53) $generated@@54 $generated@@55))
 :pattern ( ($generated@@52 ($generated@@30 $generated@@56) ($generated@@21 $generated@@53) $generated@@54 $generated@@55))
)) ($generated@@20 ($generated@@21 $generated@@53) $generated@@54 $generated@@55))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@53) $generated@@54 $generated@@55))
)))
(assert ($generated@@39 $generated@@40 $generated@@36 $generated@@41))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (and ($generated@@25 $generated@@57 $generated@@61) ($generated@@52 $generated@@61 ($generated@@21 $generated@@58) $generated@@59 $generated@@60)) ($generated@@52 $generated@@57 ($generated@@21 $generated@@58) $generated@@59 $generated@@60))
 :pattern ( ($generated@@52 $generated@@57 ($generated@@21 $generated@@58) $generated@@59 $generated@@60) ($generated@@52 $generated@@61 ($generated@@21 $generated@@58) $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 Int) ) (! (= ($generated@@49 $generated@@62) $generated@@62)
 :pattern ( ($generated@@49 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 $generated@@64) $generated@@64)
 :pattern ( ($generated@@63 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@35 $generated@@67) $generated@@1))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 $generated@@69) (= ($generated@@35 $generated@@69) $generated@@2))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@70 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@70 $generated@@73 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@77 $generated@@41) ($generated@@39 $generated@@40 $generated@@78 $generated@@41)) (= ($generated@@52 $generated@@75 ($generated@@21 $generated@@76) $generated@@77 $generated@@78)  (and (=> (< 0 ($generated@@31 $generated@@75)) (or (and ($generated@@66 $generated@@77) ($generated@@66 $generated@@78)) (and (and ($generated@@68 $generated@@77) ($generated@@68 $generated@@78)) (=> (and ($generated@@68 $generated@@77) ($generated@@68 $generated@@78)) ($generated@@52 ($generated@@29 $generated@@75 ($generated@@30 1)) $generated@@76 ($generated@@74 $generated@@77) ($generated@@74 $generated@@78)))))) (=> (and (or (not (= $generated@@75 ($generated@@30 0))) (not true)) (= ($generated@@31 $generated@@75) 0)) ($generated@@20 $generated@@76 $generated@@77 $generated@@78)))))
 :pattern ( ($generated@@52 $generated@@75 ($generated@@21 $generated@@76) $generated@@77 $generated@@78))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@40 $generated@@80 $generated@@41) ($generated@@39 $generated@@40 $generated@@81 $generated@@41)) (forall (($generated@@82 T@U) ) (! ($generated@@42 ($generated@@21 $generated@@79) $generated@@82 $generated@@80 $generated@@81)
 :pattern ( ($generated@@42 ($generated@@21 $generated@@79) $generated@@82 $generated@@80 $generated@@81))
))) ($generated@@38 ($generated@@21 $generated@@79) $generated@@80 $generated@@81))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@79) $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@66 $generated@@83) (= $generated@@83 $generated@@36))
 :pattern ( ($generated@@66 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@68 $generated@@85) (exists (($generated@@86 T@U) ) (= $generated@@85 ($generated@@84 $generated@@86))))
 :pattern ( ($generated@@68 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and ($generated@@39 $generated@@40 $generated@@88 $generated@@41) ($generated@@39 $generated@@40 $generated@@89 $generated@@41)) (= ($generated@@20 ($generated@@21 $generated@@87) $generated@@88 $generated@@89)  (or (and ($generated@@66 $generated@@88) ($generated@@66 $generated@@89)) (and (and ($generated@@68 $generated@@88) ($generated@@68 $generated@@89)) (=> (and ($generated@@68 $generated@@88) ($generated@@68 $generated@@89)) ($generated@@20 $generated@@87 ($generated@@74 $generated@@88) ($generated@@74 $generated@@89)))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or (not (= $generated@@90 ($generated@@30 0))) (not true)) (= ($generated@@52 $generated@@90 ($generated@@21 $generated@@91) $generated@@92 $generated@@93) ($generated@@52 $generated@@90 $generated@@91 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@52 $generated@@90 ($generated@@21 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@38 ($generated@@21 $generated@@94) $generated@@95 $generated@@96) ($generated@@38 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@97) $generated@@98 $generated@@99) ($generated@@20 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and ($generated@@100 $generated@@102) (<= ($generated@@31 $generated@@102) ($generated@@31 $generated@@101))) (and (= ($generated@@100 ($generated@@29 $generated@@101 $generated@@102)) ($generated@@100 $generated@@101)) (= ($generated@@31 ($generated@@29 $generated@@101 $generated@@102)) (- ($generated@@31 $generated@@101) ($generated@@31 $generated@@102)))))
 :pattern ( ($generated@@29 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 Int) ) (!  (=> (<= 0 $generated@@103) (and ($generated@@100 ($generated@@30 $generated@@103)) (= ($generated@@31 ($generated@@30 $generated@@103)) $generated@@103)))
 :pattern ( ($generated@@30 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@39 $generated@@40 ($generated@@84 $generated@@104) $generated@@41) ($generated@@39 $generated@@40 $generated@@104 $generated@@41))
 :pattern ( ($generated@@39 $generated@@40 ($generated@@84 $generated@@104) $generated@@41))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@105) $generated@@106 $generated@@107) (forall (($generated@@108 T@U) ) (! ($generated@@52 $generated@@108 ($generated@@21 $generated@@105) $generated@@106 $generated@@107)
 :pattern ( ($generated@@52 $generated@@108 ($generated@@21 $generated@@105) $generated@@106 $generated@@107))
)))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@105) $generated@@106 $generated@@107))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or ($generated@@109 $generated@@113 $generated@@114) (and (< 1 $generated@@37) (and ($generated@@39 $generated@@40 $generated@@113 $generated@@41) ($generated@@39 $generated@@40 $generated@@114 $generated@@41)))) (and (and ($generated@@110 $generated@@113) (=> (not ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@113 $generated@@36)) (=> ($generated@@68 $generated@@113) (=> ($generated@@68 $generated@@114) ($generated@@109 ($generated@@74 $generated@@113) ($generated@@74 $generated@@114)))))) (= ($generated@@38 ($generated@@21 $generated@@112) $generated@@113 $generated@@114)  (or ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@113 $generated@@36) (and (and ($generated@@68 $generated@@113) ($generated@@68 $generated@@114)) ($generated@@38 $generated@@112 ($generated@@74 $generated@@113) ($generated@@74 $generated@@114)))))))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@112) $generated@@113 $generated@@114))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@115 $generated@@117 $generated@@118 $generated@@119) (and (< 2 $generated@@37) (and ($generated@@39 $generated@@40 $generated@@118 $generated@@41) ($generated@@39 $generated@@40 $generated@@119 $generated@@41)))) (and (and (=> (< 0 ($generated@@31 $generated@@117)) (and ($generated@@110 $generated@@118) (=> (not ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@118 $generated@@36)) (=> ($generated@@68 $generated@@118) (=> ($generated@@68 $generated@@119) ($generated@@115 ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@74 $generated@@118) ($generated@@74 $generated@@119))))))) (=> (=> (< 0 ($generated@@31 $generated@@117)) (or ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@118 $generated@@36) (and (and ($generated@@68 $generated@@118) ($generated@@68 $generated@@119)) ($generated@@42 $generated@@116 ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@74 $generated@@118) ($generated@@74 $generated@@119))))) (=> (= ($generated@@49 0) ($generated@@31 $generated@@117)) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@25 $generated@@120 $generated@@117) ($generated@@115 $generated@@120 $generated@@118 $generated@@119))
 :pattern ( ($generated@@42 $generated@@116 $generated@@120 $generated@@118 $generated@@119))
))))) (= ($generated@@42 ($generated@@21 $generated@@116) $generated@@117 $generated@@118 $generated@@119)  (and (=> (< 0 ($generated@@31 $generated@@117)) (or ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@118 $generated@@36) (and (and ($generated@@68 $generated@@118) ($generated@@68 $generated@@119)) ($generated@@42 $generated@@116 ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@74 $generated@@118) ($generated@@74 $generated@@119))))) (=> (= ($generated@@49 0) ($generated@@31 $generated@@117)) (forall (($generated@@121 T@U) ) (!  (=> ($generated@@25 $generated@@121 $generated@@117) ($generated@@42 $generated@@116 $generated@@121 $generated@@118 $generated@@119))
 :pattern ( ($generated@@42 $generated@@116 $generated@@121 $generated@@118 $generated@@119))
)))))))
 :pattern ( ($generated@@42 ($generated@@21 $generated@@116) $generated@@117 $generated@@118 $generated@@119))
))))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@110 $generated@@122) (or ($generated@@66 $generated@@122) ($generated@@68 $generated@@122)))
 :pattern ( ($generated@@110 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (or ($generated@@25 $generated@@123 $generated@@124) (= $generated@@123 $generated@@124)) ($generated@@25 $generated@@124 $generated@@123))
 :pattern ( ($generated@@25 $generated@@123 $generated@@124) ($generated@@25 $generated@@124 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@39 $generated@@40 $generated@@125 $generated@@41) (or ($generated@@66 $generated@@125) ($generated@@68 $generated@@125)))
 :pattern ( ($generated@@68 $generated@@125) ($generated@@39 $generated@@40 $generated@@125 $generated@@41))
 :pattern ( ($generated@@66 $generated@@125) ($generated@@39 $generated@@40 $generated@@125 $generated@@41))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@42 ($generated@@21 $generated@@126) $generated@@127 $generated@@128 $generated@@129) ($generated@@42 $generated@@126 $generated@@127 $generated@@128 $generated@@129))
 :pattern ( ($generated@@42 ($generated@@21 $generated@@126) $generated@@127 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (<= 0 ($generated@@31 $generated@@130))
 :pattern ( ($generated@@31 $generated@@130))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@131 T@U) ($generated@@132 Int) ) (!  (=> (or ($generated@@48 $generated@@132) (and (< 1 $generated@@37) (<= ($generated@@49 0) $generated@@132))) (and (=> (or (not (= $generated@@132 ($generated@@49 0))) (not true)) ($generated@@48 (- $generated@@132 1))) (= ($generated@@47 ($generated@@21 $generated@@131) $generated@@132) (ite (= $generated@@132 ($generated@@49 0)) $generated@@36 ($generated@@84 ($generated@@47 $generated@@131 (- $generated@@132 1)))))))
 :pattern ( ($generated@@47 ($generated@@21 $generated@@131) $generated@@132))
))))
(assert (= ($generated@@4 $generated@@133) 4))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (or ($generated@@115 ($generated@@63 $generated@@133 $generated@@135) $generated@@136 $generated@@137) (and (< 2 $generated@@37) (and ($generated@@39 $generated@@40 $generated@@136 $generated@@41) ($generated@@39 $generated@@40 $generated@@137 $generated@@41)))) (and (and (=> (< 0 ($generated@@31 $generated@@135)) (and ($generated@@110 $generated@@136) (=> (not ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@136 $generated@@36)) (=> ($generated@@68 $generated@@136) (=> ($generated@@68 $generated@@137) ($generated@@115 ($generated@@29 $generated@@135 ($generated@@30 1)) ($generated@@74 $generated@@136) ($generated@@74 $generated@@137))))))) (=> (=> (< 0 ($generated@@31 $generated@@135)) (or ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@136 $generated@@36) (and (and ($generated@@68 $generated@@136) ($generated@@68 $generated@@137)) ($generated@@42 ($generated@@21 $generated@@134) ($generated@@29 $generated@@135 ($generated@@30 1)) ($generated@@74 $generated@@136) ($generated@@74 $generated@@137))))) (=> (= ($generated@@49 0) ($generated@@31 $generated@@135)) (forall (($generated@@138 T@U) ) (!  (=> ($generated@@25 $generated@@138 $generated@@135) ($generated@@115 $generated@@138 $generated@@136 $generated@@137))
 :pattern ( ($generated@@42 ($generated@@21 $generated@@134) $generated@@138 $generated@@136 $generated@@137))
))))) (= ($generated@@42 ($generated@@21 $generated@@134) ($generated@@63 $generated@@133 $generated@@135) $generated@@136 $generated@@137)  (and (=> (< 0 ($generated@@31 $generated@@135)) (or ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@136 $generated@@36) (and (and ($generated@@68 $generated@@136) ($generated@@68 $generated@@137)) ($generated@@42 ($generated@@21 $generated@@134) ($generated@@29 $generated@@135 ($generated@@30 1)) ($generated@@74 $generated@@136) ($generated@@74 $generated@@137))))) (=> (= ($generated@@49 0) ($generated@@31 $generated@@135)) (forall (($generated@@139 T@U) ) (!  (=> ($generated@@25 $generated@@139 $generated@@135) ($generated@@42 ($generated@@21 $generated@@134) $generated@@139 $generated@@136 $generated@@137))
 :pattern ( ($generated@@42 ($generated@@21 $generated@@134) $generated@@139 $generated@@136 $generated@@137))
)))))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@21 $generated@@134) ($generated@@63 $generated@@133 $generated@@135) $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@35 ($generated@@84 $generated@@140)) $generated@@2)
 :pattern ( ($generated@@84 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@74 ($generated@@84 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@84 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@70 $generated@@143 ($generated@@71 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@71 $generated@@143 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@144 $generated@@145) (or (not (= $generated@@144 $generated@@145)) (not true))) (=> (and ($generated@@100 $generated@@144) (not ($generated@@100 $generated@@145))) ($generated@@25 $generated@@144 $generated@@145))) (=> (and ($generated@@100 $generated@@144) ($generated@@100 $generated@@145)) (= ($generated@@25 $generated@@144 $generated@@145) (< ($generated@@31 $generated@@144) ($generated@@31 $generated@@145))))) (=> (and ($generated@@25 $generated@@144 $generated@@145) ($generated@@100 $generated@@145)) ($generated@@100 $generated@@144)))
 :pattern ( ($generated@@25 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 Int) ) (! (= ($generated@@47 ($generated@@21 $generated@@146) $generated@@147) ($generated@@47 $generated@@146 $generated@@147))
 :pattern ( ($generated@@47 ($generated@@21 $generated@@146) $generated@@147))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@148 $generated@@158 $generated@@159 $generated@@160 ($generated@@154 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@148 $generated@@165 $generated@@166 $generated@@167 ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@148 $generated@@174 $generated@@175 $generated@@176 ($generated@@154 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@148 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))) (= ($generated@@4 $generated@@149) 5)) (= ($generated@@4 $generated@@150) 6)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@152 $generated@@183 $generated@@184 ($generated@@155 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@187) $generated@@185)
 :weight 0
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@192 $generated@@193) (= ($generated@@152 $generated@@188 $generated@@189 ($generated@@155 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@190) $generated@@193) ($generated@@152 $generated@@188 $generated@@189 $generated@@191 $generated@@193)))
 :weight 0
))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@4 ($generated@@153 $generated@@194 $generated@@195)) 7))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@156 ($generated@@153 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@153 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@157 ($generated@@153 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@153 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@9 ($generated@@148 $generated@@149 $generated@@150 $generated@@5 ($generated@@151 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))  (=> (and (or (not (= $generated@@204 $generated@@200)) (not true)) ($generated@@9 ($generated@@70 $generated@@5 ($generated@@152 $generated@@150 $generated@@133 ($generated@@152 $generated@@149 ($generated@@153 $generated@@150 $generated@@133) $generated@@201 $generated@@204) $generated@@202)))) $generated@@203))
 :pattern ( ($generated@@148 $generated@@149 $generated@@150 $generated@@5 ($generated@@151 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> ($generated@@100 $generated@@206) (= $generated@@206 ($generated@@30 ($generated@@31 $generated@@206))))
 :pattern ( ($generated@@31 $generated@@206))
 :pattern ( ($generated@@100 $generated@@206))
)))
(assert (= ($generated@@207 $generated@@41) $generated@@0))
(assert (= ($generated@@208 $generated@@41) $generated@@3))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and (and ($generated@@39 $generated@@40 $generated@@210 $generated@@41) ($generated@@39 $generated@@40 $generated@@211 $generated@@41)) (= $generated@@212 ($generated@@30 0))) ($generated@@42 $generated@@209 $generated@@212 $generated@@210 $generated@@211))
 :pattern ( ($generated@@42 $generated@@209 $generated@@212 $generated@@210 $generated@@211))
))))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and ($generated@@100 $generated@@214) (<= ($generated@@31 $generated@@214) ($generated@@31 $generated@@213))) (or (and (= $generated@@214 ($generated@@30 0)) (= ($generated@@29 $generated@@213 $generated@@214) $generated@@213)) (and (or (not (= $generated@@214 ($generated@@30 0))) (not true)) ($generated@@25 ($generated@@29 $generated@@213 $generated@@214) $generated@@213))))
 :pattern ( ($generated@@29 $generated@@213 $generated@@214))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (or ($generated@@115 ($generated@@63 $generated@@133 $generated@@216) ($generated@@63 $generated@@40 $generated@@217) ($generated@@63 $generated@@40 $generated@@218)) (and (< 2 $generated@@37) (and ($generated@@39 $generated@@40 $generated@@217 $generated@@41) ($generated@@39 $generated@@40 $generated@@218 $generated@@41)))) (and (and (=> (< 0 ($generated@@31 $generated@@216)) (and ($generated@@110 ($generated@@63 $generated@@40 $generated@@217)) (=> (not ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@217 $generated@@36)) (=> ($generated@@9 ($generated@@63 $generated@@5 ($generated@@8 ($generated@@68 ($generated@@63 $generated@@40 $generated@@217))))) (=> ($generated@@9 ($generated@@63 $generated@@5 ($generated@@8 ($generated@@68 ($generated@@63 $generated@@40 $generated@@218))))) ($generated@@115 ($generated@@29 $generated@@216 ($generated@@30 1)) ($generated@@63 $generated@@40 ($generated@@74 ($generated@@63 $generated@@40 $generated@@217))) ($generated@@63 $generated@@40 ($generated@@74 ($generated@@63 $generated@@40 $generated@@218))))))))) (=> (=> (< 0 ($generated@@31 $generated@@216)) (or ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@217 $generated@@36) (and (and ($generated@@68 ($generated@@63 $generated@@40 $generated@@217)) ($generated@@68 ($generated@@63 $generated@@40 $generated@@218))) ($generated@@42 ($generated@@21 $generated@@215) ($generated@@29 $generated@@216 ($generated@@30 1)) ($generated@@63 $generated@@40 ($generated@@74 ($generated@@63 $generated@@40 $generated@@217))) ($generated@@63 $generated@@40 ($generated@@74 ($generated@@63 $generated@@40 $generated@@218))))))) (=> (= ($generated@@49 0) ($generated@@31 $generated@@216)) (forall (($generated@@219 T@U) ) (!  (=> ($generated@@25 $generated@@219 $generated@@216) ($generated@@115 $generated@@219 $generated@@217 $generated@@218))
 :pattern ( ($generated@@42 ($generated@@21 $generated@@215) $generated@@219 $generated@@217 $generated@@218))
))))) (= ($generated@@42 ($generated@@21 $generated@@215) ($generated@@63 $generated@@133 $generated@@216) ($generated@@63 $generated@@40 $generated@@217) ($generated@@63 $generated@@40 $generated@@218))  (and (=> (< 0 ($generated@@31 $generated@@216)) (or ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@217 $generated@@36) (and (and ($generated@@68 ($generated@@63 $generated@@40 $generated@@217)) ($generated@@68 ($generated@@63 $generated@@40 $generated@@218))) ($generated@@42 ($generated@@21 $generated@@215) ($generated@@29 $generated@@216 ($generated@@30 1)) ($generated@@63 $generated@@40 ($generated@@74 ($generated@@63 $generated@@40 $generated@@217))) ($generated@@63 $generated@@40 ($generated@@74 ($generated@@63 $generated@@40 $generated@@218))))))) (=> (= ($generated@@49 0) ($generated@@31 $generated@@216)) (forall (($generated@@220 T@U) ) (!  (=> ($generated@@25 $generated@@220 $generated@@216) ($generated@@42 ($generated@@21 $generated@@215) $generated@@220 $generated@@217 $generated@@218))
 :pattern ( ($generated@@42 ($generated@@21 $generated@@215) $generated@@220 $generated@@217 $generated@@218))
)))))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@21 $generated@@215) ($generated@@63 $generated@@133 $generated@@216) ($generated@@63 $generated@@40 $generated@@217) ($generated@@63 $generated@@40 $generated@@218)))
))))
(assert (forall (($generated@@221 Int) ) (! (= ($generated@@71 $generated@@6 ($generated@@10 ($generated@@49 $generated@@221))) ($generated@@63 $generated@@133 ($generated@@71 $generated@@6 ($generated@@10 $generated@@221))))
 :pattern ( ($generated@@71 $generated@@6 ($generated@@10 ($generated@@49 $generated@@221))))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@T) ) (! (= ($generated@@71 $generated@@223 ($generated@@63 $generated@@223 $generated@@222)) ($generated@@63 $generated@@133 ($generated@@71 $generated@@223 $generated@@222)))
 :pattern ( ($generated@@71 $generated@@223 ($generated@@63 $generated@@223 $generated@@222)))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (= $generated@@226 $generated@@227) ($generated@@52 $generated@@224 ($generated@@21 $generated@@225) $generated@@226 $generated@@227))
 :pattern ( ($generated@@52 $generated@@224 ($generated@@21 $generated@@225) $generated@@226 $generated@@227))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 () Int)
(declare-fun $generated@@235 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@236  (=> (= $generated@@228 ($generated@@151 $generated@@229 $generated@@230 $generated false)) (=> (and (and (and ($generated@@231 $generated@@232) ($generated@@233 $generated@@232)) (= $generated@@230 $generated@@232)) (and (and (forall (($generated@@237 Int) ($generated@@238 Int) ) (!  (=> (and (and (and (<= ($generated@@49 0) $generated@@237) (<= ($generated@@49 0) $generated@@238)) (<= $generated@@237 $generated@@238)) (or (and (<= 0 $generated@@237) (< $generated@@237 $generated@@234)) (and (= $generated@@237 $generated@@234) (and (<= 0 $generated@@238) (< $generated@@238 $generated@@235))))) ($generated@@38 ($generated@@21 $generated@@111) ($generated@@47 ($generated@@21 $generated@@111) $generated@@237) ($generated@@47 ($generated@@21 $generated@@111) $generated@@238)))
 :pattern ( ($generated@@47 ($generated@@21 $generated@@111) $generated@@238) ($generated@@47 ($generated@@21 $generated@@111) $generated@@237))
)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@109 ($generated@@47 ($generated@@21 $generated@@111) $generated@@234) ($generated@@47 ($generated@@21 $generated@@111) $generated@@235)))) (or ($generated@@38 ($generated@@21 $generated@@111) ($generated@@47 ($generated@@21 $generated@@111) $generated@@234) ($generated@@47 ($generated@@21 $generated@@111) $generated@@235)) (or ($generated@@20 ($generated@@21 ($generated@@21 $generated@@111)) ($generated@@47 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@234) $generated@@36) (and (and ($generated@@68 ($generated@@47 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@234)) ($generated@@68 ($generated@@47 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@235))) ($generated@@38 ($generated@@21 ($generated@@21 $generated@@111)) ($generated@@74 ($generated@@47 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@234)) ($generated@@74 ($generated@@47 ($generated@@21 ($generated@@21 $generated@@111)) $generated@@235))))))))))
(let (($generated@@239  (=> (and (and (and ($generated@@231 $generated@@230) ($generated@@233 $generated@@230)) (<= ($generated@@49 0) $generated@@234)) (and (and (<= ($generated@@49 0) $generated@@235) (= 2 $generated@@37)) (and (<= $generated@@234 $generated@@235) (= (ControlFlow 0 3) 2)))) $generated@@236)))
$generated@@239)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
