(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@U Int) T@U)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@U T@U) Bool)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@52 () Int)
(declare-fun $generated@@53 (T@U T@U Int) Int)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U Int) Bool)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@57 (T@U Int) T@U)
(declare-fun $generated@@58 (Int Int) Int)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (Int Int) Int)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@119 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 (T@T T@T) T@T)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T) T@T)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@174 (T@U Int Int) Bool)
(declare-fun $generated@@175 (T@U Int Int) Bool)
(declare-fun $generated@@180 (Int Int) Int)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25)
 :pattern ( ($generated@@22 $generated@@7 $generated@@24 $generated@@23 $generated@@25))
)))
(assert (= ($generated@@26 $generated@@27) 0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 Int) ) (!  (=> (and (<= 0 $generated@@32) (<= $generated@@32 ($generated@@26 $generated@@30))) (= ($generated@@28 ($generated@@29 $generated@@30 $generated@@31) $generated@@32) ($generated@@29 ($generated@@28 $generated@@30 $generated@@32) $generated@@31)))
 :pattern ( ($generated@@28 ($generated@@29 $generated@@30 $generated@@31) $generated@@32))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (= $generated@@37 ($generated@@26 $generated@@35)) (and (= ($generated@@33 ($generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@35) (= ($generated@@28 ($generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@36)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@28 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (= $generated@@39 0) (= ($generated@@28 $generated@@38 $generated@@39) $generated@@38))
 :pattern ( ($generated@@28 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 Int) ) (! (= ($generated@@40 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@T) ) (! (= ($generated@@42 $generated@@44 $generated@@43) $generated@@43)
 :pattern ( ($generated@@42 $generated@@44 $generated@@43))
)))
(assert (= ($generated@@5 $generated@@46) 3))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (and ($generated@@45 $generated@@46 $generated@@49 ($generated@@47 $generated@@51)) ($generated@@48 $generated@@50 $generated@@51)) ($generated@@45 $generated@@46 ($generated@@29 $generated@@49 $generated@@50) ($generated@@47 $generated@@51)))
 :pattern ( ($generated@@45 $generated@@46 ($generated@@29 $generated@@49 $generated@@50) ($generated@@47 $generated@@51)))
)))
(assert  (=> (<= 0 $generated@@52) (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 Int) ) (!  (=> (or ($generated@@55 ($generated@@42 $generated@@46 $generated@@60) ($generated@@40 $generated@@61)) (and (< 0 $generated@@52) (and ($generated@@45 $generated@@46 $generated@@60 ($generated@@47 $generated)) (<= ($generated@@40 2) ($generated@@40 $generated@@61))))) (and (=> (or (not (= ($generated@@26 ($generated@@42 $generated@@46 $generated@@60)) ($generated@@40 0))) (not true)) ($generated@@55 ($generated@@42 $generated@@46 ($generated@@28 ($generated@@42 $generated@@46 $generated@@60) ($generated@@40 1))) ($generated@@40 $generated@@61))) (= ($generated@@53 ($generated@@54 $generated@@59) ($generated@@42 $generated@@46 $generated@@60) ($generated@@40 $generated@@61)) (ite (= ($generated@@26 ($generated@@42 $generated@@46 $generated@@60)) ($generated@@40 0)) 0 (+ ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 ($generated@@42 $generated@@46 $generated@@60) ($generated@@40 0)))) ($generated@@58 ($generated@@40 $generated@@61) ($generated@@40 ($generated@@53 ($generated@@54 $generated@@59) ($generated@@42 $generated@@46 ($generated@@28 ($generated@@42 $generated@@46 $generated@@60) ($generated@@40 1))) ($generated@@40 $generated@@61)))))))))
 :weight 3
 :pattern ( ($generated@@53 ($generated@@54 $generated@@59) ($generated@@42 $generated@@46 $generated@@60) ($generated@@40 $generated@@61)))
))))
(assert (forall (($generated@@62 T@U) ($generated@@63 Int) ($generated@@64 Int) ) (!  (=> (and (and (<= 0 $generated@@64) (< $generated@@64 $generated@@63)) (< $generated@@64 ($generated@@26 $generated@@62))) (= ($generated@@57 ($generated@@33 $generated@@62 $generated@@63) $generated@@64) ($generated@@57 $generated@@62 $generated@@64)))
 :weight 25
 :pattern ( ($generated@@57 ($generated@@33 $generated@@62 $generated@@63) $generated@@64))
 :pattern ( ($generated@@57 $generated@@62 $generated@@64) ($generated@@33 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 Int) ) (!  (=> (and (<= 0 $generated@@66) (<= $generated@@66 ($generated@@26 $generated@@65))) (= ($generated@@26 ($generated@@28 $generated@@65 $generated@@66)) (- ($generated@@26 $generated@@65) $generated@@66)))
 :pattern ( ($generated@@26 ($generated@@28 $generated@@65 $generated@@66)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@56 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@56 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@45 $generated@@7 $generated@@70 $generated@@23) (<= ($generated@@40 0) ($generated@@12 $generated@@70)))
 :pattern ( ($generated@@45 $generated@@7 $generated@@70 $generated@@23))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@26 ($generated@@29 $generated@@71 $generated@@72)) (+ 1 ($generated@@26 $generated@@71)))
 :pattern ( ($generated@@29 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@73 ($generated@@67 $generated@@77 $generated@@74) $generated@@75 $generated@@76) ($generated@@22 $generated@@77 $generated@@74 $generated@@75 $generated@@76))
 :pattern ( ($generated@@73 ($generated@@67 $generated@@77 $generated@@74) $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 Int) ($generated@@80 Int) ) (!  (=> (and (and (<= 0 $generated@@79) (<= 0 $generated@@80)) (< $generated@@80 (- ($generated@@26 $generated@@78) $generated@@79))) (= ($generated@@57 ($generated@@28 $generated@@78 $generated@@79) $generated@@80) ($generated@@57 $generated@@78 (+ $generated@@80 $generated@@79))))
 :weight 25
 :pattern ( ($generated@@57 ($generated@@28 $generated@@78 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@26 ($generated@@34 $generated@@81 $generated@@82)) (+ ($generated@@26 $generated@@81) ($generated@@26 $generated@@82)))
 :pattern ( ($generated@@26 ($generated@@34 $generated@@81 $generated@@82)))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@48 $generated@@83 $generated@@23) (and (= ($generated@@67 $generated@@7 ($generated@@56 $generated@@7 $generated@@83)) $generated@@83) ($generated@@45 $generated@@7 ($generated@@56 $generated@@7 $generated@@83) $generated@@23)))
 :pattern ( ($generated@@48 $generated@@83 $generated@@23))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 Int) ($generated@@86 T@U) ) (!  (and (=> (= $generated@@85 ($generated@@26 $generated@@84)) (= ($generated@@57 ($generated@@29 $generated@@84 $generated@@86) $generated@@85) $generated@@86)) (=> (or (not (= $generated@@85 ($generated@@26 $generated@@84))) (not true)) (= ($generated@@57 ($generated@@29 $generated@@84 $generated@@86) $generated@@85) ($generated@@57 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@57 ($generated@@29 $generated@@84 $generated@@86) $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ) (! (= ($generated@@53 ($generated@@54 $generated@@87) $generated@@88 $generated@@89) ($generated@@53 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@53 ($generated@@54 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 Int) ($generated@@92 Int) ) (! (= ($generated@@90 $generated@@91 $generated@@92) (div $generated@@91 $generated@@92))
 :pattern ( ($generated@@90 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 Int) ) (!  (=> (and (<= 0 $generated@@94) (<= $generated@@94 ($generated@@26 $generated@@93))) (= ($generated@@26 ($generated@@33 $generated@@93 $generated@@94)) $generated@@94))
 :pattern ( ($generated@@26 ($generated@@33 $generated@@93 $generated@@94)))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@48 $generated@@95 $generated) (and (= ($generated@@67 $generated@@7 ($generated@@56 $generated@@7 $generated@@95)) $generated@@95) ($generated@@45 $generated@@7 ($generated@@56 $generated@@7 $generated@@95) $generated)))
 :pattern ( ($generated@@48 $generated@@95 $generated))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@48 ($generated@@67 $generated@@98 $generated@@96) $generated@@97) ($generated@@45 $generated@@98 $generated@@96 $generated@@97))
 :pattern ( ($generated@@48 ($generated@@67 $generated@@98 $generated@@96) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (<= 0 ($generated@@26 $generated@@99))
 :pattern ( ($generated@@26 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@22 $generated@@46 $generated@@100 ($generated@@47 $generated@@101) $generated@@102) (forall (($generated@@103 Int) ) (!  (=> (and (<= 0 $generated@@103) (< $generated@@103 ($generated@@26 $generated@@100))) ($generated@@73 ($generated@@57 $generated@@100 $generated@@103) $generated@@101 $generated@@102))
 :pattern ( ($generated@@57 $generated@@100 $generated@@103))
)))
 :pattern ( ($generated@@22 $generated@@46 $generated@@100 ($generated@@47 $generated@@101) $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@104 ($generated@@47 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@47 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@21 ($generated@@47 $generated@@106)) $generated@@1)
 :pattern ( ($generated@@47 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@56 $generated@@108 ($generated@@67 $generated@@108 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@67 $generated@@108 $generated@@107))
)))
(assert  (=> (<= 0 $generated@@52) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 Int) ) (!  (=> (or ($generated@@55 $generated@@110 $generated@@111) (and (< 0 $generated@@52) (and ($generated@@45 $generated@@46 $generated@@110 ($generated@@47 $generated)) (<= ($generated@@40 2) $generated@@111)))) (and (=> (or (not (= ($generated@@26 $generated@@110) ($generated@@40 0))) (not true)) ($generated@@55 ($generated@@28 $generated@@110 ($generated@@40 1)) $generated@@111)) (= ($generated@@53 ($generated@@54 $generated@@109) $generated@@110 $generated@@111) (ite (= ($generated@@26 $generated@@110) ($generated@@40 0)) 0 (+ ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@110 ($generated@@40 0)))) ($generated@@58 $generated@@111 ($generated@@53 $generated@@109 ($generated@@28 $generated@@110 ($generated@@40 1)) $generated@@111)))))))
 :pattern ( ($generated@@53 ($generated@@54 $generated@@109) $generated@@110 $generated@@111))
))))
(assert  (=> (<= 0 $generated@@52) (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 Int) ) (!  (=> (or ($generated@@55 ($generated@@42 $generated@@46 $generated@@113) $generated@@114) (and (< 0 $generated@@52) (and ($generated@@45 $generated@@46 $generated@@113 ($generated@@47 $generated)) (<= ($generated@@40 2) $generated@@114)))) (and (=> (or (not (= ($generated@@26 ($generated@@42 $generated@@46 $generated@@113)) ($generated@@40 0))) (not true)) ($generated@@55 ($generated@@42 $generated@@46 ($generated@@28 ($generated@@42 $generated@@46 $generated@@113) ($generated@@40 1))) $generated@@114)) (= ($generated@@53 ($generated@@54 $generated@@112) ($generated@@42 $generated@@46 $generated@@113) $generated@@114) (ite (= ($generated@@26 ($generated@@42 $generated@@46 $generated@@113)) ($generated@@40 0)) 0 (+ ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 ($generated@@42 $generated@@46 $generated@@113) ($generated@@40 0)))) ($generated@@58 $generated@@114 ($generated@@53 ($generated@@54 $generated@@112) ($generated@@42 $generated@@46 ($generated@@28 ($generated@@42 $generated@@46 $generated@@113) ($generated@@40 1))) $generated@@114)))))))
 :weight 3
 :pattern ( ($generated@@53 ($generated@@54 $generated@@112) ($generated@@42 $generated@@46 $generated@@113) $generated@@114))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@115 $generated@@126 $generated@@127 $generated@@128 ($generated@@122 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@115 $generated@@133 $generated@@134 $generated@@135 ($generated@@122 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@115 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@115 $generated@@142 $generated@@143 $generated@@144 ($generated@@122 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@115 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))) (= ($generated@@5 $generated@@116) 4)) (= ($generated@@5 $generated@@117) 5)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@119 $generated@@151 $generated@@152 ($generated@@123 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@153) $generated@@155) $generated@@153)
 :weight 0
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@160 $generated@@161) (= ($generated@@119 $generated@@156 $generated@@157 ($generated@@123 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@158) $generated@@161) ($generated@@119 $generated@@156 $generated@@157 $generated@@159 $generated@@161)))
 :weight 0
))) (= ($generated@@5 $generated@@120) 6)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ) (= ($generated@@5 ($generated@@121 $generated@@162 $generated@@163)) 7))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ) (! (= ($generated@@124 ($generated@@121 $generated@@164 $generated@@165)) $generated@@164)
 :pattern ( ($generated@@121 $generated@@164 $generated@@165))
))) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (! (= ($generated@@125 ($generated@@121 $generated@@166 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@121 $generated@@166 $generated@@167))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 Bool) ($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@10 ($generated@@115 $generated@@116 $generated@@117 $generated@@6 ($generated@@118 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))  (=> (and (or (not (= $generated@@172 $generated@@168)) (not true)) ($generated@@10 ($generated@@56 $generated@@6 ($generated@@119 $generated@@117 $generated@@120 ($generated@@119 $generated@@116 ($generated@@121 $generated@@117 $generated@@120) $generated@@169 $generated@@172) $generated@@170)))) $generated@@171))
 :pattern ( ($generated@@115 $generated@@116 $generated@@117 $generated@@6 ($generated@@118 $generated@@168 $generated@@169 $generated@@170 $generated@@171) $generated@@172 $generated@@173))
)))
(assert  (=> (<= 0 $generated@@52) (forall (($generated@@176 T@U) ($generated@@177 Int) ($generated@@178 Int) ) (!  (=> (or ($generated@@175 $generated@@176 $generated@@177 $generated@@178) (and (< 0 $generated@@52) ($generated@@45 $generated@@46 $generated@@176 ($generated@@47 $generated)))) (= ($generated@@174 $generated@@176 $generated@@177 $generated@@178)  (and (and (<= ($generated@@40 2) $generated@@178) (and (<= $generated@@177 ($generated@@40 0)) (< 0 (+ $generated@@177 $generated@@178)))) (forall (($generated@@179 Int) ) (!  (and (=> (and (<= ($generated@@40 0) $generated@@179) (< $generated@@179 ($generated@@26 $generated@@176))) (<= $generated@@177 ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@176 $generated@@179))))) (=> (and (<= ($generated@@40 0) $generated@@179) (< $generated@@179 ($generated@@26 $generated@@176))) (< ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@176 $generated@@179))) (+ $generated@@177 $generated@@178))))
 :pattern ( ($generated@@56 $generated@@7 ($generated@@57 $generated@@176 $generated@@179)))
)))))
 :pattern ( ($generated@@174 $generated@@176 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@181 Int) ($generated@@182 Int) ) (! (= ($generated@@180 $generated@@181 $generated@@182) (mod $generated@@181 $generated@@182))
 :pattern ( ($generated@@180 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (and (= ($generated@@183 ($generated@@29 $generated@@185 $generated@@186)) $generated@@185) (= ($generated@@184 ($generated@@29 $generated@@185 $generated@@186)) $generated@@186))
 :pattern ( ($generated@@29 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 Int) ($generated@@188 Int) ) (! (= ($generated@@58 $generated@@187 $generated@@188) (* $generated@@187 $generated@@188))
 :pattern ( ($generated@@58 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@48 $generated@@189 ($generated@@47 $generated@@190)) (and (= ($generated@@67 $generated@@46 ($generated@@56 $generated@@46 $generated@@189)) $generated@@189) ($generated@@45 $generated@@46 ($generated@@56 $generated@@46 $generated@@189) ($generated@@47 $generated@@190))))
 :pattern ( ($generated@@48 $generated@@189 ($generated@@47 $generated@@190)))
)))
(assert (= ($generated@@21 $generated@@23) $generated@@3))
(assert (= ($generated@@191 $generated@@23) $generated@@4))
(assert (forall (($generated@@192 T@U) ($generated@@193 Int) ($generated@@194 Int) ) (!  (=> (and (and (<= 0 $generated@@193) (<= $generated@@193 $generated@@194)) (< $generated@@194 ($generated@@26 $generated@@192))) (= ($generated@@57 ($generated@@28 $generated@@192 $generated@@193) (- $generated@@194 $generated@@193)) ($generated@@57 $generated@@192 $generated@@194)))
 :weight 25
 :pattern ( ($generated@@57 $generated@@192 $generated@@194) ($generated@@28 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 Int) ($generated@@197 Int) ) (!  (=> (and (and (<= 0 $generated@@196) (<= 0 $generated@@197)) (<= (+ $generated@@196 $generated@@197) ($generated@@26 $generated@@195))) (= ($generated@@28 ($generated@@28 $generated@@195 $generated@@196) $generated@@197) ($generated@@28 $generated@@195 (+ $generated@@196 $generated@@197))))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@195 $generated@@196) $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 Int) ) (!  (and (=> (< $generated@@200 ($generated@@26 $generated@@198)) (= ($generated@@57 ($generated@@34 $generated@@198 $generated@@199) $generated@@200) ($generated@@57 $generated@@198 $generated@@200))) (=> (<= ($generated@@26 $generated@@198) $generated@@200) (= ($generated@@57 ($generated@@34 $generated@@198 $generated@@199) $generated@@200) ($generated@@57 $generated@@199 (- $generated@@200 ($generated@@26 $generated@@198))))))
 :pattern ( ($generated@@57 ($generated@@34 $generated@@198 $generated@@199) $generated@@200))
)))
(assert  (=> (<= 0 $generated@@52) (forall (($generated@@201 T@U) ($generated@@202 Int) ($generated@@203 Int) ) (!  (=> (or ($generated@@175 ($generated@@42 $generated@@46 $generated@@201) ($generated@@40 $generated@@202) ($generated@@40 $generated@@203)) (and (< 0 $generated@@52) ($generated@@45 $generated@@46 $generated@@201 ($generated@@47 $generated)))) (= ($generated@@174 ($generated@@42 $generated@@46 $generated@@201) ($generated@@40 $generated@@202) ($generated@@40 $generated@@203))  (and (and (<= ($generated@@40 2) ($generated@@40 $generated@@203)) (and (<= ($generated@@40 $generated@@202) ($generated@@40 0)) (< 0 (+ $generated@@202 $generated@@203)))) (forall (($generated@@204 Int) ) (!  (and (=> (and (<= ($generated@@40 0) $generated@@204) (< $generated@@204 ($generated@@26 ($generated@@42 $generated@@46 $generated@@201)))) (<= ($generated@@40 $generated@@202) ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 ($generated@@42 $generated@@46 $generated@@201) $generated@@204))))) (=> (and (<= ($generated@@40 0) $generated@@204) (< $generated@@204 ($generated@@26 ($generated@@42 $generated@@46 $generated@@201)))) (< ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 ($generated@@42 $generated@@46 $generated@@201) $generated@@204))) (+ $generated@@202 $generated@@203))))
 :pattern ( ($generated@@56 $generated@@7 ($generated@@57 $generated@@201 $generated@@204)))
)))))
 :weight 3
 :pattern ( ($generated@@174 ($generated@@42 $generated@@46 $generated@@201) ($generated@@40 $generated@@202) ($generated@@40 $generated@@203)))
))))
(assert (forall (($generated@@205 Int) ) (! (= ($generated@@67 $generated@@7 ($generated@@11 ($generated@@40 $generated@@205))) ($generated@@42 $generated@@120 ($generated@@67 $generated@@7 ($generated@@11 $generated@@205))))
 :pattern ( ($generated@@67 $generated@@7 ($generated@@11 ($generated@@40 $generated@@205))))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@T) ) (! (= ($generated@@67 $generated@@207 ($generated@@42 $generated@@207 $generated@@206)) ($generated@@42 $generated@@120 ($generated@@67 $generated@@207 $generated@@206)))
 :pattern ( ($generated@@67 $generated@@207 ($generated@@42 $generated@@207 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ) (!  (=> (= ($generated@@26 $generated@@208) 0) (= $generated@@208 $generated@@27))
 :pattern ( ($generated@@26 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 Int) ) (!  (=> (= $generated@@210 0) (= ($generated@@33 $generated@@209 $generated@@210) $generated@@27))
 :pattern ( ($generated@@33 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! ($generated@@22 $generated@@7 $generated@@212 $generated $generated@@211)
 :pattern ( ($generated@@22 $generated@@7 $generated@@212 $generated $generated@@211))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@45 $generated@@46 $generated@@213 ($generated@@47 $generated@@214)) (forall (($generated@@215 Int) ) (!  (=> (and (<= 0 $generated@@215) (< $generated@@215 ($generated@@26 $generated@@213))) ($generated@@48 ($generated@@57 $generated@@213 $generated@@215) $generated@@214))
 :pattern ( ($generated@@57 $generated@@213 $generated@@215))
)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@213 ($generated@@47 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ) (! ($generated@@45 $generated@@7 $generated@@216 $generated)
 :pattern ( ($generated@@45 $generated@@7 $generated@@216 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () Int)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () Int)
(declare-fun $generated@@221 () Int)
(declare-fun $generated@@222 () Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 26) (let (($generated@@235  (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> ($generated@@175 $generated@@217 ($generated@@40 0) $generated@@218) (or ($generated@@174 $generated@@217 ($generated@@40 0) $generated@@218) (<= ($generated@@40 2) $generated@@218)))) (=> (=> ($generated@@175 $generated@@217 ($generated@@40 0) $generated@@218) (or ($generated@@174 $generated@@217 ($generated@@40 0) $generated@@218) (<= ($generated@@40 2) $generated@@218))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@175 $generated@@217 ($generated@@40 0) $generated@@218) (or ($generated@@174 $generated@@217 ($generated@@40 0) $generated@@218) (<= ($generated@@40 0) ($generated@@40 0))))) (=> (=> ($generated@@175 $generated@@217 ($generated@@40 0) $generated@@218) (or ($generated@@174 $generated@@217 ($generated@@40 0) $generated@@218) (<= ($generated@@40 0) ($generated@@40 0)))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@175 $generated@@217 ($generated@@40 0) $generated@@218) (or ($generated@@174 $generated@@217 ($generated@@40 0) $generated@@218) (< 0 (+ 0 $generated@@218))))) (=> (=> ($generated@@175 $generated@@217 ($generated@@40 0) $generated@@218) (or ($generated@@174 $generated@@217 ($generated@@40 0) $generated@@218) (< 0 (+ 0 $generated@@218)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@175 $generated@@217 ($generated@@40 0) $generated@@218) (or ($generated@@174 $generated@@217 ($generated@@40 0) $generated@@218) (forall (($generated@@236 Int) ) (!  (and (=> (and (<= ($generated@@40 0) $generated@@236) (< $generated@@236 ($generated@@26 $generated@@217))) (<= ($generated@@40 0) ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@217 $generated@@236))))) (=> (and (<= ($generated@@40 0) $generated@@236) (< $generated@@236 ($generated@@26 $generated@@217))) (< ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@217 $generated@@236))) (+ 0 $generated@@218))))
 :pattern ( ($generated@@56 $generated@@7 ($generated@@57 $generated@@217 $generated@@236)))
))))) (=> (=> ($generated@@175 $generated@@217 ($generated@@40 0) $generated@@218) (or ($generated@@174 $generated@@217 ($generated@@40 0) $generated@@218) (forall (($generated@@237 Int) ) (!  (and (=> (and (<= ($generated@@40 0) $generated@@237) (< $generated@@237 ($generated@@26 $generated@@217))) (<= ($generated@@40 0) ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@217 $generated@@237))))) (=> (and (<= ($generated@@40 0) $generated@@237) (< $generated@@237 ($generated@@26 $generated@@217))) (< ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@217 $generated@@237))) (+ 0 $generated@@218))))
 :pattern ( ($generated@@56 $generated@@7 ($generated@@57 $generated@@217 $generated@@237)))
)))) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@53 ($generated@@54 ($generated@@54 $generated@@219)) $generated@@217 $generated@@218) $generated@@220))))))))))))
(let (($generated@@238  (and (=> (= (ControlFlow 0 8) (- 0 15)) (< $generated@@221 $generated@@220)) (and (=> (= (ControlFlow 0 8) (- 0 14)) (<= ($generated@@40 0) $generated@@222)) (=> (and (< $generated@@221 $generated@@220) (<= ($generated@@40 0) $generated@@222)) (and (=> (= (ControlFlow 0 8) (- 0 13)) ($generated@@45 $generated@@7 ($generated@@11 $generated@@221) $generated@@23)) (=> ($generated@@45 $generated@@7 ($generated@@11 $generated@@221) $generated@@23) (and (=> (= (ControlFlow 0 8) (- 0 12)) (or (<= 0 $generated@@220) (= $generated@@221 $generated@@220))) (=> (or (<= 0 $generated@@220) (= $generated@@221 $generated@@220)) (and (=> (= (ControlFlow 0 8) (- 0 11)) (or (or (<= 0 $generated@@218) (< $generated@@221 $generated@@220)) (= $generated@@218 $generated@@218))) (=> (or (or (<= 0 $generated@@218) (< $generated@@221 $generated@@220)) (= $generated@@218 $generated@@218)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (or (< $generated@@221 $generated@@220) (and (= $generated@@221 $generated@@220) (< $generated@@218 $generated@@218)))) (=> (or (< $generated@@221 $generated@@220) (and (= $generated@@221 $generated@@220) (< $generated@@218 $generated@@218))) (=> (and ($generated@@45 $generated@@46 $generated@@223 ($generated@@47 $generated)) ($generated@@22 $generated@@46 $generated@@223 ($generated@@47 $generated) $generated@@224)) (and (=> (= (ControlFlow 0 8) (- 0 9)) (<= ($generated@@40 2) $generated@@218)) (=> (<= ($generated@@40 2) $generated@@218) (=> (and ($generated@@225 $generated@@226) ($generated@@227 $generated@@226)) (=> (and (and ($generated@@45 $generated@@46 $generated@@228 ($generated@@47 $generated)) ($generated@@22 $generated@@46 $generated@@228 ($generated@@47 $generated) $generated@@226)) (and ($generated@@175 $generated@@228 ($generated@@40 0) $generated@@218) (=> ($generated@@174 $generated@@228 ($generated@@40 0) $generated@@218) ($generated@@55 $generated@@228 $generated@@218)))) (=> (and (and (and ($generated@@175 $generated@@228 ($generated@@40 0) $generated@@218) (and ($generated@@174 $generated@@228 ($generated@@40 0) $generated@@218) (and (and (<= ($generated@@40 2) $generated@@218) (and (<= ($generated@@40 0) ($generated@@40 0)) (< 0 (+ 0 $generated@@218)))) (forall (($generated@@239 Int) ) (!  (and (=> (and (<= ($generated@@40 0) $generated@@239) (< $generated@@239 ($generated@@26 $generated@@228))) (<= ($generated@@40 0) ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@228 $generated@@239))))) (=> (and (<= ($generated@@40 0) $generated@@239) (< $generated@@239 ($generated@@26 $generated@@228))) (< ($generated@@12 ($generated@@56 $generated@@7 ($generated@@57 $generated@@228 $generated@@239))) (+ 0 $generated@@218))))
 :pattern ( ($generated@@56 $generated@@7 ($generated@@57 $generated@@228 $generated@@239)))
))))) (= ($generated@@53 ($generated@@54 ($generated@@54 $generated@@219)) $generated@@228 $generated@@218) $generated@@221)) (and (and (= $generated@@229 $generated@@226) (= $generated@@230 ($generated@@34 ($generated@@29 $generated@@27 ($generated@@67 $generated@@7 ($generated@@11 $generated@@222))) $generated@@228))) (and (= $generated@@217 $generated@@230) (= (ControlFlow 0 8) 2)))) $generated@@235)))))))))))))))))))
(let (($generated@@240  (=> (and (<= $generated@@220 $generated@@221) (= (ControlFlow 0 17) 8)) $generated@@238)))
(let (($generated@@241  (=> (and (< $generated@@221 $generated@@220) (= (ControlFlow 0 16) 8)) $generated@@238)))
(let (($generated@@242  (=> (<= $generated@@218 $generated@@220) (and (=> (= (ControlFlow 0 18) (- 0 24)) (or (not (= $generated@@218 0)) (not true))) (=> (or (not (= $generated@@218 0)) (not true)) (=> (= $generated@@221 ($generated@@90 $generated@@220 $generated@@218)) (and (=> (= (ControlFlow 0 18) (- 0 23)) (or (not (= $generated@@218 0)) (not true))) (=> (or (not (= $generated@@218 0)) (not true)) (=> (= $generated@@222 ($generated@@180 $generated@@220 $generated@@218)) (and (=> (= (ControlFlow 0 18) (- 0 22)) (= (+ ($generated@@58 $generated@@218 $generated@@221) $generated@@222) $generated@@220)) (=> (= (+ ($generated@@58 $generated@@218 $generated@@221) $generated@@222) $generated@@220) (and (=> (= (ControlFlow 0 18) (- 0 21)) (<= ($generated@@40 2) $generated@@218)) (=> (<= ($generated@@40 2) $generated@@218) (and (=> (= (ControlFlow 0 18) (- 0 20)) (<= $generated@@218 $generated@@220)) (=> (<= $generated@@218 $generated@@220) (and (=> (= (ControlFlow 0 18) (- 0 19)) (= $generated@@221 ($generated@@90 $generated@@220 $generated@@218))) (=> (= $generated@@221 ($generated@@90 $generated@@220 $generated@@218)) (=> (and (and ($generated@@225 $generated@@229) ($generated@@227 $generated@@229)) (and (< $generated@@221 $generated@@220) (= $generated@@224 $generated@@229))) (and (=> (= (ControlFlow 0 18) 16) $generated@@241) (=> (= (ControlFlow 0 18) 17) $generated@@240))))))))))))))))))))
(let (($generated@@243  (=> (and (and (< $generated@@220 $generated@@218) (= $generated@@231 ($generated@@29 $generated@@27 ($generated@@67 $generated@@7 ($generated@@11 $generated@@220))))) (and (= $generated@@217 $generated@@231) (= (ControlFlow 0 7) 2))) $generated@@235)))
(let (($generated@@244  (=> (= $generated@@232 ($generated@@118 $generated@@233 $generated@@224 $generated@@2 false)) (and (=> (= (ControlFlow 0 25) 7) $generated@@243) (=> (= (ControlFlow 0 25) 18) $generated@@242)))))
(let (($generated@@245  (=> (and (and ($generated@@225 $generated@@224) ($generated@@227 $generated@@224)) (<= ($generated@@40 0) $generated@@220)) (=> (and (and (and ($generated@@45 $generated@@46 $generated@@234 ($generated@@47 $generated)) ($generated@@22 $generated@@46 $generated@@234 ($generated@@47 $generated) $generated@@224)) (= 2 $generated@@52)) (and (<= ($generated@@40 2) $generated@@218) (= (ControlFlow 0 26) 25))) $generated@@244))))
$generated@@245)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
