(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@T) T@T)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@62 (T@T) T@T)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) Bool)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@110 (T@U T@U T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@150 (T@U) Int)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert  (and (= ($generated@@8 $generated@@29) 3) (= ($generated@@8 $generated@@35) 4)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@30 $generated@@38 ($generated@@28 $generated@@29 $generated@@40) ($generated@@28 $generated@@29 $generated@@41)) (and (< 1 $generated@@25) (and ($generated@@31 $generated@@29 $generated@@40 ($generated@@32 $generated@@38)) ($generated@@31 $generated@@29 $generated@@41 ($generated@@32 $generated@@38))))) (and (=> (not ($generated@@13 ($generated@@28 $generated@@9 ($generated@@12 ($generated@@33 ($generated@@28 $generated@@29 $generated@@40)))))) (let (($generated@@42 ($generated@@28 $generated@@29 ($generated@@34 ($generated@@28 $generated@@29 $generated@@40)))))
($generated@@30 $generated@@38 $generated@@42 ($generated@@28 $generated@@29 $generated@@41)))) (= ($generated@@26 $generated@@38 ($generated@@27 $generated@@39) ($generated@@28 $generated@@29 $generated@@40) ($generated@@28 $generated@@29 $generated@@41)) (ite ($generated@@33 ($generated@@28 $generated@@29 $generated@@40)) $generated@@41 (let (($generated@@43 ($generated@@28 $generated@@29 ($generated@@34 ($generated@@28 $generated@@29 $generated@@40)))))
(let (($generated@@44 ($generated@@28 $generated@@35 ($generated@@36 ($generated@@28 $generated@@29 $generated@@40)))))
($generated@@28 $generated@@29 ($generated@@37 $generated@@44 ($generated@@28 $generated@@29 ($generated@@26 $generated@@38 ($generated@@27 $generated@@39) $generated@@43 ($generated@@28 $generated@@29 $generated@@41)))))))))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@38 ($generated@@27 $generated@@39) ($generated@@28 $generated@@29 $generated@@40) ($generated@@28 $generated@@29 $generated@@41)))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! ($generated@@45 $generated@@10 $generated@@47 $generated@@46 $generated@@48)
 :pattern ( ($generated@@45 $generated@@10 $generated@@47 $generated@@46 $generated@@48))
)))
(assert (= ($generated@@49 $generated@@50) $generated@@4))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@51 $generated@@53) ($generated@@45 $generated@@29 $generated@@50 ($generated@@32 $generated@@52) $generated@@53))
 :pattern ( ($generated@@45 $generated@@29 $generated@@50 ($generated@@32 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ) (! ($generated@@31 $generated@@29 $generated@@50 ($generated@@32 $generated@@54))
 :pattern ( ($generated@@31 $generated@@29 $generated@@50 ($generated@@32 $generated@@54)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@56 $generated@@64 $generated@@65 ($generated@@61 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@68) $generated@@66)
 :weight 0
)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (or (= $generated@@73 $generated@@74) (= ($generated@@56 $generated@@69 $generated@@70 ($generated@@61 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@74) ($generated@@56 $generated@@69 $generated@@70 $generated@@72 $generated@@74)))
 :weight 0
))) (= ($generated@@8 $generated@@57) 5)) (= ($generated@@8 $generated@@58) 6)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (= ($generated@@8 ($generated@@59 $generated@@75 $generated@@76)) 7))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@62 ($generated@@59 $generated@@77 $generated@@78)) $generated@@77)
 :pattern ( ($generated@@59 $generated@@77 $generated@@78))
))) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (! (= ($generated@@63 ($generated@@59 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@59 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@55 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@13 ($generated@@60 $generated@@9 ($generated@@56 $generated@@57 $generated@@35 ($generated@@56 $generated@@58 ($generated@@59 $generated@@57 $generated@@35) $generated@@81 $generated@@83) $generated@@1))) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@56 $generated@@57 $generated@@35 ($generated@@56 $generated@@58 ($generated@@59 $generated@@57 $generated@@35) $generated@@82 $generated@@83) $generated@@1))))
 :pattern ( ($generated@@56 $generated@@57 $generated@@35 ($generated@@56 $generated@@58 ($generated@@59 $generated@@57 $generated@@35) $generated@@82 $generated@@83) $generated@@1))
)))
 :pattern ( ($generated@@55 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@28 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@28 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@31 $generated@@29 ($generated@@37 $generated@@90 $generated@@91) ($generated@@32 $generated@@89))  (and ($generated@@88 $generated@@90 $generated@@89) ($generated@@31 $generated@@29 $generated@@91 ($generated@@32 $generated@@89))))
 :pattern ( ($generated@@31 $generated@@29 ($generated@@37 $generated@@90 $generated@@91) ($generated@@32 $generated@@89)))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@30 $generated@@92 $generated@@94 $generated@@95) (and (< 1 $generated@@25) (and ($generated@@31 $generated@@29 $generated@@94 ($generated@@32 $generated@@92)) ($generated@@31 $generated@@29 $generated@@95 ($generated@@32 $generated@@92))))) (and (=> (not ($generated@@33 $generated@@94)) (let (($generated@@96 ($generated@@34 $generated@@94)))
($generated@@30 $generated@@92 $generated@@96 $generated@@95))) (= ($generated@@26 $generated@@92 ($generated@@27 $generated@@93) $generated@@94 $generated@@95) (ite ($generated@@33 $generated@@94) $generated@@95 (let (($generated@@97 ($generated@@34 $generated@@94)))
(let (($generated@@98 ($generated@@36 $generated@@94)))
($generated@@37 $generated@@98 ($generated@@26 $generated@@92 $generated@@93 $generated@@97 $generated@@95))))))))
 :pattern ( ($generated@@26 $generated@@92 ($generated@@27 $generated@@93) $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@33 $generated@@99) (= ($generated@@49 $generated@@99) $generated@@4))
 :pattern ( ($generated@@33 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ) (! (= ($generated@@100 $generated@@101) (= ($generated@@49 $generated@@101) $generated@@5))
 :pattern ( ($generated@@100 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 ($generated@@60 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@60 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@100 $generated@@105) (exists (($generated@@106 T@U) ($generated@@107 T@U) ) (= $generated@@105 ($generated@@37 $generated@@106 $generated@@107))))
 :pattern ( ($generated@@100 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@33 $generated@@108) (= $generated@@108 $generated@@50))
 :pattern ( ($generated@@33 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@31 $generated@@10 $generated@@109 $generated@@46) (<= ($generated@@84 0) ($generated@@15 $generated@@109)))
 :pattern ( ($generated@@31 $generated@@10 $generated@@109 $generated@@46))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@110 ($generated@@102 $generated@@114 $generated@@111) $generated@@112 $generated@@113) ($generated@@45 $generated@@114 $generated@@111 $generated@@112 $generated@@113))
 :pattern ( ($generated@@110 ($generated@@102 $generated@@114 $generated@@111) $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> ($generated@@55 $generated@@115 $generated@@116) (=> ($generated@@110 $generated@@117 $generated@@118 $generated@@115) ($generated@@110 $generated@@117 $generated@@118 $generated@@116)))
 :pattern ( ($generated@@55 $generated@@115 $generated@@116) ($generated@@110 $generated@@117 $generated@@118 $generated@@115))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (!  (=> ($generated@@55 $generated@@119 $generated@@120) (=> ($generated@@45 $generated@@123 $generated@@121 $generated@@122 $generated@@119) ($generated@@45 $generated@@123 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@55 $generated@@119 $generated@@120) ($generated@@45 $generated@@123 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@125 T@U) ) (!  (and (= ($generated@@24 ($generated@@32 $generated@@125)) $generated@@3) (= ($generated@@124 ($generated@@32 $generated@@125)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@88 $generated@@126 $generated@@46) (and (= ($generated@@102 $generated@@10 ($generated@@60 $generated@@10 $generated@@126)) $generated@@126) ($generated@@31 $generated@@10 ($generated@@60 $generated@@10 $generated@@126) $generated@@46)))
 :pattern ( ($generated@@88 $generated@@126 $generated@@46))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> ($generated@@31 $generated@@29 $generated@@128 ($generated@@32 $generated@@127)) (or ($generated@@33 $generated@@128) ($generated@@100 $generated@@128)))
 :pattern ( ($generated@@100 $generated@@128) ($generated@@31 $generated@@29 $generated@@128 ($generated@@32 $generated@@127)))
 :pattern ( ($generated@@33 $generated@@128) ($generated@@31 $generated@@29 $generated@@128 ($generated@@32 $generated@@127)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or (not (= $generated@@129 $generated@@131)) (not true)) (=> (and ($generated@@55 $generated@@129 $generated@@130) ($generated@@55 $generated@@130 $generated@@131)) ($generated@@55 $generated@@129 $generated@@131)))
 :pattern ( ($generated@@55 $generated@@129 $generated@@130) ($generated@@55 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@88 $generated@@132 $generated) (and (= ($generated@@102 $generated@@10 ($generated@@60 $generated@@10 $generated@@132)) $generated@@132) ($generated@@31 $generated@@10 ($generated@@60 $generated@@10 $generated@@132) $generated)))
 :pattern ( ($generated@@88 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@88 ($generated@@102 $generated@@135 $generated@@133) $generated@@134) ($generated@@31 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@88 ($generated@@102 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@49 ($generated@@37 $generated@@136 $generated@@137)) $generated@@5)
 :pattern ( ($generated@@37 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@36 ($generated@@37 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@37 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@34 ($generated@@37 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@37 $generated@@140 $generated@@141))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@30 $generated@@142 $generated@@144 $generated@@145) (and (< 1 $generated@@25) (and ($generated@@31 $generated@@29 $generated@@144 ($generated@@32 $generated@@142)) ($generated@@31 $generated@@29 $generated@@145 ($generated@@32 $generated@@142))))) ($generated@@31 $generated@@29 ($generated@@26 $generated@@142 $generated@@143 $generated@@144 $generated@@145) ($generated@@32 $generated@@142)))
 :pattern ( ($generated@@26 $generated@@142 $generated@@143 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@32 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@32 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@60 $generated@@149 ($generated@@102 $generated@@149 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@102 $generated@@149 $generated@@148))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (< ($generated@@150 $generated@@152) ($generated@@151 ($generated@@37 $generated@@152 $generated@@153)))
 :pattern ( ($generated@@37 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@151 $generated@@155) ($generated@@151 ($generated@@37 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@37 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (and ($generated@@51 $generated@@158) (and ($generated@@100 $generated@@156) ($generated@@45 $generated@@29 $generated@@156 ($generated@@32 $generated@@157) $generated@@158))) ($generated@@110 ($generated@@36 $generated@@156) $generated@@157 $generated@@158))
 :pattern ( ($generated@@110 ($generated@@36 $generated@@156) $generated@@157 $generated@@158))
)))
(assert  (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@159 $generated@@162 $generated@@163 $generated@@164 ($generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@159 $generated@@169 $generated@@170 $generated@@171 ($generated@@161 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@159 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@159 $generated@@178 $generated@@179 $generated@@180 ($generated@@161 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@159 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@13 ($generated@@159 $generated@@58 $generated@@57 $generated@@9 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@13 ($generated@@60 $generated@@9 ($generated@@56 $generated@@57 $generated@@35 ($generated@@56 $generated@@58 ($generated@@59 $generated@@57 $generated@@35) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@159 $generated@@58 $generated@@57 $generated@@9 ($generated@@160 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (or ($generated@@30 $generated@@194 $generated@@196 $generated@@197) (and (< 1 $generated@@25) (and (and ($generated@@31 $generated@@29 $generated@@196 ($generated@@32 $generated@@194)) ($generated@@45 $generated@@29 $generated@@196 ($generated@@32 $generated@@194) $generated@@193)) (and ($generated@@31 $generated@@29 $generated@@197 ($generated@@32 $generated@@194)) ($generated@@45 $generated@@29 $generated@@197 ($generated@@32 $generated@@194) $generated@@193))))) ($generated@@51 $generated@@193)) ($generated@@45 $generated@@29 ($generated@@26 $generated@@194 $generated@@195 $generated@@196 $generated@@197) ($generated@@32 $generated@@194) $generated@@193))
 :pattern ( ($generated@@45 $generated@@29 ($generated@@26 $generated@@194 $generated@@195 $generated@@196 $generated@@197) ($generated@@32 $generated@@194) $generated@@193))
))))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@150 ($generated@@102 $generated@@29 $generated@@198)) ($generated@@151 $generated@@198))
 :pattern ( ($generated@@150 ($generated@@102 $generated@@29 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@26 $generated@@199 ($generated@@27 $generated@@200) $generated@@201 $generated@@202) ($generated@@26 $generated@@199 $generated@@200 $generated@@201 $generated@@202))
 :pattern ( ($generated@@26 $generated@@199 ($generated@@27 $generated@@200) $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> ($generated@@88 $generated@@204 ($generated@@32 $generated@@203)) (and (= ($generated@@102 $generated@@29 ($generated@@60 $generated@@29 $generated@@204)) $generated@@204) ($generated@@31 $generated@@29 ($generated@@60 $generated@@29 $generated@@204) ($generated@@32 $generated@@203))))
 :pattern ( ($generated@@88 $generated@@204 ($generated@@32 $generated@@203)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@51 $generated@@207) (and ($generated@@100 $generated@@205) ($generated@@45 $generated@@29 $generated@@205 ($generated@@32 $generated@@206) $generated@@207))) ($generated@@45 $generated@@29 ($generated@@34 $generated@@205) ($generated@@32 $generated@@206) $generated@@207))
 :pattern ( ($generated@@45 $generated@@29 ($generated@@34 $generated@@205) ($generated@@32 $generated@@206) $generated@@207))
)))
(assert (= ($generated@@24 $generated@@46) $generated@@2))
(assert (= ($generated@@124 $generated@@46) $generated@@6))
(assert (= $generated@@50 ($generated@@28 $generated@@29 $generated@@50)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@37 ($generated@@28 $generated@@35 $generated@@208) ($generated@@28 $generated@@29 $generated@@209)) ($generated@@28 $generated@@29 ($generated@@37 $generated@@208 $generated@@209)))
 :pattern ( ($generated@@37 ($generated@@28 $generated@@35 $generated@@208) ($generated@@28 $generated@@29 $generated@@209)))
)))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@102 $generated@@10 ($generated@@14 ($generated@@84 $generated@@210))) ($generated@@28 $generated@@35 ($generated@@102 $generated@@10 ($generated@@14 $generated@@210))))
 :pattern ( ($generated@@102 $generated@@10 ($generated@@14 ($generated@@84 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@102 $generated@@212 ($generated@@28 $generated@@212 $generated@@211)) ($generated@@28 $generated@@35 ($generated@@102 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@102 $generated@@212 ($generated@@28 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! ($generated@@45 $generated@@10 $generated@@214 $generated $generated@@213)
 :pattern ( ($generated@@45 $generated@@10 $generated@@214 $generated $generated@@213))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> ($generated@@51 $generated@@218) (= ($generated@@45 $generated@@29 ($generated@@37 $generated@@216 $generated@@217) ($generated@@32 $generated@@215) $generated@@218)  (and ($generated@@110 $generated@@216 $generated@@215 $generated@@218) ($generated@@45 $generated@@29 $generated@@217 ($generated@@32 $generated@@215) $generated@@218))))
 :pattern ( ($generated@@45 $generated@@29 ($generated@@37 $generated@@216 $generated@@217) ($generated@@32 $generated@@215) $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ) (! ($generated@@31 $generated@@10 $generated@@219 $generated)
 :pattern ( ($generated@@31 $generated@@10 $generated@@219 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 (T@U) Bool)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@234  (=> (and (= $generated@@220 ($generated@@160 $generated@@221 $generated@@222 $generated@@1 false)) (= $generated@@223 ($generated@@28 $generated@@29 $generated@@50))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@31 $generated@@10 ($generated@@14 ($generated@@84 4)) $generated@@46)) (=> ($generated@@31 $generated@@10 ($generated@@14 ($generated@@84 4)) $generated@@46) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@31 $generated@@29 ($generated@@28 $generated@@29 ($generated@@37 ($generated@@102 $generated@@10 ($generated@@14 ($generated@@84 10))) ($generated@@28 $generated@@29 $generated@@50))) ($generated@@32 $generated@@46))) (=> ($generated@@31 $generated@@29 ($generated@@28 $generated@@29 ($generated@@37 ($generated@@102 $generated@@10 ($generated@@14 ($generated@@84 10))) ($generated@@28 $generated@@29 $generated@@50))) ($generated@@32 $generated@@46)) (=> (and (= $generated@@224 ($generated@@28 $generated@@29 ($generated@@37 ($generated@@102 $generated@@10 ($generated@@14 ($generated@@84 4))) ($generated@@28 $generated@@29 ($generated@@37 ($generated@@102 $generated@@10 ($generated@@14 ($generated@@84 10))) ($generated@@28 $generated@@29 $generated@@50)))))) ($generated@@45 $generated@@29 $generated@@224 ($generated@@32 $generated@@46) $generated@@222)) (=> (and (and ($generated@@225 $generated@@224) ($generated@@225 $generated@@224)) (and (= $generated@@226 ($generated@@28 $generated@@29 ($generated@@37 ($generated@@102 $generated@@10 ($generated@@14 ($generated@@84 20))) ($generated@@28 $generated@@29 $generated@@50)))) ($generated@@45 $generated@@29 $generated@@224 ($generated@@32 $generated@@46) $generated@@222))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@31 $generated@@29 $generated@@226 ($generated@@32 $generated@@46))) (=> ($generated@@31 $generated@@29 $generated@@226 ($generated@@32 $generated@@46)) (=> ($generated@@45 $generated@@29 $generated@@226 ($generated@@32 $generated@@46) $generated@@222) (=> (and (and (and ($generated@@30 $generated@@46 $generated@@224 $generated@@226) ($generated@@30 $generated@@46 $generated@@224 $generated@@226)) (and (= $generated@@227 ($generated@@26 $generated@@46 ($generated@@27 $generated@@228) $generated@@224 $generated@@226)) ($generated@@45 $generated@@29 $generated@@227 ($generated@@32 $generated@@46) $generated@@222))) (and (and ($generated@@225 $generated@@227) ($generated@@225 $generated@@227)) (and (= $generated@@229 ($generated@@84 (- 0 12))) (= (ControlFlow 0 2) (- 0 1))))) (<= $generated@@229 ($generated@@84 0)))))))))))))))
(let (($generated@@235  (=> (and ($generated@@51 $generated@@222) ($generated@@230 $generated@@222)) (=> (and (and (and (and ($generated@@31 $generated@@29 $generated@@231 ($generated@@32 $generated@@46)) ($generated@@45 $generated@@29 $generated@@231 ($generated@@32 $generated@@46) $generated@@222)) true) (and (and ($generated@@31 $generated@@29 $generated@@232 ($generated@@32 $generated)) ($generated@@45 $generated@@29 $generated@@232 ($generated@@32 $generated) $generated@@222)) true)) (and (and (and ($generated@@31 $generated@@29 $generated@@233 ($generated@@32 $generated@@46)) ($generated@@45 $generated@@29 $generated@@233 ($generated@@32 $generated@@46) $generated@@222)) true) (and (= 4 $generated@@25) (= (ControlFlow 0 6) 2)))) $generated@@234))))
$generated@@235)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
