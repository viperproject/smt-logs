(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (Int) Int)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@46 () Int)
(declare-fun $generated@@47 (T@U T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 (Int) T@U)
(declare-fun $generated@@55 (T@U) Int)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@125 (T@U) Int)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 (T@T T@T) T@T)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@T) T@T)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@186 (T@U) Bool)
(declare-fun $generated@@194 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@1))
(assert (= ($generated@@26 $generated@@0) $generated@@2))
(assert (= ($generated@@10 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@29 $generated@@31 $generated@@32) $generated@@30)  (and ($generated@@27 $generated@@28 $generated@@31 $generated@@30) ($generated@@27 $generated@@28 $generated@@32 $generated@@30)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@29 $generated@@31 $generated@@32) $generated@@30))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (and (<= 0 $generated@@39) (< $generated@@39 ($generated@@35 $generated@@38))) (< ($generated@@36 ($generated@@37 $generated@@28 ($generated@@33 $generated@@38 $generated@@39))) ($generated@@36 ($generated@@34 $generated@@38))))
 :pattern ( ($generated@@33 $generated@@38 $generated@@39) ($generated@@34 $generated@@38))
)))
(assert (= ($generated@@35 $generated@@40) 0))
(assert (forall (($generated@@42 Int) ) (! (= ($generated@@41 $generated@@42) $generated@@42)
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@T) ) (! (= ($generated@@43 $generated@@45 $generated@@44) $generated@@44)
 :pattern ( ($generated@@43 $generated@@45 $generated@@44))
)))
(assert  (=> (<= 2 $generated@@46) (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (or ($generated@@49 $generated@@57) (and (< 2 $generated@@46) ($generated@@27 $generated@@28 $generated@@57 $generated@@30))) (and (=> (not ($generated@@50 $generated@@57)) (=> (not ($generated@@51 $generated@@57)) (let (($generated@@58 ($generated@@52 $generated@@57)))
(let (($generated@@59 ($generated@@53 $generated@@57)))
 (and ($generated@@49 $generated@@59) ($generated@@49 $generated@@58)))))) (= ($generated@@47 ($generated@@48 $generated@@56) $generated@@57) (ite ($generated@@50 $generated@@57) $generated@@57 (ite ($generated@@51 $generated@@57) $generated@@57 (let (($generated@@60 ($generated@@52 $generated@@57)))
(let (($generated@@61 ($generated@@53 $generated@@57)))
(let (($generated@@62 ($generated@@47 $generated@@56 $generated@@60)))
(let (($generated@@63 ($generated@@47 $generated@@56 $generated@@61)))
(ite  (and ($generated@@50 $generated@@63) ($generated@@50 $generated@@62)) ($generated@@54 (+ ($generated@@55 $generated@@63) ($generated@@55 $generated@@62))) ($generated@@29 $generated@@63 $generated@@62)))))))))))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@56) $generated@@57))
))))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@50 $generated@@65) (= ($generated@@64 $generated@@65) $generated@@6))
 :pattern ( ($generated@@50 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@51 $generated@@66) (= ($generated@@64 $generated@@66) $generated@@7))
 :pattern ( ($generated@@51 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@64 $generated@@68) $generated@@8))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@37 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@37 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@67 $generated@@72) (exists (($generated@@73 T@U) ($generated@@74 T@U) ) (= $generated@@72 ($generated@@29 $generated@@73 $generated@@74))))
 :pattern ( ($generated@@67 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@50 $generated@@75) (exists (($generated@@76 Int) ) (= $generated@@75 ($generated@@54 $generated@@76))))
 :pattern ( ($generated@@50 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (!  (=> ($generated@@51 $generated@@77) (exists (($generated@@78 T@U) ) (= $generated@@77 ($generated@@34 $generated@@78))))
 :pattern ( ($generated@@51 $generated@@77))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@79 ($generated@@69 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@80 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@79 ($generated@@69 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@85 $generated@@86 $generated@@30) (and (= ($generated@@69 $generated@@28 ($generated@@37 $generated@@28 $generated@@86)) $generated@@86) ($generated@@27 $generated@@28 ($generated@@37 $generated@@28 $generated@@86) $generated@@30)))
 :pattern ( ($generated@@85 $generated@@86 $generated@@30))
)))
(assert  (=> (<= 2 $generated@@46) (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@49 $generated@@88) (and (< 2 $generated@@46) ($generated@@27 $generated@@28 $generated@@88 $generated@@30))) ($generated@@27 $generated@@28 ($generated@@47 $generated@@87 $generated@@88) $generated@@30))
 :pattern ( ($generated@@47 $generated@@87 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@85 $generated@@89 $generated@@0) (and (= ($generated@@69 $generated@@12 ($generated@@37 $generated@@12 $generated@@89)) $generated@@89) ($generated@@27 $generated@@12 ($generated@@37 $generated@@12 $generated@@89) $generated@@0)))
 :pattern ( ($generated@@85 $generated@@89 $generated@@0))
)))
(assert (= ($generated@@10 $generated@@90) 4))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@85 $generated@@91 $generated) (and (= ($generated@@69 $generated@@90 ($generated@@37 $generated@@90 $generated@@91)) $generated@@91) ($generated@@27 $generated@@90 ($generated@@37 $generated@@90 $generated@@91) $generated)))
 :pattern ( ($generated@@85 $generated@@91 $generated))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@85 ($generated@@69 $generated@@94 $generated@@92) $generated@@93) ($generated@@27 $generated@@94 $generated@@92 $generated@@93))
 :pattern ( ($generated@@85 ($generated@@69 $generated@@94 $generated@@92) $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ) (! (<= 0 ($generated@@35 $generated@@95))
 :pattern ( ($generated@@35 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@64 ($generated@@29 $generated@@96 $generated@@97)) $generated@@8)
 :pattern ( ($generated@@29 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@53 ($generated@@29 $generated@@98 $generated@@99)) $generated@@98)
 :pattern ( ($generated@@29 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@52 ($generated@@29 $generated@@100 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@29 $generated@@100 $generated@@101))
)))
(assert (= ($generated@@10 $generated@@102) 5))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@80 $generated@@102 $generated@@104 ($generated@@103 $generated@@105) $generated@@106) (forall (($generated@@107 Int) ) (!  (=> (and (<= 0 $generated@@107) (< $generated@@107 ($generated@@35 $generated@@104))) ($generated@@79 ($generated@@33 $generated@@104 $generated@@107) $generated@@105 $generated@@106))
 :pattern ( ($generated@@33 $generated@@104 $generated@@107))
)))
 :pattern ( ($generated@@80 $generated@@102 $generated@@104 ($generated@@103 $generated@@105) $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@103 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@103 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@26 ($generated@@103 $generated@@110)) $generated@@3)
 :pattern ( ($generated@@103 $generated@@110))
)))
(assert (forall (($generated@@111 Int) ) (! (= ($generated@@64 ($generated@@54 $generated@@111)) $generated@@6)
 :pattern ( ($generated@@54 $generated@@111))
)))
(assert (forall (($generated@@112 Int) ) (! (= ($generated@@55 ($generated@@54 $generated@@112)) $generated@@112)
 :pattern ( ($generated@@54 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@64 ($generated@@34 $generated@@113)) $generated@@7)
 :pattern ( ($generated@@34 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@34 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@34 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@37 $generated@@117 ($generated@@69 $generated@@117 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@69 $generated@@117 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (< ($generated@@36 $generated@@118) ($generated@@36 ($generated@@29 $generated@@118 $generated@@119)))
 :pattern ( ($generated@@29 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (< ($generated@@36 $generated@@121) ($generated@@36 ($generated@@29 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@29 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@47 ($generated@@48 $generated@@122) $generated@@123) ($generated@@47 $generated@@122 $generated@@123))
 :pattern ( ($generated@@47 ($generated@@48 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@124 Int) ) (! (= ($generated@@27 $generated@@28 ($generated@@54 $generated@@124) $generated@@30) ($generated@@27 $generated@@12 ($generated@@16 $generated@@124) $generated@@0))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@54 $generated@@124) $generated@@30))
)))
(assert (forall (($generated@@126 T@U) ) (! (< ($generated@@125 $generated@@126) ($generated@@36 ($generated@@34 $generated@@126)))
 :pattern ( ($generated@@34 $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@127 $generated@@138 $generated@@139 $generated@@140 ($generated@@134 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@143 $generated@@144) $generated@@141)
 :weight 0
)) (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (or (= $generated@@150 $generated@@152) (= ($generated@@127 $generated@@145 $generated@@146 $generated@@147 ($generated@@134 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@152 $generated@@153) ($generated@@127 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@152 $generated@@153)))
 :weight 0
)) (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@160 $generated@@162) (= ($generated@@127 $generated@@154 $generated@@155 $generated@@156 ($generated@@134 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@127 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)))) (= ($generated@@10 $generated@@128) 6)) (= ($generated@@10 $generated@@129) 7)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@131 $generated@@163 $generated@@164 ($generated@@135 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@165) $generated@@167) $generated@@165)
 :weight 0
))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@172 $generated@@173) (= ($generated@@131 $generated@@168 $generated@@169 ($generated@@135 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@170) $generated@@173) ($generated@@131 $generated@@168 $generated@@169 $generated@@171 $generated@@173)))
 :weight 0
))) (= ($generated@@10 $generated@@132) 8)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (= ($generated@@10 ($generated@@133 $generated@@174 $generated@@175)) 9))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (! (= ($generated@@136 ($generated@@133 $generated@@176 $generated@@177)) $generated@@176)
 :pattern ( ($generated@@133 $generated@@176 $generated@@177))
))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@137 ($generated@@133 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@133 $generated@@178 $generated@@179))
))))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 Bool) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@15 ($generated@@127 $generated@@128 $generated@@129 $generated@@11 ($generated@@130 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))  (=> (and (or (not (= $generated@@184 $generated@@180)) (not true)) ($generated@@15 ($generated@@37 $generated@@11 ($generated@@131 $generated@@129 $generated@@132 ($generated@@131 $generated@@128 ($generated@@133 $generated@@129 $generated@@132) $generated@@181 $generated@@184) $generated@@182)))) $generated@@183))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129 $generated@@11 ($generated@@130 $generated@@180 $generated@@181 $generated@@182 $generated@@183) $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> (and ($generated@@186 $generated@@188) (and ($generated@@50 $generated@@187) ($generated@@80 $generated@@28 $generated@@187 $generated@@30 $generated@@188))) ($generated@@80 $generated@@12 ($generated@@16 ($generated@@55 $generated@@187)) $generated@@0 $generated@@188))
 :pattern ( ($generated@@80 $generated@@12 ($generated@@16 ($generated@@55 $generated@@187)) $generated@@0 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@189 $generated@@30) (or (or ($generated@@50 $generated@@189) ($generated@@51 $generated@@189)) ($generated@@67 $generated@@189)))
 :pattern ( ($generated@@67 $generated@@189) ($generated@@27 $generated@@28 $generated@@189 $generated@@30))
 :pattern ( ($generated@@51 $generated@@189) ($generated@@27 $generated@@28 $generated@@189 $generated@@30))
 :pattern ( ($generated@@50 $generated@@189) ($generated@@27 $generated@@28 $generated@@189 $generated@@30))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@85 $generated@@190 ($generated@@103 $generated@@191)) (and (= ($generated@@69 $generated@@102 ($generated@@37 $generated@@102 $generated@@190)) $generated@@190) ($generated@@27 $generated@@102 ($generated@@37 $generated@@102 $generated@@190) ($generated@@103 $generated@@191))))
 :pattern ( ($generated@@85 $generated@@190 ($generated@@103 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@186 $generated@@193) ($generated@@27 $generated@@28 $generated@@192 $generated@@30)) ($generated@@80 $generated@@28 $generated@@192 $generated@@30 $generated@@193))
 :pattern ( ($generated@@80 $generated@@28 $generated@@192 $generated@@30 $generated@@193))
)))
(assert (= ($generated@@26 $generated@@30) $generated@@5))
(assert (= ($generated@@194 $generated@@30) $generated@@9))
(assert  (=> (<= 2 $generated@@46) (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@49 ($generated@@43 $generated@@28 $generated@@196)) (and (< 2 $generated@@46) ($generated@@27 $generated@@28 $generated@@196 $generated@@30))) (and (=> (not ($generated@@15 ($generated@@43 $generated@@11 ($generated@@14 ($generated@@50 ($generated@@43 $generated@@28 $generated@@196)))))) (=> (not ($generated@@15 ($generated@@43 $generated@@11 ($generated@@14 ($generated@@51 ($generated@@43 $generated@@28 $generated@@196)))))) (let (($generated@@197 ($generated@@43 $generated@@28 ($generated@@52 ($generated@@43 $generated@@28 $generated@@196)))))
(let (($generated@@198 ($generated@@43 $generated@@28 ($generated@@53 ($generated@@43 $generated@@28 $generated@@196)))))
 (and ($generated@@49 $generated@@198) ($generated@@49 $generated@@197)))))) (= ($generated@@47 ($generated@@48 $generated@@195) ($generated@@43 $generated@@28 $generated@@196)) (ite ($generated@@50 ($generated@@43 $generated@@28 $generated@@196)) ($generated@@43 $generated@@28 $generated@@196) (ite ($generated@@51 ($generated@@43 $generated@@28 $generated@@196)) ($generated@@43 $generated@@28 $generated@@196) (let (($generated@@199 ($generated@@43 $generated@@28 ($generated@@52 ($generated@@43 $generated@@28 $generated@@196)))))
(let (($generated@@200 ($generated@@43 $generated@@28 ($generated@@53 ($generated@@43 $generated@@28 $generated@@196)))))
(let (($generated@@201 ($generated@@43 $generated@@28 ($generated@@47 ($generated@@48 $generated@@195) $generated@@199))))
(let (($generated@@202 ($generated@@43 $generated@@28 ($generated@@47 ($generated@@48 $generated@@195) $generated@@200))))
(ite  (and ($generated@@50 $generated@@202) ($generated@@50 $generated@@201)) ($generated@@54 (+ ($generated@@55 $generated@@202) ($generated@@55 $generated@@201))) ($generated@@29 $generated@@202 $generated@@201)))))))))))
 :weight 3
 :pattern ( ($generated@@47 ($generated@@48 $generated@@195) ($generated@@43 $generated@@28 $generated@@196)))
))))
(assert (forall (($generated@@203 T@U) ) (! (= ($generated@@27 $generated@@28 ($generated@@34 $generated@@203) $generated@@30) ($generated@@27 $generated@@102 $generated@@203 ($generated@@103 $generated)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@34 $generated@@203) $generated@@30))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> (and ($generated@@186 $generated@@205) (and ($generated@@51 $generated@@204) ($generated@@80 $generated@@28 $generated@@204 $generated@@30 $generated@@205))) ($generated@@80 $generated@@102 ($generated@@114 $generated@@204) ($generated@@103 $generated) $generated@@205))
 :pattern ( ($generated@@80 $generated@@102 ($generated@@114 $generated@@204) ($generated@@103 $generated) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@186 $generated@@207) (and ($generated@@67 $generated@@206) ($generated@@80 $generated@@28 $generated@@206 $generated@@30 $generated@@207))) ($generated@@80 $generated@@28 ($generated@@53 $generated@@206) $generated@@30 $generated@@207))
 :pattern ( ($generated@@80 $generated@@28 ($generated@@53 $generated@@206) $generated@@30 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and ($generated@@186 $generated@@209) (and ($generated@@67 $generated@@208) ($generated@@80 $generated@@28 $generated@@208 $generated@@30 $generated@@209))) ($generated@@80 $generated@@28 ($generated@@52 $generated@@208) $generated@@30 $generated@@209))
 :pattern ( ($generated@@80 $generated@@28 ($generated@@52 $generated@@208) $generated@@30 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@29 ($generated@@43 $generated@@28 $generated@@210) ($generated@@43 $generated@@28 $generated@@211)) ($generated@@43 $generated@@28 ($generated@@29 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@29 ($generated@@43 $generated@@28 $generated@@210) ($generated@@43 $generated@@28 $generated@@211)))
)))
(assert (forall (($generated@@212 Int) ) (! (= ($generated@@69 $generated@@12 ($generated@@16 ($generated@@41 $generated@@212))) ($generated@@43 $generated@@132 ($generated@@69 $generated@@12 ($generated@@16 $generated@@212))))
 :pattern ( ($generated@@69 $generated@@12 ($generated@@16 ($generated@@41 $generated@@212))))
)))
(assert (forall (($generated@@213 Int) ) (! (= ($generated@@54 ($generated@@41 $generated@@213)) ($generated@@43 $generated@@28 ($generated@@54 $generated@@213)))
 :pattern ( ($generated@@54 ($generated@@41 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@34 ($generated@@43 $generated@@102 $generated@@214)) ($generated@@43 $generated@@28 ($generated@@34 $generated@@214)))
 :pattern ( ($generated@@34 ($generated@@43 $generated@@102 $generated@@214)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@T) ) (! (= ($generated@@69 $generated@@216 ($generated@@43 $generated@@216 $generated@@215)) ($generated@@43 $generated@@132 ($generated@@69 $generated@@216 $generated@@215)))
 :pattern ( ($generated@@69 $generated@@216 ($generated@@43 $generated@@216 $generated@@215)))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> (= ($generated@@35 $generated@@217) 0) (= $generated@@217 $generated@@40))
 :pattern ( ($generated@@35 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (! ($generated@@80 $generated@@12 $generated@@219 $generated@@0 $generated@@218)
 :pattern ( ($generated@@80 $generated@@12 $generated@@219 $generated@@0 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! ($generated@@80 $generated@@90 $generated@@221 $generated $generated@@220)
 :pattern ( ($generated@@80 $generated@@90 $generated@@221 $generated $generated@@220))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@27 $generated@@102 $generated@@222 ($generated@@103 $generated@@223)) (forall (($generated@@224 Int) ) (!  (=> (and (<= 0 $generated@@224) (< $generated@@224 ($generated@@35 $generated@@222))) ($generated@@85 ($generated@@33 $generated@@222 $generated@@224) $generated@@223))
 :pattern ( ($generated@@33 $generated@@222 $generated@@224))
)))
 :pattern ( ($generated@@27 $generated@@102 $generated@@222 ($generated@@103 $generated@@223)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 Int) ) (!  (=> (and (<= 0 $generated@@226) (< $generated@@226 ($generated@@35 $generated@@225))) (< ($generated@@36 ($generated@@37 $generated@@28 ($generated@@33 $generated@@225 $generated@@226))) ($generated@@125 $generated@@225)))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@28 ($generated@@33 $generated@@225 $generated@@226))))
)))
(assert (forall (($generated@@227 T@U) ) (! ($generated@@27 $generated@@12 $generated@@227 $generated@@0)
 :pattern ( ($generated@@27 $generated@@12 $generated@@227 $generated@@0))
)))
(assert (forall (($generated@@228 T@U) ) (! ($generated@@27 $generated@@90 $generated@@228 $generated)
 :pattern ( ($generated@@27 $generated@@90 $generated@@228 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@247 true))
(let (($generated@@248  (=> (and ($generated@@50 $generated@@229) ($generated@@50 $generated@@230)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@50 $generated@@229)) (=> ($generated@@50 $generated@@229) (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@50 $generated@@230)))))))
(let (($generated@@249  (=> (not ($generated@@50 $generated@@229)) (and (=> (= (ControlFlow 0 10) 6) $generated@@248) (=> (= (ControlFlow 0 10) 8) $generated@@247)))))
(let (($generated@@250  (=> ($generated@@50 $generated@@229) (and (=> (= (ControlFlow 0 9) 6) $generated@@248) (=> (= (ControlFlow 0 9) 8) $generated@@247)))))
(let (($generated@@251  (=> (and (= $generated@@231 ($generated@@29 $generated@@232 $generated@@233)) ($generated@@27 $generated@@28 $generated@@232 $generated@@30)) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@233 $generated@@30) (= $generated@@234 $generated@@233)) (and ($generated@@27 $generated@@28 $generated@@234 $generated@@30) (= $generated@@235 $generated@@234))) (and (and (= $generated@@236 $generated@@232) ($generated@@27 $generated@@28 $generated@@236 $generated@@30)) (and (= $generated@@237 $generated@@236) ($generated@@80 $generated@@28 $generated@@237 $generated@@30 $generated@@238)))) (and (=> (= (ControlFlow 0 11) (- 0 13)) (< ($generated@@36 $generated@@237) ($generated@@36 $generated@@231))) (=> (< ($generated@@36 $generated@@237) ($generated@@36 $generated@@231)) (=> (and ($generated@@49 $generated@@237) (= $generated@@239 ($generated@@47 ($generated@@48 $generated@@240) $generated@@237))) (=> (and (and ($generated@@49 $generated@@237) ($generated@@27 $generated@@28 $generated@@239 $generated@@30)) (and (= $generated@@229 $generated@@239) ($generated@@80 $generated@@28 $generated@@235 $generated@@30 $generated@@238))) (and (=> (= (ControlFlow 0 11) (- 0 12)) (< ($generated@@36 $generated@@235) ($generated@@36 $generated@@231))) (=> (< ($generated@@36 $generated@@235) ($generated@@36 $generated@@231)) (=> ($generated@@49 $generated@@235) (=> (and (and (= $generated@@241 ($generated@@47 ($generated@@48 $generated@@240) $generated@@235)) ($generated@@49 $generated@@235)) (and ($generated@@27 $generated@@28 $generated@@241 $generated@@30) (= $generated@@230 $generated@@241))) (and (=> (= (ControlFlow 0 11) 9) $generated@@250) (=> (= (ControlFlow 0 11) 10) $generated@@249))))))))))))))
(let (($generated@@252 true))
(let (($generated@@253  (=> (or (not (= $generated@@231 ($generated@@34 $generated@@242))) (not true)) (and (=> (= (ControlFlow 0 14) 11) $generated@@251) (=> (= (ControlFlow 0 14) 4) $generated@@252)))))
(let (($generated@@254 true))
(let (($generated@@255  (=> (or (not (= $generated@@231 ($generated@@54 $generated@@243))) (not true)) (and (=> (= (ControlFlow 0 15) 3) $generated@@254) (=> (= (ControlFlow 0 15) 14) $generated@@253)))))
(let (($generated@@256 true))
(let (($generated@@257 true))
(let (($generated@@258  (=> (= $generated@@244 ($generated@@130 $generated@@245 $generated@@238 $generated@@4 false)) (and (and (=> (= (ControlFlow 0 16) 1) $generated@@257) (=> (= (ControlFlow 0 16) 2) $generated@@256)) (=> (= (ControlFlow 0 16) 15) $generated@@255)))))
(let (($generated@@259  (=> (and (and (and ($generated@@186 $generated@@238) ($generated@@246 $generated@@238)) ($generated@@27 $generated@@28 $generated@@231 $generated@@30)) (and (= 2 $generated@@46) (= (ControlFlow 0 17) 16))) $generated@@258)))
$generated@@259))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
