(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) T@U)
(declare-fun $generated@@23 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@42 () Int)
(declare-fun $generated@@43 (T@U Int) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@47 (T@U Int) Bool)
(declare-fun $generated@@48 (T@T T@U T@U) Bool)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (Int) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (Int) Bool)
(declare-fun $generated@@60 (Int) Bool)
(declare-fun $generated@@61 (Int) Bool)
(declare-fun $generated@@62 (Int Int) Int)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (Bool T@U) Int)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@93 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@95 (T@U) Int)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@U Bool T@U) Int)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@108 () Bool)
(declare-fun $generated@@109 (Int Int) Int)
(declare-fun $generated@@110 () Bool)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 (T@T T@T) T@T)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@215 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated) $generated@@0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ) (! ($generated@@23 ($generated@@22 $generated@@24 $generated@@25) $generated@@25)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@23 $generated@@26 $generated@@28) ($generated@@23 ($generated@@22 $generated@@26 $generated@@27) $generated@@28))
 :pattern ( ($generated@@22 $generated@@26 $generated@@27) ($generated@@23 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@7 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@7 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@33 $generated@@34) $generated@@35)  (or (= $generated@@35 $generated@@34) ($generated@@23 $generated@@33 $generated@@35)))
 :pattern ( ($generated@@23 ($generated@@22 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> ($generated@@23 $generated@@38 $generated@@39) (not ($generated@@23 ($generated@@36 $generated@@37 $generated@@38) $generated@@39)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38) ($generated@@23 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ) (!  (not ($generated@@23 $generated@@40 $generated@@41))
 :pattern ( ($generated@@23 $generated@@40 $generated@@41))
)))
(assert (= ($generated@@5 $generated@@45) 3))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@53 T@U) ($generated@@54 Int) ) (!  (=> (or ($generated@@47 ($generated@@44 $generated@@45 $generated@@53) ($generated@@46 $generated@@54)) (and (< 1 $generated@@42) ($generated@@48 $generated@@45 $generated@@53 ($generated@@49 $generated)))) (and (and (forall (($generated@@55 Int) ) (!  (=> ($generated@@23 ($generated@@44 $generated@@45 $generated@@53) ($generated@@51 $generated@@7 ($generated@@11 $generated@@55))) ($generated@@52 $generated@@55))
 :pattern ( ($generated@@50 $generated@@55))
 :pattern ( ($generated@@23 $generated@@53 ($generated@@51 $generated@@7 ($generated@@11 $generated@@55))))
)) (=> (forall (($generated@@56 Int) ) (!  (=> ($generated@@23 ($generated@@44 $generated@@45 $generated@@53) ($generated@@51 $generated@@7 ($generated@@11 $generated@@56))) ($generated@@50 $generated@@56))
 :pattern ( ($generated@@50 $generated@@56))
 :pattern ( ($generated@@23 $generated@@53 ($generated@@51 $generated@@7 ($generated@@11 $generated@@56))))
)) (forall (($generated@@57 Int) ) (! ($generated@@52 $generated@@57)
 :pattern ( ($generated@@23 $generated@@53 ($generated@@51 $generated@@7 ($generated@@11 $generated@@57))))
 :pattern ( ($generated@@50 $generated@@57))
)))) (= ($generated@@43 ($generated@@44 $generated@@45 $generated@@53) ($generated@@46 $generated@@54))  (and (forall (($generated@@58 Int) ) (!  (=> ($generated@@23 ($generated@@44 $generated@@45 $generated@@53) ($generated@@51 $generated@@7 ($generated@@11 $generated@@58))) ($generated@@50 $generated@@58))
 :pattern ( ($generated@@50 $generated@@58))
 :pattern ( ($generated@@23 $generated@@53 ($generated@@51 $generated@@7 ($generated@@11 $generated@@58))))
)) (forall (($generated@@59 Int) ) (!  (=> (and ($generated@@50 $generated@@59) (<= $generated@@59 ($generated@@46 $generated@@54))) ($generated@@23 ($generated@@44 $generated@@45 $generated@@53) ($generated@@51 $generated@@7 ($generated@@11 $generated@@59))))
 :pattern ( ($generated@@23 $generated@@53 ($generated@@51 $generated@@7 ($generated@@11 $generated@@59))))
 :pattern ( ($generated@@50 $generated@@59))
))))))
 :weight 3
 :pattern ( ($generated@@43 ($generated@@44 $generated@@45 $generated@@53) ($generated@@46 $generated@@54)))
))))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@63 Int) ) (!  (=> (or ($generated@@61 ($generated@@46 $generated@@63)) (< 1 $generated@@42)) (and (=> (<= ($generated@@46 2) ($generated@@46 $generated@@63)) (forall (($generated@@64 Int) ) (!  (=> (<= ($generated@@46 2) $generated@@64) (=> (< $generated@@64 $generated@@63) ($generated@@52 $generated@@64)))
 :pattern ( ($generated@@50 $generated@@64))
))) (= ($generated@@60 ($generated@@46 $generated@@63))  (and (<= ($generated@@46 2) ($generated@@46 $generated@@63)) (forall (($generated@@65 Int) ) (!  (=> (and (and (<= ($generated@@46 2) $generated@@65) (< $generated@@65 $generated@@63)) ($generated@@50 $generated@@65)) (or (not (= ($generated@@62 $generated@@63 $generated@@65) 0)) (not true)))
 :pattern ( ($generated@@50 $generated@@65))
))))))
 :weight 3
 :pattern ( ($generated@@60 ($generated@@46 $generated@@63)))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@23 ($generated@@36 $generated@@66 $generated@@67) $generated@@68)  (and ($generated@@23 $generated@@66 $generated@@68) (not ($generated@@23 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@23 ($generated@@36 $generated@@66 $generated@@67) $generated@@68))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@69 T@U) ($generated@@70 Int) ) (!  (=> (or ($generated@@47 $generated@@69 $generated@@70) (and (< 1 $generated@@42) ($generated@@48 $generated@@45 $generated@@69 ($generated@@49 $generated)))) (and (and (forall (($generated@@71 Int) ) (!  (=> ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@71))) ($generated@@52 $generated@@71))
 :pattern ( ($generated@@50 $generated@@71))
 :pattern ( ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@71))))
)) (=> (forall (($generated@@72 Int) ) (!  (=> ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@72))) ($generated@@50 $generated@@72))
 :pattern ( ($generated@@50 $generated@@72))
 :pattern ( ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@72))))
)) (forall (($generated@@73 Int) ) (! ($generated@@52 $generated@@73)
 :pattern ( ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@73))))
 :pattern ( ($generated@@50 $generated@@73))
)))) (= ($generated@@43 $generated@@69 $generated@@70)  (and (forall (($generated@@74 Int) ) (!  (=> ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@74))) ($generated@@50 $generated@@74))
 :pattern ( ($generated@@50 $generated@@74))
 :pattern ( ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@74))))
)) (forall (($generated@@75 Int) ) (!  (=> (and ($generated@@50 $generated@@75) (<= $generated@@75 $generated@@70)) ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@75))))
 :pattern ( ($generated@@23 $generated@@69 ($generated@@51 $generated@@7 ($generated@@11 $generated@@75))))
 :pattern ( ($generated@@50 $generated@@75))
))))))
 :pattern ( ($generated@@43 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@46 $generated@@76) $generated@@76)
 :pattern ( ($generated@@46 $generated@@76))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@44 $generated@@78 $generated@@77) $generated@@77)
 :pattern ( ($generated@@44 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@79 $generated@@80 $generated@@81) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@23 $generated@@80 $generated@@82) ($generated@@23 $generated@@81 $generated@@82))
 :pattern ( ($generated@@23 $generated@@80 $generated@@82))
 :pattern ( ($generated@@23 $generated@@81 $generated@@82))
)))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@51 $generated@@85 ($generated@@83 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@83 $generated@@85 $generated@@84))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@48 $generated@@45 $generated@@87 ($generated@@49 $generated@@88)) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@23 $generated@@87 $generated@@89) ($generated@@86 $generated@@89 $generated@@88))
 :pattern ( ($generated@@23 $generated@@87 $generated@@89))
)))
 :pattern ( ($generated@@48 $generated@@45 $generated@@87 ($generated@@49 $generated@@88)))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@92 $generated@@97) (and (< 1 $generated@@42) (and (and ($generated@@91 $generated@@96) ($generated@@48 $generated@@45 $generated@@97 ($generated@@49 $generated))) (not ($generated@@93 $generated@@97 $generated@@40))))) (and ($generated@@94 $generated@@97) (= ($generated@@90 true $generated@@97) (let (($generated@@98 ($generated@@95 $generated@@97)))
$generated@@98))))
 :pattern ( ($generated@@90 true $generated@@97) ($generated@@91 $generated@@96))
))))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@48 $generated@@7 $generated@@99 $generated@@30) (<= ($generated@@46 0) ($generated@@12 $generated@@99)))
 :pattern ( ($generated@@48 $generated@@7 $generated@@99 $generated@@30))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@100 ($generated@@51 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@29 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@100 ($generated@@51 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or ($generated@@107 ($generated@@44 $generated@@45 $generated@@112)) (and (< 2 $generated@@42) ($generated@@48 $generated@@45 $generated@@112 ($generated@@49 $generated)))) (and (=> (not ($generated@@93 $generated@@112 $generated@@40)) (and ($generated@@92 ($generated@@44 $generated@@45 $generated@@112)) (let (($generated@@113 ($generated@@90 $generated@@108 ($generated@@44 $generated@@45 $generated@@112))))
($generated@@107 ($generated@@36 $generated@@112 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@113)))))))) (= ($generated@@105 ($generated@@106 $generated@@111) true ($generated@@44 $generated@@45 $generated@@112)) (ite ($generated@@93 $generated@@112 $generated@@40) 1 (let (($generated@@114 ($generated@@90 $generated@@108 ($generated@@44 $generated@@45 $generated@@112))))
($generated@@109 $generated@@114 ($generated@@105 ($generated@@106 $generated@@111) $generated@@110 ($generated@@36 $generated@@112 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@114)))))))))))
 :weight 3
 :pattern ( ($generated@@105 ($generated@@106 $generated@@111) true ($generated@@44 $generated@@45 $generated@@112)))
))))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@86 $generated@@115 $generated@@30) (and (= ($generated@@51 $generated@@7 ($generated@@83 $generated@@7 $generated@@115)) $generated@@115) ($generated@@48 $generated@@7 ($generated@@83 $generated@@7 $generated@@115) $generated@@30)))
 :pattern ( ($generated@@86 $generated@@115 $generated@@30))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 Bool) ($generated@@118 T@U) ) (! (= ($generated@@105 ($generated@@106 $generated@@116) $generated@@117 $generated@@118) ($generated@@105 $generated@@116 $generated@@117 $generated@@118))
 :pattern ( ($generated@@105 ($generated@@106 $generated@@116) $generated@@117 $generated@@118))
)))
(assert  (=> (<= 0 $generated@@42) (forall (($generated@@119 Int) ) (!  (=> (or ($generated@@52 $generated@@119) (< 0 $generated@@42)) (= ($generated@@50 $generated@@119)  (and (<= ($generated@@46 2) $generated@@119) (forall (($generated@@120 Int) ) (!  (=> (and (<= ($generated@@46 2) $generated@@120) (< $generated@@120 $generated@@119)) (or (not (= ($generated@@62 $generated@@119 $generated@@120) 0)) (not true)))
 :pattern ( ($generated@@62 $generated@@119 $generated@@120))
)))))
 :pattern ( ($generated@@50 $generated@@119))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@93 $generated@@121 $generated@@122) (= $generated@@121 $generated@@122))
 :pattern ( ($generated@@93 $generated@@121 $generated@@122))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (or ($generated@@92 ($generated@@44 $generated@@45 $generated@@124)) (and (< 1 $generated@@42) (and (and ($generated@@91 $generated@@123) ($generated@@48 $generated@@45 $generated@@124 ($generated@@49 $generated))) (not ($generated@@93 $generated@@124 $generated@@40))))) (and ($generated@@94 ($generated@@44 $generated@@45 $generated@@124)) (= ($generated@@90 true ($generated@@44 $generated@@45 $generated@@124)) (let (($generated@@125 ($generated@@95 ($generated@@44 $generated@@45 $generated@@124))))
$generated@@125))))
 :weight 3
 :pattern ( ($generated@@90 true ($generated@@44 $generated@@45 $generated@@124)) ($generated@@91 $generated@@123))
))))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@86 $generated@@126 $generated) (and (= ($generated@@51 $generated@@7 ($generated@@83 $generated@@7 $generated@@126)) $generated@@126) ($generated@@48 $generated@@7 ($generated@@83 $generated@@7 $generated@@126) $generated)))
 :pattern ( ($generated@@86 $generated@@126 $generated))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@86 ($generated@@51 $generated@@129 $generated@@127) $generated@@128) ($generated@@48 $generated@@129 $generated@@127 $generated@@128))
 :pattern ( ($generated@@86 ($generated@@51 $generated@@129 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@94 $generated@@130) (and ($generated@@23 $generated@@130 ($generated@@51 $generated@@7 ($generated@@11 ($generated@@95 $generated@@130)))) (forall (($generated@@131 T@U) ) (!  (=> ($generated@@23 $generated@@130 ($generated@@51 $generated@@7 $generated@@131)) (<= ($generated@@12 $generated@@131) ($generated@@95 $generated@@130)))
 :pattern ( ($generated@@23 $generated@@130 ($generated@@51 $generated@@7 $generated@@131)))
))))
 :pattern ( ($generated@@95 $generated@@130))
)))
(assert  (=> (<= 2 $generated@@42) (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@107 $generated@@133) (and (< 2 $generated@@42) ($generated@@48 $generated@@45 $generated@@133 ($generated@@49 $generated)))) (and (=> (not ($generated@@93 $generated@@133 $generated@@40)) (and ($generated@@92 $generated@@133) (let (($generated@@134 ($generated@@90 $generated@@108 $generated@@133)))
($generated@@107 ($generated@@36 $generated@@133 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@134)))))))) (= ($generated@@105 ($generated@@106 $generated@@132) true $generated@@133) (ite ($generated@@93 $generated@@133 $generated@@40) 1 (let (($generated@@135 ($generated@@90 $generated@@108 $generated@@133)))
($generated@@109 $generated@@135 ($generated@@105 $generated@@132 $generated@@110 ($generated@@36 $generated@@133 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@135)))))))))))
 :pattern ( ($generated@@105 ($generated@@106 $generated@@132) true $generated@@133))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@29 $generated@@45 $generated@@136 ($generated@@49 $generated@@137) $generated@@138) (forall (($generated@@139 T@U) ) (!  (=> ($generated@@23 $generated@@136 $generated@@139) ($generated@@100 $generated@@139 $generated@@137 $generated@@138))
 :pattern ( ($generated@@23 $generated@@136 $generated@@139))
)))
 :pattern ( ($generated@@29 $generated@@45 $generated@@136 ($generated@@49 $generated@@137) $generated@@138))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@140 Bool) ($generated@@141 T@U) ) (!  (=> (or ($generated@@92 $generated@@141) (and (< 1 $generated@@42) (and ($generated@@48 $generated@@45 $generated@@141 ($generated@@49 $generated)) (not ($generated@@93 $generated@@141 $generated@@40))))) (and ($generated@@23 $generated@@141 ($generated@@51 $generated@@7 ($generated@@11 ($generated@@90 $generated@@140 $generated@@141)))) (forall (($generated@@142 T@U) ) (!  (=> ($generated@@23 $generated@@141 ($generated@@51 $generated@@7 $generated@@142)) (<= ($generated@@12 $generated@@142) ($generated@@90 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@23 $generated@@141 ($generated@@51 $generated@@7 $generated@@142)))
))))
 :pattern ( ($generated@@90 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@49 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@49 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@21 ($generated@@49 $generated@@145)) $generated@@1)
 :pattern ( ($generated@@49 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@83 $generated@@147 ($generated@@51 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@51 $generated@@147 $generated@@146))
)))
(assert  (=> (<= 0 $generated@@42) (forall (($generated@@148 Int) ) (!  (=> (or ($generated@@52 ($generated@@46 $generated@@148)) (< 0 $generated@@42)) (= ($generated@@50 ($generated@@46 $generated@@148))  (and (<= ($generated@@46 2) ($generated@@46 $generated@@148)) (forall (($generated@@149 Int) ) (!  (=> (and (<= ($generated@@46 2) $generated@@149) (< $generated@@149 $generated@@148)) (or (not (= ($generated@@62 $generated@@148 $generated@@149) 0)) (not true)))
 :pattern ( ($generated@@62 $generated@@148 $generated@@149))
)))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@46 $generated@@148)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@150 $generated@@161 $generated@@162 $generated@@163 ($generated@@157 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@166 $generated@@167) $generated@@164)
 :weight 0
)) (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@150 $generated@@168 $generated@@169 $generated@@170 ($generated@@157 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@150 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@150 $generated@@177 $generated@@178 $generated@@179 ($generated@@157 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@150 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)))) (= ($generated@@5 $generated@@151) 4)) (= ($generated@@5 $generated@@152) 5)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@154 $generated@@186 $generated@@187 ($generated@@158 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@188) $generated@@190) $generated@@188)
 :weight 0
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@195 $generated@@196) (= ($generated@@154 $generated@@191 $generated@@192 ($generated@@158 $generated@@191 $generated@@192 $generated@@194 $generated@@195 $generated@@193) $generated@@196) ($generated@@154 $generated@@191 $generated@@192 $generated@@194 $generated@@196)))
 :weight 0
))) (= ($generated@@5 $generated@@155) 6)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@5 ($generated@@156 $generated@@197 $generated@@198)) 7))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@159 ($generated@@156 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@156 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@160 ($generated@@156 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@156 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@10 ($generated@@150 $generated@@151 $generated@@152 $generated@@6 ($generated@@153 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))  (=> (and (or (not (= $generated@@207 $generated@@203)) (not true)) ($generated@@10 ($generated@@83 $generated@@6 ($generated@@154 $generated@@152 $generated@@155 ($generated@@154 $generated@@151 ($generated@@156 $generated@@152 $generated@@155) $generated@@204 $generated@@207) $generated@@205)))) $generated@@206))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152 $generated@@6 ($generated@@153 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@209 Int) ($generated@@210 Int) ) (! (= ($generated@@62 $generated@@209 $generated@@210) (mod $generated@@209 $generated@@210))
 :pattern ( ($generated@@62 $generated@@209 $generated@@210))
)))
(assert (forall (($generated@@211 Int) ($generated@@212 Int) ) (! (= ($generated@@109 $generated@@211 $generated@@212) (* $generated@@211 $generated@@212))
 :pattern ( ($generated@@109 $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@86 $generated@@213 ($generated@@49 $generated@@214)) (and (= ($generated@@51 $generated@@45 ($generated@@83 $generated@@45 $generated@@213)) $generated@@213) ($generated@@48 $generated@@45 ($generated@@83 $generated@@45 $generated@@213) ($generated@@49 $generated@@214))))
 :pattern ( ($generated@@86 $generated@@213 ($generated@@49 $generated@@214)))
)))
(assert (= ($generated@@21 $generated@@30) $generated@@3))
(assert (= ($generated@@215 $generated@@30) $generated@@4))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (! (= ($generated@@93 $generated@@216 $generated@@217) (forall (($generated@@218 T@U) ) (! (= ($generated@@23 $generated@@216 $generated@@218) ($generated@@23 $generated@@217 $generated@@218))
 :pattern ( ($generated@@23 $generated@@216 $generated@@218))
 :pattern ( ($generated@@23 $generated@@217 $generated@@218))
)))
 :pattern ( ($generated@@93 $generated@@216 $generated@@217))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@219 Int) ) (!  (=> (or ($generated@@61 $generated@@219) (< 1 $generated@@42)) (and (=> (<= ($generated@@46 2) $generated@@219) (forall (($generated@@220 Int) ) (!  (=> (<= ($generated@@46 2) $generated@@220) (=> (< $generated@@220 $generated@@219) ($generated@@52 $generated@@220)))
 :pattern ( ($generated@@50 $generated@@220))
))) (= ($generated@@60 $generated@@219)  (and (<= ($generated@@46 2) $generated@@219) (forall (($generated@@221 Int) ) (!  (=> (and (and (<= ($generated@@46 2) $generated@@221) (< $generated@@221 $generated@@219)) ($generated@@50 $generated@@221)) (or (not (= ($generated@@62 $generated@@219 $generated@@221) 0)) (not true)))
 :pattern ( ($generated@@50 $generated@@221))
))))))
 :pattern ( ($generated@@60 $generated@@219))
))))
(assert (forall (($generated@@222 Int) ) (! (= ($generated@@51 $generated@@7 ($generated@@11 ($generated@@46 $generated@@222))) ($generated@@44 $generated@@155 ($generated@@51 $generated@@7 ($generated@@11 $generated@@222))))
 :pattern ( ($generated@@51 $generated@@7 ($generated@@11 ($generated@@46 $generated@@222))))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (= ($generated@@51 $generated@@224 ($generated@@44 $generated@@224 $generated@@223)) ($generated@@44 $generated@@155 ($generated@@51 $generated@@224 $generated@@223)))
 :pattern ( ($generated@@51 $generated@@224 ($generated@@44 $generated@@224 $generated@@223)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! ($generated@@29 $generated@@7 $generated@@226 $generated $generated@@225)
 :pattern ( ($generated@@29 $generated@@7 $generated@@226 $generated $generated@@225))
)))
(assert (forall (($generated@@227 T@U) ) (! ($generated@@48 $generated@@7 $generated@@227 $generated)
 :pattern ( ($generated@@48 $generated@@7 $generated@@227 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () Int)
(declare-fun $generated@@237 () Int)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 33) (let (($generated@@247  (and (=> (= (ControlFlow 0 15) (- 0 24)) ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229)))) (=> ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229))) (and (=> (= (ControlFlow 0 15) (- 0 23)) ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229)))) (=> ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229))) (=> (and ($generated@@91 $generated@@230) ($generated@@231 $generated@@230)) (=> (and (and (and (and ($generated@@107 $generated@@228) ($generated@@107 ($generated@@36 $generated@@228 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229)))))) (= ($generated@@105 ($generated@@106 ($generated@@106 $generated@@232)) $generated@@110 $generated@@228) ($generated@@109 $generated@@229 ($generated@@105 ($generated@@106 ($generated@@106 $generated@@232)) $generated@@110 ($generated@@36 $generated@@228 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229)))))))) (and (= $generated@@233 $generated@@230) (= $generated@@234 ($generated@@36 $generated@@228 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229))))))) (and (and ($generated@@29 $generated@@45 $generated@@234 ($generated@@49 $generated) $generated@@230) ($generated@@107 ($generated@@36 $generated@@228 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229)))))) (and ($generated@@107 ($generated@@36 $generated@@228 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229))))) (= $generated@@235 ($generated@@105 ($generated@@106 $generated@@232) $generated@@110 ($generated@@36 $generated@@228 ($generated@@22 $generated@@40 ($generated@@51 $generated@@7 ($generated@@11 $generated@@229))))))))) (and (=> (= (ControlFlow 0 15) (- 0 22)) (= ($generated@@109 $generated@@229 $generated@@235) $generated@@236)) (=> (= ($generated@@109 $generated@@229 $generated@@235) $generated@@236) (and (=> (= (ControlFlow 0 15) (- 0 21)) ($generated@@48 $generated@@7 ($generated@@11 $generated@@229) $generated@@30)) (=> ($generated@@48 $generated@@7 ($generated@@11 $generated@@229) $generated@@30) (and (=> (= (ControlFlow 0 15) (- 0 20)) ($generated@@48 $generated@@7 ($generated@@11 $generated@@235) $generated@@30)) (=> ($generated@@48 $generated@@7 ($generated@@11 $generated@@235) $generated@@30) (and (=> (= (ControlFlow 0 15) (- 0 19)) ($generated@@48 $generated@@7 ($generated@@11 $generated@@236) $generated@@30)) (=> ($generated@@48 $generated@@7 ($generated@@11 $generated@@236) $generated@@30) (and (=> (= (ControlFlow 0 15) (- 0 18)) ($generated@@48 $generated@@7 ($generated@@11 ($generated@@46 1)) $generated@@30)) (=> ($generated@@48 $generated@@7 ($generated@@11 ($generated@@46 1)) $generated@@30) (=> (= $generated@@237 ($generated@@46 1)) (and (=> (= (ControlFlow 0 15) (- 0 17)) (= ($generated@@109 $generated@@229 $generated@@235) $generated@@236)) (=> (= ($generated@@109 $generated@@229 $generated@@235) $generated@@236) (and (=> (= (ControlFlow 0 15) (- 0 16)) (< $generated@@237 $generated@@229)) (=> (< $generated@@237 $generated@@229) (=> (and (and (and ($generated@@91 $generated@@238) ($generated@@231 $generated@@238)) (= ($generated@@62 (+ $generated@@236 $generated@@237) $generated@@229) $generated@@237)) (and (= $generated@@230 $generated@@238) (= (ControlFlow 0 15) (- 0 14)))) (or (not (= ($generated@@62 $generated@@239 $generated@@229) 0)) (not true))))))))))))))))))))))))))
(let (($generated@@248  (=> (= (ControlFlow 0 13) (- 0 12)) (or (not (= $generated@@229 0)) (not true)))))
(let (($generated@@249  (=> (=> (and (<= ($generated@@46 2) $generated@@229) (<= $generated@@229 $generated@@236)) ($generated@@52 $generated@@229)) (=> (and (and (<= ($generated@@46 2) $generated@@229) (<= $generated@@229 $generated@@236)) ($generated@@50 $generated@@229)) (and (=> (= (ControlFlow 0 25) 13) $generated@@248) (=> (= (ControlFlow 0 25) 15) $generated@@247))))))
(let (($generated@@250  (=> (and (not (and (<= ($generated@@46 2) $generated@@229) (<= $generated@@229 $generated@@236))) (= (ControlFlow 0 27) 25)) $generated@@249)))
(let (($generated@@251  (=> (and (and (and (<= ($generated@@46 2) $generated@@229) (<= $generated@@229 $generated@@236)) ($generated@@29 $generated@@7 ($generated@@11 $generated@@229) $generated $generated@@233)) (and ($generated@@52 $generated@@229) (= (ControlFlow 0 26) 25))) $generated@@249)))
(let (($generated@@252  (=> (< $generated@@229 ($generated@@46 2)) (and (=> (= (ControlFlow 0 29) 26) $generated@@251) (=> (= (ControlFlow 0 29) 27) $generated@@250)))))
(let (($generated@@253  (=> (<= ($generated@@46 2) $generated@@229) (and (=> (= (ControlFlow 0 28) 26) $generated@@251) (=> (= (ControlFlow 0 28) 27) $generated@@250)))))
(let (($generated@@254  (and (=> (= (ControlFlow 0 30) 28) $generated@@253) (=> (= (ControlFlow 0 30) 29) $generated@@252))))
(let (($generated@@255  (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@52 (+ $generated@@236 1)) ($generated@@50 (+ $generated@@236 1))))))
(let (($generated@@256  (=> (forall (($generated@@257 Int) ) (!  (=> (and (and (<= ($generated@@46 2) $generated@@257) (<= $generated@@257 $generated@@236)) ($generated@@50 $generated@@257)) (or (not (= ($generated@@62 $generated@@239 $generated@@257) 0)) (not true)))
 :pattern ( ($generated@@50 $generated@@257))
)) (=> (and (and (= $generated@@240 (+ $generated@@236 1)) ($generated@@29 $generated@@7 ($generated@@11 $generated@@240) $generated $generated@@233)) (and ($generated@@61 (+ $generated@@236 1)) ($generated@@61 (+ $generated@@236 1)))) (and (=> (= (ControlFlow 0 7) (- 0 11)) (=> ($generated@@61 (+ $generated@@236 1)) (or ($generated@@60 (+ $generated@@236 1)) (<= ($generated@@46 2) (+ $generated@@236 1))))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (=> ($generated@@61 (+ $generated@@236 1)) (or ($generated@@60 (+ $generated@@236 1)) (forall (($generated@@258 Int) ) (!  (=> (and (and (<= ($generated@@46 2) $generated@@258) (< $generated@@258 (+ $generated@@236 1))) ($generated@@50 $generated@@258)) (or (not (= ($generated@@62 (+ $generated@@236 1) $generated@@258) 0)) (not true)))
 :pattern ( ($generated@@50 $generated@@258))
))))) (=> (and ($generated@@60 (+ $generated@@236 1)) (= $generated@@241 (+ $generated@@236 1))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> ($generated@@61 $generated@@241) (or ($generated@@60 $generated@@241) (<= ($generated@@46 2) $generated@@241)))) (=> (=> ($generated@@61 $generated@@241) (or ($generated@@60 $generated@@241) (<= ($generated@@46 2) $generated@@241))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> ($generated@@61 $generated@@241) (or ($generated@@60 $generated@@241) (forall (($generated@@259 Int) ) (!  (=> (and (and (<= ($generated@@46 2) $generated@@259) (< $generated@@259 $generated@@241)) ($generated@@50 $generated@@259)) (or (not (= ($generated@@62 $generated@@241 $generated@@259) 0)) (not true)))
 :pattern ( ($generated@@50 $generated@@259))
))))) (=> (=> ($generated@@61 $generated@@241) (or ($generated@@60 $generated@@241) (forall (($generated@@260 Int) ) (!  (=> (and (and (<= ($generated@@46 2) $generated@@260) (< $generated@@260 $generated@@241)) ($generated@@50 $generated@@260)) (or (not (= ($generated@@62 $generated@@241 $generated@@260) 0)) (not true)))
 :pattern ( ($generated@@50 $generated@@260))
)))) (=> (and (and (and ($generated@@91 $generated@@242) ($generated@@231 $generated@@242)) ($generated@@52 $generated@@241)) (and (and ($generated@@52 $generated@@241) (and ($generated@@50 $generated@@241) (and (<= ($generated@@46 2) $generated@@241) (forall (($generated@@261 Int) ) (!  (=> (and (<= ($generated@@46 2) $generated@@261) (< $generated@@261 $generated@@241)) (or (not (= ($generated@@62 $generated@@241 $generated@@261) 0)) (not true)))
 :pattern ( ($generated@@62 $generated@@241 $generated@@261))
))))) (and (= $generated@@233 $generated@@242) (= (ControlFlow 0 7) 6)))) $generated@@255))))))))))))
(let (($generated@@262  (=> (=> true (<= ($generated@@46 2) $generated@@239)) (and (=> (= (ControlFlow 0 31) 30) $generated@@254) (=> (= (ControlFlow 0 31) 7) $generated@@256)))))
(let (($generated@@263  (and (=> (= (ControlFlow 0 3) (- 0 4)) (forall (($generated@@264 Int) ) (!  (=> ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@264))) (<= ($generated@@46 1) $generated@@264))
 :pattern ( ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@264))))
))) (=> (forall (($generated@@265 T@U) ) (!  (=> ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 $generated@@265)) (<= ($generated@@46 1) ($generated@@12 $generated@@265)))
 :pattern ( ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 $generated@@265)))
)) (=> (and ($generated@@91 $generated@@243) ($generated@@231 $generated@@243)) (=> (and (and (and ($generated@@107 $generated@@228) (=> (<= ($generated@@46 1) ($generated@@105 ($generated@@106 $generated@@232) $generated@@110 $generated@@228)) (forall (($generated@@266 T@U) ) (!  (=> ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 $generated@@266)) ($generated@@107 $generated@@228))
 :pattern ( ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 $generated@@266)))
)))) (and (<= ($generated@@46 1) ($generated@@105 ($generated@@106 ($generated@@106 $generated@@232)) $generated@@110 $generated@@228)) (forall (($generated@@267 T@U) ) (!  (=> ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 $generated@@267)) (<= ($generated@@12 $generated@@267) ($generated@@105 ($generated@@106 $generated@@232) $generated@@110 $generated@@228)))
 :pattern ( ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 $generated@@267)))
)))) (and (and (= $generated@@233 $generated@@243) (= (ControlFlow 0 3) (- 0 2))) ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 true))))) (<= ($generated@@46 2) $generated@@239)))))))
(let (($generated@@268 true))
(let (($generated@@269  (=> (= $generated@@244 ($generated@@153 $generated@@245 $generated@@246 $generated@@2 false)) (=> (and (and (and ($generated@@91 $generated@@233) ($generated@@231 $generated@@233)) (= $generated@@246 $generated@@233)) (and (forall (($generated@@270 T@U) ) (!  (=> (and (and ($generated@@48 $generated@@45 $generated@@270 ($generated@@49 $generated)) (and ($generated@@43 $generated@@270 $generated@@236) (= $generated@@236 ($generated@@105 ($generated@@106 $generated@@232) $generated@@110 $generated@@270)))) (or (and ($generated@@79 $generated@@270 $generated@@228) (not ($generated@@79 $generated@@228 $generated@@270))) (and ($generated@@93 $generated@@270 $generated@@228) (and (<= 0 $generated@@236) (< $generated@@236 $generated@@236))))) ($generated@@50 (+ $generated@@236 1)))
 :pattern ( ($generated@@105 ($generated@@106 $generated@@232) $generated@@110 $generated@@270))
 :pattern ( ($generated@@43 $generated@@270 $generated@@236))
)) (= $generated@@239 (+ $generated@@236 1)))) (and (and (=> (= (ControlFlow 0 32) 1) $generated@@268) (=> (= (ControlFlow 0 32) 3) $generated@@263)) (=> (= (ControlFlow 0 32) 31) $generated@@262))))))
(let (($generated@@271  (=> (and ($generated@@91 $generated@@246) ($generated@@231 $generated@@246)) (=> (and (and (and ($generated@@48 $generated@@45 $generated@@228 ($generated@@49 $generated)) ($generated@@29 $generated@@45 $generated@@228 ($generated@@49 $generated) $generated@@246)) (= 4 $generated@@42)) (and (and ($generated@@47 $generated@@228 $generated@@236) (and ($generated@@43 $generated@@228 $generated@@236) (and (forall (($generated@@272 Int) ) (!  (=> ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@272))) ($generated@@50 $generated@@272))
 :pattern ( ($generated@@50 $generated@@272))
 :pattern ( ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@272))))
)) (forall (($generated@@273 Int) ) (!  (=> (and ($generated@@50 $generated@@273) (<= $generated@@273 $generated@@236)) ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@273))))
 :pattern ( ($generated@@23 $generated@@228 ($generated@@51 $generated@@7 ($generated@@11 $generated@@273))))
 :pattern ( ($generated@@50 $generated@@273))
))))) (and (= $generated@@236 ($generated@@105 ($generated@@106 ($generated@@106 $generated@@232)) $generated@@110 $generated@@228)) (= (ControlFlow 0 33) 32)))) $generated@@269))))
$generated@@271))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
