(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U) T@U)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@72 (T@U) Int)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@121 (T@U) Int)
(declare-fun $generated@@122 (T@U) Int)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@131 () T@T)
(declare-fun $generated@@132 () T@T)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@135 (T@T T@T) T@T)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@139 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert ($generated@@20 $generated@@21))
(assert (= ($generated@@22 $generated@@23) $generated@@1))
(assert  (and (= ($generated@@4 $generated@@28) 3) (= ($generated@@4 $generated@@34) 4)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@29 ($generated@@27 $generated@@28 $generated@@40) ($generated@@27 $generated@@28 $generated@@41)) (and (< 2 $generated@@24) (and ($generated@@30 $generated@@28 $generated@@40 ($generated@@31 $generated@@21)) ($generated@@30 $generated@@28 $generated@@41 ($generated@@31 $generated@@21))))) (and (=> (not ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@32 ($generated@@27 $generated@@28 $generated@@40)))))) (let (($generated@@42 ($generated@@27 $generated@@28 ($generated@@33 ($generated@@27 $generated@@28 $generated@@40)))))
(let (($generated@@43 ($generated@@27 $generated@@34 ($generated@@35 ($generated@@27 $generated@@28 $generated@@40)))))
 (=> (not ($generated@@9 ($generated@@27 $generated@@5 ($generated@@8 ($generated@@32 ($generated@@27 $generated@@28 $generated@@41)))))) (let (($generated@@44 ($generated@@27 $generated@@28 ($generated@@33 ($generated@@27 $generated@@28 $generated@@41)))))
(let (($generated@@45 ($generated@@27 $generated@@34 ($generated@@35 ($generated@@27 $generated@@28 $generated@@41)))))
 (and (and ($generated@@36 $generated@@43 $generated@@45) (=> ($generated@@37 $generated@@43 $generated@@45) ($generated@@29 $generated@@42 ($generated@@27 $generated@@28 $generated@@41)))) (=> (not ($generated@@37 $generated@@43 $generated@@45)) ($generated@@29 ($generated@@27 $generated@@28 $generated@@40) $generated@@44))))))))) (= ($generated@@25 ($generated@@26 $generated@@39) ($generated@@27 $generated@@28 $generated@@40) ($generated@@27 $generated@@28 $generated@@41)) (ite ($generated@@32 ($generated@@27 $generated@@28 $generated@@40)) $generated@@41 (let (($generated@@46 ($generated@@27 $generated@@28 ($generated@@33 ($generated@@27 $generated@@28 $generated@@40)))))
(let (($generated@@47 ($generated@@27 $generated@@34 ($generated@@35 ($generated@@27 $generated@@28 $generated@@40)))))
(ite ($generated@@32 ($generated@@27 $generated@@28 $generated@@41)) $generated@@40 (let (($generated@@48 ($generated@@27 $generated@@28 ($generated@@33 ($generated@@27 $generated@@28 $generated@@41)))))
(let (($generated@@49 ($generated@@27 $generated@@34 ($generated@@35 ($generated@@27 $generated@@28 $generated@@41)))))
(ite ($generated@@37 $generated@@47 $generated@@49) ($generated@@38 $generated@@47 ($generated@@27 $generated@@28 ($generated@@25 ($generated@@26 $generated@@39) $generated@@46 ($generated@@27 $generated@@28 $generated@@41)))) ($generated@@38 $generated@@49 ($generated@@27 $generated@@28 ($generated@@25 ($generated@@26 $generated@@39) ($generated@@27 $generated@@28 $generated@@40) $generated@@48)))))))))))))
 :weight 3
 :pattern ( ($generated@@25 ($generated@@26 $generated@@39) ($generated@@27 $generated@@28 $generated@@40) ($generated@@27 $generated@@28 $generated@@41)))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> ($generated@@51 $generated@@53) ($generated@@50 $generated@@28 $generated@@23 ($generated@@31 $generated@@52) $generated@@53))
 :pattern ( ($generated@@50 $generated@@28 $generated@@23 ($generated@@31 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ) (! ($generated@@30 $generated@@28 $generated@@23 ($generated@@31 $generated@@54))
 :pattern ( ($generated@@30 $generated@@28 $generated@@23 ($generated@@31 $generated@@54)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@27 $generated@@56 $generated@@55) $generated@@55)
 :pattern ( ($generated@@27 $generated@@56 $generated@@55))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@30 $generated@@28 ($generated@@38 $generated@@59 $generated@@60) ($generated@@31 $generated@@58))  (and ($generated@@57 $generated@@59 $generated@@58) ($generated@@30 $generated@@28 $generated@@60 ($generated@@31 $generated@@58))))
 :pattern ( ($generated@@30 $generated@@28 ($generated@@38 $generated@@59 $generated@@60) ($generated@@31 $generated@@58)))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@32 $generated@@61) (= ($generated@@22 $generated@@61) $generated@@1))
 :pattern ( ($generated@@32 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@22 $generated@@63) $generated@@2))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@64 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@64 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@62 $generated@@68) (exists (($generated@@69 T@U) ($generated@@70 T@U) ) (= $generated@@68 ($generated@@38 $generated@@69 $generated@@70))))
 :pattern ( ($generated@@62 $generated@@68))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@36 ($generated@@27 $generated@@34 $generated@@73) ($generated@@27 $generated@@34 $generated@@74)) (and (< 1 $generated@@24) (and ($generated@@57 $generated@@73 $generated@@21) ($generated@@57 $generated@@74 $generated@@21)))) (and (and ($generated@@71 ($generated@@27 $generated@@34 $generated@@73)) ($generated@@71 ($generated@@27 $generated@@34 $generated@@74))) (= ($generated@@37 ($generated@@27 $generated@@34 $generated@@73) ($generated@@27 $generated@@34 $generated@@74)) (<= ($generated@@72 ($generated@@27 $generated@@34 $generated@@73)) ($generated@@72 ($generated@@27 $generated@@34 $generated@@74))))))
 :weight 3
 :pattern ( ($generated@@37 ($generated@@27 $generated@@34 $generated@@73) ($generated@@27 $generated@@34 $generated@@74)))
))))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@32 $generated@@75) (= $generated@@75 $generated@@23))
 :pattern ( ($generated@@32 $generated@@75))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@29 $generated@@77 $generated@@78) (and (< 2 $generated@@24) (and ($generated@@30 $generated@@28 $generated@@77 ($generated@@31 $generated@@21)) ($generated@@30 $generated@@28 $generated@@78 ($generated@@31 $generated@@21))))) (and (=> (not ($generated@@32 $generated@@77)) (let (($generated@@79 ($generated@@33 $generated@@77)))
(let (($generated@@80 ($generated@@35 $generated@@77)))
 (=> (not ($generated@@32 $generated@@78)) (let (($generated@@81 ($generated@@33 $generated@@78)))
(let (($generated@@82 ($generated@@35 $generated@@78)))
 (and (and ($generated@@36 $generated@@80 $generated@@82) (=> ($generated@@37 $generated@@80 $generated@@82) ($generated@@29 $generated@@79 $generated@@78))) (=> (not ($generated@@37 $generated@@80 $generated@@82)) ($generated@@29 $generated@@77 $generated@@81))))))))) (= ($generated@@25 ($generated@@26 $generated@@76) $generated@@77 $generated@@78) (ite ($generated@@32 $generated@@77) $generated@@78 (let (($generated@@83 ($generated@@33 $generated@@77)))
(let (($generated@@84 ($generated@@35 $generated@@77)))
(ite ($generated@@32 $generated@@78) $generated@@77 (let (($generated@@85 ($generated@@33 $generated@@78)))
(let (($generated@@86 ($generated@@35 $generated@@78)))
(ite ($generated@@37 $generated@@84 $generated@@86) ($generated@@38 $generated@@84 ($generated@@25 $generated@@76 $generated@@83 $generated@@78)) ($generated@@38 $generated@@86 ($generated@@25 $generated@@76 $generated@@77 $generated@@85))))))))))))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@76) $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@87 ($generated@@65 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@50 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@87 ($generated@@65 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@92 ($generated@@31 $generated@@94)) $generated@@0) (= ($generated@@93 ($generated@@31 $generated@@94)) $generated@@3))
 :pattern ( ($generated@@31 $generated@@94))
)))
(assert  (=> (<= 1 $generated@@24) (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or ($generated@@36 $generated@@95 $generated@@96) (and (< 1 $generated@@24) (and ($generated@@57 $generated@@95 $generated@@21) ($generated@@57 $generated@@96 $generated@@21)))) (and (and ($generated@@71 $generated@@95) ($generated@@71 $generated@@96)) (= ($generated@@37 $generated@@95 $generated@@96) (<= ($generated@@72 $generated@@95) ($generated@@72 $generated@@96)))))
 :pattern ( ($generated@@37 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@97) $generated@@98 $generated@@99) ($generated@@25 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@30 $generated@@28 $generated@@101 ($generated@@31 $generated@@100)) (or ($generated@@32 $generated@@101) ($generated@@62 $generated@@101)))
 :pattern ( ($generated@@62 $generated@@101) ($generated@@30 $generated@@28 $generated@@101 ($generated@@31 $generated@@100)))
 :pattern ( ($generated@@32 $generated@@101) ($generated@@30 $generated@@28 $generated@@101 ($generated@@31 $generated@@100)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@57 ($generated@@65 $generated@@104 $generated@@102) $generated@@103) ($generated@@30 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@57 ($generated@@65 $generated@@104 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@20 $generated@@105) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@57 $generated@@107 $generated@@105) ($generated@@87 $generated@@107 $generated@@105 $generated@@106))
 :pattern ( ($generated@@87 $generated@@107 $generated@@105 $generated@@106))
)))
 :pattern ( ($generated@@20 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@22 ($generated@@38 $generated@@108 $generated@@109)) $generated@@2)
 :pattern ( ($generated@@38 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@35 ($generated@@38 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@38 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@33 ($generated@@38 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@38 $generated@@112 $generated@@113))
)))
(assert  (=> (<= 2 $generated@@24) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or ($generated@@29 $generated@@115 $generated@@116) (and (< 2 $generated@@24) (and ($generated@@30 $generated@@28 $generated@@115 ($generated@@31 $generated@@21)) ($generated@@30 $generated@@28 $generated@@116 ($generated@@31 $generated@@21))))) ($generated@@30 $generated@@28 ($generated@@25 $generated@@114 $generated@@115 $generated@@116) ($generated@@31 $generated@@21)))
 :pattern ( ($generated@@25 $generated@@114 $generated@@115 $generated@@116))
))))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@31 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@31 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@64 $generated@@120 ($generated@@65 $generated@@120 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@65 $generated@@120 $generated@@119))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (< ($generated@@121 $generated@@123) ($generated@@122 ($generated@@38 $generated@@123 $generated@@124)))
 :pattern ( ($generated@@38 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (< ($generated@@122 $generated@@126) ($generated@@122 ($generated@@38 $generated@@125 $generated@@126)))
 :pattern ( ($generated@@38 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and ($generated@@51 $generated@@129) (and ($generated@@62 $generated@@127) ($generated@@50 $generated@@28 $generated@@127 ($generated@@31 $generated@@128) $generated@@129))) ($generated@@87 ($generated@@35 $generated@@127) $generated@@128 $generated@@129))
 :pattern ( ($generated@@87 ($generated@@35 $generated@@127) $generated@@128 $generated@@129))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@130 $generated@@140 $generated@@141 $generated@@142 ($generated@@136 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@145 $generated@@146) $generated@@143)
 :weight 0
)) (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@130 $generated@@147 $generated@@148 $generated@@149 ($generated@@136 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@154 $generated@@155) ($generated@@130 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@154 $generated@@155)))
 :weight 0
)) (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@130 $generated@@156 $generated@@157 $generated@@158 ($generated@@136 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@130 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)))) (= ($generated@@4 $generated@@131) 5)) (= ($generated@@4 $generated@@132) 6)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@134 $generated@@165 $generated@@166 ($generated@@137 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@167) $generated@@169) $generated@@167)
 :weight 0
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@174 $generated@@175) (= ($generated@@134 $generated@@170 $generated@@171 ($generated@@137 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@175) ($generated@@134 $generated@@170 $generated@@171 $generated@@173 $generated@@175)))
 :weight 0
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ) (= ($generated@@4 ($generated@@135 $generated@@176 $generated@@177)) 7))) (forall (($generated@@178 T@T) ($generated@@179 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@135 $generated@@178 $generated@@179))
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ) (! (= ($generated@@139 ($generated@@135 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@135 $generated@@180 $generated@@181))
))))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 Bool) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@9 ($generated@@130 $generated@@131 $generated@@132 $generated@@5 ($generated@@133 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))  (=> (and (or (not (= $generated@@186 $generated@@182)) (not true)) ($generated@@9 ($generated@@64 $generated@@5 ($generated@@134 $generated@@132 $generated@@34 ($generated@@134 $generated@@131 ($generated@@135 $generated@@132 $generated@@34) $generated@@183 $generated@@186) $generated@@184)))) $generated@@185))
 :pattern ( ($generated@@130 $generated@@131 $generated@@132 $generated@@5 ($generated@@133 $generated@@182 $generated@@183 $generated@@184 $generated@@185) $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@121 ($generated@@65 $generated@@28 $generated@@188)) ($generated@@122 $generated@@188))
 :pattern ( ($generated@@121 ($generated@@65 $generated@@28 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@57 $generated@@190 ($generated@@31 $generated@@189)) (and (= ($generated@@65 $generated@@28 ($generated@@64 $generated@@28 $generated@@190)) $generated@@190) ($generated@@30 $generated@@28 ($generated@@64 $generated@@28 $generated@@190) ($generated@@31 $generated@@189))))
 :pattern ( ($generated@@57 $generated@@190 ($generated@@31 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@51 $generated@@193) (and ($generated@@62 $generated@@191) ($generated@@50 $generated@@28 $generated@@191 ($generated@@31 $generated@@192) $generated@@193))) ($generated@@50 $generated@@28 ($generated@@33 $generated@@191) ($generated@@31 $generated@@192) $generated@@193))
 :pattern ( ($generated@@50 $generated@@28 ($generated@@33 $generated@@191) ($generated@@31 $generated@@192) $generated@@193))
)))
(assert (= $generated@@23 ($generated@@27 $generated@@28 $generated@@23)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@38 ($generated@@27 $generated@@34 $generated@@194) ($generated@@27 $generated@@28 $generated@@195)) ($generated@@27 $generated@@28 ($generated@@38 $generated@@194 $generated@@195)))
 :pattern ( ($generated@@38 ($generated@@27 $generated@@34 $generated@@194) ($generated@@27 $generated@@28 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@T) ) (! (= ($generated@@65 $generated@@197 ($generated@@27 $generated@@197 $generated@@196)) ($generated@@27 $generated@@34 ($generated@@65 $generated@@197 $generated@@196)))
 :pattern ( ($generated@@65 $generated@@197 ($generated@@27 $generated@@197 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> ($generated@@51 $generated@@201) (= ($generated@@50 $generated@@28 ($generated@@38 $generated@@199 $generated@@200) ($generated@@31 $generated@@198) $generated@@201)  (and ($generated@@87 $generated@@199 $generated@@198 $generated@@201) ($generated@@50 $generated@@28 $generated@@200 ($generated@@31 $generated@@198) $generated@@201))))
 :pattern ( ($generated@@50 $generated@@28 ($generated@@38 $generated@@199 $generated@@200) ($generated@@31 $generated@@198) $generated@@201))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@220  (=> (and (and (not ($generated@@37 $generated@@202 $generated@@203)) ($generated@@50 $generated@@28 $generated@@204 ($generated@@31 $generated@@21) $generated@@205)) (and ($generated@@50 $generated@@28 $generated@@206 ($generated@@31 $generated@@21) $generated@@205) (= (ControlFlow 0 9) (- 0 8)))) (or (< ($generated@@122 $generated@@204) ($generated@@122 $generated@@204)) (and (= ($generated@@122 $generated@@204) ($generated@@122 $generated@@204)) (< ($generated@@122 $generated@@206) ($generated@@122 $generated@@207)))))))
(let (($generated@@221  (=> (and (and ($generated@@37 $generated@@202 $generated@@203) ($generated@@50 $generated@@28 $generated@@208 ($generated@@31 $generated@@21) $generated@@205)) (and ($generated@@50 $generated@@28 $generated@@207 ($generated@@31 $generated@@21) $generated@@205) (= (ControlFlow 0 7) (- 0 6)))) (or (< ($generated@@122 $generated@@208) ($generated@@122 $generated@@204)) (and (= ($generated@@122 $generated@@208) ($generated@@122 $generated@@204)) (< ($generated@@122 $generated@@207) ($generated@@122 $generated@@207)))))))
(let (($generated@@222  (=> (and (and (= $generated@@207 ($generated@@38 $generated@@209 $generated@@210)) ($generated@@57 $generated@@209 $generated@@21)) (and ($generated@@30 $generated@@28 $generated@@210 ($generated@@31 $generated@@21)) (= $generated@@211 $generated@@210))) (=> (and (and (and ($generated@@30 $generated@@28 $generated@@211 ($generated@@31 $generated@@21)) (= $generated@@206 $generated@@211)) (and (= $generated@@212 $generated@@209) ($generated@@57 $generated@@212 $generated@@21))) (and (and (= $generated@@203 $generated@@212) ($generated@@87 $generated@@202 $generated@@21 $generated@@205)) (and ($generated@@87 $generated@@203 $generated@@21 $generated@@205) ($generated@@36 $generated@@202 $generated@@203)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@221) (=> (= (ControlFlow 0 10) 9) $generated@@220))))))
(let (($generated@@223 true))
(let (($generated@@224  (=> (or (not (= $generated@@207 $generated@@23)) (not true)) (and (=> (= (ControlFlow 0 11) 10) $generated@@222) (=> (= (ControlFlow 0 11) 5) $generated@@223)))))
(let (($generated@@225 true))
(let (($generated@@226  (=> (= $generated@@204 ($generated@@38 $generated@@213 $generated@@214)) (=> (and (and (and ($generated@@57 $generated@@213 $generated@@21) ($generated@@30 $generated@@28 $generated@@214 ($generated@@31 $generated@@21))) (and (= $generated@@215 $generated@@214) ($generated@@30 $generated@@28 $generated@@215 ($generated@@31 $generated@@21)))) (and (and (= $generated@@208 $generated@@215) (= $generated@@216 $generated@@213)) (and ($generated@@57 $generated@@216 $generated@@21) (= $generated@@202 $generated@@216)))) (and (=> (= (ControlFlow 0 12) 4) $generated@@225) (=> (= (ControlFlow 0 12) 11) $generated@@224))))))
(let (($generated@@227 true))
(let (($generated@@228  (=> (or (not (= $generated@@204 $generated@@23)) (not true)) (and (=> (= (ControlFlow 0 13) 12) $generated@@226) (=> (= (ControlFlow 0 13) 3) $generated@@227)))))
(let (($generated@@229 true))
(let (($generated@@230 true))
(let (($generated@@231  (=> (= $generated@@217 ($generated@@133 $generated@@218 $generated@@205 $generated false)) (and (and (=> (= (ControlFlow 0 14) 1) $generated@@230) (=> (= (ControlFlow 0 14) 2) $generated@@229)) (=> (= (ControlFlow 0 14) 13) $generated@@228)))))
(let (($generated@@232  (=> (and ($generated@@51 $generated@@205) ($generated@@219 $generated@@205)) (=> (and (and ($generated@@30 $generated@@28 $generated@@204 ($generated@@31 $generated@@21)) ($generated@@30 $generated@@28 $generated@@207 ($generated@@31 $generated@@21))) (and (= 2 $generated@@24) (= (ControlFlow 0 15) 14))) $generated@@231))))
$generated@@232))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
