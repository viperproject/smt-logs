(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U T@U T@U) Bool)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (Int) T@U)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@39 (Int) Bool)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@115 (T@U T@U) Bool)
(declare-fun $generated@@126 () T@T)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@156 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@216 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@217 (T@U) Bool)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@22) $generated@@23 $generated@@24) (= $generated@@23 $generated@@24))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@22) $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> (and ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@27 $generated@@28))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@25 $generated@@26 $generated@@28))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 Int) ($generated@@34 Int) ) (!  (=> (and (and (<= 0 $generated@@33) (<= 0 $generated@@34)) (<= (+ $generated@@33 $generated@@34) ($generated@@31 $generated@@32))) (= ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)) ($generated@@29 $generated@@32 ($generated@@30 (+ $generated@@33 $generated@@34)))))
 :pattern ( ($generated@@29 ($generated@@29 $generated@@32 ($generated@@30 $generated@@33)) ($generated@@30 $generated@@34)))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@1))
(assert (= ($generated@@4 $generated@@42) 3))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (or ($generated@@39 $generated@@45) (and (< 1 $generated@@37) (<= ($generated@@40 0) $generated@@45))) ($generated@@41 $generated@@42 ($generated@@38 $generated@@44 $generated@@45) $generated@@43))
 :pattern ( ($generated@@38 $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (forall (($generated@@50 Int) ) (!  (=> (<= 0 $generated@@50) ($generated@@46 ($generated@@30 $generated@@50) ($generated@@21 $generated@@47) $generated@@48 $generated@@49))
 :pattern ( ($generated@@46 ($generated@@30 $generated@@50) ($generated@@21 $generated@@47) $generated@@48 $generated@@49))
)) ($generated@@20 ($generated@@21 $generated@@47) $generated@@48 $generated@@49))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@47) $generated@@48 $generated@@49))
)))
(assert ($generated@@41 $generated@@42 $generated@@36 $generated@@43))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@55 T@U) ) (!  (=> (or ($generated@@52 $generated@@55) (and (< 2 $generated@@37) ($generated@@41 $generated@@42 $generated@@55 $generated@@43))) (and (forall (($generated@@56 Int) ) (!  (=> (<= ($generated@@40 0) $generated@@56) (and (and ($generated@@54 $generated@@55) ($generated@@54 ($generated@@38 ($generated@@21 $generated@@53) $generated@@56))) ($generated@@39 $generated@@56)))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@53) $generated@@56))
)) (= ($generated@@51 $generated@@55) (exists (($generated@@57 Int) ) (!  (and (<= ($generated@@40 0) $generated@@57) ($generated@@20 ($generated@@21 ($generated@@21 $generated@@53)) $generated@@55 ($generated@@38 ($generated@@21 $generated@@53) $generated@@57)))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@53) $generated@@57))
)))))
 :pattern ( ($generated@@51 $generated@@55))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@25 $generated@@58 $generated@@62) ($generated@@46 $generated@@62 ($generated@@21 $generated@@59) $generated@@60 $generated@@61)) ($generated@@46 $generated@@58 ($generated@@21 $generated@@59) $generated@@60 $generated@@61))
 :pattern ( ($generated@@46 $generated@@58 ($generated@@21 $generated@@59) $generated@@60 $generated@@61) ($generated@@46 $generated@@62 ($generated@@21 $generated@@59) $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@40 $generated@@63) $generated@@63)
 :pattern ( ($generated@@40 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@35 $generated@@68) $generated@@1))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@35 $generated@@70) $generated@@2))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@71 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@74 $generated@@73))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and ($generated@@41 $generated@@42 $generated@@77 $generated@@43) (= $generated@@78 ($generated@@30 0))) ($generated@@75 $generated@@76 $generated@@78 $generated@@77))
 :pattern ( ($generated@@75 $generated@@76 $generated@@78 $generated@@77))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@41 $generated@@42 $generated@@82 $generated@@43) ($generated@@41 $generated@@42 $generated@@83 $generated@@43)) (= ($generated@@46 $generated@@80 ($generated@@21 $generated@@81) $generated@@82 $generated@@83)  (and (=> (< 0 ($generated@@31 $generated@@80)) (or (and ($generated@@67 $generated@@82) ($generated@@67 $generated@@83)) (and (and ($generated@@69 $generated@@82) ($generated@@69 $generated@@83)) (=> (and ($generated@@69 $generated@@82) ($generated@@69 $generated@@83)) ($generated@@46 ($generated@@29 $generated@@80 ($generated@@30 1)) $generated@@81 ($generated@@79 $generated@@82) ($generated@@79 $generated@@83)))))) (=> (and (or (not (= $generated@@80 ($generated@@30 0))) (not true)) (= ($generated@@31 $generated@@80) 0)) ($generated@@20 $generated@@81 $generated@@82 $generated@@83)))))
 :pattern ( ($generated@@46 $generated@@80 ($generated@@21 $generated@@81) $generated@@82 $generated@@83))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@41 $generated@@42 $generated@@86 $generated@@43) (forall (($generated@@87 T@U) ) (! ($generated@@75 ($generated@@21 $generated@@85) $generated@@87 $generated@@86)
 :pattern ( ($generated@@75 ($generated@@21 $generated@@85) $generated@@87 $generated@@86))
))) ($generated@@84 ($generated@@21 $generated@@85) $generated@@86))
 :pattern ( ($generated@@84 ($generated@@21 $generated@@85) $generated@@86))
))))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@67 $generated@@88) (= $generated@@88 $generated@@36))
 :pattern ( ($generated@@67 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@69 $generated@@90) (exists (($generated@@91 T@U) ) (= $generated@@90 ($generated@@89 $generated@@91))))
 :pattern ( ($generated@@69 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and ($generated@@41 $generated@@42 $generated@@93 $generated@@43) ($generated@@41 $generated@@42 $generated@@94 $generated@@43)) (= ($generated@@20 ($generated@@21 $generated@@92) $generated@@93 $generated@@94)  (or (and ($generated@@67 $generated@@93) ($generated@@67 $generated@@94)) (and (and ($generated@@69 $generated@@93) ($generated@@69 $generated@@94)) (=> (and ($generated@@69 $generated@@93) ($generated@@69 $generated@@94)) ($generated@@20 $generated@@92 ($generated@@79 $generated@@93) ($generated@@79 $generated@@94)))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or (not (= $generated@@95 ($generated@@30 0))) (not true)) (= ($generated@@46 $generated@@95 ($generated@@21 $generated@@96) $generated@@97 $generated@@98) ($generated@@46 $generated@@95 $generated@@96 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@46 $generated@@95 ($generated@@21 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@75 ($generated@@21 $generated@@99) $generated@@100 $generated@@101) ($generated@@75 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@75 ($generated@@21 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@102) $generated@@103 $generated@@104) ($generated@@20 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@102) $generated@@103 $generated@@104))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and ($generated@@41 $generated@@42 $generated@@106 $generated@@43) ($generated@@84 ($generated@@21 $generated@@105) $generated@@106)) (forall (($generated@@107 T@U) ) (! ($generated@@75 ($generated@@21 $generated@@105) $generated@@107 $generated@@106)
 :pattern ( ($generated@@75 ($generated@@21 $generated@@105) $generated@@107 $generated@@106))
)))
 :pattern ( ($generated@@84 ($generated@@21 $generated@@105) $generated@@106))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and ($generated@@108 $generated@@110) (<= ($generated@@31 $generated@@110) ($generated@@31 $generated@@109))) (and (= ($generated@@108 ($generated@@29 $generated@@109 $generated@@110)) ($generated@@108 $generated@@109)) (= ($generated@@31 ($generated@@29 $generated@@109 $generated@@110)) (- ($generated@@31 $generated@@109) ($generated@@31 $generated@@110)))))
 :pattern ( ($generated@@29 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 Int) ) (!  (=> (<= 0 $generated@@111) (and ($generated@@108 ($generated@@30 $generated@@111)) (= ($generated@@31 ($generated@@30 $generated@@111)) $generated@@111)))
 :pattern ( ($generated@@30 $generated@@111))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or ($generated@@112 $generated@@114) (and (< 1 $generated@@37) ($generated@@41 $generated@@42 $generated@@114 $generated@@43))) (and (=> ($generated@@69 $generated@@114) ($generated@@112 ($generated@@79 $generated@@114))) (= ($generated@@84 ($generated@@21 $generated@@113) $generated@@114)  (and ($generated@@69 $generated@@114) ($generated@@84 $generated@@113 ($generated@@79 $generated@@114))))))
 :pattern ( ($generated@@84 ($generated@@21 $generated@@113) $generated@@114))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@115 $generated@@117 $generated@@118) (and (< 2 $generated@@37) ($generated@@41 $generated@@42 $generated@@118 $generated@@43))) (and (and (=> (< 0 ($generated@@31 $generated@@117)) (=> ($generated@@69 $generated@@118) ($generated@@115 ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@79 $generated@@118)))) (=> (=> (< 0 ($generated@@31 $generated@@117)) (and ($generated@@69 $generated@@118) ($generated@@75 $generated@@116 ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@79 $generated@@118)))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@117)) (forall (($generated@@119 T@U) ) (!  (=> ($generated@@25 $generated@@119 $generated@@117) ($generated@@115 $generated@@119 $generated@@118))
 :pattern ( ($generated@@75 $generated@@116 $generated@@119 $generated@@118))
))))) (= ($generated@@75 ($generated@@21 $generated@@116) $generated@@117 $generated@@118)  (and (=> (< 0 ($generated@@31 $generated@@117)) (and ($generated@@69 $generated@@118) ($generated@@75 $generated@@116 ($generated@@29 $generated@@117 ($generated@@30 1)) ($generated@@79 $generated@@118)))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@117)) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@25 $generated@@120 $generated@@117) ($generated@@75 $generated@@116 $generated@@120 $generated@@118))
 :pattern ( ($generated@@75 $generated@@116 $generated@@120 $generated@@118))
)))))))
 :pattern ( ($generated@@75 ($generated@@21 $generated@@116) $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@41 $generated@@42 ($generated@@89 $generated@@121) $generated@@43) ($generated@@41 $generated@@42 $generated@@121 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 ($generated@@89 $generated@@121) $generated@@43))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@122) $generated@@123 $generated@@124) (forall (($generated@@125 T@U) ) (! ($generated@@46 $generated@@125 ($generated@@21 $generated@@122) $generated@@123 $generated@@124)
 :pattern ( ($generated@@46 $generated@@125 ($generated@@21 $generated@@122) $generated@@123 $generated@@124))
)))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (= ($generated@@4 $generated@@126) 4))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or ($generated@@115 ($generated@@64 $generated@@126 $generated@@128) ($generated@@64 $generated@@42 $generated@@129)) (and (< 2 $generated@@37) ($generated@@41 $generated@@42 $generated@@129 $generated@@43))) (and (and (=> (< 0 ($generated@@31 $generated@@128)) (=> ($generated@@9 ($generated@@64 $generated@@5 ($generated@@8 ($generated@@69 ($generated@@64 $generated@@42 $generated@@129))))) ($generated@@115 ($generated@@29 $generated@@128 ($generated@@30 1)) ($generated@@64 $generated@@42 ($generated@@79 ($generated@@64 $generated@@42 $generated@@129)))))) (=> (=> (< 0 ($generated@@31 $generated@@128)) (and ($generated@@69 ($generated@@64 $generated@@42 $generated@@129)) ($generated@@75 ($generated@@21 $generated@@127) ($generated@@29 $generated@@128 ($generated@@30 1)) ($generated@@64 $generated@@42 ($generated@@79 ($generated@@64 $generated@@42 $generated@@129)))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@128)) (forall (($generated@@130 T@U) ) (!  (=> ($generated@@25 $generated@@130 $generated@@128) ($generated@@115 $generated@@130 $generated@@129))
 :pattern ( ($generated@@75 ($generated@@21 $generated@@127) $generated@@130 $generated@@129))
))))) (= ($generated@@75 ($generated@@21 $generated@@127) ($generated@@64 $generated@@126 $generated@@128) ($generated@@64 $generated@@42 $generated@@129))  (and (=> (< 0 ($generated@@31 $generated@@128)) (and ($generated@@69 ($generated@@64 $generated@@42 $generated@@129)) ($generated@@75 ($generated@@21 $generated@@127) ($generated@@29 $generated@@128 ($generated@@30 1)) ($generated@@64 $generated@@42 ($generated@@79 ($generated@@64 $generated@@42 $generated@@129)))))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@128)) (forall (($generated@@131 T@U) ) (!  (=> ($generated@@25 $generated@@131 $generated@@128) ($generated@@75 ($generated@@21 $generated@@127) $generated@@131 $generated@@129))
 :pattern ( ($generated@@75 ($generated@@21 $generated@@127) $generated@@131 $generated@@129))
)))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@21 $generated@@127) ($generated@@64 $generated@@126 $generated@@128) ($generated@@64 $generated@@42 $generated@@129)))
))))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@54 $generated@@132) (or ($generated@@67 $generated@@132) ($generated@@69 $generated@@132)))
 :pattern ( ($generated@@54 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (or ($generated@@25 $generated@@133 $generated@@134) (= $generated@@133 $generated@@134)) ($generated@@25 $generated@@134 $generated@@133))
 :pattern ( ($generated@@25 $generated@@133 $generated@@134) ($generated@@25 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@135 $generated@@43) (or ($generated@@67 $generated@@135) ($generated@@69 $generated@@135)))
 :pattern ( ($generated@@69 $generated@@135) ($generated@@41 $generated@@42 $generated@@135 $generated@@43))
 :pattern ( ($generated@@67 $generated@@135) ($generated@@41 $generated@@42 $generated@@135 $generated@@43))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@84 ($generated@@21 $generated@@136) $generated@@137) ($generated@@84 $generated@@136 $generated@@137))
 :pattern ( ($generated@@84 ($generated@@21 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (<= 0 ($generated@@31 $generated@@138))
 :pattern ( ($generated@@31 $generated@@138))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@139 T@U) ($generated@@140 Int) ) (!  (=> (or ($generated@@39 $generated@@140) (and (< 1 $generated@@37) (<= ($generated@@40 0) $generated@@140))) (and (=> (or (not (= $generated@@140 ($generated@@40 0))) (not true)) ($generated@@39 (- $generated@@140 1))) (= ($generated@@38 ($generated@@21 $generated@@139) $generated@@140) (ite (= $generated@@140 ($generated@@40 0)) $generated@@36 ($generated@@89 ($generated@@38 $generated@@139 (- $generated@@140 1)))))))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@139) $generated@@140))
))))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@35 ($generated@@89 $generated@@141)) $generated@@2)
 :pattern ( ($generated@@89 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@79 ($generated@@89 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@89 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@71 $generated@@144 ($generated@@72 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@72 $generated@@144 $generated@@143))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@145 T@U) ) (!  (=> (or ($generated@@52 ($generated@@64 $generated@@42 $generated@@145)) (and (< 2 $generated@@37) ($generated@@41 $generated@@42 $generated@@145 $generated@@43))) (and (forall (($generated@@146 Int) ) (!  (=> (<= ($generated@@40 0) $generated@@146) (and (and ($generated@@54 ($generated@@64 $generated@@42 $generated@@145)) ($generated@@54 ($generated@@38 ($generated@@21 $generated@@53) $generated@@146))) ($generated@@39 $generated@@146)))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@53) $generated@@146))
)) (= ($generated@@51 ($generated@@64 $generated@@42 $generated@@145)) (exists (($generated@@147 Int) ) (!  (and (<= ($generated@@40 0) $generated@@147) ($generated@@20 ($generated@@21 ($generated@@21 $generated@@53)) $generated@@145 ($generated@@38 ($generated@@21 $generated@@53) $generated@@147)))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@53) $generated@@147))
)))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@64 $generated@@42 $generated@@145)))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (and (and (and (=> ($generated@@25 $generated@@148 $generated@@149) (or (not (= $generated@@148 $generated@@149)) (not true))) (=> (and ($generated@@108 $generated@@148) (not ($generated@@108 $generated@@149))) ($generated@@25 $generated@@148 $generated@@149))) (=> (and ($generated@@108 $generated@@148) ($generated@@108 $generated@@149)) (= ($generated@@25 $generated@@148 $generated@@149) (< ($generated@@31 $generated@@148) ($generated@@31 $generated@@149))))) (=> (and ($generated@@25 $generated@@148 $generated@@149) ($generated@@108 $generated@@149)) ($generated@@108 $generated@@148)))
 :pattern ( ($generated@@25 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 Int) ) (! (= ($generated@@38 ($generated@@21 $generated@@150) $generated@@151) ($generated@@38 $generated@@150 $generated@@151))
 :pattern ( ($generated@@38 ($generated@@21 $generated@@150) $generated@@151))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@152 $generated@@162 $generated@@163 $generated@@164 ($generated@@158 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@152 $generated@@169 $generated@@170 $generated@@171 ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@152 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@152 $generated@@178 $generated@@179 $generated@@180 ($generated@@158 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@152 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))) (= ($generated@@4 $generated@@153) 5)) (= ($generated@@4 $generated@@154) 6)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@156 $generated@@187 $generated@@188 ($generated@@159 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@189) $generated@@191) $generated@@189)
 :weight 0
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@196 $generated@@197) (= ($generated@@156 $generated@@192 $generated@@193 ($generated@@159 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@194) $generated@@197) ($generated@@156 $generated@@192 $generated@@193 $generated@@195 $generated@@197)))
 :weight 0
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@4 ($generated@@157 $generated@@198 $generated@@199)) 7))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@160 ($generated@@157 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@157 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@161 ($generated@@157 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@157 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@9 ($generated@@152 $generated@@153 $generated@@154 $generated@@5 ($generated@@155 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (or (not (= $generated@@208 $generated@@204)) (not true)) ($generated@@9 ($generated@@71 $generated@@5 ($generated@@156 $generated@@154 $generated@@126 ($generated@@156 $generated@@153 ($generated@@157 $generated@@154 $generated@@126) $generated@@205 $generated@@208) $generated@@206)))) $generated@@207))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154 $generated@@5 ($generated@@155 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (or ($generated@@115 ($generated@@64 $generated@@126 $generated@@211) $generated@@212) (and (< 2 $generated@@37) ($generated@@41 $generated@@42 $generated@@212 $generated@@43))) (and (and (=> (< 0 ($generated@@31 $generated@@211)) (=> ($generated@@69 $generated@@212) ($generated@@115 ($generated@@29 $generated@@211 ($generated@@30 1)) ($generated@@79 $generated@@212)))) (=> (=> (< 0 ($generated@@31 $generated@@211)) (and ($generated@@69 $generated@@212) ($generated@@75 ($generated@@21 $generated@@210) ($generated@@29 $generated@@211 ($generated@@30 1)) ($generated@@79 $generated@@212)))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@211)) (forall (($generated@@213 T@U) ) (!  (=> ($generated@@25 $generated@@213 $generated@@211) ($generated@@115 $generated@@213 $generated@@212))
 :pattern ( ($generated@@75 ($generated@@21 $generated@@210) $generated@@213 $generated@@212))
))))) (= ($generated@@75 ($generated@@21 $generated@@210) ($generated@@64 $generated@@126 $generated@@211) $generated@@212)  (and (=> (< 0 ($generated@@31 $generated@@211)) (and ($generated@@69 $generated@@212) ($generated@@75 ($generated@@21 $generated@@210) ($generated@@29 $generated@@211 ($generated@@30 1)) ($generated@@79 $generated@@212)))) (=> (= ($generated@@40 0) ($generated@@31 $generated@@211)) (forall (($generated@@214 T@U) ) (!  (=> ($generated@@25 $generated@@214 $generated@@211) ($generated@@75 ($generated@@21 $generated@@210) $generated@@214 $generated@@212))
 :pattern ( ($generated@@75 ($generated@@21 $generated@@210) $generated@@214 $generated@@212))
)))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@21 $generated@@210) ($generated@@64 $generated@@126 $generated@@211) $generated@@212))
))))
(assert (forall (($generated@@215 T@U) ) (!  (=> ($generated@@108 $generated@@215) (= $generated@@215 ($generated@@30 ($generated@@31 $generated@@215))))
 :pattern ( ($generated@@31 $generated@@215))
 :pattern ( ($generated@@108 $generated@@215))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@217 $generated@@219) ($generated@@41 $generated@@42 $generated@@218 $generated@@43)) ($generated@@216 $generated@@42 $generated@@218 $generated@@43 $generated@@219))
 :pattern ( ($generated@@216 $generated@@42 $generated@@218 $generated@@43 $generated@@219))
)))
(assert (= ($generated@@220 $generated@@43) $generated@@0))
(assert (= ($generated@@221 $generated@@43) $generated@@3))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and ($generated@@108 $generated@@223) (<= ($generated@@31 $generated@@223) ($generated@@31 $generated@@222))) (or (and (= $generated@@223 ($generated@@30 0)) (= ($generated@@29 $generated@@222 $generated@@223) $generated@@222)) (and (or (not (= $generated@@223 ($generated@@30 0))) (not true)) ($generated@@25 ($generated@@29 $generated@@222 $generated@@223) $generated@@222))))
 :pattern ( ($generated@@29 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@217 $generated@@225) (and ($generated@@69 $generated@@224) ($generated@@216 $generated@@42 $generated@@224 $generated@@43 $generated@@225))) ($generated@@216 $generated@@42 ($generated@@79 $generated@@224) $generated@@43 $generated@@225))
 :pattern ( ($generated@@216 $generated@@42 ($generated@@79 $generated@@224) $generated@@43 $generated@@225))
)))
(assert (forall (($generated@@226 Int) ) (! (= ($generated@@72 $generated@@6 ($generated@@10 ($generated@@40 $generated@@226))) ($generated@@64 $generated@@126 ($generated@@72 $generated@@6 ($generated@@10 $generated@@226))))
 :pattern ( ($generated@@72 $generated@@6 ($generated@@10 ($generated@@40 $generated@@226))))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@72 $generated@@228 ($generated@@64 $generated@@228 $generated@@227)) ($generated@@64 $generated@@126 ($generated@@72 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@72 $generated@@228 ($generated@@64 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (= $generated@@231 $generated@@232) ($generated@@46 $generated@@229 ($generated@@21 $generated@@230) $generated@@231 $generated@@232))
 :pattern ( ($generated@@46 $generated@@229 ($generated@@21 $generated@@230) $generated@@231 $generated@@232))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@240  (=> (= (ControlFlow 0 2) (- 0 1)) (or ($generated@@51 $generated@@233) ($generated@@84 ($generated@@21 ($generated@@21 $generated@@53)) $generated@@233)))))
(let (($generated@@241  (=> (not ($generated@@51 $generated@@233)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (not ($generated@@51 $generated@@233))) (=> (not ($generated@@51 $generated@@233)) (=> (and (and (and ($generated@@217 $generated@@234) ($generated@@235 $generated@@234)) ($generated@@112 $generated@@233)) (and (and ($generated@@112 $generated@@233) (and ($generated@@84 ($generated@@21 $generated@@53) $generated@@233) (and ($generated@@69 $generated@@233) ($generated@@84 ($generated@@21 $generated@@53) ($generated@@79 $generated@@233))))) (and (= $generated@@236 $generated@@234) (= (ControlFlow 0 4) 2)))) $generated@@240))))))
(let (($generated@@242  (=> (and ($generated@@51 $generated@@233) (= (ControlFlow 0 3) 2)) $generated@@240)))
(let (($generated@@243  (=> (and (= $generated@@237 ($generated@@155 $generated@@238 $generated@@239 $generated false)) ($generated@@54 $generated@@233)) (=> (and (and (and ($generated@@217 $generated@@236) ($generated@@235 $generated@@236)) (= $generated@@239 $generated@@236)) (and (and (forall (($generated@@244 T@U) ) (! true
 :pattern ( ($generated@@84 ($generated@@21 $generated@@53) $generated@@244))
 :pattern ( ($generated@@51 $generated@@244))
)) ($generated@@216 $generated@@42 $generated@@233 $generated@@43 $generated@@236)) (and ($generated@@52 $generated@@233) ($generated@@52 $generated@@233)))) (and (=> (= (ControlFlow 0 6) 3) $generated@@242) (=> (= (ControlFlow 0 6) 4) $generated@@241))))))
(let (($generated@@245  (=> (and ($generated@@217 $generated@@239) ($generated@@235 $generated@@239)) (=> (and (and (and ($generated@@41 $generated@@42 $generated@@233 $generated@@43) ($generated@@216 $generated@@42 $generated@@233 $generated@@43 $generated@@239)) ($generated@@54 $generated@@233)) (and (= 4 $generated@@37) (= (ControlFlow 0 7) 6))) $generated@@243))))
$generated@@245))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
