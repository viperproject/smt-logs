(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@23 (Int) Int)
(declare-fun $generated@@25 (T@T T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@T T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T T@U T@U) Bool)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U Int) T@U)
(declare-fun $generated@@87 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@91 (T@T T@T) T@T)
(declare-fun $generated@@92 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ) (!  (not ($generated@@20 $generated@@21 $generated@@22))
 :pattern ( ($generated@@20 $generated@@21 $generated@@22))
)))
(assert (forall (($generated@@24 Int) ) (! (= ($generated@@23 $generated@@24) $generated@@24)
 :pattern ( ($generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@T) ) (! (= ($generated@@25 $generated@@27 $generated@@26) $generated@@26)
 :pattern ( ($generated@@25 $generated@@27 $generated@@26))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@30) (forall (($generated@@31 T@U) ) (!  (=> ($generated@@20 $generated@@29 $generated@@31) ($generated@@20 $generated@@30 $generated@@31))
 :pattern ( ($generated@@20 $generated@@29 $generated@@31))
 :pattern ( ($generated@@20 $generated@@30 $generated@@31))
)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@T) ) (! (= ($generated@@33 $generated@@35 ($generated@@32 $generated@@35 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@32 $generated@@35 $generated@@34))
)))
(assert  (and (and (forall (($generated@@40 T@T) ($generated@@41 T@T) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@37 $generated@@40 $generated@@41 ($generated@@39 $generated@@40 $generated@@41 $generated@@43 $generated@@44 $generated@@42) $generated@@44) $generated@@42)
 :weight 0
)) (forall (($generated@@45 T@T) ($generated@@46 T@T) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (or (= $generated@@49 $generated@@50) (= ($generated@@37 $generated@@45 $generated@@46 ($generated@@39 $generated@@45 $generated@@46 $generated@@48 $generated@@49 $generated@@47) $generated@@50) ($generated@@37 $generated@@45 $generated@@46 $generated@@48 $generated@@50)))
 :weight 0
))) (= ($generated@@3 $generated@@38) 3)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@20 ($generated@@36 $generated@@51) $generated@@52) ($generated@@8 ($generated@@37 $generated@@38 $generated@@4 $generated@@51 $generated@@52)))
 :pattern ( ($generated@@20 ($generated@@36 $generated@@51) $generated@@52))
)))
(assert (= ($generated@@3 $generated@@54) 4))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@57 ($generated@@55 $generated@@58)) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@20 $generated@@57 $generated@@59) ($generated@@56 $generated@@59 $generated@@58))
 :pattern ( ($generated@@20 $generated@@57 $generated@@59))
)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@57 ($generated@@55 $generated@@58)))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@60 ($generated@@33 $generated@@65 $generated@@62) $generated@@63 $generated@@64) ($generated@@61 $generated@@65 $generated@@62 $generated@@63 $generated@@64))
 :pattern ( ($generated@@60 ($generated@@33 $generated@@65 $generated@@62) $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated@@68) (= $generated@@67 $generated@@68))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@56 $generated@@69 $generated) (and (= ($generated@@33 $generated@@5 ($generated@@32 $generated@@5 $generated@@69)) $generated@@69) ($generated@@53 $generated@@5 ($generated@@32 $generated@@5 $generated@@69) $generated)))
 :pattern ( ($generated@@56 $generated@@69 $generated))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@33 $generated@@72 $generated@@70) $generated@@71) ($generated@@53 $generated@@72 $generated@@70 $generated@@71))
 :pattern ( ($generated@@56 ($generated@@33 $generated@@72 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@61 $generated@@54 $generated@@73 ($generated@@55 $generated@@74) $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@20 $generated@@73 $generated@@76) ($generated@@60 $generated@@76 $generated@@74 $generated@@75))
 :pattern ( ($generated@@20 $generated@@73 $generated@@76))
)))
 :pattern ( ($generated@@61 $generated@@54 $generated@@73 ($generated@@55 $generated@@74) $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@77 ($generated@@55 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@55 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@19 ($generated@@55 $generated@@79)) $generated@@1)
 :pattern ( ($generated@@55 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@32 $generated@@81 ($generated@@33 $generated@@81 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@33 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 Int) ($generated@@86 T@U) ) (! (= ($generated@@8 ($generated@@37 $generated@@38 $generated@@4 ($generated@@82 $generated@@83 $generated@@84 $generated@@85) $generated@@86))  (and ($generated@@56 $generated@@86 $generated@@83) (and ($generated@@20 $generated@@84 $generated@@86) (< $generated@@85 ($generated@@10 ($generated@@32 $generated@@5 $generated@@86))))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@4 ($generated@@82 $generated@@83 $generated@@84 $generated@@85) $generated@@86))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@87 $generated@@95 $generated@@96 $generated@@97 ($generated@@92 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@100 $generated@@101) $generated@@98)
 :weight 0
)) (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@87 $generated@@102 $generated@@103 $generated@@104 ($generated@@92 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@109 $generated@@110) ($generated@@87 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@109 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@87 $generated@@111 $generated@@112 $generated@@113 ($generated@@92 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@87 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)))) (= ($generated@@3 $generated@@88) 5)) (= ($generated@@3 $generated@@89) 6)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ) (= ($generated@@3 ($generated@@91 $generated@@120 $generated@@121)) 7))) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (! (= ($generated@@93 ($generated@@91 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@91 $generated@@122 $generated@@123))
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@124 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@91 $generated@@124 $generated@@125))
))))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 Bool) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@8 ($generated@@87 $generated@@88 $generated@@89 $generated@@4 ($generated@@90 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))  (=> (and (or (not (= $generated@@130 $generated@@126)) (not true)) ($generated@@8 ($generated@@32 $generated@@4 ($generated@@37 $generated@@89 $generated@@38 ($generated@@37 $generated@@88 ($generated@@91 $generated@@89 $generated@@38) $generated@@127 $generated@@130) $generated@@128)))) $generated@@129))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89 $generated@@4 ($generated@@90 $generated@@126 $generated@@127 $generated@@128 $generated@@129) $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@56 $generated@@132 ($generated@@55 $generated@@133)) (and (= ($generated@@33 $generated@@54 ($generated@@32 $generated@@54 $generated@@132)) $generated@@132) ($generated@@53 $generated@@54 ($generated@@32 $generated@@54 $generated@@132) ($generated@@55 $generated@@133))))
 :pattern ( ($generated@@56 $generated@@132 ($generated@@55 $generated@@133)))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@66 $generated@@134 $generated@@135) (forall (($generated@@136 T@U) ) (! (= ($generated@@20 $generated@@134 $generated@@136) ($generated@@20 $generated@@135 $generated@@136))
 :pattern ( ($generated@@20 $generated@@134 $generated@@136))
 :pattern ( ($generated@@20 $generated@@135 $generated@@136))
)))
 :pattern ( ($generated@@66 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 Int) ) (! (= ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 $generated@@137))) ($generated@@25 $generated@@38 ($generated@@33 $generated@@5 ($generated@@9 $generated@@137))))
 :pattern ( ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 $generated@@137))))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@T) ) (! (= ($generated@@33 $generated@@139 ($generated@@25 $generated@@139 $generated@@138)) ($generated@@25 $generated@@38 ($generated@@33 $generated@@139 $generated@@138)))
 :pattern ( ($generated@@33 $generated@@139 ($generated@@25 $generated@@139 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! ($generated@@61 $generated@@5 $generated@@141 $generated $generated@@140)
 :pattern ( ($generated@@61 $generated@@5 $generated@@141 $generated $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! ($generated@@53 $generated@@5 $generated@@142 $generated)
 :pattern ( ($generated@@53 $generated@@5 $generated@@142 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Bool)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 () T@U)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 () Int)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@158 (T@U) Bool)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 54) (let (($generated@@161 true))
(let (($generated@@162  (=> (and (not (and (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@144))) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@146)))) (not ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@146)))))) (= (ControlFlow 0 38) 36)) $generated@@161)))
(let (($generated@@163  (=> (and (and (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@144))) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@146)))) (not ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@146))))) (= (ControlFlow 0 37) 36)) $generated@@161)))
(let (($generated@@164  (=> (not (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@144))) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@146))))) (and (=> (= (ControlFlow 0 40) 37) $generated@@163) (=> (= (ControlFlow 0 40) 38) $generated@@162)))))
(let (($generated@@165  (=> (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@144))) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@146)))) (and (=> (= (ControlFlow 0 39) 37) $generated@@163) (=> (= (ControlFlow 0 39) 38) $generated@@162)))))
(let (($generated@@166  (=> (not ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@144)))) (and (=> (= (ControlFlow 0 42) 39) $generated@@165) (=> (= (ControlFlow 0 42) 40) $generated@@164)))))
(let (($generated@@167  (=> ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@144))) (and (=> (= (ControlFlow 0 41) 39) $generated@@165) (=> (= (ControlFlow 0 41) 40) $generated@@164)))))
(let (($generated@@168  (and (=> (= (ControlFlow 0 43) 41) $generated@@167) (=> (= (ControlFlow 0 43) 42) $generated@@166))))
(let (($generated@@169 true))
(let (($generated@@170  (=> (and (not ($generated@@66 $generated@@143 $generated@@21)) ($generated@@28 $generated@@143 $generated@@145)) (and (=> (= (ControlFlow 0 44) 43) $generated@@168) (=> (= (ControlFlow 0 44) 35) $generated@@169)))))
(let (($generated@@171  (=> (and ($generated@@66 $generated@@143 $generated@@21) (= (ControlFlow 0 46) 44)) $generated@@170)))
(let (($generated@@172  (=> (and (not ($generated@@66 $generated@@143 $generated@@21)) (= (ControlFlow 0 45) 44)) $generated@@170)))
(let (($generated@@173  (=> (not $generated@@147) (and (=> (= (ControlFlow 0 47) 45) $generated@@172) (=> (= (ControlFlow 0 47) 46) $generated@@171)))))
(let (($generated@@174  (=> (= (ControlFlow 0 24) (- 0 23)) (exists (($generated@@175 T@U) ) (!  (and ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@175)) (forall (($generated@@176 Int) ) (!  (=> ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@176))) (<= $generated@@176 ($generated@@10 $generated@@175)))
 :pattern ( ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@176))))
)))
 :pattern ( ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@175)))
)))))
(let (($generated@@177  (=> (and (forall (($generated@@178 T@U) ) (!  (=> ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@178)) (<= ($generated@@10 $generated@@178) $generated@@148))
 :pattern ( ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@178)))
)) (= (ControlFlow 0 26) 24)) $generated@@174)))
(let (($generated@@179  (=> (and (not ($generated@@8 ($generated@@25 $generated@@4 ($generated@@7 true)))) (= (ControlFlow 0 25) 24)) $generated@@174)))
(let (($generated@@180  (=> (= $generated@@149 ($generated@@36 ($generated@@82 $generated $generated@@145 $generated@@148))) (and (=> (= (ControlFlow 0 7) (- 0 11)) ($generated@@20 $generated@@149 ($generated@@33 $generated@@5 ($generated@@9 $generated@@150)))) (=> ($generated@@20 $generated@@149 ($generated@@33 $generated@@5 ($generated@@9 $generated@@150))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and ($generated@@28 $generated@@149 $generated@@143) (not ($generated@@28 $generated@@143 $generated@@149)))) (=> (and ($generated@@28 $generated@@149 $generated@@143) (not ($generated@@28 $generated@@143 $generated@@149))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (=> $generated@@147 (not ($generated@@66 $generated@@149 $generated@@21)))) (=> (=> $generated@@147 (not ($generated@@66 $generated@@149 $generated@@21))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (=> $generated@@147 ($generated@@28 $generated@@149 $generated@@145))) (=> (=> $generated@@147 ($generated@@28 $generated@@149 $generated@@145)) (=> (= (ControlFlow 0 7) (- 0 6)) (=> $generated@@147 (forall (($generated@@181 Int) ($generated@@182 Int) ) (!  (=> (and (and ($generated@@20 $generated@@149 ($generated@@33 $generated@@5 ($generated@@9 $generated@@181))) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@182)))) (not ($generated@@20 $generated@@149 ($generated@@33 $generated@@5 ($generated@@9 $generated@@182))))) (<= $generated@@182 $generated@@181))
 :pattern ( ($generated@@20 $generated@@149 ($generated@@33 $generated@@5 ($generated@@9 $generated@@182))) ($generated@@20 $generated@@149 ($generated@@33 $generated@@5 ($generated@@9 $generated@@181))))
 :pattern ( ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@182))) ($generated@@20 $generated@@149 ($generated@@33 $generated@@5 ($generated@@9 $generated@@181))))
)))))))))))))))
(let (($generated@@183  (=> (and (not (and ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@151))) (< $generated@@148 $generated@@151))) (= (ControlFlow 0 13) 7)) $generated@@180)))
(let (($generated@@184  (=> (and (and ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@151))) (< $generated@@148 $generated@@151)) (= (ControlFlow 0 12) 7)) $generated@@180)))
(let (($generated@@185  (=> (not ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@151)))) (and (=> (= (ControlFlow 0 15) 12) $generated@@184) (=> (= (ControlFlow 0 15) 13) $generated@@183)))))
(let (($generated@@186  (=> ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@151))) (and (=> (= (ControlFlow 0 14) 12) $generated@@184) (=> (= (ControlFlow 0 14) 13) $generated@@183)))))
(let (($generated@@187  (and (=> (= (ControlFlow 0 16) 14) $generated@@186) (=> (= (ControlFlow 0 16) 15) $generated@@185))))
(let (($generated@@188 true))
(let (($generated@@189  (and (=> (= (ControlFlow 0 17) (- 0 18)) (or (and ($generated@@53 $generated@@5 ($generated@@9 (+ $generated@@148 1)) $generated) (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 (+ $generated@@148 1)))) (< $generated@@148 (+ $generated@@148 1)))) (or (and ($generated@@53 $generated@@5 ($generated@@9 ($generated@@23 0)) $generated) (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 0)))) (< $generated@@148 0))) (exists (($generated@@190 T@U) )  (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@190)) (< $generated@@148 ($generated@@10 $generated@@190))))))) (=> (or (and ($generated@@53 $generated@@5 ($generated@@9 (+ $generated@@148 1)) $generated) (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 (+ $generated@@148 1)))) (< $generated@@148 (+ $generated@@148 1)))) (or (and ($generated@@53 $generated@@5 ($generated@@9 ($generated@@23 0)) $generated) (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 0)))) (< $generated@@148 0))) (exists (($generated@@191 Int) )  (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@191))) (< $generated@@148 $generated@@191))))) (=> (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@150))) (< $generated@@148 $generated@@150)) (and (=> (= (ControlFlow 0 17) 16) $generated@@187) (=> (= (ControlFlow 0 17) 5) $generated@@188)))))))
(let (($generated@@192  (=> (and (not ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@152)))) (= (ControlFlow 0 20) 17)) $generated@@189)))
(let (($generated@@193  (=> (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@152))) (= (ControlFlow 0 19) 17)) $generated@@189)))
(let (($generated@@194  (and (=> (= (ControlFlow 0 21) 19) $generated@@193) (=> (= (ControlFlow 0 21) 20) $generated@@192))))
(let (($generated@@195 true))
(let (($generated@@196  (=> (not (forall (($generated@@197 Int) ) (!  (=> ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@197))) (<= $generated@@197 $generated@@148))
 :pattern ( ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@197))))
))) (and (=> (= (ControlFlow 0 22) 21) $generated@@194) (=> (= (ControlFlow 0 22) 4) $generated@@195)))))
(let (($generated@@198  (and (=> (= (ControlFlow 0 27) 26) $generated@@177) (=> (= (ControlFlow 0 27) 22) $generated@@196))))
(let (($generated@@199  (=> (and (not ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@153)))) (= (ControlFlow 0 29) 27)) $generated@@198)))
(let (($generated@@200  (=> (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@153))) (= (ControlFlow 0 28) 27)) $generated@@198)))
(let (($generated@@201  (and (=> (= (ControlFlow 0 30) 28) $generated@@200) (=> (= (ControlFlow 0 30) 29) $generated@@199))))
(let (($generated@@202 true))
(let (($generated@@203  (and (=> (= (ControlFlow 0 31) (- 0 32)) (or (and ($generated@@53 $generated@@5 ($generated@@9 ($generated@@23 0)) $generated) ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 0))))) (exists (($generated@@204 T@U) ) ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@204))))) (=> (or (and ($generated@@53 $generated@@5 ($generated@@9 ($generated@@23 0)) $generated) ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 ($generated@@23 0))))) (exists (($generated@@205 Int) ) ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@205))))) (=> ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 ($generated@@9 $generated@@148))) (and (=> (= (ControlFlow 0 31) 30) $generated@@201) (=> (= (ControlFlow 0 31) 3) $generated@@202)))))))
(let (($generated@@206 true))
(let (($generated@@207  (=> ($generated@@8 ($generated@@25 $generated@@4 ($generated@@7 true))) (and (=> (= (ControlFlow 0 33) 31) $generated@@203) (=> (= (ControlFlow 0 33) 2) $generated@@206)))))
(let (($generated@@208  (=> $generated@@147 (and (=> (= (ControlFlow 0 34) 25) $generated@@179) (=> (= (ControlFlow 0 34) 33) $generated@@207)))))
(let (($generated@@209  (and (=> (= (ControlFlow 0 48) 47) $generated@@173) (=> (= (ControlFlow 0 48) 34) $generated@@208))))
(let (($generated@@210 true))
(let (($generated@@211  (=> (and (and (and (and ($generated@@53 $generated@@54 $generated@@143 ($generated@@55 $generated)) ($generated@@61 $generated@@54 $generated@@143 ($generated@@55 $generated) $generated@@154)) (not false)) (and (=> $generated@@147 (not ($generated@@66 $generated@@143 $generated@@21))) (=> $generated@@147 ($generated@@28 $generated@@143 $generated@@145)))) (and (and (=> $generated@@147 (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and (and ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@212)) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@213))) (not ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@213)))) (<= ($generated@@10 $generated@@213) ($generated@@10 $generated@@212)))
 :pattern ( ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@213)) ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@212)))
 :pattern ( ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@213)) ($generated@@20 $generated@@143 ($generated@@33 $generated@@5 $generated@@212)))
))) (= $generated@@154 $generated@@154)) (and (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and (or (not (= $generated@@214 $generated@@155)) (not true)) ($generated@@8 ($generated@@32 $generated@@4 ($generated@@37 $generated@@89 $generated@@38 ($generated@@37 $generated@@88 ($generated@@91 $generated@@89 $generated@@38) $generated@@154 $generated@@214) $generated@@2)))) (or (= ($generated@@37 $generated@@89 $generated@@38 ($generated@@37 $generated@@88 ($generated@@91 $generated@@89 $generated@@38) $generated@@154 $generated@@214) $generated@@215) ($generated@@37 $generated@@89 $generated@@38 ($generated@@37 $generated@@88 ($generated@@91 $generated@@89 $generated@@38) $generated@@154 $generated@@214) $generated@@215)) ($generated@@8 ($generated@@87 $generated@@88 $generated@@89 $generated@@4 $generated@@156 $generated@@214 $generated@@215))))
 :pattern ( ($generated@@37 $generated@@89 $generated@@38 ($generated@@37 $generated@@88 ($generated@@91 $generated@@89 $generated@@38) $generated@@154 $generated@@214) $generated@@215))
)) ($generated@@28 $generated@@143 $generated@@145)))) (and (=> (= (ControlFlow 0 49) 1) $generated@@210) (=> (= (ControlFlow 0 49) 48) $generated@@209)))))
(let (($generated@@216  (=> (= $generated@@156 ($generated@@90 $generated@@155 $generated@@154 $generated@@2 false)) (and (=> (= (ControlFlow 0 50) (- 0 53)) (=> $generated@@147 (not ($generated@@66 $generated@@145 $generated@@21)))) (=> (=> $generated@@147 (not ($generated@@66 $generated@@145 $generated@@21))) (and (=> (= (ControlFlow 0 50) (- 0 52)) (=> $generated@@147 ($generated@@28 $generated@@145 $generated@@145))) (=> (=> $generated@@147 ($generated@@28 $generated@@145 $generated@@145)) (and (=> (= (ControlFlow 0 50) (- 0 51)) (=> $generated@@147 (forall (($generated@@217 Int) ($generated@@218 Int) ) (!  (=> (and (and ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@217))) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@218)))) (not ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@218))))) (<= $generated@@218 $generated@@217))
 :pattern ( ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@218))) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@217))))
 :pattern ( ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@218))) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 ($generated@@9 $generated@@217))))
)))) (=> (=> $generated@@147 (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and (and ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@219)) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@220))) (not ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@220)))) (<= ($generated@@10 $generated@@220) ($generated@@10 $generated@@219)))
 :pattern ( ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@220)) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@219)))
 :pattern ( ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@220)) ($generated@@20 $generated@@145 ($generated@@33 $generated@@5 $generated@@219)))
))) (=> (= (ControlFlow 0 50) 49) $generated@@211))))))))))
(let (($generated@@221  (=> (and (and ($generated@@157 $generated@@154) ($generated@@158 $generated@@154)) (and ($generated@@53 $generated@@54 $generated@@145 ($generated@@55 $generated)) ($generated@@61 $generated@@54 $generated@@145 ($generated@@55 $generated) $generated@@154))) (=> (and (and (and (and ($generated@@53 $generated@@54 $generated@@159 ($generated@@55 $generated)) ($generated@@61 $generated@@54 $generated@@159 ($generated@@55 $generated) $generated@@154)) true) (= 0 $generated@@160)) (and (not ($generated@@66 $generated@@145 $generated@@21)) (= (ControlFlow 0 54) 50))) $generated@@216))))
$generated@@221))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
