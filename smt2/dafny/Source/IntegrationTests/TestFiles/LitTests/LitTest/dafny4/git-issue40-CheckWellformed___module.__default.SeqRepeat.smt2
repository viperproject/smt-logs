(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U Int T@U) T@U)
(declare-fun $generated@@27 (T@U Int T@U) Bool)
(declare-fun $generated@@28 (Int) Int)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 (T@U Int) T@U)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@72 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@76 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@133 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert (= ($generated@@23 $generated@@24) 0))
(assert (= ($generated@@3 $generated@@32) 3))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 T@U) ) (!  (=> (or ($generated@@27 $generated@@34 $generated@@35 $generated@@36) (and (< 0 $generated@@25) (and (<= ($generated@@28 0) $generated@@35) ($generated@@29 $generated@@36 $generated@@34)))) (and (and (= ($generated@@23 ($generated@@26 $generated@@34 $generated@@35 $generated@@36)) $generated@@35) (forall (($generated@@37 Int) ) (!  (=> (and (<= ($generated@@28 0) $generated@@37) (< $generated@@37 $generated@@35)) (= ($generated@@30 ($generated@@26 $generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@36))
 :pattern ( ($generated@@30 ($generated@@26 $generated@@34 $generated@@35 $generated@@36) $generated@@37))
))) ($generated@@31 $generated@@32 ($generated@@26 $generated@@34 $generated@@35 $generated@@36) ($generated@@33 $generated@@34))))
 :pattern ( ($generated@@26 $generated@@34 $generated@@35 $generated@@36))
))))
(assert (forall (($generated@@38 Int) ) (! (= ($generated@@28 $generated@@38) $generated@@38)
 :pattern ( ($generated@@28 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@41 $generated@@40))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 Int) ($generated@@47 T@U) ) (!  (=> (and (or ($generated@@27 $generated@@45 $generated@@46 $generated@@47) (and (< 0 $generated@@25) (and (<= ($generated@@28 0) $generated@@46) (and ($generated@@29 $generated@@47 $generated@@45) ($generated@@42 $generated@@47 $generated@@45 $generated@@44))))) ($generated@@43 $generated@@44)) ($generated@@19 $generated@@32 ($generated@@26 $generated@@45 $generated@@46 $generated@@47) ($generated@@33 $generated@@45) $generated@@44))
 :pattern ( ($generated@@19 $generated@@32 ($generated@@26 $generated@@45 $generated@@46 $generated@@47) ($generated@@33 $generated@@45) $generated@@44))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@48 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@48 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@31 $generated@@5 $generated@@52 $generated@@20) (<= ($generated@@28 0) ($generated@@10 $generated@@52)))
 :pattern ( ($generated@@31 $generated@@5 $generated@@52 $generated@@20))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@T) ) (! (= ($generated@@42 ($generated@@49 $generated@@56 $generated@@53) $generated@@54 $generated@@55) ($generated@@19 $generated@@56 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@42 ($generated@@49 $generated@@56 $generated@@53) $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@29 $generated@@57 $generated@@20) (and (= ($generated@@49 $generated@@5 ($generated@@48 $generated@@5 $generated@@57)) $generated@@57) ($generated@@31 $generated@@5 ($generated@@48 $generated@@5 $generated@@57) $generated@@20)))
 :pattern ( ($generated@@29 $generated@@57 $generated@@20))
)))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@29 ($generated@@49 $generated@@60 $generated@@58) $generated@@59) ($generated@@31 $generated@@60 $generated@@58 $generated@@59))
 :pattern ( ($generated@@29 ($generated@@49 $generated@@60 $generated@@58) $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (<= 0 ($generated@@23 $generated@@61))
 :pattern ( ($generated@@23 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@19 $generated@@32 $generated@@62 ($generated@@33 $generated@@63) $generated@@64) (forall (($generated@@65 Int) ) (!  (=> (and (<= 0 $generated@@65) (< $generated@@65 ($generated@@23 $generated@@62))) ($generated@@42 ($generated@@30 $generated@@62 $generated@@65) $generated@@63 $generated@@64))
 :pattern ( ($generated@@30 $generated@@62 $generated@@65))
)))
 :pattern ( ($generated@@19 $generated@@32 $generated@@62 ($generated@@33 $generated@@63) $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 ($generated@@33 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@33 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 ($generated@@33 $generated@@69)) $generated)
 :pattern ( ($generated@@33 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@48 $generated@@71 ($generated@@49 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@49 $generated@@71 $generated@@70))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@83 T@T) ($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@72 $generated@@83 $generated@@84 $generated@@85 ($generated@@79 $generated@@83 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@89 $generated@@86) $generated@@88 $generated@@89) $generated@@86)
 :weight 0
)) (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (or (= $generated@@95 $generated@@97) (= ($generated@@72 $generated@@90 $generated@@91 $generated@@92 ($generated@@79 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96 $generated@@93) $generated@@97 $generated@@98) ($generated@@72 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@97 $generated@@98)))
 :weight 0
)) (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (!  (or (= $generated@@105 $generated@@107) (= ($generated@@72 $generated@@99 $generated@@100 $generated@@101 ($generated@@79 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@106 $generated@@107) ($generated@@72 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@106 $generated@@107)))
 :weight 0
)))) (= ($generated@@3 $generated@@73) 4)) (= ($generated@@3 $generated@@74) 5)) (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@76 $generated@@108 $generated@@109 ($generated@@80 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@110) $generated@@112) $generated@@110)
 :weight 0
))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (or (= $generated@@117 $generated@@118) (= ($generated@@76 $generated@@113 $generated@@114 ($generated@@80 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@115) $generated@@118) ($generated@@76 $generated@@113 $generated@@114 $generated@@116 $generated@@118)))
 :weight 0
))) (= ($generated@@3 $generated@@77) 6)) (forall (($generated@@119 T@T) ($generated@@120 T@T) ) (= ($generated@@3 ($generated@@78 $generated@@119 $generated@@120)) 7))) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@121 $generated@@122)) $generated@@121)
 :pattern ( ($generated@@78 $generated@@121 $generated@@122))
))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@123 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@78 $generated@@123 $generated@@124))
))))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 Bool) ($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@8 ($generated@@72 $generated@@73 $generated@@74 $generated@@4 ($generated@@75 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))  (=> (and (or (not (= $generated@@129 $generated@@125)) (not true)) ($generated@@8 ($generated@@48 $generated@@4 ($generated@@76 $generated@@74 $generated@@77 ($generated@@76 $generated@@73 ($generated@@78 $generated@@74 $generated@@77) $generated@@126 $generated@@129) $generated@@127)))) $generated@@128))
 :pattern ( ($generated@@72 $generated@@73 $generated@@74 $generated@@4 ($generated@@75 $generated@@125 $generated@@126 $generated@@127 $generated@@128) $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@29 $generated@@131 ($generated@@33 $generated@@132)) (and (= ($generated@@49 $generated@@32 ($generated@@48 $generated@@32 $generated@@131)) $generated@@131) ($generated@@31 $generated@@32 ($generated@@48 $generated@@32 $generated@@131) ($generated@@33 $generated@@132))))
 :pattern ( ($generated@@29 $generated@@131 ($generated@@33 $generated@@132)))
)))
(assert (= ($generated@@68 $generated@@20) $generated@@1))
(assert (= ($generated@@133 $generated@@20) $generated@@2))
(assert (forall (($generated@@134 Int) ) (! (= ($generated@@49 $generated@@5 ($generated@@9 ($generated@@28 $generated@@134))) ($generated@@39 $generated@@77 ($generated@@49 $generated@@5 ($generated@@9 $generated@@134))))
 :pattern ( ($generated@@49 $generated@@5 ($generated@@9 ($generated@@28 $generated@@134))))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@49 $generated@@136 ($generated@@39 $generated@@136 $generated@@135)) ($generated@@39 $generated@@77 ($generated@@49 $generated@@136 $generated@@135)))
 :pattern ( ($generated@@49 $generated@@136 ($generated@@39 $generated@@136 $generated@@135)))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> (= ($generated@@23 $generated@@137) 0) (= $generated@@137 $generated@@24))
 :pattern ( ($generated@@23 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@138 ($generated@@33 $generated@@139)) (forall (($generated@@140 Int) ) (!  (=> (and (<= 0 $generated@@140) (< $generated@@140 ($generated@@23 $generated@@138))) ($generated@@29 ($generated@@30 $generated@@138 $generated@@140) $generated@@139))
 :pattern ( ($generated@@30 $generated@@138 $generated@@140))
)))
 :pattern ( ($generated@@31 $generated@@32 $generated@@138 ($generated@@33 $generated@@139)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () T@U)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@149 true))
(let (($generated@@150  (=> (and (and (<= ($generated@@28 0) $generated@@141) (< $generated@@141 $generated@@142)) (and ($generated@@19 $generated@@5 ($generated@@9 $generated@@142) $generated@@20 $generated@@143) ($generated@@42 $generated@@144 $generated@@145 $generated@@143))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (or (<= 0 $generated@@142) (= $generated@@142 $generated@@142))) (=> (or (<= 0 $generated@@142) (= $generated@@142 $generated@@142)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (and (= $generated@@142 $generated@@142) (= $generated@@144 $generated@@144)) (< $generated@@142 $generated@@142))) (=> (or (and (= $generated@@142 $generated@@142) (= $generated@@144 $generated@@144)) (< $generated@@142 $generated@@142)) (=> (or (and (= $generated@@142 $generated@@142) (= $generated@@144 $generated@@144)) ($generated@@27 $generated@@145 $generated@@142 $generated@@144)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (and (<= 0 $generated@@141) (< $generated@@141 ($generated@@23 ($generated@@26 $generated@@145 $generated@@142 $generated@@144))))) (=> (and (<= 0 $generated@@141) (< $generated@@141 ($generated@@23 ($generated@@26 $generated@@145 $generated@@142 $generated@@144)))) (=> (and (= ($generated@@30 ($generated@@26 $generated@@145 $generated@@142 $generated@@144) $generated@@141) $generated@@144) (= (ControlFlow 0 4) 2)) $generated@@149)))))))))))
(let (($generated@@151  (=> (and (< $generated@@141 ($generated@@28 0)) (= (ControlFlow 0 9) 4)) $generated@@150)))
(let (($generated@@152  (=> (and (<= ($generated@@28 0) $generated@@141) (= (ControlFlow 0 8) 4)) $generated@@150)))
(let (($generated@@153  (=> (and (=> (and (<= ($generated@@28 0) $generated@@141) (< $generated@@141 $generated@@142)) (= ($generated@@30 ($generated@@26 $generated@@145 $generated@@142 $generated@@144) $generated@@141) $generated@@144)) (= (ControlFlow 0 3) 2)) $generated@@149)))
(let (($generated@@154  (=> ($generated@@31 $generated@@32 ($generated@@26 $generated@@145 $generated@@142 $generated@@144) ($generated@@33 $generated@@145)) (=> (and ($generated@@19 $generated@@5 ($generated@@9 $generated@@142) $generated@@20 $generated@@143) ($generated@@42 $generated@@144 $generated@@145 $generated@@143)) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (<= 0 $generated@@142) (= $generated@@142 $generated@@142))) (=> (or (<= 0 $generated@@142) (= $generated@@142 $generated@@142)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (and (= $generated@@142 $generated@@142) (= $generated@@144 $generated@@144)) (< $generated@@142 $generated@@142))) (=> (or (and (= $generated@@142 $generated@@142) (= $generated@@144 $generated@@144)) (< $generated@@142 $generated@@142)) (=> (and (or (and (= $generated@@142 $generated@@142) (= $generated@@144 $generated@@144)) ($generated@@27 $generated@@145 $generated@@142 $generated@@144)) (= ($generated@@23 ($generated@@26 $generated@@145 $generated@@142 $generated@@144)) $generated@@142)) (and (and (=> (= (ControlFlow 0 10) 3) $generated@@153) (=> (= (ControlFlow 0 10) 8) $generated@@152)) (=> (= (ControlFlow 0 10) 9) $generated@@151)))))))))))
(let (($generated@@155 true))
(let (($generated@@156  (=> (= $generated@@146 ($generated@@75 $generated@@147 $generated@@143 $generated@@0 false)) (and (=> (= (ControlFlow 0 13) 10) $generated@@154) (=> (= (ControlFlow 0 13) 1) $generated@@155)))))
(let (($generated@@157  (=> (and ($generated@@43 $generated@@143) ($generated@@148 $generated@@143)) (=> (and (and (<= ($generated@@28 0) $generated@@142) ($generated@@29 $generated@@144 $generated@@145)) (and (= 0 $generated@@25) (= (ControlFlow 0 14) 13))) $generated@@156))))
$generated@@157))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
