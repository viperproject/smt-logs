(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 () Int)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U T@U T@U) Int)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@66 (T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@83 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@89 (T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@95 () T@U)
(declare-fun $generated@@96 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@123 (T@T T@U) T@U)
(declare-fun $generated@@126 (T@U T@U) Int)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@149 (T@U) Int)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@172 (T@U T@U T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@191 (T@U T@U) T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 (T@U) Bool)
(declare-fun $generated@@242 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(declare-fun $generated@@249 (T@U) Int)
(declare-fun $generated@@250 (T@U) Int)
(declare-fun $generated@@270 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@271 () T@T)
(declare-fun $generated@@272 () T@T)
(declare-fun $generated@@273 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@274 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@275 (T@T T@T) T@T)
(declare-fun $generated@@276 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@277 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@278 (T@T) T@T)
(declare-fun $generated@@279 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@5 $generated@@26) 3))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> (or ($generated@@24 $generated@@37) (and (< 3 $generated@@21) ($generated@@25 $generated@@26 $generated@@37 ($generated@@27 ($generated@@27 $generated@@28))))) (and (=> (not ($generated@@29 $generated@@37)) (let (($generated@@38 ($generated@@30 $generated@@37)))
(let (($generated@@39 ($generated@@31 $generated@@26 ($generated@@32 $generated@@37))))
 (and ($generated@@33 $generated@@39) (=> ($generated@@34 ($generated@@23 $generated@@35) $generated@@39) ($generated@@24 $generated@@38)))))) (= ($generated@@22 ($generated@@23 $generated@@36) $generated@@37) (ite ($generated@@29 $generated@@37) true (let (($generated@@40 ($generated@@30 $generated@@37)))
(let (($generated@@41 ($generated@@31 $generated@@26 ($generated@@32 $generated@@37))))
 (and ($generated@@34 ($generated@@23 $generated@@35) $generated@@41) ($generated@@22 $generated@@36 $generated@@40))))))))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@36) $generated@@37))
))))
(assert ($generated@@42 $generated@@28))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (or ($generated@@45 $generated@@47 ($generated@@44 $generated@@26 $generated@@49)) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@49 ($generated@@27 $generated@@47)))) (and (=> (not ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 ($generated@@29 ($generated@@44 $generated@@26 $generated@@49)))))) (let (($generated@@50 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@49)))))
($generated@@45 $generated@@47 $generated@@50))) (= ($generated@@43 $generated@@47 ($generated@@23 $generated@@48) ($generated@@44 $generated@@26 $generated@@49)) (ite ($generated@@29 ($generated@@44 $generated@@26 $generated@@49)) 0 (let (($generated@@51 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@49)))))
($generated@@46 (+ 1 ($generated@@43 $generated@@47 ($generated@@23 $generated@@48) $generated@@51))))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@47 ($generated@@23 $generated@@48) ($generated@@44 $generated@@26 $generated@@49)))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@52 ($generated@@23 $generated@@53) $generated@@54) ($generated@@43 $generated@@52 $generated@@53 $generated@@54))
 :pattern ( ($generated@@43 $generated@@52 ($generated@@23 $generated@@53) $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@55 $generated@@56 ($generated@@23 $generated@@57) $generated@@58) ($generated@@55 $generated@@56 $generated@@57 $generated@@58))
 :pattern ( ($generated@@55 $generated@@56 ($generated@@23 $generated@@57) $generated@@58))
)))
(assert (= ($generated@@59 $generated@@60) $generated@@2))
(assert (= ($generated@@5 $generated@@61) 4))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@25 $generated@@61 $generated@@64 ($generated@@62 $generated@@65)) ($generated@@63 $generated@@64))
 :pattern ( ($generated@@25 $generated@@61 $generated@@64 ($generated@@62 $generated@@65)))
)))
(assert (= ($generated@@5 $generated@@68) 5))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@67 ($generated@@44 $generated@@26 $generated@@73) ($generated@@44 $generated@@26 $generated@@74)) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@73 ($generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@74 ($generated@@27 $generated@@28))))) (and (=> (not ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 ($generated@@29 ($generated@@44 $generated@@26 $generated@@73)))))) (let (($generated@@75 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@73)))))
(let (($generated@@76 ($generated@@44 $generated@@68 ($generated@@32 ($generated@@44 $generated@@26 $generated@@73)))))
 (=> (not ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 ($generated@@29 ($generated@@44 $generated@@26 $generated@@74)))))) (let (($generated@@77 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@74)))))
(let (($generated@@78 ($generated@@44 $generated@@68 ($generated@@32 ($generated@@44 $generated@@26 $generated@@74)))))
 (and (and ($generated@@69 $generated@@76 $generated@@78) (=> ($generated@@70 $generated@@76 $generated@@78) ($generated@@67 $generated@@75 ($generated@@44 $generated@@26 $generated@@74)))) (=> (not ($generated@@70 $generated@@76 $generated@@78)) ($generated@@67 ($generated@@44 $generated@@26 $generated@@73) $generated@@77))))))))) (= ($generated@@66 ($generated@@23 $generated@@72) ($generated@@44 $generated@@26 $generated@@73) ($generated@@44 $generated@@26 $generated@@74)) (ite ($generated@@29 ($generated@@44 $generated@@26 $generated@@73)) $generated@@74 (let (($generated@@79 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@73)))))
(let (($generated@@80 ($generated@@44 $generated@@68 ($generated@@32 ($generated@@44 $generated@@26 $generated@@73)))))
(ite ($generated@@29 ($generated@@44 $generated@@26 $generated@@74)) $generated@@73 (let (($generated@@81 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@74)))))
(let (($generated@@82 ($generated@@44 $generated@@68 ($generated@@32 ($generated@@44 $generated@@26 $generated@@74)))))
(ite ($generated@@70 $generated@@80 $generated@@82) ($generated@@71 $generated@@80 ($generated@@44 $generated@@26 ($generated@@66 ($generated@@23 $generated@@72) $generated@@79 ($generated@@44 $generated@@26 $generated@@74)))) ($generated@@71 $generated@@82 ($generated@@44 $generated@@26 ($generated@@66 ($generated@@23 $generated@@72) ($generated@@44 $generated@@26 $generated@@73) $generated@@81)))))))))))))
 :weight 3
 :pattern ( ($generated@@66 ($generated@@23 $generated@@72) ($generated@@44 $generated@@26 $generated@@73) ($generated@@44 $generated@@26 $generated@@74)))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> ($generated@@84 $generated@@86) ($generated@@83 $generated@@26 $generated@@60 ($generated@@27 $generated@@85) $generated@@86))
 :pattern ( ($generated@@83 $generated@@26 $generated@@60 ($generated@@27 $generated@@85) $generated@@86))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@88 $generated@@92) (and (< 3 $generated@@21) ($generated@@25 $generated@@26 $generated@@92 ($generated@@27 ($generated@@27 $generated@@28))))) (and (and (and (<= ($generated@@43 ($generated@@27 $generated@@28) ($generated@@23 $generated@@35) ($generated@@87 $generated@@91 $generated@@92)) ($generated@@43 ($generated@@27 $generated@@28) ($generated@@23 $generated@@35) $generated@@92)) (=> (and ($generated@@89 $generated@@92) ($generated@@89 ($generated@@30 $generated@@92))) (< ($generated@@43 ($generated@@27 $generated@@28) ($generated@@23 $generated@@35) ($generated@@87 $generated@@91 $generated@@92)) ($generated@@43 ($generated@@27 $generated@@28) ($generated@@23 $generated@@35) $generated@@92)))) (=> (not ($generated@@90 $generated@@92 $generated@@60)) (not ($generated@@90 ($generated@@87 $generated@@91 $generated@@92) $generated@@60)))) ($generated@@25 $generated@@26 ($generated@@87 $generated@@91 $generated@@92) ($generated@@27 ($generated@@27 $generated@@28)))))
 :pattern ( ($generated@@87 $generated@@91 $generated@@92))
))))
(assert (forall (($generated@@93 T@U) ) (! ($generated@@25 $generated@@26 $generated@@60 ($generated@@27 $generated@@93))
 :pattern ( ($generated@@25 $generated@@26 $generated@@60 ($generated@@27 $generated@@93)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@94 $generated@@98 $generated@@100) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@100 ($generated@@27 $generated@@98)))) (and (=> (not ($generated@@29 $generated@@100)) (let (($generated@@101 ($generated@@30 $generated@@100)))
($generated@@94 $generated@@98 $generated@@101))) (= ($generated@@55 $generated@@98 ($generated@@23 $generated@@99) $generated@@100) (ite ($generated@@29 $generated@@100) $generated@@95 (let (($generated@@102 ($generated@@30 $generated@@100)))
(let (($generated@@103 ($generated@@32 $generated@@100)))
($generated@@96 ($generated@@97 $generated@@95 $generated@@103) ($generated@@55 $generated@@98 $generated@@99 $generated@@102))))))))
 :pattern ( ($generated@@55 $generated@@98 ($generated@@23 $generated@@99) $generated@@100))
))))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@90 $generated@@104 $generated@@105) (= $generated@@104 $generated@@105))
 :pattern ( ($generated@@90 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and ($generated@@89 $generated@@106) ($generated@@89 $generated@@107)) (= ($generated@@90 $generated@@106 $generated@@107)  (and (= ($generated@@32 $generated@@106) ($generated@@32 $generated@@107)) ($generated@@90 ($generated@@30 $generated@@106) ($generated@@30 $generated@@107)))))
 :pattern ( ($generated@@90 $generated@@106 $generated@@107) ($generated@@89 $generated@@106))
 :pattern ( ($generated@@90 $generated@@106 $generated@@107) ($generated@@89 $generated@@107))
)))
(assert (forall (($generated@@108 Int) ) (! (= ($generated@@46 $generated@@108) $generated@@108)
 :pattern ( ($generated@@46 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@44 $generated@@110 $generated@@109) $generated@@109)
 :pattern ( ($generated@@44 $generated@@110 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@25 $generated@@26 ($generated@@71 $generated@@113 $generated@@114) ($generated@@27 $generated@@112))  (and ($generated@@111 $generated@@113 $generated@@112) ($generated@@25 $generated@@26 $generated@@114 ($generated@@27 $generated@@112))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@71 $generated@@113 $generated@@114) ($generated@@27 $generated@@112)))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or ($generated@@24 ($generated@@44 $generated@@26 $generated@@116)) (and (< 3 $generated@@21) ($generated@@25 $generated@@26 $generated@@116 ($generated@@27 ($generated@@27 $generated@@28))))) (and (=> (not ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 ($generated@@29 ($generated@@44 $generated@@26 $generated@@116)))))) (let (($generated@@117 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@116)))))
(let (($generated@@118 ($generated@@44 $generated@@26 ($generated@@31 $generated@@26 ($generated@@32 ($generated@@44 $generated@@26 $generated@@116))))))
 (and ($generated@@33 $generated@@118) (=> ($generated@@34 ($generated@@23 $generated@@35) $generated@@118) ($generated@@24 $generated@@117)))))) (= ($generated@@22 ($generated@@23 $generated@@115) ($generated@@44 $generated@@26 $generated@@116)) (ite ($generated@@29 ($generated@@44 $generated@@26 $generated@@116)) true ($generated@@10 (let (($generated@@119 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@116)))))
(let (($generated@@120 ($generated@@44 $generated@@26 ($generated@@31 $generated@@26 ($generated@@32 ($generated@@44 $generated@@26 $generated@@116))))))
($generated@@44 $generated@@6 ($generated@@9  (and ($generated@@34 ($generated@@23 $generated@@35) $generated@@120) ($generated@@22 ($generated@@23 $generated@@115) $generated@@119)))))))))))
 :weight 3
 :pattern ( ($generated@@22 ($generated@@23 $generated@@115) ($generated@@44 $generated@@26 $generated@@116)))
))))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@29 $generated@@121) (= ($generated@@59 $generated@@121) $generated@@2))
 :pattern ( ($generated@@29 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@89 $generated@@122) (= ($generated@@59 $generated@@122) $generated@@3))
 :pattern ( ($generated@@89 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@123 $generated@@125 ($generated@@31 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@31 $generated@@125 $generated@@124))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (or ($generated@@33 ($generated@@44 $generated@@26 $generated@@128)) (and (< 2 $generated@@21) ($generated@@25 $generated@@26 $generated@@128 ($generated@@27 $generated@@28)))) (and (=> (not ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 ($generated@@29 ($generated@@44 $generated@@26 $generated@@128)))))) (let (($generated@@129 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@128)))))
(let (($generated@@130 ($generated@@44 $generated@@68 ($generated@@32 ($generated@@44 $generated@@26 $generated@@128)))))
 (and (forall (($generated@@131 T@U) ) (!  (=> ($generated@@111 $generated@@131 $generated@@28) (and ($generated@@94 $generated@@28 $generated@@129) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@129) $generated@@131) 0) ($generated@@69 $generated@@130 $generated@@131))))
 :pattern ( ($generated@@70 $generated@@130 $generated@@131))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@129) $generated@@131))
)) (=> (forall (($generated@@132 T@U) ) (!  (=> ($generated@@111 $generated@@132 $generated@@28) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@129) $generated@@132) 0) ($generated@@70 $generated@@130 $generated@@132)))
 :pattern ( ($generated@@70 $generated@@130 $generated@@132))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@129) $generated@@132))
)) ($generated@@33 $generated@@129)))))) (= ($generated@@34 ($generated@@23 $generated@@127) ($generated@@44 $generated@@26 $generated@@128)) (ite ($generated@@29 ($generated@@44 $generated@@26 $generated@@128)) true (let (($generated@@133 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@128)))))
(let (($generated@@134 ($generated@@44 $generated@@68 ($generated@@32 ($generated@@44 $generated@@26 $generated@@128)))))
 (and (forall (($generated@@135 T@U) ) (!  (=> ($generated@@111 $generated@@135 $generated@@28) (=> (> ($generated@@126 ($generated@@44 $generated@@61 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@133)) $generated@@135) 0) ($generated@@70 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@70 $generated@@134 $generated@@135))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@133) $generated@@135))
)) ($generated@@34 ($generated@@23 $generated@@127) $generated@@133))))))))
 :weight 3
 :pattern ( ($generated@@34 ($generated@@23 $generated@@127) ($generated@@44 $generated@@26 $generated@@128)))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or (not (= $generated@@137 $generated@@138)) (not true)) (= ($generated@@126 $generated@@136 $generated@@138) ($generated@@126 ($generated@@97 $generated@@136 $generated@@137) $generated@@138)))
 :pattern ( ($generated@@97 $generated@@136 $generated@@137) ($generated@@126 $generated@@136 $generated@@138))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (or ($generated@@94 $generated@@139 ($generated@@44 $generated@@26 $generated@@141)) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@141 ($generated@@27 $generated@@139)))) (and (=> (not ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 ($generated@@29 ($generated@@44 $generated@@26 $generated@@141)))))) (let (($generated@@142 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@141)))))
($generated@@94 $generated@@139 $generated@@142))) (= ($generated@@55 $generated@@139 ($generated@@23 $generated@@140) ($generated@@44 $generated@@26 $generated@@141)) (ite ($generated@@29 ($generated@@44 $generated@@26 $generated@@141)) $generated@@95 (let (($generated@@143 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@141)))))
(let (($generated@@144 ($generated@@44 $generated@@68 ($generated@@32 ($generated@@44 $generated@@26 $generated@@141)))))
($generated@@96 ($generated@@97 $generated@@95 $generated@@144) ($generated@@55 $generated@@139 ($generated@@23 $generated@@140) $generated@@143))))))))
 :weight 3
 :pattern ( ($generated@@55 $generated@@139 ($generated@@23 $generated@@140) ($generated@@44 $generated@@26 $generated@@141)))
))))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@89 $generated@@145) (exists (($generated@@146 T@U) ($generated@@147 T@U) ) (= $generated@@145 ($generated@@71 $generated@@146 $generated@@147))))
 :pattern ( ($generated@@89 $generated@@145))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (or ($generated@@69 ($generated@@44 $generated@@68 $generated@@150) ($generated@@44 $generated@@68 $generated@@151)) (and (< 1 $generated@@21) (and ($generated@@111 $generated@@150 $generated@@28) ($generated@@111 $generated@@151 $generated@@28)))) (and (and ($generated@@148 ($generated@@44 $generated@@68 $generated@@150)) ($generated@@148 ($generated@@44 $generated@@68 $generated@@151))) (= ($generated@@70 ($generated@@44 $generated@@68 $generated@@150) ($generated@@44 $generated@@68 $generated@@151)) (<= ($generated@@149 ($generated@@44 $generated@@68 $generated@@150)) ($generated@@149 ($generated@@44 $generated@@68 $generated@@151))))))
 :weight 3
 :pattern ( ($generated@@70 ($generated@@44 $generated@@68 $generated@@150) ($generated@@44 $generated@@68 $generated@@151)))
))))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@29 $generated@@152) (= $generated@@152 $generated@@60))
 :pattern ( ($generated@@29 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@153 ($generated@@97 $generated@@154 $generated@@155)) (+ ($generated@@153 $generated@@154) 1))
 :pattern ( ($generated@@153 ($generated@@97 $generated@@154 $generated@@155)))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (or ($generated@@67 $generated@@157 $generated@@158) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@157 ($generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@158 ($generated@@27 $generated@@28))))) (and (=> (not ($generated@@29 $generated@@157)) (let (($generated@@159 ($generated@@30 $generated@@157)))
(let (($generated@@160 ($generated@@32 $generated@@157)))
 (=> (not ($generated@@29 $generated@@158)) (let (($generated@@161 ($generated@@30 $generated@@158)))
(let (($generated@@162 ($generated@@32 $generated@@158)))
 (and (and ($generated@@69 $generated@@160 $generated@@162) (=> ($generated@@70 $generated@@160 $generated@@162) ($generated@@67 $generated@@159 $generated@@158))) (=> (not ($generated@@70 $generated@@160 $generated@@162)) ($generated@@67 $generated@@157 $generated@@161))))))))) (= ($generated@@66 ($generated@@23 $generated@@156) $generated@@157 $generated@@158) (ite ($generated@@29 $generated@@157) $generated@@158 (let (($generated@@163 ($generated@@30 $generated@@157)))
(let (($generated@@164 ($generated@@32 $generated@@157)))
(ite ($generated@@29 $generated@@158) $generated@@157 (let (($generated@@165 ($generated@@30 $generated@@158)))
(let (($generated@@166 ($generated@@32 $generated@@158)))
(ite ($generated@@70 $generated@@164 $generated@@166) ($generated@@71 $generated@@164 ($generated@@66 $generated@@156 $generated@@163 $generated@@158)) ($generated@@71 $generated@@166 ($generated@@66 $generated@@156 $generated@@157 $generated@@165))))))))))))
 :pattern ( ($generated@@66 ($generated@@23 $generated@@156) $generated@@157 $generated@@158))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (or ($generated@@45 $generated@@167 $generated@@169) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@169 ($generated@@27 $generated@@167)))) (and (=> (not ($generated@@29 $generated@@169)) (let (($generated@@170 ($generated@@30 $generated@@169)))
($generated@@45 $generated@@167 $generated@@170))) (= ($generated@@43 $generated@@167 ($generated@@23 $generated@@168) $generated@@169) (ite ($generated@@29 $generated@@169) 0 (let (($generated@@171 ($generated@@30 $generated@@169)))
(+ 1 ($generated@@43 $generated@@167 $generated@@168 $generated@@171)))))))
 :pattern ( ($generated@@43 $generated@@167 ($generated@@23 $generated@@168) $generated@@169))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@T) ) (! (= ($generated@@172 ($generated@@123 $generated@@176 $generated@@173) $generated@@174 $generated@@175) ($generated@@83 $generated@@176 $generated@@173 $generated@@174 $generated@@175))
 :pattern ( ($generated@@172 ($generated@@123 $generated@@176 $generated@@173) $generated@@174 $generated@@175))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (or ($generated@@33 $generated@@178) (and (< 2 $generated@@21) ($generated@@25 $generated@@26 $generated@@178 ($generated@@27 $generated@@28)))) (and (=> (not ($generated@@29 $generated@@178)) (let (($generated@@179 ($generated@@30 $generated@@178)))
(let (($generated@@180 ($generated@@32 $generated@@178)))
 (and (forall (($generated@@181 T@U) ) (!  (=> ($generated@@111 $generated@@181 $generated@@28) (and ($generated@@94 $generated@@28 $generated@@179) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@179) $generated@@181) 0) ($generated@@69 $generated@@180 $generated@@181))))
 :pattern ( ($generated@@70 $generated@@180 $generated@@181))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@179) $generated@@181))
)) (=> (forall (($generated@@182 T@U) ) (!  (=> ($generated@@111 $generated@@182 $generated@@28) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@179) $generated@@182) 0) ($generated@@70 $generated@@180 $generated@@182)))
 :pattern ( ($generated@@70 $generated@@180 $generated@@182))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@179) $generated@@182))
)) ($generated@@33 $generated@@179)))))) (= ($generated@@34 ($generated@@23 $generated@@177) $generated@@178) (ite ($generated@@29 $generated@@178) true (let (($generated@@183 ($generated@@30 $generated@@178)))
(let (($generated@@184 ($generated@@32 $generated@@178)))
 (and (forall (($generated@@185 T@U) ) (!  (=> ($generated@@111 $generated@@185 $generated@@28) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@183) $generated@@185) 0) ($generated@@70 $generated@@184 $generated@@185)))
 :pattern ( ($generated@@70 $generated@@184 $generated@@185))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 $generated@@35) $generated@@183) $generated@@185))
)) ($generated@@34 $generated@@177 $generated@@183))))))))
 :pattern ( ($generated@@34 ($generated@@23 $generated@@177) $generated@@178))
))))
(assert (forall (($generated@@188 T@U) ) (!  (and (= ($generated@@186 ($generated@@27 $generated@@188)) $generated@@1) (= ($generated@@187 ($generated@@27 $generated@@188)) $generated@@4))
 :pattern ( ($generated@@27 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@153 ($generated@@96 $generated@@189 $generated@@190)) (+ ($generated@@153 $generated@@189) ($generated@@153 $generated@@190)))
 :pattern ( ($generated@@153 ($generated@@96 $generated@@189 $generated@@190)))
)))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (=> (or ($generated@@192 ($generated@@44 $generated@@26 $generated@@195)) (and (< 4 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@195 ($generated@@27 ($generated@@27 $generated@@28))) (not ($generated@@90 $generated@@195 $generated@@60))))) (and (and ($generated@@193 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@195)))) (=> (not ($generated@@90 ($generated@@30 ($generated@@44 $generated@@26 $generated@@195)) $generated@@60)) (and ($generated@@88 ($generated@@44 $generated@@26 $generated@@195)) ($generated@@192 ($generated@@44 $generated@@26 ($generated@@87 ($generated@@23 $generated@@35) ($generated@@44 $generated@@26 $generated@@195))))))) (= ($generated@@191 ($generated@@23 $generated@@194) ($generated@@44 $generated@@26 $generated@@195)) (ite ($generated@@90 ($generated@@30 ($generated@@44 $generated@@26 $generated@@195)) $generated@@60) ($generated@@31 $generated@@26 ($generated@@32 ($generated@@44 $generated@@26 $generated@@195))) ($generated@@191 ($generated@@23 $generated@@194) ($generated@@44 $generated@@26 ($generated@@87 ($generated@@23 $generated@@35) ($generated@@44 $generated@@26 $generated@@195))))))))
 :weight 3
 :pattern ( ($generated@@191 ($generated@@23 $generated@@194) ($generated@@44 $generated@@26 $generated@@195)))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (or ($generated@@69 $generated@@196 $generated@@197) (and (< 1 $generated@@21) (and ($generated@@111 $generated@@196 $generated@@28) ($generated@@111 $generated@@197 $generated@@28)))) (and (and ($generated@@148 $generated@@196) ($generated@@148 $generated@@197)) (= ($generated@@70 $generated@@196 $generated@@197) (<= ($generated@@149 $generated@@196) ($generated@@149 $generated@@197)))))
 :pattern ( ($generated@@70 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@66 ($generated@@23 $generated@@198) $generated@@199 $generated@@200) ($generated@@66 $generated@@198 $generated@@199 $generated@@200))
 :pattern ( ($generated@@66 ($generated@@23 $generated@@198) $generated@@199 $generated@@200))
)))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (or ($generated@@192 $generated@@202) (and (< 4 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@202 ($generated@@27 ($generated@@27 $generated@@28))) (not ($generated@@90 $generated@@202 $generated@@60))))) ($generated@@25 $generated@@26 ($generated@@191 $generated@@201 $generated@@202) ($generated@@27 $generated@@28)))
 :pattern ( ($generated@@191 $generated@@201 $generated@@202))
))))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (or ($generated@@88 ($generated@@44 $generated@@26 $generated@@204)) (and (< 3 $generated@@21) ($generated@@25 $generated@@26 $generated@@204 ($generated@@27 ($generated@@27 $generated@@28))))) (and (=> ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9  (and ($generated@@89 ($generated@@44 $generated@@26 $generated@@204)) ($generated@@89 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@204)))))))) (and ($generated@@67 ($generated@@44 $generated@@26 ($generated@@31 $generated@@26 ($generated@@32 ($generated@@44 $generated@@26 $generated@@204)))) ($generated@@44 $generated@@26 ($generated@@31 $generated@@26 ($generated@@32 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@204))))))) ($generated@@88 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@204)))))))) (= ($generated@@87 ($generated@@23 $generated@@203) ($generated@@44 $generated@@26 $generated@@204)) (ite  (and ($generated@@89 ($generated@@44 $generated@@26 $generated@@204)) ($generated@@89 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@204))))) ($generated@@71 ($generated@@123 $generated@@26 ($generated@@44 $generated@@26 ($generated@@66 ($generated@@23 $generated@@35) ($generated@@44 $generated@@26 ($generated@@31 $generated@@26 ($generated@@32 ($generated@@44 $generated@@26 $generated@@204)))) ($generated@@44 $generated@@26 ($generated@@31 $generated@@26 ($generated@@32 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@204))))))))) ($generated@@44 $generated@@26 ($generated@@87 ($generated@@23 $generated@@203) ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 ($generated@@30 ($generated@@44 $generated@@26 $generated@@204)))))))) $generated@@204))))
 :weight 3
 :pattern ( ($generated@@87 ($generated@@23 $generated@@203) ($generated@@44 $generated@@26 $generated@@204)))
))))
(assert (forall (($generated@@205 T@U) ) (!  (=> ($generated@@193 $generated@@205) (or ($generated@@29 $generated@@205) ($generated@@89 $generated@@205)))
 :pattern ( ($generated@@193 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@25 $generated@@26 $generated@@207 ($generated@@27 $generated@@206)) (or ($generated@@29 $generated@@207) ($generated@@89 $generated@@207)))
 :pattern ( ($generated@@89 $generated@@207) ($generated@@25 $generated@@26 $generated@@207 ($generated@@27 $generated@@206)))
 :pattern ( ($generated@@29 $generated@@207) ($generated@@25 $generated@@26 $generated@@207 ($generated@@27 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@25 $generated@@61 $generated@@208 ($generated@@62 $generated@@209)) (forall (($generated@@210 T@U) ) (!  (=> (< 0 ($generated@@126 $generated@@208 $generated@@210)) ($generated@@111 $generated@@210 $generated@@209))
 :pattern ( ($generated@@126 $generated@@208 $generated@@210))
)))
 :pattern ( ($generated@@25 $generated@@61 $generated@@208 ($generated@@62 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@34 ($generated@@23 $generated@@211) $generated@@212) ($generated@@34 $generated@@211 $generated@@212))
 :pattern ( ($generated@@34 ($generated@@23 $generated@@211) $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@213) $generated@@214) ($generated@@22 $generated@@213 $generated@@214))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@213) $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@T) ) (! (= ($generated@@111 ($generated@@123 $generated@@217 $generated@@215) $generated@@216) ($generated@@25 $generated@@217 $generated@@215 $generated@@216))
 :pattern ( ($generated@@111 ($generated@@123 $generated@@217 $generated@@215) $generated@@216))
)))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@63 $generated@@218) (forall (($generated@@219 T@U) ) (!  (and (<= 0 ($generated@@126 $generated@@218 $generated@@219)) (<= ($generated@@126 $generated@@218 $generated@@219) ($generated@@153 $generated@@218)))
 :pattern ( ($generated@@126 $generated@@218 $generated@@219))
)))
 :pattern ( ($generated@@63 $generated@@218))
)))
(assert (forall (($generated@@220 T@U) ) (! (<= 0 ($generated@@153 $generated@@220))
 :pattern ( ($generated@@153 $generated@@220))
)))
(assert (forall (($generated@@221 T@U) ) (!  (=> ($generated@@42 $generated@@221) (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> ($generated@@111 $generated@@223 $generated@@221) ($generated@@172 $generated@@223 $generated@@221 $generated@@222))
 :pattern ( ($generated@@172 $generated@@223 $generated@@221 $generated@@222))
)))
 :pattern ( ($generated@@42 $generated@@221))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@29 $generated@@224) ($generated@@29 $generated@@225)) ($generated@@90 $generated@@224 $generated@@225))
 :pattern ( ($generated@@90 $generated@@224 $generated@@225) ($generated@@29 $generated@@224))
 :pattern ( ($generated@@90 $generated@@224 $generated@@225) ($generated@@29 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@126 $generated@@95 $generated@@226) 0)
 :pattern ( ($generated@@126 $generated@@95 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@59 ($generated@@71 $generated@@227 $generated@@228)) $generated@@3)
 :pattern ( ($generated@@71 $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@32 ($generated@@71 $generated@@229 $generated@@230)) $generated@@229)
 :pattern ( ($generated@@71 $generated@@229 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! (= ($generated@@30 ($generated@@71 $generated@@231 $generated@@232)) $generated@@232)
 :pattern ( ($generated@@71 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@126 ($generated@@97 $generated@@233 $generated@@234) $generated@@234) (+ ($generated@@126 $generated@@233 $generated@@234) 1))
 :pattern ( ($generated@@97 $generated@@233 $generated@@234))
)))
(assert  (=> (<= 2 $generated@@21) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (or ($generated@@67 $generated@@236 $generated@@237) (and (< 2 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@236 ($generated@@27 $generated@@28)) ($generated@@25 $generated@@26 $generated@@237 ($generated@@27 $generated@@28))))) ($generated@@25 $generated@@26 ($generated@@66 $generated@@235 $generated@@236 $generated@@237) ($generated@@27 $generated@@28)))
 :pattern ( ($generated@@66 $generated@@235 $generated@@236 $generated@@237))
))))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and (or ($generated@@94 $generated@@239 $generated@@241) (and (< 1 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@241 ($generated@@27 $generated@@239)) ($generated@@83 $generated@@26 $generated@@241 ($generated@@27 $generated@@239) $generated@@238)))) ($generated@@84 $generated@@238)) ($generated@@83 $generated@@61 ($generated@@55 $generated@@239 $generated@@240 $generated@@241) ($generated@@62 $generated@@239) $generated@@238))
 :pattern ( ($generated@@83 $generated@@61 ($generated@@55 $generated@@239 $generated@@240 $generated@@241) ($generated@@62 $generated@@239) $generated@@238))
))))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@242 ($generated@@62 $generated@@243)) $generated@@243)
 :pattern ( ($generated@@62 $generated@@243))
)))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@186 ($generated@@62 $generated@@244)) $generated)
 :pattern ( ($generated@@62 $generated@@244))
)))
(assert (forall (($generated@@246 T@U) ) (! (= ($generated@@245 ($generated@@27 $generated@@246)) $generated@@246)
 :pattern ( ($generated@@27 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ($generated@@248 T@T) ) (! (= ($generated@@31 $generated@@248 ($generated@@123 $generated@@248 $generated@@247)) $generated@@247)
 :pattern ( ($generated@@123 $generated@@248 $generated@@247))
)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (! (< ($generated@@249 $generated@@251) ($generated@@250 ($generated@@71 $generated@@251 $generated@@252)))
 :pattern ( ($generated@@71 $generated@@251 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (! (< ($generated@@250 $generated@@254) ($generated@@250 ($generated@@71 $generated@@253 $generated@@254)))
 :pattern ( ($generated@@71 $generated@@253 $generated@@254))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (=> (or ($generated@@94 $generated@@255 $generated@@257) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@257 ($generated@@27 $generated@@255)))) ($generated@@25 $generated@@61 ($generated@@55 $generated@@255 $generated@@256 $generated@@257) ($generated@@62 $generated@@255)))
 :pattern ( ($generated@@55 $generated@@255 $generated@@256 $generated@@257))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= ($generated@@191 ($generated@@23 $generated@@258) $generated@@259) ($generated@@191 $generated@@258 $generated@@259))
 :pattern ( ($generated@@191 ($generated@@23 $generated@@258) $generated@@259))
)))
(assert (forall (($generated@@260 T@U) ($generated@@261 T@U) ) (! (= ($generated@@87 ($generated@@23 $generated@@260) $generated@@261) ($generated@@87 $generated@@260 $generated@@261))
 :pattern ( ($generated@@87 ($generated@@23 $generated@@260) $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ) (!  (and (= (= ($generated@@153 $generated@@262) 0) (= $generated@@262 $generated@@95)) (=> (or (not (= ($generated@@153 $generated@@262) 0)) (not true)) (exists (($generated@@263 T@U) ) (! (< 0 ($generated@@126 $generated@@262 $generated@@263))
 :pattern ( ($generated@@126 $generated@@262 $generated@@263))
))))
 :pattern ( ($generated@@153 $generated@@262))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ) (! (= ($generated@@126 ($generated@@96 $generated@@264 $generated@@265) $generated@@266) (+ ($generated@@126 $generated@@264 $generated@@266) ($generated@@126 $generated@@265 $generated@@266)))
 :pattern ( ($generated@@126 ($generated@@96 $generated@@264 $generated@@265) $generated@@266))
)))
(assert (forall (($generated@@267 T@U) ($generated@@268 T@U) ($generated@@269 T@U) ) (!  (=> (and ($generated@@84 $generated@@269) (and ($generated@@89 $generated@@267) ($generated@@83 $generated@@26 $generated@@267 ($generated@@27 $generated@@268) $generated@@269))) ($generated@@172 ($generated@@32 $generated@@267) $generated@@268 $generated@@269))
 :pattern ( ($generated@@172 ($generated@@32 $generated@@267) $generated@@268 $generated@@269))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@280 T@T) ($generated@@281 T@T) ($generated@@282 T@T) ($generated@@283 T@U) ($generated@@284 T@U) ($generated@@285 T@U) ($generated@@286 T@U) ) (! (= ($generated@@270 $generated@@280 $generated@@281 $generated@@282 ($generated@@276 $generated@@280 $generated@@281 $generated@@282 $generated@@284 $generated@@285 $generated@@286 $generated@@283) $generated@@285 $generated@@286) $generated@@283)
 :weight 0
)) (and (forall (($generated@@287 T@T) ($generated@@288 T@T) ($generated@@289 T@T) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (or (= $generated@@292 $generated@@294) (= ($generated@@270 $generated@@287 $generated@@288 $generated@@289 ($generated@@276 $generated@@287 $generated@@288 $generated@@289 $generated@@291 $generated@@292 $generated@@293 $generated@@290) $generated@@294 $generated@@295) ($generated@@270 $generated@@287 $generated@@288 $generated@@289 $generated@@291 $generated@@294 $generated@@295)))
 :weight 0
)) (forall (($generated@@296 T@T) ($generated@@297 T@T) ($generated@@298 T@T) ($generated@@299 T@U) ($generated@@300 T@U) ($generated@@301 T@U) ($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (or (= $generated@@302 $generated@@304) (= ($generated@@270 $generated@@296 $generated@@297 $generated@@298 ($generated@@276 $generated@@296 $generated@@297 $generated@@298 $generated@@300 $generated@@301 $generated@@302 $generated@@299) $generated@@303 $generated@@304) ($generated@@270 $generated@@296 $generated@@297 $generated@@298 $generated@@300 $generated@@303 $generated@@304)))
 :weight 0
)))) (= ($generated@@5 $generated@@271) 6)) (= ($generated@@5 $generated@@272) 7)) (forall (($generated@@305 T@T) ($generated@@306 T@T) ($generated@@307 T@U) ($generated@@308 T@U) ($generated@@309 T@U) ) (! (= ($generated@@274 $generated@@305 $generated@@306 ($generated@@277 $generated@@305 $generated@@306 $generated@@308 $generated@@309 $generated@@307) $generated@@309) $generated@@307)
 :weight 0
))) (forall (($generated@@310 T@T) ($generated@@311 T@T) ($generated@@312 T@U) ($generated@@313 T@U) ($generated@@314 T@U) ($generated@@315 T@U) ) (!  (or (= $generated@@314 $generated@@315) (= ($generated@@274 $generated@@310 $generated@@311 ($generated@@277 $generated@@310 $generated@@311 $generated@@313 $generated@@314 $generated@@312) $generated@@315) ($generated@@274 $generated@@310 $generated@@311 $generated@@313 $generated@@315)))
 :weight 0
))) (forall (($generated@@316 T@T) ($generated@@317 T@T) ) (= ($generated@@5 ($generated@@275 $generated@@316 $generated@@317)) 8))) (forall (($generated@@318 T@T) ($generated@@319 T@T) ) (! (= ($generated@@278 ($generated@@275 $generated@@318 $generated@@319)) $generated@@318)
 :pattern ( ($generated@@275 $generated@@318 $generated@@319))
))) (forall (($generated@@320 T@T) ($generated@@321 T@T) ) (! (= ($generated@@279 ($generated@@275 $generated@@320 $generated@@321)) $generated@@321)
 :pattern ( ($generated@@275 $generated@@320 $generated@@321))
))))
(assert (forall (($generated@@322 T@U) ($generated@@323 T@U) ($generated@@324 T@U) ($generated@@325 Bool) ($generated@@326 T@U) ($generated@@327 T@U) ) (! (= ($generated@@10 ($generated@@270 $generated@@271 $generated@@272 $generated@@6 ($generated@@273 $generated@@322 $generated@@323 $generated@@324 $generated@@325) $generated@@326 $generated@@327))  (=> (and (or (not (= $generated@@326 $generated@@322)) (not true)) ($generated@@10 ($generated@@31 $generated@@6 ($generated@@274 $generated@@272 $generated@@68 ($generated@@274 $generated@@271 ($generated@@275 $generated@@272 $generated@@68) $generated@@323 $generated@@326) $generated@@324)))) $generated@@325))
 :pattern ( ($generated@@270 $generated@@271 $generated@@272 $generated@@6 ($generated@@273 $generated@@322 $generated@@323 $generated@@324 $generated@@325) $generated@@326 $generated@@327))
)))
(assert  (=> (<= 3 $generated@@21) (forall (($generated@@328 T@U) ($generated@@329 T@U) ) (!  (=> (or ($generated@@88 $generated@@329) (and (< 3 $generated@@21) ($generated@@25 $generated@@26 $generated@@329 ($generated@@27 ($generated@@27 $generated@@28))))) (and (=> (and ($generated@@89 $generated@@329) ($generated@@89 ($generated@@30 $generated@@329))) (and ($generated@@67 ($generated@@31 $generated@@26 ($generated@@32 $generated@@329)) ($generated@@31 $generated@@26 ($generated@@32 ($generated@@30 $generated@@329)))) ($generated@@88 ($generated@@30 ($generated@@30 $generated@@329))))) (= ($generated@@87 ($generated@@23 $generated@@328) $generated@@329) (ite  (and ($generated@@89 $generated@@329) ($generated@@89 ($generated@@30 $generated@@329))) ($generated@@71 ($generated@@123 $generated@@26 ($generated@@66 ($generated@@23 $generated@@35) ($generated@@31 $generated@@26 ($generated@@32 $generated@@329)) ($generated@@31 $generated@@26 ($generated@@32 ($generated@@30 $generated@@329))))) ($generated@@87 $generated@@328 ($generated@@30 ($generated@@30 $generated@@329)))) $generated@@329))))
 :pattern ( ($generated@@87 ($generated@@23 $generated@@328) $generated@@329))
))))
(assert (forall (($generated@@330 T@U) ) (! (= ($generated@@249 ($generated@@123 $generated@@26 $generated@@330)) ($generated@@250 $generated@@330))
 :pattern ( ($generated@@249 ($generated@@123 $generated@@26 $generated@@330)))
)))
(assert (forall (($generated@@331 T@U) ($generated@@332 T@U) ) (!  (=> ($generated@@111 $generated@@331 ($generated@@62 $generated@@332)) (and (= ($generated@@123 $generated@@61 ($generated@@31 $generated@@61 $generated@@331)) $generated@@331) ($generated@@25 $generated@@61 ($generated@@31 $generated@@61 $generated@@331) ($generated@@62 $generated@@332))))
 :pattern ( ($generated@@111 $generated@@331 ($generated@@62 $generated@@332)))
)))
(assert (forall (($generated@@333 T@U) ($generated@@334 T@U) ) (!  (=> ($generated@@111 $generated@@334 ($generated@@27 $generated@@333)) (and (= ($generated@@123 $generated@@26 ($generated@@31 $generated@@26 $generated@@334)) $generated@@334) ($generated@@25 $generated@@26 ($generated@@31 $generated@@26 $generated@@334) ($generated@@27 $generated@@333))))
 :pattern ( ($generated@@111 $generated@@334 ($generated@@27 $generated@@333)))
)))
(assert (forall (($generated@@335 T@U) ($generated@@336 T@U) ($generated@@337 T@U) ) (!  (=> (and ($generated@@84 $generated@@337) (and ($generated@@89 $generated@@335) ($generated@@83 $generated@@26 $generated@@335 ($generated@@27 $generated@@336) $generated@@337))) ($generated@@83 $generated@@26 ($generated@@30 $generated@@335) ($generated@@27 $generated@@336) $generated@@337))
 :pattern ( ($generated@@83 $generated@@26 ($generated@@30 $generated@@335) ($generated@@27 $generated@@336) $generated@@337))
)))
(assert (= $generated@@60 ($generated@@44 $generated@@26 $generated@@60)))
(assert  (=> (<= 4 $generated@@21) (forall (($generated@@338 T@U) ($generated@@339 T@U) ) (!  (=> (or ($generated@@192 $generated@@339) (and (< 4 $generated@@21) (and ($generated@@25 $generated@@26 $generated@@339 ($generated@@27 ($generated@@27 $generated@@28))) (not ($generated@@90 $generated@@339 $generated@@60))))) (and (and ($generated@@193 ($generated@@30 $generated@@339)) (=> (not ($generated@@90 ($generated@@30 $generated@@339) $generated@@60)) (and ($generated@@88 $generated@@339) ($generated@@192 ($generated@@87 ($generated@@23 $generated@@35) $generated@@339))))) (= ($generated@@191 ($generated@@23 $generated@@338) $generated@@339) (ite ($generated@@90 ($generated@@30 $generated@@339) $generated@@60) ($generated@@31 $generated@@26 ($generated@@32 $generated@@339)) ($generated@@191 $generated@@338 ($generated@@87 ($generated@@23 $generated@@35) $generated@@339))))))
 :pattern ( ($generated@@191 ($generated@@23 $generated@@338) $generated@@339))
))))
(assert (forall (($generated@@340 T@U) ($generated@@341 T@U) ) (! (= ($generated@@71 ($generated@@44 $generated@@68 $generated@@340) ($generated@@44 $generated@@26 $generated@@341)) ($generated@@44 $generated@@26 ($generated@@71 $generated@@340 $generated@@341)))
 :pattern ( ($generated@@71 ($generated@@44 $generated@@68 $generated@@340) ($generated@@44 $generated@@26 $generated@@341)))
)))
(assert (forall (($generated@@342 Int) ) (! (= ($generated@@123 $generated@@7 ($generated@@11 ($generated@@46 $generated@@342))) ($generated@@44 $generated@@68 ($generated@@123 $generated@@7 ($generated@@11 $generated@@342))))
 :pattern ( ($generated@@123 $generated@@7 ($generated@@11 ($generated@@46 $generated@@342))))
)))
(assert (forall (($generated@@343 T@U) ($generated@@344 T@T) ) (! (= ($generated@@123 $generated@@344 ($generated@@44 $generated@@344 $generated@@343)) ($generated@@44 $generated@@68 ($generated@@123 $generated@@344 $generated@@343)))
 :pattern ( ($generated@@123 $generated@@344 ($generated@@44 $generated@@344 $generated@@343)))
)))
(assert  (=> (<= 1 $generated@@21) (forall (($generated@@345 T@U) ($generated@@346 T@U) ($generated@@347 T@U) ) (!  (=> (or ($generated@@45 $generated@@345 $generated@@347) (and (< 1 $generated@@21) ($generated@@25 $generated@@26 $generated@@347 ($generated@@27 $generated@@345)))) (<= ($generated@@46 0) ($generated@@43 $generated@@345 $generated@@346 $generated@@347)))
 :pattern ( ($generated@@43 $generated@@345 $generated@@346 $generated@@347))
))))
(assert (forall (($generated@@348 T@U) ($generated@@349 T@U) ($generated@@350 T@U) ) (!  (=> (< 0 ($generated@@126 $generated@@348 $generated@@350)) (< 0 ($generated@@126 ($generated@@97 $generated@@348 $generated@@349) $generated@@350)))
 :pattern ( ($generated@@97 $generated@@348 $generated@@349) ($generated@@126 $generated@@348 $generated@@350))
)))
(assert (forall (($generated@@351 T@U) ($generated@@352 T@U) ($generated@@353 T@U) ) (! (= (< 0 ($generated@@126 ($generated@@97 $generated@@351 $generated@@352) $generated@@353))  (or (= $generated@@353 $generated@@352) (< 0 ($generated@@126 $generated@@351 $generated@@353))))
 :pattern ( ($generated@@126 ($generated@@97 $generated@@351 $generated@@352) $generated@@353))
)))
(assert (forall (($generated@@354 T@U) ($generated@@355 T@U) ($generated@@356 T@U) ) (! (= ($generated@@83 $generated@@61 $generated@@354 ($generated@@62 $generated@@355) $generated@@356) (forall (($generated@@357 T@U) ) (!  (=> (< 0 ($generated@@126 $generated@@354 $generated@@357)) ($generated@@172 $generated@@357 $generated@@355 $generated@@356))
 :pattern ( ($generated@@126 $generated@@354 $generated@@357))
)))
 :pattern ( ($generated@@83 $generated@@61 $generated@@354 ($generated@@62 $generated@@355) $generated@@356))
)))
(assert (forall (($generated@@358 T@U) ($generated@@359 T@U) ($generated@@360 T@U) ($generated@@361 T@U) ) (!  (=> ($generated@@84 $generated@@361) (= ($generated@@83 $generated@@26 ($generated@@71 $generated@@359 $generated@@360) ($generated@@27 $generated@@358) $generated@@361)  (and ($generated@@172 $generated@@359 $generated@@358 $generated@@361) ($generated@@83 $generated@@26 $generated@@360 ($generated@@27 $generated@@358) $generated@@361))))
 :pattern ( ($generated@@83 $generated@@26 ($generated@@71 $generated@@359 $generated@@360) ($generated@@27 $generated@@358) $generated@@361))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@362 () T@U)
(declare-fun $generated@@363 () T@U)
(declare-fun $generated@@364 (T@U) Bool)
(declare-fun $generated@@365 () T@U)
(declare-fun $generated@@366 () T@U)
(declare-fun $generated@@367 () T@U)
(declare-fun $generated@@368 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@369  (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@33 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (or ($generated@@34 ($generated@@23 $generated@@35) ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (=> ($generated@@29 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 true))))))) (=> (=> ($generated@@33 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (or ($generated@@34 ($generated@@23 $generated@@35) ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (=> ($generated@@29 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@33 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (or ($generated@@34 ($generated@@23 $generated@@35) ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (=> (not ($generated@@29 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362))) (let (($generated@@370 ($generated@@30 ($generated@@191 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@362))))
(let (($generated@@371 ($generated@@32 ($generated@@191 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@362))))
(forall (($generated@@372 T@U) ) (!  (=> ($generated@@111 $generated@@372 $generated@@28) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@370) $generated@@372) 0) ($generated@@70 $generated@@371 $generated@@372)))
 :pattern ( ($generated@@70 $generated@@371 $generated@@372))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@370) $generated@@372))
)))))))) (=> (=> ($generated@@33 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (or ($generated@@34 ($generated@@23 $generated@@35) ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (=> (not ($generated@@29 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362))) (let (($generated@@373 ($generated@@30 ($generated@@191 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@362))))
(let (($generated@@374 ($generated@@32 ($generated@@191 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@362))))
(forall (($generated@@375 T@U) ) (!  (=> ($generated@@111 $generated@@375 $generated@@28) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@373) $generated@@375) 0) ($generated@@70 $generated@@374 $generated@@375)))
 :pattern ( ($generated@@70 $generated@@374 $generated@@375))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@373) $generated@@375))
))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@33 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (or ($generated@@34 ($generated@@23 $generated@@35) ($generated@@191 ($generated@@23 $generated@@35) $generated@@362)) (=> (not ($generated@@29 ($generated@@191 ($generated@@23 $generated@@35) $generated@@362))) (let (($generated@@376 ($generated@@30 ($generated@@191 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@362))))
($generated@@34 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@376))))))))))))
(let (($generated@@377  (=> (and ($generated@@90 ($generated@@30 $generated@@362) $generated@@60) (= (ControlFlow 0 11) 2)) $generated@@369)))
(let (($generated@@378  (=> (not ($generated@@90 ($generated@@30 $generated@@362) $generated@@60)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> ($generated@@29 $generated@@362) ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 true))))))) (=> (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> ($generated@@29 $generated@@362) ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 true)))))) (and (=> (= (ControlFlow 0 5) (- 0 9)) (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> (not ($generated@@29 $generated@@362)) (let (($generated@@379 ($generated@@31 $generated@@26 ($generated@@32 $generated@@362))))
 (=> ($generated@@33 $generated@@379) (or ($generated@@34 ($generated@@23 $generated@@35) $generated@@379) (=> ($generated@@29 $generated@@379) ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 true))))))))))) (=> (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> (not ($generated@@29 $generated@@362)) (let (($generated@@380 ($generated@@31 $generated@@26 ($generated@@32 $generated@@362))))
 (=> ($generated@@33 $generated@@380) (or ($generated@@34 ($generated@@23 $generated@@35) $generated@@380) (=> ($generated@@29 $generated@@380) ($generated@@10 ($generated@@44 $generated@@6 ($generated@@9 true)))))))))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> (not ($generated@@29 $generated@@362)) (let (($generated@@381 ($generated@@31 $generated@@26 ($generated@@32 $generated@@362))))
 (=> ($generated@@33 $generated@@381) (or ($generated@@34 ($generated@@23 $generated@@35) $generated@@381) (=> (not ($generated@@29 $generated@@381)) (let (($generated@@382 ($generated@@30 $generated@@381)))
(let (($generated@@383 ($generated@@32 $generated@@381)))
(forall (($generated@@384 T@U) ) (!  (=> ($generated@@111 $generated@@384 $generated@@28) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@382) $generated@@384) 0) ($generated@@70 $generated@@383 $generated@@384)))
 :pattern ( ($generated@@70 $generated@@383 $generated@@384))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@382) $generated@@384))
)))))))))))) (=> (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> (not ($generated@@29 $generated@@362)) (let (($generated@@385 ($generated@@31 $generated@@26 ($generated@@32 $generated@@362))))
 (=> ($generated@@33 $generated@@385) (or ($generated@@34 ($generated@@23 $generated@@35) $generated@@385) (=> (not ($generated@@29 $generated@@385)) (let (($generated@@386 ($generated@@30 $generated@@385)))
(let (($generated@@387 ($generated@@32 $generated@@385)))
(forall (($generated@@388 T@U) ) (!  (=> ($generated@@111 $generated@@388 $generated@@28) (=> (> ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@386) $generated@@388) 0) ($generated@@70 $generated@@387 $generated@@388)))
 :pattern ( ($generated@@70 $generated@@387 $generated@@388))
 :pattern ( ($generated@@126 ($generated@@55 $generated@@28 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@386) $generated@@388))
))))))))))) (and (=> (= (ControlFlow 0 5) (- 0 7)) (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> (not ($generated@@29 $generated@@362)) (let (($generated@@389 ($generated@@31 $generated@@26 ($generated@@32 $generated@@362))))
 (=> ($generated@@33 $generated@@389) (or ($generated@@34 ($generated@@23 $generated@@35) $generated@@389) (=> (not ($generated@@29 $generated@@389)) (let (($generated@@390 ($generated@@30 $generated@@389)))
($generated@@34 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@390)))))))))) (=> (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> (not ($generated@@29 $generated@@362)) (let (($generated@@391 ($generated@@31 $generated@@26 ($generated@@32 $generated@@362))))
 (=> ($generated@@33 $generated@@391) (or ($generated@@34 ($generated@@23 $generated@@35) $generated@@391) (=> (not ($generated@@29 $generated@@391)) (let (($generated@@392 ($generated@@30 $generated@@391)))
($generated@@34 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@392))))))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> (not ($generated@@29 $generated@@362)) (let (($generated@@393 ($generated@@30 $generated@@362)))
($generated@@22 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@393)))))) (=> (=> ($generated@@24 $generated@@362) (or ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (=> (not ($generated@@29 $generated@@362)) (let (($generated@@394 ($generated@@30 $generated@@362)))
($generated@@22 ($generated@@23 ($generated@@23 $generated@@35)) $generated@@394))))) (=> (and (and (and ($generated@@84 $generated@@363) ($generated@@364 $generated@@363)) (and ($generated@@88 $generated@@362) ($generated@@24 ($generated@@87 ($generated@@23 $generated@@35) $generated@@362)))) (and (and ($generated@@24 ($generated@@87 ($generated@@23 $generated@@35) $generated@@362)) (and ($generated@@22 ($generated@@23 $generated@@35) ($generated@@87 ($generated@@23 $generated@@35) $generated@@362)) (ite ($generated@@29 ($generated@@87 ($generated@@23 $generated@@35) $generated@@362)) true (let (($generated@@395 ($generated@@30 ($generated@@87 ($generated@@23 $generated@@35) $generated@@362))))
(let (($generated@@396 ($generated@@31 $generated@@26 ($generated@@32 ($generated@@87 ($generated@@23 $generated@@35) $generated@@362)))))
 (and ($generated@@34 ($generated@@23 $generated@@35) $generated@@396) ($generated@@22 ($generated@@23 $generated@@35) $generated@@395))))))) (and (= $generated@@365 $generated@@363) (= (ControlFlow 0 5) 2)))) $generated@@369))))))))))))))
(let (($generated@@397  (=> (and (= $generated@@366 ($generated@@273 $generated@@367 $generated@@368 $generated@@0 false)) ($generated@@193 $generated@@362)) (=> (and (and ($generated@@84 $generated@@365) ($generated@@364 $generated@@365)) (and (= $generated@@368 $generated@@365) (forall (($generated@@398 T@U) ) (!  (=> (and (and ($generated@@25 $generated@@26 $generated@@398 ($generated@@27 ($generated@@27 $generated@@28))) (and (not ($generated@@90 $generated@@398 $generated@@60)) ($generated@@22 ($generated@@23 $generated@@35) $generated@@398))) (and (<= 0 ($generated@@43 ($generated@@27 $generated@@28) ($generated@@23 $generated@@35) $generated@@398)) (< ($generated@@43 ($generated@@27 $generated@@28) ($generated@@23 $generated@@35) $generated@@398) ($generated@@43 ($generated@@27 $generated@@28) ($generated@@23 $generated@@35) $generated@@362)))) ($generated@@34 ($generated@@23 $generated@@35) ($generated@@191 ($generated@@23 $generated@@35) $generated@@398)))
 :pattern ( ($generated@@191 ($generated@@23 $generated@@35) $generated@@398))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@35) $generated@@398))
)))) (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@89 $generated@@362)) (=> ($generated@@89 $generated@@362) (=> ($generated@@193 ($generated@@30 $generated@@362)) (and (=> (= (ControlFlow 0 12) 5) $generated@@378) (=> (= (ControlFlow 0 12) 11) $generated@@377)))))))))
(let (($generated@@399  (=> (and ($generated@@84 $generated@@368) ($generated@@364 $generated@@368)) (=> (and (and (and (and ($generated@@25 $generated@@26 $generated@@362 ($generated@@27 ($generated@@27 $generated@@28))) ($generated@@83 $generated@@26 $generated@@362 ($generated@@27 ($generated@@27 $generated@@28)) $generated@@368)) ($generated@@193 $generated@@362)) (and (= 5 $generated@@21) (not ($generated@@90 $generated@@362 $generated@@60)))) (and (and ($generated@@24 $generated@@362) (and ($generated@@22 ($generated@@23 $generated@@35) $generated@@362) (ite ($generated@@29 $generated@@362) true (let (($generated@@400 ($generated@@30 $generated@@362)))
(let (($generated@@401 ($generated@@31 $generated@@26 ($generated@@32 $generated@@362))))
 (and ($generated@@34 ($generated@@23 $generated@@35) $generated@@401) ($generated@@22 ($generated@@23 $generated@@35) $generated@@400))))))) (= (ControlFlow 0 14) 12))) $generated@@397))))
$generated@@399))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
