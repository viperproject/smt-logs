(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (T@T T@U T@U) Bool)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) Bool)
(declare-fun $generated@@72 () Int)
(declare-fun $generated@@73 (Bool T@U) Int)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) Bool)
(declare-fun $generated@@78 (T@U) Int)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U Bool T@U) Int)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 () Bool)
(declare-fun $generated@@92 (Int Int) Int)
(declare-fun $generated@@93 () Bool)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@135 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 () T@T)
(declare-fun $generated@@138 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@139 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 (T@T T@T) T@T)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@145 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ) (! ($generated@@21 ($generated@@20 $generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@20 $generated@@22 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (!  (=> ($generated@@21 $generated@@24 $generated@@26) ($generated@@21 ($generated@@20 $generated@@24 $generated@@25) $generated@@26))
 :pattern ( ($generated@@20 $generated@@24 $generated@@25) ($generated@@21 $generated@@24 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@21 $generated@@28 $generated@@30) ($generated@@21 ($generated@@27 $generated@@28 $generated@@29) $generated@@30))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@21 $generated@@28 $generated@@30))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> ($generated@@21 $generated@@32 $generated@@33) ($generated@@21 ($generated@@27 $generated@@31 $generated@@32) $generated@@33))
 :pattern ( ($generated@@27 $generated@@31 $generated@@32) ($generated@@21 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36)  (or (= $generated@@36 $generated@@35) ($generated@@21 $generated@@34 $generated@@36)))
 :pattern ( ($generated@@21 ($generated@@20 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@21 $generated@@39 $generated@@40) (not ($generated@@21 ($generated@@37 $generated@@38 $generated@@39) $generated@@40)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39) ($generated@@21 $generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (!  (not ($generated@@21 $generated@@41 $generated@@42))
 :pattern ( ($generated@@21 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@27 ($generated@@27 $generated@@43 $generated@@44) $generated@@44) ($generated@@27 $generated@@43 $generated@@44))
 :pattern ( ($generated@@27 ($generated@@27 $generated@@43 $generated@@44) $generated@@44))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@21 ($generated@@37 $generated@@45 $generated@@46) $generated@@47)  (and ($generated@@21 $generated@@45 $generated@@47) (not ($generated@@21 $generated@@46 $generated@@47))))
 :pattern ( ($generated@@21 ($generated@@37 $generated@@45 $generated@@46) $generated@@47))
)))
(assert (forall (($generated@@49 Int) ) (! (= ($generated@@48 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@53 $generated@@54 $generated@@55) (forall (($generated@@56 T@U) ) (!  (=> ($generated@@21 $generated@@54 $generated@@56) ($generated@@21 $generated@@55 $generated@@56))
 :pattern ( ($generated@@21 $generated@@54 $generated@@56))
 :pattern ( ($generated@@21 $generated@@55 $generated@@56))
)))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 ($generated@@57 $generated@@60 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@57 $generated@@60 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@61 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (or (not ($generated@@21 $generated@@62 $generated@@64)) (not ($generated@@21 $generated@@63 $generated@@64)))
 :pattern ( ($generated@@21 $generated@@62 $generated@@64))
 :pattern ( ($generated@@21 $generated@@63 $generated@@64))
)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63))
)))
(assert (= ($generated@@3 $generated@@66) 3))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@65 $generated@@66 $generated@@69 ($generated@@67 $generated@@70)) (forall (($generated@@71 T@U) ) (!  (=> ($generated@@21 $generated@@69 $generated@@71) ($generated@@68 $generated@@71 $generated@@70))
 :pattern ( ($generated@@21 $generated@@69 $generated@@71))
)))
 :pattern ( ($generated@@65 $generated@@66 $generated@@69 ($generated@@67 $generated@@70)))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@75 $generated@@80) (and (< 1 $generated@@72) (and (and ($generated@@74 $generated@@79) ($generated@@65 $generated@@66 $generated@@80 ($generated@@67 $generated))) (not ($generated@@76 $generated@@80 $generated@@41))))) (and ($generated@@77 $generated@@80) (= ($generated@@73 true $generated@@80) (let (($generated@@81 ($generated@@78 $generated@@80)))
$generated@@81))))
 :pattern ( ($generated@@73 true $generated@@80) ($generated@@74 $generated@@79))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@82 ($generated@@58 $generated@@87 $generated@@84) $generated@@85 $generated@@86) ($generated@@83 $generated@@87 $generated@@84 $generated@@85 $generated@@86))
 :pattern ( ($generated@@82 ($generated@@58 $generated@@87 $generated@@84) $generated@@85 $generated@@86))
)))
(assert  (=> (<= 2 $generated@@72) (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@90 ($generated@@50 $generated@@66 $generated@@95)) (and (< 2 $generated@@72) ($generated@@65 $generated@@66 $generated@@95 ($generated@@67 $generated)))) (and (=> (not ($generated@@76 $generated@@95 $generated@@41)) (and ($generated@@75 ($generated@@50 $generated@@66 $generated@@95)) (let (($generated@@96 ($generated@@73 $generated@@91 ($generated@@50 $generated@@66 $generated@@95))))
($generated@@90 ($generated@@37 $generated@@95 ($generated@@20 $generated@@41 ($generated@@58 $generated@@5 ($generated@@9 $generated@@96)))))))) (= ($generated@@88 ($generated@@89 $generated@@94) true ($generated@@50 $generated@@66 $generated@@95)) (ite ($generated@@76 $generated@@95 $generated@@41) 1 (let (($generated@@97 ($generated@@73 $generated@@91 ($generated@@50 $generated@@66 $generated@@95))))
($generated@@92 $generated@@97 ($generated@@88 ($generated@@89 $generated@@94) $generated@@93 ($generated@@37 $generated@@95 ($generated@@20 $generated@@41 ($generated@@58 $generated@@5 ($generated@@9 $generated@@97)))))))))))
 :weight 3
 :pattern ( ($generated@@88 ($generated@@89 $generated@@94) true ($generated@@50 $generated@@66 $generated@@95)))
))))
(assert (forall (($generated@@98 T@U) ($generated@@99 Bool) ($generated@@100 T@U) ) (! (= ($generated@@88 ($generated@@89 $generated@@98) $generated@@99 $generated@@100) ($generated@@88 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@21 ($generated@@27 $generated@@101 $generated@@102) $generated@@103)  (or ($generated@@21 $generated@@101 $generated@@103) ($generated@@21 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@21 ($generated@@27 $generated@@101 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@61 $generated@@104 $generated@@105) (and (= ($generated@@37 ($generated@@27 $generated@@104 $generated@@105) $generated@@104) $generated@@105) (= ($generated@@37 ($generated@@27 $generated@@104 $generated@@105) $generated@@105) $generated@@104)))
 :pattern ( ($generated@@27 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> ($generated@@76 $generated@@106 $generated@@107) (= $generated@@106 $generated@@107))
 :pattern ( ($generated@@76 $generated@@106 $generated@@107))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (or ($generated@@75 ($generated@@50 $generated@@66 $generated@@109)) (and (< 1 $generated@@72) (and (and ($generated@@74 $generated@@108) ($generated@@65 $generated@@66 $generated@@109 ($generated@@67 $generated))) (not ($generated@@76 $generated@@109 $generated@@41))))) (and ($generated@@77 ($generated@@50 $generated@@66 $generated@@109)) (= ($generated@@73 true ($generated@@50 $generated@@66 $generated@@109)) (let (($generated@@110 ($generated@@78 ($generated@@50 $generated@@66 $generated@@109))))
$generated@@110))))
 :weight 3
 :pattern ( ($generated@@73 true ($generated@@50 $generated@@66 $generated@@109)) ($generated@@74 $generated@@108))
))))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@68 $generated@@111 $generated) (and (= ($generated@@58 $generated@@5 ($generated@@57 $generated@@5 $generated@@111)) $generated@@111) ($generated@@65 $generated@@5 ($generated@@57 $generated@@5 $generated@@111) $generated)))
 :pattern ( ($generated@@68 $generated@@111 $generated))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@68 ($generated@@58 $generated@@114 $generated@@112) $generated@@113) ($generated@@65 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@68 ($generated@@58 $generated@@114 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ) (!  (=> ($generated@@77 $generated@@115) (and ($generated@@21 $generated@@115 ($generated@@58 $generated@@5 ($generated@@9 ($generated@@78 $generated@@115)))) (forall (($generated@@116 T@U) ) (!  (=> ($generated@@21 $generated@@115 ($generated@@58 $generated@@5 $generated@@116)) (<= ($generated@@10 $generated@@116) ($generated@@78 $generated@@115)))
 :pattern ( ($generated@@21 $generated@@115 ($generated@@58 $generated@@5 $generated@@116)))
))))
 :pattern ( ($generated@@78 $generated@@115))
)))
(assert  (=> (<= 2 $generated@@72) (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@90 $generated@@118) (and (< 2 $generated@@72) ($generated@@65 $generated@@66 $generated@@118 ($generated@@67 $generated)))) (and (=> (not ($generated@@76 $generated@@118 $generated@@41)) (and ($generated@@75 $generated@@118) (let (($generated@@119 ($generated@@73 $generated@@91 $generated@@118)))
($generated@@90 ($generated@@37 $generated@@118 ($generated@@20 $generated@@41 ($generated@@58 $generated@@5 ($generated@@9 $generated@@119)))))))) (= ($generated@@88 ($generated@@89 $generated@@117) true $generated@@118) (ite ($generated@@76 $generated@@118 $generated@@41) 1 (let (($generated@@120 ($generated@@73 $generated@@91 $generated@@118)))
($generated@@92 $generated@@120 ($generated@@88 $generated@@117 $generated@@93 ($generated@@37 $generated@@118 ($generated@@20 $generated@@41 ($generated@@58 $generated@@5 ($generated@@9 $generated@@120)))))))))))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@117) true $generated@@118))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@83 $generated@@66 $generated@@121 ($generated@@67 $generated@@122) $generated@@123) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@21 $generated@@121 $generated@@124) ($generated@@82 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@21 $generated@@121 $generated@@124))
)))
 :pattern ( ($generated@@83 $generated@@66 $generated@@121 ($generated@@67 $generated@@122) $generated@@123))
)))
(assert  (=> (<= 1 $generated@@72) (forall (($generated@@125 Bool) ($generated@@126 T@U) ) (!  (=> (or ($generated@@75 $generated@@126) (and (< 1 $generated@@72) (and ($generated@@65 $generated@@66 $generated@@126 ($generated@@67 $generated)) (not ($generated@@76 $generated@@126 $generated@@41))))) (and ($generated@@21 $generated@@126 ($generated@@58 $generated@@5 ($generated@@9 ($generated@@73 $generated@@125 $generated@@126)))) (forall (($generated@@127 T@U) ) (!  (=> ($generated@@21 $generated@@126 ($generated@@58 $generated@@5 $generated@@127)) (<= ($generated@@10 $generated@@127) ($generated@@73 $generated@@125 $generated@@126)))
 :pattern ( ($generated@@21 $generated@@126 ($generated@@58 $generated@@5 $generated@@127)))
))))
 :pattern ( ($generated@@73 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@67 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@67 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@19 ($generated@@67 $generated@@130)) $generated@@1)
 :pattern ( ($generated@@67 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@57 $generated@@132 ($generated@@58 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@58 $generated@@132 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@27 $generated@@133 ($generated@@27 $generated@@133 $generated@@134)) ($generated@@27 $generated@@133 $generated@@134))
 :pattern ( ($generated@@27 $generated@@133 ($generated@@27 $generated@@133 $generated@@134)))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@135 $generated@@146 $generated@@147 $generated@@148 ($generated@@142 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@135 $generated@@153 $generated@@154 $generated@@155 ($generated@@142 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@135 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@135 $generated@@162 $generated@@163 $generated@@164 ($generated@@142 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@135 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))) (= ($generated@@3 $generated@@136) 4)) (= ($generated@@3 $generated@@137) 5)) (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@139 $generated@@171 $generated@@172 ($generated@@143 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@173) $generated@@175) $generated@@173)
 :weight 0
))) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (or (= $generated@@180 $generated@@181) (= ($generated@@139 $generated@@176 $generated@@177 ($generated@@143 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@178) $generated@@181) ($generated@@139 $generated@@176 $generated@@177 $generated@@179 $generated@@181)))
 :weight 0
))) (= ($generated@@3 $generated@@140) 6)) (forall (($generated@@182 T@T) ($generated@@183 T@T) ) (= ($generated@@3 ($generated@@141 $generated@@182 $generated@@183)) 7))) (forall (($generated@@184 T@T) ($generated@@185 T@T) ) (! (= ($generated@@144 ($generated@@141 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@141 $generated@@184 $generated@@185))
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (! (= ($generated@@145 ($generated@@141 $generated@@186 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@141 $generated@@186 $generated@@187))
))))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 Bool) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@8 ($generated@@135 $generated@@136 $generated@@137 $generated@@4 ($generated@@138 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))  (=> (and (or (not (= $generated@@192 $generated@@188)) (not true)) ($generated@@8 ($generated@@57 $generated@@4 ($generated@@139 $generated@@137 $generated@@140 ($generated@@139 $generated@@136 ($generated@@141 $generated@@137 $generated@@140) $generated@@189 $generated@@192) $generated@@190)))) $generated@@191))
 :pattern ( ($generated@@135 $generated@@136 $generated@@137 $generated@@4 ($generated@@138 $generated@@188 $generated@@189 $generated@@190 $generated@@191) $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 Int) ($generated@@195 Int) ) (! (= ($generated@@92 $generated@@194 $generated@@195) (* $generated@@194 $generated@@195))
 :pattern ( ($generated@@92 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@68 $generated@@196 ($generated@@67 $generated@@197)) (and (= ($generated@@58 $generated@@66 ($generated@@57 $generated@@66 $generated@@196)) $generated@@196) ($generated@@65 $generated@@66 ($generated@@57 $generated@@66 $generated@@196) ($generated@@67 $generated@@197))))
 :pattern ( ($generated@@68 $generated@@196 ($generated@@67 $generated@@197)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@76 $generated@@198 $generated@@199) (forall (($generated@@200 T@U) ) (! (= ($generated@@21 $generated@@198 $generated@@200) ($generated@@21 $generated@@199 $generated@@200))
 :pattern ( ($generated@@21 $generated@@198 $generated@@200))
 :pattern ( ($generated@@21 $generated@@199 $generated@@200))
)))
 :pattern ( ($generated@@76 $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 Int) ) (! (= ($generated@@58 $generated@@5 ($generated@@9 ($generated@@48 $generated@@201))) ($generated@@50 $generated@@140 ($generated@@58 $generated@@5 ($generated@@9 $generated@@201))))
 :pattern ( ($generated@@58 $generated@@5 ($generated@@9 ($generated@@48 $generated@@201))))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@T) ) (! (= ($generated@@58 $generated@@203 ($generated@@50 $generated@@203 $generated@@202)) ($generated@@50 $generated@@140 ($generated@@58 $generated@@203 $generated@@202)))
 :pattern ( ($generated@@58 $generated@@203 ($generated@@50 $generated@@203 $generated@@202)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@83 $generated@@5 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@83 $generated@@5 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! ($generated@@65 $generated@@5 $generated@@206 $generated)
 :pattern ( ($generated@@65 $generated@@5 $generated@@206 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 () Int)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@221  (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@48 1) ($generated@@88 ($generated@@89 ($generated@@89 $generated@@207)) $generated@@93 $generated@@208))) (=> (<= ($generated@@48 1) ($generated@@88 ($generated@@89 ($generated@@89 $generated@@207)) $generated@@93 $generated@@208)) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@222 Int) ) (!  (=> ($generated@@21 $generated@@208 ($generated@@58 $generated@@5 ($generated@@9 $generated@@222))) (<= $generated@@222 ($generated@@88 ($generated@@89 ($generated@@89 $generated@@207)) $generated@@93 $generated@@208)))
 :pattern ( ($generated@@21 $generated@@208 ($generated@@58 $generated@@5 ($generated@@9 $generated@@222))))
)))))))
(let (($generated@@223  (=> (and ($generated@@76 $generated@@208 $generated@@41) (= (ControlFlow 0 11) 2)) $generated@@221)))
(let (($generated@@224  (=> (and (not ($generated@@76 $generated@@208 $generated@@41)) ($generated@@83 $generated@@66 $generated@@208 ($generated@@67 $generated) $generated@@209)) (and (=> (= (ControlFlow 0 4) (- 0 10)) (not ($generated@@76 $generated@@208 $generated@@41))) (=> (not ($generated@@76 $generated@@208 $generated@@41)) (=> (and (and ($generated@@75 $generated@@208) ($generated@@75 $generated@@208)) (and (= $generated@@210 ($generated@@73 $generated@@91 $generated@@208)) (= $generated@@211 ($generated@@37 $generated@@208 ($generated@@20 $generated@@41 ($generated@@58 $generated@@5 ($generated@@9 $generated@@210))))))) (and (=> (= (ControlFlow 0 4) (- 0 9)) ($generated@@76 $generated@@208 ($generated@@27 $generated@@211 ($generated@@20 $generated@@41 ($generated@@58 $generated@@5 ($generated@@9 $generated@@210)))))) (=> ($generated@@76 $generated@@208 ($generated@@27 $generated@@211 ($generated@@20 $generated@@41 ($generated@@58 $generated@@5 ($generated@@9 $generated@@210))))) (and (=> (= (ControlFlow 0 4) (- 0 8)) (and ($generated@@53 $generated@@211 $generated@@208) (not ($generated@@53 $generated@@208 $generated@@211)))) (=> (and ($generated@@53 $generated@@211 $generated@@208) (not ($generated@@53 $generated@@208 $generated@@211))) (and (=> (= (ControlFlow 0 4) (- 0 7)) (forall (($generated@@225 Int) ) (!  (=> ($generated@@21 $generated@@211 ($generated@@58 $generated@@5 ($generated@@9 $generated@@225))) (<= ($generated@@48 1) $generated@@225))
 :pattern ( ($generated@@21 $generated@@211 ($generated@@58 $generated@@5 ($generated@@9 $generated@@225))))
))) (=> (forall (($generated@@226 T@U) ) (!  (=> ($generated@@21 $generated@@211 ($generated@@58 $generated@@5 $generated@@226)) (<= ($generated@@48 1) ($generated@@10 $generated@@226)))
 :pattern ( ($generated@@21 $generated@@211 ($generated@@58 $generated@@5 $generated@@226)))
)) (=> (and ($generated@@74 $generated@@212) ($generated@@213 $generated@@212)) (=> (and (and (and (and ($generated@@90 $generated@@211) (=> (<= ($generated@@48 1) ($generated@@88 ($generated@@89 $generated@@207) $generated@@93 $generated@@211)) (forall (($generated@@227 T@U) ) (!  (=> ($generated@@21 $generated@@211 ($generated@@58 $generated@@5 $generated@@227)) ($generated@@90 $generated@@211))
 :pattern ( ($generated@@21 $generated@@211 ($generated@@58 $generated@@5 $generated@@227)))
)))) (<= ($generated@@48 1) ($generated@@88 ($generated@@89 ($generated@@89 $generated@@207)) $generated@@93 $generated@@211))) (and (forall (($generated@@228 T@U) ) (!  (=> ($generated@@21 $generated@@211 ($generated@@58 $generated@@5 $generated@@228)) (<= ($generated@@10 $generated@@228) ($generated@@88 ($generated@@89 $generated@@207) $generated@@93 $generated@@211)))
 :pattern ( ($generated@@21 $generated@@211 ($generated@@58 $generated@@5 $generated@@228)))
)) (= $generated@@209 $generated@@212))) (and (and ($generated@@83 $generated@@66 $generated@@211 ($generated@@67 $generated) $generated@@212) ($generated@@90 $generated@@211)) (and ($generated@@90 $generated@@211) (= $generated@@214 ($generated@@88 ($generated@@89 $generated@@207) $generated@@93 $generated@@211))))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (<= ($generated@@48 1) $generated@@210)) (=> (<= ($generated@@48 1) $generated@@210) (and (=> (= (ControlFlow 0 4) (- 0 5)) (<= ($generated@@48 1) $generated@@214)) (=> (<= ($generated@@48 1) $generated@@214) (=> (and (and (and ($generated@@74 $generated@@215) ($generated@@213 $generated@@215)) (<= $generated@@210 ($generated@@92 $generated@@210 $generated@@214))) (and (= $generated@@212 $generated@@215) (= (ControlFlow 0 4) 2))) $generated@@221)))))))))))))))))))
(let (($generated@@229  (=> (= $generated@@216 ($generated@@138 $generated@@217 $generated@@218 $generated@@2 false)) (=> (and (and (and ($generated@@74 $generated@@219) ($generated@@213 $generated@@219)) (and (= $generated@@218 $generated@@219) (forall (($generated@@230 T@U) ) (!  (=> (and (and ($generated@@65 $generated@@66 $generated@@230 ($generated@@67 $generated)) (forall (($generated@@231 Int) ) (!  (=> ($generated@@21 $generated@@230 ($generated@@58 $generated@@5 ($generated@@9 $generated@@231))) (<= ($generated@@48 1) $generated@@231))
 :pattern ( ($generated@@21 $generated@@230 ($generated@@58 $generated@@5 ($generated@@9 $generated@@231))))
))) (and ($generated@@53 $generated@@230 $generated@@208) (not ($generated@@53 $generated@@208 $generated@@230)))) (and (<= ($generated@@48 1) ($generated@@88 ($generated@@89 $generated@@207) $generated@@93 $generated@@230)) (forall (($generated@@232 T@U) ) (!  (=> ($generated@@21 $generated@@230 ($generated@@58 $generated@@5 $generated@@232)) (<= ($generated@@10 $generated@@232) ($generated@@88 ($generated@@89 $generated@@207) $generated@@93 $generated@@230)))
 :pattern ( ($generated@@21 $generated@@230 ($generated@@58 $generated@@5 $generated@@232)))
))))
 :pattern ( ($generated@@88 ($generated@@89 $generated@@207) $generated@@93 $generated@@230))
)))) (and (and ($generated@@74 $generated@@209) ($generated@@213 $generated@@209)) (and (= $generated@@219 $generated@@209) $generated@@93))) (and (=> (= (ControlFlow 0 12) 4) $generated@@224) (=> (= (ControlFlow 0 12) 11) $generated@@223))))))
(let (($generated@@233  (=> (and (and ($generated@@74 $generated@@218) ($generated@@213 $generated@@218)) (and ($generated@@65 $generated@@66 $generated@@208 ($generated@@67 $generated)) ($generated@@83 $generated@@66 $generated@@208 ($generated@@67 $generated) $generated@@218))) (=> (and (and (and (and ($generated@@65 $generated@@66 $generated@@220 ($generated@@67 $generated)) ($generated@@83 $generated@@66 $generated@@220 ($generated@@67 $generated) $generated@@218)) true) (= 3 $generated@@72)) (and (forall (($generated@@234 T@U) ) (!  (=> ($generated@@21 $generated@@208 ($generated@@58 $generated@@5 $generated@@234)) (<= ($generated@@48 1) ($generated@@10 $generated@@234)))
 :pattern ( ($generated@@21 $generated@@208 ($generated@@58 $generated@@5 $generated@@234)))
)) (= (ControlFlow 0 13) 12))) $generated@@229))))
$generated@@233))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
