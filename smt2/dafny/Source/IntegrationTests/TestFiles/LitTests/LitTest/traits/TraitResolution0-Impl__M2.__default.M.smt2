(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@68 (T@T T@U T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U T@U T@U T@U) (_ BitVec 10))
(declare-fun $generated@@83 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U) (_ BitVec 10))
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 ((_ BitVec 10)) T@U)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@210 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated) $generated@@1))
(assert (= ($generated@@28 $generated@@0) $generated@@2))
(assert (forall (($generated@@32 T@U) ) ($generated@@29 ($generated@@30 $generated@@32) ($generated@@31 $generated@@32 $generated@@32) $generated@@0)))
(assert (= ($generated@@12 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38) ($generated@@33 $generated@@34 $generated@@37 ($generated@@30 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@30 $generated@@36) $generated@@38))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@12 $generated@@42) 4)) (= ($generated@@12 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@12 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@66 ($generated@@30 $generated@@65) $generated@@67)  (or (= $generated@@66 $generated@@39) ($generated@@17 ($generated@@40 $generated@@13 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@34 ($generated@@44 $generated@@42 $generated@@43) $generated@@67 $generated@@66) $generated@@3)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@66 ($generated@@30 $generated@@65) $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@68 $generated@@34 $generated@@71 ($generated@@30 $generated@@70)) ($generated@@68 $generated@@34 $generated@@71 ($generated@@69 ($generated@@31 $generated@@70 $generated@@70) $generated@@0)))
 :pattern ( ($generated@@68 $generated@@34 $generated@@71 ($generated@@30 $generated@@70)))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> ($generated@@72 $generated@@74 ($generated@@30 $generated@@73)) ($generated@@72 $generated@@74 ($generated@@69 ($generated@@31 $generated@@73 $generated@@73) $generated@@0)))
 :pattern ( ($generated@@72 $generated@@74 ($generated@@30 $generated@@73)))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@40 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@40 $generated@@80 $generated@@79))
)))
(assert  (and (and (= ($generated@@12 $generated@@86) 7) (forall (($generated@@88 (_ BitVec 10)) ) (! (= ($generated@@85 ($generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@87 $generated@@88))
))) (forall (($generated@@89 T@U) ) (! (= ($generated@@87 ($generated@@85 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@85 $generated@@89))
))))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@83 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94) (and (< 0 $generated@@81) (and (and (and (or (not (= $generated@@92 $generated@@39)) (not true)) ($generated@@68 $generated@@34 $generated@@92 ($generated@@84 $generated@@90 $generated@@91))) ($generated@@72 $generated@@93 $generated@@90)) ($generated@@72 $generated@@94 $generated@@91)))) (= ($generated@@82 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94) ($generated@@85 ($generated@@75 $generated@@86 ($generated@@87 #b0000001111)))))
 :pattern ( ($generated@@82 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@68 $generated@@34 $generated@@97 ($generated@@84 $generated@@95 $generated@@96))  (and ($generated@@68 $generated@@34 $generated@@97 ($generated@@69 $generated@@95 $generated@@96)) (or (not (= $generated@@97 $generated@@39)) (not true))))
 :pattern ( ($generated@@68 $generated@@34 $generated@@97 ($generated@@84 $generated@@95 $generated@@96)))
 :pattern ( ($generated@@68 $generated@@34 $generated@@97 ($generated@@69 $generated@@95 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@68 $generated@@34 $generated@@99 ($generated@@35 $generated@@98))  (and ($generated@@68 $generated@@34 $generated@@99 ($generated@@30 $generated@@98)) (or (not (= $generated@@99 $generated@@39)) (not true))))
 :pattern ( ($generated@@68 $generated@@34 $generated@@99 ($generated@@35 $generated@@98)))
 :pattern ( ($generated@@68 $generated@@34 $generated@@99 ($generated@@30 $generated@@98)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@100 ($generated@@78 $generated@@104 $generated@@101) $generated@@102 $generated@@103) ($generated@@33 $generated@@104 $generated@@101 $generated@@102 $generated@@103))
 :pattern ( ($generated@@100 ($generated@@78 $generated@@104 $generated@@101) $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@28 ($generated@@35 $generated@@106)) $generated@@5) (= ($generated@@105 ($generated@@35 $generated@@106)) $generated@@10))
 :pattern ( ($generated@@35 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@28 ($generated@@30 $generated@@107)) $generated@@8) (= ($generated@@105 ($generated@@30 $generated@@107)) $generated@@10))
 :pattern ( ($generated@@30 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@110 ($generated@@84 $generated@@108 $generated@@109) $generated@@111) ($generated@@33 $generated@@34 $generated@@110 ($generated@@69 $generated@@108 $generated@@109) $generated@@111))
 :pattern ( ($generated@@33 $generated@@34 $generated@@110 ($generated@@84 $generated@@108 $generated@@109) $generated@@111))
 :pattern ( ($generated@@33 $generated@@34 $generated@@110 ($generated@@69 $generated@@108 $generated@@109) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@68 $generated@@34 $generated@@114 ($generated@@30 $generated@@113))  (or (= $generated@@114 $generated@@39) (= ($generated@@112 $generated@@114) ($generated@@30 $generated@@113))))
 :pattern ( ($generated@@68 $generated@@34 $generated@@114 ($generated@@30 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@117 ($generated@@69 $generated@@115 $generated@@116) $generated@@118)  (or (= $generated@@117 $generated@@39) ($generated@@17 ($generated@@40 $generated@@13 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@34 ($generated@@44 $generated@@42 $generated@@43) $generated@@118 $generated@@117) $generated@@3)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@117 ($generated@@69 $generated@@115 $generated@@116) $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@72 $generated@@119 $generated) (and (= ($generated@@78 $generated@@14 ($generated@@40 $generated@@14 $generated@@119)) $generated@@119) ($generated@@68 $generated@@14 ($generated@@40 $generated@@14 $generated@@119) $generated)))
 :pattern ( ($generated@@72 $generated@@119 $generated))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@72 $generated@@120 $generated@@0) (and (= ($generated@@78 $generated@@15 ($generated@@40 $generated@@15 $generated@@120)) $generated@@120) ($generated@@68 $generated@@15 ($generated@@40 $generated@@15 $generated@@120) $generated@@0)))
 :pattern ( ($generated@@72 $generated@@120 $generated@@0))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@72 ($generated@@78 $generated@@123 $generated@@121) $generated@@122) ($generated@@68 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@72 ($generated@@78 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@124 ($generated@@31 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@31 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@127 ($generated@@31 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@31 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@130 ($generated@@69 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@69 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@133 ($generated@@69 $generated@@134 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@69 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@136 ($generated@@84 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@84 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@139 ($generated@@84 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@84 $generated@@140 $generated@@141))
)))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or ($generated@@83 $generated@@142 $generated@@143 ($generated@@75 $generated@@34 $generated@@144) ($generated@@75 $generated@@43 $generated@@145) ($generated@@75 $generated@@43 $generated@@146)) (and (< 0 $generated@@81) (and (and (and (or (not (= $generated@@144 $generated@@39)) (not true)) ($generated@@68 $generated@@34 $generated@@144 ($generated@@84 $generated@@142 $generated@@143))) ($generated@@72 $generated@@145 $generated@@142)) ($generated@@72 $generated@@146 $generated@@143)))) (= ($generated@@82 $generated@@142 $generated@@143 ($generated@@75 $generated@@34 $generated@@144) ($generated@@75 $generated@@43 $generated@@145) ($generated@@75 $generated@@43 $generated@@146)) ($generated@@85 ($generated@@75 $generated@@86 ($generated@@87 #b0000001111)))))
 :weight 3
 :pattern ( ($generated@@82 $generated@@142 $generated@@143 ($generated@@75 $generated@@34 $generated@@144) ($generated@@75 $generated@@43 $generated@@145) ($generated@@75 $generated@@43 $generated@@146)))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@68 $generated@@34 $generated@@149 ($generated@@69 $generated@@147 $generated@@148))  (or (= $generated@@149 $generated@@39) ($generated@@29 ($generated@@112 $generated@@149) $generated@@147 $generated@@148)))
 :pattern ( ($generated@@68 $generated@@34 $generated@@149 ($generated@@69 $generated@@147 $generated@@148)))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@35 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@35 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@30 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@30 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@40 $generated@@155 ($generated@@78 $generated@@155 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@78 $generated@@155 $generated@@154))
)))
(assert (= ($generated@@12 $generated@@156) 8))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@72 $generated@@159 ($generated@@31 $generated@@157 $generated@@158)) (and (= ($generated@@78 $generated@@156 ($generated@@40 $generated@@156 $generated@@159)) $generated@@159) ($generated@@68 $generated@@156 ($generated@@40 $generated@@156 $generated@@159) ($generated@@31 $generated@@157 $generated@@158))))
 :pattern ( ($generated@@72 $generated@@159 ($generated@@31 $generated@@157 $generated@@158)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@72 $generated@@162 ($generated@@69 $generated@@160 $generated@@161)) (and (= ($generated@@78 $generated@@34 ($generated@@40 $generated@@34 $generated@@162)) $generated@@162) ($generated@@68 $generated@@34 ($generated@@40 $generated@@34 $generated@@162) ($generated@@69 $generated@@160 $generated@@161))))
 :pattern ( ($generated@@72 $generated@@162 ($generated@@69 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@72 $generated@@165 ($generated@@84 $generated@@163 $generated@@164)) (and (= ($generated@@78 $generated@@34 ($generated@@40 $generated@@34 $generated@@165)) $generated@@165) ($generated@@68 $generated@@34 ($generated@@40 $generated@@34 $generated@@165) ($generated@@84 $generated@@163 $generated@@164))))
 :pattern ( ($generated@@72 $generated@@165 ($generated@@84 $generated@@163 $generated@@164)))
)))
(assert  (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@166 $generated@@169 $generated@@170 $generated@@171 ($generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@174 $generated@@175) $generated@@172)
 :weight 0
)) (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@181 $generated@@183) (= ($generated@@166 $generated@@176 $generated@@177 $generated@@178 ($generated@@168 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@166 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@166 $generated@@185 $generated@@186 $generated@@187 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@166 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@17 ($generated@@166 $generated@@34 $generated@@42 $generated@@13 ($generated@@167 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))  (=> (and (or (not (= $generated@@198 $generated@@194)) (not true)) ($generated@@17 ($generated@@40 $generated@@13 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@34 ($generated@@44 $generated@@42 $generated@@43) $generated@@195 $generated@@198) $generated@@196)))) $generated@@197))
 :pattern ( ($generated@@166 $generated@@34 $generated@@42 $generated@@13 ($generated@@167 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (and (= ($generated@@28 ($generated@@31 $generated@@200 $generated@@201)) $generated@@4) (= ($generated@@105 ($generated@@31 $generated@@200 $generated@@201)) $generated@@9))
 :pattern ( ($generated@@31 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (and (= ($generated@@28 ($generated@@69 $generated@@202 $generated@@203)) $generated@@6) (= ($generated@@105 ($generated@@69 $generated@@202 $generated@@203)) $generated@@11))
 :pattern ( ($generated@@69 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (and (= ($generated@@28 ($generated@@84 $generated@@204 $generated@@205)) $generated@@7) (= ($generated@@105 ($generated@@84 $generated@@204 $generated@@205)) $generated@@11))
 :pattern ( ($generated@@84 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@72 $generated@@207 ($generated@@35 $generated@@206)) (and (= ($generated@@78 $generated@@34 ($generated@@40 $generated@@34 $generated@@207)) $generated@@207) ($generated@@68 $generated@@34 ($generated@@40 $generated@@34 $generated@@207) ($generated@@35 $generated@@206))))
 :pattern ( ($generated@@72 $generated@@207 ($generated@@35 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@72 $generated@@209 ($generated@@30 $generated@@208)) (and (= ($generated@@78 $generated@@34 ($generated@@40 $generated@@34 $generated@@209)) $generated@@209) ($generated@@68 $generated@@34 ($generated@@40 $generated@@34 $generated@@209) ($generated@@30 $generated@@208))))
 :pattern ( ($generated@@72 $generated@@209 ($generated@@30 $generated@@208)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@100 $generated@@212 ($generated@@30 $generated@@211) $generated@@213) ($generated@@210 $generated@@213)) ($generated@@100 $generated@@212 ($generated@@69 ($generated@@31 $generated@@211 $generated@@211) $generated@@0) $generated@@213))
 :pattern ( ($generated@@100 $generated@@212 ($generated@@30 $generated@@211) $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@215 ($generated@@30 $generated@@214) $generated@@216) ($generated@@33 $generated@@34 $generated@@215 ($generated@@69 ($generated@@31 $generated@@214 $generated@@214) $generated@@0) $generated@@216))
 :pattern ( ($generated@@33 $generated@@34 $generated@@215 ($generated@@30 $generated@@214) $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@T) ) (! (= ($generated@@78 $generated@@218 ($generated@@75 $generated@@218 $generated@@217)) ($generated@@75 $generated@@43 ($generated@@78 $generated@@218 $generated@@217)))
 :pattern ( ($generated@@78 $generated@@218 ($generated@@75 $generated@@218 $generated@@217)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (! ($generated@@33 $generated@@14 $generated@@220 $generated $generated@@219)
 :pattern ( ($generated@@33 $generated@@14 $generated@@220 $generated $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! ($generated@@33 $generated@@15 $generated@@222 $generated@@0 $generated@@221)
 :pattern ( ($generated@@33 $generated@@15 $generated@@222 $generated@@0 $generated@@221))
)))
(assert (forall (($generated@@223 T@U) ) (! ($generated@@68 $generated@@14 $generated@@223 $generated)
 :pattern ( ($generated@@68 $generated@@14 $generated@@223 $generated))
)))
(assert (forall (($generated@@224 T@U) ) (! ($generated@@68 $generated@@15 $generated@@224 $generated@@0)
 :pattern ( ($generated@@68 $generated@@15 $generated@@224 $generated@@0))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(declare-fun $generated@@230 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@231  (=> (= $generated@@225 ($generated@@167 $generated@@39 $generated@@226 $generated@@3 false)) (=> (and (and ($generated@@68 $generated@@156 $generated@@227 ($generated@@31 $generated $generated)) ($generated@@33 $generated@@156 $generated@@227 ($generated@@31 $generated $generated) $generated@@226)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@228 $generated@@39)) (not true))))))
(let (($generated@@232  (=> (and (and ($generated@@210 $generated@@226) ($generated@@229 $generated@@226)) (and ($generated@@68 $generated@@34 $generated@@228 ($generated@@35 $generated)) ($generated@@33 $generated@@34 $generated@@228 ($generated@@35 $generated) $generated@@226))) (=> (and (and (and ($generated@@68 $generated@@156 $generated@@230 ($generated@@31 $generated $generated)) ($generated@@33 $generated@@156 $generated@@230 ($generated@@31 $generated $generated) $generated@@226)) true) (and (= 1 $generated@@81) (= (ControlFlow 0 3) 2))) $generated@@231))))
$generated@@232)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
