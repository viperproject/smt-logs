(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@U) Int)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U) Bool)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T) T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 (T@U Int) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@186 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@187 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@188 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@11 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33) ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 ($generated@@29 $generated@@31) $generated@@33))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@37 ($generated@@34 $generated@@36) $generated@@38) ($generated@@27 $generated@@28 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@27 $generated@@28 $generated@@37 ($generated@@34 $generated@@36) $generated@@38))
 :pattern ( ($generated@@27 $generated@@28 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
)))
(assert (= ($generated@@39 $generated@@40) 0))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (=> (or ($generated@@43 $generated@@51 $generated@@52 $generated@@53) (and (< 1 $generated@@41) (and ($generated@@44 $generated@@52) (and (or (not (= $generated@@53 $generated@@45)) (not true)) (and ($generated@@46 $generated@@28 $generated@@53 ($generated@@34 $generated@@51)) ($generated@@27 $generated@@28 $generated@@53 ($generated@@34 $generated@@51) $generated@@52)))))) (=> ($generated@@42 $generated@@51 $generated@@52 $generated@@53) ($generated@@47 ($generated@@48 ($generated@@49 $generated@@51) $generated@@53) ($generated@@50 $generated@@28 $generated@@53))))
 :pattern ( ($generated@@42 $generated@@51 $generated@@52 $generated@@53))
))))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@56 $generated@@54 $generated@@57) ($generated@@27 $generated@@28 $generated@@56 $generated@@55 $generated@@57))
 :pattern ( ($generated@@27 $generated@@28 $generated@@56 $generated@@54 $generated@@57))
 :pattern ( ($generated@@27 $generated@@28 $generated@@56 $generated@@55 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) ($generated@@58 ($generated@@35 $generated@@59) ($generated@@49 $generated@@59))))
(assert  (and (and (and (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@61 $generated@@68 $generated@@69 ($generated@@65 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@61 $generated@@73 $generated@@74 ($generated@@65 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@61 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@11 $generated@@62) 4)) (= ($generated@@11 $generated@@63) 5)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ) (= ($generated@@11 ($generated@@64 $generated@@79 $generated@@80)) 6))) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (! (= ($generated@@66 ($generated@@64 $generated@@81 $generated@@82)) $generated@@81)
 :pattern ( ($generated@@64 $generated@@81 $generated@@82))
))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@67 ($generated@@64 $generated@@83 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@64 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@86 ($generated@@30 $generated@@85) $generated@@87)  (or (= $generated@@86 $generated@@45) ($generated@@16 ($generated@@60 $generated@@12 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@28 ($generated@@64 $generated@@62 $generated@@63) $generated@@87 $generated@@86) $generated@@1)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@86 ($generated@@30 $generated@@85) $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@89 ($generated@@35 $generated@@88) $generated@@90)  (or (= $generated@@89 $generated@@45) ($generated@@16 ($generated@@60 $generated@@12 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@28 ($generated@@64 $generated@@62 $generated@@63) $generated@@90 $generated@@89) $generated@@1)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@89 ($generated@@35 $generated@@88) $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@91 $generated@@55 $generated@@92)  (or (= $generated@@91 $generated@@45) ($generated@@16 ($generated@@60 $generated@@12 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@28 ($generated@@64 $generated@@62 $generated@@63) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@91 $generated@@55 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@46 $generated@@28 $generated@@94 ($generated@@35 $generated@@93)) ($generated@@46 $generated@@28 $generated@@94 ($generated@@30 ($generated@@49 $generated@@93))))
 :pattern ( ($generated@@46 $generated@@28 $generated@@94 ($generated@@35 $generated@@93)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@95 $generated@@97 ($generated@@35 $generated@@96)) ($generated@@95 $generated@@97 ($generated@@30 ($generated@@49 $generated@@96))))
 :pattern ( ($generated@@95 $generated@@97 ($generated@@35 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@50 $generated@@99 ($generated@@60 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@60 $generated@@99 $generated@@98))
)))
(assert (= ($generated@@11 $generated@@100) 7))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@46 $generated@@100 $generated@@102 ($generated@@101 $generated@@103)) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@47 $generated@@102 $generated@@104) ($generated@@95 $generated@@104 $generated@@103))
 :pattern ( ($generated@@47 $generated@@102 $generated@@104))
)))
 :pattern ( ($generated@@46 $generated@@100 $generated@@102 ($generated@@101 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@46 $generated@@28 $generated@@106 ($generated@@29 $generated@@105))  (and ($generated@@46 $generated@@28 $generated@@106 ($generated@@30 $generated@@105)) (or (not (= $generated@@106 $generated@@45)) (not true))))
 :pattern ( ($generated@@46 $generated@@28 $generated@@106 ($generated@@29 $generated@@105)))
 :pattern ( ($generated@@46 $generated@@28 $generated@@106 ($generated@@30 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@46 $generated@@28 $generated@@108 ($generated@@34 $generated@@107))  (and ($generated@@46 $generated@@28 $generated@@108 ($generated@@35 $generated@@107)) (or (not (= $generated@@108 $generated@@45)) (not true))))
 :pattern ( ($generated@@46 $generated@@28 $generated@@108 ($generated@@34 $generated@@107)))
 :pattern ( ($generated@@46 $generated@@28 $generated@@108 ($generated@@35 $generated@@107)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@109 ($generated@@50 $generated@@113 $generated@@110) $generated@@111 $generated@@112) ($generated@@27 $generated@@113 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@109 ($generated@@50 $generated@@113 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@116 T@U) ) (!  (and (= ($generated@@114 ($generated@@30 $generated@@116)) $generated@@4) (= ($generated@@115 ($generated@@30 $generated@@116)) $generated@@9))
 :pattern ( ($generated@@30 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (!  (and (= ($generated@@114 ($generated@@29 $generated@@117)) $generated@@5) (= ($generated@@115 ($generated@@29 $generated@@117)) $generated@@9))
 :pattern ( ($generated@@29 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ) (!  (and (= ($generated@@114 ($generated@@35 $generated@@118)) $generated@@6) (= ($generated@@115 ($generated@@35 $generated@@118)) $generated@@10))
 :pattern ( ($generated@@35 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (!  (and (= ($generated@@114 ($generated@@34 $generated@@119)) $generated@@7) (= ($generated@@115 ($generated@@34 $generated@@119)) $generated@@10))
 :pattern ( ($generated@@34 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@95 $generated@@120 $generated@@55) (and (= ($generated@@50 $generated@@28 ($generated@@60 $generated@@28 $generated@@120)) $generated@@120) ($generated@@46 $generated@@28 ($generated@@60 $generated@@28 $generated@@120) $generated@@55)))
 :pattern ( ($generated@@95 $generated@@120 $generated@@55))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@95 $generated@@121 $generated@@54) (and (= ($generated@@50 $generated@@28 ($generated@@60 $generated@@28 $generated@@121)) $generated@@121) ($generated@@46 $generated@@28 ($generated@@60 $generated@@28 $generated@@121) $generated@@54)))
 :pattern ( ($generated@@95 $generated@@121 $generated@@54))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@46 $generated@@28 $generated@@124 ($generated@@35 $generated@@123))  (or (= $generated@@124 $generated@@45) (= ($generated@@122 $generated@@124) ($generated@@35 $generated@@123))))
 :pattern ( ($generated@@46 $generated@@28 $generated@@124 ($generated@@35 $generated@@123)))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@46 $generated@@28 $generated@@125 $generated@@54)  (and ($generated@@46 $generated@@28 $generated@@125 $generated@@55) (or (not (= $generated@@125 $generated@@45)) (not true))))
 :pattern ( ($generated@@46 $generated@@28 $generated@@125 $generated@@54))
 :pattern ( ($generated@@46 $generated@@28 $generated@@125 $generated@@55))
)))
(assert  (=> (< 0 $generated@@41) (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and (or (not (= $generated@@127 $generated@@45)) (not true)) ($generated@@46 $generated@@28 $generated@@127 ($generated@@30 $generated@@126))) ($generated@@46 $generated@@100 ($generated@@48 $generated@@126 $generated@@127) ($generated@@101 $generated@@54)))
 :pattern ( ($generated@@48 $generated@@126 $generated@@127))
))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@109 $generated@@129 ($generated@@35 $generated@@128) $generated@@130) ($generated@@44 $generated@@130)) ($generated@@109 $generated@@129 ($generated@@30 ($generated@@49 $generated@@128)) $generated@@130))
 :pattern ( ($generated@@109 $generated@@129 ($generated@@35 $generated@@128) $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@27 $generated@@28 $generated@@132 ($generated@@35 $generated@@131) $generated@@133) ($generated@@27 $generated@@28 $generated@@132 ($generated@@30 ($generated@@49 $generated@@131)) $generated@@133))
 :pattern ( ($generated@@27 $generated@@28 $generated@@132 ($generated@@35 $generated@@131) $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@T) ) (! (= ($generated@@95 ($generated@@50 $generated@@136 $generated@@134) $generated@@135) ($generated@@46 $generated@@136 $generated@@134 $generated@@135))
 :pattern ( ($generated@@95 ($generated@@50 $generated@@136 $generated@@134) $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (<= 0 ($generated@@39 $generated@@137))
 :pattern ( ($generated@@39 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@27 $generated@@100 $generated@@138 ($generated@@101 $generated@@139) $generated@@140) (forall (($generated@@141 T@U) ) (!  (=> ($generated@@47 $generated@@138 $generated@@141) ($generated@@109 $generated@@141 $generated@@139 $generated@@140))
 :pattern ( ($generated@@47 $generated@@138 $generated@@141))
)))
 :pattern ( ($generated@@27 $generated@@100 $generated@@138 ($generated@@101 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! ($generated@@46 $generated@@28 $generated@@142 $generated@@55)
 :pattern ( ($generated@@46 $generated@@28 $generated@@142 $generated@@55))
)))
(assert (= ($generated@@11 $generated@@143) 8))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@27 $generated@@143 $generated@@145 ($generated@@49 $generated@@146) $generated@@147) (forall (($generated@@148 Int) ) (!  (=> (and (<= 0 $generated@@148) (< $generated@@148 ($generated@@39 $generated@@145))) ($generated@@109 ($generated@@144 $generated@@145 $generated@@148) $generated@@146 $generated@@147))
 :pattern ( ($generated@@144 $generated@@145 $generated@@148))
)))
 :pattern ( ($generated@@27 $generated@@143 $generated@@145 ($generated@@49 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@101 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@101 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@114 ($generated@@101 $generated@@151)) $generated)
 :pattern ( ($generated@@101 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@49 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@49 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@114 ($generated@@49 $generated@@154)) $generated@@0)
 :pattern ( ($generated@@49 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@30 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@30 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@29 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@29 $generated@@158))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@159 ($generated@@35 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@35 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (= ($generated@@161 ($generated@@34 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@34 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@T) ) (! (= ($generated@@60 $generated@@164 ($generated@@50 $generated@@164 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@50 $generated@@164 $generated@@163))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (or ($generated@@43 $generated@@165 $generated@@166 $generated@@167) (and (< 1 $generated@@41) (and ($generated@@44 $generated@@166) (and (or (not (= $generated@@167 $generated@@45)) (not true)) (and ($generated@@46 $generated@@28 $generated@@167 ($generated@@34 $generated@@165)) ($generated@@27 $generated@@28 $generated@@167 ($generated@@34 $generated@@165) $generated@@166)))))) (= ($generated@@42 $generated@@165 $generated@@166 $generated@@167) ($generated@@47 ($generated@@48 ($generated@@49 $generated@@165) $generated@@167) ($generated@@50 $generated@@28 $generated@@167))))
 :pattern ( ($generated@@42 $generated@@165 $generated@@166 $generated@@167) ($generated@@44 $generated@@166))
))))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@46 $generated@@28 $generated@@169 ($generated@@30 $generated@@168))  (or (= $generated@@169 $generated@@45) ($generated@@58 ($generated@@122 $generated@@169) $generated@@168)))
 :pattern ( ($generated@@46 $generated@@28 $generated@@169 ($generated@@30 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@95 $generated@@170 ($generated@@101 $generated@@171)) (and (= ($generated@@50 $generated@@100 ($generated@@60 $generated@@100 $generated@@170)) $generated@@170) ($generated@@46 $generated@@100 ($generated@@60 $generated@@100 $generated@@170) ($generated@@101 $generated@@171))))
 :pattern ( ($generated@@95 $generated@@170 ($generated@@101 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@95 $generated@@172 ($generated@@49 $generated@@173)) (and (= ($generated@@50 $generated@@143 ($generated@@60 $generated@@143 $generated@@172)) $generated@@172) ($generated@@46 $generated@@143 ($generated@@60 $generated@@143 $generated@@172) ($generated@@49 $generated@@173))))
 :pattern ( ($generated@@95 $generated@@172 ($generated@@49 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@95 $generated@@175 ($generated@@30 $generated@@174)) (and (= ($generated@@50 $generated@@28 ($generated@@60 $generated@@28 $generated@@175)) $generated@@175) ($generated@@46 $generated@@28 ($generated@@60 $generated@@28 $generated@@175) ($generated@@30 $generated@@174))))
 :pattern ( ($generated@@95 $generated@@175 ($generated@@30 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@95 $generated@@177 ($generated@@29 $generated@@176)) (and (= ($generated@@50 $generated@@28 ($generated@@60 $generated@@28 $generated@@177)) $generated@@177) ($generated@@46 $generated@@28 ($generated@@60 $generated@@28 $generated@@177) ($generated@@29 $generated@@176))))
 :pattern ( ($generated@@95 $generated@@177 ($generated@@29 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@95 $generated@@179 ($generated@@35 $generated@@178)) (and (= ($generated@@50 $generated@@28 ($generated@@60 $generated@@28 $generated@@179)) $generated@@179) ($generated@@46 $generated@@28 ($generated@@60 $generated@@28 $generated@@179) ($generated@@35 $generated@@178))))
 :pattern ( ($generated@@95 $generated@@179 ($generated@@35 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@95 $generated@@181 ($generated@@34 $generated@@180)) (and (= ($generated@@50 $generated@@28 ($generated@@60 $generated@@28 $generated@@181)) $generated@@181) ($generated@@46 $generated@@28 ($generated@@60 $generated@@28 $generated@@181) ($generated@@34 $generated@@180))))
 :pattern ( ($generated@@95 $generated@@181 ($generated@@34 $generated@@180)))
)))
(assert (= ($generated@@114 $generated@@55) $generated@@2))
(assert (= ($generated@@115 $generated@@55) $generated@@8))
(assert (= ($generated@@114 $generated@@54) $generated@@3))
(assert (= ($generated@@115 $generated@@54) $generated@@8))
(assert  (=> (< 0 $generated@@41) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and (and ($generated@@44 $generated@@183) (and (or (not (= $generated@@184 $generated@@45)) (not true)) ($generated@@46 $generated@@28 $generated@@184 ($generated@@30 $generated@@182)))) ($generated@@16 ($generated@@60 $generated@@12 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@28 ($generated@@64 $generated@@62 $generated@@63) $generated@@183 $generated@@184) $generated@@1)))) ($generated@@27 $generated@@100 ($generated@@48 $generated@@182 $generated@@184) ($generated@@101 $generated@@54) $generated@@183))
 :pattern ( ($generated@@48 $generated@@182 $generated@@184) ($generated@@60 $generated@@12 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@28 ($generated@@64 $generated@@62 $generated@@63) $generated@@183 $generated@@184) $generated@@1)))
))))
(assert (forall (($generated@@185 T@U) ) (!  (=> (= ($generated@@39 $generated@@185) 0) (= $generated@@185 $generated@@40))
 :pattern ( ($generated@@39 $generated@@185))
)))
(assert  (and (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@186 $generated@@189 $generated@@190 $generated@@191 ($generated@@188 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@194 $generated@@195) $generated@@192)
 :weight 0
)) (and (forall (($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (!  (or (= $generated@@201 $generated@@203) (= ($generated@@186 $generated@@196 $generated@@197 $generated@@198 ($generated@@188 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@202 $generated@@199) $generated@@203 $generated@@204) ($generated@@186 $generated@@196 $generated@@197 $generated@@198 $generated@@200 $generated@@203 $generated@@204)))
 :weight 0
)) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (or (= $generated@@211 $generated@@213) (= ($generated@@186 $generated@@205 $generated@@206 $generated@@207 ($generated@@188 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@212 $generated@@213) ($generated@@186 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@212 $generated@@213)))
 :weight 0
)))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@16 ($generated@@186 $generated@@28 $generated@@62 $generated@@12 ($generated@@187 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (or (not (= $generated@@218 $generated@@214)) (not true)) ($generated@@16 ($generated@@60 $generated@@12 ($generated@@61 $generated@@62 $generated@@63 ($generated@@61 $generated@@28 ($generated@@64 $generated@@62 $generated@@63) $generated@@215 $generated@@218) $generated@@216)))) ($generated@@47 $generated@@217 ($generated@@50 $generated@@28 $generated@@218))))
 :pattern ( ($generated@@186 $generated@@28 $generated@@62 $generated@@12 ($generated@@187 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@46 $generated@@143 $generated@@220 ($generated@@49 $generated@@221)) (forall (($generated@@222 Int) ) (!  (=> (and (<= 0 $generated@@222) (< $generated@@222 ($generated@@39 $generated@@220))) ($generated@@95 ($generated@@144 $generated@@220 $generated@@222) $generated@@221))
 :pattern ( ($generated@@144 $generated@@220 $generated@@222))
)))
 :pattern ( ($generated@@46 $generated@@143 $generated@@220 ($generated@@49 $generated@@221)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (T@U) Bool)
(declare-fun $generated@@228 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@229  (=> (and (and (= $generated@@223 ($generated@@187 $generated@@45 $generated@@224 $generated@@1 ($generated@@48 ($generated@@49 $generated@@225) $generated@@226))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@43 $generated@@225 $generated@@224 $generated@@226)) (or ($generated@@42 $generated@@225 $generated@@224 $generated@@226) ($generated@@47 ($generated@@48 ($generated@@49 $generated@@225) $generated@@226) ($generated@@50 $generated@@28 $generated@@226))))))
(let (($generated@@230  (=> (and (and ($generated@@44 $generated@@224) ($generated@@227 $generated@@224)) (and (or (not (= $generated@@226 $generated@@45)) (not true)) (and ($generated@@46 $generated@@28 $generated@@226 ($generated@@34 $generated@@225)) ($generated@@27 $generated@@28 $generated@@226 ($generated@@34 $generated@@225) $generated@@224)))) (=> (and (and (and ($generated@@46 $generated@@143 $generated@@228 ($generated@@49 $generated@@225)) ($generated@@27 $generated@@143 $generated@@228 ($generated@@49 $generated@@225) $generated@@224)) (= 2 $generated@@41)) (and (and ($generated@@43 $generated@@225 $generated@@224 $generated@@226) (and ($generated@@42 $generated@@225 $generated@@224 $generated@@226) ($generated@@47 ($generated@@48 ($generated@@49 $generated@@225) $generated@@226) ($generated@@50 $generated@@28 $generated@@226)))) (= (ControlFlow 0 3) 2))) $generated@@229))))
$generated@@230)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
