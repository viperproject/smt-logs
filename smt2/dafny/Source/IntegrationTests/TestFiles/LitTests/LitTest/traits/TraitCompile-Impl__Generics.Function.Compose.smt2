(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@56 (T@T T@U T@U) Bool)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T T@T) T@T)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@24 $generated@@25 $generated@@26)) $generated@@24)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@27 ($generated@@22 $generated@@28 $generated@@29 $generated@@30)) $generated@@29)
 :pattern ( ($generated@@22 $generated@@28 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@31 ($generated@@22 $generated@@32 $generated@@33 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@22 $generated@@32 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@35 $generated@@37 $generated@@38 $generated@@39)) $generated@@37)
 :pattern ( ($generated@@35 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 ($generated@@35 $generated@@41 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@35 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@44 ($generated@@35 $generated@@45 $generated@@46 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@35 $generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (and (= ($generated@@48 ($generated@@22 $generated@@50 $generated@@51 $generated@@52)) $generated@@2) (= ($generated@@49 ($generated@@22 $generated@@50 $generated@@51 $generated@@52)) $generated@@5))
 :pattern ( ($generated@@22 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (and (= ($generated@@48 ($generated@@35 $generated@@53 $generated@@54 $generated@@55)) $generated@@3) (= ($generated@@49 ($generated@@35 $generated@@53 $generated@@54 $generated@@55)) $generated@@5))
 :pattern ( ($generated@@35 $generated@@53 $generated@@54 $generated@@55))
)))
(assert (= ($generated@@6 $generated@@57) 3))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@56 $generated@@57 $generated@@62 ($generated@@35 $generated@@59 $generated@@60 $generated@@61))  (and ($generated@@56 $generated@@57 $generated@@62 ($generated@@22 $generated@@59 $generated@@60 $generated@@61)) (or (not (= $generated@@62 $generated@@58)) (not true))))
 :pattern ( ($generated@@56 $generated@@57 $generated@@62 ($generated@@35 $generated@@59 $generated@@60 $generated@@61)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@62 ($generated@@22 $generated@@59 $generated@@60 $generated@@61)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@64 $generated@@72 $generated@@73 ($generated@@69 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@76) $generated@@74)
 :weight 0
)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@64 $generated@@77 $generated@@78 ($generated@@69 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@64 $generated@@77 $generated@@78 $generated@@80 $generated@@82)))
 :weight 0
))) (= ($generated@@6 $generated@@65) 4)) (= ($generated@@6 $generated@@66) 5)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@6 ($generated@@67 $generated@@83 $generated@@84)) 6))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@70 ($generated@@67 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@67 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@71 ($generated@@67 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@67 $generated@@87 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> ($generated@@63 $generated@@89 $generated@@90) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@11 ($generated@@68 $generated@@7 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@89 $generated@@91) $generated))) ($generated@@11 ($generated@@68 $generated@@7 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@90 $generated@@91) $generated))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@90 $generated@@91) $generated))
)))
 :pattern ( ($generated@@63 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@68 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@68 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) ($generated@@95 ($generated@@22 $generated@@96 $generated@@97 $generated@@98) $generated@@96 $generated@@98)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@56 $generated@@57 $generated@@103 ($generated@@99 $generated@@101 $generated@@102))  (and ($generated@@56 $generated@@57 $generated@@103 ($generated@@100 $generated@@101 $generated@@102)) (or (not (= $generated@@103 $generated@@58)) (not true))))
 :pattern ( ($generated@@56 $generated@@57 $generated@@103 ($generated@@99 $generated@@101 $generated@@102)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@103 ($generated@@100 $generated@@101 $generated@@102)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (!  (=> ($generated@@63 $generated@@105 $generated@@106) (=> ($generated@@104 $generated@@109 $generated@@107 $generated@@108 $generated@@105) ($generated@@104 $generated@@109 $generated@@107 $generated@@108 $generated@@106)))
 :pattern ( ($generated@@63 $generated@@105 $generated@@106) ($generated@@104 $generated@@109 $generated@@107 $generated@@108 $generated@@105))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@104 $generated@@57 $generated@@112 ($generated@@99 $generated@@110 $generated@@111) $generated@@113) ($generated@@104 $generated@@57 $generated@@112 ($generated@@100 $generated@@110 $generated@@111) $generated@@113))
 :pattern ( ($generated@@104 $generated@@57 $generated@@112 ($generated@@99 $generated@@110 $generated@@111) $generated@@113))
 :pattern ( ($generated@@104 $generated@@57 $generated@@112 ($generated@@100 $generated@@110 $generated@@111) $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@104 $generated@@57 $generated@@117 ($generated@@22 $generated@@114 $generated@@115 $generated@@116) $generated@@118)  (or (= $generated@@117 $generated@@58) ($generated@@11 ($generated@@68 $generated@@7 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@118 $generated@@117) $generated)))))
 :pattern ( ($generated@@104 $generated@@57 $generated@@117 ($generated@@22 $generated@@114 $generated@@115 $generated@@116) $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@56 $generated@@57 $generated@@122 ($generated@@22 $generated@@119 $generated@@120 $generated@@121)) ($generated@@56 $generated@@57 $generated@@122 ($generated@@100 $generated@@119 $generated@@121)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@122 ($generated@@22 $generated@@119 $generated@@120 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@104 $generated@@57 $generated@@125 ($generated@@100 $generated@@123 $generated@@124) $generated@@126)  (or (= $generated@@125 $generated@@58) ($generated@@11 ($generated@@68 $generated@@7 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@126 $generated@@125) $generated)))))
 :pattern ( ($generated@@104 $generated@@57 $generated@@125 ($generated@@100 $generated@@123 $generated@@124) $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (or (not (= $generated@@127 $generated@@129)) (not true)) (=> (and ($generated@@63 $generated@@127 $generated@@128) ($generated@@63 $generated@@128 $generated@@129)) ($generated@@63 $generated@@127 $generated@@129)))
 :pattern ( ($generated@@63 $generated@@127 $generated@@128) ($generated@@63 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@130 ($generated@@100 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@100 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@133 ($generated@@100 $generated@@134 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@100 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@136 ($generated@@99 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@99 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@139 ($generated@@99 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@99 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@56 $generated@@57 $generated@@145 ($generated@@100 $generated@@143 $generated@@144))  (or (= $generated@@145 $generated@@58) ($generated@@95 ($generated@@142 $generated@@145) $generated@@143 $generated@@144)))
 :pattern ( ($generated@@56 $generated@@57 $generated@@145 ($generated@@100 $generated@@143 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@68 $generated@@147 ($generated@@92 $generated@@147 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@92 $generated@@147 $generated@@146))
)))
(assert  (and (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@148 $generated@@151 $generated@@152 $generated@@153 ($generated@@150 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@156 $generated@@157) $generated@@154)
 :weight 0
)) (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@163 $generated@@165) (= ($generated@@148 $generated@@158 $generated@@159 $generated@@160 ($generated@@150 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@148 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@148 $generated@@167 $generated@@168 $generated@@169 ($generated@@150 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@148 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@11 ($generated@@148 $generated@@57 $generated@@65 $generated@@7 ($generated@@149 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@11 ($generated@@68 $generated@@7 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@148 $generated@@57 $generated@@65 $generated@@7 ($generated@@149 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@56 $generated@@57 $generated@@185 ($generated@@22 $generated@@182 $generated@@183 $generated@@184))  (or (= $generated@@185 $generated@@58) (= ($generated@@142 $generated@@185) ($generated@@22 $generated@@182 $generated@@183 $generated@@184))))
 :pattern ( ($generated@@56 $generated@@57 $generated@@185 ($generated@@22 $generated@@182 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@104 $generated@@57 $generated@@189 ($generated@@35 $generated@@186 $generated@@187 $generated@@188) $generated@@190) ($generated@@104 $generated@@57 $generated@@189 ($generated@@22 $generated@@186 $generated@@187 $generated@@188) $generated@@190))
 :pattern ( ($generated@@104 $generated@@57 $generated@@189 ($generated@@35 $generated@@186 $generated@@187 $generated@@188) $generated@@190))
 :pattern ( ($generated@@104 $generated@@57 $generated@@189 ($generated@@22 $generated@@186 $generated@@187 $generated@@188) $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (and (= ($generated@@48 ($generated@@100 $generated@@191 $generated@@192)) $generated@@0) (= ($generated@@49 ($generated@@100 $generated@@191 $generated@@192)) $generated@@4))
 :pattern ( ($generated@@100 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (and (= ($generated@@48 ($generated@@99 $generated@@193 $generated@@194)) $generated@@1) (= ($generated@@49 ($generated@@99 $generated@@193 $generated@@194)) $generated@@4))
 :pattern ( ($generated@@99 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@104 $generated@@57 $generated@@198 ($generated@@22 $generated@@195 $generated@@196 $generated@@197) $generated@@199) ($generated@@104 $generated@@57 $generated@@198 ($generated@@100 $generated@@195 $generated@@197) $generated@@199))
 :pattern ( ($generated@@104 $generated@@57 $generated@@198 ($generated@@22 $generated@@195 $generated@@196 $generated@@197) $generated@@199))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 (T@U) Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@218  (=> (= $generated@@200 ($generated@@149 $generated@@58 $generated@@201 $generated false)) (=> (and (or (not (= $generated@@202 $generated@@58)) (not true)) (and ($generated@@56 $generated@@57 $generated@@202 ($generated@@35 $generated@@203 $generated@@204 $generated@@205)) ($generated@@104 $generated@@57 $generated@@202 ($generated@@35 $generated@@203 $generated@@204 $generated@@205) $generated@@201))) (=> (and (and (and ($generated@@206 $generated@@207) ($generated@@208 $generated@@207)) (and (or (not (= $generated@@209 $generated@@58)) (not true)) (and ($generated@@56 $generated@@57 $generated@@209 ($generated@@35 $generated@@210 $generated@@211 $generated@@212)) ($generated@@104 $generated@@57 $generated@@209 ($generated@@35 $generated@@210 $generated@@211 $generated@@212) $generated@@207)))) (and (and (not ($generated@@11 ($generated@@68 $generated@@7 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@201 $generated@@209) $generated)))) (forall (($generated@@219 T@U) ) (!  (=> (and (or (not (= $generated@@219 $generated@@58)) (not true)) ($generated@@11 ($generated@@68 $generated@@7 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@201 $generated@@219) $generated)))) (= ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@207 $generated@@219) ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@201 $generated@@219)))
 :pattern ( ($generated@@64 $generated@@57 ($generated@@67 $generated@@65 $generated@@66) $generated@@207 $generated@@219))
))) (and ($generated@@63 $generated@@201 $generated@@207) (= (ControlFlow 0 2) (- 0 1))))) true)))))
(let (($generated@@220  (=> (and (and ($generated@@206 $generated@@201) ($generated@@208 $generated@@201)) (and (or (not (= $generated@@213 $generated@@58)) (not true)) (and ($generated@@56 $generated@@57 $generated@@213 ($generated@@99 $generated@@211 $generated@@212)) ($generated@@104 $generated@@57 $generated@@213 ($generated@@99 $generated@@211 $generated@@212) $generated@@201)))) (=> (and (and (and ($generated@@56 $generated@@57 $generated@@214 ($generated@@99 $generated@@210 $generated@@211)) ($generated@@104 $generated@@57 $generated@@214 ($generated@@99 $generated@@210 $generated@@211) $generated@@201)) (=> $generated@@215 (and ($generated@@56 $generated@@57 $generated@@216 ($generated@@99 $generated@@210 $generated@@212)) ($generated@@104 $generated@@57 $generated@@216 ($generated@@99 $generated@@210 $generated@@212) $generated@@201)))) (and (= 3 $generated@@217) (= (ControlFlow 0 3) 2))) $generated@@218))))
$generated@@220)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
