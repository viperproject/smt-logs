(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@T T@T) T@T)
(declare-fun $generated@@53 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@79 () T@U)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@82 (T@T T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@U) Bool)
(declare-fun $generated@@92 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated@@1) 0))
(assert (= ($generated@@30 $generated) $generated@@0))
(assert (= ($generated@@31 $generated@@1) $generated@@2))
(assert (= ($generated@@13 $generated@@33) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@37 ($generated@@34 $generated@@36) $generated@@38) ($generated@@32 $generated@@33 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 ($generated@@34 $generated@@36) $generated@@38))
 :pattern ( ($generated@@32 $generated@@33 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@42 ($generated@@39 $generated@@41) $generated@@43) ($generated@@32 $generated@@33 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@32 $generated@@33 $generated@@42 ($generated@@39 $generated@@41) $generated@@43))
 :pattern ( ($generated@@32 $generated@@33 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ) ($generated@@44 ($generated@@40 $generated@@46) ($generated@@45 $generated@@46 $generated@@46))))
(assert  (and (and (and (and (and (and (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@49 $generated@@56 $generated@@57 ($generated@@53 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@60) $generated@@58)
 :weight 0
)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (or (= $generated@@65 $generated@@66) (= ($generated@@49 $generated@@61 $generated@@62 ($generated@@53 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@66) ($generated@@49 $generated@@61 $generated@@62 $generated@@64 $generated@@66)))
 :weight 0
))) (= ($generated@@13 $generated@@50) 4)) (= ($generated@@13 $generated@@51) 5)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (= ($generated@@13 ($generated@@52 $generated@@67 $generated@@68)) 6))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@54 ($generated@@52 $generated@@69 $generated@@70)) $generated@@69)
 :pattern ( ($generated@@52 $generated@@69 $generated@@70))
))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@55 ($generated@@52 $generated@@71 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@52 $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@74 ($generated@@35 $generated@@73) $generated@@75)  (or (= $generated@@74 $generated@@47) ($generated@@18 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@75 $generated@@74) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@74 ($generated@@35 $generated@@73) $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@77 ($generated@@40 $generated@@76) $generated@@78)  (or (= $generated@@77 $generated@@47) ($generated@@18 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@78 $generated@@77) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@77 ($generated@@40 $generated@@76) $generated@@78))
)))
(assert (= ($generated@@29 $generated@@79) 0))
(assert (= ($generated@@80 $generated@@5 $generated@@12) $generated@@79))
(assert  (not ($generated@@81 $generated@@79)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@82 $generated@@33 $generated@@84 ($generated@@40 $generated@@83)) ($generated@@82 $generated@@33 $generated@@84 ($generated@@35 ($generated@@45 $generated@@83 $generated@@83))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@84 ($generated@@40 $generated@@83)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@85 $generated@@87 ($generated@@40 $generated@@86)) ($generated@@85 $generated@@87 ($generated@@35 ($generated@@45 $generated@@86 $generated@@86))))
 :pattern ( ($generated@@85 $generated@@87 ($generated@@40 $generated@@86)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@48 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@48 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and (and ($generated@@91 $generated@@94) (and (or (not (= $generated@@95 $generated@@47)) (not true)) ($generated@@82 $generated@@33 $generated@@95 ($generated@@35 $generated@@93)))) ($generated@@18 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@94 $generated@@95) $generated@@1)))) ($generated@@92 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@94 $generated@@95) $generated@@79) $generated@@93 $generated@@94))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@94 $generated@@95) $generated@@79) ($generated@@35 $generated@@93))
)))
(assert ($generated@@81 $generated@@1))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@97 ($generated@@34 $generated@@96))  (and ($generated@@82 $generated@@33 $generated@@97 ($generated@@35 $generated@@96)) (or (not (= $generated@@97 $generated@@47)) (not true))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@97 ($generated@@34 $generated@@96)))
 :pattern ( ($generated@@82 $generated@@33 $generated@@97 ($generated@@35 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@99 ($generated@@39 $generated@@98))  (and ($generated@@82 $generated@@33 $generated@@99 ($generated@@40 $generated@@98)) (or (not (= $generated@@99 $generated@@47)) (not true))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@99 ($generated@@39 $generated@@98)))
 :pattern ( ($generated@@82 $generated@@33 $generated@@99 ($generated@@40 $generated@@98)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@92 ($generated@@88 $generated@@103 $generated@@100) $generated@@101 $generated@@102) ($generated@@32 $generated@@103 $generated@@100 $generated@@101 $generated@@102))
 :pattern ( ($generated@@92 ($generated@@88 $generated@@103 $generated@@100) $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@30 ($generated@@39 $generated@@105)) $generated@@4) (= ($generated@@104 ($generated@@39 $generated@@105)) $generated@@10))
 :pattern ( ($generated@@39 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@30 ($generated@@35 $generated@@106)) $generated@@6) (= ($generated@@104 ($generated@@35 $generated@@106)) $generated@@11))
 :pattern ( ($generated@@35 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@30 ($generated@@34 $generated@@107)) $generated@@7) (= ($generated@@104 ($generated@@34 $generated@@107)) $generated@@11))
 :pattern ( ($generated@@34 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (!  (and (= ($generated@@30 ($generated@@40 $generated@@108)) $generated@@8) (= ($generated@@104 ($generated@@40 $generated@@108)) $generated@@10))
 :pattern ( ($generated@@40 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and ($generated@@91 $generated@@110) (and (or (not (= $generated@@111 $generated@@47)) (not true)) ($generated@@82 $generated@@33 $generated@@111 ($generated@@35 $generated@@109)))) ($generated@@85 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@110 $generated@@111) $generated@@79) $generated@@109))
 :pattern ( ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@110 $generated@@111) $generated@@79) ($generated@@35 $generated@@109))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@114 ($generated@@40 $generated@@113))  (or (= $generated@@114 $generated@@47) (= ($generated@@112 $generated@@114) ($generated@@40 $generated@@113))))
 :pattern ( ($generated@@82 $generated@@33 $generated@@114 ($generated@@40 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and ($generated@@92 $generated@@116 ($generated@@40 $generated@@115) $generated@@117) ($generated@@91 $generated@@117)) ($generated@@92 $generated@@116 ($generated@@35 ($generated@@45 $generated@@115 $generated@@115)) $generated@@117))
 :pattern ( ($generated@@92 $generated@@116 ($generated@@40 $generated@@115) $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@119 ($generated@@40 $generated@@118) $generated@@120) ($generated@@32 $generated@@33 $generated@@119 ($generated@@35 ($generated@@45 $generated@@118 $generated@@118)) $generated@@120))
 :pattern ( ($generated@@32 $generated@@33 $generated@@119 ($generated@@40 $generated@@118) $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (!  (and (= ($generated@@121 ($generated@@80 $generated@@122 $generated@@123)) $generated@@122) (= ($generated@@31 ($generated@@80 $generated@@122 $generated@@123)) $generated@@123))
 :pattern ( ($generated@@80 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@85 $generated@@124 $generated) (and (= ($generated@@88 $generated@@15 ($generated@@48 $generated@@15 $generated@@124)) $generated@@124) ($generated@@82 $generated@@15 ($generated@@48 $generated@@15 $generated@@124) $generated)))
 :pattern ( ($generated@@85 $generated@@124 $generated))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@85 ($generated@@88 $generated@@127 $generated@@125) $generated@@126) ($generated@@82 $generated@@127 $generated@@125 $generated@@126))
 :pattern ( ($generated@@85 ($generated@@88 $generated@@127 $generated@@125) $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@128 ($generated@@45 $generated@@129 $generated@@130)) $generated@@129)
 :pattern ( ($generated@@45 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@131 ($generated@@45 $generated@@132 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@45 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@134 ($generated@@39 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@39 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@35 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@35 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@34 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@34 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@40 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@40 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@48 $generated@@143 ($generated@@88 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@88 $generated@@143 $generated@@142))
)))
(assert (= ($generated@@13 $generated@@144) 7))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@85 $generated@@147 ($generated@@45 $generated@@145 $generated@@146)) (and (= ($generated@@88 $generated@@144 ($generated@@48 $generated@@144 $generated@@147)) $generated@@147) ($generated@@82 $generated@@144 ($generated@@48 $generated@@144 $generated@@147) ($generated@@45 $generated@@145 $generated@@146))))
 :pattern ( ($generated@@85 $generated@@147 ($generated@@45 $generated@@145 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@82 $generated@@33 $generated@@149 ($generated@@35 $generated@@148))  (or (= $generated@@149 $generated@@47) ($generated@@44 ($generated@@112 $generated@@149) $generated@@148)))
 :pattern ( ($generated@@82 $generated@@33 $generated@@149 ($generated@@35 $generated@@148)))
)))
(assert  (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@150 $generated@@153 $generated@@154 $generated@@155 ($generated@@152 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@150 $generated@@160 $generated@@161 $generated@@162 ($generated@@152 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@150 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@150 $generated@@169 $generated@@170 $generated@@171 ($generated@@152 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@150 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 Bool) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@18 ($generated@@150 $generated@@33 $generated@@50 $generated@@14 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))  (=> (and (or (not (= $generated@@182 $generated@@178)) (not true)) ($generated@@18 ($generated@@48 $generated@@14 ($generated@@49 $generated@@50 $generated@@51 ($generated@@49 $generated@@33 ($generated@@52 $generated@@50 $generated@@51) $generated@@179 $generated@@182) $generated@@180)))) $generated@@181))
 :pattern ( ($generated@@150 $generated@@33 $generated@@50 $generated@@14 ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@181) $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (and (= ($generated@@30 ($generated@@45 $generated@@184 $generated@@185)) $generated@@3) (= ($generated@@104 ($generated@@45 $generated@@184 $generated@@185)) $generated@@9))
 :pattern ( ($generated@@45 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@85 $generated@@187 ($generated@@39 $generated@@186)) (and (= ($generated@@88 $generated@@33 ($generated@@48 $generated@@33 $generated@@187)) $generated@@187) ($generated@@82 $generated@@33 ($generated@@48 $generated@@33 $generated@@187) ($generated@@39 $generated@@186))))
 :pattern ( ($generated@@85 $generated@@187 ($generated@@39 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@85 $generated@@189 ($generated@@35 $generated@@188)) (and (= ($generated@@88 $generated@@33 ($generated@@48 $generated@@33 $generated@@189)) $generated@@189) ($generated@@82 $generated@@33 ($generated@@48 $generated@@33 $generated@@189) ($generated@@35 $generated@@188))))
 :pattern ( ($generated@@85 $generated@@189 ($generated@@35 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@85 $generated@@191 ($generated@@34 $generated@@190)) (and (= ($generated@@88 $generated@@33 ($generated@@48 $generated@@33 $generated@@191)) $generated@@191) ($generated@@82 $generated@@33 ($generated@@48 $generated@@33 $generated@@191) ($generated@@34 $generated@@190))))
 :pattern ( ($generated@@85 $generated@@191 ($generated@@34 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> ($generated@@85 $generated@@193 ($generated@@40 $generated@@192)) (and (= ($generated@@88 $generated@@33 ($generated@@48 $generated@@33 $generated@@193)) $generated@@193) ($generated@@82 $generated@@33 ($generated@@48 $generated@@33 $generated@@193) ($generated@@40 $generated@@192))))
 :pattern ( ($generated@@85 $generated@@193 ($generated@@40 $generated@@192)))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@32 $generated@@15 $generated@@195 $generated $generated@@194)
 :pattern ( ($generated@@32 $generated@@15 $generated@@195 $generated $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@82 $generated@@15 $generated@@196 $generated)
 :pattern ( ($generated@@82 $generated@@15 $generated@@196 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@203  (=> (and (= $generated@@197 ($generated@@151 $generated@@47 $generated@@198 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (or (not (= $generated@@199 $generated@@47)) (not true)))))
(let (($generated@@204  (=> (and (and ($generated@@91 $generated@@198) ($generated@@200 $generated@@198)) (and ($generated@@82 $generated@@33 $generated@@199 ($generated@@39 $generated)) ($generated@@32 $generated@@33 $generated@@199 ($generated@@39 $generated) $generated@@198))) (=> (and (and (and ($generated@@82 $generated@@144 $generated@@201 ($generated@@45 $generated $generated)) ($generated@@32 $generated@@144 $generated@@201 ($generated@@45 $generated $generated) $generated@@198)) true) (and (= 1 $generated@@202) (= (ControlFlow 0 3) 2))) $generated@@203))))
$generated@@204)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
