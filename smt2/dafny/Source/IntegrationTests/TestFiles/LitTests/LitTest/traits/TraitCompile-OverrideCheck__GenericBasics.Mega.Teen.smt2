(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@60 (T@T T@U T@U) Bool)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) T@U)
(declare-fun $generated@@80 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@T T@T) T@T)
(declare-fun $generated@@89 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@T) T@T)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@122 (T@U T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@28 ($generated@@27 $generated@@29 $generated@@30 $generated@@31)) $generated@@29)
 :pattern ( ($generated@@27 $generated@@29 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@32 ($generated@@27 $generated@@33 $generated@@34 $generated@@35)) $generated@@34)
 :pattern ( ($generated@@27 $generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@27 $generated@@37 $generated@@38 $generated@@39)) $generated@@39)
 :pattern ( ($generated@@27 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@41 ($generated@@40 $generated@@42 $generated@@43 $generated@@44)) $generated@@42)
 :pattern ( ($generated@@40 $generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@45 ($generated@@40 $generated@@46 $generated@@47 $generated@@48)) $generated@@47)
 :pattern ( ($generated@@40 $generated@@46 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@49 ($generated@@40 $generated@@50 $generated@@51 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@40 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (and (= ($generated@@26 ($generated@@27 $generated@@54 $generated@@55 $generated@@56)) $generated@@3) (= ($generated@@53 ($generated@@27 $generated@@54 $generated@@55 $generated@@56)) $generated@@8))
 :pattern ( ($generated@@27 $generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (and (= ($generated@@26 ($generated@@40 $generated@@57 $generated@@58 $generated@@59)) $generated@@6) (= ($generated@@53 ($generated@@40 $generated@@57 $generated@@58 $generated@@59)) $generated@@8))
 :pattern ( ($generated@@40 $generated@@57 $generated@@58 $generated@@59))
)))
(assert (= ($generated@@10 $generated@@61) 3))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@60 $generated@@61 $generated@@66 ($generated@@27 $generated@@63 $generated@@64 $generated@@65))  (and ($generated@@60 $generated@@61 $generated@@66 ($generated@@40 $generated@@63 $generated@@64 $generated@@65)) (or (not (= $generated@@66 $generated@@62)) (not true))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@66 ($generated@@27 $generated@@63 $generated@@64 $generated@@65)))
 :pattern ( ($generated@@60 $generated@@61 $generated@@66 ($generated@@40 $generated@@63 $generated@@64 $generated@@65)))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 ($generated@@67 $generated@@70 $generated@@69)) $generated@@69)
 :pattern ( ($generated@@67 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) ($generated@@71 ($generated@@40 $generated@@72 $generated@@73 $generated@@74) $generated@@73 $generated)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@60 $generated@@61 $generated@@79 ($generated@@75 $generated@@77 $generated@@78))  (and ($generated@@60 $generated@@61 $generated@@79 ($generated@@76 $generated@@77 $generated@@78)) (or (not (= $generated@@79 $generated@@62)) (not true))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@79 ($generated@@75 $generated@@77 $generated@@78)))
 :pattern ( ($generated@@60 $generated@@61 $generated@@79 ($generated@@76 $generated@@77 $generated@@78)))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@80 $generated@@61 $generated@@83 ($generated@@75 $generated@@81 $generated@@82) $generated@@84) ($generated@@80 $generated@@61 $generated@@83 ($generated@@76 $generated@@81 $generated@@82) $generated@@84))
 :pattern ( ($generated@@80 $generated@@61 $generated@@83 ($generated@@75 $generated@@81 $generated@@82) $generated@@84))
 :pattern ( ($generated@@80 $generated@@61 $generated@@83 ($generated@@76 $generated@@81 $generated@@82) $generated@@84))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@85 $generated@@92 $generated@@93 ($generated@@89 $generated@@92 $generated@@93 $generated@@95 $generated@@96 $generated@@94) $generated@@96) $generated@@94)
 :weight 0
)) (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (or (= $generated@@101 $generated@@102) (= ($generated@@85 $generated@@97 $generated@@98 ($generated@@89 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@99) $generated@@102) ($generated@@85 $generated@@97 $generated@@98 $generated@@100 $generated@@102)))
 :weight 0
))) (= ($generated@@10 $generated@@86) 4)) (= ($generated@@10 $generated@@87) 5)) (forall (($generated@@103 T@T) ($generated@@104 T@T) ) (= ($generated@@10 ($generated@@88 $generated@@103 $generated@@104)) 6))) (forall (($generated@@105 T@T) ($generated@@106 T@T) ) (! (= ($generated@@90 ($generated@@88 $generated@@105 $generated@@106)) $generated@@105)
 :pattern ( ($generated@@88 $generated@@105 $generated@@106))
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ) (! (= ($generated@@91 ($generated@@88 $generated@@107 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@88 $generated@@107 $generated@@108))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@80 $generated@@61 $generated@@112 ($generated@@40 $generated@@109 $generated@@110 $generated@@111) $generated@@113)  (or (= $generated@@112 $generated@@62) ($generated@@15 ($generated@@67 $generated@@11 ($generated@@85 $generated@@86 $generated@@87 ($generated@@85 $generated@@61 ($generated@@88 $generated@@86 $generated@@87) $generated@@113 $generated@@112) $generated@@1)))))
 :pattern ( ($generated@@80 $generated@@61 $generated@@112 ($generated@@40 $generated@@109 $generated@@110 $generated@@111) $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> ($generated@@60 $generated@@61 $generated@@117 ($generated@@40 $generated@@114 $generated@@115 $generated@@116)) ($generated@@60 $generated@@61 $generated@@117 ($generated@@76 $generated@@115 $generated)))
 :pattern ( ($generated@@60 $generated@@61 $generated@@117 ($generated@@40 $generated@@114 $generated@@115 $generated@@116)))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@80 $generated@@61 $generated@@120 ($generated@@76 $generated@@118 $generated@@119) $generated@@121)  (or (= $generated@@120 $generated@@62) ($generated@@15 ($generated@@67 $generated@@11 ($generated@@85 $generated@@86 $generated@@87 ($generated@@85 $generated@@61 ($generated@@88 $generated@@86 $generated@@87) $generated@@121 $generated@@120) $generated@@1)))))
 :pattern ( ($generated@@80 $generated@@61 $generated@@120 ($generated@@76 $generated@@118 $generated@@119) $generated@@121))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@123 ($generated@@122 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@122 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@126 ($generated@@122 $generated@@127 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@122 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@129 ($generated@@75 $generated@@130 $generated@@131)) $generated@@130)
 :pattern ( ($generated@@75 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@132 ($generated@@75 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@75 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@135 ($generated@@76 $generated@@136 $generated@@137)) $generated@@136)
 :pattern ( ($generated@@76 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@138 ($generated@@76 $generated@@139 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@76 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@60 $generated@@61 $generated@@144 ($generated@@76 $generated@@142 $generated@@143))  (or (= $generated@@144 $generated@@62) ($generated@@71 ($generated@@141 $generated@@144) $generated@@142 $generated@@143)))
 :pattern ( ($generated@@60 $generated@@61 $generated@@144 ($generated@@76 $generated@@142 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@T) ) (! (= ($generated@@67 $generated@@146 ($generated@@68 $generated@@146 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@68 $generated@@146 $generated@@145))
)))
(assert  (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@147 $generated@@150 $generated@@151 $generated@@152 ($generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@147 $generated@@157 $generated@@158 $generated@@159 ($generated@@149 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@147 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@147 $generated@@166 $generated@@167 $generated@@168 ($generated@@149 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@147 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@15 ($generated@@147 $generated@@61 $generated@@86 $generated@@11 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@15 ($generated@@67 $generated@@11 ($generated@@85 $generated@@86 $generated@@87 ($generated@@85 $generated@@61 ($generated@@88 $generated@@86 $generated@@87) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@147 $generated@@61 $generated@@86 $generated@@11 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@60 $generated@@61 $generated@@184 ($generated@@40 $generated@@181 $generated@@182 $generated@@183))  (or (= $generated@@184 $generated@@62) (= ($generated@@141 $generated@@184) ($generated@@40 $generated@@181 $generated@@182 $generated@@183))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@184 ($generated@@40 $generated@@181 $generated@@182 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@80 $generated@@61 $generated@@188 ($generated@@27 $generated@@185 $generated@@186 $generated@@187) $generated@@189) ($generated@@80 $generated@@61 $generated@@188 ($generated@@40 $generated@@185 $generated@@186 $generated@@187) $generated@@189))
 :pattern ( ($generated@@80 $generated@@61 $generated@@188 ($generated@@27 $generated@@185 $generated@@186 $generated@@187) $generated@@189))
 :pattern ( ($generated@@80 $generated@@61 $generated@@188 ($generated@@40 $generated@@185 $generated@@186 $generated@@187) $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (and (= ($generated@@26 ($generated@@122 $generated@@190 $generated@@191)) $generated@@2) (= ($generated@@53 ($generated@@122 $generated@@190 $generated@@191)) $generated@@7))
 :pattern ( ($generated@@122 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (and (= ($generated@@26 ($generated@@75 $generated@@192 $generated@@193)) $generated@@4) (= ($generated@@53 ($generated@@75 $generated@@192 $generated@@193)) $generated@@9))
 :pattern ( ($generated@@75 $generated@@192 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (and (= ($generated@@26 ($generated@@76 $generated@@194 $generated@@195)) $generated@@5) (= ($generated@@53 ($generated@@76 $generated@@194 $generated@@195)) $generated@@9))
 :pattern ( ($generated@@76 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@80 $generated@@61 $generated@@199 ($generated@@40 $generated@@196 $generated@@197 $generated@@198) $generated@@200) ($generated@@80 $generated@@61 $generated@@199 ($generated@@76 $generated@@197 $generated) $generated@@200))
 :pattern ( ($generated@@80 $generated@@61 $generated@@199 ($generated@@40 $generated@@196 $generated@@197 $generated@@198) $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (! ($generated@@80 $generated@@12 $generated@@202 $generated $generated@@201)
 :pattern ( ($generated@@80 $generated@@12 $generated@@202 $generated $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ) (! ($generated@@60 $generated@@12 $generated@@203 $generated)
 :pattern ( ($generated@@60 $generated@@12 $generated@@203 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 (T@U) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 (T@U) Bool)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@T)
(declare-fun $generated@@219 () Int)
(assert (= ($generated@@10 $generated@@218) 7))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@220  (=> (= $generated@@204 $generated@@205) (=> (and (= $generated@@206 $generated) (= $generated@@207 $generated@@208)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (<= ($generated@@209 $generated@@210) ($generated@@209 $generated@@210))) (=> (<= ($generated@@209 $generated@@210) ($generated@@209 $generated@@210)) (=> (and (= $generated@@211 ($generated@@148 $generated@@62 $generated@@212 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@221 T@U) ($generated@@222 T@U) ) true))))))))
(let (($generated@@223  (=> (and ($generated@@213 $generated@@212) ($generated@@214 $generated@@212)) (=> (and (and (and (or (not (= $generated@@215 $generated@@62)) (not true)) (and ($generated@@60 $generated@@61 $generated@@215 ($generated@@27 $generated@@216 $generated@@205 $generated@@217)) ($generated@@80 $generated@@61 $generated@@215 ($generated@@27 $generated@@216 $generated@@205 $generated@@217) $generated@@212))) ($generated@@60 $generated@@218 $generated@@210 ($generated@@122 $generated@@205 $generated@@208))) (and (= 0 $generated@@219) (= (ControlFlow 0 4) 2))) $generated@@220))))
$generated@@223)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
