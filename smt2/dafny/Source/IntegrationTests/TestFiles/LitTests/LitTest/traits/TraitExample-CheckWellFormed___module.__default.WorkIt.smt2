(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U T@U) Bool)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@126 (T@U) Bool)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@128 (T@U) Bool)
(declare-fun $generated@@136 () Int)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@0) 0))
(assert (= ($generated@@27 $generated@@0) $generated@@1))
(assert (= ($generated@@10 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@32 $generated@@30 $generated@@33) ($generated@@28 $generated@@29 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@30 $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@36 $generated@@34 $generated@@37) ($generated@@28 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@28 $generated@@29 $generated@@36 $generated@@34 $generated@@37))
 :pattern ( ($generated@@28 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (= ($generated@@26 $generated@@38) 0))
(assert (= ($generated@@39 $generated@@6 $generated@@9) $generated@@38))
(assert ($generated@@40 $generated@@38))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@10 $generated@@44) 4)) (= ($generated@@10 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@10 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@67 $generated@@31 $generated@@68)  (or (= $generated@@67 $generated@@41) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@67) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@67 $generated@@31 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@69 $generated@@35 $generated@@70)  (or (= $generated@@69 $generated@@41) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@70 $generated@@69) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@69 $generated@@35 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@72 $generated@@74) $generated@@0))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@73 $generated@@74) $generated@@0))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@73 $generated@@74) $generated@@0))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 ($generated@@42 $generated@@77 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@42 $generated@@77 $generated@@76))
)))
(assert (= ($generated@@10 $generated@@79) 7))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@78 $generated@@79 $generated@@83 ($generated@@80 $generated@@84)) (forall (($generated@@85 T@U) ) (!  (=> ($generated@@81 $generated@@83 $generated@@85) ($generated@@82 $generated@@85 $generated@@84))
 :pattern ( ($generated@@81 $generated@@83 $generated@@85))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@83 ($generated@@80 $generated@@84)))
)))
(assert ($generated@@40 $generated@@0))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@86 ($generated@@75 $generated@@90 $generated@@87) $generated@@88 $generated@@89) ($generated@@28 $generated@@90 $generated@@87 $generated@@88 $generated@@89))
 :pattern ( ($generated@@86 ($generated@@75 $generated@@90 $generated@@87) $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> ($generated@@71 $generated@@91 $generated@@92) (=> ($generated@@86 $generated@@93 $generated@@94 $generated@@91) ($generated@@86 $generated@@93 $generated@@94 $generated@@92)))
 :pattern ( ($generated@@71 $generated@@91 $generated@@92) ($generated@@86 $generated@@93 $generated@@94 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (!  (=> ($generated@@71 $generated@@95 $generated@@96) (=> ($generated@@28 $generated@@99 $generated@@97 $generated@@98 $generated@@95) ($generated@@28 $generated@@99 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@71 $generated@@95 $generated@@96) ($generated@@28 $generated@@99 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@82 $generated@@100 $generated@@31) (and (= ($generated@@75 $generated@@29 ($generated@@42 $generated@@29 $generated@@100)) $generated@@100) ($generated@@78 $generated@@29 ($generated@@42 $generated@@29 $generated@@100) $generated@@31)))
 :pattern ( ($generated@@82 $generated@@100 $generated@@31))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@82 $generated@@101 $generated@@30) (and (= ($generated@@75 $generated@@29 ($generated@@42 $generated@@29 $generated@@101)) $generated@@101) ($generated@@78 $generated@@29 ($generated@@42 $generated@@29 $generated@@101) $generated@@30)))
 :pattern ( ($generated@@82 $generated@@101 $generated@@30))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@82 $generated@@102 $generated@@34) (and (= ($generated@@75 $generated@@29 ($generated@@42 $generated@@29 $generated@@102)) $generated@@102) ($generated@@78 $generated@@29 ($generated@@42 $generated@@29 $generated@@102) $generated@@34)))
 :pattern ( ($generated@@82 $generated@@102 $generated@@34))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@82 $generated@@103 $generated@@35) (and (= ($generated@@75 $generated@@29 ($generated@@42 $generated@@29 $generated@@103)) $generated@@103) ($generated@@78 $generated@@29 ($generated@@42 $generated@@29 $generated@@103) $generated@@35)))
 :pattern ( ($generated@@82 $generated@@103 $generated@@35))
)))
(assert (forall (($generated@@104 T@U) ) (! (= ($generated@@78 $generated@@29 $generated@@104 $generated@@30)  (and ($generated@@78 $generated@@29 $generated@@104 $generated@@31) (or (not (= $generated@@104 $generated@@41)) (not true))))
 :pattern ( ($generated@@78 $generated@@29 $generated@@104 $generated@@30))
 :pattern ( ($generated@@78 $generated@@29 $generated@@104 $generated@@31))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@78 $generated@@29 $generated@@105 $generated@@34)  (and ($generated@@78 $generated@@29 $generated@@105 $generated@@35) (or (not (= $generated@@105 $generated@@41)) (not true))))
 :pattern ( ($generated@@78 $generated@@29 $generated@@105 $generated@@34))
 :pattern ( ($generated@@78 $generated@@29 $generated@@105 $generated@@35))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (or (not (= $generated@@106 $generated@@108)) (not true)) (=> (and ($generated@@71 $generated@@106 $generated@@107) ($generated@@71 $generated@@107 $generated@@108)) ($generated@@71 $generated@@106 $generated@@108)))
 :pattern ( ($generated@@71 $generated@@106 $generated@@107) ($generated@@71 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (and (= ($generated@@109 ($generated@@39 $generated@@110 $generated@@111)) $generated@@110) (= ($generated@@27 ($generated@@39 $generated@@110 $generated@@111)) $generated@@111))
 :pattern ( ($generated@@39 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@82 ($generated@@75 $generated@@114 $generated@@112) $generated@@113) ($generated@@78 $generated@@114 $generated@@112 $generated@@113))
 :pattern ( ($generated@@82 ($generated@@75 $generated@@114 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@28 $generated@@79 $generated@@115 ($generated@@80 $generated@@116) $generated@@117) (forall (($generated@@118 T@U) ) (!  (=> ($generated@@81 $generated@@115 $generated@@118) ($generated@@86 $generated@@118 $generated@@116 $generated@@117))
 :pattern ( ($generated@@81 $generated@@115 $generated@@118))
)))
 :pattern ( ($generated@@28 $generated@@79 $generated@@115 ($generated@@80 $generated@@116) $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! ($generated@@78 $generated@@29 $generated@@119 $generated@@31)
 :pattern ( ($generated@@78 $generated@@29 $generated@@119 $generated@@31))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@120 ($generated@@80 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@80 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@80 $generated@@123)) $generated)
 :pattern ( ($generated@@80 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@42 $generated@@125 ($generated@@75 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@75 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (and (and (and ($generated@@128 $generated@@129) ($generated@@128 $generated@@130)) (and (or (not (= $generated@@131 $generated@@41)) (not true)) ($generated@@78 $generated@@29 $generated@@131 $generated@@34))) (and ($generated@@126 $generated@@129) ($generated@@71 $generated@@129 $generated@@130))) (=> (forall (($generated@@132 T@U) ($generated@@133 T@U) )  (=> (and (or (not (= $generated@@132 $generated@@41)) (not true)) (or (= $generated@@132 $generated@@131) ($generated@@81 ($generated@@42 $generated@@79 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@129 $generated@@131) $generated@@38)) ($generated@@75 $generated@@29 $generated@@132)))) (= ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@129 $generated@@132) $generated@@133) ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@130 $generated@@132) $generated@@133)))) (= ($generated@@127 $generated@@129 $generated@@131) ($generated@@127 $generated@@130 $generated@@131))))
 :pattern ( ($generated@@126 $generated@@129) ($generated@@71 $generated@@129 $generated@@130) ($generated@@127 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@82 $generated@@134 ($generated@@80 $generated@@135)) (and (= ($generated@@75 $generated@@79 ($generated@@42 $generated@@79 $generated@@134)) $generated@@134) ($generated@@78 $generated@@79 ($generated@@42 $generated@@79 $generated@@134) ($generated@@80 $generated@@135))))
 :pattern ( ($generated@@82 $generated@@134 ($generated@@80 $generated@@135)))
)))
(assert  (=> (<= 2 $generated@@136) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@137 $generated@@138 $generated@@139) (and (< 2 $generated@@136) (and ($generated@@128 $generated@@138) (and (or (not (= $generated@@139 $generated@@41)) (not true)) (and ($generated@@78 $generated@@29 $generated@@139 $generated@@34) ($generated@@28 $generated@@29 $generated@@139 $generated@@34 $generated@@138)))))) (=> ($generated@@127 $generated@@138 $generated@@139) ($generated@@81 ($generated@@42 $generated@@79 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@138 $generated@@139) $generated@@38)) ($generated@@75 $generated@@29 $generated@@139))))
 :pattern ( ($generated@@127 $generated@@138 $generated@@139))
))))
(assert (= ($generated@@122 $generated@@31) $generated@@2))
(assert (= ($generated@@140 $generated@@31) $generated@@7))
(assert (= ($generated@@122 $generated@@30) $generated@@3))
(assert (= ($generated@@140 $generated@@30) $generated@@7))
(assert (= ($generated@@122 $generated@@34) $generated@@4))
(assert (= ($generated@@140 $generated@@34) $generated@@8))
(assert (= ($generated@@122 $generated@@35) $generated@@5))
(assert (= ($generated@@140 $generated@@35) $generated@@8))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@78 $generated@@29 $generated@@143 $generated@@35)  (or (= $generated@@143 $generated@@41) ($generated@@141 ($generated@@142 $generated@@143))))
 :pattern ( ($generated@@78 $generated@@29 $generated@@143 $generated@@35))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (and ($generated@@128 $generated@@144) (and (or (not (= $generated@@145 $generated@@41)) (not true)) ($generated@@78 $generated@@29 $generated@@145 $generated@@35))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@144 $generated@@145) $generated@@0)))) ($generated@@28 $generated@@79 ($generated@@42 $generated@@79 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@144 $generated@@145) $generated@@38)) ($generated@@80 $generated@@30) $generated@@144))
 :pattern ( ($generated@@42 $generated@@79 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@144 $generated@@145) $generated@@38)))
)))
(assert  (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@146 $generated@@149 $generated@@150 $generated@@151 ($generated@@148 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@154 $generated@@155) $generated@@152)
 :weight 0
)) (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@146 $generated@@156 $generated@@157 $generated@@158 ($generated@@148 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@163 $generated@@164) ($generated@@146 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@163 $generated@@164)))
 :weight 0
)) (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@171 $generated@@173) (= ($generated@@146 $generated@@165 $generated@@166 $generated@@167 ($generated@@148 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@146 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)))))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@15 ($generated@@146 $generated@@29 $generated@@44 $generated@@11 ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))  (=> (and (or (not (= $generated@@178 $generated@@174)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@175 $generated@@178) $generated@@176)))) ($generated@@81 $generated@@177 ($generated@@75 $generated@@29 $generated@@178))))
 :pattern ( ($generated@@146 $generated@@29 $generated@@44 $generated@@11 ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@177) $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@128 $generated@@180) (and (or (not (= $generated@@181 $generated@@41)) (not true)) ($generated@@78 $generated@@29 $generated@@181 $generated@@35))) ($generated@@78 $generated@@79 ($generated@@42 $generated@@79 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@180 $generated@@181) $generated@@38)) ($generated@@80 $generated@@30)))
 :pattern ( ($generated@@42 $generated@@79 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@180 $generated@@181) $generated@@38)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@185  (=> (= $generated@@182 ($generated@@147 $generated@@41 $generated@@183 $generated@@0 ($generated@@42 $generated@@79 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@183 $generated@@184) $generated@@38)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= $generated@@184 $generated@@41)) (not true))) (=> (or (not (= $generated@@184 $generated@@41)) (not true)) (=> (and (and ($generated@@86 ($generated@@75 $generated@@29 $generated@@184) $generated@@35 $generated@@183) ($generated@@137 $generated@@183 $generated@@184)) (and ($generated@@127 $generated@@183 $generated@@184) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= $generated@@184 $generated@@41)) (not true))))))))
(let (($generated@@186  (=> (and ($generated@@128 $generated@@183) ($generated@@126 $generated@@183)) (=> (and (and ($generated@@78 $generated@@29 $generated@@184 $generated@@34) ($generated@@28 $generated@@29 $generated@@184 $generated@@34 $generated@@183)) (and (= 4 $generated@@136) (= (ControlFlow 0 4) 2))) $generated@@185))))
$generated@@186)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
