(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 () Int)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@82 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@146 (T@U T@U T@U) Bool)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@31) 3))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@27 $generated@@33 $generated@@34 $generated@@35 $generated@@36) (and (< 0 $generated@@24) (and (and ($generated@@28 $generated@@35) (or (not (= $generated@@36 $generated@@29)) (not true))) ($generated@@30 $generated@@31 $generated@@36 ($generated@@32 $generated@@33 $generated@@34) $generated@@35)))) ($generated@@25 ($generated@@26 $generated@@33 $generated@@34 $generated@@35 $generated@@36) $generated@@33 $generated@@35))
 :pattern ( ($generated@@25 ($generated@@26 $generated@@33 $generated@@34 $generated@@35 $generated@@36) $generated@@33 $generated@@35))
))))
(assert (= ($generated@@22 $generated@@37) 0))
(assert (= ($generated@@38 $generated@@3 $generated@@5) $generated@@37))
(assert  (not ($generated@@39 $generated@@37)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@40 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@40 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@44 $generated@@31 $generated@@48 ($generated@@32 $generated@@46 $generated@@47))  (and ($generated@@44 $generated@@31 $generated@@48 ($generated@@45 $generated@@46 $generated@@47)) (or (not (= $generated@@48 $generated@@29)) (not true))))
 :pattern ( ($generated@@44 $generated@@31 $generated@@48 ($generated@@32 $generated@@46 $generated@@47)))
 :pattern ( ($generated@@44 $generated@@31 $generated@@48 ($generated@@45 $generated@@46 $generated@@47)))
)))
(assert ($generated@@39 $generated))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@25 ($generated@@41 $generated@@52 $generated@@49) $generated@@50 $generated@@51) ($generated@@30 $generated@@52 $generated@@49 $generated@@50 $generated@@51))
 :pattern ( ($generated@@25 ($generated@@41 $generated@@52 $generated@@49) $generated@@50 $generated@@51))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@61 T@T) ($generated@@62 T@T) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@53 $generated@@61 $generated@@62 ($generated@@58 $generated@@61 $generated@@62 $generated@@64 $generated@@65 $generated@@63) $generated@@65) $generated@@63)
 :weight 0
)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (or (= $generated@@70 $generated@@71) (= ($generated@@53 $generated@@66 $generated@@67 ($generated@@58 $generated@@66 $generated@@67 $generated@@69 $generated@@70 $generated@@68) $generated@@71) ($generated@@53 $generated@@66 $generated@@67 $generated@@69 $generated@@71)))
 :weight 0
))) (= ($generated@@6 $generated@@54) 4)) (= ($generated@@6 $generated@@55) 5)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (= ($generated@@6 ($generated@@56 $generated@@72 $generated@@73)) 6))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@74 $generated@@75)) $generated@@74)
 :pattern ( ($generated@@56 $generated@@74 $generated@@75))
))) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (! (= ($generated@@60 ($generated@@56 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@56 $generated@@76 $generated@@77))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and ($generated@@28 $generated@@80) (and (or (not (= $generated@@81 $generated@@29)) (not true)) ($generated@@44 $generated@@31 $generated@@81 ($generated@@45 $generated@@78 $generated@@79)))) ($generated@@57 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@81) $generated@@37) $generated@@78))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@80 $generated@@81) $generated@@37) ($generated@@45 $generated@@78 $generated@@79))
)))
(assert  (and (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@82 $generated@@85 $generated@@86 $generated@@87 ($generated@@84 $generated@@85 $generated@@86 $generated@@87 $generated@@89 $generated@@90 $generated@@91 $generated@@88) $generated@@90 $generated@@91) $generated@@88)
 :weight 0
)) (and (forall (($generated@@92 T@T) ($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (or (= $generated@@97 $generated@@99) (= ($generated@@82 $generated@@92 $generated@@93 $generated@@94 ($generated@@84 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@98 $generated@@95) $generated@@99 $generated@@100) ($generated@@82 $generated@@92 $generated@@93 $generated@@94 $generated@@96 $generated@@99 $generated@@100)))
 :weight 0
)) (forall (($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@82 $generated@@101 $generated@@102 $generated@@103 ($generated@@84 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@107 $generated@@104) $generated@@108 $generated@@109) ($generated@@82 $generated@@101 $generated@@102 $generated@@103 $generated@@105 $generated@@108 $generated@@109)))
 :weight 0
)))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@11 ($generated@@82 $generated@@31 $generated@@54 $generated@@7 ($generated@@83 $generated@@110 $generated@@111 $generated@@112 $generated@@113) $generated@@114 $generated@@115))  (=> (and (or (not (= $generated@@114 $generated@@110)) (not true)) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@111 $generated@@114) $generated@@112)))) (= $generated@@114 $generated@@113)))
 :pattern ( ($generated@@82 $generated@@31 $generated@@54 $generated@@7 ($generated@@83 $generated@@110 $generated@@111 $generated@@112 $generated@@113) $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@118 ($generated@@32 $generated@@116 $generated@@117) $generated@@119) ($generated@@30 $generated@@31 $generated@@118 ($generated@@45 $generated@@116 $generated@@117) $generated@@119))
 :pattern ( ($generated@@30 $generated@@31 $generated@@118 ($generated@@32 $generated@@116 $generated@@117) $generated@@119))
 :pattern ( ($generated@@30 $generated@@31 $generated@@118 ($generated@@45 $generated@@116 $generated@@117) $generated@@119))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or ($generated@@27 $generated@@120 $generated@@121 $generated@@122 $generated@@123) (and (< 0 $generated@@24) (and ($generated@@28 $generated@@122) (and (or (not (= $generated@@123 $generated@@29)) (not true)) (and ($generated@@44 $generated@@31 $generated@@123 ($generated@@32 $generated@@120 $generated@@121)) ($generated@@30 $generated@@31 $generated@@123 ($generated@@32 $generated@@120 $generated@@121) $generated@@122)))))) (= ($generated@@26 $generated@@120 $generated@@121 $generated@@122 $generated@@123) ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@122 $generated@@123) $generated@@37)))
 :pattern ( ($generated@@26 $generated@@120 $generated@@121 $generated@@122 $generated@@123) ($generated@@28 $generated@@122))
))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@126 ($generated@@45 $generated@@124 $generated@@125) $generated@@127)  (or (= $generated@@126 $generated@@29) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@127 $generated@@126) $generated)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@126 ($generated@@45 $generated@@124 $generated@@125) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (and (= ($generated@@128 ($generated@@38 $generated@@129 $generated@@130)) $generated@@129) (= ($generated@@23 ($generated@@38 $generated@@129 $generated@@130)) $generated@@130))
 :pattern ( ($generated@@38 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@57 ($generated@@41 $generated@@133 $generated@@131) $generated@@132) ($generated@@44 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@57 ($generated@@41 $generated@@133 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@134 ($generated@@32 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@32 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@137 ($generated@@32 $generated@@138 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@32 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@140 ($generated@@45 $generated@@141 $generated@@142)) $generated@@141)
 :pattern ( ($generated@@45 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@143 ($generated@@45 $generated@@144 $generated@@145)) $generated@@145)
 :pattern ( ($generated@@45 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@44 $generated@@31 $generated@@150 ($generated@@45 $generated@@148 $generated@@149))  (or (= $generated@@150 $generated@@29) ($generated@@146 ($generated@@147 $generated@@150) $generated@@148 $generated@@149)))
 :pattern ( ($generated@@44 $generated@@31 $generated@@150 ($generated@@45 $generated@@148 $generated@@149)))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@40 $generated@@152 ($generated@@41 $generated@@152 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@41 $generated@@152 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@155) (and (or (not (= $generated@@156 $generated@@29)) (not true)) ($generated@@44 $generated@@31 $generated@@156 ($generated@@45 $generated@@153 $generated@@154)))) ($generated@@11 ($generated@@40 $generated@@7 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@155 $generated@@156) $generated)))) ($generated@@25 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@155 $generated@@156) $generated@@37) $generated@@153 $generated@@155))
 :pattern ( ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@155 $generated@@156) $generated@@37) ($generated@@45 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@57 $generated@@159 ($generated@@32 $generated@@157 $generated@@158)) (and (= ($generated@@41 $generated@@31 ($generated@@40 $generated@@31 $generated@@159)) $generated@@159) ($generated@@44 $generated@@31 ($generated@@40 $generated@@31 $generated@@159) ($generated@@32 $generated@@157 $generated@@158))))
 :pattern ( ($generated@@57 $generated@@159 ($generated@@32 $generated@@157 $generated@@158)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@57 $generated@@162 ($generated@@45 $generated@@160 $generated@@161)) (and (= ($generated@@41 $generated@@31 ($generated@@40 $generated@@31 $generated@@162)) $generated@@162) ($generated@@44 $generated@@31 ($generated@@40 $generated@@31 $generated@@162) ($generated@@45 $generated@@160 $generated@@161))))
 :pattern ( ($generated@@57 $generated@@162 ($generated@@45 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (and (= ($generated@@163 ($generated@@32 $generated@@165 $generated@@166)) $generated@@1) (= ($generated@@164 ($generated@@32 $generated@@165 $generated@@166)) $generated@@4))
 :pattern ( ($generated@@32 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (= ($generated@@163 ($generated@@45 $generated@@167 $generated@@168)) $generated@@2) (= ($generated@@164 ($generated@@45 $generated@@167 $generated@@168)) $generated@@4))
 :pattern ( ($generated@@45 $generated@@167 $generated@@168))
)))
(assert  (=> (<= 0 $generated@@24) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> (or ($generated@@27 $generated@@169 $generated@@170 $generated@@171 $generated@@172) (and (< 0 $generated@@24) (and ($generated@@28 $generated@@171) (and (or (not (= $generated@@172 $generated@@29)) (not true)) (and ($generated@@44 $generated@@31 $generated@@172 ($generated@@32 $generated@@169 $generated@@170)) ($generated@@30 $generated@@31 $generated@@172 ($generated@@32 $generated@@169 $generated@@170) $generated@@171)))))) ($generated@@57 ($generated@@26 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@169))
 :pattern ( ($generated@@26 $generated@@169 $generated@@170 $generated@@171 $generated@@172))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@180  (=> (and (and (= $generated@@173 ($generated@@11 ($generated@@82 $generated@@31 $generated@@54 $generated@@7 $generated@@174 $generated@@175 $generated@@37))) (= ($generated@@26 $generated@@176 $generated@@177 $generated@@178 $generated@@175) ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@31 ($generated@@56 $generated@@54 $generated@@55) $generated@@178 $generated@@175) $generated@@37))) (and ($generated@@57 ($generated@@26 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@176) (= (ControlFlow 0 3) (- 0 2)))) $generated@@173)))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@174 ($generated@@83 $generated@@29 $generated@@178 $generated $generated@@175)) (and (=> (= (ControlFlow 0 4) 1) $generated@@181) (=> (= (ControlFlow 0 4) 3) $generated@@180)))))
(let (($generated@@183  (=> (and ($generated@@28 $generated@@178) ($generated@@179 $generated@@178)) (=> (and (and (or (not (= $generated@@175 $generated@@29)) (not true)) (and ($generated@@44 $generated@@31 $generated@@175 ($generated@@32 $generated@@176 $generated@@177)) ($generated@@30 $generated@@31 $generated@@175 ($generated@@32 $generated@@176 $generated@@177) $generated@@178))) (and (= 0 $generated@@24) (= (ControlFlow 0 5) 4))) $generated@@182))))
$generated@@183)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
