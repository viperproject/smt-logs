(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U T@U) T@U)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 () T@T)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U T@U) Bool)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@T T@T) T@T)
(declare-fun $generated@@79 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@T) T@T)
(declare-fun $generated@@81 (T@T) T@T)
(declare-fun $generated@@104 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (! (= ($generated@@23 ($generated@@22 $generated@@24 $generated@@25 $generated@@26)) $generated@@24)
 :pattern ( ($generated@@22 $generated@@24 $generated@@25 $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@27 ($generated@@22 $generated@@28 $generated@@29 $generated@@30)) $generated@@29)
 :pattern ( ($generated@@22 $generated@@28 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@31 ($generated@@22 $generated@@32 $generated@@33 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@22 $generated@@32 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@35 $generated@@37 $generated@@38 $generated@@39)) $generated@@37)
 :pattern ( ($generated@@35 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 ($generated@@35 $generated@@41 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@35 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@44 ($generated@@35 $generated@@45 $generated@@46 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@35 $generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (and (= ($generated@@48 ($generated@@22 $generated@@50 $generated@@51 $generated@@52)) $generated@@2) (= ($generated@@49 ($generated@@22 $generated@@50 $generated@@51 $generated@@52)) $generated@@5))
 :pattern ( ($generated@@22 $generated@@50 $generated@@51 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (and (= ($generated@@48 ($generated@@35 $generated@@53 $generated@@54 $generated@@55)) $generated@@3) (= ($generated@@49 ($generated@@35 $generated@@53 $generated@@54 $generated@@55)) $generated@@5))
 :pattern ( ($generated@@35 $generated@@53 $generated@@54 $generated@@55))
)))
(assert (= ($generated@@6 $generated@@58) 3))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@56 $generated@@64 ($generated@@22 $generated@@61 $generated@@62 $generated@@63)) (and (= ($generated@@57 $generated@@58 ($generated@@59 $generated@@58 $generated@@64)) $generated@@64) ($generated@@60 $generated@@58 ($generated@@59 $generated@@58 $generated@@64) ($generated@@22 $generated@@61 $generated@@62 $generated@@63))))
 :pattern ( ($generated@@56 $generated@@64 ($generated@@22 $generated@@61 $generated@@62 $generated@@63)))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@56 $generated@@68 ($generated@@35 $generated@@65 $generated@@66 $generated@@67)) (and (= ($generated@@57 $generated@@58 ($generated@@59 $generated@@58 $generated@@68)) $generated@@68) ($generated@@60 $generated@@58 ($generated@@59 $generated@@58 $generated@@68) ($generated@@35 $generated@@65 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@56 $generated@@68 ($generated@@35 $generated@@65 $generated@@66 $generated@@67)))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@60 $generated@@58 $generated@@73 ($generated@@35 $generated@@70 $generated@@71 $generated@@72))  (and ($generated@@60 $generated@@58 $generated@@73 ($generated@@22 $generated@@70 $generated@@71 $generated@@72)) (or (not (= $generated@@73 $generated@@69)) (not true))))
 :pattern ( ($generated@@60 $generated@@58 $generated@@73 ($generated@@35 $generated@@70 $generated@@71 $generated@@72)))
 :pattern ( ($generated@@60 $generated@@58 $generated@@73 ($generated@@22 $generated@@70 $generated@@71 $generated@@72)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@82 T@T) ($generated@@83 T@T) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@75 $generated@@82 $generated@@83 ($generated@@79 $generated@@82 $generated@@83 $generated@@85 $generated@@86 $generated@@84) $generated@@86) $generated@@84)
 :weight 0
)) (forall (($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (= $generated@@91 $generated@@92) (= ($generated@@75 $generated@@87 $generated@@88 ($generated@@79 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@89) $generated@@92) ($generated@@75 $generated@@87 $generated@@88 $generated@@90 $generated@@92)))
 :weight 0
))) (= ($generated@@6 $generated@@76) 4)) (= ($generated@@6 $generated@@77) 5)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (= ($generated@@6 ($generated@@78 $generated@@93 $generated@@94)) 6))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@80 ($generated@@78 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@78 $generated@@95 $generated@@96))
))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@81 ($generated@@78 $generated@@97 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@78 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@74 $generated@@99 $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@11 ($generated@@59 $generated@@7 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@58 ($generated@@78 $generated@@76 $generated@@77) $generated@@99 $generated@@101) $generated))) ($generated@@11 ($generated@@59 $generated@@7 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@58 ($generated@@78 $generated@@76 $generated@@77) $generated@@100 $generated@@101) $generated))))
 :pattern ( ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@58 ($generated@@78 $generated@@76 $generated@@77) $generated@@100 $generated@@101) $generated))
)))
 :pattern ( ($generated@@74 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@57 $generated@@103 ($generated@@59 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@59 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) ($generated@@104 ($generated@@22 $generated@@105 $generated@@106 $generated@@107) $generated@@105 $generated@@107)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@60 $generated@@58 $generated@@112 ($generated@@108 $generated@@110 $generated@@111))  (and ($generated@@60 $generated@@58 $generated@@112 ($generated@@109 $generated@@110 $generated@@111)) (or (not (= $generated@@112 $generated@@69)) (not true))))
 :pattern ( ($generated@@60 $generated@@58 $generated@@112 ($generated@@108 $generated@@110 $generated@@111)))
 :pattern ( ($generated@@60 $generated@@58 $generated@@112 ($generated@@109 $generated@@110 $generated@@111)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@113 ($generated@@57 $generated@@118 $generated@@115) $generated@@116 $generated@@117) ($generated@@114 $generated@@118 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@113 ($generated@@57 $generated@@118 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> ($generated@@74 $generated@@119 $generated@@120) (=> ($generated@@113 $generated@@121 $generated@@122 $generated@@119) ($generated@@113 $generated@@121 $generated@@122 $generated@@120)))
 :pattern ( ($generated@@74 $generated@@119 $generated@@120) ($generated@@113 $generated@@121 $generated@@122 $generated@@119))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@T) ) (!  (=> ($generated@@74 $generated@@123 $generated@@124) (=> ($generated@@114 $generated@@127 $generated@@125 $generated@@126 $generated@@123) ($generated@@114 $generated@@127 $generated@@125 $generated@@126 $generated@@124)))
 :pattern ( ($generated@@74 $generated@@123 $generated@@124) ($generated@@114 $generated@@127 $generated@@125 $generated@@126 $generated@@123))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@114 $generated@@58 $generated@@130 ($generated@@108 $generated@@128 $generated@@129) $generated@@131) ($generated@@114 $generated@@58 $generated@@130 ($generated@@109 $generated@@128 $generated@@129) $generated@@131))
 :pattern ( ($generated@@114 $generated@@58 $generated@@130 ($generated@@108 $generated@@128 $generated@@129) $generated@@131))
 :pattern ( ($generated@@114 $generated@@58 $generated@@130 ($generated@@109 $generated@@128 $generated@@129) $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@114 $generated@@58 $generated@@135 ($generated@@22 $generated@@132 $generated@@133 $generated@@134) $generated@@136)  (or (= $generated@@135 $generated@@69) ($generated@@11 ($generated@@59 $generated@@7 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@58 ($generated@@78 $generated@@76 $generated@@77) $generated@@136 $generated@@135) $generated)))))
 :pattern ( ($generated@@114 $generated@@58 $generated@@135 ($generated@@22 $generated@@132 $generated@@133 $generated@@134) $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> ($generated@@60 $generated@@58 $generated@@140 ($generated@@22 $generated@@137 $generated@@138 $generated@@139)) ($generated@@60 $generated@@58 $generated@@140 ($generated@@109 $generated@@137 $generated@@139)))
 :pattern ( ($generated@@60 $generated@@58 $generated@@140 ($generated@@22 $generated@@137 $generated@@138 $generated@@139)))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@56 $generated@@144 ($generated@@22 $generated@@141 $generated@@142 $generated@@143)) ($generated@@56 $generated@@144 ($generated@@109 $generated@@141 $generated@@143)))
 :pattern ( ($generated@@56 $generated@@144 ($generated@@22 $generated@@141 $generated@@142 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@114 $generated@@58 $generated@@147 ($generated@@109 $generated@@145 $generated@@146) $generated@@148)  (or (= $generated@@147 $generated@@69) ($generated@@11 ($generated@@59 $generated@@7 ($generated@@75 $generated@@76 $generated@@77 ($generated@@75 $generated@@58 ($generated@@78 $generated@@76 $generated@@77) $generated@@148 $generated@@147) $generated)))))
 :pattern ( ($generated@@114 $generated@@58 $generated@@147 ($generated@@109 $generated@@145 $generated@@146) $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@113 $generated@@153 ($generated@@22 $generated@@150 $generated@@151 $generated@@152) $generated@@154) ($generated@@149 $generated@@154)) ($generated@@113 $generated@@153 ($generated@@109 $generated@@150 $generated@@152) $generated@@154))
 :pattern ( ($generated@@113 $generated@@153 ($generated@@22 $generated@@150 $generated@@151 $generated@@152) $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (or (not (= $generated@@155 $generated@@157)) (not true)) (=> (and ($generated@@74 $generated@@155 $generated@@156) ($generated@@74 $generated@@156 $generated@@157)) ($generated@@74 $generated@@155 $generated@@157)))
 :pattern ( ($generated@@74 $generated@@155 $generated@@156) ($generated@@74 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@56 ($generated@@57 $generated@@160 $generated@@158) $generated@@159) ($generated@@60 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@56 ($generated@@57 $generated@@160 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@161 ($generated@@109 $generated@@162 $generated@@163)) $generated@@162)
 :pattern ( ($generated@@109 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@109 $generated@@165 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@109 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@167 ($generated@@108 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@108 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@170 ($generated@@108 $generated@@171 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@108 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@60 $generated@@58 $generated@@176 ($generated@@109 $generated@@174 $generated@@175))  (or (= $generated@@176 $generated@@69) ($generated@@104 ($generated@@173 $generated@@176) $generated@@174 $generated@@175)))
 :pattern ( ($generated@@60 $generated@@58 $generated@@176 ($generated@@109 $generated@@174 $generated@@175)))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@59 $generated@@178 ($generated@@57 $generated@@178 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@57 $generated@@178 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@56 $generated@@181 ($generated@@109 $generated@@179 $generated@@180)) (and (= ($generated@@57 $generated@@58 ($generated@@59 $generated@@58 $generated@@181)) $generated@@181) ($generated@@60 $generated@@58 ($generated@@59 $generated@@58 $generated@@181) ($generated@@109 $generated@@179 $generated@@180))))
 :pattern ( ($generated@@56 $generated@@181 ($generated@@109 $generated@@179 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@56 $generated@@184 ($generated@@108 $generated@@182 $generated@@183)) (and (= ($generated@@57 $generated@@58 ($generated@@59 $generated@@58 $generated@@184)) $generated@@184) ($generated@@60 $generated@@58 ($generated@@59 $generated@@58 $generated@@184) ($generated@@108 $generated@@182 $generated@@183))))
 :pattern ( ($generated@@56 $generated@@184 ($generated@@108 $generated@@182 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@60 $generated@@58 $generated@@188 ($generated@@22 $generated@@185 $generated@@186 $generated@@187))  (or (= $generated@@188 $generated@@69) (= ($generated@@173 $generated@@188) ($generated@@22 $generated@@185 $generated@@186 $generated@@187))))
 :pattern ( ($generated@@60 $generated@@58 $generated@@188 ($generated@@22 $generated@@185 $generated@@186 $generated@@187)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@114 $generated@@58 $generated@@192 ($generated@@35 $generated@@189 $generated@@190 $generated@@191) $generated@@193) ($generated@@114 $generated@@58 $generated@@192 ($generated@@22 $generated@@189 $generated@@190 $generated@@191) $generated@@193))
 :pattern ( ($generated@@114 $generated@@58 $generated@@192 ($generated@@35 $generated@@189 $generated@@190 $generated@@191) $generated@@193))
 :pattern ( ($generated@@114 $generated@@58 $generated@@192 ($generated@@22 $generated@@189 $generated@@190 $generated@@191) $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (!  (and (= ($generated@@48 ($generated@@109 $generated@@194 $generated@@195)) $generated@@0) (= ($generated@@49 ($generated@@109 $generated@@194 $generated@@195)) $generated@@4))
 :pattern ( ($generated@@109 $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (and (= ($generated@@48 ($generated@@108 $generated@@196 $generated@@197)) $generated@@1) (= ($generated@@49 ($generated@@108 $generated@@196 $generated@@197)) $generated@@4))
 :pattern ( ($generated@@108 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@114 $generated@@58 $generated@@201 ($generated@@22 $generated@@198 $generated@@199 $generated@@200) $generated@@202) ($generated@@114 $generated@@58 $generated@@201 ($generated@@109 $generated@@198 $generated@@200) $generated@@202))
 :pattern ( ($generated@@114 $generated@@58 $generated@@201 ($generated@@22 $generated@@198 $generated@@199 $generated@@200) $generated@@202))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) Bool)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@214  (=> (and (= $generated@@203 $generated@@204) (= $generated@@205 $generated@@206)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@215 T@U) ($generated@@216 T@U) ) true)) (=> (forall (($generated@@217 T@U) ($generated@@218 T@U) ) true) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@219 T@U) ($generated@@220 T@U) ) true)))))))
(let (($generated@@221  (=> (and ($generated@@149 $generated@@207) ($generated@@208 $generated@@207)) (=> (and (and (and (or (not (= $generated@@209 $generated@@69)) (not true)) (and ($generated@@60 $generated@@58 $generated@@209 ($generated@@35 $generated@@204 $generated@@210 $generated@@206)) ($generated@@114 $generated@@58 $generated@@209 ($generated@@35 $generated@@204 $generated@@210 $generated@@206) $generated@@207))) (and ($generated@@56 $generated@@211 $generated@@204) ($generated@@113 $generated@@211 $generated@@204 $generated@@207))) (and (and ($generated@@56 $generated@@212 $generated@@206) ($generated@@113 $generated@@212 $generated@@206 $generated@@207)) (and (= 2 $generated@@213) (= (ControlFlow 0 4) 2)))) $generated@@214))))
$generated@@221)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
