(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@61 () T@T)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@T T@T) T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@65 (T@T) T@T)
(declare-fun $generated@@66 (T@T) T@T)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@125 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@167 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert ($generated@@31 $generated@@32))
(assert ($generated@@31 $generated@@33))
(assert (= ($generated@@15 $generated@@35) 3))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@38 $generated@@32)  (or (= $generated@@38 $generated@@36) (= ($generated@@37 $generated@@38) $generated@@32)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@38 $generated@@32))
)))
(assert (forall (($generated@@39 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@39 $generated@@33)  (or (= $generated@@39 $generated@@36) (= ($generated@@37 $generated@@39) $generated@@33)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@39 $generated@@33))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@43 $generated@@41 $generated@@44) ($generated@@40 $generated@@35 $generated@@43 $generated@@42 $generated@@44))
 :pattern ( ($generated@@40 $generated@@35 $generated@@43 $generated@@41 $generated@@44))
 :pattern ( ($generated@@40 $generated@@35 $generated@@43 $generated@@42 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@47 $generated@@45 $generated@@48) ($generated@@40 $generated@@35 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@40 $generated@@35 $generated@@47 $generated@@45 $generated@@48))
 :pattern ( ($generated@@40 $generated@@35 $generated@@47 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@51 $generated@@49 $generated@@52) ($generated@@40 $generated@@35 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@40 $generated@@35 $generated@@51 $generated@@49 $generated@@52))
 :pattern ( ($generated@@40 $generated@@35 $generated@@51 $generated@@50 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@54 $generated@@53 $generated@@55) ($generated@@40 $generated@@35 $generated@@54 $generated@@32 $generated@@55))
 :pattern ( ($generated@@40 $generated@@35 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@40 $generated@@35 $generated@@54 $generated@@32 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@57 $generated@@56 $generated@@58) ($generated@@40 $generated@@35 $generated@@57 $generated@@33 $generated@@58))
 :pattern ( ($generated@@40 $generated@@35 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@40 $generated@@35 $generated@@57 $generated@@33 $generated@@58))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@60 $generated@@67 $generated@@68 ($generated@@64 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@71) $generated@@69)
 :weight 0
)) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (or (= $generated@@76 $generated@@77) (= ($generated@@60 $generated@@72 $generated@@73 ($generated@@64 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@77) ($generated@@60 $generated@@72 $generated@@73 $generated@@75 $generated@@77)))
 :weight 0
))) (= ($generated@@15 $generated@@61) 4)) (= ($generated@@15 $generated@@62) 5)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (= ($generated@@15 ($generated@@63 $generated@@78 $generated@@79)) 6))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@65 ($generated@@63 $generated@@80 $generated@@81)) $generated@@80)
 :pattern ( ($generated@@63 $generated@@80 $generated@@81))
))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@66 ($generated@@63 $generated@@82 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@63 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@84 $generated@@42 $generated@@85)  (or (= $generated@@84 $generated@@36) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@85 $generated@@84) $generated)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@84 $generated@@42 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@86 $generated@@46 $generated@@87)  (or (= $generated@@86 $generated@@36) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@87 $generated@@86) $generated)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@86 $generated@@46 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@88 $generated@@50 $generated@@89)  (or (= $generated@@88 $generated@@36) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@89 $generated@@88) $generated)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@88 $generated@@50 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@90 $generated@@32 $generated@@91)  (or (= $generated@@90 $generated@@36) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@91 $generated@@90) $generated)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@90 $generated@@32 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@40 $generated@@35 $generated@@92 $generated@@33 $generated@@93)  (or (= $generated@@92 $generated@@36) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@93 $generated@@92) $generated)))))
 :pattern ( ($generated@@40 $generated@@35 $generated@@92 $generated@@33 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@94 $generated@@95 $generated@@96) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@95 $generated@@97) $generated))) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@96 $generated@@97) $generated))))
 :pattern ( ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@96 $generated@@97) $generated))
)))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@59 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@59 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (!  (=> ($generated@@94 $generated@@101 $generated@@102) (=> ($generated@@40 $generated@@105 $generated@@103 $generated@@104 $generated@@101) ($generated@@40 $generated@@105 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@94 $generated@@101 $generated@@102) ($generated@@40 $generated@@105 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@106 $generated@@41)  (and ($generated@@34 $generated@@35 $generated@@106 $generated@@42) (or (not (= $generated@@106 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@106 $generated@@41))
 :pattern ( ($generated@@34 $generated@@35 $generated@@106 $generated@@42))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@107 $generated@@45)  (and ($generated@@34 $generated@@35 $generated@@107 $generated@@46) (or (not (= $generated@@107 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@107 $generated@@45))
 :pattern ( ($generated@@34 $generated@@35 $generated@@107 $generated@@46))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@108 $generated@@49)  (and ($generated@@34 $generated@@35 $generated@@108 $generated@@50) (or (not (= $generated@@108 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@108 $generated@@49))
 :pattern ( ($generated@@34 $generated@@35 $generated@@108 $generated@@50))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@109 $generated@@53)  (and ($generated@@34 $generated@@35 $generated@@109 $generated@@32) (or (not (= $generated@@109 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@109 $generated@@53))
 :pattern ( ($generated@@34 $generated@@35 $generated@@109 $generated@@32))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@110 $generated@@56)  (and ($generated@@34 $generated@@35 $generated@@110 $generated@@33) (or (not (= $generated@@110 $generated@@36)) (not true))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@110 $generated@@56))
 :pattern ( ($generated@@34 $generated@@35 $generated@@110 $generated@@33))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> ($generated@@40 $generated@@35 $generated@@111 $generated@@50 $generated@@112) ($generated@@40 $generated@@35 $generated@@111 $generated@@46 $generated@@112))
 :pattern ( ($generated@@40 $generated@@35 $generated@@111 $generated@@50 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@40 $generated@@35 $generated@@113 $generated@@32 $generated@@114) ($generated@@40 $generated@@35 $generated@@113 $generated@@50 $generated@@114))
 :pattern ( ($generated@@40 $generated@@35 $generated@@113 $generated@@32 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@40 $generated@@35 $generated@@115 $generated@@33 $generated@@116) ($generated@@40 $generated@@35 $generated@@115 $generated@@50 $generated@@116))
 :pattern ( ($generated@@40 $generated@@35 $generated@@115 $generated@@33 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or (not (= $generated@@117 $generated@@119)) (not true)) (=> (and ($generated@@94 $generated@@117 $generated@@118) ($generated@@94 $generated@@118 $generated@@119)) ($generated@@94 $generated@@117 $generated@@119)))
 :pattern ( ($generated@@94 $generated@@117 $generated@@118) ($generated@@94 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! ($generated@@34 $generated@@35 $generated@@120 $generated@@42)
 :pattern ( ($generated@@34 $generated@@35 $generated@@120 $generated@@42))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@59 $generated@@122 ($generated@@98 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@98 $generated@@122 $generated@@121))
)))
(assert  (and (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@123 $generated@@126 $generated@@127 $generated@@128 ($generated@@125 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@131 $generated@@132) $generated@@129)
 :weight 0
)) (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@123 $generated@@133 $generated@@134 $generated@@135 ($generated@@125 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@140 $generated@@141) ($generated@@123 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@140 $generated@@141)))
 :weight 0
)) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@148 $generated@@150) (= ($generated@@123 $generated@@142 $generated@@143 $generated@@144 ($generated@@125 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@123 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)))))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 Bool) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@20 ($generated@@123 $generated@@35 $generated@@61 $generated@@16 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))  (=> (and (or (not (= $generated@@155 $generated@@151)) (not true)) ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@152 $generated@@155) $generated@@153)))) $generated@@154))
 :pattern ( ($generated@@123 $generated@@35 $generated@@61 $generated@@16 ($generated@@124 $generated@@151 $generated@@152 $generated@@153 $generated@@154) $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@157 $generated@@50) ($generated@@34 $generated@@35 $generated@@157 $generated@@46))
 :pattern ( ($generated@@34 $generated@@35 $generated@@157 $generated@@50))
)))
(assert (forall (($generated@@158 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@158 $generated@@32) ($generated@@34 $generated@@35 $generated@@158 $generated@@50))
 :pattern ( ($generated@@34 $generated@@35 $generated@@158 $generated@@32))
)))
(assert (forall (($generated@@159 T@U) ) (!  (=> ($generated@@34 $generated@@35 $generated@@159 $generated@@33) ($generated@@34 $generated@@35 $generated@@159 $generated@@50))
 :pattern ( ($generated@@34 $generated@@35 $generated@@159 $generated@@33))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@160 ($generated@@64 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@161 $generated@@162 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@161 $generated@@162) $generated@@163 $generated@@164))) ($generated@@94 $generated@@161 ($generated@@64 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@161 $generated@@162 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@161 $generated@@162) $generated@@163 $generated@@164))))
 :pattern ( ($generated@@64 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@161 $generated@@162 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@161 $generated@@162) $generated@@163 $generated@@164)))
)))
(assert (= ($generated@@165 $generated@@42) $generated@@0))
(assert (= ($generated@@166 $generated@@42) $generated@@10))
(assert (= ($generated@@165 $generated@@41) $generated@@1))
(assert (= ($generated@@166 $generated@@41) $generated@@10))
(assert (= ($generated@@165 $generated@@53) $generated@@2))
(assert (= ($generated@@166 $generated@@53) $generated@@11))
(assert (= ($generated@@165 $generated@@32) $generated@@3))
(assert (= ($generated@@166 $generated@@32) $generated@@11))
(assert (= ($generated@@165 $generated@@49) $generated@@4))
(assert (= ($generated@@166 $generated@@49) $generated@@12))
(assert (= ($generated@@165 $generated@@45) $generated@@5))
(assert (= ($generated@@166 $generated@@45) $generated@@13))
(assert (= ($generated@@165 $generated@@56) $generated@@6))
(assert (= ($generated@@166 $generated@@56) $generated@@14))
(assert (= ($generated@@165 $generated@@33) $generated@@7))
(assert (= ($generated@@166 $generated@@33) $generated@@14))
(assert (= ($generated@@165 $generated@@46) $generated@@8))
(assert (= ($generated@@166 $generated@@46) $generated@@13))
(assert (= ($generated@@165 $generated@@50) $generated@@9))
(assert (= ($generated@@166 $generated@@50) $generated@@12))
(assert (forall (($generated@@168 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@168 $generated@@46)  (or (= $generated@@168 $generated@@36) ($generated@@167 ($generated@@37 $generated@@168))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@168 $generated@@46))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@34 $generated@@35 $generated@@169 $generated@@50)  (or (= $generated@@169 $generated@@36) ($generated@@31 ($generated@@37 $generated@@169))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@169 $generated@@50))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U T@U T@U) Bool)
(declare-fun $generated@@178 () Bool)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Bool)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 18) (let (($generated@@191  (=> (= $generated@@170 ($generated@@124 $generated@@36 $generated@@171 $generated false)) (=> (and (and (or (not (= $generated@@172 $generated@@36)) (not true)) ($generated@@34 $generated@@35 $generated@@172 $generated@@32)) (and (not ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@171 $generated@@172) $generated)))) (= $generated@@173 ($generated@@64 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@171 $generated@@172 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@171 $generated@@172) $generated ($generated@@98 $generated@@16 ($generated@@19 true))))))) (=> (and (and (and ($generated@@160 $generated@@173) ($generated@@174 $generated@@173)) (and (or (not (= $generated@@175 $generated@@36)) (not true)) ($generated@@34 $generated@@35 $generated@@175 $generated@@33))) (and (and (not ($generated@@20 ($generated@@59 $generated@@16 ($generated@@60 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@173 $generated@@175) $generated)))) (= $generated@@176 ($generated@@64 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@173 $generated@@175 ($generated@@64 $generated@@61 $generated@@62 ($generated@@60 $generated@@35 ($generated@@63 $generated@@61 $generated@@62) $generated@@173 $generated@@175) $generated ($generated@@98 $generated@@16 ($generated@@19 true)))))) (and ($generated@@160 $generated@@176) ($generated@@174 $generated@@176)))) (and (=> (= (ControlFlow 0 2) (- 0 17)) true) (and (=> (= (ControlFlow 0 2) (- 0 16)) true) (and (=> (= (ControlFlow 0 2) (- 0 15)) true) (and (=> (= (ControlFlow 0 2) (- 0 14)) true) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (=> ($generated@@40 $generated@@35 $generated@@172 $generated@@41 $generated@@176) (and (=> (= (ControlFlow 0 2) (- 0 12)) true) (=> ($generated@@40 $generated@@35 $generated@@175 $generated@@41 $generated@@176) (=> (and ($generated@@177 $generated@@41 ($generated@@98 $generated@@35 $generated@@172) ($generated@@98 $generated@@35 $generated@@175)) ($generated@@177 $generated@@41 ($generated@@98 $generated@@35 $generated@@172) ($generated@@98 $generated@@35 $generated@@175))) (and (=> (= (ControlFlow 0 2) (- 0 11)) true) (=> ($generated@@40 $generated@@35 $generated@@172 $generated@@41 $generated@@176) (and (=> (= (ControlFlow 0 2) (- 0 10)) true) (=> ($generated@@40 $generated@@35 $generated@@175 $generated@@41 $generated@@176) (=> (and ($generated@@177 $generated@@41 ($generated@@98 $generated@@35 $generated@@172) ($generated@@98 $generated@@35 $generated@@175)) ($generated@@177 $generated@@41 ($generated@@98 $generated@@35 $generated@@172) ($generated@@98 $generated@@35 $generated@@175))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) true) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) true) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (=> ($generated@@40 $generated@@35 $generated@@172 $generated@@45 $generated@@176) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> ($generated@@40 $generated@@35 $generated@@175 $generated@@45 $generated@@176) (=> (and ($generated@@177 $generated@@45 ($generated@@98 $generated@@35 $generated@@172) ($generated@@98 $generated@@35 $generated@@175)) ($generated@@177 $generated@@45 ($generated@@98 $generated@@35 $generated@@172) ($generated@@98 $generated@@35 $generated@@175))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and ($generated@@40 $generated@@35 $generated@@172 $generated@@45 $generated@@176) (= (ControlFlow 0 2) (- 0 1))) true))))))))))))))))))))))))))))))
(let (($generated@@192  (=> (and (and (and (and ($generated@@160 $generated@@171) ($generated@@174 $generated@@171)) (and (=> $generated@@178 (and ($generated@@34 $generated@@35 $generated@@179 $generated@@53) ($generated@@40 $generated@@35 $generated@@179 $generated@@53 $generated@@171))) true)) (and (and (=> $generated@@180 (and ($generated@@34 $generated@@35 $generated@@181 $generated@@56) ($generated@@40 $generated@@35 $generated@@181 $generated@@56 $generated@@171))) true) (and (=> $generated@@182 (and ($generated@@34 $generated@@35 $generated@@183 $generated@@41) ($generated@@40 $generated@@35 $generated@@183 $generated@@41 $generated@@171))) true))) (and (and (and (=> $generated@@184 (and ($generated@@34 $generated@@35 $generated@@185 $generated@@41) ($generated@@40 $generated@@35 $generated@@185 $generated@@41 $generated@@171))) true) (and (=> $generated@@186 (and ($generated@@34 $generated@@35 $generated@@187 $generated@@45) ($generated@@40 $generated@@35 $generated@@187 $generated@@45 $generated@@171))) true)) (and (and (=> $generated@@188 (and ($generated@@34 $generated@@35 $generated@@189 $generated@@45) ($generated@@40 $generated@@35 $generated@@189 $generated@@45 $generated@@171))) true) (and (= 1 $generated@@190) (= (ControlFlow 0 18) 2))))) $generated@@191)))
$generated@@192)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
