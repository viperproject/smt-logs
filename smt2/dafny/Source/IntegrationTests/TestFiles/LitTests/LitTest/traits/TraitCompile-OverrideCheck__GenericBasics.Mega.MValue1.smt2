(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U T@U) Bool)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@78 () T@T)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@T T@T) T@T)
(declare-fun $generated@@81 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@T) T@T)
(declare-fun $generated@@83 (T@T) T@T)
(declare-fun $generated@@106 (T@U T@U T@U) Bool)
(declare-fun $generated@@110 (T@U T@U) T@U)
(declare-fun $generated@@111 (T@U T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@26 ($generated@@25 $generated@@27 $generated@@28 $generated@@29)) $generated@@27)
 :pattern ( ($generated@@25 $generated@@27 $generated@@28 $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 ($generated@@25 $generated@@31 $generated@@32 $generated@@33)) $generated@@32)
 :pattern ( ($generated@@25 $generated@@31 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 ($generated@@25 $generated@@35 $generated@@36 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@25 $generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@39 ($generated@@38 $generated@@40 $generated@@41 $generated@@42)) $generated@@40)
 :pattern ( ($generated@@38 $generated@@40 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@43 ($generated@@38 $generated@@44 $generated@@45 $generated@@46)) $generated@@45)
 :pattern ( ($generated@@38 $generated@@44 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@47 ($generated@@38 $generated@@48 $generated@@49 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@38 $generated@@48 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (and (= ($generated@@24 ($generated@@25 $generated@@52 $generated@@53 $generated@@54)) $generated@@2) (= ($generated@@51 ($generated@@25 $generated@@52 $generated@@53 $generated@@54)) $generated@@6))
 :pattern ( ($generated@@25 $generated@@52 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (and (= ($generated@@24 ($generated@@38 $generated@@55 $generated@@56 $generated@@57)) $generated@@5) (= ($generated@@51 ($generated@@38 $generated@@55 $generated@@56 $generated@@57)) $generated@@6))
 :pattern ( ($generated@@38 $generated@@55 $generated@@56 $generated@@57))
)))
(assert (= ($generated@@8 $generated@@60) 3))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@58 $generated@@66 ($generated@@25 $generated@@63 $generated@@64 $generated@@65)) (and (= ($generated@@59 $generated@@60 ($generated@@61 $generated@@60 $generated@@66)) $generated@@66) ($generated@@62 $generated@@60 ($generated@@61 $generated@@60 $generated@@66) ($generated@@25 $generated@@63 $generated@@64 $generated@@65))))
 :pattern ( ($generated@@58 $generated@@66 ($generated@@25 $generated@@63 $generated@@64 $generated@@65)))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@58 $generated@@70 ($generated@@38 $generated@@67 $generated@@68 $generated@@69)) (and (= ($generated@@59 $generated@@60 ($generated@@61 $generated@@60 $generated@@70)) $generated@@70) ($generated@@62 $generated@@60 ($generated@@61 $generated@@60 $generated@@70) ($generated@@38 $generated@@67 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@58 $generated@@70 ($generated@@38 $generated@@67 $generated@@68 $generated@@69)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@62 $generated@@60 $generated@@75 ($generated@@25 $generated@@72 $generated@@73 $generated@@74))  (and ($generated@@62 $generated@@60 $generated@@75 ($generated@@38 $generated@@72 $generated@@73 $generated@@74)) (or (not (= $generated@@75 $generated@@71)) (not true))))
 :pattern ( ($generated@@62 $generated@@60 $generated@@75 ($generated@@25 $generated@@72 $generated@@73 $generated@@74)))
 :pattern ( ($generated@@62 $generated@@60 $generated@@75 ($generated@@38 $generated@@72 $generated@@73 $generated@@74)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@77 $generated@@84 $generated@@85 ($generated@@81 $generated@@84 $generated@@85 $generated@@87 $generated@@88 $generated@@86) $generated@@88) $generated@@86)
 :weight 0
)) (forall (($generated@@89 T@T) ($generated@@90 T@T) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (or (= $generated@@93 $generated@@94) (= ($generated@@77 $generated@@89 $generated@@90 ($generated@@81 $generated@@89 $generated@@90 $generated@@92 $generated@@93 $generated@@91) $generated@@94) ($generated@@77 $generated@@89 $generated@@90 $generated@@92 $generated@@94)))
 :weight 0
))) (= ($generated@@8 $generated@@78) 4)) (= ($generated@@8 $generated@@79) 5)) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (= ($generated@@8 ($generated@@80 $generated@@95 $generated@@96)) 6))) (forall (($generated@@97 T@T) ($generated@@98 T@T) ) (! (= ($generated@@82 ($generated@@80 $generated@@97 $generated@@98)) $generated@@97)
 :pattern ( ($generated@@80 $generated@@97 $generated@@98))
))) (forall (($generated@@99 T@T) ($generated@@100 T@T) ) (! (= ($generated@@83 ($generated@@80 $generated@@99 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@80 $generated@@99 $generated@@100))
))))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> ($generated@@76 $generated@@101 $generated@@102) (forall (($generated@@103 T@U) ) (!  (=> ($generated@@13 ($generated@@61 $generated@@9 ($generated@@77 $generated@@78 $generated@@79 ($generated@@77 $generated@@60 ($generated@@80 $generated@@78 $generated@@79) $generated@@101 $generated@@103) $generated@@1))) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@77 $generated@@78 $generated@@79 ($generated@@77 $generated@@60 ($generated@@80 $generated@@78 $generated@@79) $generated@@102 $generated@@103) $generated@@1))))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79 ($generated@@77 $generated@@60 ($generated@@80 $generated@@78 $generated@@79) $generated@@102 $generated@@103) $generated@@1))
)))
 :pattern ( ($generated@@76 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@59 $generated@@105 ($generated@@61 $generated@@105 $generated@@104)) $generated@@104)
 :pattern ( ($generated@@61 $generated@@105 $generated@@104))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) ($generated@@106 ($generated@@38 $generated@@107 $generated@@108 $generated@@109) $generated@@108 $generated)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@62 $generated@@60 $generated@@114 ($generated@@110 $generated@@112 $generated@@113))  (and ($generated@@62 $generated@@60 $generated@@114 ($generated@@111 $generated@@112 $generated@@113)) (or (not (= $generated@@114 $generated@@71)) (not true))))
 :pattern ( ($generated@@62 $generated@@60 $generated@@114 ($generated@@110 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@62 $generated@@60 $generated@@114 ($generated@@111 $generated@@112 $generated@@113)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@T) ) (! (= ($generated@@115 ($generated@@59 $generated@@120 $generated@@117) $generated@@118 $generated@@119) ($generated@@116 $generated@@120 $generated@@117 $generated@@118 $generated@@119))
 :pattern ( ($generated@@115 ($generated@@59 $generated@@120 $generated@@117) $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@76 $generated@@121 $generated@@122) (=> ($generated@@115 $generated@@123 $generated@@124 $generated@@121) ($generated@@115 $generated@@123 $generated@@124 $generated@@122)))
 :pattern ( ($generated@@76 $generated@@121 $generated@@122) ($generated@@115 $generated@@123 $generated@@124 $generated@@121))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@T) ) (!  (=> ($generated@@76 $generated@@125 $generated@@126) (=> ($generated@@116 $generated@@129 $generated@@127 $generated@@128 $generated@@125) ($generated@@116 $generated@@129 $generated@@127 $generated@@128 $generated@@126)))
 :pattern ( ($generated@@76 $generated@@125 $generated@@126) ($generated@@116 $generated@@129 $generated@@127 $generated@@128 $generated@@125))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@60 $generated@@132 ($generated@@110 $generated@@130 $generated@@131) $generated@@133) ($generated@@116 $generated@@60 $generated@@132 ($generated@@111 $generated@@130 $generated@@131) $generated@@133))
 :pattern ( ($generated@@116 $generated@@60 $generated@@132 ($generated@@110 $generated@@130 $generated@@131) $generated@@133))
 :pattern ( ($generated@@116 $generated@@60 $generated@@132 ($generated@@111 $generated@@130 $generated@@131) $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@116 $generated@@60 $generated@@137 ($generated@@38 $generated@@134 $generated@@135 $generated@@136) $generated@@138)  (or (= $generated@@137 $generated@@71) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@77 $generated@@78 $generated@@79 ($generated@@77 $generated@@60 ($generated@@80 $generated@@78 $generated@@79) $generated@@138 $generated@@137) $generated@@1)))))
 :pattern ( ($generated@@116 $generated@@60 $generated@@137 ($generated@@38 $generated@@134 $generated@@135 $generated@@136) $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@62 $generated@@60 $generated@@142 ($generated@@38 $generated@@139 $generated@@140 $generated@@141)) ($generated@@62 $generated@@60 $generated@@142 ($generated@@111 $generated@@140 $generated)))
 :pattern ( ($generated@@62 $generated@@60 $generated@@142 ($generated@@38 $generated@@139 $generated@@140 $generated@@141)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@58 $generated@@146 ($generated@@38 $generated@@143 $generated@@144 $generated@@145)) ($generated@@58 $generated@@146 ($generated@@111 $generated@@144 $generated)))
 :pattern ( ($generated@@58 $generated@@146 ($generated@@38 $generated@@143 $generated@@144 $generated@@145)))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@116 $generated@@60 $generated@@149 ($generated@@111 $generated@@147 $generated@@148) $generated@@150)  (or (= $generated@@149 $generated@@71) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@77 $generated@@78 $generated@@79 ($generated@@77 $generated@@60 ($generated@@80 $generated@@78 $generated@@79) $generated@@150 $generated@@149) $generated@@1)))))
 :pattern ( ($generated@@116 $generated@@60 $generated@@149 ($generated@@111 $generated@@147 $generated@@148) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@115 $generated@@155 ($generated@@38 $generated@@152 $generated@@153 $generated@@154) $generated@@156) ($generated@@151 $generated@@156)) ($generated@@115 $generated@@155 ($generated@@111 $generated@@153 $generated) $generated@@156))
 :pattern ( ($generated@@115 $generated@@155 ($generated@@38 $generated@@152 $generated@@153 $generated@@154) $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or (not (= $generated@@157 $generated@@159)) (not true)) (=> (and ($generated@@76 $generated@@157 $generated@@158) ($generated@@76 $generated@@158 $generated@@159)) ($generated@@76 $generated@@157 $generated@@159)))
 :pattern ( ($generated@@76 $generated@@157 $generated@@158) ($generated@@76 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (=> ($generated@@58 $generated@@160 $generated) (and (= ($generated@@59 $generated@@10 ($generated@@61 $generated@@10 $generated@@160)) $generated@@160) ($generated@@62 $generated@@10 ($generated@@61 $generated@@10 $generated@@160) $generated)))
 :pattern ( ($generated@@58 $generated@@160 $generated))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@58 ($generated@@59 $generated@@163 $generated@@161) $generated@@162) ($generated@@62 $generated@@163 $generated@@161 $generated@@162))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@163 $generated@@161) $generated@@162))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@110 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@110 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@167 ($generated@@110 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@110 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@170 ($generated@@111 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@111 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@173 ($generated@@111 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@111 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@62 $generated@@60 $generated@@179 ($generated@@111 $generated@@177 $generated@@178))  (or (= $generated@@179 $generated@@71) ($generated@@106 ($generated@@176 $generated@@179) $generated@@177 $generated@@178)))
 :pattern ( ($generated@@62 $generated@@60 $generated@@179 ($generated@@111 $generated@@177 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@61 $generated@@181 ($generated@@59 $generated@@181 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@59 $generated@@181 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@58 $generated@@184 ($generated@@110 $generated@@182 $generated@@183)) (and (= ($generated@@59 $generated@@60 ($generated@@61 $generated@@60 $generated@@184)) $generated@@184) ($generated@@62 $generated@@60 ($generated@@61 $generated@@60 $generated@@184) ($generated@@110 $generated@@182 $generated@@183))))
 :pattern ( ($generated@@58 $generated@@184 ($generated@@110 $generated@@182 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@58 $generated@@187 ($generated@@111 $generated@@185 $generated@@186)) (and (= ($generated@@59 $generated@@60 ($generated@@61 $generated@@60 $generated@@187)) $generated@@187) ($generated@@62 $generated@@60 ($generated@@61 $generated@@60 $generated@@187) ($generated@@111 $generated@@185 $generated@@186))))
 :pattern ( ($generated@@58 $generated@@187 ($generated@@111 $generated@@185 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@62 $generated@@60 $generated@@191 ($generated@@38 $generated@@188 $generated@@189 $generated@@190))  (or (= $generated@@191 $generated@@71) (= ($generated@@176 $generated@@191) ($generated@@38 $generated@@188 $generated@@189 $generated@@190))))
 :pattern ( ($generated@@62 $generated@@60 $generated@@191 ($generated@@38 $generated@@188 $generated@@189 $generated@@190)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@116 $generated@@60 $generated@@195 ($generated@@25 $generated@@192 $generated@@193 $generated@@194) $generated@@196) ($generated@@116 $generated@@60 $generated@@195 ($generated@@38 $generated@@192 $generated@@193 $generated@@194) $generated@@196))
 :pattern ( ($generated@@116 $generated@@60 $generated@@195 ($generated@@25 $generated@@192 $generated@@193 $generated@@194) $generated@@196))
 :pattern ( ($generated@@116 $generated@@60 $generated@@195 ($generated@@38 $generated@@192 $generated@@193 $generated@@194) $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (and (= ($generated@@24 ($generated@@110 $generated@@197 $generated@@198)) $generated@@3) (= ($generated@@51 ($generated@@110 $generated@@197 $generated@@198)) $generated@@7))
 :pattern ( ($generated@@110 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (and (= ($generated@@24 ($generated@@111 $generated@@199 $generated@@200)) $generated@@4) (= ($generated@@51 ($generated@@111 $generated@@199 $generated@@200)) $generated@@7))
 :pattern ( ($generated@@111 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@116 $generated@@60 $generated@@204 ($generated@@38 $generated@@201 $generated@@202 $generated@@203) $generated@@205) ($generated@@116 $generated@@60 $generated@@204 ($generated@@111 $generated@@202 $generated) $generated@@205))
 :pattern ( ($generated@@116 $generated@@60 $generated@@204 ($generated@@38 $generated@@201 $generated@@202 $generated@@203) $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! ($generated@@116 $generated@@10 $generated@@207 $generated $generated@@206)
 :pattern ( ($generated@@116 $generated@@10 $generated@@207 $generated $generated@@206))
)))
(assert (forall (($generated@@208 T@U) ) (! ($generated@@62 $generated@@10 $generated@@208 $generated)
 :pattern ( ($generated@@62 $generated@@10 $generated@@208 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@222  (=> (= $generated@@209 $generated@@210) (=> (and (= $generated@@211 $generated) (= $generated@@212 $generated@@213)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ) true)) (=> (forall (($generated@@225 T@U) ($generated@@226 T@U) ) true) (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@227 T@U) ($generated@@228 T@U) ) true)))))))))
(let (($generated@@229  (=> (and ($generated@@151 $generated@@214) ($generated@@215 $generated@@214)) (=> (and (and (and (or (not (= $generated@@216 $generated@@71)) (not true)) (and ($generated@@62 $generated@@60 $generated@@216 ($generated@@25 $generated@@217 $generated@@210 $generated@@218)) ($generated@@116 $generated@@60 $generated@@216 ($generated@@25 $generated@@217 $generated@@210 $generated@@218) $generated@@214))) (and ($generated@@58 $generated@@219 $generated@@213) ($generated@@115 $generated@@219 $generated@@213 $generated@@214))) (and (and ($generated@@58 $generated@@220 $generated@@213) ($generated@@115 $generated@@220 $generated@@213 $generated@@214)) (and (= 0 $generated@@221) (= (ControlFlow 0 5) 2)))) $generated@@222))))
$generated@@229)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
