(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U T@U) Bool)
(declare-fun $generated@@70 () T@U)
(declare-fun $generated@@75 (Int) Int)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 () Int)
(declare-fun $generated@@81 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@103 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T) T@T)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@145 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@183 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@184 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@1))
(assert (= ($generated@@23 $generated@@0) $generated@@2))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (! (= ($generated@@25 ($generated@@24 $generated@@26 $generated@@27 $generated@@28)) $generated@@26)
 :pattern ( ($generated@@24 $generated@@26 $generated@@27 $generated@@28))
)))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@29 ($generated@@24 $generated@@30 $generated@@31 $generated@@32)) $generated@@31)
 :pattern ( ($generated@@24 $generated@@30 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@33 ($generated@@24 $generated@@34 $generated@@35 $generated@@36)) $generated@@36)
 :pattern ( ($generated@@24 $generated@@34 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 ($generated@@37 $generated@@39 $generated@@40 $generated@@41)) $generated@@39)
 :pattern ( ($generated@@37 $generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@42 ($generated@@37 $generated@@43 $generated@@44 $generated@@45)) $generated@@44)
 :pattern ( ($generated@@37 $generated@@43 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@46 ($generated@@37 $generated@@47 $generated@@48 $generated@@49)) $generated@@49)
 :pattern ( ($generated@@37 $generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (and (= ($generated@@23 ($generated@@24 $generated@@51 $generated@@52 $generated@@53)) $generated@@4) (= ($generated@@50 ($generated@@24 $generated@@51 $generated@@52 $generated@@53)) $generated@@6))
 :pattern ( ($generated@@24 $generated@@51 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (and (= ($generated@@23 ($generated@@37 $generated@@54 $generated@@55 $generated@@56)) $generated@@5) (= ($generated@@50 ($generated@@37 $generated@@54 $generated@@55 $generated@@56)) $generated@@6))
 :pattern ( ($generated@@37 $generated@@54 $generated@@55 $generated@@56))
)))
(assert (= ($generated@@7 $generated@@59) 3))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@57 $generated@@65 ($generated@@24 $generated@@62 $generated@@63 $generated@@64)) (and (= ($generated@@58 $generated@@59 ($generated@@60 $generated@@59 $generated@@65)) $generated@@65) ($generated@@61 $generated@@59 ($generated@@60 $generated@@59 $generated@@65) ($generated@@24 $generated@@62 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@57 $generated@@65 ($generated@@24 $generated@@62 $generated@@63 $generated@@64)))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@57 $generated@@69 ($generated@@37 $generated@@66 $generated@@67 $generated@@68)) (and (= ($generated@@58 $generated@@59 ($generated@@60 $generated@@59 $generated@@69)) $generated@@69) ($generated@@61 $generated@@59 ($generated@@60 $generated@@59 $generated@@69) ($generated@@37 $generated@@66 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@57 $generated@@69 ($generated@@37 $generated@@66 $generated@@67 $generated@@68)))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@61 $generated@@59 $generated@@74 ($generated@@24 $generated@@71 $generated@@72 $generated@@73))  (and ($generated@@61 $generated@@59 $generated@@74 ($generated@@37 $generated@@71 $generated@@72 $generated@@73)) (or (not (= $generated@@74 $generated@@70)) (not true))))
 :pattern ( ($generated@@61 $generated@@59 $generated@@74 ($generated@@24 $generated@@71 $generated@@72 $generated@@73)))
 :pattern ( ($generated@@61 $generated@@59 $generated@@74 ($generated@@37 $generated@@71 $generated@@72 $generated@@73)))
)))
(assert (forall (($generated@@76 Int) ) (! (= ($generated@@75 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 $generated@@78) $generated@@78)
 :pattern ( ($generated@@77 $generated@@79 $generated@@78))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> (or ($generated@@82 $generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@87) (and (< 0 $generated@@80) (and (and (or (not (= $generated@@86 $generated@@70)) (not true)) ($generated@@61 $generated@@59 $generated@@86 ($generated@@24 $generated@@83 $generated@@84 $generated@@85))) ($generated@@57 $generated@@87 $generated@@83)))) ($generated@@57 ($generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@87) $generated@@83))
 :pattern ( ($generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@58 $generated@@89 ($generated@@60 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@60 $generated@@89 $generated@@88))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and (or ($generated@@82 $generated@@94 $generated@@95 $generated@@96 $generated@@97 $generated@@98) (and (< 0 $generated@@80) (and (and (or (not (= $generated@@97 $generated@@70)) (not true)) ($generated@@91 $generated@@59 $generated@@97 ($generated@@24 $generated@@94 $generated@@95 $generated@@96) $generated@@93)) (and ($generated@@57 $generated@@98 $generated@@94) ($generated@@90 $generated@@98 $generated@@94 $generated@@93))))) ($generated@@92 $generated@@93)) ($generated@@90 ($generated@@81 $generated@@94 $generated@@95 $generated@@96 $generated@@97 $generated@@98) $generated@@94 $generated@@93))
 :pattern ( ($generated@@90 ($generated@@81 $generated@@94 $generated@@95 $generated@@96 $generated@@97 $generated@@98) $generated@@94 $generated@@93))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@90 ($generated@@58 $generated@@102 $generated@@99) $generated@@100 $generated@@101) ($generated@@91 $generated@@102 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@90 ($generated@@58 $generated@@102 $generated@@99) $generated@@100 $generated@@101))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@103 $generated@@110 $generated@@111 ($generated@@107 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@112) $generated@@114) $generated@@112)
 :weight 0
)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@119 $generated@@120) (= ($generated@@103 $generated@@115 $generated@@116 ($generated@@107 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@117) $generated@@120) ($generated@@103 $generated@@115 $generated@@116 $generated@@118 $generated@@120)))
 :weight 0
))) (= ($generated@@7 $generated@@104) 4)) (= ($generated@@7 $generated@@105) 5)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ) (= ($generated@@7 ($generated@@106 $generated@@121 $generated@@122)) 6))) (forall (($generated@@123 T@T) ($generated@@124 T@T) ) (! (= ($generated@@108 ($generated@@106 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@106 $generated@@123 $generated@@124))
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@106 $generated@@125 $generated@@126))
))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@91 $generated@@59 $generated@@130 ($generated@@37 $generated@@127 $generated@@128 $generated@@129) $generated@@131)  (or (= $generated@@130 $generated@@70) ($generated@@12 ($generated@@60 $generated@@8 ($generated@@103 $generated@@104 $generated@@105 ($generated@@103 $generated@@59 ($generated@@106 $generated@@104 $generated@@105) $generated@@131 $generated@@130) $generated@@3)))))
 :pattern ( ($generated@@91 $generated@@59 $generated@@130 ($generated@@37 $generated@@127 $generated@@128 $generated@@129) $generated@@131))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@82 $generated@@132 $generated@@133 $generated@@134 ($generated@@77 $generated@@59 $generated@@135) ($generated@@77 $generated@@105 $generated@@136)) (and (< 0 $generated@@80) (and (and (or (not (= $generated@@135 $generated@@70)) (not true)) ($generated@@61 $generated@@59 $generated@@135 ($generated@@24 $generated@@132 $generated@@133 $generated@@134))) ($generated@@57 $generated@@136 $generated@@132)))) (= ($generated@@81 $generated@@132 $generated@@133 $generated@@134 ($generated@@77 $generated@@59 $generated@@135) ($generated@@77 $generated@@105 $generated@@136)) ($generated@@77 $generated@@105 $generated@@136)))
 :weight 3
 :pattern ( ($generated@@81 $generated@@132 $generated@@133 $generated@@134 ($generated@@77 $generated@@59 $generated@@135) ($generated@@77 $generated@@105 $generated@@136)))
))))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@57 $generated@@137 $generated@@0) (and (= ($generated@@58 $generated@@10 ($generated@@60 $generated@@10 $generated@@137)) $generated@@137) ($generated@@61 $generated@@10 ($generated@@60 $generated@@10 $generated@@137) $generated@@0)))
 :pattern ( ($generated@@57 $generated@@137 $generated@@0))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@57 $generated@@138 $generated) (and (= ($generated@@58 $generated@@8 ($generated@@60 $generated@@8 $generated@@138)) $generated@@138) ($generated@@61 $generated@@8 ($generated@@60 $generated@@8 $generated@@138) $generated)))
 :pattern ( ($generated@@57 $generated@@138 $generated))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@57 ($generated@@58 $generated@@141 $generated@@139) $generated@@140) ($generated@@61 $generated@@141 $generated@@139 $generated@@140))
 :pattern ( ($generated@@57 ($generated@@58 $generated@@141 $generated@@139) $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@60 $generated@@143 ($generated@@58 $generated@@143 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@58 $generated@@143 $generated@@142))
)))
(assert  (and (forall (($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@144 $generated@@147 $generated@@148 $generated@@149 ($generated@@146 $generated@@147 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@153 $generated@@150) $generated@@152 $generated@@153) $generated@@150)
 :weight 0
)) (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@144 $generated@@154 $generated@@155 $generated@@156 ($generated@@146 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@161 $generated@@162) ($generated@@144 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@161 $generated@@162)))
 :weight 0
)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@169 $generated@@171) (= ($generated@@144 $generated@@163 $generated@@164 $generated@@165 ($generated@@146 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@144 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@12 ($generated@@144 $generated@@59 $generated@@104 $generated@@8 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@12 ($generated@@60 $generated@@8 ($generated@@103 $generated@@104 $generated@@105 ($generated@@103 $generated@@59 ($generated@@106 $generated@@104 $generated@@105) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@144 $generated@@59 $generated@@104 $generated@@8 ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@91 $generated@@59 $generated@@181 ($generated@@24 $generated@@178 $generated@@179 $generated@@180) $generated@@182) ($generated@@91 $generated@@59 $generated@@181 ($generated@@37 $generated@@178 $generated@@179 $generated@@180) $generated@@182))
 :pattern ( ($generated@@91 $generated@@59 $generated@@181 ($generated@@24 $generated@@178 $generated@@179 $generated@@180) $generated@@182))
 :pattern ( ($generated@@91 $generated@@59 $generated@@181 ($generated@@37 $generated@@178 $generated@@179 $generated@@180) $generated@@182))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@61 $generated@@59 $generated@@188 ($generated@@37 $generated@@185 $generated@@186 $generated@@187))  (or (= $generated@@188 $generated@@70) ($generated@@183 ($generated@@184 $generated@@188) $generated@@185 $generated@@186 $generated@@187)))
 :pattern ( ($generated@@61 $generated@@59 $generated@@188 ($generated@@37 $generated@@185 $generated@@186 $generated@@187)))
)))
(assert  (=> (<= 0 $generated@@80) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (or ($generated@@82 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193) (and (< 0 $generated@@80) (and (and (or (not (= $generated@@192 $generated@@70)) (not true)) ($generated@@61 $generated@@59 $generated@@192 ($generated@@24 $generated@@189 $generated@@190 $generated@@191))) ($generated@@57 $generated@@193 $generated@@189)))) (= ($generated@@81 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@193))
 :pattern ( ($generated@@81 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@58 $generated@@9 ($generated@@13 ($generated@@75 $generated@@194))) ($generated@@77 $generated@@105 ($generated@@58 $generated@@9 ($generated@@13 $generated@@194))))
 :pattern ( ($generated@@58 $generated@@9 ($generated@@13 ($generated@@75 $generated@@194))))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@58 $generated@@196 ($generated@@77 $generated@@196 $generated@@195)) ($generated@@77 $generated@@105 ($generated@@58 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@58 $generated@@196 ($generated@@77 $generated@@196 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! ($generated@@91 $generated@@10 $generated@@198 $generated@@0 $generated@@197)
 :pattern ( ($generated@@91 $generated@@10 $generated@@198 $generated@@0 $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! ($generated@@91 $generated@@8 $generated@@200 $generated $generated@@199)
 :pattern ( ($generated@@91 $generated@@8 $generated@@200 $generated $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@61 $generated@@10 $generated@@201 $generated@@0)
 :pattern ( ($generated@@61 $generated@@10 $generated@@201 $generated@@0))
)))
(assert (forall (($generated@@202 T@U) ) (! ($generated@@61 $generated@@8 $generated@@202 $generated)
 :pattern ( ($generated@@61 $generated@@8 $generated@@202 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Bool)
(declare-fun $generated@@207 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@208 true))
(let (($generated@@209 true))
(let (($generated@@210  (=> (= $generated@@203 ($generated@@145 $generated@@70 $generated@@204 $generated@@3 false)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (or (not (= $generated@@205 $generated@@70)) (not true))) (=> (or (not (= $generated@@205 $generated@@70)) (not true)) (=> ($generated@@90 ($generated@@58 $generated@@59 $generated@@205) ($generated@@37 $generated $generated@@0 $generated@@0) $generated@@204) (=> (and (and (= $generated@@206 ($generated@@12 ($generated@@77 $generated@@8 ($generated@@11 true)))) ($generated@@91 $generated@@8 ($generated@@11 $generated@@206) $generated $generated@@204)) (and ($generated@@82 $generated $generated@@0 $generated@@0 $generated@@205 ($generated@@58 $generated@@8 ($generated@@77 $generated@@8 ($generated@@11 true)))) ($generated@@82 $generated $generated@@0 $generated@@0 $generated@@205 ($generated@@58 $generated@@8 ($generated@@77 $generated@@8 ($generated@@11 true)))))) (and (=> (= (ControlFlow 0 3) 1) $generated@@209) (=> (= (ControlFlow 0 3) 2) $generated@@208)))))))))
(let (($generated@@211  (=> (and ($generated@@92 $generated@@204) ($generated@@207 $generated@@204)) (=> (and (and ($generated@@61 $generated@@59 $generated@@205 ($generated@@24 $generated $generated@@0 $generated@@0)) ($generated@@91 $generated@@59 $generated@@205 ($generated@@24 $generated $generated@@0 $generated@@0) $generated@@204)) (and (= 1 $generated@@80) (= (ControlFlow 0 5) 3))) $generated@@210))))
$generated@@211)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
