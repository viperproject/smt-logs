(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 () T@U)
(declare-fun $generated@@20 (T@T) Int)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 (Bool) T@U)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 (Int) T@U)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (Real) T@U)
(declare-fun $generated@@29 (T@U) Real)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 (T@T T@U T@U) Bool)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 () T@U)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@74 () T@T)
(declare-fun $generated@@75 () T@T)
(declare-fun $generated@@76 (T@T T@T) T@T)
(declare-fun $generated@@77 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@78 (T@T) T@T)
(declare-fun $generated@@79 (T@T) T@T)
(declare-fun $generated@@126 (T@T T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@146 (T@U T@U) Bool)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@148 (T@U T@U) Bool)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@184 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@190 (T@U) T@U)
(declare-fun $generated@@202 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@204 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@20 $generated@@21) 0) (= ($generated@@20 $generated@@22) 1)) (= ($generated@@20 $generated@@23) 2)) (forall (($generated@@30 Bool) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 Int) ) (! (= ($generated@@27 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 Real) ) (! (= ($generated@@29 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))) (forall (($generated@@35 T@U) ) (! (= ($generated@@28 ($generated@@29 $generated@@35)) $generated@@35)
 :pattern ( ($generated@@29 $generated@@35))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18 $generated@@19)
)
(assert (= ($generated@@36 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@38) 3))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@42 ($generated@@39 $generated@@41) $generated@@43) ($generated@@37 $generated@@38 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
 :pattern ( ($generated@@37 $generated@@38 $generated@@42 ($generated@@39 $generated@@41) $generated@@43))
 :pattern ( ($generated@@37 $generated@@38 $generated@@42 ($generated@@40 $generated@@41) $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@47 ($generated@@44 $generated@@46) $generated@@48) ($generated@@37 $generated@@38 $generated@@47 ($generated@@45 $generated@@46) $generated@@48))
 :pattern ( ($generated@@37 $generated@@38 $generated@@47 ($generated@@44 $generated@@46) $generated@@48))
 :pattern ( ($generated@@37 $generated@@38 $generated@@47 ($generated@@45 $generated@@46) $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@52 ($generated@@49 $generated@@51) $generated@@53) ($generated@@37 $generated@@38 $generated@@52 ($generated@@50 $generated@@51) $generated@@53))
 :pattern ( ($generated@@37 $generated@@38 $generated@@52 ($generated@@49 $generated@@51) $generated@@53))
 :pattern ( ($generated@@37 $generated@@38 $generated@@52 ($generated@@50 $generated@@51) $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@57 ($generated@@54 $generated@@56) $generated@@58) ($generated@@37 $generated@@38 $generated@@57 ($generated@@55 $generated@@56) $generated@@58))
 :pattern ( ($generated@@37 $generated@@38 $generated@@57 ($generated@@54 $generated@@56) $generated@@58))
 :pattern ( ($generated@@37 $generated@@38 $generated@@57 ($generated@@55 $generated@@56) $generated@@58))
)))
(assert ($generated@@59 $generated@@60))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@64 $generated@@60)  (or (= $generated@@64 $generated@@62) (= ($generated@@63 $generated@@64) $generated@@60)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@64 $generated@@60))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@67 $generated@@65 $generated@@68) ($generated@@37 $generated@@38 $generated@@67 $generated@@66 $generated@@68))
 :pattern ( ($generated@@37 $generated@@38 $generated@@67 $generated@@65 $generated@@68))
 :pattern ( ($generated@@37 $generated@@38 $generated@@67 $generated@@66 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@70 $generated@@69 $generated@@71) ($generated@@37 $generated@@38 $generated@@70 $generated@@60 $generated@@71))
 :pattern ( ($generated@@37 $generated@@38 $generated@@70 $generated@@69 $generated@@71))
 :pattern ( ($generated@@37 $generated@@38 $generated@@70 $generated@@60 $generated@@71))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@80 T@T) ($generated@@81 T@T) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@73 $generated@@80 $generated@@81 ($generated@@77 $generated@@80 $generated@@81 $generated@@83 $generated@@84 $generated@@82) $generated@@84) $generated@@82)
 :weight 0
)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (or (= $generated@@89 $generated@@90) (= ($generated@@73 $generated@@85 $generated@@86 ($generated@@77 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@87) $generated@@90) ($generated@@73 $generated@@85 $generated@@86 $generated@@88 $generated@@90)))
 :weight 0
))) (= ($generated@@20 $generated@@74) 4)) (= ($generated@@20 $generated@@75) 5)) (forall (($generated@@91 T@T) ($generated@@92 T@T) ) (= ($generated@@20 ($generated@@76 $generated@@91 $generated@@92)) 6))) (forall (($generated@@93 T@T) ($generated@@94 T@T) ) (! (= ($generated@@78 ($generated@@76 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@76 $generated@@93 $generated@@94))
))) (forall (($generated@@95 T@T) ($generated@@96 T@T) ) (! (= ($generated@@79 ($generated@@76 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@76 $generated@@95 $generated@@96))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@98 ($generated@@40 $generated@@97) $generated@@99)  (or (= $generated@@98 $generated@@62) ($generated@@25 ($generated@@72 $generated@@21 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@99 $generated@@98) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@98 ($generated@@40 $generated@@97) $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@101 ($generated@@45 $generated@@100) $generated@@102)  (or (= $generated@@101 $generated@@62) ($generated@@25 ($generated@@72 $generated@@21 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@102 $generated@@101) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@101 ($generated@@45 $generated@@100) $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@104 ($generated@@50 $generated@@103) $generated@@105)  (or (= $generated@@104 $generated@@62) ($generated@@25 ($generated@@72 $generated@@21 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@105 $generated@@104) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@104 ($generated@@50 $generated@@103) $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@107 ($generated@@55 $generated@@106) $generated@@108)  (or (= $generated@@107 $generated@@62) ($generated@@25 ($generated@@72 $generated@@21 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@108 $generated@@107) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@107 ($generated@@55 $generated@@106) $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@110 ($generated@@45 $generated@@109)) ($generated@@61 $generated@@38 $generated@@110 ($generated@@40 $generated@@109)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@110 ($generated@@45 $generated@@109)))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@112 ($generated@@50 $generated@@111)) ($generated@@61 $generated@@38 $generated@@112 ($generated@@40 $generated@@111)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@112 ($generated@@50 $generated@@111)))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@114 ($generated@@55 $generated@@113)) ($generated@@61 $generated@@38 $generated@@114 ($generated@@45 $generated@@113)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@114 ($generated@@55 $generated@@113)))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@116 ($generated@@55 $generated@@115)) ($generated@@61 $generated@@38 $generated@@116 ($generated@@50 $generated@@115)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@116 ($generated@@55 $generated@@115)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@117 $generated@@66 $generated@@118)  (or (= $generated@@117 $generated@@62) ($generated@@25 ($generated@@72 $generated@@21 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@118 $generated@@117) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@117 $generated@@66 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@119 $generated@@60 $generated@@120)  (or (= $generated@@119 $generated@@62) ($generated@@25 ($generated@@72 $generated@@21 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@120 $generated@@119) $generated@@1)))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@119 $generated@@60 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@121 $generated@@66) ($generated@@61 $generated@@38 $generated@@121 ($generated@@40 $generated)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@121 $generated@@66))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@122 $generated@@60) ($generated@@61 $generated@@38 $generated@@122 ($generated@@45 $generated)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@122 $generated@@60))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@123 $generated@@60) ($generated@@61 $generated@@38 $generated@@123 ($generated@@55 $generated)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@123 $generated@@60))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@124 $generated@@60) ($generated@@61 $generated@@38 $generated@@124 ($generated@@50 $generated)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@124 $generated@@60))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@125 $generated@@60) ($generated@@61 $generated@@38 $generated@@125 ($generated@@40 $generated)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@125 $generated@@60))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@126 $generated@@128 ($generated@@72 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@72 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@130 ($generated@@39 $generated@@129))  (and ($generated@@61 $generated@@38 $generated@@130 ($generated@@40 $generated@@129)) (or (not (= $generated@@130 $generated@@62)) (not true))))
 :pattern ( ($generated@@61 $generated@@38 $generated@@130 ($generated@@39 $generated@@129)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@130 ($generated@@40 $generated@@129)))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@132 ($generated@@44 $generated@@131))  (and ($generated@@61 $generated@@38 $generated@@132 ($generated@@45 $generated@@131)) (or (not (= $generated@@132 $generated@@62)) (not true))))
 :pattern ( ($generated@@61 $generated@@38 $generated@@132 ($generated@@44 $generated@@131)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@132 ($generated@@45 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@134 ($generated@@49 $generated@@133))  (and ($generated@@61 $generated@@38 $generated@@134 ($generated@@50 $generated@@133)) (or (not (= $generated@@134 $generated@@62)) (not true))))
 :pattern ( ($generated@@61 $generated@@38 $generated@@134 ($generated@@49 $generated@@133)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@134 ($generated@@50 $generated@@133)))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@136 ($generated@@54 $generated@@135))  (and ($generated@@61 $generated@@38 $generated@@136 ($generated@@55 $generated@@135)) (or (not (= $generated@@136 $generated@@62)) (not true))))
 :pattern ( ($generated@@61 $generated@@38 $generated@@136 ($generated@@54 $generated@@135)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@136 ($generated@@55 $generated@@135)))
)))
(assert (forall (($generated@@138 T@U) ) (!  (and (= ($generated@@36 ($generated@@40 $generated@@138)) $generated@@4) (= ($generated@@137 ($generated@@40 $generated@@138)) $generated@@15))
 :pattern ( ($generated@@40 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (!  (and (= ($generated@@36 ($generated@@39 $generated@@139)) $generated@@5) (= ($generated@@137 ($generated@@39 $generated@@139)) $generated@@15))
 :pattern ( ($generated@@39 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (!  (and (= ($generated@@36 ($generated@@45 $generated@@140)) $generated@@6) (= ($generated@@137 ($generated@@45 $generated@@140)) $generated@@16))
 :pattern ( ($generated@@45 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (!  (and (= ($generated@@36 ($generated@@44 $generated@@141)) $generated@@7) (= ($generated@@137 ($generated@@44 $generated@@141)) $generated@@16))
 :pattern ( ($generated@@44 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (!  (and (= ($generated@@36 ($generated@@50 $generated@@142)) $generated@@8) (= ($generated@@137 ($generated@@50 $generated@@142)) $generated@@17))
 :pattern ( ($generated@@50 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (!  (and (= ($generated@@36 ($generated@@49 $generated@@143)) $generated@@9) (= ($generated@@137 ($generated@@49 $generated@@143)) $generated@@17))
 :pattern ( ($generated@@49 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (and (= ($generated@@36 ($generated@@55 $generated@@144)) $generated@@12) (= ($generated@@137 ($generated@@55 $generated@@144)) $generated@@19))
 :pattern ( ($generated@@55 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (and (= ($generated@@36 ($generated@@54 $generated@@145)) $generated@@13) (= ($generated@@137 ($generated@@54 $generated@@145)) $generated@@19))
 :pattern ( ($generated@@54 $generated@@145))
)))
(assert ($generated@@146 $generated@@60 $generated))
(assert ($generated@@147 $generated@@60 $generated))
(assert ($generated@@148 $generated@@60 $generated))
(assert ($generated@@149 $generated@@60 $generated))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@150 $generated@@65)  (and ($generated@@61 $generated@@38 $generated@@150 $generated@@66) (or (not (= $generated@@150 $generated@@62)) (not true))))
 :pattern ( ($generated@@61 $generated@@38 $generated@@150 $generated@@65))
 :pattern ( ($generated@@61 $generated@@38 $generated@@150 $generated@@66))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@151 $generated@@69)  (and ($generated@@61 $generated@@38 $generated@@151 $generated@@60) (or (not (= $generated@@151 $generated@@62)) (not true))))
 :pattern ( ($generated@@61 $generated@@38 $generated@@151 $generated@@69))
 :pattern ( ($generated@@61 $generated@@38 $generated@@151 $generated@@60))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@153 ($generated@@45 $generated@@152) $generated@@154) ($generated@@37 $generated@@38 $generated@@153 ($generated@@40 $generated@@152) $generated@@154))
 :pattern ( ($generated@@37 $generated@@38 $generated@@153 ($generated@@45 $generated@@152) $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@156 ($generated@@50 $generated@@155) $generated@@157) ($generated@@37 $generated@@38 $generated@@156 ($generated@@40 $generated@@155) $generated@@157))
 :pattern ( ($generated@@37 $generated@@38 $generated@@156 ($generated@@50 $generated@@155) $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@159 ($generated@@55 $generated@@158) $generated@@160) ($generated@@37 $generated@@38 $generated@@159 ($generated@@45 $generated@@158) $generated@@160))
 :pattern ( ($generated@@37 $generated@@38 $generated@@159 ($generated@@55 $generated@@158) $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@162 ($generated@@55 $generated@@161) $generated@@163) ($generated@@37 $generated@@38 $generated@@162 ($generated@@50 $generated@@161) $generated@@163))
 :pattern ( ($generated@@37 $generated@@38 $generated@@162 ($generated@@55 $generated@@161) $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@164 $generated@@66 $generated@@165) ($generated@@37 $generated@@38 $generated@@164 ($generated@@40 $generated) $generated@@165))
 :pattern ( ($generated@@37 $generated@@38 $generated@@164 $generated@@66 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@166 $generated@@60 $generated@@167) ($generated@@37 $generated@@38 $generated@@166 ($generated@@45 $generated) $generated@@167))
 :pattern ( ($generated@@37 $generated@@38 $generated@@166 $generated@@60 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@168 $generated@@60 $generated@@169) ($generated@@37 $generated@@38 $generated@@168 ($generated@@55 $generated) $generated@@169))
 :pattern ( ($generated@@37 $generated@@38 $generated@@168 $generated@@60 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@170 $generated@@60 $generated@@171) ($generated@@37 $generated@@38 $generated@@170 ($generated@@50 $generated) $generated@@171))
 :pattern ( ($generated@@37 $generated@@38 $generated@@170 $generated@@60 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@172 $generated@@60 $generated@@173) ($generated@@37 $generated@@38 $generated@@172 ($generated@@40 $generated) $generated@@173))
 :pattern ( ($generated@@37 $generated@@38 $generated@@172 $generated@@60 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@174 $generated@@60 $generated@@175) ($generated@@37 $generated@@38 $generated@@174 $generated@@66 $generated@@175))
 :pattern ( ($generated@@37 $generated@@38 $generated@@174 $generated@@60 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@176 ($generated@@40 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@40 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@178 ($generated@@39 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@39 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@180 ($generated@@45 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@45 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@182 ($generated@@44 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@44 $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@184 ($generated@@50 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@50 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@186 ($generated@@49 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@49 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ) (! (= ($generated@@188 ($generated@@55 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@55 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@190 ($generated@@54 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@54 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@72 $generated@@193 ($generated@@126 $generated@@193 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@126 $generated@@193 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@195 ($generated@@40 $generated@@194))  (or (= $generated@@195 $generated@@62) ($generated@@149 ($generated@@63 $generated@@195) $generated@@194)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@195 ($generated@@40 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@197 ($generated@@45 $generated@@196))  (or (= $generated@@197 $generated@@62) ($generated@@146 ($generated@@63 $generated@@197) $generated@@196)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@197 ($generated@@45 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@199 ($generated@@50 $generated@@198))  (or (= $generated@@199 $generated@@62) ($generated@@148 ($generated@@63 $generated@@199) $generated@@198)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@199 ($generated@@50 $generated@@198)))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@201 ($generated@@55 $generated@@200))  (or (= $generated@@201 $generated@@62) ($generated@@147 ($generated@@63 $generated@@201) $generated@@200)))
 :pattern ( ($generated@@61 $generated@@38 $generated@@201 ($generated@@55 $generated@@200)))
)))
(assert  (and (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@202 $generated@@205 $generated@@206 $generated@@207 ($generated@@204 $generated@@205 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@211 $generated@@208) $generated@@210 $generated@@211) $generated@@208)
 :weight 0
)) (and (forall (($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@202 $generated@@212 $generated@@213 $generated@@214 ($generated@@204 $generated@@212 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@218 $generated@@215) $generated@@219 $generated@@220) ($generated@@202 $generated@@212 $generated@@213 $generated@@214 $generated@@216 $generated@@219 $generated@@220)))
 :weight 0
)) (forall (($generated@@221 T@T) ($generated@@222 T@T) ($generated@@223 T@T) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ) (!  (or (= $generated@@227 $generated@@229) (= ($generated@@202 $generated@@221 $generated@@222 $generated@@223 ($generated@@204 $generated@@221 $generated@@222 $generated@@223 $generated@@225 $generated@@226 $generated@@227 $generated@@224) $generated@@228 $generated@@229) ($generated@@202 $generated@@221 $generated@@222 $generated@@223 $generated@@225 $generated@@228 $generated@@229)))
 :weight 0
)))))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 Bool) ($generated@@234 T@U) ($generated@@235 T@U) ) (! (= ($generated@@25 ($generated@@202 $generated@@38 $generated@@74 $generated@@21 ($generated@@203 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))  (=> (and (or (not (= $generated@@234 $generated@@230)) (not true)) ($generated@@25 ($generated@@72 $generated@@21 ($generated@@73 $generated@@74 $generated@@75 ($generated@@73 $generated@@38 ($generated@@76 $generated@@74 $generated@@75) $generated@@231 $generated@@234) $generated@@232)))) $generated@@233))
 :pattern ( ($generated@@202 $generated@@38 $generated@@74 $generated@@21 ($generated@@203 $generated@@230 $generated@@231 $generated@@232 $generated@@233) $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ) (!  (=> ($generated@@61 $generated@@38 $generated@@236 $generated@@60) ($generated@@61 $generated@@38 $generated@@236 $generated@@66))
 :pattern ( ($generated@@61 $generated@@38 $generated@@236 $generated@@60))
)))
(assert (= ($generated@@36 $generated@@69) $generated@@2))
(assert (= ($generated@@137 $generated@@69) $generated@@14))
(assert (= ($generated@@36 $generated@@60) $generated@@3))
(assert (= ($generated@@137 $generated@@60) $generated@@14))
(assert (= ($generated@@36 $generated@@66) $generated@@10))
(assert (= ($generated@@137 $generated@@66) $generated@@18))
(assert (= ($generated@@36 $generated@@65) $generated@@11))
(assert (= ($generated@@137 $generated@@65) $generated@@18))
(assert (forall (($generated@@237 T@U) ) (! (= ($generated@@61 $generated@@38 $generated@@237 $generated@@66)  (or (= $generated@@237 $generated@@62) ($generated@@59 ($generated@@63 $generated@@237))))
 :pattern ( ($generated@@61 $generated@@38 $generated@@237 $generated@@66))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (! ($generated@@37 $generated@@22 $generated@@239 $generated $generated@@238)
 :pattern ( ($generated@@37 $generated@@22 $generated@@239 $generated $generated@@238))
)))
(assert (forall (($generated@@240 T@U) ) (! ($generated@@61 $generated@@22 $generated@@240 $generated)
 :pattern ( ($generated@@61 $generated@@22 $generated@@240 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(declare-fun $generated@@245 (T@U) Bool)
(declare-fun $generated@@246 () Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Bool)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () Bool)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Bool)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () Bool)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () Bool)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () Bool)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () Bool)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () Bool)
(declare-fun $generated@@263 () T@U)
(declare-fun $generated@@264 () Bool)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () Bool)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 30) (let (($generated@@269  (=> (= $generated@@241 ($generated@@203 $generated@@62 $generated@@242 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 29)) true) (and (=> (= (ControlFlow 0 2) (- 0 28)) true) (and (=> (= (ControlFlow 0 2) (- 0 27)) true) (and (=> (= (ControlFlow 0 2) (- 0 26)) true) (and (=> (= (ControlFlow 0 2) (- 0 25)) true) (and (=> (= (ControlFlow 0 2) (- 0 24)) true) (and (=> (= (ControlFlow 0 2) (- 0 23)) true) (and (=> (= (ControlFlow 0 2) (- 0 22)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 21)) true) (and (=> (= (ControlFlow 0 2) (- 0 20)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 19)) true) (and (=> (= (ControlFlow 0 2) (- 0 18)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 17)) true) (and (=> (= (ControlFlow 0 2) (- 0 16)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 15)) true) (and (=> (= (ControlFlow 0 2) (- 0 14)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 11)) true) (and (=> (= (ControlFlow 0 2) (- 0 10)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 9)) true) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 7)) true) (and (=> (= (ControlFlow 0 2) (- 0 6)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@243 $generated@@62)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@243 $generated@@62)) (not true)))))))))))))))))))))))))))))))))
(let (($generated@@270  (=> (and (and ($generated@@244 $generated@@242) ($generated@@245 $generated@@242)) (and (or (not (= $generated@@243 $generated@@62)) (not true)) (and ($generated@@61 $generated@@38 $generated@@243 $generated@@69) ($generated@@37 $generated@@38 $generated@@243 $generated@@69 $generated@@242)))) (=> (and (and (and (=> $generated@@246 (and ($generated@@61 $generated@@38 $generated@@247 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@247 ($generated@@39 $generated) $generated@@242))) true) (and (=> $generated@@248 (and ($generated@@61 $generated@@38 $generated@@249 ($generated@@44 $generated)) ($generated@@37 $generated@@38 $generated@@249 ($generated@@44 $generated) $generated@@242))) true)) (and (and (=> $generated@@250 (and ($generated@@61 $generated@@38 $generated@@251 ($generated@@49 $generated)) ($generated@@37 $generated@@38 $generated@@251 ($generated@@49 $generated) $generated@@242))) true) (and (=> $generated@@252 (and ($generated@@61 $generated@@38 $generated@@253 $generated@@65) ($generated@@37 $generated@@38 $generated@@253 $generated@@65 $generated@@242))) true))) (=> (and (and (and (and (=> $generated@@254 (and ($generated@@61 $generated@@38 $generated@@255 ($generated@@54 $generated)) ($generated@@37 $generated@@38 $generated@@255 ($generated@@54 $generated) $generated@@242))) true) (and (=> $generated@@256 (and ($generated@@61 $generated@@38 $generated@@257 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@257 ($generated@@39 $generated) $generated@@242))) true)) (and (and (=> $generated@@258 (and ($generated@@61 $generated@@38 $generated@@259 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@259 ($generated@@39 $generated) $generated@@242))) true) (and (=> $generated@@260 (and ($generated@@61 $generated@@38 $generated@@261 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@261 ($generated@@39 $generated) $generated@@242))) true))) (and (and (and (=> $generated@@262 (and ($generated@@61 $generated@@38 $generated@@263 ($generated@@39 $generated)) ($generated@@37 $generated@@38 $generated@@263 ($generated@@39 $generated) $generated@@242))) true) (and (=> $generated@@264 (and ($generated@@61 $generated@@38 $generated@@265 ($generated@@44 $generated)) ($generated@@37 $generated@@38 $generated@@265 ($generated@@44 $generated) $generated@@242))) true)) (and (and (=> $generated@@266 (and ($generated@@61 $generated@@38 $generated@@267 ($generated@@49 $generated)) ($generated@@37 $generated@@38 $generated@@267 ($generated@@49 $generated) $generated@@242))) true) (and (= 1 $generated@@268) (= (ControlFlow 0 30) 2))))) $generated@@269)))))
$generated@@270)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
