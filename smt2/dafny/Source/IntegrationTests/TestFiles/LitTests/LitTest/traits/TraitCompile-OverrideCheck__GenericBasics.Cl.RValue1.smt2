(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U T@U T@U T@U) Int)
(declare-fun $generated@@43 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (Int) Int)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@T T@T) T@T)
(declare-fun $generated@@55 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@143 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@144 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 T@U) ) ($generated@@24 ($generated@@25 $generated@@26) $generated@@26 $generated)))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@29) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31) $generated@@33) ($generated@@28 $generated@@29 $generated@@32 ($generated@@25 $generated@@31) $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@25 $generated@@31) $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@34 $generated@@29 $generated@@37 ($generated@@25 $generated@@36)) ($generated@@34 $generated@@29 $generated@@37 ($generated@@35 $generated@@36 $generated)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@37 ($generated@@25 $generated@@36)))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@38 $generated@@40 ($generated@@25 $generated@@39)) ($generated@@38 $generated@@40 ($generated@@35 $generated@@39 $generated)))
 :pattern ( ($generated@@38 $generated@@40 ($generated@@25 $generated@@39)))
)))
(assert  (=> (<= 0 $generated@@41) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> (or ($generated@@43 $generated@@46 $generated@@47 $generated@@48 $generated@@49) (and (< 0 $generated@@41) (and (and (or (not (= $generated@@48 $generated@@44)) (not true)) ($generated@@34 $generated@@29 $generated@@48 ($generated@@30 $generated@@46))) ($generated@@38 $generated@@49 $generated@@47)))) (= ($generated@@42 $generated@@46 $generated@@47 $generated@@48 $generated@@49) ($generated@@45 5)))
 :pattern ( ($generated@@42 $generated@@46 $generated@@47 $generated@@48 $generated@@49))
))))
(assert  (and (and (and (and (and (and (forall (($generated@@58 T@T) ($generated@@59 T@T) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@51 $generated@@58 $generated@@59 ($generated@@55 $generated@@58 $generated@@59 $generated@@61 $generated@@62 $generated@@60) $generated@@62) $generated@@60)
 :weight 0
)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (!  (or (= $generated@@67 $generated@@68) (= ($generated@@51 $generated@@63 $generated@@64 ($generated@@55 $generated@@63 $generated@@64 $generated@@66 $generated@@67 $generated@@65) $generated@@68) ($generated@@51 $generated@@63 $generated@@64 $generated@@66 $generated@@68)))
 :weight 0
))) (= ($generated@@8 $generated@@52) 4)) (= ($generated@@8 $generated@@53) 5)) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (= ($generated@@8 ($generated@@54 $generated@@69 $generated@@70)) 6))) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (! (= ($generated@@56 ($generated@@54 $generated@@71 $generated@@72)) $generated@@71)
 :pattern ( ($generated@@54 $generated@@71 $generated@@72))
))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@57 ($generated@@54 $generated@@73 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@54 $generated@@73 $generated@@74))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@76 ($generated@@25 $generated@@75) $generated@@77)  (or (= $generated@@76 $generated@@44) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@29 ($generated@@54 $generated@@52 $generated@@53) $generated@@77 $generated@@76) $generated@@1)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@76 ($generated@@25 $generated@@75) $generated@@77))
)))
(assert (forall (($generated@@78 Int) ) (! (= ($generated@@45 $generated@@78) $generated@@78)
 :pattern ( ($generated@@45 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@79 $generated@@81 $generated@@80) $generated@@80)
 :pattern ( ($generated@@79 $generated@@81 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@50 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@50 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@88 ($generated@@85 $generated@@86 $generated@@87))  (and ($generated@@34 $generated@@29 $generated@@88 ($generated@@35 $generated@@86 $generated@@87)) (or (not (= $generated@@88 $generated@@44)) (not true))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@88 ($generated@@85 $generated@@86 $generated@@87)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@88 ($generated@@35 $generated@@86 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@90 ($generated@@30 $generated@@89))  (and ($generated@@34 $generated@@29 $generated@@90 ($generated@@25 $generated@@89)) (or (not (= $generated@@90 $generated@@44)) (not true))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@90 ($generated@@30 $generated@@89)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@90 ($generated@@25 $generated@@89)))
)))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@27 ($generated@@30 $generated@@92)) $generated@@2) (= ($generated@@91 ($generated@@30 $generated@@92)) $generated@@6))
 :pattern ( ($generated@@30 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (!  (and (= ($generated@@27 ($generated@@25 $generated@@93)) $generated@@5) (= ($generated@@91 ($generated@@25 $generated@@93)) $generated@@6))
 :pattern ( ($generated@@25 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@96 ($generated@@85 $generated@@94 $generated@@95) $generated@@97) ($generated@@28 $generated@@29 $generated@@96 ($generated@@35 $generated@@94 $generated@@95) $generated@@97))
 :pattern ( ($generated@@28 $generated@@29 $generated@@96 ($generated@@85 $generated@@94 $generated@@95) $generated@@97))
 :pattern ( ($generated@@28 $generated@@29 $generated@@96 ($generated@@35 $generated@@94 $generated@@95) $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@100 ($generated@@25 $generated@@99))  (or (= $generated@@100 $generated@@44) (= ($generated@@98 $generated@@100) ($generated@@25 $generated@@99))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@100 ($generated@@25 $generated@@99)))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@102 ($generated@@25 $generated@@101) $generated@@103) ($generated@@28 $generated@@29 $generated@@102 ($generated@@35 $generated@@101 $generated) $generated@@103))
 :pattern ( ($generated@@28 $generated@@29 $generated@@102 ($generated@@25 $generated@@101) $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@106 ($generated@@35 $generated@@104 $generated@@105) $generated@@107)  (or (= $generated@@106 $generated@@44) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@29 ($generated@@54 $generated@@52 $generated@@53) $generated@@107 $generated@@106) $generated@@1)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@106 ($generated@@35 $generated@@104 $generated@@105) $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@38 $generated@@108 $generated) (and (= ($generated@@82 $generated@@10 ($generated@@50 $generated@@10 $generated@@108)) $generated@@108) ($generated@@34 $generated@@10 ($generated@@50 $generated@@10 $generated@@108) $generated)))
 :pattern ( ($generated@@38 $generated@@108 $generated))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@38 ($generated@@82 $generated@@111 $generated@@109) $generated@@110) ($generated@@34 $generated@@111 $generated@@109 $generated@@110))
 :pattern ( ($generated@@38 ($generated@@82 $generated@@111 $generated@@109) $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@85 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@85 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@85 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@85 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@35 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@35 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@121 ($generated@@35 $generated@@122 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@35 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@126 ($generated@@35 $generated@@124 $generated@@125))  (or (= $generated@@126 $generated@@44) ($generated@@24 ($generated@@98 $generated@@126) $generated@@124 $generated@@125)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@126 ($generated@@35 $generated@@124 $generated@@125)))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@30 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@30 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@129 ($generated@@25 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@25 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@50 $generated@@132 ($generated@@82 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@82 $generated@@132 $generated@@131))
)))
(assert  (=> (<= 0 $generated@@41) (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (or ($generated@@43 $generated@@133 $generated@@134 ($generated@@79 $generated@@29 $generated@@135) ($generated@@79 $generated@@53 $generated@@136)) (and (< 0 $generated@@41) (and (and (or (not (= $generated@@135 $generated@@44)) (not true)) ($generated@@34 $generated@@29 $generated@@135 ($generated@@30 $generated@@133))) ($generated@@38 $generated@@136 $generated@@134)))) (= ($generated@@42 $generated@@133 $generated@@134 ($generated@@79 $generated@@29 $generated@@135) ($generated@@79 $generated@@53 $generated@@136)) ($generated@@45 5)))
 :weight 3
 :pattern ( ($generated@@42 $generated@@133 $generated@@134 ($generated@@79 $generated@@29 $generated@@135) ($generated@@79 $generated@@53 $generated@@136)))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@38 $generated@@139 ($generated@@85 $generated@@137 $generated@@138)) (and (= ($generated@@82 $generated@@29 ($generated@@50 $generated@@29 $generated@@139)) $generated@@139) ($generated@@34 $generated@@29 ($generated@@50 $generated@@29 $generated@@139) ($generated@@85 $generated@@137 $generated@@138))))
 :pattern ( ($generated@@38 $generated@@139 ($generated@@85 $generated@@137 $generated@@138)))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@38 $generated@@142 ($generated@@35 $generated@@140 $generated@@141)) (and (= ($generated@@82 $generated@@29 ($generated@@50 $generated@@29 $generated@@142)) $generated@@142) ($generated@@34 $generated@@29 ($generated@@50 $generated@@29 $generated@@142) ($generated@@35 $generated@@140 $generated@@141))))
 :pattern ( ($generated@@38 $generated@@142 ($generated@@35 $generated@@140 $generated@@141)))
)))
(assert  (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@143 $generated@@146 $generated@@147 $generated@@148 ($generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@151 $generated@@152) $generated@@149)
 :weight 0
)) (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@158 $generated@@160) (= ($generated@@143 $generated@@153 $generated@@154 $generated@@155 ($generated@@145 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@143 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@143 $generated@@162 $generated@@163 $generated@@164 ($generated@@145 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@169 $generated@@170) ($generated@@143 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@169 $generated@@170)))
 :weight 0
)))))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 Bool) ($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@13 ($generated@@143 $generated@@29 $generated@@52 $generated@@9 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))  (=> (and (or (not (= $generated@@175 $generated@@171)) (not true)) ($generated@@13 ($generated@@50 $generated@@9 ($generated@@51 $generated@@52 $generated@@53 ($generated@@51 $generated@@29 ($generated@@54 $generated@@52 $generated@@53) $generated@@172 $generated@@175) $generated@@173)))) $generated@@174))
 :pattern ( ($generated@@143 $generated@@29 $generated@@52 $generated@@9 ($generated@@144 $generated@@171 $generated@@172 $generated@@173 $generated@@174) $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (and (= ($generated@@27 ($generated@@85 $generated@@177 $generated@@178)) $generated@@3) (= ($generated@@91 ($generated@@85 $generated@@177 $generated@@178)) $generated@@7))
 :pattern ( ($generated@@85 $generated@@177 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (and (= ($generated@@27 ($generated@@35 $generated@@179 $generated@@180)) $generated@@4) (= ($generated@@91 ($generated@@35 $generated@@179 $generated@@180)) $generated@@7))
 :pattern ( ($generated@@35 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@38 $generated@@182 ($generated@@30 $generated@@181)) (and (= ($generated@@82 $generated@@29 ($generated@@50 $generated@@29 $generated@@182)) $generated@@182) ($generated@@34 $generated@@29 ($generated@@50 $generated@@29 $generated@@182) ($generated@@30 $generated@@181))))
 :pattern ( ($generated@@38 $generated@@182 ($generated@@30 $generated@@181)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@38 $generated@@184 ($generated@@25 $generated@@183)) (and (= ($generated@@82 $generated@@29 ($generated@@50 $generated@@29 $generated@@184)) $generated@@184) ($generated@@34 $generated@@29 ($generated@@50 $generated@@29 $generated@@184) ($generated@@25 $generated@@183))))
 :pattern ( ($generated@@38 $generated@@184 ($generated@@25 $generated@@183)))
)))
(assert (forall (($generated@@185 Int) ) (! (= ($generated@@82 $generated@@10 ($generated@@14 ($generated@@45 $generated@@185))) ($generated@@79 $generated@@53 ($generated@@82 $generated@@10 ($generated@@14 $generated@@185))))
 :pattern ( ($generated@@82 $generated@@10 ($generated@@14 ($generated@@45 $generated@@185))))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@T) ) (! (= ($generated@@82 $generated@@187 ($generated@@79 $generated@@187 $generated@@186)) ($generated@@79 $generated@@53 ($generated@@82 $generated@@187 $generated@@186)))
 :pattern ( ($generated@@82 $generated@@187 ($generated@@79 $generated@@187 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! ($generated@@28 $generated@@10 $generated@@189 $generated $generated@@188)
 :pattern ( ($generated@@28 $generated@@10 $generated@@189 $generated $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ) (! ($generated@@34 $generated@@10 $generated@@190 $generated)
 :pattern ( ($generated@@34 $generated@@10 $generated@@190 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 (T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@202  (=> (= $generated@@191 $generated@@192) (=> (and (= $generated@@193 $generated) (= $generated@@194 $generated@@195)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@196 ($generated@@144 $generated@@44 $generated@@197 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@203 T@U) ($generated@@204 T@U) ) true)))))))
(let (($generated@@205  (=> (and ($generated@@198 $generated@@197) ($generated@@199 $generated@@197)) (=> (and (and (and (or (not (= $generated@@200 $generated@@44)) (not true)) (and ($generated@@34 $generated@@29 $generated@@200 ($generated@@30 $generated@@192)) ($generated@@28 $generated@@29 $generated@@200 ($generated@@30 $generated@@192) $generated@@197))) ($generated@@38 $generated@@201 $generated@@195)) (and (= 0 $generated@@41) (= (ControlFlow 0 4) 2))) $generated@@202))))
$generated@@205)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
