(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T) T@T)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 () Int)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@87 (T@T T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) T@U)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@147 (Int Int) Int)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@180 (T@U T@U T@U) Bool)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(declare-fun $generated@@201 (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! ($generated@@29 $generated@@13 $generated@@31 $generated@@30 $generated@@32)
 :pattern ( ($generated@@29 $generated@@13 $generated@@31 $generated@@30 $generated@@32))
)))
(assert (= ($generated@@11 $generated@@33) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@37 ($generated@@34 $generated@@36) $generated@@38) ($generated@@29 $generated@@33 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@29 $generated@@33 $generated@@37 ($generated@@34 $generated@@36) $generated@@38))
 :pattern ( ($generated@@29 $generated@@33 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@41 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@41 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@41 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@11 $generated@@42) 4)) (= ($generated@@11 $generated@@43) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@11 ($generated@@44 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@44 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@44 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@44 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@44 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@66 ($generated@@35 $generated@@65) $generated@@67)  (or (= $generated@@66 $generated@@39) ($generated@@16 ($generated@@40 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@67 $generated@@66) $generated)))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@66 ($generated@@35 $generated@@65) $generated@@67))
)))
(assert (= ($generated@@27 $generated@@68) 0))
(assert (= ($generated@@69 $generated@@5 $generated@@10) $generated@@68))
(assert  (not ($generated@@70 $generated@@68)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@40 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@40 $generated@@78 $generated@@77))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@82 $generated@@84 $generated@@85 $generated@@86) (and (< 0 $generated@@79) (and (and ($generated@@83 $generated@@85) (or (not (= $generated@@86 $generated@@39)) (not true))) ($generated@@29 $generated@@33 $generated@@86 ($generated@@34 $generated@@84) $generated@@85)))) ($generated@@80 ($generated@@81 $generated@@84 $generated@@85 $generated@@86) $generated@@84 $generated@@85))
 :pattern ( ($generated@@80 ($generated@@81 $generated@@84 $generated@@85 $generated@@86) $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@87 $generated@@33 $generated@@92 ($generated@@88 $generated@@90 $generated@@91))  (and ($generated@@87 $generated@@33 $generated@@92 ($generated@@89 $generated@@90 $generated@@91)) (or (not (= $generated@@92 $generated@@39)) (not true))))
 :pattern ( ($generated@@87 $generated@@33 $generated@@92 ($generated@@88 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@87 $generated@@33 $generated@@92 ($generated@@89 $generated@@90 $generated@@91)))
)))
(assert ($generated@@70 $generated))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@87 $generated@@33 $generated@@94 ($generated@@34 $generated@@93))  (and ($generated@@87 $generated@@33 $generated@@94 ($generated@@35 $generated@@93)) (or (not (= $generated@@94 $generated@@39)) (not true))))
 :pattern ( ($generated@@87 $generated@@33 $generated@@94 ($generated@@34 $generated@@93)))
 :pattern ( ($generated@@87 $generated@@33 $generated@@94 ($generated@@35 $generated@@93)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@80 ($generated@@76 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@29 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@80 ($generated@@76 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (and ($generated@@83 $generated@@102) (and (or (not (= $generated@@103 $generated@@39)) (not true)) ($generated@@87 $generated@@33 $generated@@103 ($generated@@89 $generated@@100 $generated@@101)))) ($generated@@99 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@102 $generated@@103) $generated@@68) $generated@@100))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@102 $generated@@103) $generated@@68) ($generated@@89 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@104 ($generated@@35 $generated@@106)) $generated@@4) (= ($generated@@105 ($generated@@35 $generated@@106)) $generated@@9))
 :pattern ( ($generated@@35 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@104 ($generated@@34 $generated@@107)) $generated@@6) (= ($generated@@105 ($generated@@34 $generated@@107)) $generated@@9))
 :pattern ( ($generated@@34 $generated@@107))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@16 ($generated@@108 $generated@@33 $generated@@42 $generated@@12 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))  (=> (and (or (not (= $generated@@140 $generated@@136)) (not true)) ($generated@@16 ($generated@@40 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@137 $generated@@140) $generated@@138)))) (= $generated@@140 $generated@@139)))
 :pattern ( ($generated@@108 $generated@@33 $generated@@42 $generated@@12 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@144 ($generated@@88 $generated@@142 $generated@@143) $generated@@145) ($generated@@29 $generated@@33 $generated@@144 ($generated@@89 $generated@@142 $generated@@143) $generated@@145))
 :pattern ( ($generated@@29 $generated@@33 $generated@@144 ($generated@@88 $generated@@142 $generated@@143) $generated@@145))
 :pattern ( ($generated@@29 $generated@@33 $generated@@144 ($generated@@89 $generated@@142 $generated@@143) $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@99 $generated@@146 $generated@@30) (and (= ($generated@@76 $generated@@13 ($generated@@40 $generated@@13 $generated@@146)) $generated@@146) ($generated@@87 $generated@@13 ($generated@@40 $generated@@13 $generated@@146) $generated@@30)))
 :pattern ( ($generated@@99 $generated@@146 $generated@@30))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@87 $generated@@13 $generated@@148 $generated@@30) (= ($generated@@147 ($generated@@18 $generated@@148) ($generated@@71 2)) ($generated@@71 1)))
 :pattern ( ($generated@@87 $generated@@13 $generated@@148 $generated@@30))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@29 $generated@@33 $generated@@151 ($generated@@89 $generated@@149 $generated@@150) $generated@@152)  (or (= $generated@@151 $generated@@39) ($generated@@16 ($generated@@40 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@152 $generated@@151) $generated)))))
 :pattern ( ($generated@@29 $generated@@33 $generated@@151 ($generated@@89 $generated@@149 $generated@@150) $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and ($generated@@80 $generated@@154 ($generated@@35 $generated@@153) $generated@@155) ($generated@@83 $generated@@155)) ($generated@@80 $generated@@154 ($generated@@89 $generated@@153 $generated@@30) $generated@@155))
 :pattern ( ($generated@@80 $generated@@154 ($generated@@35 $generated@@153) $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@29 $generated@@33 $generated@@157 ($generated@@35 $generated@@156) $generated@@158) ($generated@@29 $generated@@33 $generated@@157 ($generated@@89 $generated@@156 $generated@@30) $generated@@158))
 :pattern ( ($generated@@29 $generated@@33 $generated@@157 ($generated@@35 $generated@@156) $generated@@158))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (or ($generated@@82 $generated@@159 $generated@@160 $generated@@161) (and (< 0 $generated@@79) (and ($generated@@83 $generated@@160) (and (or (not (= $generated@@161 $generated@@39)) (not true)) (and ($generated@@87 $generated@@33 $generated@@161 ($generated@@34 $generated@@159)) ($generated@@29 $generated@@33 $generated@@161 ($generated@@34 $generated@@159) $generated@@160)))))) (= ($generated@@81 $generated@@159 $generated@@160 $generated@@161) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@160 $generated@@161) $generated@@68)))
 :pattern ( ($generated@@81 $generated@@159 $generated@@160 $generated@@161) ($generated@@83 $generated@@160))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (and (= ($generated@@162 ($generated@@69 $generated@@163 $generated@@164)) $generated@@163) (= ($generated@@28 ($generated@@69 $generated@@163 $generated@@164)) $generated@@164))
 :pattern ( ($generated@@69 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@99 ($generated@@76 $generated@@167 $generated@@165) $generated@@166) ($generated@@87 $generated@@167 $generated@@165 $generated@@166))
 :pattern ( ($generated@@99 ($generated@@76 $generated@@167 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@168 ($generated@@88 $generated@@169 $generated@@170)) $generated@@169)
 :pattern ( ($generated@@88 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (= ($generated@@171 ($generated@@88 $generated@@172 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@88 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (! (= ($generated@@174 ($generated@@89 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@89 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@177 ($generated@@89 $generated@@178 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@89 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@87 $generated@@33 $generated@@184 ($generated@@89 $generated@@182 $generated@@183))  (or (= $generated@@184 $generated@@39) ($generated@@180 ($generated@@181 $generated@@184) $generated@@182 $generated@@183)))
 :pattern ( ($generated@@87 $generated@@33 $generated@@184 ($generated@@89 $generated@@182 $generated@@183)))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@185 ($generated@@35 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@35 $generated@@186))
)))
(assert (forall (($generated@@188 T@U) ) (! (= ($generated@@187 ($generated@@34 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@34 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@T) ) (! (= ($generated@@40 $generated@@190 ($generated@@76 $generated@@190 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@76 $generated@@190 $generated@@189))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and ($generated@@83 $generated@@193) (and (or (not (= $generated@@194 $generated@@39)) (not true)) ($generated@@87 $generated@@33 $generated@@194 ($generated@@89 $generated@@191 $generated@@192)))) ($generated@@16 ($generated@@40 $generated@@12 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@193 $generated@@194) $generated)))) ($generated@@80 ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@193 $generated@@194) $generated@@68) $generated@@191 $generated@@193))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@193 $generated@@194) $generated@@68) ($generated@@89 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> ($generated@@99 $generated@@197 ($generated@@88 $generated@@195 $generated@@196)) (and (= ($generated@@76 $generated@@33 ($generated@@40 $generated@@33 $generated@@197)) $generated@@197) ($generated@@87 $generated@@33 ($generated@@40 $generated@@33 $generated@@197) ($generated@@88 $generated@@195 $generated@@196))))
 :pattern ( ($generated@@99 $generated@@197 ($generated@@88 $generated@@195 $generated@@196)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@99 $generated@@200 ($generated@@89 $generated@@198 $generated@@199)) (and (= ($generated@@76 $generated@@33 ($generated@@40 $generated@@33 $generated@@200)) $generated@@200) ($generated@@87 $generated@@33 ($generated@@40 $generated@@33 $generated@@200) ($generated@@89 $generated@@198 $generated@@199))))
 :pattern ( ($generated@@99 $generated@@200 ($generated@@89 $generated@@198 $generated@@199)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@87 $generated@@33 $generated@@203 ($generated@@35 $generated@@202))  (or (= $generated@@203 $generated@@39) ($generated@@201 ($generated@@181 $generated@@203) $generated@@202)))
 :pattern ( ($generated@@87 $generated@@33 $generated@@203 ($generated@@35 $generated@@202)))
)))
(assert (forall (($generated@@204 Int) ($generated@@205 Int) ) (! (= ($generated@@147 $generated@@204 $generated@@205) (mod $generated@@204 $generated@@205))
 :pattern ( ($generated@@147 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (and (= ($generated@@104 ($generated@@88 $generated@@206 $generated@@207)) $generated@@2) (= ($generated@@105 ($generated@@88 $generated@@206 $generated@@207)) $generated@@8))
 :pattern ( ($generated@@88 $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (and (= ($generated@@104 ($generated@@89 $generated@@208 $generated@@209)) $generated@@3) (= ($generated@@105 ($generated@@89 $generated@@208 $generated@@209)) $generated@@8))
 :pattern ( ($generated@@89 $generated@@208 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@99 $generated@@211 ($generated@@35 $generated@@210)) (and (= ($generated@@76 $generated@@33 ($generated@@40 $generated@@33 $generated@@211)) $generated@@211) ($generated@@87 $generated@@33 ($generated@@40 $generated@@33 $generated@@211) ($generated@@35 $generated@@210))))
 :pattern ( ($generated@@99 $generated@@211 ($generated@@35 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@99 $generated@@213 ($generated@@34 $generated@@212)) (and (= ($generated@@76 $generated@@33 ($generated@@40 $generated@@33 $generated@@213)) $generated@@213) ($generated@@87 $generated@@33 ($generated@@40 $generated@@33 $generated@@213) ($generated@@34 $generated@@212))))
 :pattern ( ($generated@@99 $generated@@213 ($generated@@34 $generated@@212)))
)))
(assert (= ($generated@@104 $generated@@30) $generated@@1))
(assert (= ($generated@@105 $generated@@30) $generated@@7))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@87 $generated@@33 $generated@@215 ($generated@@35 $generated@@214)) ($generated@@87 $generated@@33 $generated@@215 ($generated@@89 $generated@@214 $generated@@30)))
 :pattern ( ($generated@@87 $generated@@33 $generated@@215 ($generated@@35 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@99 $generated@@217 ($generated@@35 $generated@@216)) ($generated@@99 $generated@@217 ($generated@@89 $generated@@216 $generated@@30)))
 :pattern ( ($generated@@99 $generated@@217 ($generated@@35 $generated@@216)))
)))
(assert (forall (($generated@@218 Int) ) (! (= ($generated@@76 $generated@@13 ($generated@@17 ($generated@@71 $generated@@218))) ($generated@@73 $generated@@43 ($generated@@76 $generated@@13 ($generated@@17 $generated@@218))))
 :pattern ( ($generated@@76 $generated@@13 ($generated@@17 ($generated@@71 $generated@@218))))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@T) ) (! (= ($generated@@76 $generated@@220 ($generated@@73 $generated@@220 $generated@@219)) ($generated@@73 $generated@@43 ($generated@@76 $generated@@220 $generated@@219)))
 :pattern ( ($generated@@76 $generated@@220 ($generated@@73 $generated@@220 $generated@@219)))
)))
(assert  (=> (<= 0 $generated@@79) (forall (($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (or ($generated@@82 $generated@@221 $generated@@222 $generated@@223) (and (< 0 $generated@@79) (and ($generated@@83 $generated@@222) (and (or (not (= $generated@@223 $generated@@39)) (not true)) (and ($generated@@87 $generated@@33 $generated@@223 ($generated@@34 $generated@@221)) ($generated@@29 $generated@@33 $generated@@223 ($generated@@34 $generated@@221) $generated@@222)))))) ($generated@@99 ($generated@@81 $generated@@221 $generated@@222 $generated@@223) $generated@@221))
 :pattern ( ($generated@@81 $generated@@221 $generated@@222 $generated@@223))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@224 () Bool)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@230  (=> (and (and (= $generated@@224 ($generated@@16 ($generated@@108 $generated@@33 $generated@@42 $generated@@12 $generated@@225 $generated@@226 $generated@@68))) (= ($generated@@81 $generated@@227 $generated@@228 $generated@@226) ($generated@@41 $generated@@42 $generated@@43 ($generated@@41 $generated@@33 ($generated@@44 $generated@@42 $generated@@43) $generated@@228 $generated@@226) $generated@@68))) (and ($generated@@99 ($generated@@81 $generated@@227 $generated@@228 $generated@@226) $generated@@227) (= (ControlFlow 0 3) (- 0 2)))) $generated@@224)))
(let (($generated@@231 true))
(let (($generated@@232  (=> (= $generated@@225 ($generated@@109 $generated@@39 $generated@@228 $generated $generated@@226)) (and (=> (= (ControlFlow 0 4) 1) $generated@@231) (=> (= (ControlFlow 0 4) 3) $generated@@230)))))
(let (($generated@@233  (=> (and ($generated@@83 $generated@@228) ($generated@@229 $generated@@228)) (=> (and (and (or (not (= $generated@@226 $generated@@39)) (not true)) (and ($generated@@87 $generated@@33 $generated@@226 ($generated@@34 $generated@@227)) ($generated@@29 $generated@@33 $generated@@226 ($generated@@34 $generated@@227) $generated@@228))) (and (= 0 $generated@@79) (= (ControlFlow 0 5) 4))) $generated@@232))))
$generated@@233)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
