(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U T@U T@U) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@136 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (forall (($generated@@26 T@U) ) ($generated@@24 ($generated@@25 $generated@@26) $generated@@26 $generated)))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@8 $generated@@29) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31) $generated@@33) ($generated@@28 $generated@@29 $generated@@32 ($generated@@25 $generated@@31) $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@31) $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@25 $generated@@31) $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (!  (=> ($generated@@34 $generated@@29 $generated@@37 ($generated@@25 $generated@@36)) ($generated@@34 $generated@@29 $generated@@37 ($generated@@35 $generated@@36 $generated)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@37 ($generated@@25 $generated@@36)))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (!  (=> ($generated@@38 $generated@@40 ($generated@@25 $generated@@39)) ($generated@@38 $generated@@40 ($generated@@35 $generated@@39 $generated)))
 :pattern ( ($generated@@38 $generated@@40 ($generated@@25 $generated@@39)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@8 $generated@@44) 4)) (= ($generated@@8 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@8 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@68 ($generated@@25 $generated@@67) $generated@@69)  (or (= $generated@@68 $generated@@41) ($generated@@13 ($generated@@42 $generated@@9 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@69 $generated@@68) $generated@@1)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@68 ($generated@@25 $generated@@67) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@42 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@42 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@76 ($generated@@73 $generated@@74 $generated@@75))  (and ($generated@@34 $generated@@29 $generated@@76 ($generated@@35 $generated@@74 $generated@@75)) (or (not (= $generated@@76 $generated@@41)) (not true))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@76 ($generated@@73 $generated@@74 $generated@@75)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@76 ($generated@@35 $generated@@74 $generated@@75)))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@78 ($generated@@30 $generated@@77))  (and ($generated@@34 $generated@@29 $generated@@78 ($generated@@25 $generated@@77)) (or (not (= $generated@@78 $generated@@41)) (not true))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@78 ($generated@@30 $generated@@77)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@78 ($generated@@25 $generated@@77)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@79 ($generated@@70 $generated@@83 $generated@@80) $generated@@81 $generated@@82) ($generated@@28 $generated@@83 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@79 ($generated@@70 $generated@@83 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 T@U) ) (!  (and (= ($generated@@27 ($generated@@30 $generated@@85)) $generated@@2) (= ($generated@@84 ($generated@@30 $generated@@85)) $generated@@6))
 :pattern ( ($generated@@30 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (!  (and (= ($generated@@27 ($generated@@25 $generated@@86)) $generated@@5) (= ($generated@@84 ($generated@@25 $generated@@86)) $generated@@6))
 :pattern ( ($generated@@25 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@89 ($generated@@73 $generated@@87 $generated@@88) $generated@@90) ($generated@@28 $generated@@29 $generated@@89 ($generated@@35 $generated@@87 $generated@@88) $generated@@90))
 :pattern ( ($generated@@28 $generated@@29 $generated@@89 ($generated@@73 $generated@@87 $generated@@88) $generated@@90))
 :pattern ( ($generated@@28 $generated@@29 $generated@@89 ($generated@@35 $generated@@87 $generated@@88) $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@93 ($generated@@25 $generated@@92))  (or (= $generated@@93 $generated@@41) (= ($generated@@91 $generated@@93) ($generated@@25 $generated@@92))))
 :pattern ( ($generated@@34 $generated@@29 $generated@@93 ($generated@@25 $generated@@92)))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (and ($generated@@79 $generated@@96 ($generated@@25 $generated@@95) $generated@@97) ($generated@@94 $generated@@97)) ($generated@@79 $generated@@96 ($generated@@35 $generated@@95 $generated) $generated@@97))
 :pattern ( ($generated@@79 $generated@@96 ($generated@@25 $generated@@95) $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@99 ($generated@@25 $generated@@98) $generated@@100) ($generated@@28 $generated@@29 $generated@@99 ($generated@@35 $generated@@98 $generated) $generated@@100))
 :pattern ( ($generated@@28 $generated@@29 $generated@@99 ($generated@@25 $generated@@98) $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@103 ($generated@@35 $generated@@101 $generated@@102) $generated@@104)  (or (= $generated@@103 $generated@@41) ($generated@@13 ($generated@@42 $generated@@9 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@104 $generated@@103) $generated@@1)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@103 ($generated@@35 $generated@@101 $generated@@102) $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@38 $generated@@105 $generated) (and (= ($generated@@70 $generated@@10 ($generated@@42 $generated@@10 $generated@@105)) $generated@@105) ($generated@@34 $generated@@10 ($generated@@42 $generated@@10 $generated@@105) $generated)))
 :pattern ( ($generated@@38 $generated@@105 $generated))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@T) ) (! (= ($generated@@38 ($generated@@70 $generated@@108 $generated@@106) $generated@@107) ($generated@@34 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@38 ($generated@@70 $generated@@108 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@73 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@73 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@73 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@73 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@35 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@35 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@35 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@35 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@34 $generated@@29 $generated@@123 ($generated@@35 $generated@@121 $generated@@122))  (or (= $generated@@123 $generated@@41) ($generated@@24 ($generated@@91 $generated@@123) $generated@@121 $generated@@122)))
 :pattern ( ($generated@@34 $generated@@29 $generated@@123 ($generated@@35 $generated@@121 $generated@@122)))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@30 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@30 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@25 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@25 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@42 $generated@@129 ($generated@@70 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@70 $generated@@129 $generated@@128))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> ($generated@@38 $generated@@132 ($generated@@73 $generated@@130 $generated@@131)) (and (= ($generated@@70 $generated@@29 ($generated@@42 $generated@@29 $generated@@132)) $generated@@132) ($generated@@34 $generated@@29 ($generated@@42 $generated@@29 $generated@@132) ($generated@@73 $generated@@130 $generated@@131))))
 :pattern ( ($generated@@38 $generated@@132 ($generated@@73 $generated@@130 $generated@@131)))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@38 $generated@@135 ($generated@@35 $generated@@133 $generated@@134)) (and (= ($generated@@70 $generated@@29 ($generated@@42 $generated@@29 $generated@@135)) $generated@@135) ($generated@@34 $generated@@29 ($generated@@42 $generated@@29 $generated@@135) ($generated@@35 $generated@@133 $generated@@134))))
 :pattern ( ($generated@@38 $generated@@135 ($generated@@35 $generated@@133 $generated@@134)))
)))
(assert  (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@136 $generated@@139 $generated@@140 $generated@@141 ($generated@@138 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@144 $generated@@145) $generated@@142)
 :weight 0
)) (and (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@151 $generated@@153) (= ($generated@@136 $generated@@146 $generated@@147 $generated@@148 ($generated@@138 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@136 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (or (= $generated@@161 $generated@@163) (= ($generated@@136 $generated@@155 $generated@@156 $generated@@157 ($generated@@138 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@160 $generated@@161 $generated@@158) $generated@@162 $generated@@163) ($generated@@136 $generated@@155 $generated@@156 $generated@@157 $generated@@159 $generated@@162 $generated@@163)))
 :weight 0
)))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 Bool) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@13 ($generated@@136 $generated@@29 $generated@@44 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))  (=> (and (or (not (= $generated@@168 $generated@@164)) (not true)) ($generated@@13 ($generated@@42 $generated@@9 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@165 $generated@@168) $generated@@166)))) $generated@@167))
 :pattern ( ($generated@@136 $generated@@29 $generated@@44 $generated@@9 ($generated@@137 $generated@@164 $generated@@165 $generated@@166 $generated@@167) $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (and (= ($generated@@27 ($generated@@73 $generated@@170 $generated@@171)) $generated@@3) (= ($generated@@84 ($generated@@73 $generated@@170 $generated@@171)) $generated@@7))
 :pattern ( ($generated@@73 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (and (= ($generated@@27 ($generated@@35 $generated@@172 $generated@@173)) $generated@@4) (= ($generated@@84 ($generated@@35 $generated@@172 $generated@@173)) $generated@@7))
 :pattern ( ($generated@@35 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@38 $generated@@175 ($generated@@30 $generated@@174)) (and (= ($generated@@70 $generated@@29 ($generated@@42 $generated@@29 $generated@@175)) $generated@@175) ($generated@@34 $generated@@29 ($generated@@42 $generated@@29 $generated@@175) ($generated@@30 $generated@@174))))
 :pattern ( ($generated@@38 $generated@@175 ($generated@@30 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@38 $generated@@177 ($generated@@25 $generated@@176)) (and (= ($generated@@70 $generated@@29 ($generated@@42 $generated@@29 $generated@@177)) $generated@@177) ($generated@@34 $generated@@29 ($generated@@42 $generated@@29 $generated@@177) ($generated@@25 $generated@@176))))
 :pattern ( ($generated@@38 $generated@@177 ($generated@@25 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@28 $generated@@10 $generated@@179 $generated $generated@@178)
 :pattern ( ($generated@@28 $generated@@10 $generated@@179 $generated $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! ($generated@@34 $generated@@10 $generated@@180 $generated)
 :pattern ( ($generated@@34 $generated@@10 $generated@@180 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () Int)
(declare-fun $generated@@184 () Int)
(declare-fun $generated@@185 (T@U) Bool)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@193  (=> (= $generated@@181 ($generated@@137 $generated@@41 $generated@@182 $generated@@1 false)) (=> (and (= $generated@@183 (+ $generated@@184 4)) (= (ControlFlow 0 2) (- 0 1))) true))))
(let (($generated@@194  (=> (and (and ($generated@@94 $generated@@182) ($generated@@185 $generated@@182)) (and (or (not (= $generated@@186 $generated@@41)) (not true)) (and ($generated@@34 $generated@@29 $generated@@186 ($generated@@30 $generated@@187)) ($generated@@28 $generated@@29 $generated@@186 ($generated@@30 $generated@@187) $generated@@182)))) (=> (and (and (and ($generated@@38 $generated@@188 $generated@@189) ($generated@@79 $generated@@188 $generated@@189 $generated@@182)) (=> $generated@@190 (and ($generated@@38 $generated@@191 $generated@@189) ($generated@@79 $generated@@191 $generated@@189 $generated@@182)))) (and (= 0 $generated@@192) (= (ControlFlow 0 3) 2))) $generated@@193))))
$generated@@194)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
