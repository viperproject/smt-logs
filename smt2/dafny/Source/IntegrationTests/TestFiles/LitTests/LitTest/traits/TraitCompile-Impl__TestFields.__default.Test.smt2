(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@T T@U T@U) Bool)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@84 (Int) Int)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert ($generated@@30 $generated@@31))
(assert (= ($generated@@11 $generated@@33) 3))
(assert (forall (($generated@@36 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@36 $generated@@31)  (or (= $generated@@36 $generated@@34) (= ($generated@@35 $generated@@36) $generated@@31)))
 :pattern ( ($generated@@32 $generated@@33 $generated@@36 $generated@@31))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@38 $generated@@48 $generated@@49 ($generated@@45 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@52) $generated@@50)
 :weight 0
)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (or (= $generated@@57 $generated@@58) (= ($generated@@38 $generated@@53 $generated@@54 ($generated@@45 $generated@@53 $generated@@54 $generated@@56 $generated@@57 $generated@@55) $generated@@58) ($generated@@38 $generated@@53 $generated@@54 $generated@@56 $generated@@58)))
 :weight 0
))) (= ($generated@@11 $generated@@39) 4)) (= ($generated@@11 $generated@@40) 5)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (= ($generated@@11 ($generated@@41 $generated@@59 $generated@@60)) 6))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@46 ($generated@@41 $generated@@61 $generated@@62)) $generated@@61)
 :pattern ( ($generated@@41 $generated@@61 $generated@@62))
))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@47 ($generated@@41 $generated@@63 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@41 $generated@@63 $generated@@64))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (and ($generated@@43 $generated@@65) (and (or (not (= $generated@@66 $generated@@34)) (not true)) ($generated@@32 $generated@@33 $generated@@66 $generated@@44))) ($generated@@32 $generated@@13 ($generated@@37 $generated@@13 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@65 $generated@@66) $generated@@42)) $generated))
 :pattern ( ($generated@@37 $generated@@13 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@65 $generated@@66) $generated@@42)))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@67 $generated@@33 $generated@@69 $generated@@68 $generated@@70) ($generated@@67 $generated@@33 $generated@@69 $generated@@44 $generated@@70))
 :pattern ( ($generated@@67 $generated@@33 $generated@@69 $generated@@68 $generated@@70))
 :pattern ( ($generated@@67 $generated@@33 $generated@@69 $generated@@44 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@67 $generated@@33 $generated@@72 $generated@@71 $generated@@73) ($generated@@67 $generated@@33 $generated@@72 $generated@@31 $generated@@73))
 :pattern ( ($generated@@67 $generated@@33 $generated@@72 $generated@@71 $generated@@73))
 :pattern ( ($generated@@67 $generated@@33 $generated@@72 $generated@@31 $generated@@73))
)))
(assert (= ($generated@@27 $generated@@42) 0))
(assert (= ($generated@@74 $generated@@6 $generated@@10) $generated@@42))
(assert  (not ($generated@@75 $generated@@42)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@67 $generated@@33 $generated@@76 $generated@@44 $generated@@77)  (or (= $generated@@76 $generated@@34) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@77 $generated@@76) $generated@@1)))))
 :pattern ( ($generated@@67 $generated@@33 $generated@@76 $generated@@44 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@67 $generated@@33 $generated@@78 $generated@@31 $generated@@79)  (or (= $generated@@78 $generated@@34) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@79 $generated@@78) $generated@@1)))))
 :pattern ( ($generated@@67 $generated@@33 $generated@@78 $generated@@31 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> ($generated@@80 $generated@@81 $generated@@82) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@81 $generated@@83) $generated@@1))) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@82 $generated@@83) $generated@@1))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@82 $generated@@83) $generated@@1))
)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@85 Int) ) (! (= ($generated@@84 $generated@@85) $generated@@85)
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@86 $generated@@88 $generated@@87) $generated@@87)
 :pattern ( ($generated@@86 $generated@@88 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@37 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@37 $generated@@91 $generated@@90))
)))
(assert ($generated@@75 $generated@@1))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (!  (=> ($generated@@80 $generated@@92 $generated@@93) (=> ($generated@@67 $generated@@96 $generated@@94 $generated@@95 $generated@@92) ($generated@@67 $generated@@96 $generated@@94 $generated@@95 $generated@@93)))
 :pattern ( ($generated@@80 $generated@@92 $generated@@93) ($generated@@67 $generated@@96 $generated@@94 $generated@@95 $generated@@92))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@97 $generated@@68)  (and ($generated@@32 $generated@@33 $generated@@97 $generated@@44) (or (not (= $generated@@97 $generated@@34)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@97 $generated@@68))
 :pattern ( ($generated@@32 $generated@@33 $generated@@97 $generated@@44))
)))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@98 $generated@@71)  (and ($generated@@32 $generated@@33 $generated@@98 $generated@@31) (or (not (= $generated@@98 $generated@@34)) (not true))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@98 $generated@@71))
 :pattern ( ($generated@@32 $generated@@33 $generated@@98 $generated@@31))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@67 $generated@@33 $generated@@99 $generated@@31 $generated@@100) ($generated@@67 $generated@@33 $generated@@99 $generated@@44 $generated@@100))
 :pattern ( ($generated@@67 $generated@@33 $generated@@99 $generated@@31 $generated@@100))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or (not (= $generated@@101 $generated@@103)) (not true)) (=> (and ($generated@@80 $generated@@101 $generated@@102) ($generated@@80 $generated@@102 $generated@@103)) ($generated@@80 $generated@@101 $generated@@103)))
 :pattern ( ($generated@@80 $generated@@101 $generated@@102) ($generated@@80 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (and (= ($generated@@104 ($generated@@74 $generated@@105 $generated@@106)) $generated@@105) (= ($generated@@29 ($generated@@74 $generated@@105 $generated@@106)) $generated@@106))
 :pattern ( ($generated@@74 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and (and ($generated@@43 $generated@@107) (and (or (not (= $generated@@108 $generated@@34)) (not true)) ($generated@@32 $generated@@33 $generated@@108 $generated@@44))) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@107 $generated@@108) $generated@@1)))) ($generated@@67 $generated@@13 ($generated@@37 $generated@@13 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@107 $generated@@108) $generated@@42)) $generated $generated@@107))
 :pattern ( ($generated@@37 $generated@@13 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@107 $generated@@108) $generated@@42)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@37 $generated@@110 ($generated@@89 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@89 $generated@@110 $generated@@109))
)))
(assert  (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@111 $generated@@114 $generated@@115 $generated@@116 ($generated@@113 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@111 $generated@@121 $generated@@122 $generated@@123 ($generated@@113 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@111 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@111 $generated@@130 $generated@@131 $generated@@132 ($generated@@113 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@111 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 Bool) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@16 ($generated@@111 $generated@@33 $generated@@39 $generated@@12 ($generated@@112 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))  (=> (and (or (not (= $generated@@143 $generated@@139)) (not true)) ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@140 $generated@@143) $generated@@141)))) $generated@@142))
 :pattern ( ($generated@@111 $generated@@33 $generated@@39 $generated@@12 ($generated@@112 $generated@@139 $generated@@140 $generated@@141 $generated@@142) $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@32 $generated@@33 $generated@@145 $generated@@31) ($generated@@32 $generated@@33 $generated@@145 $generated@@44))
 :pattern ( ($generated@@32 $generated@@33 $generated@@145 $generated@@31))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> ($generated@@43 ($generated@@45 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@147 ($generated@@45 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@147) $generated@@148 $generated@@149))) ($generated@@80 $generated@@146 ($generated@@45 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@147 ($generated@@45 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@147) $generated@@148 $generated@@149))))
 :pattern ( ($generated@@45 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@147 ($generated@@45 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@146 $generated@@147) $generated@@148 $generated@@149)))
)))
(assert (= ($generated@@28 $generated@@71) $generated@@3))
(assert (= ($generated@@150 $generated@@71) $generated@@8))
(assert (= ($generated@@28 $generated@@31) $generated@@4))
(assert (= ($generated@@150 $generated@@31) $generated@@8))
(assert (= ($generated@@28 $generated@@68) $generated@@5))
(assert (= ($generated@@150 $generated@@68) $generated@@9))
(assert (= ($generated@@28 $generated@@44) $generated@@7))
(assert (= ($generated@@150 $generated@@44) $generated@@9))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@151 $generated@@44)  (or (= $generated@@151 $generated@@34) ($generated@@30 ($generated@@35 $generated@@151))))
 :pattern ( ($generated@@32 $generated@@33 $generated@@151 $generated@@44))
)))
(assert (forall (($generated@@152 Int) ) (! (= ($generated@@89 $generated@@13 ($generated@@17 ($generated@@84 $generated@@152))) ($generated@@86 $generated@@40 ($generated@@89 $generated@@13 ($generated@@17 $generated@@152))))
 :pattern ( ($generated@@89 $generated@@13 ($generated@@17 ($generated@@84 $generated@@152))))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@89 $generated@@154 ($generated@@86 $generated@@154 $generated@@153)) ($generated@@86 $generated@@40 ($generated@@89 $generated@@154 $generated@@153)))
 :pattern ( ($generated@@89 $generated@@154 ($generated@@86 $generated@@154 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! ($generated@@67 $generated@@13 $generated@@156 $generated $generated@@155)
 :pattern ( ($generated@@67 $generated@@13 $generated@@156 $generated $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! ($generated@@32 $generated@@13 $generated@@157 $generated)
 :pattern ( ($generated@@32 $generated@@13 $generated@@157 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 () T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () Bool)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () Bool)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 23) (let (($generated@@172  (=> (= $generated@@158 ($generated@@112 $generated@@34 $generated@@159 $generated@@1 false)) (=> (and (or (not (= $generated@@160 $generated@@34)) (not true)) ($generated@@32 $generated@@33 $generated@@160 $generated@@31)) (=> (and (and (not ($generated@@16 ($generated@@37 $generated@@12 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@159 $generated@@160) $generated@@1)))) (= $generated@@161 ($generated@@45 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@159 $generated@@160 ($generated@@45 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@159 $generated@@160) $generated@@1 ($generated@@89 $generated@@12 ($generated@@15 true)))))) (and ($generated@@43 $generated@@161) ($generated@@162 $generated@@161))) (and (=> (= (ControlFlow 0 2) (- 0 22)) true) (and (=> (= (ControlFlow 0 2) (- 0 21)) true) (and (=> (= (ControlFlow 0 2) (- 0 20)) (or (not (= $generated@@160 $generated@@34)) (not true))) (=> (or (not (= $generated@@160 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 19)) ($generated@@16 ($generated@@111 $generated@@33 $generated@@39 $generated@@12 $generated@@158 $generated@@160 $generated@@42))) (=> ($generated@@16 ($generated@@111 $generated@@33 $generated@@39 $generated@@12 $generated@@158 $generated@@160 $generated@@42)) (=> (= $generated@@163 ($generated@@84 15)) (=> (and (= $generated@@164 ($generated@@45 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@161 $generated@@160 ($generated@@45 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@161 $generated@@160) $generated@@42 ($generated@@89 $generated@@13 ($generated@@17 $generated@@163))))) ($generated@@43 $generated@@164)) (and (=> (= (ControlFlow 0 2) (- 0 18)) true) (and (=> (= (ControlFlow 0 2) (- 0 17)) (or (not (= $generated@@160 $generated@@34)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (= ($generated@@18 ($generated@@37 $generated@@13 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@164 $generated@@160) $generated@@42))) ($generated@@84 15))) (=> (= ($generated@@18 ($generated@@37 $generated@@13 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@164 $generated@@160) $generated@@42))) ($generated@@84 15)) (and (=> (= (ControlFlow 0 2) (- 0 15)) true) (and (=> (= (ControlFlow 0 2) (- 0 14)) (or (not (= $generated@@160 $generated@@34)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 13)) true) (and (=> (= (ControlFlow 0 2) (- 0 12)) (or (not (= $generated@@160 $generated@@34)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 11)) true) (and (=> (= (ControlFlow 0 2) (- 0 10)) (or (not (= $generated@@160 $generated@@34)) (not true))) (=> (or (not (= $generated@@160 $generated@@34)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 9)) ($generated@@16 ($generated@@111 $generated@@33 $generated@@39 $generated@@12 $generated@@158 $generated@@160 $generated@@42))) (=> ($generated@@16 ($generated@@111 $generated@@33 $generated@@39 $generated@@12 $generated@@158 $generated@@160 $generated@@42)) (=> (= $generated@@165 ($generated@@84 18)) (=> (and (= $generated@@166 ($generated@@45 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@164 $generated@@160 ($generated@@45 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@164 $generated@@160) $generated@@42 ($generated@@89 $generated@@13 ($generated@@17 $generated@@165))))) ($generated@@43 $generated@@166)) (and (=> (= (ControlFlow 0 2) (- 0 8)) true) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@160 $generated@@34)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (= ($generated@@18 ($generated@@37 $generated@@13 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@166 $generated@@160) $generated@@42))) ($generated@@84 18))) (=> (= ($generated@@18 ($generated@@37 $generated@@13 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@33 ($generated@@41 $generated@@39 $generated@@40) $generated@@166 $generated@@160) $generated@@42))) ($generated@@84 18)) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@160 $generated@@34)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (or (not (= $generated@@160 $generated@@34)) (not true))))))))))))))))))))))))))))))))))))))
(let (($generated@@173  (=> (and (and (and ($generated@@43 $generated@@159) ($generated@@162 $generated@@159)) (and (=> $generated@@167 (and ($generated@@32 $generated@@33 $generated@@168 $generated@@71) ($generated@@67 $generated@@33 $generated@@168 $generated@@71 $generated@@159))) true)) (and (and (=> $generated@@169 (and ($generated@@32 $generated@@33 $generated@@170 $generated@@68) ($generated@@67 $generated@@33 $generated@@170 $generated@@68 $generated@@159))) true) (and (= 1 $generated@@171) (= (ControlFlow 0 23) 2)))) $generated@@172)))
$generated@@173)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
