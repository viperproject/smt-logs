(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) T@U)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) T@U)
(declare-fun $generated@@79 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@80 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@86 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 () T@T)
(declare-fun $generated@@89 (T@T T@T) T@T)
(declare-fun $generated@@90 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@91 (T@T) T@T)
(declare-fun $generated@@92 (T@T) T@T)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@154 (T@U T@U T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@190 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@191 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@192 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(declare-fun $generated@@225 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (forall (($generated@@27 T@U) ) (!  (not ($generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27))
)))
(assert (= ($generated@@9 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33 $generated@@34)) (forall (($generated@@37 T@U) ) (!  (=> ($generated@@31 $generated@@37 $generated@@35) ($generated@@31 $generated@@37 $generated@@33))
 :pattern ( ($generated@@31 $generated@@37 $generated@@35))
 :pattern ( ($generated@@31 $generated@@37 $generated@@33))
))) (forall (($generated@@38 T@U) ) (!  (=> ($generated@@31 $generated@@38 $generated@@34) ($generated@@31 $generated@@38 $generated@@36))
 :pattern ( ($generated@@31 $generated@@38 $generated@@34))
 :pattern ( ($generated@@31 $generated@@38 $generated@@36))
))) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@35 $generated@@36)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@33 $generated@@34)) ($generated@@28 $generated@@29 $generated@@32 ($generated@@30 $generated@@35 $generated@@36)))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (!  (=> (and ($generated@@41 $generated@@45) (and ($generated@@31 $generated@@47 $generated@@43) ($generated@@28 $generated@@29 $generated@@46 ($generated@@30 $generated@@43 $generated@@44)))) (= ($generated@@42 ($generated@@39 $generated@@43 $generated@@44 $generated@@40 $generated@@46 $generated@@47) $generated@@26) ($generated@@42 ($generated@@39 $generated@@43 $generated@@44 $generated@@45 $generated@@46 $generated@@47) $generated@@26)))
 :pattern ( ($generated@@39 $generated@@43 $generated@@44 $generated@@40 $generated@@46 $generated@@47) ($generated@@41 $generated@@45))
 :pattern ( ($generated@@39 $generated@@43 $generated@@44 $generated@@45 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 ($generated@@48 $generated@@51 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@48 $generated@@51 $generated@@50))
)))
(assert (= ($generated@@9 $generated@@52) 4))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@28 $generated@@52 $generated@@58 ($generated@@53 $generated@@56 $generated@@57))  (and ($generated@@28 $generated@@52 $generated@@58 ($generated@@54 $generated@@56 $generated@@57)) (or (not (= $generated@@58 $generated@@55)) (not true))))
 :pattern ( ($generated@@28 $generated@@52 $generated@@58 ($generated@@53 $generated@@56 $generated@@57)))
 :pattern ( ($generated@@28 $generated@@52 $generated@@58 ($generated@@54 $generated@@56 $generated@@57)))
)))
(assert ($generated@@41 $generated@@40))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@59 ($generated@@49 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@60 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@59 ($generated@@49 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@60 $generated@@29 $generated@@68 ($generated@@65 $generated@@66 $generated@@67) $generated@@69) ($generated@@60 $generated@@29 $generated@@68 ($generated@@30 $generated@@66 $generated@@67) $generated@@69))
 :pattern ( ($generated@@60 $generated@@29 $generated@@68 ($generated@@65 $generated@@66 $generated@@67) $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@60 $generated@@29 $generated@@73 ($generated@@70 $generated@@71 $generated@@72) $generated@@74) ($generated@@60 $generated@@29 $generated@@73 ($generated@@65 $generated@@71 $generated@@72) $generated@@74))
 :pattern ( ($generated@@60 $generated@@29 $generated@@73 ($generated@@70 $generated@@71 $generated@@72) $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@60 $generated@@52 $generated@@77 ($generated@@53 $generated@@75 $generated@@76) $generated@@78) ($generated@@60 $generated@@52 $generated@@77 ($generated@@54 $generated@@75 $generated@@76) $generated@@78))
 :pattern ( ($generated@@60 $generated@@52 $generated@@77 ($generated@@53 $generated@@75 $generated@@76) $generated@@78))
 :pattern ( ($generated@@60 $generated@@52 $generated@@77 ($generated@@54 $generated@@75 $generated@@76) $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (and ($generated@@41 $generated@@84) ($generated@@60 $generated@@29 $generated@@81 ($generated@@30 $generated@@82 $generated@@83) $generated@@84)) (forall (($generated@@85 T@U) ) (!  (=> (and ($generated@@59 $generated@@85 $generated@@82 $generated@@84) ($generated@@80 $generated@@82 $generated@@83 $generated@@84 $generated@@81 $generated@@85)) ($generated@@59 ($generated@@79 $generated@@82 $generated@@83 $generated@@84 $generated@@81 $generated@@85) $generated@@83 $generated@@84))
 :pattern ( ($generated@@79 $generated@@82 $generated@@83 $generated@@84 $generated@@81 $generated@@85))
)))
 :pattern ( ($generated@@60 $generated@@29 $generated@@81 ($generated@@30 $generated@@82 $generated@@83) $generated@@84))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@86 $generated@@93 $generated@@94 ($generated@@90 $generated@@93 $generated@@94 $generated@@96 $generated@@97 $generated@@95) $generated@@97) $generated@@95)
 :weight 0
)) (forall (($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (or (= $generated@@102 $generated@@103) (= ($generated@@86 $generated@@98 $generated@@99 ($generated@@90 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@100) $generated@@103) ($generated@@86 $generated@@98 $generated@@99 $generated@@101 $generated@@103)))
 :weight 0
))) (= ($generated@@9 $generated@@87) 5)) (= ($generated@@9 $generated@@88) 6)) (forall (($generated@@104 T@T) ($generated@@105 T@T) ) (= ($generated@@9 ($generated@@89 $generated@@104 $generated@@105)) 7))) (forall (($generated@@106 T@T) ($generated@@107 T@T) ) (! (= ($generated@@91 ($generated@@89 $generated@@106 $generated@@107)) $generated@@106)
 :pattern ( ($generated@@89 $generated@@106 $generated@@107))
))) (forall (($generated@@108 T@T) ($generated@@109 T@T) ) (! (= ($generated@@92 ($generated@@89 $generated@@108 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@89 $generated@@108 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@60 $generated@@52 $generated@@112 ($generated@@54 $generated@@110 $generated@@111) $generated@@113)  (or (= $generated@@112 $generated@@55) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@86 $generated@@87 $generated@@88 ($generated@@86 $generated@@52 ($generated@@89 $generated@@87 $generated@@88) $generated@@113 $generated@@112) $generated)))))
 :pattern ( ($generated@@60 $generated@@52 $generated@@112 ($generated@@54 $generated@@110 $generated@@111) $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> ($generated@@42 $generated@@114 $generated@@115) (= $generated@@114 $generated@@115))
 :pattern ( ($generated@@42 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@116 ($generated@@30 $generated@@117 $generated@@118)) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@119) ($generated@@31 $generated@@120 $generated@@117)) ($generated@@80 $generated@@117 $generated@@118 $generated@@119 $generated@@116 $generated@@120)) ($generated@@31 ($generated@@79 $generated@@117 $generated@@118 $generated@@119 $generated@@116 $generated@@120) $generated@@118))
 :pattern ( ($generated@@79 $generated@@117 $generated@@118 $generated@@119 $generated@@116 $generated@@120))
)))
 :pattern ( ($generated@@28 $generated@@29 $generated@@116 ($generated@@30 $generated@@117 $generated@@118)))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@T) ) (! (= ($generated@@31 ($generated@@49 $generated@@123 $generated@@121) $generated@@122) ($generated@@28 $generated@@123 $generated@@121 $generated@@122))
 :pattern ( ($generated@@31 ($generated@@49 $generated@@123 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@124 ($generated@@30 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@30 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@127 ($generated@@30 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@30 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@130 ($generated@@65 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@65 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@133 ($generated@@65 $generated@@134 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@65 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@136 ($generated@@70 $generated@@137 $generated@@138)) $generated@@137)
 :pattern ( ($generated@@70 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@139 ($generated@@70 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@70 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@142 ($generated@@54 $generated@@143 $generated@@144)) $generated@@143)
 :pattern ( ($generated@@54 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@145 ($generated@@54 $generated@@146 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@54 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@148 ($generated@@53 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@53 $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@151 ($generated@@53 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@53 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@28 $generated@@52 $generated@@158 ($generated@@54 $generated@@156 $generated@@157))  (or (= $generated@@158 $generated@@55) ($generated@@154 ($generated@@155 $generated@@158) $generated@@156 $generated@@157)))
 :pattern ( ($generated@@28 $generated@@52 $generated@@158 ($generated@@54 $generated@@156 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@48 $generated@@160 ($generated@@49 $generated@@160 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@49 $generated@@160 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@163 ($generated@@70 $generated@@161 $generated@@162))  (and ($generated@@28 $generated@@29 $generated@@163 ($generated@@65 $generated@@161 $generated@@162)) (forall (($generated@@164 T@U) )  (=> ($generated@@31 $generated@@164 $generated@@161) ($generated@@80 $generated@@161 $generated@@162 $generated@@40 $generated@@163 $generated@@164)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@163 ($generated@@70 $generated@@161 $generated@@162)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@167 ($generated@@65 $generated@@165 $generated@@166))  (and ($generated@@28 $generated@@29 $generated@@167 ($generated@@30 $generated@@165 $generated@@166)) (forall (($generated@@168 T@U) )  (=> ($generated@@31 $generated@@168 $generated@@165) ($generated@@42 ($generated@@39 $generated@@165 $generated@@166 $generated@@40 $generated@@167 $generated@@168) $generated@@26)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@167 ($generated@@65 $generated@@165 $generated@@166)))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@41 $generated@@172) (= ($generated@@60 $generated@@29 $generated@@169 ($generated@@30 $generated@@170 $generated@@171) $generated@@172) (forall (($generated@@173 T@U) ) (!  (=> (and (and ($generated@@31 $generated@@173 $generated@@170) ($generated@@59 $generated@@173 $generated@@170 $generated@@172)) ($generated@@80 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173)) (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@55)) (not true)) ($generated@@25 ($generated@@39 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173) ($generated@@49 $generated@@52 $generated@@174))) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@86 $generated@@87 $generated@@88 ($generated@@86 $generated@@52 ($generated@@89 $generated@@87 $generated@@88) $generated@@172 $generated@@174) $generated))))
 :pattern ( ($generated@@25 ($generated@@39 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173) ($generated@@49 $generated@@52 $generated@@174)))
)))
 :pattern ( ($generated@@79 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173))
 :pattern ( ($generated@@39 $generated@@170 $generated@@171 $generated@@172 $generated@@169 $generated@@173))
))))
 :pattern ( ($generated@@60 $generated@@29 $generated@@169 ($generated@@30 $generated@@170 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@31 $generated@@177 ($generated@@30 $generated@@175 $generated@@176)) (and (= ($generated@@49 $generated@@29 ($generated@@48 $generated@@29 $generated@@177)) $generated@@177) ($generated@@28 $generated@@29 ($generated@@48 $generated@@29 $generated@@177) ($generated@@30 $generated@@175 $generated@@176))))
 :pattern ( ($generated@@31 $generated@@177 ($generated@@30 $generated@@175 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@31 $generated@@180 ($generated@@65 $generated@@178 $generated@@179)) (and (= ($generated@@49 $generated@@29 ($generated@@48 $generated@@29 $generated@@180)) $generated@@180) ($generated@@28 $generated@@29 ($generated@@48 $generated@@29 $generated@@180) ($generated@@65 $generated@@178 $generated@@179))))
 :pattern ( ($generated@@31 $generated@@180 ($generated@@65 $generated@@178 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> ($generated@@31 $generated@@183 ($generated@@70 $generated@@181 $generated@@182)) (and (= ($generated@@49 $generated@@29 ($generated@@48 $generated@@29 $generated@@183)) $generated@@183) ($generated@@28 $generated@@29 ($generated@@48 $generated@@29 $generated@@183) ($generated@@70 $generated@@181 $generated@@182))))
 :pattern ( ($generated@@31 $generated@@183 ($generated@@70 $generated@@181 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@31 $generated@@186 ($generated@@54 $generated@@184 $generated@@185)) (and (= ($generated@@49 $generated@@52 ($generated@@48 $generated@@52 $generated@@186)) $generated@@186) ($generated@@28 $generated@@52 ($generated@@48 $generated@@52 $generated@@186) ($generated@@54 $generated@@184 $generated@@185))))
 :pattern ( ($generated@@31 $generated@@186 ($generated@@54 $generated@@184 $generated@@185)))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@31 $generated@@189 ($generated@@53 $generated@@187 $generated@@188)) (and (= ($generated@@49 $generated@@52 ($generated@@48 $generated@@52 $generated@@189)) $generated@@189) ($generated@@28 $generated@@52 ($generated@@48 $generated@@52 $generated@@189) ($generated@@53 $generated@@187 $generated@@188))))
 :pattern ( ($generated@@31 $generated@@189 ($generated@@53 $generated@@187 $generated@@188)))
)))
(assert  (and (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@190 $generated@@193 $generated@@194 $generated@@195 ($generated@@192 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@198 $generated@@199) $generated@@196)
 :weight 0
)) (and (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@205 $generated@@207) (= ($generated@@190 $generated@@200 $generated@@201 $generated@@202 ($generated@@192 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@190 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)) (forall (($generated@@209 T@T) ($generated@@210 T@T) ($generated@@211 T@T) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (or (= $generated@@215 $generated@@217) (= ($generated@@190 $generated@@209 $generated@@210 $generated@@211 ($generated@@192 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@214 $generated@@215 $generated@@212) $generated@@216 $generated@@217) ($generated@@190 $generated@@209 $generated@@210 $generated@@211 $generated@@213 $generated@@216 $generated@@217)))
 :weight 0
)))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@14 ($generated@@190 $generated@@52 $generated@@87 $generated@@10 ($generated@@191 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (or (not (= $generated@@222 $generated@@218)) (not true)) ($generated@@14 ($generated@@48 $generated@@10 ($generated@@86 $generated@@87 $generated@@88 ($generated@@86 $generated@@52 ($generated@@89 $generated@@87 $generated@@88) $generated@@219 $generated@@222) $generated@@220)))) $generated@@221))
 :pattern ( ($generated@@190 $generated@@52 $generated@@87 $generated@@10 ($generated@@191 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (and (= ($generated@@224 ($generated@@30 $generated@@226 $generated@@227)) $generated@@0) (= ($generated@@225 ($generated@@30 $generated@@226 $generated@@227)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (and (= ($generated@@224 ($generated@@65 $generated@@228 $generated@@229)) $generated@@1) (= ($generated@@225 ($generated@@65 $generated@@228 $generated@@229)) $generated@@6))
 :pattern ( ($generated@@65 $generated@@228 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (and (= ($generated@@224 ($generated@@70 $generated@@230 $generated@@231)) $generated@@2) (= ($generated@@225 ($generated@@70 $generated@@230 $generated@@231)) $generated@@7))
 :pattern ( ($generated@@70 $generated@@230 $generated@@231))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (and (= ($generated@@224 ($generated@@54 $generated@@232 $generated@@233)) $generated@@3) (= ($generated@@225 ($generated@@54 $generated@@232 $generated@@233)) $generated@@8))
 :pattern ( ($generated@@54 $generated@@232 $generated@@233))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (and (= ($generated@@224 ($generated@@53 $generated@@234 $generated@@235)) $generated@@4) (= ($generated@@225 ($generated@@53 $generated@@234 $generated@@235)) $generated@@8))
 :pattern ( ($generated@@53 $generated@@234 $generated@@235))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and (and ($generated@@41 $generated@@238) (and ($generated@@31 $generated@@240 $generated@@236) ($generated@@28 $generated@@29 $generated@@239 ($generated@@30 $generated@@236 $generated@@237)))) ($generated@@42 ($generated@@39 $generated@@236 $generated@@237 $generated@@40 $generated@@239 $generated@@240) $generated@@26)) (= ($generated@@80 $generated@@236 $generated@@237 $generated@@40 $generated@@239 $generated@@240) ($generated@@80 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240)))
 :pattern ( ($generated@@80 $generated@@236 $generated@@237 $generated@@40 $generated@@239 $generated@@240) ($generated@@41 $generated@@238))
 :pattern ( ($generated@@80 $generated@@236 $generated@@237 $generated@@238 $generated@@239 $generated@@240))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@42 $generated@@241 $generated@@242) (forall (($generated@@243 T@U) ) (! (= ($generated@@25 $generated@@241 $generated@@243) ($generated@@25 $generated@@242 $generated@@243))
 :pattern ( ($generated@@25 $generated@@241 $generated@@243))
 :pattern ( ($generated@@25 $generated@@242 $generated@@243))
)))
 :pattern ( ($generated@@42 $generated@@241 $generated@@242))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () Bool)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@254  (=> (and (= $generated@@244 ($generated@@191 $generated@@55 $generated@@245 $generated false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@255  (=> (and (and ($generated@@41 $generated@@245) ($generated@@246 $generated@@245)) (and (or (not (= $generated@@247 $generated@@55)) (not true)) (and ($generated@@28 $generated@@52 $generated@@247 ($generated@@53 $generated@@248 $generated@@249)) ($generated@@60 $generated@@52 $generated@@247 ($generated@@53 $generated@@248 $generated@@249) $generated@@245)))) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@250 ($generated@@70 $generated@@249 $generated@@249)) ($generated@@60 $generated@@29 $generated@@250 ($generated@@70 $generated@@249 $generated@@249) $generated@@245)) (=> $generated@@251 (and ($generated@@28 $generated@@29 $generated@@252 ($generated@@70 $generated@@249 $generated@@249)) ($generated@@60 $generated@@29 $generated@@252 ($generated@@70 $generated@@249 $generated@@249) $generated@@245)))) (and (= 0 $generated@@253) (= (ControlFlow 0 3) 2))) $generated@@254))))
$generated@@255)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
