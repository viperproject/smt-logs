(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 () Int)
(declare-fun $generated@@30 (T@U Int) Int)
(declare-fun $generated@@31 (T@U Int) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 (Int) Int)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@47 (T@U T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@124 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@13 $generated@@34) 3))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (or ($generated@@31 $generated@@38 $generated@@39) (and (< 1 $generated@@29) (and (and (or (not (= $generated@@38 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@38 $generated@@35)) (< ($generated@@36 $generated@@38) 800)))) (and (< ($generated@@30 $generated@@38 $generated@@39) (+ ($generated@@36 $generated@@38) 100)) (<= ($generated@@37 0) ($generated@@30 $generated@@38 $generated@@39))))
 :pattern ( ($generated@@30 $generated@@38 $generated@@39))
))))
(assert (= ($generated@@40 $generated) $generated@@0))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! ($generated@@41 $generated@@15 $generated@@43 $generated@@42 $generated@@44)
 :pattern ( ($generated@@41 $generated@@15 $generated@@43 $generated@@42 $generated@@44))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@45 T@U) ($generated@@46 Int) ) (!  (=> (or ($generated@@31 $generated@@45 ($generated@@37 $generated@@46)) (and (< 1 $generated@@29) (and (and (or (not (= $generated@@45 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@45 $generated@@35)) (< ($generated@@36 $generated@@45) 800)))) (= ($generated@@30 $generated@@45 ($generated@@37 $generated@@46)) ($generated@@37 2)))
 :weight 3
 :pattern ( ($generated@@30 $generated@@45 ($generated@@37 $generated@@46)))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (and ($generated@@47 $generated@@51 $generated@@48 $generated@@52) ($generated@@49 $generated@@52)) ($generated@@47 $generated@@51 $generated@@50 $generated@@52))
 :pattern ( ($generated@@47 $generated@@51 $generated@@48 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and ($generated@@47 $generated@@54 $generated@@48 $generated@@55) ($generated@@49 $generated@@55)) ($generated@@47 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@47 $generated@@54 $generated@@48 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@41 $generated@@34 $generated@@57 $generated@@56 $generated@@58) ($generated@@41 $generated@@34 $generated@@57 $generated@@53 $generated@@58))
 :pattern ( ($generated@@41 $generated@@34 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@41 $generated@@34 $generated@@57 $generated@@53 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@41 $generated@@34 $generated@@60 $generated@@59 $generated@@61) ($generated@@41 $generated@@34 $generated@@60 $generated@@50 $generated@@61))
 :pattern ( ($generated@@41 $generated@@34 $generated@@60 $generated@@59 $generated@@61))
 :pattern ( ($generated@@41 $generated@@34 $generated@@60 $generated@@50 $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@41 $generated@@34 $generated@@62 $generated@@35 $generated@@63) ($generated@@41 $generated@@34 $generated@@62 $generated@@48 $generated@@63))
 :pattern ( ($generated@@41 $generated@@34 $generated@@62 $generated@@35 $generated@@63))
 :pattern ( ($generated@@41 $generated@@34 $generated@@62 $generated@@48 $generated@@63))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@65 $generated@@72 $generated@@73 ($generated@@69 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@76) $generated@@74)
 :weight 0
)) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@65 $generated@@77 $generated@@78 ($generated@@69 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@65 $generated@@77 $generated@@78 $generated@@80 $generated@@82)))
 :weight 0
))) (= ($generated@@13 $generated@@66) 4)) (= ($generated@@13 $generated@@67) 5)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@13 ($generated@@68 $generated@@83 $generated@@84)) 6))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@70 ($generated@@68 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@68 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@71 ($generated@@68 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@68 $generated@@87 $generated@@88))
))))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@41 $generated@@34 $generated@@89 $generated@@53 $generated@@90)  (or (= $generated@@89 $generated@@32) ($generated@@18 ($generated@@64 $generated@@14 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@34 ($generated@@68 $generated@@66 $generated@@67) $generated@@90 $generated@@89) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@34 $generated@@89 $generated@@53 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@41 $generated@@34 $generated@@91 $generated@@50 $generated@@92)  (or (= $generated@@91 $generated@@32) ($generated@@18 ($generated@@64 $generated@@14 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@34 ($generated@@68 $generated@@66 $generated@@67) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@34 $generated@@91 $generated@@50 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@41 $generated@@34 $generated@@93 $generated@@48 $generated@@94)  (or (= $generated@@93 $generated@@32) ($generated@@18 ($generated@@64 $generated@@14 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@34 ($generated@@68 $generated@@66 $generated@@67) $generated@@94 $generated@@93) $generated@@1)))))
 :pattern ( ($generated@@41 $generated@@34 $generated@@93 $generated@@48 $generated@@94))
)))
(assert (forall (($generated@@95 Int) ) (! (= ($generated@@37 $generated@@95) $generated@@95)
 :pattern ( ($generated@@37 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@96 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 ($generated@@64 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@64 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@33 $generated@@15 $generated@@102 $generated@@42) (<= ($generated@@37 0) ($generated@@20 $generated@@102)))
 :pattern ( ($generated@@33 $generated@@15 $generated@@102 $generated@@42))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@47 ($generated@@99 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@41 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@47 ($generated@@99 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert  (=> (< 0 $generated@@29) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and (and ($generated@@49 $generated@@107) (and (or (not (= $generated@@108 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@108 $generated@@50))) ($generated@@18 ($generated@@64 $generated@@14 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@34 ($generated@@68 $generated@@66 $generated@@67) $generated@@107 $generated@@108) $generated@@1)))) ($generated@@41 $generated@@15 ($generated@@19 ($generated@@36 $generated@@108)) $generated@@42 $generated@@107))
 :pattern ( ($generated@@36 $generated@@108) ($generated@@64 $generated@@14 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@34 ($generated@@68 $generated@@66 $generated@@67) $generated@@107 $generated@@108) $generated@@1)))
))))
(assert  (=> (< 0 $generated@@29) (forall (($generated@@109 T@U) ) (!  (=> (and (or (not (= $generated@@109 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@109 $generated@@50)) ($generated@@33 $generated@@15 ($generated@@19 ($generated@@36 $generated@@109)) $generated@@42))
 :pattern ( ($generated@@36 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@110 $generated@@56)  (and ($generated@@33 $generated@@34 $generated@@110 $generated@@53) (or (not (= $generated@@110 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@110 $generated@@56))
 :pattern ( ($generated@@33 $generated@@34 $generated@@110 $generated@@53))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@111 $generated@@59)  (and ($generated@@33 $generated@@34 $generated@@111 $generated@@50) (or (not (= $generated@@111 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@111 $generated@@59))
 :pattern ( ($generated@@33 $generated@@34 $generated@@111 $generated@@50))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@112 $generated@@35)  (and ($generated@@33 $generated@@34 $generated@@112 $generated@@48) (or (not (= $generated@@112 $generated@@32)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@112 $generated@@35))
 :pattern ( ($generated@@33 $generated@@34 $generated@@112 $generated@@48))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@41 $generated@@34 $generated@@113 $generated@@48 $generated@@114) ($generated@@41 $generated@@34 $generated@@113 $generated@@50 $generated@@114))
 :pattern ( ($generated@@41 $generated@@34 $generated@@113 $generated@@48 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> ($generated@@41 $generated@@34 $generated@@115 $generated@@48 $generated@@116) ($generated@@41 $generated@@34 $generated@@115 $generated@@53 $generated@@116))
 :pattern ( ($generated@@41 $generated@@34 $generated@@115 $generated@@48 $generated@@116))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@117 T@U) ($generated@@118 Int) ) (!  (=> (or ($generated@@31 ($generated@@96 $generated@@34 $generated@@117) ($generated@@37 $generated@@118)) (and (< 1 $generated@@29) (and (and (or (not (= $generated@@117 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@117 $generated@@35)) (< ($generated@@36 ($generated@@96 $generated@@34 $generated@@117)) 800)))) (= ($generated@@30 ($generated@@96 $generated@@34 $generated@@117) ($generated@@37 $generated@@118)) ($generated@@37 2)))
 :weight 3
 :pattern ( ($generated@@30 ($generated@@96 $generated@@34 $generated@@117) ($generated@@37 $generated@@118)))
))))
(assert (forall (($generated@@119 T@U) ) (! ($generated@@33 $generated@@34 $generated@@119 $generated@@53)
 :pattern ( ($generated@@33 $generated@@34 $generated@@119 $generated@@53))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@T) ) (! (= ($generated@@64 $generated@@121 ($generated@@99 $generated@@121 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@99 $generated@@121 $generated@@120))
)))
(assert  (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@122 $generated@@125 $generated@@126 $generated@@127 ($generated@@124 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@122 $generated@@132 $generated@@133 $generated@@134 ($generated@@124 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@122 $generated@@141 $generated@@142 $generated@@143 ($generated@@124 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 Bool) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@18 ($generated@@122 $generated@@34 $generated@@66 $generated@@14 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))  (=> (and (or (not (= $generated@@154 $generated@@150)) (not true)) ($generated@@18 ($generated@@64 $generated@@14 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@34 ($generated@@68 $generated@@66 $generated@@67) $generated@@151 $generated@@154) $generated@@152)))) $generated@@153))
 :pattern ( ($generated@@122 $generated@@34 $generated@@66 $generated@@14 ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@153) $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@156 $generated@@48) ($generated@@33 $generated@@34 $generated@@156 $generated@@50))
 :pattern ( ($generated@@33 $generated@@34 $generated@@156 $generated@@48))
)))
(assert (forall (($generated@@157 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@157 $generated@@48) ($generated@@33 $generated@@34 $generated@@157 $generated@@53))
 :pattern ( ($generated@@33 $generated@@34 $generated@@157 $generated@@48))
)))
(assert (= ($generated@@40 $generated@@42) $generated@@2))
(assert (= ($generated@@158 $generated@@42) $generated@@9))
(assert (= ($generated@@40 $generated@@53) $generated@@3))
(assert (= ($generated@@158 $generated@@53) $generated@@10))
(assert (= ($generated@@40 $generated@@56) $generated@@4))
(assert (= ($generated@@158 $generated@@56) $generated@@10))
(assert (= ($generated@@40 $generated@@59) $generated@@5))
(assert (= ($generated@@158 $generated@@59) $generated@@11))
(assert (= ($generated@@40 $generated@@35) $generated@@6))
(assert (= ($generated@@158 $generated@@35) $generated@@12))
(assert (= ($generated@@40 $generated@@48) $generated@@7))
(assert (= ($generated@@158 $generated@@48) $generated@@12))
(assert (= ($generated@@40 $generated@@50) $generated@@8))
(assert (= ($generated@@158 $generated@@50) $generated@@11))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@161 $generated@@50)  (or (= $generated@@161 $generated@@32) ($generated@@159 ($generated@@160 $generated@@161))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@161 $generated@@50))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@163 $generated@@48)  (or (= $generated@@163 $generated@@32) ($generated@@162 ($generated@@160 $generated@@163))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@163 $generated@@48))
)))
(assert (forall (($generated@@164 Int) ) (! (= ($generated@@99 $generated@@15 ($generated@@19 ($generated@@37 $generated@@164))) ($generated@@96 $generated@@67 ($generated@@99 $generated@@15 ($generated@@19 $generated@@164))))
 :pattern ( ($generated@@99 $generated@@15 ($generated@@19 ($generated@@37 $generated@@164))))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@99 $generated@@166 ($generated@@96 $generated@@166 $generated@@165)) ($generated@@96 $generated@@67 ($generated@@99 $generated@@166 $generated@@165)))
 :pattern ( ($generated@@99 $generated@@166 ($generated@@96 $generated@@166 $generated@@165)))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! ($generated@@41 $generated@@15 $generated@@168 $generated $generated@@167)
 :pattern ( ($generated@@41 $generated@@15 $generated@@168 $generated $generated@@167))
)))
(assert  (=> (<= 1 $generated@@29) (forall (($generated@@169 T@U) ($generated@@170 Int) ) (!  (=> (or ($generated@@31 $generated@@169 $generated@@170) (and (< 1 $generated@@29) (and (and (or (not (= $generated@@169 $generated@@32)) (not true)) ($generated@@33 $generated@@34 $generated@@169 $generated@@35)) (< ($generated@@36 $generated@@169) 800)))) (= ($generated@@30 $generated@@169 $generated@@170) ($generated@@37 2)))
 :pattern ( ($generated@@30 $generated@@169 $generated@@170))
))))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@33 $generated@@15 $generated@@171 $generated)
 :pattern ( ($generated@@33 $generated@@15 $generated@@171 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@177  (=> (= (ControlFlow 0 6) (- 0 5)) (< ($generated@@30 $generated@@172 $generated@@173) (+ ($generated@@36 $generated@@172) 100)))))
(let (($generated@@178  (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@33 $generated@@15 ($generated@@19 ($generated@@37 2)) $generated@@42)) (=> ($generated@@33 $generated@@15 ($generated@@19 ($generated@@37 2)) $generated@@42) (=> (= ($generated@@30 $generated@@172 $generated@@173) ($generated@@37 2)) (=> (and ($generated@@33 $generated@@15 ($generated@@19 ($generated@@30 $generated@@172 $generated@@173)) $generated@@42) (= (ControlFlow 0 7) 6)) $generated@@177))))))
(let (($generated@@179  (=> (<= ($generated@@37 0) ($generated@@30 $generated@@172 $generated@@173)) (=> (and ($generated@@47 ($generated@@99 $generated@@34 $generated@@172) $generated@@48 $generated@@174) ($generated@@41 $generated@@15 ($generated@@19 $generated@@173) $generated $generated@@174)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (< ($generated@@36 $generated@@172) 800)) (=> (< ($generated@@36 $generated@@172) 800) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@173) (= $generated@@173 $generated@@173))) (=> (or (<= 0 $generated@@173) (= $generated@@173 $generated@@173)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@172 $generated@@172) (= $generated@@173 $generated@@173)) (< $generated@@173 $generated@@173)))))))))))
(let (($generated@@180  (=> (and (= $generated@@175 ($generated@@123 $generated@@32 $generated@@174 $generated@@1 false)) (< ($generated@@36 $generated@@172) 800)) (and (=> (= (ControlFlow 0 9) 2) $generated@@179) (=> (= (ControlFlow 0 9) 7) $generated@@178)))))
(let (($generated@@181  (=> (and ($generated@@49 $generated@@174) ($generated@@176 $generated@@174)) (=> (and (and (or (not (= $generated@@172 $generated@@32)) (not true)) (and ($generated@@33 $generated@@34 $generated@@172 $generated@@35) ($generated@@41 $generated@@34 $generated@@172 $generated@@35 $generated@@174))) (and (= 1 $generated@@29) (= (ControlFlow 0 10) 9))) $generated@@180))))
$generated@@181))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
