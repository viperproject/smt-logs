(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U T@U) Bool)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@76 (Int) Int)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U T@U T@U T@U T@U) Int)
(declare-fun $generated@@83 () T@T)
(declare-fun $generated@@84 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U T@U T@U) Bool)
(declare-fun $generated@@97 (T@U T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) T@U)
(declare-fun $generated@@102 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T T@T) T@T)
(declare-fun $generated@@110 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T) T@T)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@181 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@182 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@183 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@0))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@26 ($generated@@25 $generated@@27 $generated@@28 $generated@@29)) $generated@@27)
 :pattern ( ($generated@@25 $generated@@27 $generated@@28 $generated@@29))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@30 ($generated@@25 $generated@@31 $generated@@32 $generated@@33)) $generated@@32)
 :pattern ( ($generated@@25 $generated@@31 $generated@@32 $generated@@33))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@34 ($generated@@25 $generated@@35 $generated@@36 $generated@@37)) $generated@@37)
 :pattern ( ($generated@@25 $generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@39 ($generated@@38 $generated@@40 $generated@@41 $generated@@42)) $generated@@40)
 :pattern ( ($generated@@38 $generated@@40 $generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@43 ($generated@@38 $generated@@44 $generated@@45 $generated@@46)) $generated@@45)
 :pattern ( ($generated@@38 $generated@@44 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@47 ($generated@@38 $generated@@48 $generated@@49 $generated@@50)) $generated@@50)
 :pattern ( ($generated@@38 $generated@@48 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (and (= ($generated@@24 ($generated@@25 $generated@@52 $generated@@53 $generated@@54)) $generated@@2) (= ($generated@@51 ($generated@@25 $generated@@52 $generated@@53 $generated@@54)) $generated@@6))
 :pattern ( ($generated@@25 $generated@@52 $generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (and (= ($generated@@24 ($generated@@38 $generated@@55 $generated@@56 $generated@@57)) $generated@@5) (= ($generated@@51 ($generated@@38 $generated@@55 $generated@@56 $generated@@57)) $generated@@6))
 :pattern ( ($generated@@38 $generated@@55 $generated@@56 $generated@@57))
)))
(assert (= ($generated@@8 $generated@@60) 3))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> ($generated@@58 $generated@@66 ($generated@@25 $generated@@63 $generated@@64 $generated@@65)) (and (= ($generated@@59 $generated@@60 ($generated@@61 $generated@@60 $generated@@66)) $generated@@66) ($generated@@62 $generated@@60 ($generated@@61 $generated@@60 $generated@@66) ($generated@@25 $generated@@63 $generated@@64 $generated@@65))))
 :pattern ( ($generated@@58 $generated@@66 ($generated@@25 $generated@@63 $generated@@64 $generated@@65)))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> ($generated@@58 $generated@@70 ($generated@@38 $generated@@67 $generated@@68 $generated@@69)) (and (= ($generated@@59 $generated@@60 ($generated@@61 $generated@@60 $generated@@70)) $generated@@70) ($generated@@62 $generated@@60 ($generated@@61 $generated@@60 $generated@@70) ($generated@@38 $generated@@67 $generated@@68 $generated@@69))))
 :pattern ( ($generated@@58 $generated@@70 ($generated@@38 $generated@@67 $generated@@68 $generated@@69)))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@62 $generated@@60 $generated@@75 ($generated@@25 $generated@@72 $generated@@73 $generated@@74))  (and ($generated@@62 $generated@@60 $generated@@75 ($generated@@38 $generated@@72 $generated@@73 $generated@@74)) (or (not (= $generated@@75 $generated@@71)) (not true))))
 :pattern ( ($generated@@62 $generated@@60 $generated@@75 ($generated@@25 $generated@@72 $generated@@73 $generated@@74)))
 :pattern ( ($generated@@62 $generated@@60 $generated@@75 ($generated@@38 $generated@@72 $generated@@73 $generated@@74)))
)))
(assert (forall (($generated@@77 Int) ) (! (= ($generated@@76 $generated@@77) $generated@@77)
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (= ($generated@@8 $generated@@83) 4))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@84 $generated@@85 $generated@@86 $generated@@87 $generated@@88 ($generated@@78 $generated@@60 $generated@@89) ($generated@@78 $generated@@83 $generated@@90)) (and (< 0 $generated@@81) (and (and (or (not (= $generated@@89 $generated@@71)) (not true)) ($generated@@62 $generated@@60 $generated@@89 ($generated@@25 $generated@@85 $generated@@86 $generated@@87))) ($generated@@58 $generated@@90 $generated@@88)))) (= ($generated@@82 $generated@@85 $generated@@86 $generated@@87 $generated@@88 ($generated@@78 $generated@@60 $generated@@89) ($generated@@78 $generated@@83 $generated@@90)) ($generated@@76 5)))
 :weight 3
 :pattern ( ($generated@@82 $generated@@85 $generated@@86 $generated@@87 $generated@@88 ($generated@@78 $generated@@60 $generated@@89) ($generated@@78 $generated@@83 $generated@@90)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@59 $generated@@92 ($generated@@61 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@61 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) ($generated@@93 ($generated@@38 $generated@@94 $generated@@95 $generated@@96) $generated@@95 $generated)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@62 $generated@@60 $generated@@101 ($generated@@97 $generated@@99 $generated@@100))  (and ($generated@@62 $generated@@60 $generated@@101 ($generated@@98 $generated@@99 $generated@@100)) (or (not (= $generated@@101 $generated@@71)) (not true))))
 :pattern ( ($generated@@62 $generated@@60 $generated@@101 ($generated@@97 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@62 $generated@@60 $generated@@101 ($generated@@98 $generated@@99 $generated@@100)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@102 $generated@@60 $generated@@105 ($generated@@97 $generated@@103 $generated@@104) $generated@@106) ($generated@@102 $generated@@60 $generated@@105 ($generated@@98 $generated@@103 $generated@@104) $generated@@106))
 :pattern ( ($generated@@102 $generated@@60 $generated@@105 ($generated@@97 $generated@@103 $generated@@104) $generated@@106))
 :pattern ( ($generated@@102 $generated@@60 $generated@@105 ($generated@@98 $generated@@103 $generated@@104) $generated@@106))
)))
(assert  (and (and (and (and (and (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@107 $generated@@113 $generated@@114 ($generated@@110 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@115) $generated@@117) $generated@@115)
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@122 $generated@@123) (= ($generated@@107 $generated@@118 $generated@@119 ($generated@@110 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@120) $generated@@123) ($generated@@107 $generated@@118 $generated@@119 $generated@@121 $generated@@123)))
 :weight 0
))) (= ($generated@@8 $generated@@108) 5)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (= ($generated@@8 ($generated@@109 $generated@@124 $generated@@125)) 6))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@111 ($generated@@109 $generated@@126 $generated@@127)) $generated@@126)
 :pattern ( ($generated@@109 $generated@@126 $generated@@127))
))) (forall (($generated@@128 T@T) ($generated@@129 T@T) ) (! (= ($generated@@112 ($generated@@109 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@109 $generated@@128 $generated@@129))
))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@102 $generated@@60 $generated@@133 ($generated@@38 $generated@@130 $generated@@131 $generated@@132) $generated@@134)  (or (= $generated@@133 $generated@@71) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@107 $generated@@108 $generated@@83 ($generated@@107 $generated@@60 ($generated@@109 $generated@@108 $generated@@83) $generated@@134 $generated@@133) $generated@@1)))))
 :pattern ( ($generated@@102 $generated@@60 $generated@@133 ($generated@@38 $generated@@130 $generated@@131 $generated@@132) $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> ($generated@@62 $generated@@60 $generated@@138 ($generated@@38 $generated@@135 $generated@@136 $generated@@137)) ($generated@@62 $generated@@60 $generated@@138 ($generated@@98 $generated@@136 $generated)))
 :pattern ( ($generated@@62 $generated@@60 $generated@@138 ($generated@@38 $generated@@135 $generated@@136 $generated@@137)))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> ($generated@@58 $generated@@142 ($generated@@38 $generated@@139 $generated@@140 $generated@@141)) ($generated@@58 $generated@@142 ($generated@@98 $generated@@140 $generated)))
 :pattern ( ($generated@@58 $generated@@142 ($generated@@38 $generated@@139 $generated@@140 $generated@@141)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@102 $generated@@60 $generated@@145 ($generated@@98 $generated@@143 $generated@@144) $generated@@146)  (or (= $generated@@145 $generated@@71) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@107 $generated@@108 $generated@@83 ($generated@@107 $generated@@60 ($generated@@109 $generated@@108 $generated@@83) $generated@@146 $generated@@145) $generated@@1)))))
 :pattern ( ($generated@@102 $generated@@60 $generated@@145 ($generated@@98 $generated@@143 $generated@@144) $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@58 $generated@@147 $generated) (and (= ($generated@@59 $generated@@10 ($generated@@61 $generated@@10 $generated@@147)) $generated@@147) ($generated@@62 $generated@@10 ($generated@@61 $generated@@10 $generated@@147) $generated)))
 :pattern ( ($generated@@58 $generated@@147 $generated))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@58 ($generated@@59 $generated@@150 $generated@@148) $generated@@149) ($generated@@62 $generated@@150 $generated@@148 $generated@@149))
 :pattern ( ($generated@@58 ($generated@@59 $generated@@150 $generated@@148) $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@151 ($generated@@97 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@97 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@154 ($generated@@97 $generated@@155 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@97 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@157 ($generated@@98 $generated@@158 $generated@@159)) $generated@@158)
 :pattern ( ($generated@@98 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@160 ($generated@@98 $generated@@161 $generated@@162)) $generated@@162)
 :pattern ( ($generated@@98 $generated@@161 $generated@@162))
)))
(assert  (=> (<= 0 $generated@@81) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (or ($generated@@84 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167 $generated@@168) (and (< 0 $generated@@81) (and (and (or (not (= $generated@@167 $generated@@71)) (not true)) ($generated@@62 $generated@@60 $generated@@167 ($generated@@25 $generated@@163 $generated@@164 $generated@@165))) ($generated@@58 $generated@@168 $generated@@166)))) (= ($generated@@82 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167 $generated@@168) ($generated@@76 5)))
 :pattern ( ($generated@@82 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@62 $generated@@60 $generated@@172 ($generated@@98 $generated@@170 $generated@@171))  (or (= $generated@@172 $generated@@71) ($generated@@93 ($generated@@169 $generated@@172) $generated@@170 $generated@@171)))
 :pattern ( ($generated@@62 $generated@@60 $generated@@172 ($generated@@98 $generated@@170 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@61 $generated@@174 ($generated@@59 $generated@@174 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@59 $generated@@174 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@58 $generated@@177 ($generated@@97 $generated@@175 $generated@@176)) (and (= ($generated@@59 $generated@@60 ($generated@@61 $generated@@60 $generated@@177)) $generated@@177) ($generated@@62 $generated@@60 ($generated@@61 $generated@@60 $generated@@177) ($generated@@97 $generated@@175 $generated@@176))))
 :pattern ( ($generated@@58 $generated@@177 ($generated@@97 $generated@@175 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@58 $generated@@180 ($generated@@98 $generated@@178 $generated@@179)) (and (= ($generated@@59 $generated@@60 ($generated@@61 $generated@@60 $generated@@180)) $generated@@180) ($generated@@62 $generated@@60 ($generated@@61 $generated@@60 $generated@@180) ($generated@@98 $generated@@178 $generated@@179))))
 :pattern ( ($generated@@58 $generated@@180 ($generated@@98 $generated@@178 $generated@@179)))
)))
(assert  (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@181 $generated@@184 $generated@@185 $generated@@186 ($generated@@183 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@189 $generated@@190) $generated@@187)
 :weight 0
)) (and (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@196 $generated@@198) (= ($generated@@181 $generated@@191 $generated@@192 $generated@@193 ($generated@@183 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@181 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (or (= $generated@@206 $generated@@208) (= ($generated@@181 $generated@@200 $generated@@201 $generated@@202 ($generated@@183 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@206 $generated@@203) $generated@@207 $generated@@208) ($generated@@181 $generated@@200 $generated@@201 $generated@@202 $generated@@204 $generated@@207 $generated@@208)))
 :weight 0
)))))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 Bool) ($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@13 ($generated@@181 $generated@@60 $generated@@108 $generated@@9 ($generated@@182 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))  (=> (and (or (not (= $generated@@213 $generated@@209)) (not true)) ($generated@@13 ($generated@@61 $generated@@9 ($generated@@107 $generated@@108 $generated@@83 ($generated@@107 $generated@@60 ($generated@@109 $generated@@108 $generated@@83) $generated@@210 $generated@@213) $generated@@211)))) $generated@@212))
 :pattern ( ($generated@@181 $generated@@60 $generated@@108 $generated@@9 ($generated@@182 $generated@@209 $generated@@210 $generated@@211 $generated@@212) $generated@@213 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@62 $generated@@60 $generated@@218 ($generated@@38 $generated@@215 $generated@@216 $generated@@217))  (or (= $generated@@218 $generated@@71) (= ($generated@@169 $generated@@218) ($generated@@38 $generated@@215 $generated@@216 $generated@@217))))
 :pattern ( ($generated@@62 $generated@@60 $generated@@218 ($generated@@38 $generated@@215 $generated@@216 $generated@@217)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@102 $generated@@60 $generated@@222 ($generated@@25 $generated@@219 $generated@@220 $generated@@221) $generated@@223) ($generated@@102 $generated@@60 $generated@@222 ($generated@@38 $generated@@219 $generated@@220 $generated@@221) $generated@@223))
 :pattern ( ($generated@@102 $generated@@60 $generated@@222 ($generated@@25 $generated@@219 $generated@@220 $generated@@221) $generated@@223))
 :pattern ( ($generated@@102 $generated@@60 $generated@@222 ($generated@@38 $generated@@219 $generated@@220 $generated@@221) $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (and (= ($generated@@24 ($generated@@97 $generated@@224 $generated@@225)) $generated@@3) (= ($generated@@51 ($generated@@97 $generated@@224 $generated@@225)) $generated@@7))
 :pattern ( ($generated@@97 $generated@@224 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (and (= ($generated@@24 ($generated@@98 $generated@@226 $generated@@227)) $generated@@4) (= ($generated@@51 ($generated@@98 $generated@@226 $generated@@227)) $generated@@7))
 :pattern ( ($generated@@98 $generated@@226 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> ($generated@@102 $generated@@60 $generated@@231 ($generated@@38 $generated@@228 $generated@@229 $generated@@230) $generated@@232) ($generated@@102 $generated@@60 $generated@@231 ($generated@@98 $generated@@229 $generated) $generated@@232))
 :pattern ( ($generated@@102 $generated@@60 $generated@@231 ($generated@@38 $generated@@228 $generated@@229 $generated@@230) $generated@@232))
)))
(assert (forall (($generated@@233 Int) ) (! (= ($generated@@59 $generated@@10 ($generated@@14 ($generated@@76 $generated@@233))) ($generated@@78 $generated@@83 ($generated@@59 $generated@@10 ($generated@@14 $generated@@233))))
 :pattern ( ($generated@@59 $generated@@10 ($generated@@14 ($generated@@76 $generated@@233))))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@T) ) (! (= ($generated@@59 $generated@@235 ($generated@@78 $generated@@235 $generated@@234)) ($generated@@78 $generated@@83 ($generated@@59 $generated@@235 $generated@@234)))
 :pattern ( ($generated@@59 $generated@@235 ($generated@@78 $generated@@235 $generated@@234)))
)))
(assert (forall (($generated@@236 T@U) ($generated@@237 T@U) ) (! ($generated@@102 $generated@@10 $generated@@237 $generated $generated@@236)
 :pattern ( ($generated@@102 $generated@@10 $generated@@237 $generated $generated@@236))
)))
(assert (forall (($generated@@238 T@U) ) (! ($generated@@62 $generated@@10 $generated@@238 $generated)
 :pattern ( ($generated@@62 $generated@@10 $generated@@238 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 (T@U) Bool)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 4) (let (($generated@@252  (=> (= $generated@@239 $generated@@240) (=> (and (= $generated@@241 $generated) (= $generated@@242 $generated@@243)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (and (= $generated@@244 ($generated@@182 $generated@@71 $generated@@245 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@253 T@U) ($generated@@254 T@U) ) true)))))))
(let (($generated@@255  (=> (and ($generated@@246 $generated@@245) ($generated@@247 $generated@@245)) (=> (and (and (and (or (not (= $generated@@248 $generated@@71)) (not true)) (and ($generated@@62 $generated@@60 $generated@@248 ($generated@@25 $generated@@249 $generated@@240 $generated@@250)) ($generated@@102 $generated@@60 $generated@@248 ($generated@@25 $generated@@249 $generated@@240 $generated@@250) $generated@@245))) ($generated@@58 $generated@@251 $generated@@243)) (and (= 0 $generated@@81) (= (ControlFlow 0 4) 2))) $generated@@252))))
$generated@@255)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
