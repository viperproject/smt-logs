(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@97 () T@T)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@137 () Int)
(declare-fun $generated@@138 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U T@U) Bool)
(declare-fun $generated@@140 (T@U T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U T@U) Bool)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated) $generated@@1))
(assert (= ($generated@@30 $generated@@0) $generated@@2))
(assert (= ($generated@@14 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37) ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (!  (=> (and ($generated@@38 $generated@@41 $generated@@39 $generated@@42) ($generated@@40 $generated@@42)) ($generated@@38 $generated@@41 ($generated@@34 $generated@@0) $generated@@42))
 :pattern ( ($generated@@38 $generated@@41 $generated@@39 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@46 $generated@@39)  (or (= $generated@@46 $generated@@44) (= ($generated@@45 $generated@@46) $generated@@39)))
 :pattern ( ($generated@@43 $generated@@32 $generated@@46 $generated@@39))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@49 $generated@@47 $generated@@50) ($generated@@31 $generated@@32 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@31 $generated@@32 $generated@@49 $generated@@47 $generated@@50))
 :pattern ( ($generated@@31 $generated@@32 $generated@@49 $generated@@48 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@52 $generated@@51 $generated@@53) ($generated@@31 $generated@@32 $generated@@52 $generated@@39 $generated@@53))
 :pattern ( ($generated@@31 $generated@@32 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@31 $generated@@32 $generated@@52 $generated@@39 $generated@@53))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@14 $generated@@56) 4)) (= ($generated@@14 $generated@@57) 5)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@14 ($generated@@58 $generated@@73 $generated@@74)) 6))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@80 ($generated@@34 $generated@@79) $generated@@81)  (or (= $generated@@80 $generated@@44) ($generated@@19 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@81 $generated@@80) $generated@@4)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@80 ($generated@@34 $generated@@79) $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@82 $generated@@48 $generated@@83)  (or (= $generated@@82 $generated@@44) ($generated@@19 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@83 $generated@@82) $generated@@4)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@82 $generated@@48 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@84 $generated@@39 $generated@@85)  (or (= $generated@@84 $generated@@44) ($generated@@19 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@85 $generated@@84) $generated@@4)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@84 $generated@@39 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@43 $generated@@32 $generated@@86 $generated@@39) ($generated@@43 $generated@@32 $generated@@86 ($generated@@34 $generated@@0)))
 :pattern ( ($generated@@43 $generated@@32 $generated@@86 $generated@@39))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@39) ($generated@@87 $generated@@88 ($generated@@34 $generated@@0)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@39))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@89 $generated@@91 $generated@@92) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@90 $generated@@91 $generated@@93) ($generated@@90 $generated@@92 $generated@@93))
 :pattern ( ($generated@@90 $generated@@91 $generated@@93))
 :pattern ( ($generated@@90 $generated@@92 $generated@@93))
)))
 :pattern ( ($generated@@89 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@94 $generated@@96 ($generated@@54 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@54 $generated@@96 $generated@@95))
)))
(assert (= ($generated@@14 $generated@@97) 7))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@43 $generated@@97 $generated@@99 ($generated@@98 $generated@@100)) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@90 $generated@@99 $generated@@101) ($generated@@87 $generated@@101 $generated@@100))
 :pattern ( ($generated@@90 $generated@@99 $generated@@101))
)))
 :pattern ( ($generated@@43 $generated@@97 $generated@@99 ($generated@@98 $generated@@100)))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@19 ($generated@@102 $generated@@32 $generated@@56 $generated@@15 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))  (=> (and (or (not (= $generated@@135 $generated@@130)) (not true)) ($generated@@19 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@131 $generated@@135) $generated@@132)))) (or (= $generated@@135 $generated@@133) ($generated@@90 $generated@@134 ($generated@@94 $generated@@32 $generated@@135)))))
 :pattern ( ($generated@@102 $generated@@32 $generated@@56 $generated@@15 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133 $generated@@134) $generated@@135 $generated@@136))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (or ($generated@@139 $generated@@141 $generated@@142) (and (< 1 $generated@@137) (and ($generated@@40 $generated@@141) (and (or (not (= $generated@@142 $generated@@44)) (not true)) (and ($generated@@43 $generated@@32 $generated@@142 $generated@@51) ($generated@@31 $generated@@32 $generated@@142 $generated@@51 $generated@@141)))))) (= ($generated@@138 $generated@@141 $generated@@142) ($generated@@90 ($generated@@140 $generated@@0 $generated@@142) ($generated@@94 $generated@@32 $generated@@142))))
 :pattern ( ($generated@@138 $generated@@141 $generated@@142) ($generated@@40 $generated@@141))
))))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@144 ($generated@@33 $generated@@143))  (and ($generated@@43 $generated@@32 $generated@@144 ($generated@@34 $generated@@143)) (or (not (= $generated@@144 $generated@@44)) (not true))))
 :pattern ( ($generated@@43 $generated@@32 $generated@@144 ($generated@@33 $generated@@143)))
 :pattern ( ($generated@@43 $generated@@32 $generated@@144 ($generated@@34 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@38 ($generated@@94 $generated@@148 $generated@@145) $generated@@146 $generated@@147) ($generated@@31 $generated@@148 $generated@@145 $generated@@146 $generated@@147))
 :pattern ( ($generated@@38 ($generated@@94 $generated@@148 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ) (!  (and (= ($generated@@30 ($generated@@34 $generated@@150)) $generated@@7) (= ($generated@@149 ($generated@@34 $generated@@150)) $generated@@12))
 :pattern ( ($generated@@34 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ) (!  (and (= ($generated@@30 ($generated@@33 $generated@@151)) $generated@@8) (= ($generated@@149 ($generated@@33 $generated@@151)) $generated@@12))
 :pattern ( ($generated@@33 $generated@@151))
)))
(assert ($generated@@152 $generated@@39 $generated@@0))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@87 $generated@@153 $generated@@48) (and (= ($generated@@94 $generated@@32 ($generated@@54 $generated@@32 $generated@@153)) $generated@@153) ($generated@@43 $generated@@32 ($generated@@54 $generated@@32 $generated@@153) $generated@@48)))
 :pattern ( ($generated@@87 $generated@@153 $generated@@48))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@87 $generated@@154 $generated@@47) (and (= ($generated@@94 $generated@@32 ($generated@@54 $generated@@32 $generated@@154)) $generated@@154) ($generated@@43 $generated@@32 ($generated@@54 $generated@@32 $generated@@154) $generated@@47)))
 :pattern ( ($generated@@87 $generated@@154 $generated@@47))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@87 $generated@@155 $generated@@39) (and (= ($generated@@94 $generated@@32 ($generated@@54 $generated@@32 $generated@@155)) $generated@@155) ($generated@@43 $generated@@32 ($generated@@54 $generated@@32 $generated@@155) $generated@@39)))
 :pattern ( ($generated@@87 $generated@@155 $generated@@39))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@87 $generated@@156 $generated@@51) (and (= ($generated@@94 $generated@@32 ($generated@@54 $generated@@32 $generated@@156)) $generated@@156) ($generated@@43 $generated@@32 ($generated@@54 $generated@@32 $generated@@156) $generated@@51)))
 :pattern ( ($generated@@87 $generated@@156 $generated@@51))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@157 $generated@@47)  (and ($generated@@43 $generated@@32 $generated@@157 $generated@@48) (or (not (= $generated@@157 $generated@@44)) (not true))))
 :pattern ( ($generated@@43 $generated@@32 $generated@@157 $generated@@47))
 :pattern ( ($generated@@43 $generated@@32 $generated@@157 $generated@@48))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@158 $generated@@51)  (and ($generated@@43 $generated@@32 $generated@@158 $generated@@39) (or (not (= $generated@@158 $generated@@44)) (not true))))
 :pattern ( ($generated@@43 $generated@@32 $generated@@158 $generated@@51))
 :pattern ( ($generated@@43 $generated@@32 $generated@@158 $generated@@39))
)))
(assert  (=> (< 0 $generated@@137) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (or (not (= $generated@@160 $generated@@44)) (not true)) ($generated@@43 $generated@@32 $generated@@160 ($generated@@34 $generated@@159))) ($generated@@43 $generated@@97 ($generated@@140 $generated@@159 $generated@@160) ($generated@@98 $generated@@47)))
 :pattern ( ($generated@@140 $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@161 $generated@@39 $generated@@162) ($generated@@31 $generated@@32 $generated@@161 ($generated@@34 $generated@@0) $generated@@162))
 :pattern ( ($generated@@31 $generated@@32 $generated@@161 $generated@@39 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> ($generated@@87 $generated@@163 $generated@@0) (and (= ($generated@@94 $generated@@16 ($generated@@54 $generated@@16 $generated@@163)) $generated@@163) ($generated@@43 $generated@@16 ($generated@@54 $generated@@16 $generated@@163) $generated@@0)))
 :pattern ( ($generated@@87 $generated@@163 $generated@@0))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> ($generated@@87 $generated@@164 $generated) (and (= ($generated@@94 $generated@@15 ($generated@@54 $generated@@15 $generated@@164)) $generated@@164) ($generated@@43 $generated@@15 ($generated@@54 $generated@@15 $generated@@164) $generated)))
 :pattern ( ($generated@@87 $generated@@164 $generated))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@87 ($generated@@94 $generated@@167 $generated@@165) $generated@@166) ($generated@@43 $generated@@167 $generated@@165 $generated@@166))
 :pattern ( ($generated@@87 ($generated@@94 $generated@@167 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@31 $generated@@97 $generated@@168 ($generated@@98 $generated@@169) $generated@@170) (forall (($generated@@171 T@U) ) (!  (=> ($generated@@90 $generated@@168 $generated@@171) ($generated@@38 $generated@@171 $generated@@169 $generated@@170))
 :pattern ( ($generated@@90 $generated@@168 $generated@@171))
)))
 :pattern ( ($generated@@31 $generated@@97 $generated@@168 ($generated@@98 $generated@@169) $generated@@170))
)))
(assert (forall (($generated@@172 T@U) ) (! ($generated@@43 $generated@@32 $generated@@172 $generated@@48)
 :pattern ( ($generated@@43 $generated@@32 $generated@@172 $generated@@48))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@173 ($generated@@98 $generated@@174)) $generated@@174)
 :pattern ( ($generated@@98 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@30 ($generated@@98 $generated@@175)) $generated@@3)
 :pattern ( ($generated@@98 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@176 ($generated@@34 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@34 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@178 ($generated@@33 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@33 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@54 $generated@@181 ($generated@@94 $generated@@181 $generated@@180)) $generated@@180)
 :pattern ( ($generated@@94 $generated@@181 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@183 ($generated@@34 $generated@@182))  (or (= $generated@@183 $generated@@44) ($generated@@152 ($generated@@45 $generated@@183) $generated@@182)))
 :pattern ( ($generated@@43 $generated@@32 $generated@@183 ($generated@@34 $generated@@182)))
)))
(assert  (=> (<= 1 $generated@@137) (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (or ($generated@@139 $generated@@184 $generated@@185) (and (< 1 $generated@@137) (and ($generated@@40 $generated@@184) (and (or (not (= $generated@@185 $generated@@44)) (not true)) (and ($generated@@43 $generated@@32 $generated@@185 $generated@@51) ($generated@@31 $generated@@32 $generated@@185 $generated@@51 $generated@@184)))))) (=> ($generated@@138 $generated@@184 $generated@@185) ($generated@@90 ($generated@@140 $generated@@0 $generated@@185) ($generated@@94 $generated@@32 $generated@@185))))
 :pattern ( ($generated@@138 $generated@@184 $generated@@185))
))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@87 $generated@@186 ($generated@@98 $generated@@187)) (and (= ($generated@@94 $generated@@97 ($generated@@54 $generated@@97 $generated@@186)) $generated@@186) ($generated@@43 $generated@@97 ($generated@@54 $generated@@97 $generated@@186) ($generated@@98 $generated@@187))))
 :pattern ( ($generated@@87 $generated@@186 ($generated@@98 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@87 $generated@@189 ($generated@@34 $generated@@188)) (and (= ($generated@@94 $generated@@32 ($generated@@54 $generated@@32 $generated@@189)) $generated@@189) ($generated@@43 $generated@@32 ($generated@@54 $generated@@32 $generated@@189) ($generated@@34 $generated@@188))))
 :pattern ( ($generated@@87 $generated@@189 ($generated@@34 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> ($generated@@87 $generated@@191 ($generated@@33 $generated@@190)) (and (= ($generated@@94 $generated@@32 ($generated@@54 $generated@@32 $generated@@191)) $generated@@191) ($generated@@43 $generated@@32 ($generated@@54 $generated@@32 $generated@@191) ($generated@@33 $generated@@190))))
 :pattern ( ($generated@@87 $generated@@191 ($generated@@33 $generated@@190)))
)))
(assert (= ($generated@@30 $generated@@48) $generated@@5))
(assert (= ($generated@@149 $generated@@48) $generated@@11))
(assert (= ($generated@@30 $generated@@47) $generated@@6))
(assert (= ($generated@@149 $generated@@47) $generated@@11))
(assert (= ($generated@@30 $generated@@39) $generated@@9))
(assert (= ($generated@@149 $generated@@39) $generated@@13))
(assert (= ($generated@@30 $generated@@51) $generated@@10))
(assert (= ($generated@@149 $generated@@51) $generated@@13))
(assert  (=> (< 0 $generated@@137) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@193) (and (or (not (= $generated@@194 $generated@@44)) (not true)) ($generated@@43 $generated@@32 $generated@@194 ($generated@@34 $generated@@192)))) ($generated@@19 ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@193 $generated@@194) $generated@@4)))) ($generated@@31 $generated@@97 ($generated@@140 $generated@@192 $generated@@194) ($generated@@98 $generated@@47) $generated@@193))
 :pattern ( ($generated@@140 $generated@@192 $generated@@194) ($generated@@54 $generated@@15 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@193 $generated@@194) $generated@@4)))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! ($generated@@31 $generated@@16 $generated@@196 $generated@@0 $generated@@195)
 :pattern ( ($generated@@31 $generated@@16 $generated@@196 $generated@@0 $generated@@195))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! ($generated@@31 $generated@@15 $generated@@198 $generated $generated@@197)
 :pattern ( ($generated@@31 $generated@@15 $generated@@198 $generated $generated@@197))
)))
(assert (forall (($generated@@199 T@U) ) (! ($generated@@43 $generated@@16 $generated@@199 $generated@@0)
 :pattern ( ($generated@@43 $generated@@16 $generated@@199 $generated@@0))
)))
(assert (forall (($generated@@200 T@U) ) (! ($generated@@43 $generated@@15 $generated@@200 $generated)
 :pattern ( ($generated@@43 $generated@@15 $generated@@200 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@205  (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@138 $generated@@201 $generated@@202) ($generated@@90 ($generated@@140 $generated@@0 $generated@@202) ($generated@@94 $generated@@32 $generated@@202))))))
(let (($generated@@206  (=> (= ($generated@@138 $generated@@201 $generated@@202) ($generated@@90 ($generated@@140 $generated@@0 $generated@@202) ($generated@@94 $generated@@32 $generated@@202))) (=> (and ($generated@@43 $generated@@15 ($generated@@18 ($generated@@138 $generated@@201 $generated@@202)) $generated) (= (ControlFlow 0 7) 6)) $generated@@205))))
(let (($generated@@207 true))
(let (($generated@@208  (=> (and (=> ($generated@@138 $generated@@201 $generated@@202) ($generated@@90 ($generated@@140 $generated@@0 $generated@@202) ($generated@@94 $generated@@32 $generated@@202))) (= (ControlFlow 0 4) 1)) $generated@@207)))
(let (($generated@@209  (=> ($generated@@38 ($generated@@94 $generated@@32 $generated@@202) $generated@@39 $generated@@201) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@202 $generated@@202) (and ($generated@@89 ($generated@@140 $generated@@0 $generated@@202) ($generated@@140 $generated@@0 $generated@@202)) (not ($generated@@89 ($generated@@140 $generated@@0 $generated@@202) ($generated@@140 $generated@@0 $generated@@202)))))) (=> (or (= $generated@@202 $generated@@202) (and ($generated@@89 ($generated@@140 $generated@@0 $generated@@202) ($generated@@140 $generated@@0 $generated@@202)) (not ($generated@@89 ($generated@@140 $generated@@0 $generated@@202) ($generated@@140 $generated@@0 $generated@@202))))) (=> (and (and (or (= $generated@@202 $generated@@202) ($generated@@139 $generated@@201 $generated@@202)) ($generated@@138 $generated@@201 $generated@@202)) (and ($generated@@90 ($generated@@140 $generated@@0 $generated@@202) ($generated@@94 $generated@@32 $generated@@202)) (= (ControlFlow 0 2) 1))) $generated@@207))))))
(let (($generated@@210  (=> (= $generated@@203 ($generated@@103 $generated@@44 $generated@@201 $generated@@4 $generated@@202 ($generated@@140 $generated@@0 $generated@@202))) (and (and (=> (= (ControlFlow 0 8) 7) $generated@@206) (=> (= (ControlFlow 0 8) 2) $generated@@209)) (=> (= (ControlFlow 0 8) 4) $generated@@208)))))
(let (($generated@@211  (=> (and ($generated@@40 $generated@@201) ($generated@@204 $generated@@201)) (=> (and (and (or (not (= $generated@@202 $generated@@44)) (not true)) (and ($generated@@43 $generated@@32 $generated@@202 $generated@@51) ($generated@@31 $generated@@32 $generated@@202 $generated@@51 $generated@@201))) (and (= 1 $generated@@137) (= (ControlFlow 0 9) 8))) $generated@@210))))
$generated@@211))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
