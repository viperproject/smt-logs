(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (T@U T@U T@U) Bool)
(declare-fun $generated@@46 (T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@T T@U T@U) Bool)
(declare-fun $generated@@50 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T T@T) T@T)
(declare-fun $generated@@68 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@U T@U T@U) Bool)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@163 (T@U) T@U)
(declare-fun $generated@@185 () T@T)
(declare-fun $generated@@186 (T@U Int) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(declare-fun $generated@@199 (T@U) T@U)
(declare-fun $generated@@201 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@13 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@34) $generated@@36) ($generated@@30 $generated@@31 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@34) $generated@@36))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@40 ($generated@@37 $generated@@39) $generated@@41) ($generated@@30 $generated@@31 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
 :pattern ( ($generated@@30 $generated@@31 $generated@@40 ($generated@@37 $generated@@39) $generated@@41))
 :pattern ( ($generated@@30 $generated@@31 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
)))
(assert (= ($generated@@42 $generated@@43) 0))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (or ($generated@@46 $generated@@54 $generated@@55 $generated@@56) (and (< 1 $generated@@44) (and ($generated@@47 $generated@@55) (and (or (not (= $generated@@56 $generated@@48)) (not true)) (and ($generated@@49 $generated@@31 $generated@@56 ($generated@@37 $generated@@54)) ($generated@@30 $generated@@31 $generated@@56 ($generated@@37 $generated@@54) $generated@@55)))))) (=> ($generated@@45 $generated@@54 $generated@@55 $generated@@56) ($generated@@50 ($generated@@51 ($generated@@52 $generated@@54) $generated@@56) ($generated@@53 $generated@@31 $generated@@56))))
 :pattern ( ($generated@@45 $generated@@54 $generated@@55 $generated@@56))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@59 $generated@@57 $generated@@60) ($generated@@30 $generated@@31 $generated@@59 $generated@@58 $generated@@60))
 :pattern ( ($generated@@30 $generated@@31 $generated@@59 $generated@@57 $generated@@60))
 :pattern ( ($generated@@30 $generated@@31 $generated@@59 $generated@@58 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) ($generated@@61 ($generated@@38 $generated@@62) ($generated@@52 $generated@@62))))
(assert  (and (and (and (and (and (and (forall (($generated@@71 T@T) ($generated@@72 T@T) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@64 $generated@@71 $generated@@72 ($generated@@68 $generated@@71 $generated@@72 $generated@@74 $generated@@75 $generated@@73) $generated@@75) $generated@@73)
 :weight 0
)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (or (= $generated@@80 $generated@@81) (= ($generated@@64 $generated@@76 $generated@@77 ($generated@@68 $generated@@76 $generated@@77 $generated@@79 $generated@@80 $generated@@78) $generated@@81) ($generated@@64 $generated@@76 $generated@@77 $generated@@79 $generated@@81)))
 :weight 0
))) (= ($generated@@13 $generated@@65) 4)) (= ($generated@@13 $generated@@66) 5)) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (= ($generated@@13 ($generated@@67 $generated@@82 $generated@@83)) 6))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@69 ($generated@@67 $generated@@84 $generated@@85)) $generated@@84)
 :pattern ( ($generated@@67 $generated@@84 $generated@@85))
))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@70 ($generated@@67 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@67 $generated@@86 $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@89 ($generated@@33 $generated@@88) $generated@@90)  (or (= $generated@@89 $generated@@48) ($generated@@18 ($generated@@63 $generated@@14 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@31 ($generated@@67 $generated@@65 $generated@@66) $generated@@90 $generated@@89) $generated@@3)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@89 ($generated@@33 $generated@@88) $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@92 ($generated@@38 $generated@@91) $generated@@93)  (or (= $generated@@92 $generated@@48) ($generated@@18 ($generated@@63 $generated@@14 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@31 ($generated@@67 $generated@@65 $generated@@66) $generated@@93 $generated@@92) $generated@@3)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@92 ($generated@@38 $generated@@91) $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@94 $generated@@58 $generated@@95)  (or (= $generated@@94 $generated@@48) ($generated@@18 ($generated@@63 $generated@@14 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@31 ($generated@@67 $generated@@65 $generated@@66) $generated@@95 $generated@@94) $generated@@3)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@94 $generated@@58 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@49 $generated@@31 $generated@@97 ($generated@@38 $generated@@96)) ($generated@@49 $generated@@31 $generated@@97 ($generated@@33 ($generated@@52 $generated@@96))))
 :pattern ( ($generated@@49 $generated@@31 $generated@@97 ($generated@@38 $generated@@96)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@98 $generated@@100 ($generated@@38 $generated@@99)) ($generated@@98 $generated@@100 ($generated@@33 ($generated@@52 $generated@@99))))
 :pattern ( ($generated@@98 $generated@@100 ($generated@@38 $generated@@99)))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 $generated@@102 $generated@@103) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@50 $generated@@102 $generated@@104) ($generated@@50 $generated@@103 $generated@@104))
 :pattern ( ($generated@@50 $generated@@102 $generated@@104))
 :pattern ( ($generated@@50 $generated@@103 $generated@@104))
)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@53 $generated@@106 ($generated@@63 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@63 $generated@@106 $generated@@105))
)))
(assert (= ($generated@@13 $generated@@107) 7))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@49 $generated@@107 $generated@@109 ($generated@@108 $generated@@110)) (forall (($generated@@111 T@U) ) (!  (=> ($generated@@50 $generated@@109 $generated@@111) ($generated@@98 $generated@@111 $generated@@110))
 :pattern ( ($generated@@50 $generated@@109 $generated@@111))
)))
 :pattern ( ($generated@@49 $generated@@107 $generated@@109 ($generated@@108 $generated@@110)))
)))
(assert  (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@112 $generated@@115 $generated@@116 $generated@@117 ($generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@112 $generated@@122 $generated@@123 $generated@@124 ($generated@@114 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@112 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@112 $generated@@131 $generated@@132 $generated@@133 ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@112 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@18 ($generated@@112 $generated@@31 $generated@@65 $generated@@14 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))  (=> (and (or (not (= $generated@@145 $generated@@140)) (not true)) ($generated@@18 ($generated@@63 $generated@@14 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@31 ($generated@@67 $generated@@65 $generated@@66) $generated@@141 $generated@@145) $generated@@142)))) (or (= $generated@@145 $generated@@143) ($generated@@50 $generated@@144 ($generated@@53 $generated@@31 $generated@@145)))))
 :pattern ( ($generated@@112 $generated@@31 $generated@@65 $generated@@14 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@49 $generated@@31 $generated@@148 ($generated@@32 $generated@@147))  (and ($generated@@49 $generated@@31 $generated@@148 ($generated@@33 $generated@@147)) (or (not (= $generated@@148 $generated@@48)) (not true))))
 :pattern ( ($generated@@49 $generated@@31 $generated@@148 ($generated@@32 $generated@@147)))
 :pattern ( ($generated@@49 $generated@@31 $generated@@148 ($generated@@33 $generated@@147)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@49 $generated@@31 $generated@@150 ($generated@@37 $generated@@149))  (and ($generated@@49 $generated@@31 $generated@@150 ($generated@@38 $generated@@149)) (or (not (= $generated@@150 $generated@@48)) (not true))))
 :pattern ( ($generated@@49 $generated@@31 $generated@@150 ($generated@@37 $generated@@149)))
 :pattern ( ($generated@@49 $generated@@31 $generated@@150 ($generated@@38 $generated@@149)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@151 ($generated@@53 $generated@@155 $generated@@152) $generated@@153 $generated@@154) ($generated@@30 $generated@@155 $generated@@152 $generated@@153 $generated@@154))
 :pattern ( ($generated@@151 ($generated@@53 $generated@@155 $generated@@152) $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@157 T@U) ) (!  (and (= ($generated@@29 ($generated@@33 $generated@@157)) $generated@@6) (= ($generated@@156 ($generated@@33 $generated@@157)) $generated@@11))
 :pattern ( ($generated@@33 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (!  (and (= ($generated@@29 ($generated@@32 $generated@@158)) $generated@@7) (= ($generated@@156 ($generated@@32 $generated@@158)) $generated@@11))
 :pattern ( ($generated@@32 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (!  (and (= ($generated@@29 ($generated@@38 $generated@@159)) $generated@@8) (= ($generated@@156 ($generated@@38 $generated@@159)) $generated@@12))
 :pattern ( ($generated@@38 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (!  (and (= ($generated@@29 ($generated@@37 $generated@@160)) $generated@@9) (= ($generated@@156 ($generated@@37 $generated@@160)) $generated@@12))
 :pattern ( ($generated@@37 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ) (!  (=> ($generated@@98 $generated@@161 $generated@@58) (and (= ($generated@@53 $generated@@31 ($generated@@63 $generated@@31 $generated@@161)) $generated@@161) ($generated@@49 $generated@@31 ($generated@@63 $generated@@31 $generated@@161) $generated@@58)))
 :pattern ( ($generated@@98 $generated@@161 $generated@@58))
)))
(assert (forall (($generated@@162 T@U) ) (!  (=> ($generated@@98 $generated@@162 $generated@@57) (and (= ($generated@@53 $generated@@31 ($generated@@63 $generated@@31 $generated@@162)) $generated@@162) ($generated@@49 $generated@@31 ($generated@@63 $generated@@31 $generated@@162) $generated@@57)))
 :pattern ( ($generated@@98 $generated@@162 $generated@@57))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@49 $generated@@31 $generated@@165 ($generated@@38 $generated@@164))  (or (= $generated@@165 $generated@@48) (= ($generated@@163 $generated@@165) ($generated@@38 $generated@@164))))
 :pattern ( ($generated@@49 $generated@@31 $generated@@165 ($generated@@38 $generated@@164)))
)))
(assert (forall (($generated@@166 T@U) ) (! (= ($generated@@49 $generated@@31 $generated@@166 $generated@@57)  (and ($generated@@49 $generated@@31 $generated@@166 $generated@@58) (or (not (= $generated@@166 $generated@@48)) (not true))))
 :pattern ( ($generated@@49 $generated@@31 $generated@@166 $generated@@57))
 :pattern ( ($generated@@49 $generated@@31 $generated@@166 $generated@@58))
)))
(assert  (=> (< 0 $generated@@44) (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and (or (not (= $generated@@168 $generated@@48)) (not true)) ($generated@@49 $generated@@31 $generated@@168 ($generated@@33 $generated@@167))) ($generated@@49 $generated@@107 ($generated@@51 $generated@@167 $generated@@168) ($generated@@108 $generated@@57)))
 :pattern ( ($generated@@51 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@151 $generated@@170 ($generated@@38 $generated@@169) $generated@@171) ($generated@@47 $generated@@171)) ($generated@@151 $generated@@170 ($generated@@33 ($generated@@52 $generated@@169)) $generated@@171))
 :pattern ( ($generated@@151 $generated@@170 ($generated@@38 $generated@@169) $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@173 ($generated@@38 $generated@@172) $generated@@174) ($generated@@30 $generated@@31 $generated@@173 ($generated@@33 ($generated@@52 $generated@@172)) $generated@@174))
 :pattern ( ($generated@@30 $generated@@31 $generated@@173 ($generated@@38 $generated@@172) $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ) (!  (=> ($generated@@98 $generated@@175 $generated) (and (= ($generated@@53 $generated@@14 ($generated@@63 $generated@@14 $generated@@175)) $generated@@175) ($generated@@49 $generated@@14 ($generated@@63 $generated@@14 $generated@@175) $generated)))
 :pattern ( ($generated@@98 $generated@@175 $generated))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@98 ($generated@@53 $generated@@178 $generated@@176) $generated@@177) ($generated@@49 $generated@@178 $generated@@176 $generated@@177))
 :pattern ( ($generated@@98 ($generated@@53 $generated@@178 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ) (! (<= 0 ($generated@@42 $generated@@179))
 :pattern ( ($generated@@42 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@30 $generated@@107 $generated@@180 ($generated@@108 $generated@@181) $generated@@182) (forall (($generated@@183 T@U) ) (!  (=> ($generated@@50 $generated@@180 $generated@@183) ($generated@@151 $generated@@183 $generated@@181 $generated@@182))
 :pattern ( ($generated@@50 $generated@@180 $generated@@183))
)))
 :pattern ( ($generated@@30 $generated@@107 $generated@@180 ($generated@@108 $generated@@181) $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@49 $generated@@31 $generated@@184 $generated@@58)
 :pattern ( ($generated@@49 $generated@@31 $generated@@184 $generated@@58))
)))
(assert (= ($generated@@13 $generated@@185) 8))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@30 $generated@@185 $generated@@187 ($generated@@52 $generated@@188) $generated@@189) (forall (($generated@@190 Int) ) (!  (=> (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@42 $generated@@187))) ($generated@@151 ($generated@@186 $generated@@187 $generated@@190) $generated@@188 $generated@@189))
 :pattern ( ($generated@@186 $generated@@187 $generated@@190))
)))
 :pattern ( ($generated@@30 $generated@@185 $generated@@187 ($generated@@52 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@191 ($generated@@108 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@108 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@29 ($generated@@108 $generated@@193)) $generated@@1)
 :pattern ( ($generated@@108 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@194 ($generated@@52 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@52 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@29 ($generated@@52 $generated@@196)) $generated@@2)
 :pattern ( ($generated@@52 $generated@@196))
)))
(assert (forall (($generated@@198 T@U) ) (! (= ($generated@@197 ($generated@@33 $generated@@198)) $generated@@198)
 :pattern ( ($generated@@33 $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! (= ($generated@@199 ($generated@@32 $generated@@200)) $generated@@200)
 :pattern ( ($generated@@32 $generated@@200))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@201 ($generated@@38 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@38 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@203 ($generated@@37 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@37 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@T) ) (! (= ($generated@@63 $generated@@206 ($generated@@53 $generated@@206 $generated@@205)) $generated@@205)
 :pattern ( ($generated@@53 $generated@@206 $generated@@205))
)))
(assert  (=> (<= 1 $generated@@44) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (or ($generated@@46 $generated@@207 $generated@@208 $generated@@209) (and (< 1 $generated@@44) (and ($generated@@47 $generated@@208) (and (or (not (= $generated@@209 $generated@@48)) (not true)) (and ($generated@@49 $generated@@31 $generated@@209 ($generated@@37 $generated@@207)) ($generated@@30 $generated@@31 $generated@@209 ($generated@@37 $generated@@207) $generated@@208)))))) (= ($generated@@45 $generated@@207 $generated@@208 $generated@@209) ($generated@@50 ($generated@@51 ($generated@@52 $generated@@207) $generated@@209) ($generated@@53 $generated@@31 $generated@@209))))
 :pattern ( ($generated@@45 $generated@@207 $generated@@208 $generated@@209) ($generated@@47 $generated@@208))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (! (= ($generated@@49 $generated@@31 $generated@@211 ($generated@@33 $generated@@210))  (or (= $generated@@211 $generated@@48) ($generated@@61 ($generated@@163 $generated@@211) $generated@@210)))
 :pattern ( ($generated@@49 $generated@@31 $generated@@211 ($generated@@33 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@98 $generated@@212 ($generated@@108 $generated@@213)) (and (= ($generated@@53 $generated@@107 ($generated@@63 $generated@@107 $generated@@212)) $generated@@212) ($generated@@49 $generated@@107 ($generated@@63 $generated@@107 $generated@@212) ($generated@@108 $generated@@213))))
 :pattern ( ($generated@@98 $generated@@212 ($generated@@108 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@98 $generated@@214 ($generated@@52 $generated@@215)) (and (= ($generated@@53 $generated@@185 ($generated@@63 $generated@@185 $generated@@214)) $generated@@214) ($generated@@49 $generated@@185 ($generated@@63 $generated@@185 $generated@@214) ($generated@@52 $generated@@215))))
 :pattern ( ($generated@@98 $generated@@214 ($generated@@52 $generated@@215)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@98 $generated@@217 ($generated@@33 $generated@@216)) (and (= ($generated@@53 $generated@@31 ($generated@@63 $generated@@31 $generated@@217)) $generated@@217) ($generated@@49 $generated@@31 ($generated@@63 $generated@@31 $generated@@217) ($generated@@33 $generated@@216))))
 :pattern ( ($generated@@98 $generated@@217 ($generated@@33 $generated@@216)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> ($generated@@98 $generated@@219 ($generated@@32 $generated@@218)) (and (= ($generated@@53 $generated@@31 ($generated@@63 $generated@@31 $generated@@219)) $generated@@219) ($generated@@49 $generated@@31 ($generated@@63 $generated@@31 $generated@@219) ($generated@@32 $generated@@218))))
 :pattern ( ($generated@@98 $generated@@219 ($generated@@32 $generated@@218)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> ($generated@@98 $generated@@221 ($generated@@38 $generated@@220)) (and (= ($generated@@53 $generated@@31 ($generated@@63 $generated@@31 $generated@@221)) $generated@@221) ($generated@@49 $generated@@31 ($generated@@63 $generated@@31 $generated@@221) ($generated@@38 $generated@@220))))
 :pattern ( ($generated@@98 $generated@@221 ($generated@@38 $generated@@220)))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> ($generated@@98 $generated@@223 ($generated@@37 $generated@@222)) (and (= ($generated@@53 $generated@@31 ($generated@@63 $generated@@31 $generated@@223)) $generated@@223) ($generated@@49 $generated@@31 ($generated@@63 $generated@@31 $generated@@223) ($generated@@37 $generated@@222))))
 :pattern ( ($generated@@98 $generated@@223 ($generated@@37 $generated@@222)))
)))
(assert (= ($generated@@29 $generated@@58) $generated@@4))
(assert (= ($generated@@156 $generated@@58) $generated@@10))
(assert (= ($generated@@29 $generated@@57) $generated@@5))
(assert (= ($generated@@156 $generated@@57) $generated@@10))
(assert  (=> (< 0 $generated@@44) (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and (and ($generated@@47 $generated@@225) (and (or (not (= $generated@@226 $generated@@48)) (not true)) ($generated@@49 $generated@@31 $generated@@226 ($generated@@33 $generated@@224)))) ($generated@@18 ($generated@@63 $generated@@14 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@31 ($generated@@67 $generated@@65 $generated@@66) $generated@@225 $generated@@226) $generated@@3)))) ($generated@@30 $generated@@107 ($generated@@51 $generated@@224 $generated@@226) ($generated@@108 $generated@@57) $generated@@225))
 :pattern ( ($generated@@51 $generated@@224 $generated@@226) ($generated@@63 $generated@@14 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@31 ($generated@@67 $generated@@65 $generated@@66) $generated@@225 $generated@@226) $generated@@3)))
))))
(assert (forall (($generated@@227 T@U) ) (!  (=> (= ($generated@@42 $generated@@227) 0) (= $generated@@227 $generated@@43))
 :pattern ( ($generated@@42 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! ($generated@@30 $generated@@14 $generated@@229 $generated $generated@@228)
 :pattern ( ($generated@@30 $generated@@14 $generated@@229 $generated $generated@@228))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@49 $generated@@185 $generated@@230 ($generated@@52 $generated@@231)) (forall (($generated@@232 Int) ) (!  (=> (and (<= 0 $generated@@232) (< $generated@@232 ($generated@@42 $generated@@230))) ($generated@@98 ($generated@@186 $generated@@230 $generated@@232) $generated@@231))
 :pattern ( ($generated@@186 $generated@@230 $generated@@232))
)))
 :pattern ( ($generated@@49 $generated@@185 $generated@@230 ($generated@@52 $generated@@231)))
)))
(assert (forall (($generated@@233 T@U) ) (! ($generated@@49 $generated@@14 $generated@@233 $generated)
 :pattern ( ($generated@@49 $generated@@14 $generated@@233 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@239  (=> (= (ControlFlow 0 6) (- 0 5)) (=> ($generated@@45 $generated@@234 $generated@@235 $generated@@236) ($generated@@50 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236) ($generated@@53 $generated@@31 $generated@@236))))))
(let (($generated@@240  (=> (= ($generated@@45 $generated@@234 $generated@@235 $generated@@236) ($generated@@50 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236) ($generated@@53 $generated@@31 $generated@@236))) (=> (and ($generated@@49 $generated@@14 ($generated@@17 ($generated@@45 $generated@@234 $generated@@235 $generated@@236)) $generated) (= (ControlFlow 0 7) 6)) $generated@@239))))
(let (($generated@@241 true))
(let (($generated@@242  (=> (and (=> ($generated@@45 $generated@@234 $generated@@235 $generated@@236) ($generated@@50 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236) ($generated@@53 $generated@@31 $generated@@236))) (= (ControlFlow 0 4) 1)) $generated@@241)))
(let (($generated@@243  (=> ($generated@@151 ($generated@@53 $generated@@31 $generated@@236) ($generated@@38 $generated@@234) $generated@@235) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (= $generated@@236 $generated@@236) (and ($generated@@101 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236) ($generated@@51 ($generated@@52 $generated@@234) $generated@@236)) (not ($generated@@101 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236) ($generated@@51 ($generated@@52 $generated@@234) $generated@@236)))))) (=> (or (= $generated@@236 $generated@@236) (and ($generated@@101 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236) ($generated@@51 ($generated@@52 $generated@@234) $generated@@236)) (not ($generated@@101 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236) ($generated@@51 ($generated@@52 $generated@@234) $generated@@236))))) (=> (and (and (or (= $generated@@236 $generated@@236) ($generated@@46 $generated@@234 $generated@@235 $generated@@236)) ($generated@@45 $generated@@234 $generated@@235 $generated@@236)) (and ($generated@@50 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236) ($generated@@53 $generated@@31 $generated@@236)) (= (ControlFlow 0 2) 1))) $generated@@241))))))
(let (($generated@@244  (=> (= $generated@@237 ($generated@@113 $generated@@48 $generated@@235 $generated@@3 $generated@@236 ($generated@@51 ($generated@@52 $generated@@234) $generated@@236))) (and (and (=> (= (ControlFlow 0 8) 7) $generated@@240) (=> (= (ControlFlow 0 8) 2) $generated@@243)) (=> (= (ControlFlow 0 8) 4) $generated@@242)))))
(let (($generated@@245  (=> (and ($generated@@47 $generated@@235) ($generated@@238 $generated@@235)) (=> (and (and (or (not (= $generated@@236 $generated@@48)) (not true)) (and ($generated@@49 $generated@@31 $generated@@236 ($generated@@37 $generated@@234)) ($generated@@30 $generated@@31 $generated@@236 ($generated@@37 $generated@@234) $generated@@235))) (and (= 1 $generated@@44) (= (ControlFlow 0 9) 8))) $generated@@244))))
$generated@@245))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
