(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 () T@U)
(declare-fun $generated@@112 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@T T@T) T@T)
(declare-fun $generated@@116 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 (T@T) T@T)
(declare-fun $generated@@118 (T@T) T@T)
(declare-fun $generated@@151 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@152 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@153 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@185 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ) (!  (not ($generated@@22 $generated@@23 $generated@@24))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24))
)))
(assert (= ($generated@@6 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ) (!  (=> (and (and ($generated@@25 $generated@@26 $generated@@29 ($generated@@27 $generated@@30 $generated@@31)) (forall (($generated@@34 T@U) ) (!  (=> ($generated@@28 $generated@@34 $generated@@32) ($generated@@28 $generated@@34 $generated@@30))
 :pattern ( ($generated@@28 $generated@@34 $generated@@32))
 :pattern ( ($generated@@28 $generated@@34 $generated@@30))
))) (forall (($generated@@35 T@U) ) (!  (=> ($generated@@28 $generated@@35 $generated@@31) ($generated@@28 $generated@@35 $generated@@33))
 :pattern ( ($generated@@28 $generated@@35 $generated@@31))
 :pattern ( ($generated@@28 $generated@@35 $generated@@33))
))) ($generated@@25 $generated@@26 $generated@@29 ($generated@@27 $generated@@32 $generated@@33)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@29 ($generated@@27 $generated@@30 $generated@@31)) ($generated@@25 $generated@@26 $generated@@29 ($generated@@27 $generated@@32 $generated@@33)))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ($generated@@44 T@U) ) (!  (=> (and ($generated@@38 $generated@@42) (and ($generated@@28 $generated@@44 $generated@@40) ($generated@@25 $generated@@26 $generated@@43 ($generated@@27 $generated@@40 $generated@@41)))) (= ($generated@@39 ($generated@@36 $generated@@40 $generated@@41 $generated@@37 $generated@@43 $generated@@44) $generated@@23) ($generated@@39 ($generated@@36 $generated@@40 $generated@@41 $generated@@42 $generated@@43 $generated@@44) $generated@@23)))
 :pattern ( ($generated@@36 $generated@@40 $generated@@41 $generated@@37 $generated@@43 $generated@@44) ($generated@@38 $generated@@42))
 :pattern ( ($generated@@36 $generated@@40 $generated@@41 $generated@@42 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 ($generated@@45 $generated@@48 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@45 $generated@@48 $generated@@47))
)))
(assert ($generated@@38 $generated@@37))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@54 $generated@@51) $generated@@52 $generated@@53) ($generated@@50 $generated@@54 $generated@@51 $generated@@52 $generated@@53))
 :pattern ( ($generated@@49 ($generated@@46 $generated@@54 $generated@@51) $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@50 $generated@@26 $generated@@58 ($generated@@55 $generated@@56 $generated@@57) $generated@@59) ($generated@@50 $generated@@26 $generated@@58 ($generated@@27 $generated@@56 $generated@@57) $generated@@59))
 :pattern ( ($generated@@50 $generated@@26 $generated@@58 ($generated@@55 $generated@@56 $generated@@57) $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@50 $generated@@26 $generated@@63 ($generated@@60 $generated@@61 $generated@@62) $generated@@64) ($generated@@50 $generated@@26 $generated@@63 ($generated@@55 $generated@@61 $generated@@62) $generated@@64))
 :pattern ( ($generated@@50 $generated@@26 $generated@@63 ($generated@@60 $generated@@61 $generated@@62) $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@38 $generated@@70) ($generated@@50 $generated@@26 $generated@@67 ($generated@@27 $generated@@68 $generated@@69) $generated@@70)) (forall (($generated@@71 T@U) ) (!  (=> (and ($generated@@49 $generated@@71 $generated@@68 $generated@@70) ($generated@@66 $generated@@68 $generated@@69 $generated@@70 $generated@@67 $generated@@71)) ($generated@@49 ($generated@@65 $generated@@68 $generated@@69 $generated@@70 $generated@@67 $generated@@71) $generated@@69 $generated@@70))
 :pattern ( ($generated@@65 $generated@@68 $generated@@69 $generated@@70 $generated@@67 $generated@@71))
)))
 :pattern ( ($generated@@50 $generated@@26 $generated@@67 ($generated@@27 $generated@@68 $generated@@69) $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@39 $generated@@72 $generated@@73) (= $generated@@72 $generated@@73))
 :pattern ( ($generated@@39 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@74 ($generated@@27 $generated@@75 $generated@@76)) (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@77) ($generated@@28 $generated@@78 $generated@@75)) ($generated@@66 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78)) ($generated@@28 ($generated@@65 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78) $generated@@76))
 :pattern ( ($generated@@65 $generated@@75 $generated@@76 $generated@@77 $generated@@74 $generated@@78))
)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@74 ($generated@@27 $generated@@75 $generated@@76)))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@T) ) (! (= ($generated@@28 ($generated@@46 $generated@@81 $generated@@79) $generated@@80) ($generated@@25 $generated@@81 $generated@@79 $generated@@80))
 :pattern ( ($generated@@28 ($generated@@46 $generated@@81 $generated@@79) $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@82 ($generated@@27 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@27 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@85 ($generated@@27 $generated@@86 $generated@@87)) $generated@@87)
 :pattern ( ($generated@@27 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@55 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@55 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@91 ($generated@@55 $generated@@92 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@55 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@94 ($generated@@60 $generated@@95 $generated@@96)) $generated@@95)
 :pattern ( ($generated@@60 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@97 ($generated@@60 $generated@@98 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@60 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@45 $generated@@101 ($generated@@46 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@46 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@104 ($generated@@60 $generated@@102 $generated@@103))  (and ($generated@@25 $generated@@26 $generated@@104 ($generated@@55 $generated@@102 $generated@@103)) (forall (($generated@@105 T@U) )  (=> ($generated@@28 $generated@@105 $generated@@102) ($generated@@66 $generated@@102 $generated@@103 $generated@@37 $generated@@104 $generated@@105)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@104 ($generated@@60 $generated@@102 $generated@@103)))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@108 ($generated@@55 $generated@@106 $generated@@107))  (and ($generated@@25 $generated@@26 $generated@@108 ($generated@@27 $generated@@106 $generated@@107)) (forall (($generated@@109 T@U) )  (=> ($generated@@28 $generated@@109 $generated@@106) ($generated@@39 ($generated@@36 $generated@@106 $generated@@107 $generated@@37 $generated@@108 $generated@@109) $generated@@23)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@108 ($generated@@55 $generated@@106 $generated@@107)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@6 $generated@@110) 4) (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@112 $generated@@119 $generated@@120 ($generated@@116 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@121) $generated@@123) $generated@@121)
 :weight 0
))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@128 $generated@@129) (= ($generated@@112 $generated@@124 $generated@@125 ($generated@@116 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@126) $generated@@129) ($generated@@112 $generated@@124 $generated@@125 $generated@@127 $generated@@129)))
 :weight 0
))) (= ($generated@@6 $generated@@113) 5)) (= ($generated@@6 $generated@@114) 6)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ) (= ($generated@@6 ($generated@@115 $generated@@130 $generated@@131)) 7))) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (! (= ($generated@@117 ($generated@@115 $generated@@132 $generated@@133)) $generated@@132)
 :pattern ( ($generated@@115 $generated@@132 $generated@@133))
))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (! (= ($generated@@118 ($generated@@115 $generated@@134 $generated@@135)) $generated@@135)
 :pattern ( ($generated@@115 $generated@@134 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@38 $generated@@139) (= ($generated@@50 $generated@@26 $generated@@136 ($generated@@27 $generated@@137 $generated@@138) $generated@@139) (forall (($generated@@140 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@140 $generated@@137) ($generated@@49 $generated@@140 $generated@@137 $generated@@139)) ($generated@@66 $generated@@137 $generated@@138 $generated@@139 $generated@@136 $generated@@140)) (forall (($generated@@141 T@U) ) (!  (=> (and (or (not (= $generated@@141 $generated@@111)) (not true)) ($generated@@22 ($generated@@36 $generated@@137 $generated@@138 $generated@@139 $generated@@136 $generated@@140) ($generated@@46 $generated@@110 $generated@@141))) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@112 $generated@@113 $generated@@114 ($generated@@112 $generated@@110 ($generated@@115 $generated@@113 $generated@@114) $generated@@139 $generated@@141) $generated))))
 :pattern ( ($generated@@22 ($generated@@36 $generated@@137 $generated@@138 $generated@@139 $generated@@136 $generated@@140) ($generated@@46 $generated@@110 $generated@@141)))
)))
 :pattern ( ($generated@@65 $generated@@137 $generated@@138 $generated@@139 $generated@@136 $generated@@140))
 :pattern ( ($generated@@36 $generated@@137 $generated@@138 $generated@@139 $generated@@136 $generated@@140))
))))
 :pattern ( ($generated@@50 $generated@@26 $generated@@136 ($generated@@27 $generated@@137 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@28 $generated@@144 ($generated@@27 $generated@@142 $generated@@143)) (and (= ($generated@@46 $generated@@26 ($generated@@45 $generated@@26 $generated@@144)) $generated@@144) ($generated@@25 $generated@@26 ($generated@@45 $generated@@26 $generated@@144) ($generated@@27 $generated@@142 $generated@@143))))
 :pattern ( ($generated@@28 $generated@@144 ($generated@@27 $generated@@142 $generated@@143)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@28 $generated@@147 ($generated@@55 $generated@@145 $generated@@146)) (and (= ($generated@@46 $generated@@26 ($generated@@45 $generated@@26 $generated@@147)) $generated@@147) ($generated@@25 $generated@@26 ($generated@@45 $generated@@26 $generated@@147) ($generated@@55 $generated@@145 $generated@@146))))
 :pattern ( ($generated@@28 $generated@@147 ($generated@@55 $generated@@145 $generated@@146)))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@28 $generated@@150 ($generated@@60 $generated@@148 $generated@@149)) (and (= ($generated@@46 $generated@@26 ($generated@@45 $generated@@26 $generated@@150)) $generated@@150) ($generated@@25 $generated@@26 ($generated@@45 $generated@@26 $generated@@150) ($generated@@60 $generated@@148 $generated@@149))))
 :pattern ( ($generated@@28 $generated@@150 ($generated@@60 $generated@@148 $generated@@149)))
)))
(assert  (and (forall (($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@151 $generated@@154 $generated@@155 $generated@@156 ($generated@@153 $generated@@154 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@160 $generated@@157) $generated@@159 $generated@@160) $generated@@157)
 :weight 0
)) (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@166 $generated@@168) (= ($generated@@151 $generated@@161 $generated@@162 $generated@@163 ($generated@@153 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@151 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@151 $generated@@170 $generated@@171 $generated@@172 ($generated@@153 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@175 $generated@@176 $generated@@173) $generated@@177 $generated@@178) ($generated@@151 $generated@@170 $generated@@171 $generated@@172 $generated@@174 $generated@@177 $generated@@178)))
 :weight 0
)))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@11 ($generated@@151 $generated@@110 $generated@@113 $generated@@7 ($generated@@152 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))  (=> (and (or (not (= $generated@@183 $generated@@179)) (not true)) ($generated@@11 ($generated@@45 $generated@@7 ($generated@@112 $generated@@113 $generated@@114 ($generated@@112 $generated@@110 ($generated@@115 $generated@@113 $generated@@114) $generated@@180 $generated@@183) $generated@@181)))) $generated@@182))
 :pattern ( ($generated@@151 $generated@@110 $generated@@113 $generated@@7 ($generated@@152 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (and (= ($generated@@185 ($generated@@27 $generated@@187 $generated@@188)) $generated@@0) (= ($generated@@186 ($generated@@27 $generated@@187 $generated@@188)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (and (= ($generated@@185 ($generated@@55 $generated@@189 $generated@@190)) $generated@@1) (= ($generated@@186 ($generated@@55 $generated@@189 $generated@@190)) $generated@@4))
 :pattern ( ($generated@@55 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (and (= ($generated@@185 ($generated@@60 $generated@@191 $generated@@192)) $generated@@2) (= ($generated@@186 ($generated@@60 $generated@@191 $generated@@192)) $generated@@5))
 :pattern ( ($generated@@60 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@195) (and ($generated@@28 $generated@@197 $generated@@193) ($generated@@25 $generated@@26 $generated@@196 ($generated@@27 $generated@@193 $generated@@194)))) ($generated@@39 ($generated@@36 $generated@@193 $generated@@194 $generated@@37 $generated@@196 $generated@@197) $generated@@23)) (= ($generated@@66 $generated@@193 $generated@@194 $generated@@37 $generated@@196 $generated@@197) ($generated@@66 $generated@@193 $generated@@194 $generated@@195 $generated@@196 $generated@@197)))
 :pattern ( ($generated@@66 $generated@@193 $generated@@194 $generated@@37 $generated@@196 $generated@@197) ($generated@@38 $generated@@195))
 :pattern ( ($generated@@66 $generated@@193 $generated@@194 $generated@@195 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@39 $generated@@198 $generated@@199) (forall (($generated@@200 T@U) ) (! (= ($generated@@22 $generated@@198 $generated@@200) ($generated@@22 $generated@@199 $generated@@200))
 :pattern ( ($generated@@22 $generated@@198 $generated@@200))
 :pattern ( ($generated@@22 $generated@@199 $generated@@200))
)))
 :pattern ( ($generated@@39 $generated@@198 $generated@@199))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@209  (=> (and (= $generated@@201 ($generated@@152 $generated@@111 $generated@@202 $generated false)) (= (ControlFlow 0 2) (- 0 1))) true)))
(let (($generated@@210  (=> (and ($generated@@38 $generated@@202) ($generated@@203 $generated@@202)) (=> (and (and (and ($generated@@25 $generated@@26 $generated@@204 ($generated@@60 $generated@@205 $generated@@205)) ($generated@@50 $generated@@26 $generated@@204 ($generated@@60 $generated@@205 $generated@@205) $generated@@202)) (=> $generated@@206 (and ($generated@@25 $generated@@26 $generated@@207 ($generated@@60 $generated@@205 $generated@@205)) ($generated@@50 $generated@@26 $generated@@207 ($generated@@60 $generated@@205 $generated@@205) $generated@@202)))) (and (= 0 $generated@@208) (= (ControlFlow 0 3) 2))) $generated@@209))))
$generated@@210)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
