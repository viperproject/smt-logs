(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@76 () Int)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@86 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U T@U) T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@U) Bool)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@109 (T@U T@U) T@U)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@112 () T@U)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@236 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@237 (T@U) Bool)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@245 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@3))
(assert (= ($generated@@35 $generated@@37) $generated@@4))
(assert (= ($generated@@35 $generated@@38) $generated@@5))
(assert (= ($generated@@35 $generated@@39) $generated@@7))
(assert ($generated@@28 $generated@@29 $generated@@36 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@37 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@38 $generated@@32))
(assert ($generated@@28 $generated@@29 $generated@@39 $generated@@31))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@43) (= $generated@@42 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@46) (= $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@35 $generated@@51) $generated@@3))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 $generated@@53) (= ($generated@@35 $generated@@53) $generated@@4))
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@54 $generated@@55) (= ($generated@@35 $generated@@55) $generated@@5))
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@35 $generated@@57) $generated@@6))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@35 $generated@@59) $generated@@7))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@35 $generated@@61) $generated@@8))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@62 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@62 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@60 $generated@@66) (exists (($generated@@67 T@U) ($generated@@68 T@U) ) (= $generated@@66 ($generated@@30 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@60 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@50 $generated@@69) (= $generated@@69 $generated@@36))
 :pattern ( ($generated@@50 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@52 $generated@@70) (= $generated@@70 $generated@@37))
 :pattern ( ($generated@@52 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@54 $generated@@71) (= $generated@@71 $generated@@38))
 :pattern ( ($generated@@54 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@58 $generated@@72) (= $generated@@72 $generated@@39))
 :pattern ( ($generated@@58 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@56 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@56 $generated@@74))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@79 $generated@@82) (and (< 2 $generated@@76) ($generated@@28 $generated@@29 $generated@@82 $generated@@31))) (and (=> (not ($generated@@58 $generated@@82)) (let (($generated@@83 ($generated@@80 $generated@@82)))
($generated@@79 $generated@@83))) (= ($generated@@77 ($generated@@78 $generated@@81) $generated@@82) (ite ($generated@@58 $generated@@82) $generated@@38 (let (($generated@@84 ($generated@@80 $generated@@82)))
($generated@@73 ($generated@@77 $generated@@81 $generated@@84)))))))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@81) $generated@@82))
))))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@73 $generated@@85) $generated@@32) ($generated@@28 $generated@@29 $generated@@85 $generated@@32))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@73 $generated@@85) $generated@@32))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and ($generated@@56 $generated@@87) ($generated@@56 $generated@@88)) (= ($generated@@44 $generated@@87 $generated@@88) ($generated@@44 ($generated@@86 $generated@@87) ($generated@@86 $generated@@88))))
 :pattern ( ($generated@@44 $generated@@87 $generated@@88) ($generated@@56 $generated@@87))
 :pattern ( ($generated@@44 $generated@@87 $generated@@88) ($generated@@56 $generated@@88))
)))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@90 $generated@@92 $generated@@93) (and (< 1 $generated@@76) (and ($generated@@28 $generated@@29 $generated@@92 $generated@@32) ($generated@@28 $generated@@29 $generated@@93 $generated@@32)))) ($generated@@28 $generated@@29 ($generated@@89 $generated@@91 $generated@@92 $generated@@93) $generated@@40))
 :pattern ( ($generated@@89 $generated@@91 $generated@@92 $generated@@93))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@95 $generated@@97 $generated@@98) (and (< 2 $generated@@76) (and ($generated@@28 $generated@@29 $generated@@97 $generated@@32) ($generated@@28 $generated@@29 $generated@@98 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@94 $generated@@96 $generated@@97 $generated@@98) $generated@@31))
 :pattern ( ($generated@@94 $generated@@96 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@89 ($generated@@78 $generated@@99) $generated@@100 $generated@@101) ($generated@@89 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@89 ($generated@@78 $generated@@99) $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@94 ($generated@@78 $generated@@102) $generated@@103 $generated@@104) ($generated@@94 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@94 ($generated@@78 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@105 $generated@@106) (or ($generated@@50 $generated@@106) ($generated@@52 $generated@@106)))
 :pattern ( ($generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@107 $generated@@108) (or ($generated@@54 $generated@@108) ($generated@@56 $generated@@108)))
 :pattern ( ($generated@@107 $generated@@108))
)))
(assert  (=> (<= 3 $generated@@76) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or ($generated@@110 ($generated@@47 $generated@@29 $generated@@114)) (and (< 3 $generated@@76) ($generated@@28 $generated@@29 $generated@@114 $generated@@31))) (and (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@58 ($generated@@47 $generated@@29 $generated@@114)))))) (let (($generated@@115 ($generated@@47 $generated@@29 ($generated@@80 ($generated@@47 $generated@@29 $generated@@114)))))
(let (($generated@@116 ($generated@@47 $generated@@29 ($generated@@111 ($generated@@47 $generated@@29 $generated@@114)))))
 (and ($generated@@110 $generated@@115) ($generated@@95 $generated@@116 ($generated@@109 ($generated@@78 $generated@@113) $generated@@115)))))) (= ($generated@@109 ($generated@@78 $generated@@113) ($generated@@47 $generated@@29 $generated@@114)) (ite ($generated@@58 ($generated@@47 $generated@@29 $generated@@114)) $generated@@39 (let (($generated@@117 ($generated@@47 $generated@@29 ($generated@@80 ($generated@@47 $generated@@29 $generated@@114)))))
(let (($generated@@118 ($generated@@47 $generated@@29 ($generated@@111 ($generated@@47 $generated@@29 $generated@@114)))))
($generated@@47 $generated@@29 ($generated@@94 ($generated@@78 $generated@@112) $generated@@118 ($generated@@47 $generated@@29 ($generated@@109 ($generated@@78 $generated@@113) $generated@@117))))))))))
 :weight 3
 :pattern ( ($generated@@109 ($generated@@78 $generated@@113) ($generated@@47 $generated@@29 $generated@@114)))
))))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or ($generated@@79 $generated@@120) (and (< 2 $generated@@76) ($generated@@28 $generated@@29 $generated@@120 $generated@@31))) ($generated@@28 $generated@@29 ($generated@@77 $generated@@119 $generated@@120) $generated@@32))
 :pattern ( ($generated@@77 $generated@@119 $generated@@120))
))))
(assert  (=> (<= 3 $generated@@76) (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or ($generated@@110 $generated@@122) (and (< 3 $generated@@76) ($generated@@28 $generated@@29 $generated@@122 $generated@@31))) ($generated@@28 $generated@@29 ($generated@@109 $generated@@121 $generated@@122) $generated@@31))
 :pattern ( ($generated@@109 $generated@@121 $generated@@122))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or ($generated@@90 ($generated@@47 $generated@@29 $generated@@124) ($generated@@47 $generated@@29 $generated@@125)) (and (< 1 $generated@@76) (and ($generated@@28 $generated@@29 $generated@@124 $generated@@32) ($generated@@28 $generated@@29 $generated@@125 $generated@@32)))) (and (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@54 ($generated@@47 $generated@@29 $generated@@124)))))) (let (($generated@@126 ($generated@@47 $generated@@29 ($generated@@86 ($generated@@47 $generated@@29 $generated@@124)))))
 (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@54 ($generated@@47 $generated@@29 $generated@@125)))))) (let (($generated@@127 ($generated@@47 $generated@@29 ($generated@@86 ($generated@@47 $generated@@29 $generated@@125)))))
($generated@@90 $generated@@126 $generated@@127))))) (= ($generated@@89 ($generated@@78 $generated@@123) ($generated@@47 $generated@@29 $generated@@124) ($generated@@47 $generated@@29 $generated@@125)) (ite ($generated@@54 ($generated@@47 $generated@@29 $generated@@124)) $generated@@37 (let (($generated@@128 ($generated@@47 $generated@@29 ($generated@@86 ($generated@@47 $generated@@29 $generated@@124)))))
(ite ($generated@@54 ($generated@@47 $generated@@29 $generated@@125)) $generated@@36 (let (($generated@@129 ($generated@@47 $generated@@29 ($generated@@86 ($generated@@47 $generated@@29 $generated@@125)))))
($generated@@47 $generated@@29 ($generated@@89 ($generated@@78 $generated@@123) $generated@@128 $generated@@129)))))))))
 :weight 3
 :pattern ( ($generated@@89 ($generated@@78 $generated@@123) ($generated@@47 $generated@@29 $generated@@124) ($generated@@47 $generated@@29 $generated@@125)))
))))
(assert  (=> (<= 1 $generated@@76) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@90 $generated@@131 $generated@@132) (and (< 1 $generated@@76) (and ($generated@@28 $generated@@29 $generated@@131 $generated@@32) ($generated@@28 $generated@@29 $generated@@132 $generated@@32)))) (and (=> (not ($generated@@54 $generated@@131)) (let (($generated@@133 ($generated@@86 $generated@@131)))
 (=> (not ($generated@@54 $generated@@132)) (let (($generated@@134 ($generated@@86 $generated@@132)))
($generated@@90 $generated@@133 $generated@@134))))) (= ($generated@@89 ($generated@@78 $generated@@130) $generated@@131 $generated@@132) (ite ($generated@@54 $generated@@131) $generated@@37 (let (($generated@@135 ($generated@@86 $generated@@131)))
(ite ($generated@@54 $generated@@132) $generated@@36 (let (($generated@@136 ($generated@@86 $generated@@132)))
($generated@@89 $generated@@130 $generated@@135 $generated@@136))))))))
 :pattern ( ($generated@@89 ($generated@@78 $generated@@130) $generated@@131 $generated@@132))
))))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@137 $generated@@40) (or ($generated@@50 $generated@@137) ($generated@@52 $generated@@137)))
 :pattern ( ($generated@@52 $generated@@137) ($generated@@28 $generated@@29 $generated@@137 $generated@@40))
 :pattern ( ($generated@@50 $generated@@137) ($generated@@28 $generated@@29 $generated@@137 $generated@@40))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@138 $generated@@32) (or ($generated@@54 $generated@@138) ($generated@@56 $generated@@138)))
 :pattern ( ($generated@@56 $generated@@138) ($generated@@28 $generated@@29 $generated@@138 $generated@@32))
 :pattern ( ($generated@@54 $generated@@138) ($generated@@28 $generated@@29 $generated@@138 $generated@@32))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@139 $generated@@31) (or ($generated@@58 $generated@@139) ($generated@@60 $generated@@139)))
 :pattern ( ($generated@@60 $generated@@139) ($generated@@28 $generated@@29 $generated@@139 $generated@@31))
 :pattern ( ($generated@@58 $generated@@139) ($generated@@28 $generated@@29 $generated@@139 $generated@@31))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (or ($generated@@79 ($generated@@47 $generated@@29 $generated@@141)) (and (< 2 $generated@@76) ($generated@@28 $generated@@29 $generated@@141 $generated@@31))) (and (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@58 ($generated@@47 $generated@@29 $generated@@141)))))) (let (($generated@@142 ($generated@@47 $generated@@29 ($generated@@80 ($generated@@47 $generated@@29 $generated@@141)))))
($generated@@79 $generated@@142))) (= ($generated@@77 ($generated@@78 $generated@@140) ($generated@@47 $generated@@29 $generated@@141)) (ite ($generated@@58 ($generated@@47 $generated@@29 $generated@@141)) $generated@@38 (let (($generated@@143 ($generated@@47 $generated@@29 ($generated@@80 ($generated@@47 $generated@@29 $generated@@141)))))
($generated@@47 $generated@@29 ($generated@@73 ($generated@@47 $generated@@29 ($generated@@77 ($generated@@78 $generated@@140) $generated@@143)))))))))
 :weight 3
 :pattern ( ($generated@@77 ($generated@@78 $generated@@140) ($generated@@47 $generated@@29 $generated@@141)))
))))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and ($generated@@50 $generated@@144) ($generated@@50 $generated@@145)) ($generated@@41 $generated@@144 $generated@@145))
 :pattern ( ($generated@@41 $generated@@144 $generated@@145) ($generated@@50 $generated@@144))
 :pattern ( ($generated@@41 $generated@@144 $generated@@145) ($generated@@50 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and ($generated@@52 $generated@@146) ($generated@@52 $generated@@147)) ($generated@@41 $generated@@146 $generated@@147))
 :pattern ( ($generated@@41 $generated@@146 $generated@@147) ($generated@@52 $generated@@146))
 :pattern ( ($generated@@41 $generated@@146 $generated@@147) ($generated@@52 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (!  (=> (and ($generated@@54 $generated@@148) ($generated@@54 $generated@@149)) ($generated@@44 $generated@@148 $generated@@149))
 :pattern ( ($generated@@44 $generated@@148 $generated@@149) ($generated@@54 $generated@@148))
 :pattern ( ($generated@@44 $generated@@148 $generated@@149) ($generated@@54 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@35 ($generated@@30 $generated@@150 $generated@@151)) $generated@@8)
 :pattern ( ($generated@@30 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@111 ($generated@@30 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@30 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@80 ($generated@@30 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@30 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@35 ($generated@@73 $generated@@156)) $generated@@6)
 :pattern ( ($generated@@73 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@86 ($generated@@73 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@73 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@T) ) (! (= ($generated@@62 $generated@@159 ($generated@@63 $generated@@159 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@63 $generated@@159 $generated@@158))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (< ($generated@@160 $generated@@161) ($generated@@160 ($generated@@30 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@30 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (< ($generated@@160 $generated@@164) ($generated@@160 ($generated@@30 $generated@@163 $generated@@164)))
 :pattern ( ($generated@@30 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@77 ($generated@@78 $generated@@165) $generated@@166) ($generated@@77 $generated@@165 $generated@@166))
 :pattern ( ($generated@@77 ($generated@@78 $generated@@165) $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@109 ($generated@@78 $generated@@167) $generated@@168) ($generated@@109 $generated@@167 $generated@@168))
 :pattern ( ($generated@@109 ($generated@@78 $generated@@167) $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ) (! (< ($generated@@160 $generated@@169) ($generated@@160 ($generated@@73 $generated@@169)))
 :pattern ( ($generated@@73 $generated@@169))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@170 $generated@@181 $generated@@182 $generated@@183 ($generated@@177 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@186 $generated@@187) $generated@@184)
 :weight 0
)) (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@170 $generated@@188 $generated@@189 $generated@@190 ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@170 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@170 $generated@@197 $generated@@198 $generated@@199 ($generated@@177 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (= ($generated@@12 $generated@@171) 4)) (= ($generated@@12 $generated@@172) 5)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@174 $generated@@206 $generated@@207 ($generated@@178 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@208) $generated@@210) $generated@@208)
 :weight 0
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@215 $generated@@216) (= ($generated@@174 $generated@@211 $generated@@212 ($generated@@178 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@213) $generated@@216) ($generated@@174 $generated@@211 $generated@@212 $generated@@214 $generated@@216)))
 :weight 0
))) (= ($generated@@12 $generated@@175) 6)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (= ($generated@@12 ($generated@@176 $generated@@217 $generated@@218)) 7))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@179 ($generated@@176 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@176 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@180 ($generated@@176 $generated@@221 $generated@@222)) $generated@@222)
 :pattern ( ($generated@@176 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@17 ($generated@@170 $generated@@171 $generated@@172 $generated@@13 ($generated@@173 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (or (not (= $generated@@227 $generated@@223)) (not true)) ($generated@@17 ($generated@@62 $generated@@13 ($generated@@174 $generated@@172 $generated@@175 ($generated@@174 $generated@@171 ($generated@@176 $generated@@172 $generated@@175) $generated@@224 $generated@@227) $generated@@225)))) $generated@@226))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172 $generated@@13 ($generated@@173 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (or ($generated@@95 ($generated@@47 $generated@@29 $generated@@230) ($generated@@47 $generated@@29 $generated@@231)) (and (< 2 $generated@@76) (and ($generated@@28 $generated@@29 $generated@@230 $generated@@32) ($generated@@28 $generated@@29 $generated@@231 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@58 ($generated@@47 $generated@@29 $generated@@231)))))) (let (($generated@@232 ($generated@@47 $generated@@29 ($generated@@80 ($generated@@47 $generated@@29 $generated@@231)))))
(let (($generated@@233 ($generated@@47 $generated@@29 ($generated@@111 ($generated@@47 $generated@@29 $generated@@231)))))
 (and (and ($generated@@105 ($generated@@89 ($generated@@78 $generated@@112) ($generated@@47 $generated@@29 $generated@@230) $generated@@233)) ($generated@@90 ($generated@@47 $generated@@29 $generated@@230) $generated@@233)) (=> (not ($generated@@41 ($generated@@89 ($generated@@78 $generated@@112) ($generated@@47 $generated@@29 $generated@@230) $generated@@233) $generated@@37)) ($generated@@95 ($generated@@47 $generated@@29 $generated@@230) $generated@@232)))))) (= ($generated@@94 ($generated@@78 $generated@@229) ($generated@@47 $generated@@29 $generated@@230) ($generated@@47 $generated@@29 $generated@@231)) (ite ($generated@@58 ($generated@@47 $generated@@29 $generated@@231)) ($generated@@30 ($generated@@47 $generated@@29 $generated@@230) ($generated@@47 $generated@@29 $generated@@39)) (let (($generated@@234 ($generated@@47 $generated@@29 ($generated@@80 ($generated@@47 $generated@@29 $generated@@231)))))
(let (($generated@@235 ($generated@@47 $generated@@29 ($generated@@111 ($generated@@47 $generated@@29 $generated@@231)))))
(ite ($generated@@41 ($generated@@89 ($generated@@78 $generated@@112) ($generated@@47 $generated@@29 $generated@@230) $generated@@235) $generated@@37) ($generated@@30 ($generated@@47 $generated@@29 $generated@@230) ($generated@@47 $generated@@29 ($generated@@30 $generated@@235 $generated@@234))) ($generated@@30 $generated@@235 ($generated@@47 $generated@@29 ($generated@@94 ($generated@@78 $generated@@229) ($generated@@47 $generated@@29 $generated@@230) $generated@@234))))))))))
 :weight 3
 :pattern ( ($generated@@94 ($generated@@78 $generated@@229) ($generated@@47 $generated@@29 $generated@@230) ($generated@@47 $generated@@29 $generated@@231)))
))))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and ($generated@@237 $generated@@239) ($generated@@28 $generated@@29 $generated@@238 $generated@@40)) ($generated@@236 $generated@@29 $generated@@238 $generated@@40 $generated@@239))
 :pattern ( ($generated@@236 $generated@@29 $generated@@238 $generated@@40 $generated@@239))
)))
(assert (forall (($generated@@240 T@U) ($generated@@241 T@U) ) (!  (=> (and ($generated@@237 $generated@@241) ($generated@@28 $generated@@29 $generated@@240 $generated@@32)) ($generated@@236 $generated@@29 $generated@@240 $generated@@32 $generated@@241))
 :pattern ( ($generated@@236 $generated@@29 $generated@@240 $generated@@32 $generated@@241))
)))
(assert (forall (($generated@@242 T@U) ($generated@@243 T@U) ) (!  (=> (and ($generated@@237 $generated@@243) ($generated@@28 $generated@@29 $generated@@242 $generated@@31)) ($generated@@236 $generated@@29 $generated@@242 $generated@@31 $generated@@243))
 :pattern ( ($generated@@236 $generated@@29 $generated@@242 $generated@@31 $generated@@243))
)))
(assert (= ($generated@@244 $generated@@40) $generated@@0))
(assert (= ($generated@@245 $generated@@40) $generated@@9))
(assert (= ($generated@@244 $generated@@32) $generated@@1))
(assert (= ($generated@@245 $generated@@32) $generated@@10))
(assert (= ($generated@@244 $generated@@31) $generated@@2))
(assert (= ($generated@@245 $generated@@31) $generated@@11))
(assert (= $generated@@36 ($generated@@47 $generated@@29 $generated@@36)))
(assert (= $generated@@37 ($generated@@47 $generated@@29 $generated@@37)))
(assert (= $generated@@38 ($generated@@47 $generated@@29 $generated@@38)))
(assert (= $generated@@39 ($generated@@47 $generated@@29 $generated@@39)))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and ($generated@@237 $generated@@247) (and ($generated@@56 $generated@@246) ($generated@@236 $generated@@29 $generated@@246 $generated@@32 $generated@@247))) ($generated@@236 $generated@@29 ($generated@@86 $generated@@246) $generated@@32 $generated@@247))
 :pattern ( ($generated@@236 $generated@@29 ($generated@@86 $generated@@246) $generated@@32 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and ($generated@@237 $generated@@249) (and ($generated@@60 $generated@@248) ($generated@@236 $generated@@29 $generated@@248 $generated@@31 $generated@@249))) ($generated@@236 $generated@@29 ($generated@@111 $generated@@248) $generated@@32 $generated@@249))
 :pattern ( ($generated@@236 $generated@@29 ($generated@@111 $generated@@248) $generated@@32 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> (and ($generated@@237 $generated@@251) (and ($generated@@60 $generated@@250) ($generated@@236 $generated@@29 $generated@@250 $generated@@31 $generated@@251))) ($generated@@236 $generated@@29 ($generated@@80 $generated@@250) $generated@@31 $generated@@251))
 :pattern ( ($generated@@236 $generated@@29 ($generated@@80 $generated@@250) $generated@@31 $generated@@251))
)))
(assert  (=> (<= 3 $generated@@76) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (or ($generated@@110 $generated@@253) (and (< 3 $generated@@76) ($generated@@28 $generated@@29 $generated@@253 $generated@@31))) (and (=> (not ($generated@@58 $generated@@253)) (let (($generated@@254 ($generated@@80 $generated@@253)))
(let (($generated@@255 ($generated@@111 $generated@@253)))
 (and ($generated@@110 $generated@@254) ($generated@@95 $generated@@255 ($generated@@109 $generated@@252 $generated@@254)))))) (= ($generated@@109 ($generated@@78 $generated@@252) $generated@@253) (ite ($generated@@58 $generated@@253) $generated@@39 (let (($generated@@256 ($generated@@80 $generated@@253)))
(let (($generated@@257 ($generated@@111 $generated@@253)))
($generated@@94 ($generated@@78 $generated@@112) $generated@@257 ($generated@@109 $generated@@252 $generated@@256))))))))
 :pattern ( ($generated@@109 ($generated@@78 $generated@@252) $generated@@253))
))))
(assert (forall (($generated@@258 T@U) ($generated@@259 T@U) ) (! (= ($generated@@30 ($generated@@47 $generated@@29 $generated@@258) ($generated@@47 $generated@@29 $generated@@259)) ($generated@@47 $generated@@29 ($generated@@30 $generated@@258 $generated@@259)))
 :pattern ( ($generated@@30 ($generated@@47 $generated@@29 $generated@@258) ($generated@@47 $generated@@29 $generated@@259)))
)))
(assert  (=> (<= 2 $generated@@76) (forall (($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (!  (=> (or ($generated@@95 $generated@@261 $generated@@262) (and (< 2 $generated@@76) (and ($generated@@28 $generated@@29 $generated@@261 $generated@@32) ($generated@@28 $generated@@29 $generated@@262 $generated@@31)))) (and (=> (not ($generated@@58 $generated@@262)) (let (($generated@@263 ($generated@@80 $generated@@262)))
(let (($generated@@264 ($generated@@111 $generated@@262)))
 (and (and ($generated@@105 ($generated@@89 ($generated@@78 $generated@@112) $generated@@261 $generated@@264)) ($generated@@90 $generated@@261 $generated@@264)) (=> (not ($generated@@41 ($generated@@89 ($generated@@78 $generated@@112) $generated@@261 $generated@@264) $generated@@37)) ($generated@@95 $generated@@261 $generated@@263)))))) (= ($generated@@94 ($generated@@78 $generated@@260) $generated@@261 $generated@@262) (ite ($generated@@58 $generated@@262) ($generated@@30 $generated@@261 ($generated@@47 $generated@@29 $generated@@39)) (let (($generated@@265 ($generated@@80 $generated@@262)))
(let (($generated@@266 ($generated@@111 $generated@@262)))
(ite ($generated@@41 ($generated@@89 ($generated@@78 $generated@@112) $generated@@261 $generated@@266) $generated@@37) ($generated@@30 $generated@@261 ($generated@@30 $generated@@266 $generated@@265)) ($generated@@30 $generated@@266 ($generated@@94 $generated@@260 $generated@@261 $generated@@265)))))))))
 :pattern ( ($generated@@94 ($generated@@78 $generated@@260) $generated@@261 $generated@@262))
))))
(assert (forall (($generated@@267 T@U) ) (! (= ($generated@@73 ($generated@@47 $generated@@29 $generated@@267)) ($generated@@47 $generated@@29 ($generated@@73 $generated@@267)))
 :pattern ( ($generated@@73 ($generated@@47 $generated@@29 $generated@@267)))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@T) ) (! (= ($generated@@63 $generated@@269 ($generated@@47 $generated@@269 $generated@@268)) ($generated@@47 $generated@@175 ($generated@@63 $generated@@269 $generated@@268)))
 :pattern ( ($generated@@63 $generated@@269 ($generated@@47 $generated@@269 $generated@@268)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@277  (=> (forall (($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@278 $generated@@32) ($generated@@28 $generated@@29 $generated@@279 $generated@@31)) (and ($generated@@107 ($generated@@77 ($generated@@78 $generated@@112) ($generated@@94 ($generated@@78 $generated@@112) $generated@@278 $generated@@279))) (and (and ($generated@@95 $generated@@278 $generated@@279) ($generated@@79 ($generated@@94 ($generated@@78 $generated@@112) $generated@@278 $generated@@279))) ($generated@@79 $generated@@279))))
 :pattern ( ($generated@@94 ($generated@@78 $generated@@112) $generated@@278 $generated@@279))
)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (forall (($generated@@280 T@U) ($generated@@281 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@280 $generated@@32) ($generated@@28 $generated@@29 $generated@@281 $generated@@31)) ($generated@@44 ($generated@@77 ($generated@@78 ($generated@@78 $generated@@112)) ($generated@@94 ($generated@@78 ($generated@@78 $generated@@112)) $generated@@280 $generated@@281)) ($generated@@73 ($generated@@77 ($generated@@78 ($generated@@78 $generated@@112)) $generated@@281))))
 :pattern ( ($generated@@94 ($generated@@78 ($generated@@78 $generated@@112)) $generated@@280 $generated@@281))
))) (=> (and (forall (($generated@@282 T@U) ($generated@@283 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@282 $generated@@32) ($generated@@28 $generated@@29 $generated@@283 $generated@@31)) ($generated@@44 ($generated@@77 ($generated@@78 $generated@@112) ($generated@@94 ($generated@@78 $generated@@112) $generated@@282 $generated@@283)) ($generated@@73 ($generated@@77 ($generated@@78 $generated@@112) $generated@@283))))
 :pattern ( ($generated@@94 ($generated@@78 $generated@@112) $generated@@282 $generated@@283))
)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@284 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@284 $generated@@31) ($generated@@44 ($generated@@77 ($generated@@78 ($generated@@78 $generated@@112)) ($generated@@109 ($generated@@78 ($generated@@78 $generated@@112)) $generated@@284)) ($generated@@77 ($generated@@78 ($generated@@78 $generated@@112)) $generated@@284)))
 :pattern ( ($generated@@109 ($generated@@78 ($generated@@78 $generated@@112)) $generated@@284))
)))))))
(let (($generated@@285  (=> (and (not (and (and ($generated@@28 $generated@@29 $generated@@270 $generated@@32) ($generated@@236 $generated@@29 $generated@@270 $generated@@32 $generated@@271)) (and ($generated@@28 $generated@@29 $generated@@272 $generated@@31) ($generated@@236 $generated@@29 $generated@@272 $generated@@31 $generated@@271)))) (= (ControlFlow 0 5) 2)) $generated@@277)))
(let (($generated@@286  (=> (and (and (and (and ($generated@@28 $generated@@29 $generated@@270 $generated@@32) ($generated@@236 $generated@@29 $generated@@270 $generated@@32 $generated@@271)) (and ($generated@@28 $generated@@29 $generated@@272 $generated@@31) ($generated@@236 $generated@@29 $generated@@272 $generated@@31 $generated@@271))) ($generated@@236 $generated@@29 $generated@@270 $generated@@32 $generated@@271)) (and (and (and ($generated@@236 $generated@@29 $generated@@272 $generated@@31 $generated@@271) ($generated@@95 $generated@@270 $generated@@272)) (and (= $generated@@273 ($generated@@94 ($generated@@78 $generated@@112) $generated@@270 $generated@@272)) ($generated@@236 $generated@@29 $generated@@273 $generated@@31 $generated@@271))) (and (and ($generated@@79 ($generated@@94 ($generated@@78 $generated@@112) $generated@@270 $generated@@272)) ($generated@@236 $generated@@29 $generated@@272 $generated@@31 $generated@@271)) (and ($generated@@79 $generated@@272) (= (ControlFlow 0 4) 2))))) $generated@@277)))
(let (($generated@@287  (=> (= $generated@@274 ($generated@@173 $generated@@275 $generated@@271 $generated false)) (and (=> (= (ControlFlow 0 6) 4) $generated@@286) (=> (= (ControlFlow 0 6) 5) $generated@@285)))))
(let (($generated@@288  (=> (and (and ($generated@@237 $generated@@271) ($generated@@276 $generated@@271)) (and (= 4 $generated@@76) (= (ControlFlow 0 7) 6))) $generated@@287)))
$generated@@288))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
