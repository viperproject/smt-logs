(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 (T@U T@U) T@U)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@U) Bool)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@97 (T@U Int) T@U)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@109 () T@T)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@171 (T@U) Int)
(declare-fun $generated@@179 (T@U) Int)
(declare-fun $generated@@185 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@186 () T@T)
(declare-fun $generated@@187 () T@T)
(declare-fun $generated@@188 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@189 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@190 (T@T T@T) T@T)
(declare-fun $generated@@191 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@192 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@193 (T@T) T@T)
(declare-fun $generated@@194 (T@T) T@T)
(declare-fun $generated@@243 (T@U) T@U)
(declare-fun $generated@@244 (T@U) T@U)
(declare-fun $generated@@278 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@26) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@34) (= ($generated@@25 $generated@@26 ($generated@@27 $generated@@32 $generated@@33) ($generated@@28 $generated@@31) $generated@@34)  (and ($generated@@25 $generated@@26 $generated@@32 ($generated@@30 $generated@@31) $generated@@34) ($generated@@25 $generated@@26 $generated@@33 ($generated@@28 $generated@@31) $generated@@34))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@27 $generated@@32 $generated@@33) ($generated@@28 $generated@@31) $generated@@34))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@35 $generated@@37 ($generated@@36 $generated@@38) $generated@@39) ($generated@@35 $generated@@37 $generated@@38 $generated@@39))
 :pattern ( ($generated@@35 $generated@@37 ($generated@@36 $generated@@38) $generated@@39))
)))
(assert (= ($generated@@40 $generated@@41) 0))
(assert (= ($generated@@42 $generated@@43) $generated@@3))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@29 $generated@@45) ($generated@@25 $generated@@26 $generated@@43 ($generated@@28 $generated@@44) $generated@@45))
 :pattern ( ($generated@@25 $generated@@26 $generated@@43 ($generated@@28 $generated@@44) $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ) (! ($generated@@46 $generated@@26 $generated@@43 ($generated@@28 $generated@@47))
 :pattern ( ($generated@@46 $generated@@26 $generated@@43 ($generated@@28 $generated@@47)))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@T) ) (! (= ($generated@@48 $generated@@50 $generated@@49) $generated@@49)
 :pattern ( ($generated@@48 $generated@@50 $generated@@49))
)))
(assert (= ($generated@@9 $generated@@51) 4))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (and ($generated@@46 $generated@@51 $generated@@55 ($generated@@53 $generated@@57)) ($generated@@54 $generated@@56 $generated@@57)) ($generated@@46 $generated@@51 ($generated@@52 $generated@@55 $generated@@56) ($generated@@53 $generated@@57)))
 :pattern ( ($generated@@46 $generated@@51 ($generated@@52 $generated@@55 $generated@@56) ($generated@@53 $generated@@57)))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@42 $generated@@59) $generated@@3))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@42 $generated@@61) $generated@@4))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! (= ($generated@@62 $generated@@63) (= ($generated@@42 $generated@@63) $generated@@5))
 :pattern ( ($generated@@62 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@64 $generated@@65) (= ($generated@@42 $generated@@65) $generated@@6))
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@66 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@66 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@60 $generated@@70) (exists (($generated@@71 T@U) ($generated@@72 T@U) ) (= $generated@@70 ($generated@@27 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@60 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@46 $generated@@26 ($generated@@27 $generated@@74 $generated@@75) ($generated@@28 $generated@@73))  (and ($generated@@46 $generated@@26 $generated@@74 ($generated@@30 $generated@@73)) ($generated@@46 $generated@@26 $generated@@75 ($generated@@28 $generated@@73))))
 :pattern ( ($generated@@46 $generated@@26 ($generated@@27 $generated@@74 $generated@@75) ($generated@@28 $generated@@73)))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@58 $generated@@76) (= $generated@@76 $generated@@43))
 :pattern ( ($generated@@58 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@62 $generated@@78) (exists (($generated@@79 T@U) ) (= $generated@@78 ($generated@@77 $generated@@79))))
 :pattern ( ($generated@@62 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@64 $generated@@81) (exists (($generated@@82 T@U) ) (= $generated@@81 ($generated@@80 $generated@@82))))
 :pattern ( ($generated@@64 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ) (! (= ($generated@@40 ($generated@@52 $generated@@83 $generated@@84)) (+ 1 ($generated@@40 $generated@@83)))
 :pattern ( ($generated@@52 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@67 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@25 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@67 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@90 ($generated@@28 $generated@@92)) $generated@@1) (= ($generated@@91 ($generated@@28 $generated@@92)) $generated@@7))
 :pattern ( ($generated@@28 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (!  (and (= ($generated@@90 ($generated@@30 $generated@@93)) $generated@@2) (= ($generated@@91 ($generated@@30 $generated@@93)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@40 ($generated@@94 $generated@@95 $generated@@96)) (+ ($generated@@40 $generated@@95) ($generated@@40 $generated@@96)))
 :pattern ( ($generated@@40 ($generated@@94 $generated@@95 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 Int) ($generated@@100 T@U) ) (!  (and (=> (= $generated@@99 ($generated@@40 $generated@@98)) (= ($generated@@97 ($generated@@52 $generated@@98 $generated@@100) $generated@@99) $generated@@100)) (=> (or (not (= $generated@@99 ($generated@@40 $generated@@98))) (not true)) (= ($generated@@97 ($generated@@52 $generated@@98 $generated@@100) $generated@@99) ($generated@@97 $generated@@98 $generated@@99))))
 :pattern ( ($generated@@97 ($generated@@52 $generated@@98 $generated@@100) $generated@@99))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@29 $generated@@103) (= ($generated@@25 $generated@@26 ($generated@@77 $generated@@102) ($generated@@30 $generated@@101) $generated@@103) ($generated@@85 $generated@@102 $generated@@101 $generated@@103)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@77 $generated@@102) ($generated@@30 $generated@@101) $generated@@103))
)))
(assert (= ($generated@@9 $generated@@109) 5))
(assert  (=> (<= 1 $generated@@104) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@105 $generated@@111 ($generated@@48 $generated@@26 $generated@@113)) (and (< 1 $generated@@104) ($generated@@46 $generated@@26 $generated@@113 ($generated@@28 $generated@@111)))) (and (=> (not ($generated@@14 ($generated@@48 $generated@@10 ($generated@@13 ($generated@@58 ($generated@@48 $generated@@26 $generated@@113)))))) (let (($generated@@114 ($generated@@48 $generated@@26 ($generated@@106 ($generated@@48 $generated@@26 $generated@@113)))))
(let (($generated@@115 ($generated@@48 $generated@@26 ($generated@@107 ($generated@@48 $generated@@26 $generated@@113)))))
 (and (=> ($generated@@62 $generated@@115) ($generated@@105 $generated@@111 $generated@@114)) (=> (not ($generated@@62 $generated@@115)) (let (($generated@@116 ($generated@@108 $generated@@115)))
 (and ($generated@@105 $generated@@111 $generated@@116) ($generated@@105 $generated@@111 $generated@@114)))))))) (= ($generated@@35 $generated@@111 ($generated@@36 $generated@@112) ($generated@@48 $generated@@26 $generated@@113)) (ite ($generated@@58 ($generated@@48 $generated@@26 $generated@@113)) $generated@@41 (let (($generated@@117 ($generated@@48 $generated@@26 ($generated@@106 ($generated@@48 $generated@@26 $generated@@113)))))
(let (($generated@@118 ($generated@@48 $generated@@26 ($generated@@107 ($generated@@48 $generated@@26 $generated@@113)))))
(ite ($generated@@62 $generated@@118) (let (($generated@@119 ($generated@@48 $generated@@109 ($generated@@110 $generated@@118))))
($generated@@94 ($generated@@52 $generated@@41 $generated@@119) ($generated@@35 $generated@@111 ($generated@@36 $generated@@112) $generated@@117))) (let (($generated@@120 ($generated@@48 $generated@@26 ($generated@@108 $generated@@118))))
($generated@@94 ($generated@@35 $generated@@111 ($generated@@36 $generated@@112) $generated@@120) ($generated@@35 $generated@@111 ($generated@@36 $generated@@112) $generated@@117))))))))))
 :weight 3
 :pattern ( ($generated@@35 $generated@@111 ($generated@@36 $generated@@112) ($generated@@48 $generated@@26 $generated@@113)))
))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> ($generated@@29 $generated@@123) (= ($generated@@25 $generated@@26 ($generated@@80 $generated@@122) ($generated@@30 $generated@@121) $generated@@123) ($generated@@25 $generated@@26 $generated@@122 ($generated@@28 $generated@@121) $generated@@123)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@80 $generated@@122) ($generated@@30 $generated@@121) $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> ($generated@@46 $generated@@26 $generated@@125 ($generated@@28 $generated@@124)) (or ($generated@@58 $generated@@125) ($generated@@60 $generated@@125)))
 :pattern ( ($generated@@60 $generated@@125) ($generated@@46 $generated@@26 $generated@@125 ($generated@@28 $generated@@124)))
 :pattern ( ($generated@@58 $generated@@125) ($generated@@46 $generated@@26 $generated@@125 ($generated@@28 $generated@@124)))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> ($generated@@46 $generated@@26 $generated@@127 ($generated@@30 $generated@@126)) (or ($generated@@62 $generated@@127) ($generated@@64 $generated@@127)))
 :pattern ( ($generated@@64 $generated@@127) ($generated@@46 $generated@@26 $generated@@127 ($generated@@30 $generated@@126)))
 :pattern ( ($generated@@62 $generated@@127) ($generated@@46 $generated@@26 $generated@@127 ($generated@@30 $generated@@126)))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@54 ($generated@@67 $generated@@130 $generated@@128) $generated@@129) ($generated@@46 $generated@@130 $generated@@128 $generated@@129))
 :pattern ( ($generated@@54 ($generated@@67 $generated@@130 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (<= 0 ($generated@@40 $generated@@131))
 :pattern ( ($generated@@40 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@42 ($generated@@27 $generated@@132 $generated@@133)) $generated@@4)
 :pattern ( ($generated@@27 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@107 ($generated@@27 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@27 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@106 ($generated@@27 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@27 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@25 $generated@@51 $generated@@138 ($generated@@53 $generated@@139) $generated@@140) (forall (($generated@@141 Int) ) (!  (=> (and (<= 0 $generated@@141) (< $generated@@141 ($generated@@40 $generated@@138))) ($generated@@85 ($generated@@97 $generated@@138 $generated@@141) $generated@@139 $generated@@140))
 :pattern ( ($generated@@97 $generated@@138 $generated@@141))
)))
 :pattern ( ($generated@@25 $generated@@51 $generated@@138 ($generated@@53 $generated@@139) $generated@@140))
)))
(assert  (=> (<= 1 $generated@@104) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (and (or ($generated@@105 $generated@@143 $generated@@145) (and (< 1 $generated@@104) (and ($generated@@46 $generated@@26 $generated@@145 ($generated@@28 $generated@@143)) ($generated@@25 $generated@@26 $generated@@145 ($generated@@28 $generated@@143) $generated@@142)))) ($generated@@29 $generated@@142)) ($generated@@25 $generated@@51 ($generated@@35 $generated@@143 $generated@@144 $generated@@145) ($generated@@53 $generated@@143) $generated@@142))
 :pattern ( ($generated@@25 $generated@@51 ($generated@@35 $generated@@143 $generated@@144 $generated@@145) ($generated@@53 $generated@@143) $generated@@142))
))))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@53 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@53 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@90 ($generated@@53 $generated@@148)) $generated)
 :pattern ( ($generated@@53 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@28 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@28 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@30 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@30 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@42 ($generated@@77 $generated@@153)) $generated@@5)
 :pattern ( ($generated@@77 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@110 ($generated@@77 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@77 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@42 ($generated@@80 $generated@@155)) $generated@@6)
 :pattern ( ($generated@@80 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@108 ($generated@@80 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@80 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@66 $generated@@158 ($generated@@67 $generated@@158 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@67 $generated@@158 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@46 $generated@@26 ($generated@@77 $generated@@160) ($generated@@30 $generated@@159)) ($generated@@54 $generated@@160 $generated@@159))
 :pattern ( ($generated@@46 $generated@@26 ($generated@@77 $generated@@160) ($generated@@30 $generated@@159)))
)))
(assert  (=> (<= 1 $generated@@104) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or ($generated@@105 $generated@@161 $generated@@163) (and (< 1 $generated@@104) ($generated@@46 $generated@@26 $generated@@163 ($generated@@28 $generated@@161)))) (and (=> (not ($generated@@58 $generated@@163)) (let (($generated@@164 ($generated@@106 $generated@@163)))
(let (($generated@@165 ($generated@@107 $generated@@163)))
 (and (=> ($generated@@62 $generated@@165) ($generated@@105 $generated@@161 $generated@@164)) (=> (not ($generated@@62 $generated@@165)) (let (($generated@@166 ($generated@@108 $generated@@165)))
 (and ($generated@@105 $generated@@161 $generated@@166) ($generated@@105 $generated@@161 $generated@@164)))))))) (= ($generated@@35 $generated@@161 ($generated@@36 $generated@@162) $generated@@163) (ite ($generated@@58 $generated@@163) $generated@@41 (let (($generated@@167 ($generated@@106 $generated@@163)))
(let (($generated@@168 ($generated@@107 $generated@@163)))
(ite ($generated@@62 $generated@@168) (let (($generated@@169 ($generated@@110 $generated@@168)))
($generated@@94 ($generated@@52 $generated@@41 $generated@@169) ($generated@@35 $generated@@161 $generated@@162 $generated@@167))) (let (($generated@@170 ($generated@@108 $generated@@168)))
($generated@@94 ($generated@@35 $generated@@161 $generated@@162 $generated@@170) ($generated@@35 $generated@@161 $generated@@162 $generated@@167))))))))))
 :pattern ( ($generated@@35 $generated@@161 ($generated@@36 $generated@@162) $generated@@163))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (! (< ($generated@@171 $generated@@172) ($generated@@171 ($generated@@27 $generated@@172 $generated@@173)))
 :pattern ( ($generated@@27 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (< ($generated@@171 $generated@@175) ($generated@@171 ($generated@@27 $generated@@174 $generated@@175)))
 :pattern ( ($generated@@27 $generated@@174 $generated@@175))
)))
(assert  (=> (<= 1 $generated@@104) (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (or ($generated@@105 $generated@@176 $generated@@178) (and (< 1 $generated@@104) ($generated@@46 $generated@@26 $generated@@178 ($generated@@28 $generated@@176)))) ($generated@@46 $generated@@51 ($generated@@35 $generated@@176 $generated@@177 $generated@@178) ($generated@@53 $generated@@176)))
 :pattern ( ($generated@@35 $generated@@176 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@180 T@U) ) (! (< ($generated@@179 $generated@@180) ($generated@@171 ($generated@@77 $generated@@180)))
 :pattern ( ($generated@@77 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ) (! (< ($generated@@171 $generated@@181) ($generated@@171 ($generated@@80 $generated@@181)))
 :pattern ( ($generated@@80 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@29 $generated@@184) (and ($generated@@62 $generated@@182) ($generated@@25 $generated@@26 $generated@@182 ($generated@@30 $generated@@183) $generated@@184))) ($generated@@85 ($generated@@110 $generated@@182) $generated@@183 $generated@@184))
 :pattern ( ($generated@@85 ($generated@@110 $generated@@182) $generated@@183 $generated@@184))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@T) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@185 $generated@@195 $generated@@196 $generated@@197 ($generated@@191 $generated@@195 $generated@@196 $generated@@197 $generated@@199 $generated@@200 $generated@@201 $generated@@198) $generated@@200 $generated@@201) $generated@@198)
 :weight 0
)) (and (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@T) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@207 $generated@@209) (= ($generated@@185 $generated@@202 $generated@@203 $generated@@204 ($generated@@191 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@207 $generated@@208 $generated@@205) $generated@@209 $generated@@210) ($generated@@185 $generated@@202 $generated@@203 $generated@@204 $generated@@206 $generated@@209 $generated@@210)))
 :weight 0
)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@T) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (or (= $generated@@217 $generated@@219) (= ($generated@@185 $generated@@211 $generated@@212 $generated@@213 ($generated@@191 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@216 $generated@@217 $generated@@214) $generated@@218 $generated@@219) ($generated@@185 $generated@@211 $generated@@212 $generated@@213 $generated@@215 $generated@@218 $generated@@219)))
 :weight 0
)))) (= ($generated@@9 $generated@@186) 6)) (= ($generated@@9 $generated@@187) 7)) (forall (($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@189 $generated@@220 $generated@@221 ($generated@@192 $generated@@220 $generated@@221 $generated@@223 $generated@@224 $generated@@222) $generated@@224) $generated@@222)
 :weight 0
))) (forall (($generated@@225 T@T) ($generated@@226 T@T) ($generated@@227 T@U) ($generated@@228 T@U) ($generated@@229 T@U) ($generated@@230 T@U) ) (!  (or (= $generated@@229 $generated@@230) (= ($generated@@189 $generated@@225 $generated@@226 ($generated@@192 $generated@@225 $generated@@226 $generated@@228 $generated@@229 $generated@@227) $generated@@230) ($generated@@189 $generated@@225 $generated@@226 $generated@@228 $generated@@230)))
 :weight 0
))) (forall (($generated@@231 T@T) ($generated@@232 T@T) ) (= ($generated@@9 ($generated@@190 $generated@@231 $generated@@232)) 8))) (forall (($generated@@233 T@T) ($generated@@234 T@T) ) (! (= ($generated@@193 ($generated@@190 $generated@@233 $generated@@234)) $generated@@233)
 :pattern ( ($generated@@190 $generated@@233 $generated@@234))
))) (forall (($generated@@235 T@T) ($generated@@236 T@T) ) (! (= ($generated@@194 ($generated@@190 $generated@@235 $generated@@236)) $generated@@236)
 :pattern ( ($generated@@190 $generated@@235 $generated@@236))
))))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Bool) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@14 ($generated@@185 $generated@@186 $generated@@187 $generated@@10 ($generated@@188 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))  (=> (and (or (not (= $generated@@241 $generated@@237)) (not true)) ($generated@@14 ($generated@@66 $generated@@10 ($generated@@189 $generated@@187 $generated@@109 ($generated@@189 $generated@@186 ($generated@@190 $generated@@187 $generated@@109) $generated@@238 $generated@@241) $generated@@239)))) $generated@@240))
 :pattern ( ($generated@@185 $generated@@186 $generated@@187 $generated@@10 ($generated@@188 $generated@@237 $generated@@238 $generated@@239 $generated@@240) $generated@@241 $generated@@242))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@U) ) (!  (and (= ($generated@@243 ($generated@@52 $generated@@245 $generated@@246)) $generated@@245) (= ($generated@@244 ($generated@@52 $generated@@245 $generated@@246)) $generated@@246))
 :pattern ( ($generated@@52 $generated@@245 $generated@@246))
)))
(assert (forall (($generated@@247 T@U) ) (! (= ($generated@@179 ($generated@@67 $generated@@26 $generated@@247)) ($generated@@171 $generated@@247))
 :pattern ( ($generated@@179 ($generated@@67 $generated@@26 $generated@@247)))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> ($generated@@54 $generated@@248 ($generated@@53 $generated@@249)) (and (= ($generated@@67 $generated@@51 ($generated@@66 $generated@@51 $generated@@248)) $generated@@248) ($generated@@46 $generated@@51 ($generated@@66 $generated@@51 $generated@@248) ($generated@@53 $generated@@249))))
 :pattern ( ($generated@@54 $generated@@248 ($generated@@53 $generated@@249)))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (!  (=> ($generated@@54 $generated@@251 ($generated@@28 $generated@@250)) (and (= ($generated@@67 $generated@@26 ($generated@@66 $generated@@26 $generated@@251)) $generated@@251) ($generated@@46 $generated@@26 ($generated@@66 $generated@@26 $generated@@251) ($generated@@28 $generated@@250))))
 :pattern ( ($generated@@54 $generated@@251 ($generated@@28 $generated@@250)))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> ($generated@@54 $generated@@253 ($generated@@30 $generated@@252)) (and (= ($generated@@67 $generated@@26 ($generated@@66 $generated@@26 $generated@@253)) $generated@@253) ($generated@@46 $generated@@26 ($generated@@66 $generated@@26 $generated@@253) ($generated@@30 $generated@@252))))
 :pattern ( ($generated@@54 $generated@@253 ($generated@@30 $generated@@252)))
)))
(assert (forall (($generated@@254 T@U) ($generated@@255 T@U) ) (! (= ($generated@@46 $generated@@26 ($generated@@80 $generated@@255) ($generated@@30 $generated@@254)) ($generated@@46 $generated@@26 $generated@@255 ($generated@@28 $generated@@254)))
 :pattern ( ($generated@@46 $generated@@26 ($generated@@80 $generated@@255) ($generated@@30 $generated@@254)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ) (!  (=> (and ($generated@@29 $generated@@258) (and ($generated@@60 $generated@@256) ($generated@@25 $generated@@26 $generated@@256 ($generated@@28 $generated@@257) $generated@@258))) ($generated@@25 $generated@@26 ($generated@@107 $generated@@256) ($generated@@30 $generated@@257) $generated@@258))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@107 $generated@@256) ($generated@@30 $generated@@257) $generated@@258))
)))
(assert (forall (($generated@@259 T@U) ($generated@@260 T@U) ($generated@@261 T@U) ) (!  (=> (and ($generated@@29 $generated@@261) (and ($generated@@60 $generated@@259) ($generated@@25 $generated@@26 $generated@@259 ($generated@@28 $generated@@260) $generated@@261))) ($generated@@25 $generated@@26 ($generated@@106 $generated@@259) ($generated@@28 $generated@@260) $generated@@261))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@106 $generated@@259) ($generated@@28 $generated@@260) $generated@@261))
)))
(assert (forall (($generated@@262 T@U) ($generated@@263 T@U) ($generated@@264 T@U) ) (!  (=> (and ($generated@@29 $generated@@264) (and ($generated@@64 $generated@@262) ($generated@@25 $generated@@26 $generated@@262 ($generated@@30 $generated@@263) $generated@@264))) ($generated@@25 $generated@@26 ($generated@@108 $generated@@262) ($generated@@28 $generated@@263) $generated@@264))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@108 $generated@@262) ($generated@@28 $generated@@263) $generated@@264))
)))
(assert (= $generated@@43 ($generated@@48 $generated@@26 $generated@@43)))
(assert (forall (($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 Int) ) (!  (and (=> (< $generated@@267 ($generated@@40 $generated@@265)) (= ($generated@@97 ($generated@@94 $generated@@265 $generated@@266) $generated@@267) ($generated@@97 $generated@@265 $generated@@267))) (=> (<= ($generated@@40 $generated@@265) $generated@@267) (= ($generated@@97 ($generated@@94 $generated@@265 $generated@@266) $generated@@267) ($generated@@97 $generated@@266 (- $generated@@267 ($generated@@40 $generated@@265))))))
 :pattern ( ($generated@@97 ($generated@@94 $generated@@265 $generated@@266) $generated@@267))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! (= ($generated@@27 ($generated@@48 $generated@@26 $generated@@268) ($generated@@48 $generated@@26 $generated@@269)) ($generated@@48 $generated@@26 ($generated@@27 $generated@@268 $generated@@269)))
 :pattern ( ($generated@@27 ($generated@@48 $generated@@26 $generated@@268) ($generated@@48 $generated@@26 $generated@@269)))
)))
(assert (forall (($generated@@270 T@U) ) (! (= ($generated@@77 ($generated@@48 $generated@@109 $generated@@270)) ($generated@@48 $generated@@26 ($generated@@77 $generated@@270)))
 :pattern ( ($generated@@77 ($generated@@48 $generated@@109 $generated@@270)))
)))
(assert (forall (($generated@@271 T@U) ) (! (= ($generated@@80 ($generated@@48 $generated@@26 $generated@@271)) ($generated@@48 $generated@@26 ($generated@@80 $generated@@271)))
 :pattern ( ($generated@@80 ($generated@@48 $generated@@26 $generated@@271)))
)))
(assert (forall (($generated@@272 T@U) ($generated@@273 T@T) ) (! (= ($generated@@67 $generated@@273 ($generated@@48 $generated@@273 $generated@@272)) ($generated@@48 $generated@@109 ($generated@@67 $generated@@273 $generated@@272)))
 :pattern ( ($generated@@67 $generated@@273 ($generated@@48 $generated@@273 $generated@@272)))
)))
(assert (forall (($generated@@274 T@U) ) (!  (=> (= ($generated@@40 $generated@@274) 0) (= $generated@@274 $generated@@41))
 :pattern ( ($generated@@40 $generated@@274))
)))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ) (! (= ($generated@@46 $generated@@51 $generated@@275 ($generated@@53 $generated@@276)) (forall (($generated@@277 Int) ) (!  (=> (and (<= 0 $generated@@277) (< $generated@@277 ($generated@@40 $generated@@275))) ($generated@@54 ($generated@@97 $generated@@275 $generated@@277) $generated@@276))
 :pattern ( ($generated@@97 $generated@@275 $generated@@277))
)))
 :pattern ( ($generated@@46 $generated@@51 $generated@@275 ($generated@@53 $generated@@276)))
)))
(assert (forall (($generated@@279 T@U) ($generated@@280 Int) ) (!  (=> (and (<= 0 $generated@@280) (< $generated@@280 ($generated@@40 $generated@@279))) (< ($generated@@171 ($generated@@66 $generated@@26 ($generated@@97 $generated@@279 $generated@@280))) ($generated@@278 $generated@@279)))
 :pattern ( ($generated@@171 ($generated@@66 $generated@@26 ($generated@@97 $generated@@279 $generated@@280))))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 () T@U)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () T@U)
(declare-fun $generated@@288 () T@U)
(declare-fun $generated@@289 () T@U)
(declare-fun $generated@@290 () T@U)
(declare-fun $generated@@291 () T@U)
(declare-fun $generated@@292 () T@U)
(declare-fun $generated@@293 () T@U)
(declare-fun $generated@@294 () T@U)
(declare-fun $generated@@295 () T@U)
(declare-fun $generated@@296 () T@U)
(declare-fun $generated@@297 () T@U)
(declare-fun $generated@@298 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@299 true))
(let (($generated@@300  (=> (and (= $generated@@281 ($generated@@80 $generated@@282)) ($generated@@46 $generated@@26 $generated@@282 ($generated@@28 $generated@@283))) (=> (and (and (= $generated@@284 $generated@@282) ($generated@@46 $generated@@26 $generated@@284 ($generated@@28 $generated@@283))) (and (= $generated@@285 $generated@@284) ($generated@@25 $generated@@26 $generated@@285 ($generated@@28 $generated@@283) $generated@@286))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (< ($generated@@171 $generated@@285) ($generated@@171 $generated@@287))) (=> (< ($generated@@171 $generated@@285) ($generated@@171 $generated@@287)) (=> ($generated@@105 $generated@@283 $generated@@285) (=> (and ($generated@@25 $generated@@26 $generated@@288 ($generated@@28 $generated@@283) $generated@@286) (= (ControlFlow 0 7) (- 0 6))) (< ($generated@@171 $generated@@288) ($generated@@171 $generated@@287))))))))))
(let (($generated@@301  (=> (or (not (= $generated@@281 ($generated@@77 $generated@@289))) (not true)) (and (=> (= (ControlFlow 0 10) 7) $generated@@300) (=> (= (ControlFlow 0 10) 9) $generated@@299)))))
(let (($generated@@302  (=> (= $generated@@281 ($generated@@77 $generated@@289)) (=> (and ($generated@@54 $generated@@289 $generated@@283) (= $generated@@290 $generated@@289)) (=> (and (and ($generated@@54 $generated@@290 $generated@@283) (= $generated@@291 $generated@@290)) (and ($generated@@25 $generated@@26 $generated@@288 ($generated@@28 $generated@@283) $generated@@286) (= (ControlFlow 0 5) (- 0 4)))) (< ($generated@@171 $generated@@288) ($generated@@171 $generated@@287)))))))
(let (($generated@@303  (=> (= $generated@@287 ($generated@@27 $generated@@292 $generated@@293)) (=> (and (and (and ($generated@@46 $generated@@26 $generated@@292 ($generated@@30 $generated@@283)) ($generated@@46 $generated@@26 $generated@@293 ($generated@@28 $generated@@283))) (and (= $generated@@294 $generated@@293) ($generated@@46 $generated@@26 $generated@@294 ($generated@@28 $generated@@283)))) (and (and (= $generated@@288 $generated@@294) (= $generated@@295 $generated@@292)) (and ($generated@@46 $generated@@26 $generated@@295 ($generated@@30 $generated@@283)) (= $generated@@281 $generated@@295)))) (and (=> (= (ControlFlow 0 11) 5) $generated@@302) (=> (= (ControlFlow 0 11) 10) $generated@@301))))))
(let (($generated@@304 true))
(let (($generated@@305  (=> (or (not (= $generated@@287 $generated@@43)) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@303) (=> (= (ControlFlow 0 12) 3) $generated@@304)))))
(let (($generated@@306 true))
(let (($generated@@307 true))
(let (($generated@@308  (=> (= $generated@@296 ($generated@@188 $generated@@297 $generated@@286 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@307) (=> (= (ControlFlow 0 13) 2) $generated@@306)) (=> (= (ControlFlow 0 13) 12) $generated@@305)))))
(let (($generated@@309  (=> (and (and (and ($generated@@29 $generated@@286) ($generated@@298 $generated@@286)) ($generated@@46 $generated@@26 $generated@@287 ($generated@@28 $generated@@283))) (and (= 1 $generated@@104) (= (ControlFlow 0 14) 13))) $generated@@308)))
$generated@@309))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
