(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@58 () Int)
(declare-fun $generated@@59 (T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@79 (T@U) T@U)
(declare-fun $generated@@83 (T@U) Int)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@90 () T@T)
(declare-fun $generated@@91 () T@T)
(declare-fun $generated@@92 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@93 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@94 () T@T)
(declare-fun $generated@@95 (T@T T@T) T@T)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@98 (T@T) T@T)
(declare-fun $generated@@99 (T@T) T@T)
(declare-fun $generated@@148 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@154 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30) $generated@@27)  (and ($generated@@24 $generated@@25 $generated@@29 $generated@@28) ($generated@@24 $generated@@25 $generated@@30 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30) $generated@@27))
)))
(assert (= ($generated@@31 $generated@@32) $generated@@2))
(assert (= ($generated@@31 $generated@@33) $generated@@4))
(assert ($generated@@24 $generated@@25 $generated@@32 $generated@@28))
(assert ($generated@@24 $generated@@25 $generated@@33 $generated@@27))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@T) ) (! (= ($generated@@34 $generated@@36 $generated@@35) $generated@@35)
 :pattern ( ($generated@@34 $generated@@36 $generated@@35))
)))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@37 $generated@@38) (= ($generated@@31 $generated@@38) $generated@@2))
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@39 $generated@@40) (= ($generated@@31 $generated@@40) $generated@@3))
 :pattern ( ($generated@@39 $generated@@40))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@41 $generated@@42) (= ($generated@@31 $generated@@42) $generated@@4))
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@43 $generated@@44) (= ($generated@@31 $generated@@44) $generated@@5))
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@T) ) (! (= ($generated@@46 $generated@@48 ($generated@@45 $generated@@48 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@45 $generated@@48 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ) (!  (=> ($generated@@43 $generated@@49) (exists (($generated@@50 T@U) ($generated@@51 T@U) ) (= $generated@@49 ($generated@@26 $generated@@50 $generated@@51))))
 :pattern ( ($generated@@43 $generated@@49))
)))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@37 $generated@@52) (= $generated@@52 $generated@@32))
 :pattern ( ($generated@@37 $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@41 $generated@@53) (= $generated@@53 $generated@@33))
 :pattern ( ($generated@@41 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@39 $generated@@55) (exists (($generated@@56 T@U) ) (= $generated@@55 ($generated@@54 $generated@@56))))
 :pattern ( ($generated@@39 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@54 $generated@@57) $generated@@28) ($generated@@24 $generated@@25 $generated@@57 $generated@@28))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@54 $generated@@57) $generated@@28))
)))
(assert  (=> (<= 2 $generated@@58) (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@60 $generated@@62 $generated@@63) (and (< 2 $generated@@58) (and ($generated@@24 $generated@@25 $generated@@62 $generated@@28) ($generated@@24 $generated@@25 $generated@@63 $generated@@27)))) ($generated@@24 $generated@@25 ($generated@@59 $generated@@61 $generated@@62 $generated@@63) $generated@@27))
 :pattern ( ($generated@@59 $generated@@61 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@59 ($generated@@64 $generated@@65) $generated@@66 $generated@@67) ($generated@@59 $generated@@65 $generated@@66 $generated@@67))
 :pattern ( ($generated@@59 ($generated@@64 $generated@@65) $generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@68 $generated@@28) (or ($generated@@37 $generated@@68) ($generated@@39 $generated@@68)))
 :pattern ( ($generated@@39 $generated@@68) ($generated@@24 $generated@@25 $generated@@68 $generated@@28))
 :pattern ( ($generated@@37 $generated@@68) ($generated@@24 $generated@@25 $generated@@68 $generated@@28))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@69 $generated@@27) (or ($generated@@41 $generated@@69) ($generated@@43 $generated@@69)))
 :pattern ( ($generated@@43 $generated@@69) ($generated@@24 $generated@@25 $generated@@69 $generated@@27))
 :pattern ( ($generated@@41 $generated@@69) ($generated@@24 $generated@@25 $generated@@69 $generated@@27))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@31 ($generated@@26 $generated@@70 $generated@@71)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@72 ($generated@@26 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@26 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@26 $generated@@76 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@26 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@31 ($generated@@54 $generated@@78)) $generated@@3)
 :pattern ( ($generated@@54 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@79 ($generated@@54 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@54 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@45 $generated@@82 ($generated@@46 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@46 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (< ($generated@@83 $generated@@84) ($generated@@83 ($generated@@26 $generated@@84 $generated@@85)))
 :pattern ( ($generated@@26 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (< ($generated@@83 $generated@@87) ($generated@@83 ($generated@@26 $generated@@86 $generated@@87)))
 :pattern ( ($generated@@26 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ) (! (< ($generated@@83 $generated@@88) ($generated@@83 ($generated@@54 $generated@@88)))
 :pattern ( ($generated@@54 $generated@@88))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@T) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@89 $generated@@100 $generated@@101 $generated@@102 ($generated@@96 $generated@@100 $generated@@101 $generated@@102 $generated@@104 $generated@@105 $generated@@106 $generated@@103) $generated@@105 $generated@@106) $generated@@103)
 :weight 0
)) (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@89 $generated@@107 $generated@@108 $generated@@109 ($generated@@96 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@114 $generated@@115) ($generated@@89 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@114 $generated@@115)))
 :weight 0
)) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@89 $generated@@116 $generated@@117 $generated@@118 ($generated@@96 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@89 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)))) (= ($generated@@8 $generated@@90) 4)) (= ($generated@@8 $generated@@91) 5)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@93 $generated@@125 $generated@@126 ($generated@@97 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@127) $generated@@129) $generated@@127)
 :weight 0
))) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@134 $generated@@135) (= ($generated@@93 $generated@@130 $generated@@131 ($generated@@97 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@132) $generated@@135) ($generated@@93 $generated@@130 $generated@@131 $generated@@133 $generated@@135)))
 :weight 0
))) (= ($generated@@8 $generated@@94) 6)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (= ($generated@@8 ($generated@@95 $generated@@136 $generated@@137)) 7))) (forall (($generated@@138 T@T) ($generated@@139 T@T) ) (! (= ($generated@@98 ($generated@@95 $generated@@138 $generated@@139)) $generated@@138)
 :pattern ( ($generated@@95 $generated@@138 $generated@@139))
))) (forall (($generated@@140 T@T) ($generated@@141 T@T) ) (! (= ($generated@@99 ($generated@@95 $generated@@140 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@95 $generated@@140 $generated@@141))
))))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Bool) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@13 ($generated@@89 $generated@@90 $generated@@91 $generated@@9 ($generated@@92 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))  (=> (and (or (not (= $generated@@146 $generated@@142)) (not true)) ($generated@@13 ($generated@@45 $generated@@9 ($generated@@93 $generated@@91 $generated@@94 ($generated@@93 $generated@@90 ($generated@@95 $generated@@91 $generated@@94) $generated@@143 $generated@@146) $generated@@144)))) $generated@@145))
 :pattern ( ($generated@@89 $generated@@90 $generated@@91 $generated@@9 ($generated@@92 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@149 $generated@@151) ($generated@@24 $generated@@25 $generated@@150 $generated@@28)) ($generated@@148 $generated@@25 $generated@@150 $generated@@28 $generated@@151))
 :pattern ( ($generated@@148 $generated@@25 $generated@@150 $generated@@28 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and ($generated@@149 $generated@@153) ($generated@@24 $generated@@25 $generated@@152 $generated@@27)) ($generated@@148 $generated@@25 $generated@@152 $generated@@27 $generated@@153))
 :pattern ( ($generated@@148 $generated@@25 $generated@@152 $generated@@27 $generated@@153))
)))
(assert (= ($generated@@154 $generated@@28) $generated@@0))
(assert (= ($generated@@155 $generated@@28) $generated@@6))
(assert (= ($generated@@154 $generated@@27) $generated@@1))
(assert (= ($generated@@155 $generated@@27) $generated@@7))
(assert (= $generated@@32 ($generated@@34 $generated@@25 $generated@@32)))
(assert (= $generated@@33 ($generated@@34 $generated@@25 $generated@@33)))
(assert  (=> (<= 2 $generated@@58) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> (or ($generated@@60 $generated@@157 $generated@@158) (and (< 2 $generated@@58) (and ($generated@@24 $generated@@25 $generated@@157 $generated@@28) ($generated@@24 $generated@@25 $generated@@158 $generated@@27)))) (and (=> (not ($generated@@37 $generated@@157)) (let (($generated@@159 ($generated@@79 $generated@@157)))
 (=> (not ($generated@@41 $generated@@158)) (let (($generated@@160 ($generated@@75 $generated@@158)))
($generated@@60 $generated@@159 $generated@@160))))) (= ($generated@@59 ($generated@@64 $generated@@156) $generated@@157 $generated@@158) (ite ($generated@@37 $generated@@157) $generated@@33 (let (($generated@@161 ($generated@@79 $generated@@157)))
(ite ($generated@@41 $generated@@158) $generated@@33 (let (($generated@@162 ($generated@@75 $generated@@158)))
(let (($generated@@163 ($generated@@72 $generated@@158)))
($generated@@26 $generated@@163 ($generated@@59 $generated@@156 $generated@@161 $generated@@162))))))))))
 :pattern ( ($generated@@59 ($generated@@64 $generated@@156) $generated@@157 $generated@@158))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@149 $generated@@165) (and ($generated@@39 $generated@@164) ($generated@@148 $generated@@25 $generated@@164 $generated@@28 $generated@@165))) ($generated@@148 $generated@@25 ($generated@@79 $generated@@164) $generated@@28 $generated@@165))
 :pattern ( ($generated@@148 $generated@@25 ($generated@@79 $generated@@164) $generated@@28 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@149 $generated@@167) (and ($generated@@43 $generated@@166) ($generated@@148 $generated@@25 $generated@@166 $generated@@27 $generated@@167))) ($generated@@148 $generated@@25 ($generated@@72 $generated@@166) $generated@@28 $generated@@167))
 :pattern ( ($generated@@148 $generated@@25 ($generated@@72 $generated@@166) $generated@@28 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@149 $generated@@169) (and ($generated@@43 $generated@@168) ($generated@@148 $generated@@25 $generated@@168 $generated@@27 $generated@@169))) ($generated@@148 $generated@@25 ($generated@@75 $generated@@168) $generated@@27 $generated@@169))
 :pattern ( ($generated@@148 $generated@@25 ($generated@@75 $generated@@168) $generated@@27 $generated@@169))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@26 ($generated@@34 $generated@@25 $generated@@170) ($generated@@34 $generated@@25 $generated@@171)) ($generated@@34 $generated@@25 ($generated@@26 $generated@@170 $generated@@171)))
 :pattern ( ($generated@@26 ($generated@@34 $generated@@25 $generated@@170) ($generated@@34 $generated@@25 $generated@@171)))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@54 ($generated@@34 $generated@@25 $generated@@172)) ($generated@@34 $generated@@25 ($generated@@54 $generated@@172)))
 :pattern ( ($generated@@54 ($generated@@34 $generated@@25 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@46 $generated@@174 ($generated@@34 $generated@@174 $generated@@173)) ($generated@@34 $generated@@94 ($generated@@46 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@46 $generated@@174 ($generated@@34 $generated@@174 $generated@@173)))
)))
(assert  (=> (<= 2 $generated@@58) (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> (or ($generated@@60 ($generated@@34 $generated@@25 $generated@@176) ($generated@@34 $generated@@25 $generated@@177)) (and (< 2 $generated@@58) (and ($generated@@24 $generated@@25 $generated@@176 $generated@@28) ($generated@@24 $generated@@25 $generated@@177 $generated@@27)))) (and (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@37 ($generated@@34 $generated@@25 $generated@@176)))))) (let (($generated@@178 ($generated@@34 $generated@@25 ($generated@@79 ($generated@@34 $generated@@25 $generated@@176)))))
 (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@41 ($generated@@34 $generated@@25 $generated@@177)))))) (let (($generated@@179 ($generated@@34 $generated@@25 ($generated@@75 ($generated@@34 $generated@@25 $generated@@177)))))
($generated@@60 $generated@@178 $generated@@179))))) (= ($generated@@59 ($generated@@64 $generated@@175) ($generated@@34 $generated@@25 $generated@@176) ($generated@@34 $generated@@25 $generated@@177)) (ite ($generated@@37 ($generated@@34 $generated@@25 $generated@@176)) $generated@@33 (let (($generated@@180 ($generated@@34 $generated@@25 ($generated@@79 ($generated@@34 $generated@@25 $generated@@176)))))
(ite ($generated@@41 ($generated@@34 $generated@@25 $generated@@177)) $generated@@33 (let (($generated@@181 ($generated@@34 $generated@@25 ($generated@@75 ($generated@@34 $generated@@25 $generated@@177)))))
(let (($generated@@182 ($generated@@34 $generated@@25 ($generated@@72 ($generated@@34 $generated@@25 $generated@@177)))))
($generated@@34 $generated@@25 ($generated@@26 $generated@@182 ($generated@@34 $generated@@25 ($generated@@59 ($generated@@64 $generated@@175) $generated@@180 $generated@@181))))))))))))
 :weight 3
 :pattern ( ($generated@@59 ($generated@@64 $generated@@175) ($generated@@34 $generated@@25 $generated@@176) ($generated@@34 $generated@@25 $generated@@177)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@198 true))
(let (($generated@@199  (=> (and (and (= $generated@@183 ($generated@@26 $generated@@184 $generated@@185)) ($generated@@24 $generated@@25 $generated@@184 $generated@@28)) (and ($generated@@24 $generated@@25 $generated@@185 $generated@@27) (= $generated@@186 $generated@@185))) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@186 $generated@@27) (= $generated@@187 $generated@@186)) (and (= $generated@@188 $generated@@184) ($generated@@24 $generated@@25 $generated@@188 $generated@@28))) (and (and (= $generated@@189 $generated@@188) ($generated@@148 $generated@@25 $generated@@190 $generated@@28 $generated@@191)) (and ($generated@@148 $generated@@25 $generated@@187 $generated@@27 $generated@@191) (= (ControlFlow 0 6) (- 0 5))))) (or (< ($generated@@83 $generated@@190) ($generated@@83 $generated@@192)) (and (= ($generated@@83 $generated@@190) ($generated@@83 $generated@@192)) (< ($generated@@83 $generated@@187) ($generated@@83 $generated@@183))))))))
(let (($generated@@200  (=> (or (not (= $generated@@183 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@199) (=> (= (ControlFlow 0 8) 7) $generated@@198)))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (= $generated@@192 ($generated@@54 $generated@@193)) (=> (and (and ($generated@@24 $generated@@25 $generated@@193 $generated@@28) (= $generated@@194 $generated@@193)) (and ($generated@@24 $generated@@25 $generated@@194 $generated@@28) (= $generated@@190 $generated@@194))) (and (=> (= (ControlFlow 0 9) 4) $generated@@201) (=> (= (ControlFlow 0 9) 8) $generated@@200))))))
(let (($generated@@203 true))
(let (($generated@@204  (=> (or (not (= $generated@@192 $generated@@32)) (not true)) (and (=> (= (ControlFlow 0 10) 9) $generated@@202) (=> (= (ControlFlow 0 10) 3) $generated@@203)))))
(let (($generated@@205 true))
(let (($generated@@206 true))
(let (($generated@@207  (=> (= $generated@@195 ($generated@@92 $generated@@196 $generated@@191 $generated false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@206) (=> (= (ControlFlow 0 11) 2) $generated@@205)) (=> (= (ControlFlow 0 11) 10) $generated@@204)))))
(let (($generated@@208  (=> (and ($generated@@149 $generated@@191) ($generated@@197 $generated@@191)) (=> (and (and ($generated@@24 $generated@@25 $generated@@192 $generated@@28) ($generated@@24 $generated@@25 $generated@@183 $generated@@27)) (and (= 2 $generated@@58) (= (ControlFlow 0 12) 11))) $generated@@207))))
$generated@@208))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
