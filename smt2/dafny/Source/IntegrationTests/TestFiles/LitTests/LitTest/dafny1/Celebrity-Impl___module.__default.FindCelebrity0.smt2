(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@T T@U) T@U)
(declare-fun $generated@@20 (T@T T@U) T@U)
(declare-fun $generated@@21 (T@T T@U) T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) Bool)
(declare-fun $generated@@32 (T@U T@U T@U) Bool)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@38 () Int)
(declare-fun $generated@@39 (T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@U T@U T@U) Bool)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@67 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@71 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@72 (T@T T@T) T@T)
(declare-fun $generated@@73 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@74 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@75 (T@T) T@T)
(declare-fun $generated@@76 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@18 T@U) ($generated@@19 T@T) ) (! (= ($generated@@17 $generated@@19 $generated@@18) $generated@@18)
 :pattern ( ($generated@@17 $generated@@19 $generated@@18))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@T) ) (! (= ($generated@@21 $generated@@23 ($generated@@20 $generated@@23 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@20 $generated@@23 $generated@@22))
)))
(assert (= ($generated@@1 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@29 ($generated@@26 $generated@@30)) (forall (($generated@@31 T@U) ) (!  (=> ($generated@@27 $generated@@29 $generated@@31) ($generated@@28 $generated@@31 $generated@@30))
 :pattern ( ($generated@@27 $generated@@29 $generated@@31))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@29 ($generated@@26 $generated@@30)))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@T) ) (! (= ($generated@@32 ($generated@@21 $generated@@37 $generated@@34) $generated@@35 $generated@@36) ($generated@@33 $generated@@37 $generated@@34 $generated@@35 $generated@@36))
 :pattern ( ($generated@@32 ($generated@@21 $generated@@37 $generated@@34) $generated@@35 $generated@@36))
)))
(assert (= ($generated@@1 $generated@@40) 4))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (!  (=> (or ($generated@@41 $generated@@44 ($generated@@17 $generated@@40 $generated@@45) ($generated@@17 $generated@@25 $generated@@46)) (and (< 1 $generated@@38) (and ($generated@@28 $generated@@45 $generated@@44) ($generated@@24 $generated@@25 $generated@@46 ($generated@@26 $generated@@44))))) (and (=> ($generated@@27 ($generated@@17 $generated@@25 $generated@@46) ($generated@@17 $generated@@40 $generated@@45)) (forall (($generated@@47 T@U) ) (!  (=> ($generated@@28 $generated@@47 $generated@@44) (and (=> ($generated@@27 ($generated@@17 $generated@@25 $generated@@46) $generated@@47) (=> (or (not (= $generated@@47 $generated@@45)) (not true)) ($generated@@43 $generated@@44 $generated@@47 ($generated@@17 $generated@@40 $generated@@45)))) (=> (=> (and ($generated@@27 ($generated@@17 $generated@@25 $generated@@46) $generated@@47) (or (not (= $generated@@47 $generated@@45)) (not true))) ($generated@@42 $generated@@44 $generated@@47 ($generated@@17 $generated@@40 $generated@@45))) (=> ($generated@@27 ($generated@@17 $generated@@25 $generated@@46) $generated@@47) (=> (or (not (= $generated@@47 $generated@@45)) (not true)) ($generated@@43 $generated@@44 ($generated@@17 $generated@@40 $generated@@45) $generated@@47))))))
 :pattern ( ($generated@@42 $generated@@44 $generated@@45 $generated@@47))
 :pattern ( ($generated@@42 $generated@@44 $generated@@47 $generated@@45))
 :pattern ( ($generated@@27 $generated@@46 $generated@@47))
))) (= ($generated@@39 $generated@@44 ($generated@@17 $generated@@40 $generated@@45) ($generated@@17 $generated@@25 $generated@@46))  (and ($generated@@27 ($generated@@17 $generated@@25 $generated@@46) ($generated@@17 $generated@@40 $generated@@45)) (forall (($generated@@48 T@U) ) (!  (=> ($generated@@28 $generated@@48 $generated@@44) (and (=> (and ($generated@@27 ($generated@@17 $generated@@25 $generated@@46) $generated@@48) (or (not (= $generated@@48 $generated@@45)) (not true))) ($generated@@42 $generated@@44 $generated@@48 ($generated@@17 $generated@@40 $generated@@45))) (=> (and ($generated@@27 ($generated@@17 $generated@@25 $generated@@46) $generated@@48) (or (not (= $generated@@48 $generated@@45)) (not true))) (not ($generated@@42 $generated@@44 ($generated@@17 $generated@@40 $generated@@45) $generated@@48)))))
 :pattern ( ($generated@@42 $generated@@44 $generated@@45 $generated@@48))
 :pattern ( ($generated@@42 $generated@@44 $generated@@48 $generated@@45))
 :pattern ( ($generated@@27 $generated@@46 $generated@@48))
))))))
 :weight 3
 :pattern ( ($generated@@39 $generated@@44 ($generated@@17 $generated@@40 $generated@@45) ($generated@@17 $generated@@25 $generated@@46)))
))))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@28 ($generated@@21 $generated@@51 $generated@@49) $generated@@50) ($generated@@24 $generated@@51 $generated@@49 $generated@@50))
 :pattern ( ($generated@@28 ($generated@@21 $generated@@51 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@33 $generated@@25 $generated@@52 ($generated@@26 $generated@@53) $generated@@54) (forall (($generated@@55 T@U) ) (!  (=> ($generated@@27 $generated@@52 $generated@@55) ($generated@@32 $generated@@55 $generated@@53 $generated@@54))
 :pattern ( ($generated@@27 $generated@@52 $generated@@55))
)))
 :pattern ( ($generated@@33 $generated@@25 $generated@@52 ($generated@@26 $generated@@53) $generated@@54))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@41 $generated@@56 $generated@@57 ($generated@@17 $generated@@25 $generated@@58)) (and (< 1 $generated@@38) (and ($generated@@28 $generated@@57 $generated@@56) ($generated@@24 $generated@@25 $generated@@58 ($generated@@26 $generated@@56))))) (and (=> ($generated@@27 ($generated@@17 $generated@@25 $generated@@58) $generated@@57) (forall (($generated@@59 T@U) ) (!  (=> ($generated@@28 $generated@@59 $generated@@56) (and (=> ($generated@@27 ($generated@@17 $generated@@25 $generated@@58) $generated@@59) (=> (or (not (= $generated@@59 $generated@@57)) (not true)) ($generated@@43 $generated@@56 $generated@@59 $generated@@57))) (=> (=> (and ($generated@@27 ($generated@@17 $generated@@25 $generated@@58) $generated@@59) (or (not (= $generated@@59 $generated@@57)) (not true))) ($generated@@42 $generated@@56 $generated@@59 $generated@@57)) (=> ($generated@@27 ($generated@@17 $generated@@25 $generated@@58) $generated@@59) (=> (or (not (= $generated@@59 $generated@@57)) (not true)) ($generated@@43 $generated@@56 $generated@@57 $generated@@59))))))
 :pattern ( ($generated@@42 $generated@@56 $generated@@57 $generated@@59))
 :pattern ( ($generated@@42 $generated@@56 $generated@@59 $generated@@57))
 :pattern ( ($generated@@27 $generated@@58 $generated@@59))
))) (= ($generated@@39 $generated@@56 $generated@@57 ($generated@@17 $generated@@25 $generated@@58))  (and ($generated@@27 ($generated@@17 $generated@@25 $generated@@58) $generated@@57) (forall (($generated@@60 T@U) ) (!  (=> ($generated@@28 $generated@@60 $generated@@56) (and (=> (and ($generated@@27 ($generated@@17 $generated@@25 $generated@@58) $generated@@60) (or (not (= $generated@@60 $generated@@57)) (not true))) ($generated@@42 $generated@@56 $generated@@60 $generated@@57)) (=> (and ($generated@@27 ($generated@@17 $generated@@25 $generated@@58) $generated@@60) (or (not (= $generated@@60 $generated@@57)) (not true))) (not ($generated@@42 $generated@@56 $generated@@57 $generated@@60)))))
 :pattern ( ($generated@@42 $generated@@56 $generated@@57 $generated@@60))
 :pattern ( ($generated@@42 $generated@@56 $generated@@60 $generated@@57))
 :pattern ( ($generated@@27 $generated@@58 $generated@@60))
))))))
 :weight 3
 :pattern ( ($generated@@39 $generated@@56 $generated@@57 ($generated@@17 $generated@@25 $generated@@58)))
))))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 ($generated@@26 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@26 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 ($generated@@26 $generated@@64)) $generated)
 :pattern ( ($generated@@26 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@20 $generated@@66 ($generated@@21 $generated@@66 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@21 $generated@@66 $generated@@65))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@67 $generated@@77 $generated@@78 $generated@@79 ($generated@@73 $generated@@77 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@83 $generated@@80) $generated@@82 $generated@@83) $generated@@80)
 :weight 0
)) (and (forall (($generated@@84 T@T) ($generated@@85 T@T) ($generated@@86 T@T) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (or (= $generated@@89 $generated@@91) (= ($generated@@67 $generated@@84 $generated@@85 $generated@@86 ($generated@@73 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@89 $generated@@90 $generated@@87) $generated@@91 $generated@@92) ($generated@@67 $generated@@84 $generated@@85 $generated@@86 $generated@@88 $generated@@91 $generated@@92)))
 :weight 0
)) (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@99 $generated@@101) (= ($generated@@67 $generated@@93 $generated@@94 $generated@@95 ($generated@@73 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@100 $generated@@101) ($generated@@67 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@100 $generated@@101)))
 :weight 0
)))) (= ($generated@@1 $generated@@68) 5)) (= ($generated@@1 $generated@@69) 6)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@71 $generated@@102 $generated@@103 ($generated@@74 $generated@@102 $generated@@103 $generated@@105 $generated@@106 $generated@@104) $generated@@106) $generated@@104)
 :weight 0
))) (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@111 $generated@@112) (= ($generated@@71 $generated@@107 $generated@@108 ($generated@@74 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@109) $generated@@112) ($generated@@71 $generated@@107 $generated@@108 $generated@@110 $generated@@112)))
 :weight 0
))) (forall (($generated@@113 T@T) ($generated@@114 T@T) ) (= ($generated@@1 ($generated@@72 $generated@@113 $generated@@114)) 7))) (forall (($generated@@115 T@T) ($generated@@116 T@T) ) (! (= ($generated@@75 ($generated@@72 $generated@@115 $generated@@116)) $generated@@115)
 :pattern ( ($generated@@72 $generated@@115 $generated@@116))
))) (forall (($generated@@117 T@T) ($generated@@118 T@T) ) (! (= ($generated@@76 ($generated@@72 $generated@@117 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@72 $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 Bool) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@6 ($generated@@67 $generated@@68 $generated@@69 $generated@@2 ($generated@@70 $generated@@119 $generated@@120 $generated@@121 $generated@@122) $generated@@123 $generated@@124))  (=> (and (or (not (= $generated@@123 $generated@@119)) (not true)) ($generated@@6 ($generated@@20 $generated@@2 ($generated@@71 $generated@@69 $generated@@40 ($generated@@71 $generated@@68 ($generated@@72 $generated@@69 $generated@@40) $generated@@120 $generated@@123) $generated@@121)))) $generated@@122))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69 $generated@@2 ($generated@@70 $generated@@119 $generated@@120 $generated@@121 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@28 $generated@@125 ($generated@@26 $generated@@126)) (and (= ($generated@@21 $generated@@25 ($generated@@20 $generated@@25 $generated@@125)) $generated@@125) ($generated@@24 $generated@@25 ($generated@@20 $generated@@25 $generated@@125) ($generated@@26 $generated@@126))))
 :pattern ( ($generated@@28 $generated@@125 ($generated@@26 $generated@@126)))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@21 $generated@@128 ($generated@@17 $generated@@128 $generated@@127)) ($generated@@17 $generated@@40 ($generated@@21 $generated@@128 $generated@@127)))
 :pattern ( ($generated@@21 $generated@@128 ($generated@@17 $generated@@128 $generated@@127)))
)))
(assert  (=> (<= 1 $generated@@38) (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@41 $generated@@129 $generated@@130 $generated@@131) (and (< 1 $generated@@38) (and ($generated@@28 $generated@@130 $generated@@129) ($generated@@24 $generated@@25 $generated@@131 ($generated@@26 $generated@@129))))) (and (=> ($generated@@27 $generated@@131 $generated@@130) (forall (($generated@@132 T@U) ) (!  (=> ($generated@@28 $generated@@132 $generated@@129) (and (=> ($generated@@27 $generated@@131 $generated@@132) (=> (or (not (= $generated@@132 $generated@@130)) (not true)) ($generated@@43 $generated@@129 $generated@@132 $generated@@130))) (=> (=> (and ($generated@@27 $generated@@131 $generated@@132) (or (not (= $generated@@132 $generated@@130)) (not true))) ($generated@@42 $generated@@129 $generated@@132 $generated@@130)) (=> ($generated@@27 $generated@@131 $generated@@132) (=> (or (not (= $generated@@132 $generated@@130)) (not true)) ($generated@@43 $generated@@129 $generated@@130 $generated@@132))))))
 :pattern ( ($generated@@42 $generated@@129 $generated@@130 $generated@@132))
 :pattern ( ($generated@@42 $generated@@129 $generated@@132 $generated@@130))
 :pattern ( ($generated@@27 $generated@@131 $generated@@132))
))) (= ($generated@@39 $generated@@129 $generated@@130 $generated@@131)  (and ($generated@@27 $generated@@131 $generated@@130) (forall (($generated@@133 T@U) ) (!  (=> ($generated@@28 $generated@@133 $generated@@129) (and (=> (and ($generated@@27 $generated@@131 $generated@@133) (or (not (= $generated@@133 $generated@@130)) (not true))) ($generated@@42 $generated@@129 $generated@@133 $generated@@130)) (=> (and ($generated@@27 $generated@@131 $generated@@133) (or (not (= $generated@@133 $generated@@130)) (not true))) (not ($generated@@42 $generated@@129 $generated@@130 $generated@@133)))))
 :pattern ( ($generated@@42 $generated@@129 $generated@@130 $generated@@133))
 :pattern ( ($generated@@42 $generated@@129 $generated@@133 $generated@@130))
 :pattern ( ($generated@@27 $generated@@131 $generated@@133))
))))))
 :pattern ( ($generated@@39 $generated@@129 $generated@@130 $generated@@131))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@134 () T@U)
(declare-fun $generated@@135 () T@U)
(declare-fun $generated@@136 () T@U)
(declare-fun $generated@@137 () T@U)
(declare-fun $generated@@138 () T@U)
(declare-fun $generated@@139 () T@U)
(declare-fun $generated@@140 () T@U)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U) Bool)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () Bool)
(declare-fun $generated@@145 () T@U)
(declare-fun $generated@@146 () Bool)
(declare-fun $generated@@147 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@148  (=> (and (=> true (and ($generated@@28 $generated@@134 $generated@@135) ($generated@@32 $generated@@134 $generated@@135 $generated@@136))) (= $generated@@134 $generated@@137)) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (= $generated@@134 $generated@@137)))))))
(let (($generated@@149  (=> (and (not (and ($generated@@28 $generated@@138 $generated@@135) ($generated@@32 $generated@@138 $generated@@135 $generated@@136))) (= (ControlFlow 0 6) 2)) $generated@@148)))
(let (($generated@@150  (=> (and (and ($generated@@28 $generated@@138 $generated@@135) ($generated@@32 $generated@@138 $generated@@135 $generated@@136)) (= (ControlFlow 0 5) 2)) $generated@@148)))
(let (($generated@@151  (=> (= $generated@@139 ($generated@@70 $generated@@140 $generated@@136 $generated@@0 false)) (and (=> (= (ControlFlow 0 7) 5) $generated@@150) (=> (= (ControlFlow 0 7) 6) $generated@@149)))))
(let (($generated@@152  (=> (and (and (and (and ($generated@@141 $generated@@136) ($generated@@142 $generated@@136)) (and ($generated@@24 $generated@@25 $generated@@143 ($generated@@26 $generated@@135)) ($generated@@33 $generated@@25 $generated@@143 ($generated@@26 $generated@@135) $generated@@136))) (and (and ($generated@@28 $generated@@137 $generated@@135) ($generated@@32 $generated@@137 $generated@@135 $generated@@136)) (=> $generated@@144 (and ($generated@@28 $generated@@145 $generated@@135) ($generated@@32 $generated@@145 $generated@@135 $generated@@136))))) (and (and (and (=> $generated@@146 (and ($generated@@28 $generated@@147 $generated@@135) ($generated@@32 $generated@@147 $generated@@135 $generated@@136))) true) (= 2 $generated@@38)) (and (exists (($generated@@153 T@U) ) (!  (and (and ($generated@@28 $generated@@153 $generated@@135) ($generated@@32 $generated@@153 $generated@@135 $generated@@136)) ($generated@@39 $generated@@135 $generated@@153 $generated@@143))
 :pattern ( ($generated@@39 $generated@@135 $generated@@153 $generated@@143))
)) (= (ControlFlow 0 8) 7)))) $generated@@151)))
$generated@@152))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
