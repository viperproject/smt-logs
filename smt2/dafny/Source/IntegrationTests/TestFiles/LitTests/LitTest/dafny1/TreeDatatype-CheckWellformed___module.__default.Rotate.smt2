(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U T@U) Bool)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Int)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@54 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 () T@U)
(declare-fun $generated@@61 (Int) Int)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@101 (T@U T@U Int T@U) T@U)
(declare-fun $generated@@102 (T@U Int T@U) Bool)
(declare-fun $generated@@132 (T@U) T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@147 (T@U) Int)
(declare-fun $generated@@155 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 () T@T)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert  (and (= ($generated@@6 $generated@@27) 3) (= ($generated@@6 $generated@@33) 4)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@28 $generated@@36 ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39)) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@38 ($generated@@30 $generated@@36)) ($generated@@29 $generated@@27 $generated@@39 ($generated@@30 $generated@@36))))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@38)))))) (let (($generated@@40 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@38)))))
($generated@@28 $generated@@36 $generated@@40 ($generated@@26 $generated@@27 $generated@@39)))) (= ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@38)) $generated@@39 (let (($generated@@41 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@38)))))
(let (($generated@@42 ($generated@@26 $generated@@33 ($generated@@34 ($generated@@26 $generated@@27 $generated@@38)))))
($generated@@26 $generated@@27 ($generated@@35 $generated@@42 ($generated@@26 $generated@@27 ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) $generated@@41 ($generated@@26 $generated@@27 $generated@@39)))))))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@36 ($generated@@25 $generated@@37) ($generated@@26 $generated@@27 $generated@@38) ($generated@@26 $generated@@27 $generated@@39)))
))))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@43 $generated@@44 ($generated@@25 $generated@@45) $generated@@46) ($generated@@43 $generated@@44 $generated@@45 $generated@@46))
 :pattern ( ($generated@@43 $generated@@44 ($generated@@25 $generated@@45) $generated@@46))
)))
(assert (= ($generated@@47 $generated@@48) $generated@@3))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> ($generated@@50 $generated@@52) ($generated@@49 $generated@@27 $generated@@48 ($generated@@30 $generated@@51) $generated@@52))
 :pattern ( ($generated@@49 $generated@@27 $generated@@48 ($generated@@30 $generated@@51) $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ) (! ($generated@@29 $generated@@27 $generated@@48 ($generated@@30 $generated@@53))
 :pattern ( ($generated@@29 $generated@@27 $generated@@48 ($generated@@30 $generated@@53)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@54 $generated@@55 $generated@@56) (= $generated@@55 $generated@@56))
 :pattern ( ($generated@@54 $generated@@55 $generated@@56))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@58 $generated@@62 $generated@@63) (and (< 2 $generated@@23) ($generated@@59 $generated@@63 $generated@@62))) (and (= ($generated@@43 $generated@@62 ($generated@@25 $generated@@60) ($generated@@57 $generated@@62 $generated@@63)) ($generated@@61 1)) ($generated@@29 $generated@@27 ($generated@@57 $generated@@62 $generated@@63) ($generated@@30 $generated@@62))))
 :pattern ( ($generated@@57 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (and ($generated@@64 $generated@@65) ($generated@@64 $generated@@66)) (= ($generated@@54 $generated@@65 $generated@@66)  (and (= ($generated@@34 $generated@@65) ($generated@@34 $generated@@66)) ($generated@@54 ($generated@@32 $generated@@65) ($generated@@32 $generated@@66)))))
 :pattern ( ($generated@@54 $generated@@65 $generated@@66) ($generated@@64 $generated@@65))
 :pattern ( ($generated@@54 $generated@@65 $generated@@66) ($generated@@64 $generated@@66))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@61 $generated@@67) $generated@@67)
 :pattern ( ($generated@@61 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@26 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@26 $generated@@69 $generated@@68))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@28 $generated@@70 $generated@@72 $generated@@73) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@72 ($generated@@30 $generated@@70)) ($generated@@29 $generated@@27 $generated@@73 ($generated@@30 $generated@@70))))) (and (= ($generated@@43 $generated@@70 ($generated@@25 $generated@@60) ($generated@@24 $generated@@70 $generated@@71 $generated@@72 $generated@@73)) (+ ($generated@@43 $generated@@70 ($generated@@25 $generated@@60) $generated@@72) ($generated@@43 $generated@@70 ($generated@@25 $generated@@60) $generated@@73))) ($generated@@29 $generated@@27 ($generated@@24 $generated@@70 $generated@@71 $generated@@72 $generated@@73) ($generated@@30 $generated@@70))))
 :pattern ( ($generated@@24 $generated@@70 $generated@@71 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@29 $generated@@27 ($generated@@35 $generated@@75 $generated@@76) ($generated@@30 $generated@@74))  (and ($generated@@59 $generated@@75 $generated@@74) ($generated@@29 $generated@@27 $generated@@76 ($generated@@30 $generated@@74))))
 :pattern ( ($generated@@29 $generated@@27 ($generated@@35 $generated@@75 $generated@@76) ($generated@@30 $generated@@74)))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@28 $generated@@77 $generated@@79 $generated@@80) (and (< 2 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@79 ($generated@@30 $generated@@77)) ($generated@@29 $generated@@27 $generated@@80 ($generated@@30 $generated@@77))))) (and (=> (not ($generated@@31 $generated@@79)) (let (($generated@@81 ($generated@@32 $generated@@79)))
($generated@@28 $generated@@77 $generated@@81 $generated@@80))) (= ($generated@@24 $generated@@77 ($generated@@25 $generated@@78) $generated@@79 $generated@@80) (ite ($generated@@31 $generated@@79) $generated@@80 (let (($generated@@82 ($generated@@32 $generated@@79)))
(let (($generated@@83 ($generated@@34 $generated@@79)))
($generated@@35 $generated@@83 ($generated@@24 $generated@@77 $generated@@78 $generated@@82 $generated@@80))))))))
 :pattern ( ($generated@@24 $generated@@77 ($generated@@25 $generated@@78) $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@31 $generated@@84) (= ($generated@@47 $generated@@84) $generated@@3))
 :pattern ( ($generated@@31 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@64 $generated@@85) (= ($generated@@47 $generated@@85) $generated@@4))
 :pattern ( ($generated@@64 $generated@@85))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@86 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@86 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@64 $generated@@90) (exists (($generated@@91 T@U) ($generated@@92 T@U) ) (= $generated@@90 ($generated@@35 $generated@@91 $generated@@92))))
 :pattern ( ($generated@@64 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@31 $generated@@93) (= $generated@@93 $generated@@48))
 :pattern ( ($generated@@31 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@87 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@49 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@87 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (!  (and (= ($generated@@22 ($generated@@30 $generated@@100)) $generated@@2) (= ($generated@@99 ($generated@@30 $generated@@100)) $generated@@5))
 :pattern ( ($generated@@30 $generated@@100))
)))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 Int) ($generated@@107 T@U) ) (!  (=> (and (or ($generated@@102 $generated@@104 $generated@@106 $generated@@107) (and (< 3 $generated@@23) (and (and ($generated@@29 $generated@@27 $generated@@107 ($generated@@30 $generated@@104)) ($generated@@49 $generated@@27 $generated@@107 ($generated@@30 $generated@@104) $generated@@103)) (<= ($generated@@61 0) $generated@@106)))) ($generated@@50 $generated@@103)) ($generated@@49 $generated@@27 ($generated@@101 $generated@@104 $generated@@105 $generated@@106 $generated@@107) ($generated@@30 $generated@@104) $generated@@103))
 :pattern ( ($generated@@49 $generated@@27 ($generated@@101 $generated@@104 $generated@@105 $generated@@106 $generated@@107) ($generated@@30 $generated@@104) $generated@@103))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@29 $generated@@27 $generated@@109 ($generated@@30 $generated@@108)) (or ($generated@@31 $generated@@109) ($generated@@64 $generated@@109)))
 :pattern ( ($generated@@64 $generated@@109) ($generated@@29 $generated@@27 $generated@@109 ($generated@@30 $generated@@108)))
 :pattern ( ($generated@@31 $generated@@109) ($generated@@29 $generated@@27 $generated@@109 ($generated@@30 $generated@@108)))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@59 $generated@@110 $generated) (and (= ($generated@@87 $generated@@8 ($generated@@86 $generated@@8 $generated@@110)) $generated@@110) ($generated@@29 $generated@@8 ($generated@@86 $generated@@8 $generated@@110) $generated)))
 :pattern ( ($generated@@59 $generated@@110 $generated))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@59 ($generated@@87 $generated@@113 $generated@@111) $generated@@112) ($generated@@29 $generated@@113 $generated@@111 $generated@@112))
 :pattern ( ($generated@@59 ($generated@@87 $generated@@113 $generated@@111) $generated@@112))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@58 $generated@@114 $generated@@115) (and (< 2 $generated@@23) ($generated@@59 $generated@@115 $generated@@114))) (= ($generated@@57 $generated@@114 $generated@@115) ($generated@@35 $generated@@115 ($generated@@26 $generated@@27 $generated@@48))))
 :pattern ( ($generated@@57 $generated@@114 $generated@@115))
))))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 Int) ($generated@@119 T@U) ) (!  (=> (or ($generated@@102 $generated@@116 ($generated@@61 $generated@@118) ($generated@@26 $generated@@27 $generated@@119)) (and (< 3 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@119 ($generated@@30 $generated@@116)) (<= ($generated@@61 0) ($generated@@61 $generated@@118))))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@119)))))) (let (($generated@@120 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@119)))))
(let (($generated@@121 ($generated@@26 $generated@@33 ($generated@@34 ($generated@@26 $generated@@27 $generated@@119)))))
 (=> (or (not (= ($generated@@61 $generated@@118) ($generated@@61 0))) (not true)) (and (and ($generated@@58 $generated@@116 $generated@@121) ($generated@@28 $generated@@116 $generated@@120 ($generated@@57 $generated@@116 $generated@@121))) ($generated@@102 $generated@@116 ($generated@@61 (- $generated@@118 1)) ($generated@@24 $generated@@116 ($generated@@25 $generated@@60) $generated@@120 ($generated@@57 $generated@@116 $generated@@121)))))))) (= ($generated@@101 $generated@@116 ($generated@@25 $generated@@117) ($generated@@61 $generated@@118) ($generated@@26 $generated@@27 $generated@@119)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@119)) $generated@@119 (let (($generated@@122 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@119)))))
(let (($generated@@123 ($generated@@26 $generated@@33 ($generated@@34 ($generated@@26 $generated@@27 $generated@@119)))))
(ite (= ($generated@@61 $generated@@118) ($generated@@61 0)) $generated@@119 ($generated@@101 $generated@@116 ($generated@@25 $generated@@117) ($generated@@61 (- $generated@@118 1)) ($generated@@26 $generated@@27 ($generated@@24 $generated@@116 ($generated@@25 $generated@@60) $generated@@122 ($generated@@26 $generated@@27 ($generated@@57 $generated@@116 $generated@@123))))))))))))
 :weight 3
 :pattern ( ($generated@@101 $generated@@116 ($generated@@25 $generated@@117) ($generated@@61 $generated@@118) ($generated@@26 $generated@@27 $generated@@119)))
))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@31 $generated@@124) ($generated@@31 $generated@@125)) ($generated@@54 $generated@@124 $generated@@125))
 :pattern ( ($generated@@54 $generated@@124 $generated@@125) ($generated@@31 $generated@@124))
 :pattern ( ($generated@@54 $generated@@124 $generated@@125) ($generated@@31 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@47 ($generated@@35 $generated@@126 $generated@@127)) $generated@@4)
 :pattern ( ($generated@@35 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@34 ($generated@@35 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@35 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@32 ($generated@@35 $generated@@130 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@35 $generated@@130 $generated@@131))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@132 ($generated@@30 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@30 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@86 $generated@@135 ($generated@@87 $generated@@135 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@87 $generated@@135 $generated@@134))
)))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Int) ($generated@@139 T@U) ) (!  (=> (or ($generated@@102 $generated@@136 $generated@@138 $generated@@139) (and (< 3 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@139 ($generated@@30 $generated@@136)) (<= ($generated@@61 0) $generated@@138)))) (and (= ($generated@@43 $generated@@136 ($generated@@25 $generated@@60) ($generated@@101 $generated@@136 $generated@@137 $generated@@138 $generated@@139)) ($generated@@43 $generated@@136 ($generated@@25 $generated@@60) $generated@@139)) ($generated@@29 $generated@@27 ($generated@@101 $generated@@136 $generated@@137 $generated@@138 $generated@@139) ($generated@@30 $generated@@136))))
 :pattern ( ($generated@@101 $generated@@136 $generated@@137 $generated@@138 $generated@@139))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (or ($generated@@140 $generated@@141 $generated@@143) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@143 ($generated@@30 $generated@@141)))) (and (=> (not ($generated@@31 $generated@@143)) (let (($generated@@144 ($generated@@32 $generated@@143)))
($generated@@140 $generated@@141 $generated@@144))) (= ($generated@@43 $generated@@141 ($generated@@25 $generated@@142) $generated@@143) (ite ($generated@@31 $generated@@143) 0 (let (($generated@@145 ($generated@@32 $generated@@143)))
(+ 1 ($generated@@43 $generated@@141 $generated@@142 $generated@@145)))))))
 :pattern ( ($generated@@43 $generated@@141 ($generated@@25 $generated@@142) $generated@@143))
))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (< ($generated@@146 $generated@@148) ($generated@@147 ($generated@@35 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@35 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (< ($generated@@147 $generated@@151) ($generated@@147 ($generated@@35 $generated@@150 $generated@@151)))
 :pattern ( ($generated@@35 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and ($generated@@50 $generated@@154) (and ($generated@@64 $generated@@152) ($generated@@49 $generated@@27 $generated@@152 ($generated@@30 $generated@@153) $generated@@154))) ($generated@@94 ($generated@@34 $generated@@152) $generated@@153 $generated@@154))
 :pattern ( ($generated@@94 ($generated@@34 $generated@@152) $generated@@153 $generated@@154))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@155 $generated@@165 $generated@@166 $generated@@167 ($generated@@161 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@170 $generated@@171) $generated@@168)
 :weight 0
)) (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@155 $generated@@172 $generated@@173 $generated@@174 ($generated@@161 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@155 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@155 $generated@@181 $generated@@182 $generated@@183 ($generated@@161 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@155 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)))) (= ($generated@@6 $generated@@156) 5)) (= ($generated@@6 $generated@@157) 6)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@159 $generated@@190 $generated@@191 ($generated@@162 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@192) $generated@@194) $generated@@192)
 :weight 0
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@199 $generated@@200) (= ($generated@@159 $generated@@195 $generated@@196 ($generated@@162 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@197) $generated@@200) ($generated@@159 $generated@@195 $generated@@196 $generated@@198 $generated@@200)))
 :weight 0
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@6 ($generated@@160 $generated@@201 $generated@@202)) 7))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@163 ($generated@@160 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@160 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@164 ($generated@@160 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@160 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@11 ($generated@@155 $generated@@156 $generated@@157 $generated@@7 ($generated@@158 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (or (not (= $generated@@211 $generated@@207)) (not true)) ($generated@@11 ($generated@@86 $generated@@7 ($generated@@159 $generated@@157 $generated@@33 ($generated@@159 $generated@@156 ($generated@@160 $generated@@157 $generated@@33) $generated@@208 $generated@@211) $generated@@209)))) $generated@@210))
 :pattern ( ($generated@@155 $generated@@156 $generated@@157 $generated@@7 ($generated@@158 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and (or ($generated@@28 $generated@@214 $generated@@216 $generated@@217) (and (< 2 $generated@@23) (and (and ($generated@@29 $generated@@27 $generated@@216 ($generated@@30 $generated@@214)) ($generated@@49 $generated@@27 $generated@@216 ($generated@@30 $generated@@214) $generated@@213)) (and ($generated@@29 $generated@@27 $generated@@217 ($generated@@30 $generated@@214)) ($generated@@49 $generated@@27 $generated@@217 ($generated@@30 $generated@@214) $generated@@213))))) ($generated@@50 $generated@@213)) ($generated@@49 $generated@@27 ($generated@@24 $generated@@214 $generated@@215 $generated@@216 $generated@@217) ($generated@@30 $generated@@214) $generated@@213))
 :pattern ( ($generated@@49 $generated@@27 ($generated@@24 $generated@@214 $generated@@215 $generated@@216 $generated@@217) ($generated@@30 $generated@@214) $generated@@213))
))))
(assert (forall (($generated@@218 T@U) ) (! (= ($generated@@146 ($generated@@87 $generated@@27 $generated@@218)) ($generated@@147 $generated@@218))
 :pattern ( ($generated@@146 ($generated@@87 $generated@@27 $generated@@218)))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@24 $generated@@219 ($generated@@25 $generated@@220) $generated@@221 $generated@@222) ($generated@@24 $generated@@219 $generated@@220 $generated@@221 $generated@@222))
 :pattern ( ($generated@@24 $generated@@219 ($generated@@25 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 Int) ($generated@@226 T@U) ) (! (= ($generated@@101 $generated@@223 ($generated@@25 $generated@@224) $generated@@225 $generated@@226) ($generated@@101 $generated@@223 $generated@@224 $generated@@225 $generated@@226))
 :pattern ( ($generated@@101 $generated@@223 ($generated@@25 $generated@@224) $generated@@225 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> ($generated@@59 $generated@@228 ($generated@@30 $generated@@227)) (and (= ($generated@@87 $generated@@27 ($generated@@86 $generated@@27 $generated@@228)) $generated@@228) ($generated@@29 $generated@@27 ($generated@@86 $generated@@27 $generated@@228) ($generated@@30 $generated@@227))))
 :pattern ( ($generated@@59 $generated@@228 ($generated@@30 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> (and ($generated@@50 $generated@@231) (and ($generated@@64 $generated@@229) ($generated@@49 $generated@@27 $generated@@229 ($generated@@30 $generated@@230) $generated@@231))) ($generated@@49 $generated@@27 ($generated@@32 $generated@@229) ($generated@@30 $generated@@230) $generated@@231))
 :pattern ( ($generated@@49 $generated@@27 ($generated@@32 $generated@@229) ($generated@@30 $generated@@230) $generated@@231))
)))
(assert (= $generated@@48 ($generated@@26 $generated@@27 $generated@@48)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= ($generated@@35 ($generated@@26 $generated@@33 $generated@@232) ($generated@@26 $generated@@27 $generated@@233)) ($generated@@26 $generated@@27 ($generated@@35 $generated@@232 $generated@@233)))
 :pattern ( ($generated@@35 ($generated@@26 $generated@@33 $generated@@232) ($generated@@26 $generated@@27 $generated@@233)))
)))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and (or ($generated@@58 $generated@@235 $generated@@236) (and (< 2 $generated@@23) (and ($generated@@59 $generated@@236 $generated@@235) ($generated@@94 $generated@@236 $generated@@235 $generated@@234)))) ($generated@@50 $generated@@234)) ($generated@@49 $generated@@27 ($generated@@57 $generated@@235 $generated@@236) ($generated@@30 $generated@@235) $generated@@234))
 :pattern ( ($generated@@49 $generated@@27 ($generated@@57 $generated@@235 $generated@@236) ($generated@@30 $generated@@235) $generated@@234))
))))
(assert (forall (($generated@@237 Int) ) (! (= ($generated@@87 $generated@@8 ($generated@@12 ($generated@@61 $generated@@237))) ($generated@@26 $generated@@33 ($generated@@87 $generated@@8 ($generated@@12 $generated@@237))))
 :pattern ( ($generated@@87 $generated@@8 ($generated@@12 ($generated@@61 $generated@@237))))
)))
(assert (forall (($generated@@238 T@U) ($generated@@239 T@T) ) (! (= ($generated@@87 $generated@@239 ($generated@@26 $generated@@239 $generated@@238)) ($generated@@26 $generated@@33 ($generated@@87 $generated@@239 $generated@@238)))
 :pattern ( ($generated@@87 $generated@@239 ($generated@@26 $generated@@239 $generated@@238)))
)))
(assert  (=> (<= 3 $generated@@23) (forall (($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 Int) ($generated@@243 T@U) ) (!  (=> (or ($generated@@102 $generated@@240 $generated@@242 $generated@@243) (and (< 3 $generated@@23) (and ($generated@@29 $generated@@27 $generated@@243 ($generated@@30 $generated@@240)) (<= ($generated@@61 0) $generated@@242)))) (and (=> (not ($generated@@31 $generated@@243)) (let (($generated@@244 ($generated@@32 $generated@@243)))
(let (($generated@@245 ($generated@@34 $generated@@243)))
 (=> (or (not (= $generated@@242 ($generated@@61 0))) (not true)) (and (and ($generated@@58 $generated@@240 $generated@@245) ($generated@@28 $generated@@240 $generated@@244 ($generated@@57 $generated@@240 $generated@@245))) ($generated@@102 $generated@@240 (- $generated@@242 1) ($generated@@24 $generated@@240 ($generated@@25 $generated@@60) $generated@@244 ($generated@@57 $generated@@240 $generated@@245)))))))) (= ($generated@@101 $generated@@240 ($generated@@25 $generated@@241) $generated@@242 $generated@@243) (ite ($generated@@31 $generated@@243) $generated@@243 (let (($generated@@246 ($generated@@32 $generated@@243)))
(let (($generated@@247 ($generated@@34 $generated@@243)))
(ite (= $generated@@242 ($generated@@61 0)) $generated@@243 ($generated@@101 $generated@@240 $generated@@241 (- $generated@@242 1) ($generated@@24 $generated@@240 ($generated@@25 $generated@@60) $generated@@246 ($generated@@57 $generated@@240 $generated@@247))))))))))
 :pattern ( ($generated@@101 $generated@@240 ($generated@@25 $generated@@241) $generated@@242 $generated@@243))
))))
(assert  (=> (<= 1 $generated@@23) (forall (($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (!  (=> (or ($generated@@140 $generated@@248 ($generated@@26 $generated@@27 $generated@@250)) (and (< 1 $generated@@23) ($generated@@29 $generated@@27 $generated@@250 ($generated@@30 $generated@@248)))) (and (=> (not ($generated@@11 ($generated@@26 $generated@@7 ($generated@@10 ($generated@@31 ($generated@@26 $generated@@27 $generated@@250)))))) (let (($generated@@251 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@250)))))
($generated@@140 $generated@@248 $generated@@251))) (= ($generated@@43 $generated@@248 ($generated@@25 $generated@@249) ($generated@@26 $generated@@27 $generated@@250)) (ite ($generated@@31 ($generated@@26 $generated@@27 $generated@@250)) 0 (let (($generated@@252 ($generated@@26 $generated@@27 ($generated@@32 ($generated@@26 $generated@@27 $generated@@250)))))
($generated@@61 (+ 1 ($generated@@43 $generated@@248 ($generated@@25 $generated@@249) $generated@@252))))))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@248 ($generated@@25 $generated@@249) ($generated@@26 $generated@@27 $generated@@250)))
))))
(assert  (=> (<= 2 $generated@@23) (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (or ($generated@@58 $generated@@253 ($generated@@26 $generated@@33 $generated@@254)) (and (< 2 $generated@@23) ($generated@@59 $generated@@254 $generated@@253))) (= ($generated@@57 $generated@@253 ($generated@@26 $generated@@33 $generated@@254)) ($generated@@26 $generated@@27 ($generated@@35 ($generated@@26 $generated@@33 $generated@@254) ($generated@@26 $generated@@27 $generated@@48)))))
 :weight 3
 :pattern ( ($generated@@57 $generated@@253 ($generated@@26 $generated@@33 $generated@@254)))
))))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (! ($generated@@49 $generated@@8 $generated@@256 $generated $generated@@255)
 :pattern ( ($generated@@49 $generated@@8 $generated@@256 $generated $generated@@255))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (=> ($generated@@50 $generated@@260) (= ($generated@@49 $generated@@27 ($generated@@35 $generated@@258 $generated@@259) ($generated@@30 $generated@@257) $generated@@260)  (and ($generated@@94 $generated@@258 $generated@@257 $generated@@260) ($generated@@49 $generated@@27 $generated@@259 ($generated@@30 $generated@@257) $generated@@260))))
 :pattern ( ($generated@@49 $generated@@27 ($generated@@35 $generated@@258 $generated@@259) ($generated@@30 $generated@@257) $generated@@260))
)))
(assert (forall (($generated@@261 T@U) ) (! ($generated@@29 $generated@@8 $generated@@261 $generated)
 :pattern ( ($generated@@29 $generated@@8 $generated@@261 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () Int)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 () T@U)
(declare-fun $generated@@268 () T@U)
(declare-fun $generated@@269 () T@U)
(declare-fun $generated@@270 () T@U)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () T@U)
(declare-fun $generated@@274 () T@U)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 17) (let (($generated@@278  (=> (= (ControlFlow 0 7) (- 0 6)) (= ($generated@@43 $generated@@262 ($generated@@25 ($generated@@25 $generated@@60)) ($generated@@101 $generated@@262 ($generated@@25 ($generated@@25 $generated@@60)) $generated@@263 $generated@@264)) ($generated@@43 $generated@@262 ($generated@@25 ($generated@@25 $generated@@60)) $generated@@264)))))
(let (($generated@@279  (=> (or (not (= $generated@@263 ($generated@@61 0))) (not true)) (=> (and (= $generated@@265 (- $generated@@263 1)) ($generated@@49 $generated@@8 ($generated@@12 $generated@@265) $generated $generated@@266)) (=> (and (and (and ($generated@@49 $generated@@27 $generated@@267 ($generated@@30 $generated@@262) $generated@@266) ($generated@@94 $generated@@268 $generated@@262 $generated@@266)) (and ($generated@@58 $generated@@262 $generated@@268) (= $generated@@269 ($generated@@57 $generated@@262 $generated@@268)))) (and (and ($generated@@49 $generated@@27 $generated@@269 ($generated@@30 $generated@@262) $generated@@266) ($generated@@28 $generated@@262 $generated@@267 ($generated@@57 $generated@@262 $generated@@268))) (and (= $generated@@270 ($generated@@24 $generated@@262 ($generated@@25 $generated@@60) $generated@@267 ($generated@@57 $generated@@262 $generated@@268))) ($generated@@49 $generated@@27 $generated@@270 ($generated@@30 $generated@@262) $generated@@266)))) (and (=> (= (ControlFlow 0 10) (- 0 13)) (<= ($generated@@61 0) $generated@@265)) (=> (<= ($generated@@61 0) $generated@@265) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (<= 0 $generated@@263) (= $generated@@265 $generated@@263))) (=> (or (<= 0 $generated@@263) (= $generated@@265 $generated@@263)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (< $generated@@265 $generated@@263) (and (= $generated@@265 $generated@@263) (< ($generated@@147 $generated@@270) ($generated@@147 $generated@@264))))) (=> (or (< $generated@@265 $generated@@263) (and (= $generated@@265 $generated@@263) (< ($generated@@147 $generated@@270) ($generated@@147 $generated@@264)))) (=> (and ($generated@@102 $generated@@262 (- $generated@@263 1) ($generated@@24 $generated@@262 ($generated@@25 $generated@@60) $generated@@267 ($generated@@57 $generated@@262 $generated@@268))) (= ($generated@@101 $generated@@262 ($generated@@25 $generated@@60) $generated@@263 $generated@@264) ($generated@@101 $generated@@262 ($generated@@25 $generated@@60) (- $generated@@263 1) ($generated@@24 $generated@@262 ($generated@@25 $generated@@60) $generated@@267 ($generated@@57 $generated@@262 $generated@@268))))) (=> (and (and (and ($generated@@58 $generated@@262 $generated@@268) ($generated@@28 $generated@@262 $generated@@267 ($generated@@57 $generated@@262 $generated@@268))) ($generated@@102 $generated@@262 (- $generated@@263 1) ($generated@@24 $generated@@262 ($generated@@25 $generated@@60) $generated@@267 ($generated@@57 $generated@@262 $generated@@268)))) (and ($generated@@29 $generated@@27 ($generated@@101 $generated@@262 ($generated@@25 $generated@@60) $generated@@263 $generated@@264) ($generated@@30 $generated@@262)) (= (ControlFlow 0 10) 7))) $generated@@278)))))))))))))
(let (($generated@@280  (=> (and (and (= $generated@@263 ($generated@@61 0)) (= ($generated@@101 $generated@@262 ($generated@@25 $generated@@60) $generated@@263 $generated@@264) $generated@@264)) (and ($generated@@29 $generated@@27 ($generated@@101 $generated@@262 ($generated@@25 $generated@@60) $generated@@263 $generated@@264) ($generated@@30 $generated@@262)) (= (ControlFlow 0 9) 7))) $generated@@278)))
(let (($generated@@281  (=> (= $generated@@264 ($generated@@35 $generated@@271 $generated@@272)) (=> (and (and (and ($generated@@59 $generated@@271 $generated@@262) ($generated@@29 $generated@@27 $generated@@272 ($generated@@30 $generated@@262))) (and (= $generated@@273 $generated@@272) ($generated@@29 $generated@@27 $generated@@273 ($generated@@30 $generated@@262)))) (and (and (= $generated@@267 $generated@@273) (= $generated@@274 $generated@@271)) (and ($generated@@59 $generated@@274 $generated@@262) (= $generated@@268 $generated@@274)))) (and (=> (= (ControlFlow 0 14) 9) $generated@@280) (=> (= (ControlFlow 0 14) 10) $generated@@279))))))
(let (($generated@@282  (=> (and (and (= $generated@@264 $generated@@48) (= ($generated@@101 $generated@@262 ($generated@@25 $generated@@60) $generated@@263 $generated@@264) $generated@@264)) (and ($generated@@29 $generated@@27 ($generated@@101 $generated@@262 ($generated@@25 $generated@@60) $generated@@263 $generated@@264) ($generated@@30 $generated@@262)) (= (ControlFlow 0 8) 7))) $generated@@278)))
(let (($generated@@283 true))
(let (($generated@@284  (=> (or (not (= $generated@@264 $generated@@48)) (not true)) (and (=> (= (ControlFlow 0 15) 14) $generated@@281) (=> (= (ControlFlow 0 15) 5) $generated@@283)))))
(let (($generated@@285  (=> ($generated@@29 $generated@@27 ($generated@@101 $generated@@262 ($generated@@25 $generated@@60) $generated@@263 $generated@@264) ($generated@@30 $generated@@262)) (=> (and ($generated@@49 $generated@@8 ($generated@@12 $generated@@263) $generated $generated@@266) ($generated@@49 $generated@@27 $generated@@264 ($generated@@30 $generated@@262) $generated@@266)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (<= ($generated@@61 0) $generated@@263)) (=> (<= ($generated@@61 0) $generated@@263) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (<= 0 $generated@@263) (= $generated@@263 $generated@@263))) (=> (or (<= 0 $generated@@263) (= $generated@@263 $generated@@263)) (=> (= (ControlFlow 0 2) (- 0 1)) (or (and (= $generated@@263 $generated@@263) ($generated@@54 $generated@@264 $generated@@264)) (or (< $generated@@263 $generated@@263) (and (= $generated@@263 $generated@@263) (< ($generated@@147 $generated@@264) ($generated@@147 $generated@@264))))))))))))))
(let (($generated@@286  (=> (and (= $generated@@275 ($generated@@158 $generated@@276 $generated@@266 $generated@@1 false)) (<= ($generated@@61 0) $generated@@263)) (and (and (=> (= (ControlFlow 0 16) 2) $generated@@285) (=> (= (ControlFlow 0 16) 8) $generated@@282)) (=> (= (ControlFlow 0 16) 15) $generated@@284)))))
(let (($generated@@287  (=> (and (and (and ($generated@@50 $generated@@266) ($generated@@277 $generated@@266)) ($generated@@29 $generated@@27 $generated@@264 ($generated@@30 $generated@@262))) (and (= 3 $generated@@23) (= (ControlFlow 0 17) 16))) $generated@@286)))
$generated@@287)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
