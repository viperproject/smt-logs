(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@33 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@T T@U T@U) Bool)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@77 () Int)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@98 (T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 () T@T)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@116 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 (T@T T@T) T@T)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T) T@T)
(declare-fun $generated@@122 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ($generated@@21 T@U) ) (!  (=> ($generated@@18 $generated@@19 $generated@@21) ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@21))
 :pattern ( ($generated@@17 $generated@@19 $generated@@20) ($generated@@18 $generated@@19 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@18 $generated@@23 $generated@@24) ($generated@@18 ($generated@@17 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@17 $generated@@22 $generated@@23) ($generated@@18 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@18 $generated@@27 $generated@@28) (not ($generated@@18 ($generated@@25 $generated@@26 $generated@@27) $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@18 $generated@@27 $generated@@28))
)))
(assert ($generated@@29 $generated@@30))
(assert (forall (($generated@@32 T@U) ) (!  (not ($generated@@18 $generated@@31 $generated@@32))
 :pattern ( ($generated@@18 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@18 ($generated@@33 $generated@@34 $generated@@35) $generated@@36)  (and ($generated@@18 $generated@@34 $generated@@36) ($generated@@18 $generated@@35 $generated@@36)))
 :pattern ( ($generated@@18 ($generated@@33 $generated@@34 $generated@@35) $generated@@36))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@17 ($generated@@17 $generated@@37 $generated@@38) $generated@@38) ($generated@@17 $generated@@37 $generated@@38))
 :pattern ( ($generated@@17 ($generated@@17 $generated@@37 $generated@@38) $generated@@38))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@33 ($generated@@33 $generated@@39 $generated@@40) $generated@@40) ($generated@@33 $generated@@39 $generated@@40))
 :pattern ( ($generated@@33 ($generated@@33 $generated@@39 $generated@@40) $generated@@40))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@18 ($generated@@25 $generated@@41 $generated@@42) $generated@@43)  (and ($generated@@18 $generated@@41 $generated@@43) (not ($generated@@18 $generated@@42 $generated@@43))))
 :pattern ( ($generated@@18 ($generated@@25 $generated@@41 $generated@@42) $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@49) (forall (($generated@@50 T@U) ) (!  (=> ($generated@@18 $generated@@48 $generated@@50) ($generated@@18 $generated@@49 $generated@@50))
 :pattern ( ($generated@@18 $generated@@48 $generated@@50))
 :pattern ( ($generated@@18 $generated@@49 $generated@@50))
)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 ($generated@@51 $generated@@54 $generated@@53)) $generated@@53)
 :pattern ( ($generated@@51 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@55 $generated@@56 $generated@@57) (forall (($generated@@58 T@U) ) (!  (or (not ($generated@@18 $generated@@56 $generated@@58)) (not ($generated@@18 $generated@@57 $generated@@58)))
 :pattern ( ($generated@@18 $generated@@56 $generated@@58))
 :pattern ( ($generated@@18 $generated@@57 $generated@@58))
)))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57))
)))
(assert (= ($generated@@1 $generated@@60) 3))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@59 $generated@@60 $generated@@63 ($generated@@61 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@18 $generated@@63 $generated@@65) ($generated@@62 $generated@@65 $generated@@64))
 :pattern ( ($generated@@18 $generated@@63 $generated@@65))
)))
 :pattern ( ($generated@@59 $generated@@60 $generated@@63 ($generated@@61 $generated@@64)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@66 ($generated@@52 $generated@@71 $generated@@68) $generated@@69 $generated@@70) ($generated@@67 $generated@@71 $generated@@68 $generated@@69 $generated@@70))
 :pattern ( ($generated@@66 ($generated@@52 $generated@@71 $generated@@68) $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@72 $generated@@73) $generated@@74)  (or ($generated@@18 $generated@@72 $generated@@74) ($generated@@18 $generated@@73 $generated@@74)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@72 $generated@@73) $generated@@74))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@55 $generated@@75 $generated@@76) (and (= ($generated@@25 ($generated@@17 $generated@@75 $generated@@76) $generated@@75) $generated@@76) (= ($generated@@25 ($generated@@17 $generated@@75 $generated@@76) $generated@@76) $generated@@75)))
 :pattern ( ($generated@@17 $generated@@75 $generated@@76))
)))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@79 $generated@@80 $generated@@81) (and (< 0 $generated@@77) (and ($generated@@59 $generated@@60 $generated@@80 ($generated@@61 ($generated@@61 $generated@@30))) ($generated@@59 $generated@@60 $generated@@81 ($generated@@61 $generated@@30))))) (= ($generated@@78 $generated@@80 $generated@@81)  (and (and (and (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@82 ($generated@@61 $generated@@30)) ($generated@@59 $generated@@60 $generated@@83 ($generated@@61 $generated@@30))) (=> (and ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 $generated@@82)) ($generated@@47 $generated@@82 $generated@@83)) ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 $generated@@83))))
 :pattern ( ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 $generated@@83)) ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 $generated@@82)))
 :pattern ( ($generated@@47 $generated@@82 $generated@@83))
)) (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@84 ($generated@@61 $generated@@30)) ($generated@@59 $generated@@60 $generated@@85 ($generated@@61 $generated@@30))) (=> (and ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 $generated@@84)) ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 $generated@@85))) ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 ($generated@@33 $generated@@84 $generated@@85)))))
 :pattern ( ($generated@@33 $generated@@84 $generated@@85))
))) ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 $generated@@81))) (not ($generated@@18 $generated@@80 ($generated@@52 $generated@@60 ($generated@@44 $generated@@60 $generated@@31)))))))
 :pattern ( ($generated@@78 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@62 ($generated@@52 $generated@@88 $generated@@86) $generated@@87) ($generated@@59 $generated@@88 $generated@@86 $generated@@87))
 :pattern ( ($generated@@62 ($generated@@52 $generated@@88 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@29 $generated@@89) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> ($generated@@62 $generated@@91 $generated@@89) ($generated@@66 $generated@@91 $generated@@89 $generated@@90))
 :pattern ( ($generated@@66 $generated@@91 $generated@@89 $generated@@90))
)))
 :pattern ( ($generated@@29 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@67 $generated@@60 $generated@@92 ($generated@@61 $generated@@93) $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@18 $generated@@92 $generated@@95) ($generated@@66 $generated@@95 $generated@@93 $generated@@94))
 :pattern ( ($generated@@18 $generated@@92 $generated@@95))
)))
 :pattern ( ($generated@@67 $generated@@60 $generated@@92 ($generated@@61 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@61 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@61 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 ($generated@@61 $generated@@99)) $generated)
 :pattern ( ($generated@@61 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@51 $generated@@101 ($generated@@52 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@52 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@17 $generated@@102 ($generated@@17 $generated@@102 $generated@@103)) ($generated@@17 $generated@@102 $generated@@103))
 :pattern ( ($generated@@17 $generated@@102 ($generated@@17 $generated@@102 $generated@@103)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@33 $generated@@104 ($generated@@33 $generated@@104 $generated@@105)) ($generated@@33 $generated@@104 $generated@@105))
 :pattern ( ($generated@@33 $generated@@104 ($generated@@33 $generated@@104 $generated@@105)))
)))
(assert  (=> (<= 0 $generated@@77) (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (or ($generated@@79 ($generated@@44 $generated@@60 $generated@@106) ($generated@@44 $generated@@60 $generated@@107)) (and (< 0 $generated@@77) (and ($generated@@59 $generated@@60 $generated@@106 ($generated@@61 ($generated@@61 $generated@@30))) ($generated@@59 $generated@@60 $generated@@107 ($generated@@61 $generated@@30))))) (= ($generated@@78 ($generated@@44 $generated@@60 $generated@@106) ($generated@@44 $generated@@60 $generated@@107))  (and (and (and (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@108 ($generated@@61 $generated@@30)) ($generated@@59 $generated@@60 $generated@@109 ($generated@@61 $generated@@30))) (=> (and ($generated@@18 ($generated@@44 $generated@@60 $generated@@106) ($generated@@52 $generated@@60 $generated@@108)) ($generated@@47 $generated@@108 $generated@@109)) ($generated@@18 ($generated@@44 $generated@@60 $generated@@106) ($generated@@52 $generated@@60 $generated@@109))))
 :pattern ( ($generated@@18 $generated@@106 ($generated@@52 $generated@@60 $generated@@109)) ($generated@@18 $generated@@106 ($generated@@52 $generated@@60 $generated@@108)))
 :pattern ( ($generated@@47 $generated@@108 $generated@@109))
)) (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@110 ($generated@@61 $generated@@30)) ($generated@@59 $generated@@60 $generated@@111 ($generated@@61 $generated@@30))) (=> (and ($generated@@18 ($generated@@44 $generated@@60 $generated@@106) ($generated@@52 $generated@@60 $generated@@110)) ($generated@@18 ($generated@@44 $generated@@60 $generated@@106) ($generated@@52 $generated@@60 $generated@@111))) ($generated@@18 ($generated@@44 $generated@@60 $generated@@106) ($generated@@52 $generated@@60 ($generated@@33 $generated@@110 $generated@@111)))))
 :pattern ( ($generated@@33 $generated@@110 $generated@@111))
))) ($generated@@18 ($generated@@44 $generated@@60 $generated@@106) ($generated@@52 $generated@@60 ($generated@@44 $generated@@60 $generated@@107)))) (not ($generated@@18 ($generated@@44 $generated@@60 $generated@@106) ($generated@@52 $generated@@60 ($generated@@44 $generated@@60 $generated@@31)))))))
 :weight 3
 :pattern ( ($generated@@78 ($generated@@44 $generated@@60 $generated@@106) ($generated@@44 $generated@@60 $generated@@107)))
))))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@112 $generated@@123 $generated@@124 $generated@@125 ($generated@@119 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@112 $generated@@130 $generated@@131 $generated@@132 ($generated@@119 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@112 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@112 $generated@@139 $generated@@140 $generated@@141 ($generated@@119 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@112 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))) (= ($generated@@1 $generated@@113) 4)) (= ($generated@@1 $generated@@114) 5)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@116 $generated@@148 $generated@@149 ($generated@@120 $generated@@148 $generated@@149 $generated@@151 $generated@@152 $generated@@150) $generated@@152) $generated@@150)
 :weight 0
))) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@157 $generated@@158) (= ($generated@@116 $generated@@153 $generated@@154 ($generated@@120 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@155) $generated@@158) ($generated@@116 $generated@@153 $generated@@154 $generated@@156 $generated@@158)))
 :weight 0
))) (= ($generated@@1 $generated@@117) 6)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ) (= ($generated@@1 ($generated@@118 $generated@@159 $generated@@160)) 7))) (forall (($generated@@161 T@T) ($generated@@162 T@T) ) (! (= ($generated@@121 ($generated@@118 $generated@@161 $generated@@162)) $generated@@161)
 :pattern ( ($generated@@118 $generated@@161 $generated@@162))
))) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (! (= ($generated@@122 ($generated@@118 $generated@@163 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@118 $generated@@163 $generated@@164))
))))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Bool) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@6 ($generated@@112 $generated@@113 $generated@@114 $generated@@2 ($generated@@115 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))  (=> (and (or (not (= $generated@@169 $generated@@165)) (not true)) ($generated@@6 ($generated@@51 $generated@@2 ($generated@@116 $generated@@114 $generated@@117 ($generated@@116 $generated@@113 ($generated@@118 $generated@@114 $generated@@117) $generated@@166 $generated@@169) $generated@@167)))) $generated@@168))
 :pattern ( ($generated@@112 $generated@@113 $generated@@114 $generated@@2 ($generated@@115 $generated@@165 $generated@@166 $generated@@167 $generated@@168) $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@62 $generated@@171 ($generated@@61 $generated@@172)) (and (= ($generated@@52 $generated@@60 ($generated@@51 $generated@@60 $generated@@171)) $generated@@171) ($generated@@59 $generated@@60 ($generated@@51 $generated@@60 $generated@@171) ($generated@@61 $generated@@172))))
 :pattern ( ($generated@@62 $generated@@171 ($generated@@61 $generated@@172)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@T) ) (! (= ($generated@@52 $generated@@174 ($generated@@44 $generated@@174 $generated@@173)) ($generated@@44 $generated@@117 ($generated@@52 $generated@@174 $generated@@173)))
 :pattern ( ($generated@@52 $generated@@174 ($generated@@44 $generated@@174 $generated@@173)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 (T@U) Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@185  (=> (= (ControlFlow 0 6) (- 0 5)) ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@176)))))
(let (($generated@@186 true))
(let (($generated@@187  (=> (and ($generated@@59 $generated@@60 $generated@@176 ($generated@@61 $generated@@30)) ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@176))) (and (=> (= (ControlFlow 0 7) 4) $generated@@186) (=> (= (ControlFlow 0 7) 6) $generated@@185)))))
(let (($generated@@188  (=> (= (ControlFlow 0 2) (- 0 1)) ($generated@@47 $generated@@177 $generated@@175))))
(let (($generated@@189  (=> (and (forall (($generated@@190 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@190 ($generated@@61 $generated@@30)) ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@190))) ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@190)))
 :pattern ( ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@190)))
 :pattern ( ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@190)))
)) (= (ControlFlow 0 3) 2)) $generated@@188)))
(let (($generated@@191  (=> (= $generated@@178 ($generated@@115 $generated@@179 $generated@@180 $generated@@0 false)) (and (=> (= (ControlFlow 0 8) 7) $generated@@187) (=> (= (ControlFlow 0 8) 3) $generated@@189)))))
(let (($generated@@192  (=> (and (and ($generated@@181 $generated@@180) ($generated@@182 $generated@@180)) (and ($generated@@59 $generated@@60 $generated@@175 ($generated@@61 ($generated@@61 $generated@@30))) ($generated@@67 $generated@@60 $generated@@175 ($generated@@61 ($generated@@61 $generated@@30)) $generated@@180))) (=> (and (and (and (and ($generated@@59 $generated@@60 $generated@@177 ($generated@@61 ($generated@@61 $generated@@30))) ($generated@@67 $generated@@60 $generated@@177 ($generated@@61 ($generated@@61 $generated@@30)) $generated@@180)) (and ($generated@@59 $generated@@60 $generated@@183 ($generated@@61 $generated@@30)) ($generated@@67 $generated@@60 $generated@@183 ($generated@@61 $generated@@30) $generated@@180))) (and (and ($generated@@59 $generated@@60 $generated@@184 ($generated@@61 $generated@@30)) ($generated@@67 $generated@@60 $generated@@184 ($generated@@61 $generated@@30) $generated@@180)) (= 1 $generated@@77))) (and (and (and ($generated@@79 $generated@@177 $generated@@183) (and ($generated@@78 $generated@@177 $generated@@183) (and (and (and (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@193 ($generated@@61 $generated@@30)) ($generated@@59 $generated@@60 $generated@@194 ($generated@@61 $generated@@30))) (=> (and ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@193)) ($generated@@47 $generated@@193 $generated@@194)) ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@194))))
 :pattern ( ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@194)) ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@193)))
 :pattern ( ($generated@@47 $generated@@193 $generated@@194))
)) (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@195 ($generated@@61 $generated@@30)) ($generated@@59 $generated@@60 $generated@@196 ($generated@@61 $generated@@30))) (=> (and ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@195)) ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@196))) ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 ($generated@@33 $generated@@195 $generated@@196)))))
 :pattern ( ($generated@@33 $generated@@195 $generated@@196))
))) ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 $generated@@183))) (not ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 ($generated@@44 $generated@@60 $generated@@31))))))) (forall (($generated@@197 T@U) ) (!  (=> ($generated@@59 $generated@@60 $generated@@197 ($generated@@61 $generated@@30)) (= ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@197)) ($generated@@18 $generated@@177 ($generated@@52 $generated@@60 ($generated@@17 $generated@@184 $generated@@197)))))
 :pattern ( ($generated@@17 $generated@@184 $generated@@197))
 :pattern ( ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@197)))
))) (and (and ($generated@@79 $generated@@175 $generated@@183) (and ($generated@@78 $generated@@175 $generated@@183) (and (and (and (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@198 ($generated@@61 $generated@@30)) ($generated@@59 $generated@@60 $generated@@199 ($generated@@61 $generated@@30))) (=> (and ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@198)) ($generated@@47 $generated@@198 $generated@@199)) ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@199))))
 :pattern ( ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@199)) ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@198)))
 :pattern ( ($generated@@47 $generated@@198 $generated@@199))
)) (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@59 $generated@@60 $generated@@200 ($generated@@61 $generated@@30)) ($generated@@59 $generated@@60 $generated@@201 ($generated@@61 $generated@@30))) (=> (and ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@200)) ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@201))) ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 ($generated@@33 $generated@@200 $generated@@201)))))
 :pattern ( ($generated@@33 $generated@@200 $generated@@201))
))) ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 $generated@@183))) (not ($generated@@18 $generated@@175 ($generated@@52 $generated@@60 ($generated@@44 $generated@@60 $generated@@31))))))) (= (ControlFlow 0 9) 8)))) $generated@@191))))
$generated@@192))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
