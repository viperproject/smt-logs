(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (Int T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@64 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@127 (T@U) Int)
(declare-fun $generated@@128 (T@U) Int)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@146 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@T T@T) T@T)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 (T@T) T@T)
(declare-fun $generated@@152 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@29) 3))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@30 ($generated@@28 $generated@@29 $generated@@41)) (and (< 2 $generated@@25) ($generated@@31 $generated@@29 $generated@@41 $generated@@32))) (and (and ($generated@@33 ($generated@@28 $generated@@29 $generated@@41)) (let (($generated@@42 ($generated@@28 $generated@@29 ($generated@@34 ($generated@@28 $generated@@29 $generated@@41)))))
 (and ($generated@@33 ($generated@@28 $generated@@29 $generated@@41)) ($generated@@35 $generated@@42)))) (= ($generated@@26 ($generated@@27 $generated@@40) ($generated@@28 $generated@@29 $generated@@41)) (let (($generated@@43 ($generated@@28 $generated@@29 ($generated@@34 ($generated@@28 $generated@@29 $generated@@41)))))
(let (($generated@@44 ($generated@@36 ($generated@@37 ($generated@@28 $generated@@29 $generated@@41)))))
($generated@@28 $generated@@29 ($generated@@38 ($generated@@36 (+ $generated@@44 1)) ($generated@@28 $generated@@29 ($generated@@39 ($generated@@27 $generated@@40) $generated@@43)))))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@40) ($generated@@28 $generated@@29 $generated@@41)))
))))
(assert (= ($generated@@45 $generated) $generated@@0))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (or ($generated@@35 $generated@@54) (and (< 2 $generated@@25) ($generated@@31 $generated@@29 $generated@@54 ($generated@@46 $generated@@32)))) (and (=> (not ($generated@@47 $generated@@54)) (let (($generated@@55 ($generated@@48 $generated@@54)))
(let (($generated@@56 ($generated@@49 $generated@@29 ($generated@@50 $generated@@54))))
 (and ($generated@@30 $generated@@56) ($generated@@35 $generated@@55))))) (= ($generated@@39 ($generated@@27 $generated@@53) $generated@@54) (ite ($generated@@47 $generated@@54) $generated@@54 (let (($generated@@57 ($generated@@48 $generated@@54)))
(let (($generated@@58 ($generated@@49 $generated@@29 ($generated@@50 $generated@@54))))
($generated@@51 ($generated@@52 $generated@@29 ($generated@@26 $generated@@53 $generated@@58)) ($generated@@39 $generated@@53 $generated@@57))))))))
 :pattern ( ($generated@@39 ($generated@@27 $generated@@53) $generated@@54))
))))
(assert (forall (($generated@@59 Int) ($generated@@60 T@U) ) (! (= ($generated@@31 $generated@@29 ($generated@@38 $generated@@59 $generated@@60) $generated@@32)  (and ($generated@@31 $generated@@11 ($generated@@15 $generated@@59) $generated) ($generated@@31 $generated@@29 $generated@@60 ($generated@@46 $generated@@32))))
 :pattern ( ($generated@@31 $generated@@29 ($generated@@38 $generated@@59 $generated@@60) $generated@@32))
)))
(assert (= ($generated@@61 $generated@@62) $generated@@4))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@31 $generated@@29 $generated@@63 $generated@@32) ($generated@@33 $generated@@63))
 :pattern ( ($generated@@33 $generated@@63) ($generated@@31 $generated@@29 $generated@@63 $generated@@32))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> ($generated@@65 $generated@@67) ($generated@@64 $generated@@29 $generated@@62 ($generated@@46 $generated@@66) $generated@@67))
 :pattern ( ($generated@@64 $generated@@29 $generated@@62 ($generated@@46 $generated@@66) $generated@@67))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> (or ($generated@@35 ($generated@@28 $generated@@29 $generated@@69)) (and (< 2 $generated@@25) ($generated@@31 $generated@@29 $generated@@69 ($generated@@46 $generated@@32)))) (and (=> (not ($generated@@14 ($generated@@28 $generated@@10 ($generated@@13 ($generated@@47 ($generated@@28 $generated@@29 $generated@@69)))))) (let (($generated@@70 ($generated@@28 $generated@@29 ($generated@@48 ($generated@@28 $generated@@29 $generated@@69)))))
(let (($generated@@71 ($generated@@28 $generated@@29 ($generated@@49 $generated@@29 ($generated@@50 ($generated@@28 $generated@@29 $generated@@69))))))
 (and ($generated@@30 $generated@@71) ($generated@@35 $generated@@70))))) (= ($generated@@39 ($generated@@27 $generated@@68) ($generated@@28 $generated@@29 $generated@@69)) (ite ($generated@@47 ($generated@@28 $generated@@29 $generated@@69)) $generated@@69 (let (($generated@@72 ($generated@@28 $generated@@29 ($generated@@48 ($generated@@28 $generated@@29 $generated@@69)))))
(let (($generated@@73 ($generated@@28 $generated@@29 ($generated@@49 $generated@@29 ($generated@@50 ($generated@@28 $generated@@29 $generated@@69))))))
($generated@@28 $generated@@29 ($generated@@51 ($generated@@52 $generated@@29 ($generated@@28 $generated@@29 ($generated@@26 ($generated@@27 $generated@@68) $generated@@73))) ($generated@@28 $generated@@29 ($generated@@39 ($generated@@27 $generated@@68) $generated@@72))))))))))
 :weight 3
 :pattern ( ($generated@@39 ($generated@@27 $generated@@68) ($generated@@28 $generated@@29 $generated@@69)))
))))
(assert (forall (($generated@@74 T@U) ) (! ($generated@@31 $generated@@29 $generated@@62 ($generated@@46 $generated@@74))
 :pattern ( ($generated@@31 $generated@@29 $generated@@62 ($generated@@46 $generated@@74)))
)))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@36 $generated@@75) $generated@@75)
 :pattern ( ($generated@@36 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@28 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@28 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@31 $generated@@29 ($generated@@51 $generated@@80 $generated@@81) ($generated@@46 $generated@@79))  (and ($generated@@78 $generated@@80 $generated@@79) ($generated@@31 $generated@@29 $generated@@81 ($generated@@46 $generated@@79))))
 :pattern ( ($generated@@31 $generated@@29 ($generated@@51 $generated@@80 $generated@@81) ($generated@@46 $generated@@79)))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@47 $generated@@82) (= ($generated@@61 $generated@@82) $generated@@4))
 :pattern ( ($generated@@47 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 $generated@@84) (= ($generated@@61 $generated@@84) $generated@@5))
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@33 $generated@@85) (= ($generated@@61 $generated@@85) $generated@@6))
 :pattern ( ($generated@@33 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@52 $generated@@87 ($generated@@49 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@49 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@83 $generated@@88) (exists (($generated@@89 T@U) ($generated@@90 T@U) ) (= $generated@@88 ($generated@@51 $generated@@89 $generated@@90))))
 :pattern ( ($generated@@83 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@33 $generated@@91) (exists (($generated@@92 Int) ($generated@@93 T@U) ) (= $generated@@91 ($generated@@38 $generated@@92 $generated@@93))))
 :pattern ( ($generated@@33 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@47 $generated@@94) (= $generated@@94 $generated@@62))
 :pattern ( ($generated@@47 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@95 ($generated@@52 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@64 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@95 ($generated@@52 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@45 ($generated@@46 $generated@@101)) $generated@@3) (= ($generated@@100 ($generated@@46 $generated@@101)) $generated@@8))
 :pattern ( ($generated@@46 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@78 $generated@@102 $generated@@32) (and (= ($generated@@52 $generated@@29 ($generated@@49 $generated@@29 $generated@@102)) $generated@@102) ($generated@@31 $generated@@29 ($generated@@49 $generated@@29 $generated@@102) $generated@@32)))
 :pattern ( ($generated@@78 $generated@@102 $generated@@32))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@31 $generated@@29 $generated@@104 ($generated@@46 $generated@@103)) (or ($generated@@47 $generated@@104) ($generated@@83 $generated@@104)))
 :pattern ( ($generated@@83 $generated@@104) ($generated@@31 $generated@@29 $generated@@104 ($generated@@46 $generated@@103)))
 :pattern ( ($generated@@47 $generated@@104) ($generated@@31 $generated@@29 $generated@@104 ($generated@@46 $generated@@103)))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@30 $generated@@106) (and (< 2 $generated@@25) ($generated@@31 $generated@@29 $generated@@106 $generated@@32))) ($generated@@31 $generated@@29 ($generated@@26 $generated@@105 $generated@@106) $generated@@32))
 :pattern ( ($generated@@26 $generated@@105 $generated@@106))
))))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@78 $generated@@107 $generated) (and (= ($generated@@52 $generated@@11 ($generated@@49 $generated@@11 $generated@@107)) $generated@@107) ($generated@@31 $generated@@11 ($generated@@49 $generated@@11 $generated@@107) $generated)))
 :pattern ( ($generated@@78 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@78 ($generated@@52 $generated@@110 $generated@@108) $generated@@109) ($generated@@31 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@78 ($generated@@52 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@61 ($generated@@51 $generated@@111 $generated@@112)) $generated@@5)
 :pattern ( ($generated@@51 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@50 ($generated@@51 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@51 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@48 ($generated@@51 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@51 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@117 Int) ($generated@@118 T@U) ) (! (= ($generated@@61 ($generated@@38 $generated@@117 $generated@@118)) $generated@@6)
 :pattern ( ($generated@@38 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 Int) ($generated@@120 T@U) ) (! (= ($generated@@37 ($generated@@38 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@38 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@121 Int) ($generated@@122 T@U) ) (! (= ($generated@@34 ($generated@@38 $generated@@121 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@38 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 ($generated@@46 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@46 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@49 $generated@@126 ($generated@@52 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@52 $generated@@126 $generated@@125))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (< ($generated@@127 $generated@@129) ($generated@@128 ($generated@@51 $generated@@129 $generated@@130)))
 :pattern ( ($generated@@51 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@128 $generated@@132) ($generated@@128 ($generated@@51 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@51 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 Int) ($generated@@134 T@U) ) (! (< ($generated@@128 $generated@@134) ($generated@@128 ($generated@@38 $generated@@133 $generated@@134)))
 :pattern ( ($generated@@38 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@135) $generated@@136) ($generated@@26 $generated@@135 $generated@@136))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@39 ($generated@@27 $generated@@137) $generated@@138) ($generated@@39 $generated@@137 $generated@@138))
 :pattern ( ($generated@@39 ($generated@@27 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@65 $generated@@141) (and ($generated@@83 $generated@@139) ($generated@@64 $generated@@29 $generated@@139 ($generated@@46 $generated@@140) $generated@@141))) ($generated@@95 ($generated@@50 $generated@@139) $generated@@140 $generated@@141))
 :pattern ( ($generated@@95 ($generated@@50 $generated@@139) $generated@@140 $generated@@141))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@142 $generated@@153 $generated@@154 $generated@@155 ($generated@@149 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@158 $generated@@159) $generated@@156)
 :weight 0
)) (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (or (= $generated@@165 $generated@@167) (= ($generated@@142 $generated@@160 $generated@@161 $generated@@162 ($generated@@149 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@167 $generated@@168) ($generated@@142 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@167 $generated@@168)))
 :weight 0
)) (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@175 $generated@@177) (= ($generated@@142 $generated@@169 $generated@@170 $generated@@171 ($generated@@149 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@142 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)))) (= ($generated@@9 $generated@@143) 4)) (= ($generated@@9 $generated@@144) 5)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@146 $generated@@178 $generated@@179 ($generated@@150 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@180) $generated@@182) $generated@@180)
 :weight 0
))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@187 $generated@@188) (= ($generated@@146 $generated@@183 $generated@@184 ($generated@@150 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@188) ($generated@@146 $generated@@183 $generated@@184 $generated@@186 $generated@@188)))
 :weight 0
))) (= ($generated@@9 $generated@@147) 6)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (= ($generated@@9 ($generated@@148 $generated@@189 $generated@@190)) 7))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ) (! (= ($generated@@151 ($generated@@148 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@148 $generated@@191 $generated@@192))
))) (forall (($generated@@193 T@T) ($generated@@194 T@T) ) (! (= ($generated@@152 ($generated@@148 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@148 $generated@@193 $generated@@194))
))))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 Bool) ($generated@@199 T@U) ($generated@@200 T@U) ) (! (= ($generated@@14 ($generated@@142 $generated@@143 $generated@@144 $generated@@10 ($generated@@145 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))  (=> (and (or (not (= $generated@@199 $generated@@195)) (not true)) ($generated@@14 ($generated@@49 $generated@@10 ($generated@@146 $generated@@144 $generated@@147 ($generated@@146 $generated@@143 ($generated@@148 $generated@@144 $generated@@147) $generated@@196 $generated@@199) $generated@@197)))) $generated@@198))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144 $generated@@10 ($generated@@145 $generated@@195 $generated@@196 $generated@@197 $generated@@198) $generated@@199 $generated@@200))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (or ($generated@@35 $generated@@202) (and (< 2 $generated@@25) ($generated@@31 $generated@@29 $generated@@202 ($generated@@46 $generated@@32)))) ($generated@@31 $generated@@29 ($generated@@39 $generated@@201 $generated@@202) ($generated@@46 $generated@@32)))
 :pattern ( ($generated@@39 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@65 $generated@@204) (and ($generated@@33 $generated@@203) ($generated@@64 $generated@@29 $generated@@203 $generated@@32 $generated@@204))) ($generated@@64 $generated@@11 ($generated@@15 ($generated@@37 $generated@@203)) $generated $generated@@204))
 :pattern ( ($generated@@64 $generated@@11 ($generated@@15 ($generated@@37 $generated@@203)) $generated $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ) (! (= ($generated@@127 ($generated@@52 $generated@@29 $generated@@205)) ($generated@@128 $generated@@205))
 :pattern ( ($generated@@127 ($generated@@52 $generated@@29 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@78 $generated@@207 ($generated@@46 $generated@@206)) (and (= ($generated@@52 $generated@@29 ($generated@@49 $generated@@29 $generated@@207)) $generated@@207) ($generated@@31 $generated@@29 ($generated@@49 $generated@@29 $generated@@207) ($generated@@46 $generated@@206))))
 :pattern ( ($generated@@78 $generated@@207 ($generated@@46 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and ($generated@@65 $generated@@210) (and ($generated@@83 $generated@@208) ($generated@@64 $generated@@29 $generated@@208 ($generated@@46 $generated@@209) $generated@@210))) ($generated@@64 $generated@@29 ($generated@@48 $generated@@208) ($generated@@46 $generated@@209) $generated@@210))
 :pattern ( ($generated@@64 $generated@@29 ($generated@@48 $generated@@208) ($generated@@46 $generated@@209) $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@65 $generated@@212) ($generated@@31 $generated@@29 $generated@@211 $generated@@32)) ($generated@@64 $generated@@29 $generated@@211 $generated@@32 $generated@@212))
 :pattern ( ($generated@@64 $generated@@29 $generated@@211 $generated@@32 $generated@@212))
)))
(assert (= ($generated@@45 $generated@@32) $generated@@2))
(assert (= ($generated@@100 $generated@@32) $generated@@7))
(assert (= $generated@@62 ($generated@@28 $generated@@29 $generated@@62)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (! (= ($generated@@51 ($generated@@28 $generated@@147 $generated@@213) ($generated@@28 $generated@@29 $generated@@214)) ($generated@@28 $generated@@29 ($generated@@51 $generated@@213 $generated@@214)))
 :pattern ( ($generated@@51 ($generated@@28 $generated@@147 $generated@@213) ($generated@@28 $generated@@29 $generated@@214)))
)))
(assert (forall (($generated@@215 Int) ($generated@@216 T@U) ) (! (= ($generated@@38 ($generated@@36 $generated@@215) ($generated@@28 $generated@@29 $generated@@216)) ($generated@@28 $generated@@29 ($generated@@38 $generated@@215 $generated@@216)))
 :pattern ( ($generated@@38 ($generated@@36 $generated@@215) ($generated@@28 $generated@@29 $generated@@216)))
)))
(assert (forall (($generated@@217 Int) ) (! (= ($generated@@52 $generated@@11 ($generated@@15 ($generated@@36 $generated@@217))) ($generated@@28 $generated@@147 ($generated@@52 $generated@@11 ($generated@@15 $generated@@217))))
 :pattern ( ($generated@@52 $generated@@11 ($generated@@15 ($generated@@36 $generated@@217))))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@T) ) (! (= ($generated@@52 $generated@@219 ($generated@@28 $generated@@219 $generated@@218)) ($generated@@28 $generated@@147 ($generated@@52 $generated@@219 $generated@@218)))
 :pattern ( ($generated@@52 $generated@@219 ($generated@@28 $generated@@219 $generated@@218)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and ($generated@@65 $generated@@221) (and ($generated@@33 $generated@@220) ($generated@@64 $generated@@29 $generated@@220 $generated@@32 $generated@@221))) ($generated@@64 $generated@@29 ($generated@@34 $generated@@220) ($generated@@46 $generated@@32) $generated@@221))
 :pattern ( ($generated@@64 $generated@@29 ($generated@@34 $generated@@220) ($generated@@46 $generated@@32) $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (! ($generated@@64 $generated@@11 $generated@@223 $generated $generated@@222)
 :pattern ( ($generated@@64 $generated@@11 $generated@@223 $generated $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> ($generated@@65 $generated@@227) (= ($generated@@64 $generated@@29 ($generated@@51 $generated@@225 $generated@@226) ($generated@@46 $generated@@224) $generated@@227)  (and ($generated@@95 $generated@@225 $generated@@224 $generated@@227) ($generated@@64 $generated@@29 $generated@@226 ($generated@@46 $generated@@224) $generated@@227))))
 :pattern ( ($generated@@64 $generated@@29 ($generated@@51 $generated@@225 $generated@@226) ($generated@@46 $generated@@224) $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ) (! ($generated@@31 $generated@@11 $generated@@228 $generated)
 :pattern ( ($generated@@31 $generated@@11 $generated@@228 $generated))
)))
(assert  (=> (<= 2 $generated@@25) (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (or ($generated@@30 $generated@@230) (and (< 2 $generated@@25) ($generated@@31 $generated@@29 $generated@@230 $generated@@32))) (and (and ($generated@@33 $generated@@230) (let (($generated@@231 ($generated@@34 $generated@@230)))
 (and ($generated@@33 $generated@@230) ($generated@@35 $generated@@231)))) (= ($generated@@26 ($generated@@27 $generated@@229) $generated@@230) (let (($generated@@232 ($generated@@34 $generated@@230)))
(let (($generated@@233 ($generated@@37 $generated@@230)))
($generated@@38 (+ $generated@@233 1) ($generated@@39 $generated@@229 $generated@@232)))))))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@229) $generated@@230))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () Int)
(declare-fun $generated@@240 () Int)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@245 true))
(let (($generated@@246  (=> (and (= $generated@@234 ($generated@@38 $generated@@235 $generated@@236)) ($generated@@31 $generated@@29 $generated@@236 ($generated@@46 $generated@@32))) (=> (and (and (and (= $generated@@237 $generated@@236) ($generated@@31 $generated@@29 $generated@@237 ($generated@@46 $generated@@32))) (and (= $generated@@238 $generated@@237) (= $generated@@239 $generated@@235))) (and (and ($generated@@31 $generated@@11 ($generated@@15 $generated@@239) $generated) (= $generated@@240 $generated@@239)) (and ($generated@@64 $generated@@29 $generated@@238 ($generated@@46 $generated@@32) $generated@@241) (= (ControlFlow 0 3) (- 0 2))))) (< ($generated@@128 $generated@@238) ($generated@@128 $generated@@234))))))
(let (($generated@@247 true))
(let (($generated@@248  (=> (= $generated@@242 ($generated@@145 $generated@@243 $generated@@241 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 5) 1) $generated@@247) (=> (= (ControlFlow 0 5) 3) $generated@@246)) (=> (= (ControlFlow 0 5) 4) $generated@@245)))))
(let (($generated@@249  (=> (and (and (and ($generated@@65 $generated@@241) ($generated@@244 $generated@@241)) ($generated@@31 $generated@@29 $generated@@234 $generated@@32)) (and (= 2 $generated@@25) (= (ControlFlow 0 6) 5))) $generated@@248)))
$generated@@249))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
