(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 (T@T) Int)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 (Bool) T@U)
(declare-fun $generated@@18 (T@U) Bool)
(declare-fun $generated@@19 (Int) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 (Real) T@U)
(declare-fun $generated@@22 (T@U) Real)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 (T@U T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 () Int)
(declare-fun $generated@@50 (T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@U T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@132 (T@U) Int)
(declare-fun $generated@@145 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@146 () T@T)
(declare-fun $generated@@147 () T@T)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 (T@T T@T) T@T)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@153 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@154 (T@T) T@T)
(declare-fun $generated@@155 (T@T) T@T)
(declare-fun $generated@@204 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@205 (T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@13 $generated@@14) 0) (= ($generated@@13 $generated@@15) 1)) (= ($generated@@13 $generated@@16) 2)) (forall (($generated@@23 Bool) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Int) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Real) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12)
)
(assert (= ($generated@@13 $generated@@30) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@31 $generated@@34 $generated@@35) $generated@@32)  (and ($generated@@29 $generated@@30 $generated@@34 $generated@@33) ($generated@@29 $generated@@30 $generated@@35 $generated@@32)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@31 $generated@@34 $generated@@35) $generated@@32))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@36 $generated@@38 $generated@@39) $generated@@37)  (and ($generated@@29 $generated@@30 $generated@@38 $generated@@33) ($generated@@29 $generated@@30 $generated@@39 $generated@@33)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@36 $generated@@38 $generated@@39) $generated@@37))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@29 $generated@@30 ($generated@@40 $generated@@42 $generated@@43) $generated@@41)  (and ($generated@@29 $generated@@30 $generated@@42 $generated@@37) ($generated@@29 $generated@@30 $generated@@43 $generated@@41)))
 :pattern ( ($generated@@29 $generated@@30 ($generated@@40 $generated@@42 $generated@@43) $generated@@41))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@3))
(assert (= ($generated@@44 $generated@@46) $generated@@7))
(assert (forall (($generated@@48 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@48 $generated@@37) ($generated@@47 $generated@@48))
 :pattern ( ($generated@@47 $generated@@48) ($generated@@29 $generated@@30 $generated@@48 $generated@@37))
)))
(assert ($generated@@29 $generated@@30 $generated@@45 $generated@@32))
(assert ($generated@@29 $generated@@30 $generated@@46 $generated@@41))
(assert  (=> (<= 3 $generated@@49) (forall (($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (!  (=> (or ($generated@@52 $generated@@57 $generated@@58) (and (< 3 $generated@@49) (and ($generated@@29 $generated@@30 $generated@@57 $generated@@32) ($generated@@29 $generated@@30 $generated@@58 $generated@@32)))) (and (=> (not ($generated@@53 $generated@@57)) (let (($generated@@59 ($generated@@54 $generated@@57)))
 (=> (not ($generated@@53 $generated@@58)) (let (($generated@@60 ($generated@@54 $generated@@58)))
($generated@@52 $generated@@59 $generated@@60))))) (= ($generated@@50 ($generated@@51 $generated@@56) $generated@@57 $generated@@58) (ite ($generated@@53 $generated@@57) $generated@@46 (let (($generated@@61 ($generated@@54 $generated@@57)))
(let (($generated@@62 ($generated@@55 $generated@@57)))
(ite ($generated@@53 $generated@@58) $generated@@46 (let (($generated@@63 ($generated@@54 $generated@@58)))
(let (($generated@@64 ($generated@@55 $generated@@58)))
($generated@@40 ($generated@@36 $generated@@62 $generated@@64) ($generated@@50 $generated@@56 $generated@@61 $generated@@63)))))))))))
 :pattern ( ($generated@@50 ($generated@@51 $generated@@56) $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@53 $generated@@68) (= ($generated@@44 $generated@@68) $generated@@3))
 :pattern ( ($generated@@53 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@44 $generated@@70) $generated@@4))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@47 $generated@@71) (= ($generated@@44 $generated@@71) $generated@@5))
 :pattern ( ($generated@@47 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@72 $generated@@73) (= ($generated@@44 $generated@@73) $generated@@7))
 :pattern ( ($generated@@72 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@74 $generated@@75) (= ($generated@@44 $generated@@75) $generated@@8))
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@76 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@76 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@69 $generated@@80) (exists (($generated@@81 T@U) ($generated@@82 T@U) ) (= $generated@@80 ($generated@@31 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@69 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@47 $generated@@83) (exists (($generated@@84 T@U) ($generated@@85 T@U) ) (= $generated@@83 ($generated@@36 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@47 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@74 $generated@@86) (exists (($generated@@87 T@U) ($generated@@88 T@U) ) (= $generated@@86 ($generated@@40 $generated@@87 $generated@@88))))
 :pattern ( ($generated@@74 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@53 $generated@@89) (= $generated@@89 $generated@@45))
 :pattern ( ($generated@@53 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (!  (=> ($generated@@72 $generated@@90) (= $generated@@90 $generated@@46))
 :pattern ( ($generated@@72 $generated@@90))
)))
(assert  (=> (<= 3 $generated@@49) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@52 $generated@@92 $generated@@93) (and (< 3 $generated@@49) (and ($generated@@29 $generated@@30 $generated@@92 $generated@@32) ($generated@@29 $generated@@30 $generated@@93 $generated@@32)))) ($generated@@29 $generated@@30 ($generated@@50 $generated@@91 $generated@@92 $generated@@93) $generated@@41))
 :pattern ( ($generated@@50 $generated@@91 $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@50 ($generated@@51 $generated@@94) $generated@@95 $generated@@96) ($generated@@50 $generated@@94 $generated@@95 $generated@@96))
 :pattern ( ($generated@@50 ($generated@@51 $generated@@94) $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@97 $generated@@32) (or ($generated@@53 $generated@@97) ($generated@@69 $generated@@97)))
 :pattern ( ($generated@@69 $generated@@97) ($generated@@29 $generated@@30 $generated@@97 $generated@@32))
 :pattern ( ($generated@@53 $generated@@97) ($generated@@29 $generated@@30 $generated@@97 $generated@@32))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@29 $generated@@30 $generated@@98 $generated@@41) (or ($generated@@72 $generated@@98) ($generated@@74 $generated@@98)))
 :pattern ( ($generated@@74 $generated@@98) ($generated@@29 $generated@@30 $generated@@98 $generated@@41))
 :pattern ( ($generated@@72 $generated@@98) ($generated@@29 $generated@@30 $generated@@98 $generated@@41))
)))
(assert  (=> (<= 3 $generated@@49) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@52 ($generated@@65 $generated@@30 $generated@@100) ($generated@@65 $generated@@30 $generated@@101)) (and (< 3 $generated@@49) (and ($generated@@29 $generated@@30 $generated@@100 $generated@@32) ($generated@@29 $generated@@30 $generated@@101 $generated@@32)))) (and (=> (not ($generated@@18 ($generated@@65 $generated@@14 ($generated@@17 ($generated@@53 ($generated@@65 $generated@@30 $generated@@100)))))) (let (($generated@@102 ($generated@@65 $generated@@30 ($generated@@54 ($generated@@65 $generated@@30 $generated@@100)))))
 (=> (not ($generated@@18 ($generated@@65 $generated@@14 ($generated@@17 ($generated@@53 ($generated@@65 $generated@@30 $generated@@101)))))) (let (($generated@@103 ($generated@@65 $generated@@30 ($generated@@54 ($generated@@65 $generated@@30 $generated@@101)))))
($generated@@52 $generated@@102 $generated@@103))))) (= ($generated@@50 ($generated@@51 $generated@@99) ($generated@@65 $generated@@30 $generated@@100) ($generated@@65 $generated@@30 $generated@@101)) (ite ($generated@@53 ($generated@@65 $generated@@30 $generated@@100)) $generated@@46 (let (($generated@@104 ($generated@@65 $generated@@30 ($generated@@54 ($generated@@65 $generated@@30 $generated@@100)))))
(let (($generated@@105 ($generated@@65 $generated@@30 ($generated@@55 ($generated@@65 $generated@@30 $generated@@100)))))
(ite ($generated@@53 ($generated@@65 $generated@@30 $generated@@101)) $generated@@46 (let (($generated@@106 ($generated@@65 $generated@@30 ($generated@@54 ($generated@@65 $generated@@30 $generated@@101)))))
(let (($generated@@107 ($generated@@65 $generated@@30 ($generated@@55 ($generated@@65 $generated@@30 $generated@@101)))))
($generated@@65 $generated@@30 ($generated@@40 ($generated@@65 $generated@@30 ($generated@@36 $generated@@105 $generated@@107)) ($generated@@65 $generated@@30 ($generated@@50 ($generated@@51 $generated@@99) $generated@@104 $generated@@106)))))))))))))
 :weight 3
 :pattern ( ($generated@@50 ($generated@@51 $generated@@99) ($generated@@65 $generated@@30 $generated@@100) ($generated@@65 $generated@@30 $generated@@101)))
))))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@44 ($generated@@31 $generated@@108 $generated@@109)) $generated@@4)
 :pattern ( ($generated@@31 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@55 ($generated@@31 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@31 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@54 ($generated@@31 $generated@@112 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@31 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@44 ($generated@@36 $generated@@114 $generated@@115)) $generated@@5)
 :pattern ( ($generated@@36 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@116 ($generated@@36 $generated@@117 $generated@@118)) $generated@@117)
 :pattern ( ($generated@@36 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@119 ($generated@@36 $generated@@120 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@36 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@44 ($generated@@40 $generated@@122 $generated@@123)) $generated@@8)
 :pattern ( ($generated@@40 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@124 ($generated@@40 $generated@@125 $generated@@126)) $generated@@125)
 :pattern ( ($generated@@40 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@127 ($generated@@40 $generated@@128 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@40 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@76 $generated@@131 ($generated@@77 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@77 $generated@@131 $generated@@130))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (< ($generated@@132 $generated@@133) ($generated@@132 ($generated@@31 $generated@@133 $generated@@134)))
 :pattern ( ($generated@@31 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (< ($generated@@132 $generated@@136) ($generated@@132 ($generated@@31 $generated@@135 $generated@@136)))
 :pattern ( ($generated@@31 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (< ($generated@@132 $generated@@137) ($generated@@132 ($generated@@36 $generated@@137 $generated@@138)))
 :pattern ( ($generated@@36 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (< ($generated@@132 $generated@@140) ($generated@@132 ($generated@@36 $generated@@139 $generated@@140)))
 :pattern ( ($generated@@36 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (< ($generated@@132 $generated@@141) ($generated@@132 ($generated@@40 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@40 $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (< ($generated@@132 $generated@@144) ($generated@@132 ($generated@@40 $generated@@143 $generated@@144)))
 :pattern ( ($generated@@40 $generated@@143 $generated@@144))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@156 T@T) ($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@145 $generated@@156 $generated@@157 $generated@@158 ($generated@@152 $generated@@156 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@162 $generated@@159) $generated@@161 $generated@@162) $generated@@159)
 :weight 0
)) (and (forall (($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (or (= $generated@@168 $generated@@170) (= ($generated@@145 $generated@@163 $generated@@164 $generated@@165 ($generated@@152 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@169 $generated@@166) $generated@@170 $generated@@171) ($generated@@145 $generated@@163 $generated@@164 $generated@@165 $generated@@167 $generated@@170 $generated@@171)))
 :weight 0
)) (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@178 $generated@@180) (= ($generated@@145 $generated@@172 $generated@@173 $generated@@174 ($generated@@152 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@145 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)))) (= ($generated@@13 $generated@@146) 4)) (= ($generated@@13 $generated@@147) 5)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@149 $generated@@181 $generated@@182 ($generated@@153 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@183) $generated@@185) $generated@@183)
 :weight 0
))) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@190 $generated@@191) (= ($generated@@149 $generated@@186 $generated@@187 ($generated@@153 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@188) $generated@@191) ($generated@@149 $generated@@186 $generated@@187 $generated@@189 $generated@@191)))
 :weight 0
))) (= ($generated@@13 $generated@@150) 6)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (= ($generated@@13 ($generated@@151 $generated@@192 $generated@@193)) 7))) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (! (= ($generated@@154 ($generated@@151 $generated@@194 $generated@@195)) $generated@@194)
 :pattern ( ($generated@@151 $generated@@194 $generated@@195))
))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@155 ($generated@@151 $generated@@196 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@151 $generated@@196 $generated@@197))
))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@18 ($generated@@145 $generated@@146 $generated@@147 $generated@@14 ($generated@@148 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (or (not (= $generated@@202 $generated@@198)) (not true)) ($generated@@18 ($generated@@76 $generated@@14 ($generated@@149 $generated@@147 $generated@@150 ($generated@@149 $generated@@146 ($generated@@151 $generated@@147 $generated@@150) $generated@@199 $generated@@202) $generated@@200)))) $generated@@201))
 :pattern ( ($generated@@145 $generated@@146 $generated@@147 $generated@@14 ($generated@@148 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@205 $generated@@207) ($generated@@29 $generated@@30 $generated@@206 $generated@@33)) ($generated@@204 $generated@@30 $generated@@206 $generated@@33 $generated@@207))
 :pattern ( ($generated@@204 $generated@@30 $generated@@206 $generated@@33 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and ($generated@@205 $generated@@209) ($generated@@29 $generated@@30 $generated@@208 $generated@@32)) ($generated@@204 $generated@@30 $generated@@208 $generated@@32 $generated@@209))
 :pattern ( ($generated@@204 $generated@@30 $generated@@208 $generated@@32 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@205 $generated@@211) ($generated@@29 $generated@@30 $generated@@210 $generated@@37)) ($generated@@204 $generated@@30 $generated@@210 $generated@@37 $generated@@211))
 :pattern ( ($generated@@204 $generated@@30 $generated@@210 $generated@@37 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@205 $generated@@213) ($generated@@29 $generated@@30 $generated@@212 $generated@@41)) ($generated@@204 $generated@@30 $generated@@212 $generated@@41 $generated@@213))
 :pattern ( ($generated@@204 $generated@@30 $generated@@212 $generated@@41 $generated@@213))
)))
(assert (= ($generated@@214 $generated@@33) $generated@@0))
(assert (= ($generated@@215 $generated@@33) $generated@@9))
(assert (= ($generated@@214 $generated@@32) $generated@@1))
(assert (= ($generated@@215 $generated@@32) $generated@@10))
(assert (= ($generated@@214 $generated@@41) $generated@@2))
(assert (= ($generated@@215 $generated@@41) $generated@@11))
(assert (= ($generated@@214 $generated@@37) $generated@@6))
(assert (= ($generated@@215 $generated@@37) $generated@@12))
(assert (= $generated@@45 ($generated@@65 $generated@@30 $generated@@45)))
(assert (= $generated@@46 ($generated@@65 $generated@@30 $generated@@46)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@205 $generated@@217) (and ($generated@@69 $generated@@216) ($generated@@204 $generated@@30 $generated@@216 $generated@@32 $generated@@217))) ($generated@@204 $generated@@30 ($generated@@55 $generated@@216) $generated@@33 $generated@@217))
 :pattern ( ($generated@@204 $generated@@30 ($generated@@55 $generated@@216) $generated@@33 $generated@@217))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@205 $generated@@219) (and ($generated@@69 $generated@@218) ($generated@@204 $generated@@30 $generated@@218 $generated@@32 $generated@@219))) ($generated@@204 $generated@@30 ($generated@@54 $generated@@218) $generated@@32 $generated@@219))
 :pattern ( ($generated@@204 $generated@@30 ($generated@@54 $generated@@218) $generated@@32 $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and ($generated@@205 $generated@@221) (and ($generated@@47 $generated@@220) ($generated@@204 $generated@@30 $generated@@220 $generated@@37 $generated@@221))) ($generated@@204 $generated@@30 ($generated@@116 $generated@@220) $generated@@33 $generated@@221))
 :pattern ( ($generated@@204 $generated@@30 ($generated@@116 $generated@@220) $generated@@33 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (and ($generated@@205 $generated@@223) (and ($generated@@47 $generated@@222) ($generated@@204 $generated@@30 $generated@@222 $generated@@37 $generated@@223))) ($generated@@204 $generated@@30 ($generated@@119 $generated@@222) $generated@@33 $generated@@223))
 :pattern ( ($generated@@204 $generated@@30 ($generated@@119 $generated@@222) $generated@@33 $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@205 $generated@@225) (and ($generated@@74 $generated@@224) ($generated@@204 $generated@@30 $generated@@224 $generated@@41 $generated@@225))) ($generated@@204 $generated@@30 ($generated@@124 $generated@@224) $generated@@37 $generated@@225))
 :pattern ( ($generated@@204 $generated@@30 ($generated@@124 $generated@@224) $generated@@37 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@205 $generated@@227) (and ($generated@@74 $generated@@226) ($generated@@204 $generated@@30 $generated@@226 $generated@@41 $generated@@227))) ($generated@@204 $generated@@30 ($generated@@127 $generated@@226) $generated@@41 $generated@@227))
 :pattern ( ($generated@@204 $generated@@30 ($generated@@127 $generated@@226) $generated@@41 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (! (= ($generated@@31 ($generated@@65 $generated@@30 $generated@@228) ($generated@@65 $generated@@30 $generated@@229)) ($generated@@65 $generated@@30 ($generated@@31 $generated@@228 $generated@@229)))
 :pattern ( ($generated@@31 ($generated@@65 $generated@@30 $generated@@228) ($generated@@65 $generated@@30 $generated@@229)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@36 ($generated@@65 $generated@@30 $generated@@230) ($generated@@65 $generated@@30 $generated@@231)) ($generated@@65 $generated@@30 ($generated@@36 $generated@@230 $generated@@231)))
 :pattern ( ($generated@@36 ($generated@@65 $generated@@30 $generated@@230) ($generated@@65 $generated@@30 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! (= ($generated@@40 ($generated@@65 $generated@@30 $generated@@232) ($generated@@65 $generated@@30 $generated@@233)) ($generated@@65 $generated@@30 ($generated@@40 $generated@@232 $generated@@233)))
 :pattern ( ($generated@@40 ($generated@@65 $generated@@30 $generated@@232) ($generated@@65 $generated@@30 $generated@@233)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@T) ) (! (= ($generated@@77 $generated@@235 ($generated@@65 $generated@@235 $generated@@234)) ($generated@@65 $generated@@150 ($generated@@77 $generated@@235 $generated@@234)))
 :pattern ( ($generated@@77 $generated@@235 ($generated@@65 $generated@@235 $generated@@234)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@254 true))
(let (($generated@@255  (=> (and (and (= $generated@@236 ($generated@@31 $generated@@237 $generated@@238)) ($generated@@29 $generated@@30 $generated@@237 $generated@@33)) (and ($generated@@29 $generated@@30 $generated@@238 $generated@@32) (= $generated@@239 $generated@@238))) (=> (and (and (and ($generated@@29 $generated@@30 $generated@@239 $generated@@32) (= $generated@@240 $generated@@239)) (and (= $generated@@241 $generated@@237) ($generated@@29 $generated@@30 $generated@@241 $generated@@33))) (and (and (= $generated@@242 $generated@@241) ($generated@@204 $generated@@30 $generated@@243 $generated@@32 $generated@@244)) (and ($generated@@204 $generated@@30 $generated@@240 $generated@@32 $generated@@244) (= (ControlFlow 0 6) (- 0 5))))) (or (< ($generated@@132 $generated@@243) ($generated@@132 $generated@@245)) (and (= ($generated@@132 $generated@@243) ($generated@@132 $generated@@245)) (< ($generated@@132 $generated@@240) ($generated@@132 $generated@@236))))))))
(let (($generated@@256  (=> (or (not (= $generated@@236 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@255) (=> (= (ControlFlow 0 8) 7) $generated@@254)))))
(let (($generated@@257 true))
(let (($generated@@258  (=> (= $generated@@245 ($generated@@31 $generated@@246 $generated@@247)) (=> (and (and (and ($generated@@29 $generated@@30 $generated@@246 $generated@@33) ($generated@@29 $generated@@30 $generated@@247 $generated@@32)) (and (= $generated@@248 $generated@@247) ($generated@@29 $generated@@30 $generated@@248 $generated@@32))) (and (and (= $generated@@243 $generated@@248) (= $generated@@249 $generated@@246)) (and ($generated@@29 $generated@@30 $generated@@249 $generated@@33) (= $generated@@250 $generated@@249)))) (and (=> (= (ControlFlow 0 9) 4) $generated@@257) (=> (= (ControlFlow 0 9) 8) $generated@@256))))))
(let (($generated@@259 true))
(let (($generated@@260  (=> (or (not (= $generated@@245 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 10) 9) $generated@@258) (=> (= (ControlFlow 0 10) 3) $generated@@259)))))
(let (($generated@@261 true))
(let (($generated@@262 true))
(let (($generated@@263  (=> (= $generated@@251 ($generated@@148 $generated@@252 $generated@@244 $generated false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@262) (=> (= (ControlFlow 0 11) 2) $generated@@261)) (=> (= (ControlFlow 0 11) 10) $generated@@260)))))
(let (($generated@@264  (=> (and ($generated@@205 $generated@@244) ($generated@@253 $generated@@244)) (=> (and (and ($generated@@29 $generated@@30 $generated@@245 $generated@@32) ($generated@@29 $generated@@30 $generated@@236 $generated@@32)) (and (= 3 $generated@@49) (= (ControlFlow 0 12) 11))) $generated@@263))))
$generated@@264))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
