(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@36 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) T@U)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 () T@T)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U Int) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@129 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@130 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@1) 0))
(assert (= ($generated@@25 $generated@@1) $generated@@2))
(assert (forall (($generated@@28 T@U) ) (!  (not ($generated@@26 $generated@@27 $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28))
)))
(assert (= ($generated@@29 $generated@@27) 0))
(assert (= ($generated@@8 $generated@@31) 3))
(assert (forall (($generated@@35 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@35 $generated@@32)  (or (= $generated@@35 $generated@@33) (= ($generated@@34 $generated@@35) $generated@@32)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 $generated@@32))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39) ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@36 $generated@@31 $generated@@38 $generated@@32 $generated@@39))
)))
(assert (= ($generated@@24 $generated@@40) 0))
(assert (= ($generated@@41 $generated@@5 $generated@@7) $generated@@40))
(assert  (not ($generated@@42 $generated@@40)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@8 $generated@@45) 4)) (= ($generated@@8 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@8 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@36 $generated@@31 $generated@@68 $generated@@32 $generated@@69)  (or (= $generated@@68 $generated@@33) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@68) $generated@@1)))))
 :pattern ( ($generated@@36 $generated@@31 $generated@@68 $generated@@32 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@43 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@43 $generated@@72 $generated@@71))
)))
(assert (= ($generated@@8 $generated@@73) 7))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@30 $generated@@73 $generated@@77 ($generated@@74 $generated@@78)) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@75 $generated@@77 $generated@@79) ($generated@@76 $generated@@79 $generated@@78))
 :pattern ( ($generated@@75 $generated@@77 $generated@@79))
)))
 :pattern ( ($generated@@30 $generated@@73 $generated@@77 ($generated@@74 $generated@@78)))
)))
(assert ($generated@@42 $generated@@1))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@80 ($generated@@70 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@36 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@80 ($generated@@70 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@76 $generated@@85 $generated@@37) (and (= ($generated@@70 $generated@@31 ($generated@@43 $generated@@31 $generated@@85)) $generated@@85) ($generated@@30 $generated@@31 ($generated@@43 $generated@@31 $generated@@85) $generated@@37)))
 :pattern ( ($generated@@76 $generated@@85 $generated@@37))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@76 $generated@@86 $generated@@32) (and (= ($generated@@70 $generated@@31 ($generated@@43 $generated@@31 $generated@@86)) $generated@@86) ($generated@@30 $generated@@31 ($generated@@43 $generated@@31 $generated@@86) $generated@@32)))
 :pattern ( ($generated@@76 $generated@@86 $generated@@32))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@87 $generated@@37)  (and ($generated@@30 $generated@@31 $generated@@87 $generated@@32) (or (not (= $generated@@87 $generated@@33)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@87 $generated@@37))
 :pattern ( ($generated@@30 $generated@@31 $generated@@87 $generated@@32))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@26 $generated@@89 $generated@@90) (exists (($generated@@91 Int) ) (!  (and (and (<= 0 $generated@@91) (< $generated@@91 ($generated@@29 $generated@@89))) (= ($generated@@88 $generated@@89 $generated@@91) $generated@@90))
 :pattern ( ($generated@@88 $generated@@89 $generated@@91))
)))
 :pattern ( ($generated@@26 $generated@@89 $generated@@90))
)))
(assert (= ($generated@@8 $generated@@92) 8))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (and ($generated@@93 $generated@@95) (and (or (not (= $generated@@96 $generated@@33)) (not true)) (= ($generated@@34 $generated@@96) $generated@@32))) ($generated@@30 $generated@@92 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@95 $generated@@96) $generated@@40)) ($generated@@94 $generated@@32)))
 :pattern ( ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@95 $generated@@96) $generated@@40)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (and (and ($generated@@93 $generated@@97) (and (or (not (= $generated@@98 $generated@@33)) (not true)) (= ($generated@@34 $generated@@98) $generated@@32))) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@97 $generated@@98) $generated@@1)))) ($generated@@36 $generated@@92 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@97 $generated@@98) $generated@@40)) ($generated@@94 $generated@@32) $generated@@97))
 :pattern ( ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@97 $generated@@98) $generated@@40)))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (and (= ($generated@@99 ($generated@@41 $generated@@100 $generated@@101)) $generated@@100) (= ($generated@@25 ($generated@@41 $generated@@100 $generated@@101)) $generated@@101))
 :pattern ( ($generated@@41 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@76 ($generated@@70 $generated@@104 $generated@@102) $generated@@103) ($generated@@30 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@76 ($generated@@70 $generated@@104 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (<= 0 ($generated@@29 $generated@@105))
 :pattern ( ($generated@@29 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@36 $generated@@73 $generated@@106 ($generated@@74 $generated@@107) $generated@@108) (forall (($generated@@109 T@U) ) (!  (=> ($generated@@75 $generated@@106 $generated@@109) ($generated@@80 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@75 $generated@@106 $generated@@109))
)))
 :pattern ( ($generated@@36 $generated@@73 $generated@@106 ($generated@@74 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@36 $generated@@92 $generated@@110 ($generated@@94 $generated@@111) $generated@@112) (forall (($generated@@113 Int) ) (!  (=> (and (<= 0 $generated@@113) (< $generated@@113 ($generated@@29 $generated@@110))) ($generated@@80 ($generated@@88 $generated@@110 $generated@@113) $generated@@111 $generated@@112))
 :pattern ( ($generated@@88 $generated@@110 $generated@@113))
)))
 :pattern ( ($generated@@36 $generated@@92 $generated@@110 ($generated@@94 $generated@@111) $generated@@112))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@114 ($generated@@74 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@74 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@116 ($generated@@74 $generated@@117)) $generated)
 :pattern ( ($generated@@74 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ) (! (= ($generated@@118 ($generated@@94 $generated@@119)) $generated@@119)
 :pattern ( ($generated@@94 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@116 ($generated@@94 $generated@@120)) $generated@@0)
 :pattern ( ($generated@@94 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@43 $generated@@122 ($generated@@70 $generated@@122 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@70 $generated@@122 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> ($generated@@76 $generated@@123 ($generated@@74 $generated@@124)) (and (= ($generated@@70 $generated@@73 ($generated@@43 $generated@@73 $generated@@123)) $generated@@123) ($generated@@30 $generated@@73 ($generated@@43 $generated@@73 $generated@@123) ($generated@@74 $generated@@124))))
 :pattern ( ($generated@@76 $generated@@123 ($generated@@74 $generated@@124)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@76 $generated@@125 ($generated@@94 $generated@@126)) (and (= ($generated@@70 $generated@@92 ($generated@@43 $generated@@92 $generated@@125)) $generated@@125) ($generated@@30 $generated@@92 ($generated@@43 $generated@@92 $generated@@125) ($generated@@94 $generated@@126))))
 :pattern ( ($generated@@76 $generated@@125 ($generated@@94 $generated@@126)))
)))
(assert (= ($generated@@116 $generated@@37) $generated@@3))
(assert (= ($generated@@127 $generated@@37) $generated@@6))
(assert (= ($generated@@116 $generated@@32) $generated@@4))
(assert (= ($generated@@127 $generated@@32) $generated@@6))
(assert (forall (($generated@@128 T@U) ) (!  (=> (= ($generated@@29 $generated@@128) 0) (= $generated@@128 $generated@@27))
 :pattern ( ($generated@@29 $generated@@128))
)))
(assert  (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@129 $generated@@132 $generated@@133 $generated@@134 ($generated@@131 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@137 $generated@@138) $generated@@135)
 :weight 0
)) (and (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@129 $generated@@139 $generated@@140 $generated@@141 ($generated@@131 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@129 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@129 $generated@@148 $generated@@149 $generated@@150 ($generated@@131 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151) $generated@@155 $generated@@156) ($generated@@129 $generated@@148 $generated@@149 $generated@@150 $generated@@152 $generated@@155 $generated@@156)))
 :weight 0
)))))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (! (= ($generated@@13 ($generated@@129 $generated@@31 $generated@@45 $generated@@9 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))  (=> (and (or (not (= $generated@@161 $generated@@157)) (not true)) ($generated@@13 ($generated@@43 $generated@@9 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@158 $generated@@161) $generated@@159)))) ($generated@@75 $generated@@160 ($generated@@70 $generated@@31 $generated@@161))))
 :pattern ( ($generated@@129 $generated@@31 $generated@@45 $generated@@9 ($generated@@130 $generated@@157 $generated@@158 $generated@@159 $generated@@160) $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@30 $generated@@92 $generated@@163 ($generated@@94 $generated@@164)) (forall (($generated@@165 Int) ) (!  (=> (and (<= 0 $generated@@165) (< $generated@@165 ($generated@@29 $generated@@163))) ($generated@@76 ($generated@@88 $generated@@163 $generated@@165) $generated@@164))
 :pattern ( ($generated@@88 $generated@@163 $generated@@165))
)))
 :pattern ( ($generated@@30 $generated@@92 $generated@@163 ($generated@@94 $generated@@164)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () Int)
(declare-fun $generated@@174 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@175  (=> (forall (($generated@@176 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@176 $generated@@37) (=> ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@176)) (forall (($generated@@177 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@177 $generated@@32) (=> ($generated@@26 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@176) $generated@@40)) ($generated@@70 $generated@@31 $generated@@177)) (or (= $generated@@177 $generated@@33) ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@177)))))
 :pattern ( ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@177)))
 :pattern ( ($generated@@26 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@176) $generated@@40)) ($generated@@70 $generated@@31 $generated@@177)))
))))
 :pattern ( ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@176) $generated@@40)))
 :pattern ( ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@176)))
)) (=> (and (and ($generated@@30 $generated@@31 $generated@@168 $generated@@37) ($generated@@36 $generated@@31 $generated@@168 $generated@@37 $generated@@166)) (and ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@168)) (= (ControlFlow 0 2) (- 0 1)))) (or (not (= $generated@@168 $generated@@33)) (not true))))))
(let (($generated@@178  (=> (and (forall (($generated@@179 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@179 $generated@@32) (=> ($generated@@26 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@169) $generated@@40)) ($generated@@70 $generated@@31 $generated@@179)) (or (= $generated@@179 $generated@@33) ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@179)))))
 :pattern ( ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@179)))
 :pattern ( ($generated@@26 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@169) $generated@@40)) ($generated@@70 $generated@@31 $generated@@179)))
)) (= (ControlFlow 0 4) 2)) $generated@@175)))
(let (($generated@@180  (=> (or (not (= $generated@@170 $generated@@33)) (not true)) (=> (and ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@170)) (= (ControlFlow 0 7) 4)) $generated@@178))))
(let (($generated@@181  (=> (and (= $generated@@170 $generated@@33) (= (ControlFlow 0 6) 4)) $generated@@178)))
(let (($generated@@182  (=> (and (or (not (= $generated@@169 $generated@@33)) (not true)) ($generated@@26 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@169) $generated@@40)) ($generated@@70 $generated@@31 $generated@@170))) (and (=> (= (ControlFlow 0 8) 6) $generated@@181) (=> (= (ControlFlow 0 8) 7) $generated@@180)))))
(let (($generated@@183  (=> (and (=> ($generated@@26 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@169) $generated@@40)) ($generated@@70 $generated@@31 $generated@@170)) (or (= $generated@@170 $generated@@33) ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@170)))) (= (ControlFlow 0 5) 4)) $generated@@178)))
(let (($generated@@184  (=> ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@169)) (=> (and ($generated@@30 $generated@@31 $generated@@170 $generated@@32) ($generated@@36 $generated@@31 $generated@@170 $generated@@32 $generated@@166)) (and (=> (= (ControlFlow 0 9) 8) $generated@@182) (=> (= (ControlFlow 0 9) 5) $generated@@183))))))
(let (($generated@@185  (=> (and (=> ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@169)) (forall (($generated@@186 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@186 $generated@@32) (=> ($generated@@26 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@169) $generated@@40)) ($generated@@70 $generated@@31 $generated@@186)) (or (= $generated@@186 $generated@@33) ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@186)))))
 :pattern ( ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@186)))
 :pattern ( ($generated@@26 ($generated@@43 $generated@@92 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@31 ($generated@@47 $generated@@45 $generated@@46) $generated@@166 $generated@@169) $generated@@40)) ($generated@@70 $generated@@31 $generated@@186)))
))) (= (ControlFlow 0 3) 2)) $generated@@175)))
(let (($generated@@187  (=> (and (and ($generated@@93 $generated@@166) ($generated@@171 $generated@@166)) (and ($generated@@30 $generated@@31 $generated@@172 $generated@@37) ($generated@@36 $generated@@31 $generated@@172 $generated@@37 $generated@@166))) (=> (and (and (and ($generated@@30 $generated@@73 $generated@@167 ($generated@@74 $generated@@37)) ($generated@@36 $generated@@73 $generated@@167 ($generated@@74 $generated@@37) $generated@@166)) (= 4 $generated@@173)) (and (and (= $generated@@174 ($generated@@130 $generated@@33 $generated@@166 $generated@@1 $generated@@167)) ($generated@@75 $generated@@167 ($generated@@70 $generated@@31 $generated@@172))) (and ($generated@@30 $generated@@31 $generated@@169 $generated@@37) ($generated@@36 $generated@@31 $generated@@169 $generated@@37 $generated@@166)))) (and (=> (= (ControlFlow 0 10) 9) $generated@@184) (=> (= (ControlFlow 0 10) 3) $generated@@185))))))
$generated@@187))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
