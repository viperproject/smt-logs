(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@25 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@36 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T T@U T@U) Bool)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@76 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@117 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 () T@T)
(declare-fun $generated@@120 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@121 (T@T T@T) T@T)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@123 (T@T) T@T)
(declare-fun $generated@@124 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ($generated@@21 T@U) ) (!  (=> ($generated@@18 $generated@@19 $generated@@21) ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@21))
 :pattern ( ($generated@@17 $generated@@19 $generated@@20) ($generated@@18 $generated@@19 $generated@@21))
)))
(assert (forall (($generated@@22 T@U) ($generated@@23 T@U) ($generated@@24 T@U) ) (!  (=> ($generated@@18 $generated@@23 $generated@@24) ($generated@@18 ($generated@@17 $generated@@22 $generated@@23) $generated@@24))
 :pattern ( ($generated@@17 $generated@@22 $generated@@23) ($generated@@18 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@26 T@U) ($generated@@27 T@U) ($generated@@28 T@U) ) (!  (=> ($generated@@18 $generated@@27 $generated@@28) (not ($generated@@18 ($generated@@25 $generated@@26 $generated@@27) $generated@@28)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@27) ($generated@@18 $generated@@27 $generated@@28))
)))
(assert ($generated@@29 $generated@@30))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (! (= ($generated@@17 ($generated@@17 $generated@@31 $generated@@32) $generated@@32) ($generated@@17 $generated@@31 $generated@@32))
 :pattern ( ($generated@@17 ($generated@@17 $generated@@31 $generated@@32) $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@18 ($generated@@25 $generated@@33 $generated@@34) $generated@@35)  (and ($generated@@18 $generated@@33 $generated@@35) (not ($generated@@18 $generated@@34 $generated@@35))))
 :pattern ( ($generated@@18 ($generated@@25 $generated@@33 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@T) ) (! (= ($generated@@36 $generated@@38 $generated@@37) $generated@@37)
 :pattern ( ($generated@@36 $generated@@38 $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@39 $generated@@40 $generated@@41) (forall (($generated@@42 T@U) ) (!  (=> ($generated@@18 $generated@@40 $generated@@42) ($generated@@18 $generated@@41 $generated@@42))
 :pattern ( ($generated@@18 $generated@@40 $generated@@42))
 :pattern ( ($generated@@18 $generated@@41 $generated@@42))
)))
 :pattern ( ($generated@@39 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 ($generated@@43 $generated@@46 $generated@@45)) $generated@@45)
 :pattern ( ($generated@@43 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@47 $generated@@48 $generated@@49) (forall (($generated@@50 T@U) ) (!  (or (not ($generated@@18 $generated@@48 $generated@@50)) (not ($generated@@18 $generated@@49 $generated@@50)))
 :pattern ( ($generated@@18 $generated@@48 $generated@@50))
 :pattern ( ($generated@@18 $generated@@49 $generated@@50))
)))
 :pattern ( ($generated@@47 $generated@@48 $generated@@49))
)))
(assert  (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@52 $generated@@55 $generated@@56 ($generated@@54 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@52 $generated@@60 $generated@@61 ($generated@@54 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@1 $generated@@53) 3)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@18 ($generated@@51 $generated@@66) $generated@@67) ($generated@@6 ($generated@@52 $generated@@53 $generated@@2 $generated@@66 $generated@@67)))
 :pattern ( ($generated@@18 ($generated@@51 $generated@@66) $generated@@67))
)))
(assert (= ($generated@@1 $generated@@69) 4))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@68 $generated@@69 $generated@@72 ($generated@@70 $generated@@73)) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@18 $generated@@72 $generated@@74) ($generated@@71 $generated@@74 $generated@@73))
 :pattern ( ($generated@@18 $generated@@72 $generated@@74))
)))
 :pattern ( ($generated@@68 $generated@@69 $generated@@72 ($generated@@70 $generated@@73)))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@75 ($generated@@44 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@76 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@75 ($generated@@44 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@6 ($generated@@52 $generated@@53 $generated@@2 ($generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@87 $generated@@88) $generated@@89)) (exists (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (and (and (and ($generated@@68 $generated@@69 $generated@@90 $generated@@83) ($generated@@68 $generated@@69 $generated@@91 $generated@@84)) (and (and ($generated@@18 $generated@@85 ($generated@@44 $generated@@69 $generated@@90)) ($generated@@39 $generated@@91 $generated@@90)) ($generated@@82 ($generated@@17 $generated@@86 $generated@@91) $generated@@90))) (= $generated@@89 ($generated@@44 $generated@@69 $generated@@91)))
 :pattern ( ($generated@@17 $generated@@87 $generated@@91) ($generated@@18 $generated@@88 ($generated@@44 $generated@@69 $generated@@90)))
 :pattern ( ($generated@@39 $generated@@91 $generated@@90))
)))
 :pattern ( ($generated@@52 $generated@@53 $generated@@2 ($generated@@81 $generated@@83 $generated@@84 $generated@@85 $generated@@86 $generated@@87 $generated@@88) $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@92 $generated@@93) $generated@@94)  (or ($generated@@18 $generated@@92 $generated@@94) ($generated@@18 $generated@@93 $generated@@94)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@92 $generated@@93) $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@47 $generated@@95 $generated@@96) (and (= ($generated@@25 ($generated@@17 $generated@@95 $generated@@96) $generated@@95) $generated@@96) (= ($generated@@25 ($generated@@17 $generated@@95 $generated@@96) $generated@@96) $generated@@95)))
 :pattern ( ($generated@@17 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@82 $generated@@97 $generated@@98) (= $generated@@97 $generated@@98))
 :pattern ( ($generated@@82 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@71 ($generated@@44 $generated@@101 $generated@@99) $generated@@100) ($generated@@68 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@71 ($generated@@44 $generated@@101 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@29 $generated@@102) (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@71 $generated@@104 $generated@@102) ($generated@@75 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@75 $generated@@104 $generated@@102 $generated@@103))
)))
 :pattern ( ($generated@@29 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@76 $generated@@69 $generated@@105 ($generated@@70 $generated@@106) $generated@@107) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@18 $generated@@105 $generated@@108) ($generated@@75 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@18 $generated@@105 $generated@@108))
)))
 :pattern ( ($generated@@76 $generated@@69 $generated@@105 ($generated@@70 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 ($generated@@70 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@70 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 ($generated@@70 $generated@@112)) $generated)
 :pattern ( ($generated@@70 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@43 $generated@@114 ($generated@@44 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@44 $generated@@114 $generated@@113))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@17 $generated@@115 ($generated@@17 $generated@@115 $generated@@116)) ($generated@@17 $generated@@115 $generated@@116))
 :pattern ( ($generated@@17 $generated@@115 ($generated@@17 $generated@@115 $generated@@116)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@117 $generated@@125 $generated@@126 $generated@@127 ($generated@@122 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@130 $generated@@131) $generated@@128)
 :weight 0
)) (and (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@117 $generated@@132 $generated@@133 $generated@@134 ($generated@@122 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@117 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@117 $generated@@141 $generated@@142 $generated@@143 ($generated@@122 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@117 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)))) (= ($generated@@1 $generated@@118) 5)) (= ($generated@@1 $generated@@119) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@1 ($generated@@121 $generated@@150 $generated@@151)) 7))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@123 ($generated@@121 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@121 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@124 ($generated@@121 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@121 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@6 ($generated@@117 $generated@@118 $generated@@119 $generated@@2 ($generated@@120 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@6 ($generated@@43 $generated@@2 ($generated@@52 $generated@@119 $generated@@53 ($generated@@52 $generated@@118 ($generated@@121 $generated@@119 $generated@@53) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@117 $generated@@118 $generated@@119 $generated@@2 ($generated@@120 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@71 $generated@@162 ($generated@@70 $generated@@163)) (and (= ($generated@@44 $generated@@69 ($generated@@43 $generated@@69 $generated@@162)) $generated@@162) ($generated@@68 $generated@@69 ($generated@@43 $generated@@69 $generated@@162) ($generated@@70 $generated@@163))))
 :pattern ( ($generated@@71 $generated@@162 ($generated@@70 $generated@@163)))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@82 $generated@@164 $generated@@165) (forall (($generated@@166 T@U) ) (! (= ($generated@@18 $generated@@164 $generated@@166) ($generated@@18 $generated@@165 $generated@@166))
 :pattern ( ($generated@@18 $generated@@164 $generated@@166))
 :pattern ( ($generated@@18 $generated@@165 $generated@@166))
)))
 :pattern ( ($generated@@82 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@44 $generated@@168 ($generated@@36 $generated@@168 $generated@@167)) ($generated@@36 $generated@@53 ($generated@@44 $generated@@168 $generated@@167)))
 :pattern ( ($generated@@44 $generated@@168 ($generated@@36 $generated@@168 $generated@@167)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 (T@U) Bool)
(declare-fun $generated@@181 (T@U) Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 36) (let (($generated@@185  (=> (= (ControlFlow 0 17) (- 0 16)) (= ($generated@@18 $generated@@169 ($generated@@44 $generated@@69 $generated@@170)) (exists (($generated@@186 T@U) ) (!  (and ($generated@@68 $generated@@69 $generated@@186 ($generated@@70 $generated@@30)) (and (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@186)) ($generated@@39 $generated@@170 $generated@@186)) ($generated@@82 ($generated@@17 $generated@@172 $generated@@170) $generated@@186)))
 :pattern ( ($generated@@39 $generated@@170 $generated@@186))
 :pattern ( ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@186)))
))))))
(let (($generated@@187  (=> (and (not (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@173)) ($generated@@39 $generated@@170 $generated@@173))) (= (ControlFlow 0 20) 17)) $generated@@185)))
(let (($generated@@188  (=> (and (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@173)) ($generated@@39 $generated@@170 $generated@@173)) (= (ControlFlow 0 19) 17)) $generated@@185)))
(let (($generated@@189  (=> (not ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@173))) (and (=> (= (ControlFlow 0 22) 19) $generated@@188) (=> (= (ControlFlow 0 22) 20) $generated@@187)))))
(let (($generated@@190  (=> ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@173)) (and (=> (= (ControlFlow 0 21) 19) $generated@@188) (=> (= (ControlFlow 0 21) 20) $generated@@187)))))
(let (($generated@@191  (=> (and ($generated@@68 $generated@@69 $generated@@173 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@173 ($generated@@70 $generated@@30) $generated@@174)) (and (=> (= (ControlFlow 0 23) 21) $generated@@190) (=> (= (ControlFlow 0 23) 22) $generated@@189)))))
(let (($generated@@192  (=> (and (not (and ($generated@@68 $generated@@69 $generated@@173 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@173 ($generated@@70 $generated@@30) $generated@@174))) (= (ControlFlow 0 18) 17)) $generated@@185)))
(let (($generated@@193  (and (=> (= (ControlFlow 0 24) 23) $generated@@191) (=> (= (ControlFlow 0 24) 18) $generated@@192))))
(let (($generated@@194  (=> (= (ControlFlow 0 9) (- 0 8)) (= (exists (($generated@@195 T@U) ) (!  (and ($generated@@68 $generated@@69 $generated@@195 ($generated@@70 $generated@@30)) (and (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@195)) ($generated@@39 $generated@@170 $generated@@195)) ($generated@@82 ($generated@@17 $generated@@172 $generated@@170) $generated@@195)))
 :pattern ( ($generated@@39 $generated@@170 $generated@@195))
 :pattern ( ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@195)))
)) ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 ($generated@@17 $generated@@172 $generated@@170)))))))
(let (($generated@@196  (=> (and (not (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@175)) ($generated@@39 $generated@@170 $generated@@175))) (= (ControlFlow 0 12) 9)) $generated@@194)))
(let (($generated@@197  (=> (and (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@175)) ($generated@@39 $generated@@170 $generated@@175)) (= (ControlFlow 0 11) 9)) $generated@@194)))
(let (($generated@@198  (=> (not ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@175))) (and (=> (= (ControlFlow 0 14) 11) $generated@@197) (=> (= (ControlFlow 0 14) 12) $generated@@196)))))
(let (($generated@@199  (=> ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@175)) (and (=> (= (ControlFlow 0 13) 11) $generated@@197) (=> (= (ControlFlow 0 13) 12) $generated@@196)))))
(let (($generated@@200  (=> (and ($generated@@68 $generated@@69 $generated@@175 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@175 ($generated@@70 $generated@@30) $generated@@174)) (and (=> (= (ControlFlow 0 15) 13) $generated@@199) (=> (= (ControlFlow 0 15) 14) $generated@@198)))))
(let (($generated@@201  (=> (and (not (and ($generated@@68 $generated@@69 $generated@@175 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@175 ($generated@@70 $generated@@30) $generated@@174))) (= (ControlFlow 0 10) 9)) $generated@@194)))
(let (($generated@@202  (=> (and (= ($generated@@18 $generated@@169 ($generated@@44 $generated@@69 $generated@@170)) ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 ($generated@@17 $generated@@172 $generated@@170)))) (= (ControlFlow 0 7) (- 0 6))) (= ($generated@@18 $generated@@169 ($generated@@44 $generated@@69 $generated@@170)) ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 ($generated@@17 $generated@@172 $generated@@170)))))))
(let (($generated@@203 true))
(let (($generated@@204 true))
(let (($generated@@205  (=> ($generated@@68 $generated@@69 $generated@@170 ($generated@@70 $generated@@30)) (and (and (and (and (and (=> (= (ControlFlow 0 25) 4) $generated@@204) (=> (= (ControlFlow 0 25) 5) $generated@@203)) (=> (= (ControlFlow 0 25) 24) $generated@@193)) (=> (= (ControlFlow 0 25) 7) $generated@@202)) (=> (= (ControlFlow 0 25) 15) $generated@@200)) (=> (= (ControlFlow 0 25) 10) $generated@@201)))))
(let (($generated@@206  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@207 T@U) ) (!  (=> ($generated@@68 $generated@@69 $generated@@207 ($generated@@70 $generated@@30)) (= ($generated@@18 $generated@@169 ($generated@@44 $generated@@69 $generated@@207)) ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 ($generated@@17 $generated@@172 $generated@@207)))))
 :pattern ( ($generated@@17 $generated@@172 $generated@@207))
 :pattern ( ($generated@@18 $generated@@169 ($generated@@44 $generated@@69 $generated@@207)))
)))))
(let (($generated@@208  (=> (and (forall (($generated@@209 T@U) ) (!  (=> (and ($generated@@68 $generated@@69 $generated@@209 ($generated@@70 $generated@@30)) ($generated@@6 ($generated@@36 $generated@@2 ($generated@@5 true)))) (= ($generated@@18 $generated@@169 ($generated@@44 $generated@@69 $generated@@209)) ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 ($generated@@17 $generated@@172 $generated@@209)))))
 :pattern ( ($generated@@17 $generated@@172 $generated@@209))
 :pattern ( ($generated@@18 $generated@@169 ($generated@@44 $generated@@69 $generated@@209)))
)) (= (ControlFlow 0 3) 2)) $generated@@206)))
(let (($generated@@210  (=> (= $generated@@169 ($generated@@51 ($generated@@81 ($generated@@70 $generated@@30) ($generated@@70 $generated@@30) $generated@@171 $generated@@172 $generated@@172 $generated@@171))) (and (=> (= (ControlFlow 0 26) 25) $generated@@205) (=> (= (ControlFlow 0 26) 3) $generated@@208)))))
(let (($generated@@211  (=> (and (not (and (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@176)) ($generated@@39 $generated@@177 $generated@@176)) ($generated@@82 ($generated@@17 $generated@@172 $generated@@177) $generated@@176))) (= (ControlFlow 0 29) 26)) $generated@@210)))
(let (($generated@@212  (=> (and (and (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@176)) ($generated@@39 $generated@@177 $generated@@176)) ($generated@@82 ($generated@@17 $generated@@172 $generated@@177) $generated@@176)) (= (ControlFlow 0 28) 26)) $generated@@210)))
(let (($generated@@213  (=> (not (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@176)) ($generated@@39 $generated@@177 $generated@@176))) (and (=> (= (ControlFlow 0 31) 28) $generated@@212) (=> (= (ControlFlow 0 31) 29) $generated@@211)))))
(let (($generated@@214  (=> (and ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@176)) ($generated@@39 $generated@@177 $generated@@176)) (and (=> (= (ControlFlow 0 30) 28) $generated@@212) (=> (= (ControlFlow 0 30) 29) $generated@@211)))))
(let (($generated@@215  (=> (not ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@176))) (and (=> (= (ControlFlow 0 33) 30) $generated@@214) (=> (= (ControlFlow 0 33) 31) $generated@@213)))))
(let (($generated@@216  (=> ($generated@@18 $generated@@171 ($generated@@44 $generated@@69 $generated@@176)) (and (=> (= (ControlFlow 0 32) 30) $generated@@214) (=> (= (ControlFlow 0 32) 31) $generated@@213)))))
(let (($generated@@217  (=> (and (and ($generated@@68 $generated@@69 $generated@@176 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@176 ($generated@@70 $generated@@30) $generated@@174)) (and ($generated@@68 $generated@@69 $generated@@177 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@177 ($generated@@70 $generated@@30) $generated@@174))) (and (=> (= (ControlFlow 0 34) 32) $generated@@216) (=> (= (ControlFlow 0 34) 33) $generated@@215)))))
(let (($generated@@218  (=> (and (not (and (and ($generated@@68 $generated@@69 $generated@@176 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@176 ($generated@@70 $generated@@30) $generated@@174)) (and ($generated@@68 $generated@@69 $generated@@177 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@177 ($generated@@70 $generated@@30) $generated@@174)))) (= (ControlFlow 0 27) 26)) $generated@@210)))
(let (($generated@@219  (=> (= $generated@@178 ($generated@@120 $generated@@179 $generated@@174 $generated@@0 false)) (and (=> (= (ControlFlow 0 35) 34) $generated@@217) (=> (= (ControlFlow 0 35) 27) $generated@@218)))))
(let (($generated@@220  (=> (and (and ($generated@@180 $generated@@174) ($generated@@181 $generated@@174)) (and ($generated@@68 $generated@@69 $generated@@171 ($generated@@70 ($generated@@70 $generated@@30))) ($generated@@76 $generated@@69 $generated@@171 ($generated@@70 ($generated@@70 $generated@@30)) $generated@@174))) (=> (and (and (and ($generated@@68 $generated@@69 $generated@@182 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@182 ($generated@@70 $generated@@30) $generated@@174)) (and ($generated@@68 $generated@@69 $generated@@172 ($generated@@70 $generated@@30)) ($generated@@76 $generated@@69 $generated@@172 ($generated@@70 $generated@@30) $generated@@174))) (and (and ($generated@@68 $generated@@69 $generated@@183 ($generated@@70 ($generated@@70 $generated@@30))) ($generated@@76 $generated@@69 $generated@@183 ($generated@@70 ($generated@@70 $generated@@30)) $generated@@174)) (and (= 0 $generated@@184) (= (ControlFlow 0 36) 35)))) $generated@@219))))
$generated@@220)))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
