(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () Int)
(declare-fun $generated@@42 (T@U T@U T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U) T@U)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@67 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U) T@U)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Bool)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@151 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@155 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@T T@T) T@T)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@161 (T@T) T@T)
(declare-fun $generated@@218 (T@U) T@U)
(declare-fun $generated@@219 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@3))
(assert (= ($generated@@35 $generated@@37) $generated@@4))
(assert (= ($generated@@35 $generated@@38) $generated@@5))
(assert (= ($generated@@35 $generated@@39) $generated@@7))
(assert ($generated@@28 $generated@@29 $generated@@36 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@37 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@38 $generated@@32))
(assert ($generated@@28 $generated@@29 $generated@@39 $generated@@31))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@44 $generated@@51 $generated@@52) (and (< 2 $generated@@41) (and ($generated@@28 $generated@@29 $generated@@51 $generated@@32) ($generated@@28 $generated@@29 $generated@@52 $generated@@31)))) (and (=> (not ($generated@@45 $generated@@52)) (let (($generated@@53 ($generated@@46 $generated@@52)))
(let (($generated@@54 ($generated@@47 $generated@@52)))
 (and (and (and ($generated@@48 $generated@@54) ($generated@@48 $generated@@51)) (=> ($generated@@49 $generated@@54 $generated@@51) ($generated@@44 $generated@@51 $generated@@53))) (=> (not ($generated@@49 $generated@@54 $generated@@51)) ($generated@@44 $generated@@51 $generated@@53)))))) (= ($generated@@42 ($generated@@43 $generated@@50) $generated@@51 $generated@@52) (ite ($generated@@45 $generated@@52) $generated@@39 (let (($generated@@55 ($generated@@46 $generated@@52)))
(let (($generated@@56 ($generated@@47 $generated@@52)))
(ite ($generated@@49 $generated@@56 $generated@@51) ($generated@@42 $generated@@50 $generated@@51 $generated@@55) ($generated@@30 $generated@@56 ($generated@@42 $generated@@50 $generated@@51 $generated@@55)))))))))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@50) $generated@@51 $generated@@52))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@57 $generated@@58 $generated@@59) (= $generated@@58 $generated@@59))
 :pattern ( ($generated@@57 $generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@49 $generated@@60 $generated@@61) (= $generated@@60 $generated@@61))
 :pattern ( ($generated@@49 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@62 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (! (= ($generated@@65 $generated@@66) (= ($generated@@35 $generated@@66) $generated@@3))
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 $generated@@68) (= ($generated@@35 $generated@@68) $generated@@4))
 :pattern ( ($generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@35 $generated@@70) $generated@@5))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@35 $generated@@72) $generated@@6))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@45 $generated@@73) (= ($generated@@35 $generated@@73) $generated@@7))
 :pattern ( ($generated@@45 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@74 $generated@@75) (= ($generated@@35 $generated@@75) $generated@@8))
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@76 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@76 $generated@@79 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ) (!  (=> ($generated@@74 $generated@@80) (exists (($generated@@81 T@U) ($generated@@82 T@U) ) (= $generated@@80 ($generated@@30 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@74 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@65 $generated@@83) (= $generated@@83 $generated@@36))
 :pattern ( ($generated@@65 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@67 $generated@@84) (= $generated@@84 $generated@@37))
 :pattern ( ($generated@@67 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@69 $generated@@85) (= $generated@@85 $generated@@38))
 :pattern ( ($generated@@69 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@45 $generated@@86) (= $generated@@86 $generated@@39))
 :pattern ( ($generated@@45 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (!  (=> ($generated@@71 $generated@@88) (exists (($generated@@89 T@U) ) (= $generated@@88 ($generated@@87 $generated@@89))))
 :pattern ( ($generated@@71 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@87 $generated@@90) $generated@@32) ($generated@@28 $generated@@29 $generated@@90 $generated@@32))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@87 $generated@@90) $generated@@32))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (and ($generated@@71 $generated@@92) ($generated@@71 $generated@@93)) (= ($generated@@49 $generated@@92 $generated@@93) ($generated@@49 ($generated@@91 $generated@@92) ($generated@@91 $generated@@93))))
 :pattern ( ($generated@@49 $generated@@92 $generated@@93) ($generated@@71 $generated@@92))
 :pattern ( ($generated@@49 $generated@@92 $generated@@93) ($generated@@71 $generated@@93))
)))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> (or ($generated@@95 $generated@@97 $generated@@98) (and (< 2 $generated@@41) (and ($generated@@28 $generated@@29 $generated@@97 $generated@@32) ($generated@@28 $generated@@29 $generated@@98 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@94 $generated@@96 $generated@@97 $generated@@98) $generated@@40))
 :pattern ( ($generated@@94 $generated@@96 $generated@@97 $generated@@98))
))))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@44 $generated@@100 $generated@@101) (and (< 2 $generated@@41) (and ($generated@@28 $generated@@29 $generated@@100 $generated@@32) ($generated@@28 $generated@@29 $generated@@101 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@42 $generated@@99 $generated@@100 $generated@@101) $generated@@31))
 :pattern ( ($generated@@42 $generated@@99 $generated@@100 $generated@@101))
))))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@94 ($generated@@43 $generated@@102) $generated@@103 $generated@@104) ($generated@@94 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@94 ($generated@@43 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@42 ($generated@@43 $generated@@105) $generated@@106 $generated@@107) ($generated@@42 $generated@@105 $generated@@106 $generated@@107))
 :pattern ( ($generated@@42 ($generated@@43 $generated@@105) $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@48 $generated@@108) (or ($generated@@69 $generated@@108) ($generated@@71 $generated@@108)))
 :pattern ( ($generated@@48 $generated@@108))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@111 T@U) ) (!  (=> (or ($generated@@110 $generated@@111) (and (< 1 $generated@@41) ($generated@@28 $generated@@29 $generated@@111 $generated@@40))) ($generated@@28 $generated@@29 ($generated@@109 $generated@@111) $generated@@40))
 :pattern ( ($generated@@109 $generated@@111))
))))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@112 $generated@@40) (or ($generated@@65 $generated@@112) ($generated@@67 $generated@@112)))
 :pattern ( ($generated@@67 $generated@@112) ($generated@@28 $generated@@29 $generated@@112 $generated@@40))
 :pattern ( ($generated@@65 $generated@@112) ($generated@@28 $generated@@29 $generated@@112 $generated@@40))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@113 $generated@@32) (or ($generated@@69 $generated@@113) ($generated@@71 $generated@@113)))
 :pattern ( ($generated@@71 $generated@@113) ($generated@@28 $generated@@29 $generated@@113 $generated@@32))
 :pattern ( ($generated@@69 $generated@@113) ($generated@@28 $generated@@29 $generated@@113 $generated@@32))
)))
(assert (forall (($generated@@114 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@114 $generated@@31) (or ($generated@@45 $generated@@114) ($generated@@74 $generated@@114)))
 :pattern ( ($generated@@74 $generated@@114) ($generated@@28 $generated@@29 $generated@@114 $generated@@31))
 :pattern ( ($generated@@45 $generated@@114) ($generated@@28 $generated@@29 $generated@@114 $generated@@31))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and ($generated@@65 $generated@@115) ($generated@@65 $generated@@116)) ($generated@@57 $generated@@115 $generated@@116))
 :pattern ( ($generated@@57 $generated@@115 $generated@@116) ($generated@@65 $generated@@115))
 :pattern ( ($generated@@57 $generated@@115 $generated@@116) ($generated@@65 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@67 $generated@@117) ($generated@@67 $generated@@118)) ($generated@@57 $generated@@117 $generated@@118))
 :pattern ( ($generated@@57 $generated@@117 $generated@@118) ($generated@@67 $generated@@117))
 :pattern ( ($generated@@57 $generated@@117 $generated@@118) ($generated@@67 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and ($generated@@69 $generated@@119) ($generated@@69 $generated@@120)) ($generated@@49 $generated@@119 $generated@@120))
 :pattern ( ($generated@@49 $generated@@119 $generated@@120) ($generated@@69 $generated@@119))
 :pattern ( ($generated@@49 $generated@@119 $generated@@120) ($generated@@69 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@35 ($generated@@30 $generated@@121 $generated@@122)) $generated@@8)
 :pattern ( ($generated@@30 $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@47 ($generated@@30 $generated@@123 $generated@@124)) $generated@@123)
 :pattern ( ($generated@@30 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@46 ($generated@@30 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@30 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@35 ($generated@@87 $generated@@127)) $generated@@6)
 :pattern ( ($generated@@87 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@91 ($generated@@87 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@87 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@76 $generated@@130 ($generated@@77 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@77 $generated@@130 $generated@@129))
)))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@95 $generated@@132 $generated@@133) (and (< 2 $generated@@41) (and ($generated@@28 $generated@@29 $generated@@132 $generated@@32) ($generated@@28 $generated@@29 $generated@@133 $generated@@31)))) (and (=> (not ($generated@@45 $generated@@133)) (let (($generated@@134 ($generated@@46 $generated@@133)))
(let (($generated@@135 ($generated@@47 $generated@@133)))
 (and (and ($generated@@48 $generated@@132) ($generated@@48 $generated@@135)) (=> (not ($generated@@49 $generated@@132 $generated@@135)) ($generated@@95 $generated@@132 $generated@@134)))))) (= ($generated@@94 ($generated@@43 $generated@@131) $generated@@132 $generated@@133) (ite ($generated@@45 $generated@@133) $generated@@36 (let (($generated@@136 ($generated@@46 $generated@@133)))
(let (($generated@@137 ($generated@@47 $generated@@133)))
(ite ($generated@@49 $generated@@132 $generated@@137) $generated@@37 ($generated@@94 $generated@@131 $generated@@132 $generated@@136))))))))
 :pattern ( ($generated@@94 ($generated@@43 $generated@@131) $generated@@132 $generated@@133))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (< ($generated@@138 $generated@@139) ($generated@@138 ($generated@@30 $generated@@139 $generated@@140)))
 :pattern ( ($generated@@30 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (< ($generated@@138 $generated@@142) ($generated@@138 ($generated@@30 $generated@@141 $generated@@142)))
 :pattern ( ($generated@@30 $generated@@141 $generated@@142))
)))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@95 ($generated@@62 $generated@@29 $generated@@144) ($generated@@62 $generated@@29 $generated@@145)) (and (< 2 $generated@@41) (and ($generated@@28 $generated@@29 $generated@@144 $generated@@32) ($generated@@28 $generated@@29 $generated@@145 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@62 $generated@@13 ($generated@@16 ($generated@@45 ($generated@@62 $generated@@29 $generated@@145)))))) (let (($generated@@146 ($generated@@62 $generated@@29 ($generated@@46 ($generated@@62 $generated@@29 $generated@@145)))))
(let (($generated@@147 ($generated@@62 $generated@@29 ($generated@@47 ($generated@@62 $generated@@29 $generated@@145)))))
 (and (and ($generated@@48 ($generated@@62 $generated@@29 $generated@@144)) ($generated@@48 $generated@@147)) (=> (not ($generated@@49 $generated@@144 $generated@@147)) ($generated@@95 ($generated@@62 $generated@@29 $generated@@144) $generated@@146)))))) (= ($generated@@94 ($generated@@43 $generated@@143) ($generated@@62 $generated@@29 $generated@@144) ($generated@@62 $generated@@29 $generated@@145)) (ite ($generated@@45 ($generated@@62 $generated@@29 $generated@@145)) $generated@@36 (let (($generated@@148 ($generated@@62 $generated@@29 ($generated@@46 ($generated@@62 $generated@@29 $generated@@145)))))
(let (($generated@@149 ($generated@@62 $generated@@29 ($generated@@47 ($generated@@62 $generated@@29 $generated@@145)))))
(ite ($generated@@49 $generated@@144 $generated@@149) $generated@@37 ($generated@@94 ($generated@@43 $generated@@143) ($generated@@62 $generated@@29 $generated@@144) $generated@@148))))))))
 :weight 3
 :pattern ( ($generated@@94 ($generated@@43 $generated@@143) ($generated@@62 $generated@@29 $generated@@144) ($generated@@62 $generated@@29 $generated@@145)))
))))
(assert (forall (($generated@@150 T@U) ) (! (< ($generated@@138 $generated@@150) ($generated@@138 ($generated@@87 $generated@@150)))
 :pattern ( ($generated@@87 $generated@@150))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@T) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@151 $generated@@162 $generated@@163 $generated@@164 ($generated@@158 $generated@@162 $generated@@163 $generated@@164 $generated@@166 $generated@@167 $generated@@168 $generated@@165) $generated@@167 $generated@@168) $generated@@165)
 :weight 0
)) (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@151 $generated@@169 $generated@@170 $generated@@171 ($generated@@158 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@176 $generated@@177) ($generated@@151 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@176 $generated@@177)))
 :weight 0
)) (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@151 $generated@@178 $generated@@179 $generated@@180 ($generated@@158 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@151 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)))) (= ($generated@@12 $generated@@152) 4)) (= ($generated@@12 $generated@@153) 5)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@155 $generated@@187 $generated@@188 ($generated@@159 $generated@@187 $generated@@188 $generated@@190 $generated@@191 $generated@@189) $generated@@191) $generated@@189)
 :weight 0
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@196 $generated@@197) (= ($generated@@155 $generated@@192 $generated@@193 ($generated@@159 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@194) $generated@@197) ($generated@@155 $generated@@192 $generated@@193 $generated@@195 $generated@@197)))
 :weight 0
))) (= ($generated@@12 $generated@@156) 6)) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (= ($generated@@12 ($generated@@157 $generated@@198 $generated@@199)) 7))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@160 ($generated@@157 $generated@@200 $generated@@201)) $generated@@200)
 :pattern ( ($generated@@157 $generated@@200 $generated@@201))
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ) (! (= ($generated@@161 ($generated@@157 $generated@@202 $generated@@203)) $generated@@203)
 :pattern ( ($generated@@157 $generated@@202 $generated@@203))
))))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 Bool) ($generated@@208 T@U) ($generated@@209 T@U) ) (! (= ($generated@@17 ($generated@@151 $generated@@152 $generated@@153 $generated@@13 ($generated@@154 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))  (=> (and (or (not (= $generated@@208 $generated@@204)) (not true)) ($generated@@17 ($generated@@76 $generated@@13 ($generated@@155 $generated@@153 $generated@@156 ($generated@@155 $generated@@152 ($generated@@157 $generated@@153 $generated@@156) $generated@@205 $generated@@208) $generated@@206)))) $generated@@207))
 :pattern ( ($generated@@151 $generated@@152 $generated@@153 $generated@@13 ($generated@@154 $generated@@204 $generated@@205 $generated@@206 $generated@@207) $generated@@208 $generated@@209))
)))
(assert  (=> (<= 2 $generated@@41) (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (or ($generated@@44 ($generated@@62 $generated@@29 $generated@@211) ($generated@@62 $generated@@29 $generated@@212)) (and (< 2 $generated@@41) (and ($generated@@28 $generated@@29 $generated@@211 $generated@@32) ($generated@@28 $generated@@29 $generated@@212 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@62 $generated@@13 ($generated@@16 ($generated@@45 ($generated@@62 $generated@@29 $generated@@212)))))) (let (($generated@@213 ($generated@@62 $generated@@29 ($generated@@46 ($generated@@62 $generated@@29 $generated@@212)))))
(let (($generated@@214 ($generated@@62 $generated@@29 ($generated@@47 ($generated@@62 $generated@@29 $generated@@212)))))
 (and (and (and ($generated@@48 $generated@@214) ($generated@@48 ($generated@@62 $generated@@29 $generated@@211))) (=> ($generated@@49 $generated@@214 $generated@@211) ($generated@@44 ($generated@@62 $generated@@29 $generated@@211) $generated@@213))) (=> (not ($generated@@49 $generated@@214 $generated@@211)) ($generated@@44 ($generated@@62 $generated@@29 $generated@@211) $generated@@213)))))) (= ($generated@@42 ($generated@@43 $generated@@210) ($generated@@62 $generated@@29 $generated@@211) ($generated@@62 $generated@@29 $generated@@212)) (ite ($generated@@45 ($generated@@62 $generated@@29 $generated@@212)) $generated@@39 (let (($generated@@215 ($generated@@62 $generated@@29 ($generated@@46 ($generated@@62 $generated@@29 $generated@@212)))))
(let (($generated@@216 ($generated@@62 $generated@@29 ($generated@@47 ($generated@@62 $generated@@29 $generated@@212)))))
(ite ($generated@@49 $generated@@216 $generated@@211) ($generated@@42 ($generated@@43 $generated@@210) ($generated@@62 $generated@@29 $generated@@211) $generated@@215) ($generated@@30 $generated@@216 ($generated@@62 $generated@@29 ($generated@@42 ($generated@@43 $generated@@210) ($generated@@62 $generated@@29 $generated@@211) $generated@@215))))))))))
 :weight 3
 :pattern ( ($generated@@42 ($generated@@43 $generated@@210) ($generated@@62 $generated@@29 $generated@@211) ($generated@@62 $generated@@29 $generated@@212)))
))))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@217 T@U) ) (!  (=> (or ($generated@@110 $generated@@217) (and (< 1 $generated@@41) ($generated@@28 $generated@@29 $generated@@217 $generated@@40))) (= ($generated@@109 $generated@@217) (ite ($generated@@65 $generated@@217) $generated@@37 $generated@@36)))
 :pattern ( ($generated@@109 $generated@@217))
))))
(assert (= ($generated@@218 $generated@@40) $generated@@0))
(assert (= ($generated@@219 $generated@@40) $generated@@9))
(assert (= ($generated@@218 $generated@@32) $generated@@1))
(assert (= ($generated@@219 $generated@@32) $generated@@10))
(assert (= ($generated@@218 $generated@@31) $generated@@2))
(assert (= ($generated@@219 $generated@@31) $generated@@11))
(assert (= $generated@@36 ($generated@@62 $generated@@29 $generated@@36)))
(assert (= $generated@@37 ($generated@@62 $generated@@29 $generated@@37)))
(assert (= $generated@@38 ($generated@@62 $generated@@29 $generated@@38)))
(assert (= $generated@@39 ($generated@@62 $generated@@29 $generated@@39)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ) (! (= ($generated@@30 ($generated@@62 $generated@@29 $generated@@220) ($generated@@62 $generated@@29 $generated@@221)) ($generated@@62 $generated@@29 ($generated@@30 $generated@@220 $generated@@221)))
 :pattern ( ($generated@@30 ($generated@@62 $generated@@29 $generated@@220) ($generated@@62 $generated@@29 $generated@@221)))
)))
(assert (forall (($generated@@222 T@U) ) (! (= ($generated@@87 ($generated@@62 $generated@@29 $generated@@222)) ($generated@@62 $generated@@29 ($generated@@87 $generated@@222)))
 :pattern ( ($generated@@87 ($generated@@62 $generated@@29 $generated@@222)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@T) ) (! (= ($generated@@77 $generated@@224 ($generated@@62 $generated@@224 $generated@@223)) ($generated@@62 $generated@@156 ($generated@@77 $generated@@224 $generated@@223)))
 :pattern ( ($generated@@77 $generated@@224 ($generated@@62 $generated@@224 $generated@@223)))
)))
(assert  (=> (<= 1 $generated@@41) (forall (($generated@@225 T@U) ) (!  (=> (or ($generated@@110 ($generated@@62 $generated@@29 $generated@@225)) (and (< 1 $generated@@41) ($generated@@28 $generated@@29 $generated@@225 $generated@@40))) (= ($generated@@109 ($generated@@62 $generated@@29 $generated@@225)) (ite ($generated@@65 ($generated@@62 $generated@@29 $generated@@225)) $generated@@37 $generated@@36)))
 :weight 3
 :pattern ( ($generated@@109 ($generated@@62 $generated@@29 $generated@@225)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@231 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@232  (=> (and (= $generated@@226 ($generated@@154 $generated@@227 $generated@@228 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@233 $generated@@32) ($generated@@28 $generated@@29 $generated@@234 $generated@@31)) ($generated@@57 ($generated@@109 ($generated@@94 ($generated@@43 ($generated@@43 $generated@@229)) $generated@@233 ($generated@@42 ($generated@@43 ($generated@@43 $generated@@229)) $generated@@233 $generated@@234))) $generated@@37))
 :pattern ( ($generated@@42 ($generated@@43 ($generated@@43 $generated@@229)) $generated@@233 $generated@@234))
)))))
(let (($generated@@235  (=> (and (and ($generated@@230 $generated@@228) ($generated@@231 $generated@@228)) (and (= 3 $generated@@41) (= (ControlFlow 0 3) 2))) $generated@@232)))
$generated@@235)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
