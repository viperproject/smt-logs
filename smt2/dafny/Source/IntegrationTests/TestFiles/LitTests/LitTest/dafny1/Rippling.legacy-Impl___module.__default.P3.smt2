(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U T@U T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U) T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U T@U) T@U)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@83 (T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) Int)
(declare-fun $generated@@164 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@165 () T@T)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@169 () T@T)
(declare-fun $generated@@170 (T@T T@T) T@T)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@172 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@T) T@T)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@223 (T@U) T@U)
(declare-fun $generated@@224 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@39 ($generated@@38 $generated@@29 $generated@@44) ($generated@@38 $generated@@29 $generated@@45)) (and (< 2 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@44 $generated@@31) ($generated@@28 $generated@@29 $generated@@45 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@38 $generated@@13 ($generated@@16 ($generated@@40 ($generated@@38 $generated@@29 $generated@@44)))))) (let (($generated@@46 ($generated@@38 $generated@@29 ($generated@@41 ($generated@@38 $generated@@29 $generated@@44)))))
($generated@@39 $generated@@46 ($generated@@38 $generated@@29 $generated@@45)))) (= ($generated@@36 ($generated@@37 $generated@@43) ($generated@@38 $generated@@29 $generated@@44) ($generated@@38 $generated@@29 $generated@@45)) (ite ($generated@@40 ($generated@@38 $generated@@29 $generated@@44)) $generated@@45 (let (($generated@@47 ($generated@@38 $generated@@29 ($generated@@41 ($generated@@38 $generated@@29 $generated@@44)))))
(let (($generated@@48 ($generated@@38 $generated@@29 ($generated@@42 ($generated@@38 $generated@@29 $generated@@44)))))
($generated@@38 $generated@@29 ($generated@@30 $generated@@48 ($generated@@38 $generated@@29 ($generated@@36 ($generated@@37 $generated@@43) $generated@@47 ($generated@@38 $generated@@29 $generated@@45)))))))))))
 :weight 3
 :pattern ( ($generated@@36 ($generated@@37 $generated@@43) ($generated@@38 $generated@@29 $generated@@44) ($generated@@38 $generated@@29 $generated@@45)))
))))
(assert (= ($generated@@49 $generated@@50) $generated@@3))
(assert (= ($generated@@49 $generated@@51) $generated@@4))
(assert (= ($generated@@49 $generated@@52) $generated@@5))
(assert (= ($generated@@49 $generated@@53) $generated@@7))
(assert ($generated@@28 $generated@@29 $generated@@50 $generated@@54))
(assert ($generated@@28 $generated@@29 $generated@@51 $generated@@54))
(assert ($generated@@28 $generated@@29 $generated@@52 $generated@@32))
(assert ($generated@@28 $generated@@29 $generated@@53 $generated@@31))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (or ($generated@@56 $generated@@61 $generated@@62) (and (< 2 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@61 $generated@@32) ($generated@@28 $generated@@29 $generated@@62 $generated@@31)))) (and (=> (not ($generated@@40 $generated@@62)) (let (($generated@@63 ($generated@@41 $generated@@62)))
(let (($generated@@64 ($generated@@42 $generated@@62)))
 (and (and (and ($generated@@57 $generated@@61) ($generated@@57 $generated@@64)) (=> ($generated@@58 $generated@@61 $generated@@64) ($generated@@56 $generated@@61 $generated@@63))) (=> (not ($generated@@58 $generated@@61 $generated@@64)) ($generated@@56 $generated@@61 $generated@@63)))))) (= ($generated@@55 ($generated@@37 $generated@@60) $generated@@61 $generated@@62) (ite ($generated@@40 $generated@@62) $generated@@52 (let (($generated@@65 ($generated@@41 $generated@@62)))
(let (($generated@@66 ($generated@@42 $generated@@62)))
(ite ($generated@@58 $generated@@61 $generated@@66) ($generated@@59 ($generated@@55 $generated@@60 $generated@@61 $generated@@65)) ($generated@@55 $generated@@60 $generated@@61 $generated@@65))))))))
 :pattern ( ($generated@@55 ($generated@@37 $generated@@60) $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@67 $generated@@68 $generated@@69) (= $generated@@68 $generated@@69))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@58 $generated@@70 $generated@@71) (= $generated@@70 $generated@@71))
 :pattern ( ($generated@@58 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@38 $generated@@73 $generated@@72) $generated@@72)
 :pattern ( ($generated@@38 $generated@@73 $generated@@72))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@56 ($generated@@38 $generated@@29 $generated@@75) ($generated@@38 $generated@@29 $generated@@76)) (and (< 2 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@75 $generated@@32) ($generated@@28 $generated@@29 $generated@@76 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@38 $generated@@13 ($generated@@16 ($generated@@40 ($generated@@38 $generated@@29 $generated@@76)))))) (let (($generated@@77 ($generated@@38 $generated@@29 ($generated@@41 ($generated@@38 $generated@@29 $generated@@76)))))
(let (($generated@@78 ($generated@@38 $generated@@29 ($generated@@42 ($generated@@38 $generated@@29 $generated@@76)))))
 (and (and (and ($generated@@57 ($generated@@38 $generated@@29 $generated@@75)) ($generated@@57 $generated@@78)) (=> ($generated@@58 $generated@@75 $generated@@78) ($generated@@56 ($generated@@38 $generated@@29 $generated@@75) $generated@@77))) (=> (not ($generated@@58 $generated@@75 $generated@@78)) ($generated@@56 ($generated@@38 $generated@@29 $generated@@75) $generated@@77)))))) (= ($generated@@55 ($generated@@37 $generated@@74) ($generated@@38 $generated@@29 $generated@@75) ($generated@@38 $generated@@29 $generated@@76)) (ite ($generated@@40 ($generated@@38 $generated@@29 $generated@@76)) $generated@@52 (let (($generated@@79 ($generated@@38 $generated@@29 ($generated@@41 ($generated@@38 $generated@@29 $generated@@76)))))
(let (($generated@@80 ($generated@@38 $generated@@29 ($generated@@42 ($generated@@38 $generated@@29 $generated@@76)))))
(ite ($generated@@58 $generated@@75 $generated@@80) ($generated@@59 ($generated@@38 $generated@@29 ($generated@@55 ($generated@@37 $generated@@74) ($generated@@38 $generated@@29 $generated@@75) $generated@@79))) ($generated@@55 ($generated@@37 $generated@@74) ($generated@@38 $generated@@29 $generated@@75) $generated@@79))))))))
 :weight 3
 :pattern ( ($generated@@55 ($generated@@37 $generated@@74) ($generated@@38 $generated@@29 $generated@@75) ($generated@@38 $generated@@29 $generated@@76)))
))))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@81 $generated@@82) (= ($generated@@49 $generated@@82) $generated@@5))
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@83 $generated@@84) (= ($generated@@49 $generated@@84) $generated@@6))
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@40 $generated@@85) (= ($generated@@49 $generated@@85) $generated@@7))
 :pattern ( ($generated@@40 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@86 $generated@@87) (= ($generated@@49 $generated@@87) $generated@@8))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 ($generated@@88 $generated@@91 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@88 $generated@@91 $generated@@90))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@39 $generated@@93 $generated@@94) (and (< 2 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@93 $generated@@31) ($generated@@28 $generated@@29 $generated@@94 $generated@@31)))) (and (=> (not ($generated@@40 $generated@@93)) (let (($generated@@95 ($generated@@41 $generated@@93)))
($generated@@39 $generated@@95 $generated@@94))) (= ($generated@@36 ($generated@@37 $generated@@92) $generated@@93 $generated@@94) (ite ($generated@@40 $generated@@93) $generated@@94 (let (($generated@@96 ($generated@@41 $generated@@93)))
(let (($generated@@97 ($generated@@42 $generated@@93)))
($generated@@30 $generated@@97 ($generated@@36 $generated@@92 $generated@@96 $generated@@94))))))))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@92) $generated@@93 $generated@@94))
))))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@86 $generated@@98) (exists (($generated@@99 T@U) ($generated@@100 T@U) ) (= $generated@@98 ($generated@@30 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@86 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@81 $generated@@101) (= $generated@@101 $generated@@52))
 :pattern ( ($generated@@81 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (=> ($generated@@40 $generated@@102) (= $generated@@102 $generated@@53))
 :pattern ( ($generated@@40 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@83 $generated@@103) (exists (($generated@@104 T@U) ) (= $generated@@103 ($generated@@59 $generated@@104))))
 :pattern ( ($generated@@83 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@59 $generated@@105) $generated@@32) ($generated@@28 $generated@@29 $generated@@105 $generated@@32))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@59 $generated@@105) $generated@@32))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and ($generated@@83 $generated@@107) ($generated@@83 $generated@@108)) (= ($generated@@58 $generated@@107 $generated@@108) ($generated@@58 ($generated@@106 $generated@@107) ($generated@@106 $generated@@108))))
 :pattern ( ($generated@@58 $generated@@107 $generated@@108) ($generated@@83 $generated@@107))
 :pattern ( ($generated@@58 $generated@@107 $generated@@108) ($generated@@83 $generated@@108))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@110 $generated@@112 $generated@@113) (and (< 1 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@112 $generated@@32) ($generated@@28 $generated@@29 $generated@@113 $generated@@32)))) ($generated@@28 $generated@@29 ($generated@@109 $generated@@111 $generated@@112 $generated@@113) $generated@@54))
 :pattern ( ($generated@@109 $generated@@111 $generated@@112 $generated@@113))
))))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (or ($generated@@39 $generated@@115 $generated@@116) (and (< 2 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@115 $generated@@31) ($generated@@28 $generated@@29 $generated@@116 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@36 $generated@@114 $generated@@115 $generated@@116) $generated@@31))
 :pattern ( ($generated@@36 $generated@@114 $generated@@115 $generated@@116))
))))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@56 $generated@@118 $generated@@119) (and (< 2 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@118 $generated@@32) ($generated@@28 $generated@@29 $generated@@119 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@55 $generated@@117 $generated@@118 $generated@@119) $generated@@32))
 :pattern ( ($generated@@55 $generated@@117 $generated@@118 $generated@@119))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@109 ($generated@@37 $generated@@120) $generated@@121 $generated@@122) ($generated@@109 $generated@@120 $generated@@121 $generated@@122))
 :pattern ( ($generated@@109 ($generated@@37 $generated@@120) $generated@@121 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@36 ($generated@@37 $generated@@123) $generated@@124 $generated@@125) ($generated@@36 $generated@@123 $generated@@124 $generated@@125))
 :pattern ( ($generated@@36 ($generated@@37 $generated@@123) $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@55 ($generated@@37 $generated@@126) $generated@@127 $generated@@128) ($generated@@55 $generated@@126 $generated@@127 $generated@@128))
 :pattern ( ($generated@@55 ($generated@@37 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@57 $generated@@129) (or ($generated@@81 $generated@@129) ($generated@@83 $generated@@129)))
 :pattern ( ($generated@@57 $generated@@129))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@110 ($generated@@38 $generated@@29 $generated@@131) ($generated@@38 $generated@@29 $generated@@132)) (and (< 1 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@131 $generated@@32) ($generated@@28 $generated@@29 $generated@@132 $generated@@32)))) (and (=> (not ($generated@@17 ($generated@@38 $generated@@13 ($generated@@16 ($generated@@81 ($generated@@38 $generated@@29 $generated@@131)))))) (let (($generated@@133 ($generated@@38 $generated@@29 ($generated@@106 ($generated@@38 $generated@@29 $generated@@131)))))
 (=> (not ($generated@@17 ($generated@@38 $generated@@13 ($generated@@16 ($generated@@81 ($generated@@38 $generated@@29 $generated@@132)))))) (let (($generated@@134 ($generated@@38 $generated@@29 ($generated@@106 ($generated@@38 $generated@@29 $generated@@132)))))
($generated@@110 $generated@@133 $generated@@134))))) (= ($generated@@109 ($generated@@37 $generated@@130) ($generated@@38 $generated@@29 $generated@@131) ($generated@@38 $generated@@29 $generated@@132)) (ite ($generated@@81 ($generated@@38 $generated@@29 $generated@@131)) $generated@@51 (let (($generated@@135 ($generated@@38 $generated@@29 ($generated@@106 ($generated@@38 $generated@@29 $generated@@131)))))
(ite ($generated@@81 ($generated@@38 $generated@@29 $generated@@132)) $generated@@50 (let (($generated@@136 ($generated@@38 $generated@@29 ($generated@@106 ($generated@@38 $generated@@29 $generated@@132)))))
($generated@@38 $generated@@29 ($generated@@109 ($generated@@37 $generated@@130) $generated@@135 $generated@@136)))))))))
 :weight 3
 :pattern ( ($generated@@109 ($generated@@37 $generated@@130) ($generated@@38 $generated@@29 $generated@@131) ($generated@@38 $generated@@29 $generated@@132)))
))))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@110 $generated@@138 $generated@@139) (and (< 1 $generated@@35) (and ($generated@@28 $generated@@29 $generated@@138 $generated@@32) ($generated@@28 $generated@@29 $generated@@139 $generated@@32)))) (and (=> (not ($generated@@81 $generated@@138)) (let (($generated@@140 ($generated@@106 $generated@@138)))
 (=> (not ($generated@@81 $generated@@139)) (let (($generated@@141 ($generated@@106 $generated@@139)))
($generated@@110 $generated@@140 $generated@@141))))) (= ($generated@@109 ($generated@@37 $generated@@137) $generated@@138 $generated@@139) (ite ($generated@@81 $generated@@138) $generated@@51 (let (($generated@@142 ($generated@@106 $generated@@138)))
(ite ($generated@@81 $generated@@139) $generated@@50 (let (($generated@@143 ($generated@@106 $generated@@139)))
($generated@@109 $generated@@137 $generated@@142 $generated@@143))))))))
 :pattern ( ($generated@@109 ($generated@@37 $generated@@137) $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@144 $generated@@32) (or ($generated@@81 $generated@@144) ($generated@@83 $generated@@144)))
 :pattern ( ($generated@@83 $generated@@144) ($generated@@28 $generated@@29 $generated@@144 $generated@@32))
 :pattern ( ($generated@@81 $generated@@144) ($generated@@28 $generated@@29 $generated@@144 $generated@@32))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@145 $generated@@31) (or ($generated@@40 $generated@@145) ($generated@@86 $generated@@145)))
 :pattern ( ($generated@@86 $generated@@145) ($generated@@28 $generated@@29 $generated@@145 $generated@@31))
 :pattern ( ($generated@@40 $generated@@145) ($generated@@28 $generated@@29 $generated@@145 $generated@@31))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (and ($generated@@81 $generated@@146) ($generated@@81 $generated@@147)) ($generated@@58 $generated@@146 $generated@@147))
 :pattern ( ($generated@@58 $generated@@146 $generated@@147) ($generated@@81 $generated@@146))
 :pattern ( ($generated@@58 $generated@@146 $generated@@147) ($generated@@81 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@49 ($generated@@30 $generated@@148 $generated@@149)) $generated@@8)
 :pattern ( ($generated@@30 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@42 ($generated@@30 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@30 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@41 ($generated@@30 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@30 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@49 ($generated@@59 $generated@@154)) $generated@@6)
 :pattern ( ($generated@@59 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@106 ($generated@@59 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@59 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@88 $generated@@157 ($generated@@89 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@89 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (< ($generated@@158 $generated@@159) ($generated@@158 ($generated@@30 $generated@@159 $generated@@160)))
 :pattern ( ($generated@@30 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (! (< ($generated@@158 $generated@@162) ($generated@@158 ($generated@@30 $generated@@161 $generated@@162)))
 :pattern ( ($generated@@30 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ) (! (< ($generated@@158 $generated@@163) ($generated@@158 ($generated@@59 $generated@@163)))
 :pattern ( ($generated@@59 $generated@@163))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@164 $generated@@175 $generated@@176 $generated@@177 ($generated@@171 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@180 $generated@@181) $generated@@178)
 :weight 0
)) (and (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@164 $generated@@182 $generated@@183 $generated@@184 ($generated@@171 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@188 $generated@@185) $generated@@189 $generated@@190) ($generated@@164 $generated@@182 $generated@@183 $generated@@184 $generated@@186 $generated@@189 $generated@@190)))
 :weight 0
)) (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (or (= $generated@@197 $generated@@199) (= ($generated@@164 $generated@@191 $generated@@192 $generated@@193 ($generated@@171 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@196 $generated@@197 $generated@@194) $generated@@198 $generated@@199) ($generated@@164 $generated@@191 $generated@@192 $generated@@193 $generated@@195 $generated@@198 $generated@@199)))
 :weight 0
)))) (= ($generated@@12 $generated@@165) 4)) (= ($generated@@12 $generated@@166) 5)) (forall (($generated@@200 T@T) ($generated@@201 T@T) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ) (! (= ($generated@@168 $generated@@200 $generated@@201 ($generated@@172 $generated@@200 $generated@@201 $generated@@203 $generated@@204 $generated@@202) $generated@@204) $generated@@202)
 :weight 0
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (!  (or (= $generated@@209 $generated@@210) (= ($generated@@168 $generated@@205 $generated@@206 ($generated@@172 $generated@@205 $generated@@206 $generated@@208 $generated@@209 $generated@@207) $generated@@210) ($generated@@168 $generated@@205 $generated@@206 $generated@@208 $generated@@210)))
 :weight 0
))) (= ($generated@@12 $generated@@169) 6)) (forall (($generated@@211 T@T) ($generated@@212 T@T) ) (= ($generated@@12 ($generated@@170 $generated@@211 $generated@@212)) 7))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ) (! (= ($generated@@173 ($generated@@170 $generated@@213 $generated@@214)) $generated@@213)
 :pattern ( ($generated@@170 $generated@@213 $generated@@214))
))) (forall (($generated@@215 T@T) ($generated@@216 T@T) ) (! (= ($generated@@174 ($generated@@170 $generated@@215 $generated@@216)) $generated@@216)
 :pattern ( ($generated@@170 $generated@@215 $generated@@216))
))))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Bool) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@17 ($generated@@164 $generated@@165 $generated@@166 $generated@@13 ($generated@@167 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))  (=> (and (or (not (= $generated@@221 $generated@@217)) (not true)) ($generated@@17 ($generated@@88 $generated@@13 ($generated@@168 $generated@@166 $generated@@169 ($generated@@168 $generated@@165 ($generated@@170 $generated@@166 $generated@@169) $generated@@218 $generated@@221) $generated@@219)))) $generated@@220))
 :pattern ( ($generated@@164 $generated@@165 $generated@@166 $generated@@13 ($generated@@167 $generated@@217 $generated@@218 $generated@@219 $generated@@220) $generated@@221 $generated@@222))
)))
(assert (= ($generated@@223 $generated@@54) $generated@@0))
(assert (= ($generated@@224 $generated@@54) $generated@@9))
(assert (= ($generated@@223 $generated@@32) $generated@@1))
(assert (= ($generated@@224 $generated@@32) $generated@@10))
(assert (= ($generated@@223 $generated@@31) $generated@@2))
(assert (= ($generated@@224 $generated@@31) $generated@@11))
(assert (= $generated@@50 ($generated@@38 $generated@@29 $generated@@50)))
(assert (= $generated@@51 ($generated@@38 $generated@@29 $generated@@51)))
(assert (= $generated@@52 ($generated@@38 $generated@@29 $generated@@52)))
(assert (= $generated@@53 ($generated@@38 $generated@@29 $generated@@53)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (! (= ($generated@@30 ($generated@@38 $generated@@29 $generated@@225) ($generated@@38 $generated@@29 $generated@@226)) ($generated@@38 $generated@@29 ($generated@@30 $generated@@225 $generated@@226)))
 :pattern ( ($generated@@30 ($generated@@38 $generated@@29 $generated@@225) ($generated@@38 $generated@@29 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ) (! (= ($generated@@59 ($generated@@38 $generated@@29 $generated@@227)) ($generated@@38 $generated@@29 ($generated@@59 $generated@@227)))
 :pattern ( ($generated@@59 ($generated@@38 $generated@@29 $generated@@227)))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@T) ) (! (= ($generated@@89 $generated@@229 ($generated@@38 $generated@@229 $generated@@228)) ($generated@@38 $generated@@169 ($generated@@89 $generated@@229 $generated@@228)))
 :pattern ( ($generated@@89 $generated@@229 ($generated@@38 $generated@@229 $generated@@228)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 (T@U) Bool)
(declare-fun $generated@@235 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@236  (=> (and (= $generated@@230 ($generated@@167 $generated@@231 $generated@@232 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@237 $generated@@32) ($generated@@28 $generated@@29 $generated@@238 $generated@@31)) ($generated@@28 $generated@@29 $generated@@239 $generated@@31)) ($generated@@67 ($generated@@109 ($generated@@37 ($generated@@37 $generated@@233)) ($generated@@55 ($generated@@37 ($generated@@37 $generated@@233)) $generated@@237 $generated@@238) ($generated@@55 ($generated@@37 ($generated@@37 $generated@@233)) $generated@@237 ($generated@@36 ($generated@@37 ($generated@@37 $generated@@233)) $generated@@238 $generated@@239))) $generated@@51))
 :pattern ( ($generated@@55 ($generated@@37 ($generated@@37 $generated@@233)) $generated@@237 ($generated@@36 ($generated@@37 ($generated@@37 $generated@@233)) $generated@@238 $generated@@239)))
)))))
(let (($generated@@240  (=> (and (and ($generated@@234 $generated@@232) ($generated@@235 $generated@@232)) (and (= 3 $generated@@35) (= (ControlFlow 0 3) 2))) $generated@@236)))
$generated@@240)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
