(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () Int)
(declare-fun $generated@@35 (T@U T@U T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U T@U) Bool)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@99 (T@U) Int)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 () T@T)
(declare-fun $generated@@108 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@T T@T) T@T)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@T) T@T)
(declare-fun $generated@@115 (T@T) T@T)
(declare-fun $generated@@171 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30) $generated@@27)  (and ($generated@@24 $generated@@25 $generated@@29 $generated@@28) ($generated@@24 $generated@@25 $generated@@30 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30) $generated@@27))
)))
(assert (= ($generated@@31 $generated@@32) $generated@@2))
(assert (= ($generated@@31 $generated@@33) $generated@@4))
(assert ($generated@@24 $generated@@25 $generated@@32 $generated@@28))
(assert ($generated@@24 $generated@@25 $generated@@33 $generated@@27))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> (or ($generated@@37 $generated@@44 $generated@@45) (and (< 2 $generated@@34) (and ($generated@@24 $generated@@25 $generated@@44 $generated@@28) ($generated@@24 $generated@@25 $generated@@45 $generated@@27)))) (and (=> (not ($generated@@38 $generated@@45)) (let (($generated@@46 ($generated@@39 $generated@@45)))
(let (($generated@@47 ($generated@@40 $generated@@45)))
 (and (and (and ($generated@@41 $generated@@47) ($generated@@41 $generated@@44)) (=> ($generated@@42 $generated@@47 $generated@@44) ($generated@@37 $generated@@44 $generated@@46))) (=> (not ($generated@@42 $generated@@47 $generated@@44)) ($generated@@37 $generated@@44 $generated@@46)))))) (= ($generated@@35 ($generated@@36 $generated@@43) $generated@@44 $generated@@45) (ite ($generated@@38 $generated@@45) $generated@@33 (let (($generated@@48 ($generated@@39 $generated@@45)))
(let (($generated@@49 ($generated@@40 $generated@@45)))
(ite ($generated@@42 $generated@@49 $generated@@44) ($generated@@35 $generated@@43 $generated@@44 $generated@@48) ($generated@@26 $generated@@49 ($generated@@35 $generated@@43 $generated@@44 $generated@@48)))))))))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@43) $generated@@44 $generated@@45))
))))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@42 $generated@@50 $generated@@51) (= $generated@@50 $generated@@51))
 :pattern ( ($generated@@42 $generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@31 $generated@@56) $generated@@2))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@31 $generated@@58) $generated@@3))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@38 $generated@@59) (= ($generated@@31 $generated@@59) $generated@@4))
 :pattern ( ($generated@@38 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@31 $generated@@61) $generated@@5))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@62 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@62 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@60 $generated@@66) (exists (($generated@@67 T@U) ($generated@@68 T@U) ) (= $generated@@66 ($generated@@26 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@60 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@55 $generated@@69) (= $generated@@69 $generated@@32))
 :pattern ( ($generated@@55 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@38 $generated@@70) (= $generated@@70 $generated@@33))
 :pattern ( ($generated@@38 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@57 $generated@@72) (exists (($generated@@73 T@U) ) (= $generated@@72 ($generated@@71 $generated@@73))))
 :pattern ( ($generated@@57 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@71 $generated@@74) $generated@@28) ($generated@@24 $generated@@25 $generated@@74 $generated@@28))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@71 $generated@@74) $generated@@28))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and ($generated@@57 $generated@@76) ($generated@@57 $generated@@77)) (= ($generated@@42 $generated@@76 $generated@@77) ($generated@@42 ($generated@@75 $generated@@76) ($generated@@75 $generated@@77))))
 :pattern ( ($generated@@42 $generated@@76 $generated@@77) ($generated@@57 $generated@@76))
 :pattern ( ($generated@@42 $generated@@76 $generated@@77) ($generated@@57 $generated@@77))
)))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@37 $generated@@79 $generated@@80) (and (< 2 $generated@@34) (and ($generated@@24 $generated@@25 $generated@@79 $generated@@28) ($generated@@24 $generated@@25 $generated@@80 $generated@@27)))) ($generated@@24 $generated@@25 ($generated@@35 $generated@@78 $generated@@79 $generated@@80) $generated@@27))
 :pattern ( ($generated@@35 $generated@@78 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@35 ($generated@@36 $generated@@81) $generated@@82 $generated@@83) ($generated@@35 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@35 ($generated@@36 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@41 $generated@@84) (or ($generated@@55 $generated@@84) ($generated@@57 $generated@@84)))
 :pattern ( ($generated@@41 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@85 $generated@@28) (or ($generated@@55 $generated@@85) ($generated@@57 $generated@@85)))
 :pattern ( ($generated@@57 $generated@@85) ($generated@@24 $generated@@25 $generated@@85 $generated@@28))
 :pattern ( ($generated@@55 $generated@@85) ($generated@@24 $generated@@25 $generated@@85 $generated@@28))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@86 $generated@@27) (or ($generated@@38 $generated@@86) ($generated@@60 $generated@@86)))
 :pattern ( ($generated@@60 $generated@@86) ($generated@@24 $generated@@25 $generated@@86 $generated@@27))
 :pattern ( ($generated@@38 $generated@@86) ($generated@@24 $generated@@25 $generated@@86 $generated@@27))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and ($generated@@55 $generated@@87) ($generated@@55 $generated@@88)) ($generated@@42 $generated@@87 $generated@@88))
 :pattern ( ($generated@@42 $generated@@87 $generated@@88) ($generated@@55 $generated@@87))
 :pattern ( ($generated@@42 $generated@@87 $generated@@88) ($generated@@55 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@31 ($generated@@26 $generated@@89 $generated@@90)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@40 ($generated@@26 $generated@@91 $generated@@92)) $generated@@91)
 :pattern ( ($generated@@26 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@39 ($generated@@26 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@26 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@31 ($generated@@71 $generated@@95)) $generated@@3)
 :pattern ( ($generated@@71 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@75 ($generated@@71 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@71 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@62 $generated@@98 ($generated@@63 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@63 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (< ($generated@@99 $generated@@100) ($generated@@99 ($generated@@26 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@26 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (< ($generated@@99 $generated@@103) ($generated@@99 ($generated@@26 $generated@@102 $generated@@103)))
 :pattern ( ($generated@@26 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (! (< ($generated@@99 $generated@@104) ($generated@@99 ($generated@@71 $generated@@104)))
 :pattern ( ($generated@@71 $generated@@104))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@105 $generated@@116 $generated@@117 $generated@@118 ($generated@@112 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@105 $generated@@123 $generated@@124 $generated@@125 ($generated@@112 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@105 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@105 $generated@@132 $generated@@133 $generated@@134 ($generated@@112 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))) (= ($generated@@8 $generated@@106) 4)) (= ($generated@@8 $generated@@107) 5)) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@109 $generated@@141 $generated@@142 ($generated@@113 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@145) $generated@@143)
 :weight 0
))) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@150 $generated@@151) (= ($generated@@109 $generated@@146 $generated@@147 ($generated@@113 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@148) $generated@@151) ($generated@@109 $generated@@146 $generated@@147 $generated@@149 $generated@@151)))
 :weight 0
))) (= ($generated@@8 $generated@@110) 6)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (= ($generated@@8 ($generated@@111 $generated@@152 $generated@@153)) 7))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@114 ($generated@@111 $generated@@154 $generated@@155)) $generated@@154)
 :pattern ( ($generated@@111 $generated@@154 $generated@@155))
))) (forall (($generated@@156 T@T) ($generated@@157 T@T) ) (! (= ($generated@@115 ($generated@@111 $generated@@156 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@111 $generated@@156 $generated@@157))
))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Bool) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@13 ($generated@@105 $generated@@106 $generated@@107 $generated@@9 ($generated@@108 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))  (=> (and (or (not (= $generated@@162 $generated@@158)) (not true)) ($generated@@13 ($generated@@62 $generated@@9 ($generated@@109 $generated@@107 $generated@@110 ($generated@@109 $generated@@106 ($generated@@111 $generated@@107 $generated@@110) $generated@@159 $generated@@162) $generated@@160)))) $generated@@161))
 :pattern ( ($generated@@105 $generated@@106 $generated@@107 $generated@@9 ($generated@@108 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))
)))
(assert  (=> (<= 2 $generated@@34) (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or ($generated@@37 ($generated@@52 $generated@@25 $generated@@165) ($generated@@52 $generated@@25 $generated@@166)) (and (< 2 $generated@@34) (and ($generated@@24 $generated@@25 $generated@@165 $generated@@28) ($generated@@24 $generated@@25 $generated@@166 $generated@@27)))) (and (=> (not ($generated@@13 ($generated@@52 $generated@@9 ($generated@@12 ($generated@@38 ($generated@@52 $generated@@25 $generated@@166)))))) (let (($generated@@167 ($generated@@52 $generated@@25 ($generated@@39 ($generated@@52 $generated@@25 $generated@@166)))))
(let (($generated@@168 ($generated@@52 $generated@@25 ($generated@@40 ($generated@@52 $generated@@25 $generated@@166)))))
 (and (and (and ($generated@@41 $generated@@168) ($generated@@41 ($generated@@52 $generated@@25 $generated@@165))) (=> ($generated@@42 $generated@@168 $generated@@165) ($generated@@37 ($generated@@52 $generated@@25 $generated@@165) $generated@@167))) (=> (not ($generated@@42 $generated@@168 $generated@@165)) ($generated@@37 ($generated@@52 $generated@@25 $generated@@165) $generated@@167)))))) (= ($generated@@35 ($generated@@36 $generated@@164) ($generated@@52 $generated@@25 $generated@@165) ($generated@@52 $generated@@25 $generated@@166)) (ite ($generated@@38 ($generated@@52 $generated@@25 $generated@@166)) $generated@@33 (let (($generated@@169 ($generated@@52 $generated@@25 ($generated@@39 ($generated@@52 $generated@@25 $generated@@166)))))
(let (($generated@@170 ($generated@@52 $generated@@25 ($generated@@40 ($generated@@52 $generated@@25 $generated@@166)))))
(ite ($generated@@42 $generated@@170 $generated@@165) ($generated@@35 ($generated@@36 $generated@@164) ($generated@@52 $generated@@25 $generated@@165) $generated@@169) ($generated@@26 $generated@@170 ($generated@@52 $generated@@25 ($generated@@35 ($generated@@36 $generated@@164) ($generated@@52 $generated@@25 $generated@@165) $generated@@169))))))))))
 :weight 3
 :pattern ( ($generated@@35 ($generated@@36 $generated@@164) ($generated@@52 $generated@@25 $generated@@165) ($generated@@52 $generated@@25 $generated@@166)))
))))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> (and ($generated@@172 $generated@@174) ($generated@@24 $generated@@25 $generated@@173 $generated@@28)) ($generated@@171 $generated@@25 $generated@@173 $generated@@28 $generated@@174))
 :pattern ( ($generated@@171 $generated@@25 $generated@@173 $generated@@28 $generated@@174))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and ($generated@@172 $generated@@176) ($generated@@24 $generated@@25 $generated@@175 $generated@@27)) ($generated@@171 $generated@@25 $generated@@175 $generated@@27 $generated@@176))
 :pattern ( ($generated@@171 $generated@@25 $generated@@175 $generated@@27 $generated@@176))
)))
(assert (= ($generated@@177 $generated@@28) $generated@@0))
(assert (= ($generated@@178 $generated@@28) $generated@@6))
(assert (= ($generated@@177 $generated@@27) $generated@@1))
(assert (= ($generated@@178 $generated@@27) $generated@@7))
(assert (= $generated@@32 ($generated@@52 $generated@@25 $generated@@32)))
(assert (= $generated@@33 ($generated@@52 $generated@@25 $generated@@33)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@172 $generated@@180) (and ($generated@@57 $generated@@179) ($generated@@171 $generated@@25 $generated@@179 $generated@@28 $generated@@180))) ($generated@@171 $generated@@25 ($generated@@75 $generated@@179) $generated@@28 $generated@@180))
 :pattern ( ($generated@@171 $generated@@25 ($generated@@75 $generated@@179) $generated@@28 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@172 $generated@@182) (and ($generated@@60 $generated@@181) ($generated@@171 $generated@@25 $generated@@181 $generated@@27 $generated@@182))) ($generated@@171 $generated@@25 ($generated@@40 $generated@@181) $generated@@28 $generated@@182))
 :pattern ( ($generated@@171 $generated@@25 ($generated@@40 $generated@@181) $generated@@28 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (and ($generated@@172 $generated@@184) (and ($generated@@60 $generated@@183) ($generated@@171 $generated@@25 $generated@@183 $generated@@27 $generated@@184))) ($generated@@171 $generated@@25 ($generated@@39 $generated@@183) $generated@@27 $generated@@184))
 :pattern ( ($generated@@171 $generated@@25 ($generated@@39 $generated@@183) $generated@@27 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@26 ($generated@@52 $generated@@25 $generated@@185) ($generated@@52 $generated@@25 $generated@@186)) ($generated@@52 $generated@@25 ($generated@@26 $generated@@185 $generated@@186)))
 :pattern ( ($generated@@26 ($generated@@52 $generated@@25 $generated@@185) ($generated@@52 $generated@@25 $generated@@186)))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@71 ($generated@@52 $generated@@25 $generated@@187)) ($generated@@52 $generated@@25 ($generated@@71 $generated@@187)))
 :pattern ( ($generated@@71 ($generated@@52 $generated@@25 $generated@@187)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@63 $generated@@189 ($generated@@52 $generated@@189 $generated@@188)) ($generated@@52 $generated@@110 ($generated@@63 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@63 $generated@@189 ($generated@@52 $generated@@189 $generated@@188)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@202  (=> (and (and (not ($generated@@42 $generated@@190 $generated@@191)) ($generated@@171 $generated@@25 $generated@@191 $generated@@28 $generated@@192)) (and ($generated@@171 $generated@@25 $generated@@193 $generated@@27 $generated@@192) (= (ControlFlow 0 7) (- 0 6)))) (or (< ($generated@@99 $generated@@191) ($generated@@99 $generated@@191)) (and (= ($generated@@99 $generated@@191) ($generated@@99 $generated@@191)) (< ($generated@@99 $generated@@193) ($generated@@99 $generated@@194)))))))
(let (($generated@@203  (=> (and (and ($generated@@42 $generated@@190 $generated@@191) ($generated@@171 $generated@@25 $generated@@191 $generated@@28 $generated@@192)) (and ($generated@@171 $generated@@25 $generated@@193 $generated@@27 $generated@@192) (= (ControlFlow 0 5) (- 0 4)))) (or (< ($generated@@99 $generated@@191) ($generated@@99 $generated@@191)) (and (= ($generated@@99 $generated@@191) ($generated@@99 $generated@@191)) (< ($generated@@99 $generated@@193) ($generated@@99 $generated@@194)))))))
(let (($generated@@204  (=> (= $generated@@194 ($generated@@26 $generated@@195 $generated@@196)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@195 $generated@@28) ($generated@@24 $generated@@25 $generated@@196 $generated@@27)) (and (= $generated@@197 $generated@@196) ($generated@@24 $generated@@25 $generated@@197 $generated@@27))) (and (and (= $generated@@193 $generated@@197) (= $generated@@198 $generated@@195)) (and ($generated@@24 $generated@@25 $generated@@198 $generated@@28) (= $generated@@190 $generated@@198)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@203) (=> (= (ControlFlow 0 8) 7) $generated@@202))))))
(let (($generated@@205 true))
(let (($generated@@206  (=> (or (not (= $generated@@194 $generated@@33)) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@204) (=> (= (ControlFlow 0 9) 3) $generated@@205)))))
(let (($generated@@207 true))
(let (($generated@@208 true))
(let (($generated@@209  (=> (= $generated@@199 ($generated@@108 $generated@@200 $generated@@192 $generated false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@208) (=> (= (ControlFlow 0 10) 2) $generated@@207)) (=> (= (ControlFlow 0 10) 9) $generated@@206)))))
(let (($generated@@210  (=> (and ($generated@@172 $generated@@192) ($generated@@201 $generated@@192)) (=> (and (and ($generated@@24 $generated@@25 $generated@@191 $generated@@28) ($generated@@24 $generated@@25 $generated@@194 $generated@@27)) (and (= 2 $generated@@34) (= (ControlFlow 0 11) 10))) $generated@@209))))
$generated@@210))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
