(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U) Int)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Int)
(declare-fun $generated@@53 (T@U) T@U)
(declare-fun $generated@@56 (Int) Int)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@61 () Int)
(declare-fun $generated@@62 (T@U T@U Int Int) T@U)
(declare-fun $generated@@63 (T@U Int Int) Bool)
(declare-fun $generated@@68 (T@U T@U Int Int) T@U)
(declare-fun $generated@@69 (T@U Int Int) Bool)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@88 (Int T@U) T@U)
(declare-fun $generated@@93 (Int) T@U)
(declare-fun $generated@@96 (Int) T@U)
(declare-fun $generated@@99 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@120 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Int)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 () T@T)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@174 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@175 () T@T)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(declare-fun $generated@@229 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@230 (T@U) Bool)
(declare-fun $generated@@250 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (and ($generated@@36 $generated@@38) ($generated@@36 $generated@@39)) (= ($generated@@35 $generated@@38 $generated@@39) (= ($generated@@37 $generated@@38) ($generated@@37 $generated@@39))))
 :pattern ( ($generated@@35 $generated@@38 $generated@@39) ($generated@@36 $generated@@38))
 :pattern ( ($generated@@35 $generated@@38 $generated@@39) ($generated@@36 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (and ($generated@@40 $generated@@42) ($generated@@40 $generated@@43)) (= ($generated@@35 $generated@@42 $generated@@43) (= ($generated@@41 $generated@@42) ($generated@@41 $generated@@43))))
 :pattern ( ($generated@@35 $generated@@42 $generated@@43) ($generated@@40 $generated@@42))
 :pattern ( ($generated@@35 $generated@@42 $generated@@43) ($generated@@40 $generated@@43))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@4))
(assert ($generated@@28 $generated@@29 $generated@@45 $generated@@31))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@46 $generated@@47 $generated@@48) (= $generated@@47 $generated@@48))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@35 $generated@@49 $generated@@50) (= $generated@@49 $generated@@50))
 :pattern ( ($generated@@35 $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (and ($generated@@51 $generated@@54) ($generated@@51 $generated@@55)) (= ($generated@@35 $generated@@54 $generated@@55)  (and (= ($generated@@52 $generated@@54) ($generated@@52 $generated@@55)) ($generated@@46 ($generated@@53 $generated@@54) ($generated@@53 $generated@@55)))))
 :pattern ( ($generated@@35 $generated@@54 $generated@@55) ($generated@@51 $generated@@54))
 :pattern ( ($generated@@35 $generated@@54 $generated@@55) ($generated@@51 $generated@@55))
)))
(assert (forall (($generated@@57 Int) ) (! (= ($generated@@56 $generated@@57) $generated@@57)
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@58 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@58 $generated@@60 $generated@@59))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 Int) ($generated@@67 Int) ) (!  (=> (or ($generated@@63 $generated@@65 $generated@@66 $generated@@67) (and (< 1 $generated@@61) ($generated@@28 $generated@@29 $generated@@65 $generated@@32))) ($generated@@28 $generated@@29 ($generated@@62 $generated@@64 $generated@@65 $generated@@66 $generated@@67) $generated@@32))
 :pattern ( ($generated@@62 $generated@@64 $generated@@65 $generated@@66 $generated@@67))
))))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 Int) ($generated@@73 Int) ) (!  (=> (or ($generated@@69 $generated@@71 $generated@@72 $generated@@73) (and (< 1 $generated@@61) ($generated@@28 $generated@@29 $generated@@71 $generated@@31))) ($generated@@28 $generated@@29 ($generated@@68 $generated@@70 $generated@@71 $generated@@72 $generated@@73) $generated@@31))
 :pattern ( ($generated@@68 $generated@@70 $generated@@71 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@75 T@U) ) (! (= ($generated@@74 $generated@@75) (= ($generated@@44 $generated@@75) $generated@@4))
 :pattern ( ($generated@@74 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@76 $generated@@77) (= ($generated@@44 $generated@@77) $generated@@5))
 :pattern ( ($generated@@76 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@36 $generated@@78) (= ($generated@@44 $generated@@78) $generated@@6))
 :pattern ( ($generated@@36 $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@40 $generated@@79) (= ($generated@@44 $generated@@79) $generated@@7))
 :pattern ( ($generated@@40 $generated@@79))
)))
(assert (forall (($generated@@80 T@U) ) (! (= ($generated@@51 $generated@@80) (= ($generated@@44 $generated@@80) $generated@@8))
 :pattern ( ($generated@@51 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@81 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@81 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@76 $generated@@85) (exists (($generated@@86 T@U) ($generated@@87 T@U) ) (= $generated@@85 ($generated@@30 $generated@@86 $generated@@87))))
 :pattern ( ($generated@@76 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@51 $generated@@89) (exists (($generated@@90 Int) ($generated@@91 T@U) ) (= $generated@@89 ($generated@@88 $generated@@90 $generated@@91))))
 :pattern ( ($generated@@51 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ) (!  (=> ($generated@@74 $generated@@92) (= $generated@@92 $generated@@45))
 :pattern ( ($generated@@74 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@36 $generated@@94) (exists (($generated@@95 Int) ) (= $generated@@94 ($generated@@93 $generated@@95))))
 :pattern ( ($generated@@36 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@40 $generated@@97) (exists (($generated@@98 Int) ) (= $generated@@97 ($generated@@96 $generated@@98))))
 :pattern ( ($generated@@40 $generated@@97))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 Int) ($generated@@103 Int) ) (!  (=> (or ($generated@@63 ($generated@@58 $generated@@29 $generated@@101) ($generated@@56 $generated@@102) ($generated@@56 $generated@@103)) (and (< 1 $generated@@61) ($generated@@28 $generated@@29 $generated@@101 $generated@@32))) (and (=> (not ($generated@@16 ($generated@@58 $generated@@12 ($generated@@15 ($generated@@36 ($generated@@58 $generated@@29 $generated@@101)))))) (=> (not ($generated@@16 ($generated@@58 $generated@@12 ($generated@@15 ($generated@@40 ($generated@@58 $generated@@29 $generated@@101)))))) (let (($generated@@104 ($generated@@58 $generated@@29 ($generated@@53 ($generated@@58 $generated@@29 $generated@@101)))))
($generated@@69 $generated@@104 ($generated@@56 $generated@@102) ($generated@@56 $generated@@103))))) (= ($generated@@62 ($generated@@99 $generated@@100) ($generated@@58 $generated@@29 $generated@@101) ($generated@@56 $generated@@102) ($generated@@56 $generated@@103)) (ite ($generated@@36 ($generated@@58 $generated@@29 $generated@@101)) ($generated@@58 $generated@@29 $generated@@101) (ite ($generated@@40 ($generated@@58 $generated@@29 $generated@@101)) (let (($generated@@105 ($generated@@56 ($generated@@41 ($generated@@58 $generated@@29 $generated@@101)))))
(ite (= $generated@@105 ($generated@@56 $generated@@102)) ($generated@@93 ($generated@@56 $generated@@103)) $generated@@101)) (let (($generated@@106 ($generated@@58 $generated@@29 ($generated@@53 ($generated@@58 $generated@@29 $generated@@101)))))
(let (($generated@@107 ($generated@@56 ($generated@@52 ($generated@@58 $generated@@29 $generated@@101)))))
($generated@@58 $generated@@29 ($generated@@88 $generated@@107 ($generated@@58 $generated@@29 ($generated@@68 ($generated@@99 $generated@@100) $generated@@106 ($generated@@56 $generated@@102) ($generated@@56 $generated@@103))))))))))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@99 $generated@@100) ($generated@@58 $generated@@29 $generated@@101) ($generated@@56 $generated@@102) ($generated@@56 $generated@@103)))
))))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@108 $generated@@109) (or ($generated@@74 $generated@@109) ($generated@@76 $generated@@109)))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 Int) ($generated@@113 Int) ) (!  (=> (or ($generated@@63 $generated@@111 $generated@@112 $generated@@113) (and (< 1 $generated@@61) ($generated@@28 $generated@@29 $generated@@111 $generated@@32))) (and (=> (not ($generated@@36 $generated@@111)) (=> (not ($generated@@40 $generated@@111)) (let (($generated@@114 ($generated@@53 $generated@@111)))
($generated@@69 $generated@@114 $generated@@112 $generated@@113)))) (= ($generated@@62 ($generated@@99 $generated@@110) $generated@@111 $generated@@112 $generated@@113) (ite ($generated@@36 $generated@@111) $generated@@111 (ite ($generated@@40 $generated@@111) (let (($generated@@115 ($generated@@41 $generated@@111)))
(ite (= $generated@@115 $generated@@112) ($generated@@93 $generated@@113) $generated@@111)) (let (($generated@@116 ($generated@@53 $generated@@111)))
(let (($generated@@117 ($generated@@52 $generated@@111)))
($generated@@88 $generated@@117 ($generated@@68 $generated@@110 $generated@@116 $generated@@112 $generated@@113)))))))))
 :pattern ( ($generated@@62 ($generated@@99 $generated@@110) $generated@@111 $generated@@112 $generated@@113))
))))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@118 $generated@@31) (or ($generated@@74 $generated@@118) ($generated@@76 $generated@@118)))
 :pattern ( ($generated@@76 $generated@@118) ($generated@@28 $generated@@29 $generated@@118 $generated@@31))
 :pattern ( ($generated@@74 $generated@@118) ($generated@@28 $generated@@29 $generated@@118 $generated@@31))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and ($generated@@76 $generated@@121) ($generated@@76 $generated@@122)) (= ($generated@@46 $generated@@121 $generated@@122)  (and ($generated@@35 ($generated@@119 $generated@@121) ($generated@@119 $generated@@122)) ($generated@@46 ($generated@@120 $generated@@121) ($generated@@120 $generated@@122)))))
 :pattern ( ($generated@@46 $generated@@121 $generated@@122) ($generated@@76 $generated@@121))
 :pattern ( ($generated@@46 $generated@@121 $generated@@122) ($generated@@76 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (=> (and ($generated@@74 $generated@@123) ($generated@@74 $generated@@124)) ($generated@@46 $generated@@123 $generated@@124))
 :pattern ( ($generated@@46 $generated@@123 $generated@@124) ($generated@@74 $generated@@123))
 :pattern ( ($generated@@46 $generated@@123 $generated@@124) ($generated@@74 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@44 ($generated@@30 $generated@@125 $generated@@126)) $generated@@5)
 :pattern ( ($generated@@30 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@119 ($generated@@30 $generated@@127 $generated@@128)) $generated@@127)
 :pattern ( ($generated@@30 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@120 ($generated@@30 $generated@@129 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@30 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 Int) ($generated@@132 T@U) ) (! (= ($generated@@44 ($generated@@88 $generated@@131 $generated@@132)) $generated@@8)
 :pattern ( ($generated@@88 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 Int) ($generated@@134 T@U) ) (! (= ($generated@@52 ($generated@@88 $generated@@133 $generated@@134)) $generated@@133)
 :pattern ( ($generated@@88 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 Int) ($generated@@136 T@U) ) (! (= ($generated@@53 ($generated@@88 $generated@@135 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@88 $generated@@135 $generated@@136))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 Int) ($generated@@140 Int) ) (!  (=> (or ($generated@@69 ($generated@@58 $generated@@29 $generated@@138) ($generated@@56 $generated@@139) ($generated@@56 $generated@@140)) (and (< 1 $generated@@61) ($generated@@28 $generated@@29 $generated@@138 $generated@@31))) (and (=> (not ($generated@@16 ($generated@@58 $generated@@12 ($generated@@15 ($generated@@74 ($generated@@58 $generated@@29 $generated@@138)))))) (let (($generated@@141 ($generated@@58 $generated@@29 ($generated@@120 ($generated@@58 $generated@@29 $generated@@138)))))
(let (($generated@@142 ($generated@@58 $generated@@29 ($generated@@119 ($generated@@58 $generated@@29 $generated@@138)))))
 (and ($generated@@63 $generated@@142 ($generated@@56 $generated@@139) ($generated@@56 $generated@@140)) ($generated@@69 $generated@@141 ($generated@@56 $generated@@139) ($generated@@56 $generated@@140)))))) (= ($generated@@68 ($generated@@99 $generated@@137) ($generated@@58 $generated@@29 $generated@@138) ($generated@@56 $generated@@139) ($generated@@56 $generated@@140)) (ite ($generated@@74 ($generated@@58 $generated@@29 $generated@@138)) $generated@@138 (let (($generated@@143 ($generated@@58 $generated@@29 ($generated@@120 ($generated@@58 $generated@@29 $generated@@138)))))
(let (($generated@@144 ($generated@@58 $generated@@29 ($generated@@119 ($generated@@58 $generated@@29 $generated@@138)))))
($generated@@58 $generated@@29 ($generated@@30 ($generated@@58 $generated@@29 ($generated@@62 ($generated@@99 $generated@@137) $generated@@144 ($generated@@56 $generated@@139) ($generated@@56 $generated@@140))) ($generated@@58 $generated@@29 ($generated@@68 ($generated@@99 $generated@@137) $generated@@143 ($generated@@56 $generated@@139) ($generated@@56 $generated@@140)))))))))))
 :weight 3
 :pattern ( ($generated@@68 ($generated@@99 $generated@@137) ($generated@@58 $generated@@29 $generated@@138) ($generated@@56 $generated@@139) ($generated@@56 $generated@@140)))
))))
(assert (forall (($generated@@145 Int) ) (! (= ($generated@@44 ($generated@@93 $generated@@145)) $generated@@6)
 :pattern ( ($generated@@93 $generated@@145))
)))
(assert (forall (($generated@@146 Int) ) (! (= ($generated@@37 ($generated@@93 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@93 $generated@@146))
)))
(assert (forall (($generated@@147 Int) ) (! (= ($generated@@44 ($generated@@96 $generated@@147)) $generated@@7)
 :pattern ( ($generated@@96 $generated@@147))
)))
(assert (forall (($generated@@148 Int) ) (! (= ($generated@@41 ($generated@@96 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@96 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@81 $generated@@150 ($generated@@82 $generated@@150 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@82 $generated@@150 $generated@@149))
)))
(assert (forall (($generated@@152 T@U) ) (!  (=> ($generated@@151 $generated@@152) (or (or ($generated@@36 $generated@@152) ($generated@@40 $generated@@152)) ($generated@@51 $generated@@152)))
 :pattern ( ($generated@@151 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@153 $generated@@154) ($generated@@153 ($generated@@30 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@30 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (< ($generated@@153 $generated@@157) ($generated@@153 ($generated@@30 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@30 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@158 Int) ($generated@@159 T@U) ) (! (< ($generated@@153 $generated@@159) ($generated@@153 ($generated@@88 $generated@@158 $generated@@159)))
 :pattern ( ($generated@@88 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@28 $generated@@29 ($generated@@93 $generated@@160) $generated@@32) ($generated@@28 $generated@@13 ($generated@@17 $generated@@160) $generated))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@93 $generated@@160) $generated@@32))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@28 $generated@@29 ($generated@@96 $generated@@161) $generated@@32) ($generated@@28 $generated@@13 ($generated@@17 $generated@@161) $generated))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@96 $generated@@161) $generated@@32))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 Int) ($generated@@165 Int) ) (! (= ($generated@@62 ($generated@@99 $generated@@162) $generated@@163 $generated@@164 $generated@@165) ($generated@@62 $generated@@162 $generated@@163 $generated@@164 $generated@@165))
 :pattern ( ($generated@@62 ($generated@@99 $generated@@162) $generated@@163 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (! (= ($generated@@68 ($generated@@99 $generated@@166) $generated@@167 $generated@@168 $generated@@169) ($generated@@68 $generated@@166 $generated@@167 $generated@@168 $generated@@169))
 :pattern ( ($generated@@68 ($generated@@99 $generated@@166) $generated@@167 $generated@@168 $generated@@169))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@170 $generated@@181 $generated@@182 $generated@@183 ($generated@@177 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@186 $generated@@187) $generated@@184)
 :weight 0
)) (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@170 $generated@@188 $generated@@189 $generated@@190 ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@170 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@170 $generated@@197 $generated@@198 $generated@@199 ($generated@@177 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (= ($generated@@11 $generated@@171) 4)) (= ($generated@@11 $generated@@172) 5)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@174 $generated@@206 $generated@@207 ($generated@@178 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@208) $generated@@210) $generated@@208)
 :weight 0
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@215 $generated@@216) (= ($generated@@174 $generated@@211 $generated@@212 ($generated@@178 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@213) $generated@@216) ($generated@@174 $generated@@211 $generated@@212 $generated@@214 $generated@@216)))
 :weight 0
))) (= ($generated@@11 $generated@@175) 6)) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (= ($generated@@11 ($generated@@176 $generated@@217 $generated@@218)) 7))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@179 ($generated@@176 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@176 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@180 ($generated@@176 $generated@@221 $generated@@222)) $generated@@222)
 :pattern ( ($generated@@176 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@16 ($generated@@170 $generated@@171 $generated@@172 $generated@@12 ($generated@@173 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (or (not (= $generated@@227 $generated@@223)) (not true)) ($generated@@16 ($generated@@81 $generated@@12 ($generated@@174 $generated@@172 $generated@@175 ($generated@@174 $generated@@171 ($generated@@176 $generated@@172 $generated@@175) $generated@@224 $generated@@227) $generated@@225)))) $generated@@226))
 :pattern ( ($generated@@170 $generated@@171 $generated@@172 $generated@@12 ($generated@@173 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and ($generated@@230 $generated@@232) (and ($generated@@36 $generated@@231) ($generated@@229 $generated@@29 $generated@@231 $generated@@32 $generated@@232))) ($generated@@229 $generated@@13 ($generated@@17 ($generated@@37 $generated@@231)) $generated $generated@@232))
 :pattern ( ($generated@@229 $generated@@13 ($generated@@17 ($generated@@37 $generated@@231)) $generated $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@230 $generated@@234) (and ($generated@@40 $generated@@233) ($generated@@229 $generated@@29 $generated@@233 $generated@@32 $generated@@234))) ($generated@@229 $generated@@13 ($generated@@17 ($generated@@41 $generated@@233)) $generated $generated@@234))
 :pattern ( ($generated@@229 $generated@@13 ($generated@@17 ($generated@@41 $generated@@233)) $generated $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and ($generated@@230 $generated@@236) (and ($generated@@51 $generated@@235) ($generated@@229 $generated@@29 $generated@@235 $generated@@32 $generated@@236))) ($generated@@229 $generated@@13 ($generated@@17 ($generated@@52 $generated@@235)) $generated $generated@@236))
 :pattern ( ($generated@@229 $generated@@13 ($generated@@17 ($generated@@52 $generated@@235)) $generated $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@237 $generated@@32) (or (or ($generated@@36 $generated@@237) ($generated@@40 $generated@@237)) ($generated@@51 $generated@@237)))
 :pattern ( ($generated@@51 $generated@@237) ($generated@@28 $generated@@29 $generated@@237 $generated@@32))
 :pattern ( ($generated@@40 $generated@@237) ($generated@@28 $generated@@29 $generated@@237 $generated@@32))
 :pattern ( ($generated@@36 $generated@@237) ($generated@@28 $generated@@29 $generated@@237 $generated@@32))
)))
(assert  (=> (<= 1 $generated@@61) (forall (($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 Int) ($generated@@241 Int) ) (!  (=> (or ($generated@@69 $generated@@239 $generated@@240 $generated@@241) (and (< 1 $generated@@61) ($generated@@28 $generated@@29 $generated@@239 $generated@@31))) (and (=> (not ($generated@@74 $generated@@239)) (let (($generated@@242 ($generated@@120 $generated@@239)))
(let (($generated@@243 ($generated@@119 $generated@@239)))
 (and ($generated@@63 $generated@@243 $generated@@240 $generated@@241) ($generated@@69 $generated@@242 $generated@@240 $generated@@241))))) (= ($generated@@68 ($generated@@99 $generated@@238) $generated@@239 $generated@@240 $generated@@241) (ite ($generated@@74 $generated@@239) $generated@@239 (let (($generated@@244 ($generated@@120 $generated@@239)))
(let (($generated@@245 ($generated@@119 $generated@@239)))
($generated@@30 ($generated@@62 $generated@@238 $generated@@245 $generated@@240 $generated@@241) ($generated@@68 $generated@@238 $generated@@244 $generated@@240 $generated@@241))))))))
 :pattern ( ($generated@@68 ($generated@@99 $generated@@238) $generated@@239 $generated@@240 $generated@@241))
))))
(assert (forall (($generated@@246 T@U) ($generated@@247 T@U) ) (!  (=> (and ($generated@@230 $generated@@247) ($generated@@28 $generated@@29 $generated@@246 $generated@@31)) ($generated@@229 $generated@@29 $generated@@246 $generated@@31 $generated@@247))
 :pattern ( ($generated@@229 $generated@@29 $generated@@246 $generated@@31 $generated@@247))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (!  (=> (and ($generated@@230 $generated@@249) ($generated@@28 $generated@@29 $generated@@248 $generated@@32)) ($generated@@229 $generated@@29 $generated@@248 $generated@@32 $generated@@249))
 :pattern ( ($generated@@229 $generated@@29 $generated@@248 $generated@@32 $generated@@249))
)))
(assert (= ($generated@@27 $generated@@32) $generated@@2))
(assert (= ($generated@@250 $generated@@32) $generated@@9))
(assert (= ($generated@@27 $generated@@31) $generated@@3))
(assert (= ($generated@@250 $generated@@31) $generated@@10))
(assert (= $generated@@45 ($generated@@58 $generated@@29 $generated@@45)))
(assert (forall (($generated@@251 T@U) ($generated@@252 T@U) ) (!  (=> (and ($generated@@230 $generated@@252) (and ($generated@@76 $generated@@251) ($generated@@229 $generated@@29 $generated@@251 $generated@@31 $generated@@252))) ($generated@@229 $generated@@29 ($generated@@119 $generated@@251) $generated@@32 $generated@@252))
 :pattern ( ($generated@@229 $generated@@29 ($generated@@119 $generated@@251) $generated@@32 $generated@@252))
)))
(assert (forall (($generated@@253 T@U) ($generated@@254 T@U) ) (!  (=> (and ($generated@@230 $generated@@254) (and ($generated@@76 $generated@@253) ($generated@@229 $generated@@29 $generated@@253 $generated@@31 $generated@@254))) ($generated@@229 $generated@@29 ($generated@@120 $generated@@253) $generated@@31 $generated@@254))
 :pattern ( ($generated@@229 $generated@@29 ($generated@@120 $generated@@253) $generated@@31 $generated@@254))
)))
(assert (forall (($generated@@255 T@U) ($generated@@256 T@U) ) (!  (=> (and ($generated@@230 $generated@@256) (and ($generated@@51 $generated@@255) ($generated@@229 $generated@@29 $generated@@255 $generated@@32 $generated@@256))) ($generated@@229 $generated@@29 ($generated@@53 $generated@@255) $generated@@31 $generated@@256))
 :pattern ( ($generated@@229 $generated@@29 ($generated@@53 $generated@@255) $generated@@31 $generated@@256))
)))
(assert (forall (($generated@@257 T@U) ($generated@@258 T@U) ) (! (= ($generated@@30 ($generated@@58 $generated@@29 $generated@@257) ($generated@@58 $generated@@29 $generated@@258)) ($generated@@58 $generated@@29 ($generated@@30 $generated@@257 $generated@@258)))
 :pattern ( ($generated@@30 ($generated@@58 $generated@@29 $generated@@257) ($generated@@58 $generated@@29 $generated@@258)))
)))
(assert (forall (($generated@@259 Int) ($generated@@260 T@U) ) (! (= ($generated@@88 ($generated@@56 $generated@@259) ($generated@@58 $generated@@29 $generated@@260)) ($generated@@58 $generated@@29 ($generated@@88 $generated@@259 $generated@@260)))
 :pattern ( ($generated@@88 ($generated@@56 $generated@@259) ($generated@@58 $generated@@29 $generated@@260)))
)))
(assert (forall (($generated@@261 Int) ) (! (= ($generated@@82 $generated@@13 ($generated@@17 ($generated@@56 $generated@@261))) ($generated@@58 $generated@@175 ($generated@@82 $generated@@13 ($generated@@17 $generated@@261))))
 :pattern ( ($generated@@82 $generated@@13 ($generated@@17 ($generated@@56 $generated@@261))))
)))
(assert (forall (($generated@@262 Int) ) (! (= ($generated@@93 ($generated@@56 $generated@@262)) ($generated@@58 $generated@@29 ($generated@@93 $generated@@262)))
 :pattern ( ($generated@@93 ($generated@@56 $generated@@262)))
)))
(assert (forall (($generated@@263 Int) ) (! (= ($generated@@96 ($generated@@56 $generated@@263)) ($generated@@58 $generated@@29 ($generated@@96 $generated@@263)))
 :pattern ( ($generated@@96 ($generated@@56 $generated@@263)))
)))
(assert (forall (($generated@@264 T@U) ($generated@@265 T@T) ) (! (= ($generated@@82 $generated@@265 ($generated@@58 $generated@@265 $generated@@264)) ($generated@@58 $generated@@175 ($generated@@82 $generated@@265 $generated@@264)))
 :pattern ( ($generated@@82 $generated@@265 ($generated@@58 $generated@@265 $generated@@264)))
)))
(assert (forall (($generated@@266 Int) ($generated@@267 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@88 $generated@@266 $generated@@267) $generated@@32)  (and ($generated@@28 $generated@@13 ($generated@@17 $generated@@266) $generated) ($generated@@28 $generated@@29 $generated@@267 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@88 $generated@@266 $generated@@267) $generated@@32))
)))
(assert (forall (($generated@@268 T@U) ($generated@@269 T@U) ) (! ($generated@@229 $generated@@13 $generated@@269 $generated $generated@@268)
 :pattern ( ($generated@@229 $generated@@13 $generated@@269 $generated $generated@@268))
)))
(assert (forall (($generated@@270 T@U) ) (! ($generated@@28 $generated@@13 $generated@@270 $generated)
 :pattern ( ($generated@@28 $generated@@13 $generated@@270 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@271 () T@U)
(declare-fun $generated@@272 () T@U)
(declare-fun $generated@@273 () Int)
(declare-fun $generated@@274 () Int)
(declare-fun $generated@@275 () T@U)
(declare-fun $generated@@276 () T@U)
(declare-fun $generated@@277 () T@U)
(declare-fun $generated@@278 () T@U)
(declare-fun $generated@@279 () T@U)
(declare-fun $generated@@280 () T@U)
(declare-fun $generated@@281 () T@U)
(declare-fun $generated@@282 () T@U)
(declare-fun $generated@@283 (T@U) Bool)
(declare-fun $generated@@284 () T@U)
(declare-fun $generated@@285 () T@U)
(declare-fun $generated@@286 () T@U)
(declare-fun $generated@@287 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@288  (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@46 ($generated@@68 ($generated@@99 ($generated@@99 $generated@@271)) ($generated@@68 ($generated@@99 ($generated@@99 $generated@@271)) $generated@@272 $generated@@273 $generated@@274) $generated@@273 $generated@@274) ($generated@@68 ($generated@@99 ($generated@@99 $generated@@271)) $generated@@272 $generated@@273 $generated@@274)))))
(let (($generated@@289  (=> (= $generated@@272 ($generated@@30 $generated@@275 $generated@@276)) (=> (and ($generated@@28 $generated@@29 $generated@@275 $generated@@32) ($generated@@28 $generated@@29 $generated@@276 $generated@@31)) (=> (and (and (and (and ($generated@@28 $generated@@29 $generated@@277 $generated@@31) ($generated@@229 $generated@@29 $generated@@277 $generated@@31 $generated@@278)) (= $generated@@279 $generated@@276)) (and ($generated@@28 $generated@@29 $generated@@279 $generated@@31) (= $generated@@277 $generated@@279))) (and (and (and ($generated@@28 $generated@@29 $generated@@280 $generated@@32) ($generated@@229 $generated@@29 $generated@@280 $generated@@32 $generated@@278)) (= $generated@@281 $generated@@275)) (and ($generated@@28 $generated@@29 $generated@@281 $generated@@32) (= $generated@@280 $generated@@281)))) (and (=> (= (ControlFlow 0 5) (- 0 11)) (or (or (<= 0 $generated@@273) (< ($generated@@153 $generated@@280) ($generated@@153 $generated@@272))) (= $generated@@273 $generated@@273))) (=> (or (or (<= 0 $generated@@273) (< ($generated@@153 $generated@@280) ($generated@@153 $generated@@272))) (= $generated@@273 $generated@@273)) (and (=> (= (ControlFlow 0 5) (- 0 10)) (or (or (or (<= 0 $generated@@274) (< ($generated@@153 $generated@@280) ($generated@@153 $generated@@272))) (< $generated@@273 $generated@@273)) (= $generated@@274 $generated@@274))) (=> (or (or (or (<= 0 $generated@@274) (< ($generated@@153 $generated@@280) ($generated@@153 $generated@@272))) (< $generated@@273 $generated@@273)) (= $generated@@274 $generated@@274)) (and (=> (= (ControlFlow 0 5) (- 0 9)) (or (< ($generated@@153 $generated@@280) ($generated@@153 $generated@@272)) (and (= ($generated@@153 $generated@@280) ($generated@@153 $generated@@272)) (or (< $generated@@273 $generated@@273) (and (= $generated@@273 $generated@@273) (< $generated@@274 $generated@@274)))))) (=> (or (< ($generated@@153 $generated@@280) ($generated@@153 $generated@@272)) (and (= ($generated@@153 $generated@@280) ($generated@@153 $generated@@272)) (or (< $generated@@273 $generated@@273) (and (= $generated@@273 $generated@@273) (< $generated@@274 $generated@@274))))) (=> (and ($generated@@230 $generated@@282) ($generated@@283 $generated@@282)) (=> (and (and (and ($generated@@151 ($generated@@62 ($generated@@99 $generated@@271) ($generated@@62 ($generated@@99 $generated@@271) $generated@@280 $generated@@273 $generated@@274) $generated@@273 $generated@@274)) ($generated@@151 ($generated@@62 ($generated@@99 $generated@@271) $generated@@280 $generated@@273 $generated@@274))) (and (and ($generated@@63 $generated@@280 $generated@@273 $generated@@274) ($generated@@63 ($generated@@62 ($generated@@99 $generated@@271) $generated@@280 $generated@@273 $generated@@274) $generated@@273 $generated@@274)) ($generated@@63 $generated@@280 $generated@@273 $generated@@274))) (and ($generated@@35 ($generated@@62 ($generated@@99 ($generated@@99 $generated@@271)) ($generated@@62 ($generated@@99 ($generated@@99 $generated@@271)) $generated@@280 $generated@@273 $generated@@274) $generated@@273 $generated@@274) ($generated@@62 ($generated@@99 ($generated@@99 $generated@@271)) $generated@@280 $generated@@273 $generated@@274)) (= $generated@@278 $generated@@282))) (and (=> (= (ControlFlow 0 5) (- 0 8)) (or (or (<= 0 $generated@@273) (< ($generated@@153 $generated@@277) ($generated@@153 $generated@@272))) (= $generated@@273 $generated@@273))) (=> (or (or (<= 0 $generated@@273) (< ($generated@@153 $generated@@277) ($generated@@153 $generated@@272))) (= $generated@@273 $generated@@273)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (or (or (<= 0 $generated@@274) (< ($generated@@153 $generated@@277) ($generated@@153 $generated@@272))) (< $generated@@273 $generated@@273)) (= $generated@@274 $generated@@274))) (=> (or (or (or (<= 0 $generated@@274) (< ($generated@@153 $generated@@277) ($generated@@153 $generated@@272))) (< $generated@@273 $generated@@273)) (= $generated@@274 $generated@@274)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (< ($generated@@153 $generated@@277) ($generated@@153 $generated@@272)) (and (= ($generated@@153 $generated@@277) ($generated@@153 $generated@@272)) (or (< $generated@@273 $generated@@273) (and (= $generated@@273 $generated@@273) (< $generated@@274 $generated@@274)))))) (=> (or (< ($generated@@153 $generated@@277) ($generated@@153 $generated@@272)) (and (= ($generated@@153 $generated@@277) ($generated@@153 $generated@@272)) (or (< $generated@@273 $generated@@273) (and (= $generated@@273 $generated@@273) (< $generated@@274 $generated@@274))))) (=> (and ($generated@@230 $generated@@284) ($generated@@283 $generated@@284)) (=> (and (and (and (and ($generated@@108 ($generated@@68 ($generated@@99 $generated@@271) ($generated@@68 ($generated@@99 $generated@@271) $generated@@277 $generated@@273 $generated@@274) $generated@@273 $generated@@274)) ($generated@@108 ($generated@@68 ($generated@@99 $generated@@271) $generated@@277 $generated@@273 $generated@@274))) (and (and ($generated@@69 $generated@@277 $generated@@273 $generated@@274) ($generated@@69 ($generated@@68 ($generated@@99 $generated@@271) $generated@@277 $generated@@273 $generated@@274) $generated@@273 $generated@@274)) ($generated@@69 $generated@@277 $generated@@273 $generated@@274))) ($generated@@46 ($generated@@68 ($generated@@99 ($generated@@99 $generated@@271)) ($generated@@68 ($generated@@99 ($generated@@99 $generated@@271)) $generated@@277 $generated@@273 $generated@@274) $generated@@273 $generated@@274) ($generated@@68 ($generated@@99 ($generated@@99 $generated@@271)) $generated@@277 $generated@@273 $generated@@274))) (and (= $generated@@282 $generated@@284) (= (ControlFlow 0 5) 3))) $generated@@288)))))))))))))))))))))
(let (($generated@@290  (=> (and (= $generated@@272 $generated@@45) (= (ControlFlow 0 4) 3)) $generated@@288)))
(let (($generated@@291 true))
(let (($generated@@292  (=> (or (not (= $generated@@272 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 12) 5) $generated@@289) (=> (= (ControlFlow 0 12) 1) $generated@@291)))))
(let (($generated@@293  (=> (and (= $generated@@285 ($generated@@173 $generated@@286 $generated@@287 $generated@@1 false)) ($generated@@108 $generated@@272)) (=> (and (and ($generated@@230 $generated@@278) ($generated@@283 $generated@@278)) (and (= $generated@@287 $generated@@278) (forall (($generated@@294 T@U) ($generated@@295 Int) ($generated@@296 Int) ) (!  (=> (and (and ($generated@@28 $generated@@29 $generated@@294 $generated@@31) ($generated@@16 ($generated@@58 $generated@@12 ($generated@@15 true)))) (or (< ($generated@@153 $generated@@294) ($generated@@153 $generated@@272)) (and (= ($generated@@153 $generated@@294) ($generated@@153 $generated@@272)) (or (and (<= 0 $generated@@295) (< $generated@@295 $generated@@273)) (and (= $generated@@295 $generated@@273) (and (<= 0 $generated@@296) (< $generated@@296 $generated@@274))))))) ($generated@@46 ($generated@@68 ($generated@@99 $generated@@271) ($generated@@68 ($generated@@99 $generated@@271) $generated@@294 $generated@@295 $generated@@296) $generated@@295 $generated@@296) ($generated@@68 ($generated@@99 $generated@@271) $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@68 ($generated@@99 $generated@@271) ($generated@@68 ($generated@@99 $generated@@271) $generated@@294 $generated@@295 $generated@@296) $generated@@295 $generated@@296))
)))) (and (=> (= (ControlFlow 0 13) 4) $generated@@290) (=> (= (ControlFlow 0 13) 12) $generated@@292))))))
(let (($generated@@297  (=> (and ($generated@@230 $generated@@287) ($generated@@283 $generated@@287)) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@272 $generated@@31) ($generated@@229 $generated@@29 $generated@@272 $generated@@31 $generated@@287)) ($generated@@108 $generated@@272)) (and (= 2 $generated@@61) (= (ControlFlow 0 14) 13))) $generated@@293))))
$generated@@297))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
