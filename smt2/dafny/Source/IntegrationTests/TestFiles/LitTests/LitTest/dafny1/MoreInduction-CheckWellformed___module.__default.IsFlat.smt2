(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@69 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U) Bool)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@106 (T@U T@U) Bool)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@131 (T@U) Int)
(declare-fun $generated@@136 (T@U) Int)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 () T@T)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@146 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@147 (T@T T@T) T@T)
(declare-fun $generated@@148 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@149 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 (T@T) T@T)
(declare-fun $generated@@151 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@10 $generated@@28) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@31 $generated@@36) (= ($generated@@27 $generated@@28 ($generated@@29 $generated@@34 $generated@@35) ($generated@@30 $generated@@33) $generated@@36)  (and ($generated@@27 $generated@@28 $generated@@34 ($generated@@32 $generated@@33) $generated@@36) ($generated@@27 $generated@@28 $generated@@35 ($generated@@30 $generated@@33) $generated@@36))))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@29 $generated@@34 $generated@@35) ($generated@@30 $generated@@33) $generated@@36))
)))
(assert (= ($generated@@10 $generated@@47) 4))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@41 $generated@@48 ($generated@@40 $generated@@28 $generated@@50)) (and (< 1 $generated@@37) ($generated@@42 $generated@@28 $generated@@50 ($generated@@30 $generated@@48)))) (and (=> (not ($generated@@15 ($generated@@40 $generated@@11 ($generated@@14 ($generated@@43 ($generated@@40 $generated@@28 $generated@@50)))))) (let (($generated@@51 ($generated@@40 $generated@@28 ($generated@@44 ($generated@@40 $generated@@28 $generated@@50)))))
(let (($generated@@52 ($generated@@40 $generated@@28 ($generated@@45 ($generated@@40 $generated@@28 $generated@@50)))))
 (=> ($generated@@46 $generated@@52) ($generated@@41 $generated@@48 $generated@@51))))) (= ($generated@@38 $generated@@48 ($generated@@39 $generated@@49) ($generated@@40 $generated@@28 $generated@@50)) (ite ($generated@@43 ($generated@@40 $generated@@28 $generated@@50)) true (let (($generated@@53 ($generated@@40 $generated@@28 ($generated@@44 ($generated@@40 $generated@@28 $generated@@50)))))
(let (($generated@@54 ($generated@@40 $generated@@28 ($generated@@45 ($generated@@40 $generated@@28 $generated@@50)))))
(ite ($generated@@46 $generated@@54) ($generated@@15 ($generated@@40 $generated@@11 ($generated@@14 ($generated@@38 $generated@@48 ($generated@@39 $generated@@49) $generated@@53)))) ($generated@@15 ($generated@@40 $generated@@11 ($generated@@14 false))))))))))
 :weight 3
 :pattern ( ($generated@@38 $generated@@48 ($generated@@39 $generated@@49) ($generated@@40 $generated@@28 $generated@@50)))
))))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@38 $generated@@55 ($generated@@39 $generated@@56) $generated@@57) ($generated@@38 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@38 $generated@@55 ($generated@@39 $generated@@56) $generated@@57))
)))
(assert (= ($generated@@58 $generated@@59) $generated@@4))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@31 $generated@@61) ($generated@@27 $generated@@28 $generated@@59 ($generated@@30 $generated@@60) $generated@@61))
 :pattern ( ($generated@@27 $generated@@28 $generated@@59 ($generated@@30 $generated@@60) $generated@@61))
)))
(assert (forall (($generated@@62 T@U) ) (! ($generated@@42 $generated@@28 $generated@@59 ($generated@@30 $generated@@62))
 :pattern ( ($generated@@42 $generated@@28 $generated@@59 ($generated@@30 $generated@@62)))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@40 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@40 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (! (= ($generated@@43 $generated@@65) (= ($generated@@58 $generated@@65) $generated@@4))
 :pattern ( ($generated@@43 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@66 $generated@@67) (= ($generated@@58 $generated@@67) $generated@@5))
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@46 $generated@@68) (= ($generated@@58 $generated@@68) $generated@@6))
 :pattern ( ($generated@@46 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@69 $generated@@70) (= ($generated@@58 $generated@@70) $generated@@7))
 :pattern ( ($generated@@69 $generated@@70))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 ($generated@@71 $generated@@74 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@71 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ) (!  (=> ($generated@@66 $generated@@75) (exists (($generated@@76 T@U) ($generated@@77 T@U) ) (= $generated@@75 ($generated@@29 $generated@@76 $generated@@77))))
 :pattern ( ($generated@@66 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@42 $generated@@28 ($generated@@29 $generated@@79 $generated@@80) ($generated@@30 $generated@@78))  (and ($generated@@42 $generated@@28 $generated@@79 ($generated@@32 $generated@@78)) ($generated@@42 $generated@@28 $generated@@80 ($generated@@30 $generated@@78))))
 :pattern ( ($generated@@42 $generated@@28 ($generated@@29 $generated@@79 $generated@@80) ($generated@@30 $generated@@78)))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@43 $generated@@81) (= $generated@@81 $generated@@59))
 :pattern ( ($generated@@43 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@46 $generated@@83) (exists (($generated@@84 T@U) ) (= $generated@@83 ($generated@@82 $generated@@84))))
 :pattern ( ($generated@@46 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@69 $generated@@86) (exists (($generated@@87 T@U) ) (= $generated@@86 ($generated@@85 $generated@@87))))
 :pattern ( ($generated@@69 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@88 ($generated@@72 $generated@@92 $generated@@89) $generated@@90 $generated@@91) ($generated@@27 $generated@@92 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@88 ($generated@@72 $generated@@92 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@26 ($generated@@30 $generated@@94)) $generated@@2) (= ($generated@@93 ($generated@@30 $generated@@94)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@26 ($generated@@32 $generated@@95)) $generated@@3) (= ($generated@@93 ($generated@@32 $generated@@95)) $generated@@9))
 :pattern ( ($generated@@32 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@31 $generated@@98) (= ($generated@@27 $generated@@28 ($generated@@82 $generated@@97) ($generated@@32 $generated@@96) $generated@@98) ($generated@@88 $generated@@97 $generated@@96 $generated@@98)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@82 $generated@@97) ($generated@@32 $generated@@96) $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> ($generated@@31 $generated@@101) (= ($generated@@27 $generated@@28 ($generated@@85 $generated@@100) ($generated@@32 $generated@@99) $generated@@101) ($generated@@27 $generated@@28 $generated@@100 ($generated@@30 $generated@@99) $generated@@101)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@85 $generated@@100) ($generated@@32 $generated@@99) $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> ($generated@@42 $generated@@28 $generated@@103 ($generated@@30 $generated@@102)) (or ($generated@@43 $generated@@103) ($generated@@66 $generated@@103)))
 :pattern ( ($generated@@66 $generated@@103) ($generated@@42 $generated@@28 $generated@@103 ($generated@@30 $generated@@102)))
 :pattern ( ($generated@@43 $generated@@103) ($generated@@42 $generated@@28 $generated@@103 ($generated@@30 $generated@@102)))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> ($generated@@42 $generated@@28 $generated@@105 ($generated@@32 $generated@@104)) (or ($generated@@46 $generated@@105) ($generated@@69 $generated@@105)))
 :pattern ( ($generated@@69 $generated@@105) ($generated@@42 $generated@@28 $generated@@105 ($generated@@32 $generated@@104)))
 :pattern ( ($generated@@46 $generated@@105) ($generated@@42 $generated@@28 $generated@@105 ($generated@@32 $generated@@104)))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@106 $generated@@107 $generated) (and (= ($generated@@72 $generated@@11 ($generated@@71 $generated@@11 $generated@@107)) $generated@@107) ($generated@@42 $generated@@11 ($generated@@71 $generated@@11 $generated@@107) $generated)))
 :pattern ( ($generated@@106 $generated@@107 $generated))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@106 ($generated@@72 $generated@@110 $generated@@108) $generated@@109) ($generated@@42 $generated@@110 $generated@@108 $generated@@109))
 :pattern ( ($generated@@106 ($generated@@72 $generated@@110 $generated@@108) $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@58 ($generated@@29 $generated@@111 $generated@@112)) $generated@@5)
 :pattern ( ($generated@@29 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@45 ($generated@@29 $generated@@113 $generated@@114)) $generated@@113)
 :pattern ( ($generated@@29 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@44 ($generated@@29 $generated@@115 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@29 $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ) (! (= ($generated@@117 ($generated@@30 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@30 $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (= ($generated@@119 ($generated@@32 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@32 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (! (= ($generated@@58 ($generated@@82 $generated@@121)) $generated@@6)
 :pattern ( ($generated@@82 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@122 ($generated@@82 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@82 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@58 ($generated@@85 $generated@@124)) $generated@@7)
 :pattern ( ($generated@@85 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@85 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@85 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@71 $generated@@128 ($generated@@72 $generated@@128 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@72 $generated@@128 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@42 $generated@@28 ($generated@@82 $generated@@130) ($generated@@32 $generated@@129)) ($generated@@106 $generated@@130 $generated@@129))
 :pattern ( ($generated@@42 $generated@@28 ($generated@@82 $generated@@130) ($generated@@32 $generated@@129)))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (< ($generated@@131 $generated@@132) ($generated@@131 ($generated@@29 $generated@@132 $generated@@133)))
 :pattern ( ($generated@@29 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (< ($generated@@131 $generated@@135) ($generated@@131 ($generated@@29 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@29 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ) (! (< ($generated@@136 $generated@@137) ($generated@@131 ($generated@@82 $generated@@137)))
 :pattern ( ($generated@@82 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (< ($generated@@131 $generated@@138) ($generated@@131 ($generated@@85 $generated@@138)))
 :pattern ( ($generated@@85 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@31 $generated@@141) (and ($generated@@46 $generated@@139) ($generated@@27 $generated@@28 $generated@@139 ($generated@@32 $generated@@140) $generated@@141))) ($generated@@88 ($generated@@122 $generated@@139) $generated@@140 $generated@@141))
 :pattern ( ($generated@@88 ($generated@@122 $generated@@139) $generated@@140 $generated@@141))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@142 $generated@@152 $generated@@153 $generated@@154 ($generated@@148 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@157 $generated@@158) $generated@@155)
 :weight 0
)) (and (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@142 $generated@@159 $generated@@160 $generated@@161 ($generated@@148 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@165 $generated@@162) $generated@@166 $generated@@167) ($generated@@142 $generated@@159 $generated@@160 $generated@@161 $generated@@163 $generated@@166 $generated@@167)))
 :weight 0
)) (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@174 $generated@@176) (= ($generated@@142 $generated@@168 $generated@@169 $generated@@170 ($generated@@148 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@142 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)))) (= ($generated@@10 $generated@@143) 5)) (= ($generated@@10 $generated@@144) 6)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@146 $generated@@177 $generated@@178 ($generated@@149 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@179) $generated@@181) $generated@@179)
 :weight 0
))) (forall (($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@186 $generated@@187) (= ($generated@@146 $generated@@182 $generated@@183 ($generated@@149 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@184) $generated@@187) ($generated@@146 $generated@@182 $generated@@183 $generated@@185 $generated@@187)))
 :weight 0
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (= ($generated@@10 ($generated@@147 $generated@@188 $generated@@189)) 7))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@150 ($generated@@147 $generated@@190 $generated@@191)) $generated@@190)
 :pattern ( ($generated@@147 $generated@@190 $generated@@191))
))) (forall (($generated@@192 T@T) ($generated@@193 T@T) ) (! (= ($generated@@151 ($generated@@147 $generated@@192 $generated@@193)) $generated@@193)
 :pattern ( ($generated@@147 $generated@@192 $generated@@193))
))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@15 ($generated@@142 $generated@@143 $generated@@144 $generated@@11 ($generated@@145 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))  (=> (and (or (not (= $generated@@198 $generated@@194)) (not true)) ($generated@@15 ($generated@@71 $generated@@11 ($generated@@146 $generated@@144 $generated@@47 ($generated@@146 $generated@@143 ($generated@@147 $generated@@144 $generated@@47) $generated@@195 $generated@@198) $generated@@196)))) $generated@@197))
 :pattern ( ($generated@@142 $generated@@143 $generated@@144 $generated@@11 ($generated@@145 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))
)))
(assert  (=> (<= 1 $generated@@37) (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (or ($generated@@41 $generated@@200 $generated@@202) (and (< 1 $generated@@37) ($generated@@42 $generated@@28 $generated@@202 ($generated@@30 $generated@@200)))) (and (=> (not ($generated@@43 $generated@@202)) (let (($generated@@203 ($generated@@44 $generated@@202)))
(let (($generated@@204 ($generated@@45 $generated@@202)))
 (=> ($generated@@46 $generated@@204) ($generated@@41 $generated@@200 $generated@@203))))) (= ($generated@@38 $generated@@200 ($generated@@39 $generated@@201) $generated@@202) (ite ($generated@@43 $generated@@202) true (let (($generated@@205 ($generated@@44 $generated@@202)))
(let (($generated@@206 ($generated@@45 $generated@@202)))
(ite ($generated@@46 $generated@@206) ($generated@@38 $generated@@200 $generated@@201 $generated@@205) ($generated@@15 ($generated@@40 $generated@@11 ($generated@@14 false))))))))))
 :pattern ( ($generated@@38 $generated@@200 ($generated@@39 $generated@@201) $generated@@202))
))))
(assert (forall (($generated@@207 T@U) ) (! (= ($generated@@136 ($generated@@72 $generated@@28 $generated@@207)) ($generated@@131 $generated@@207))
 :pattern ( ($generated@@136 ($generated@@72 $generated@@28 $generated@@207)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@106 $generated@@209 ($generated@@30 $generated@@208)) (and (= ($generated@@72 $generated@@28 ($generated@@71 $generated@@28 $generated@@209)) $generated@@209) ($generated@@42 $generated@@28 ($generated@@71 $generated@@28 $generated@@209) ($generated@@30 $generated@@208))))
 :pattern ( ($generated@@106 $generated@@209 ($generated@@30 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> ($generated@@106 $generated@@211 ($generated@@32 $generated@@210)) (and (= ($generated@@72 $generated@@28 ($generated@@71 $generated@@28 $generated@@211)) $generated@@211) ($generated@@42 $generated@@28 ($generated@@71 $generated@@28 $generated@@211) ($generated@@32 $generated@@210))))
 :pattern ( ($generated@@106 $generated@@211 ($generated@@32 $generated@@210)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@42 $generated@@28 ($generated@@85 $generated@@213) ($generated@@32 $generated@@212)) ($generated@@42 $generated@@28 $generated@@213 ($generated@@30 $generated@@212)))
 :pattern ( ($generated@@42 $generated@@28 ($generated@@85 $generated@@213) ($generated@@32 $generated@@212)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@31 $generated@@216) (and ($generated@@66 $generated@@214) ($generated@@27 $generated@@28 $generated@@214 ($generated@@30 $generated@@215) $generated@@216))) ($generated@@27 $generated@@28 ($generated@@45 $generated@@214) ($generated@@32 $generated@@215) $generated@@216))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@45 $generated@@214) ($generated@@32 $generated@@215) $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and ($generated@@31 $generated@@219) (and ($generated@@66 $generated@@217) ($generated@@27 $generated@@28 $generated@@217 ($generated@@30 $generated@@218) $generated@@219))) ($generated@@27 $generated@@28 ($generated@@44 $generated@@217) ($generated@@30 $generated@@218) $generated@@219))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@44 $generated@@217) ($generated@@30 $generated@@218) $generated@@219))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@31 $generated@@222) (and ($generated@@69 $generated@@220) ($generated@@27 $generated@@28 $generated@@220 ($generated@@32 $generated@@221) $generated@@222))) ($generated@@27 $generated@@28 ($generated@@125 $generated@@220) ($generated@@30 $generated@@221) $generated@@222))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@125 $generated@@220) ($generated@@30 $generated@@221) $generated@@222))
)))
(assert (= $generated@@59 ($generated@@40 $generated@@28 $generated@@59)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@29 ($generated@@40 $generated@@28 $generated@@223) ($generated@@40 $generated@@28 $generated@@224)) ($generated@@40 $generated@@28 ($generated@@29 $generated@@223 $generated@@224)))
 :pattern ( ($generated@@29 ($generated@@40 $generated@@28 $generated@@223) ($generated@@40 $generated@@28 $generated@@224)))
)))
(assert (forall (($generated@@225 T@U) ) (! (= ($generated@@82 ($generated@@40 $generated@@47 $generated@@225)) ($generated@@40 $generated@@28 ($generated@@82 $generated@@225)))
 :pattern ( ($generated@@82 ($generated@@40 $generated@@47 $generated@@225)))
)))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@85 ($generated@@40 $generated@@28 $generated@@226)) ($generated@@40 $generated@@28 ($generated@@85 $generated@@226)))
 :pattern ( ($generated@@85 ($generated@@40 $generated@@28 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@72 $generated@@228 ($generated@@40 $generated@@228 $generated@@227)) ($generated@@40 $generated@@47 ($generated@@72 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@72 $generated@@228 ($generated@@40 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! ($generated@@27 $generated@@11 $generated@@230 $generated $generated@@229)
 :pattern ( ($generated@@27 $generated@@11 $generated@@230 $generated $generated@@229))
)))
(assert (forall (($generated@@231 T@U) ) (! ($generated@@42 $generated@@11 $generated@@231 $generated)
 :pattern ( ($generated@@42 $generated@@11 $generated@@231 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@247 true))
(let (($generated@@248 true))
(let (($generated@@249  (=> (or (not (= $generated@@232 ($generated@@82 $generated@@233))) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@248) (=> (= (ControlFlow 0 8) 7) $generated@@247)))))
(let (($generated@@250  (=> (= $generated@@232 ($generated@@82 $generated@@233)) (=> (and ($generated@@106 $generated@@233 $generated@@234) (= $generated@@235 $generated@@233)) (=> (and (and ($generated@@106 $generated@@235 $generated@@234) (= $generated@@236 $generated@@235)) (and ($generated@@27 $generated@@28 $generated@@237 ($generated@@30 $generated@@234) $generated@@238) (= (ControlFlow 0 5) (- 0 4)))) (< ($generated@@131 $generated@@237) ($generated@@131 $generated@@239)))))))
(let (($generated@@251  (=> (= $generated@@239 ($generated@@29 $generated@@240 $generated@@241)) (=> (and (and (and ($generated@@42 $generated@@28 $generated@@240 ($generated@@32 $generated@@234)) ($generated@@42 $generated@@28 $generated@@241 ($generated@@30 $generated@@234))) (and (= $generated@@242 $generated@@241) ($generated@@42 $generated@@28 $generated@@242 ($generated@@30 $generated@@234)))) (and (and (= $generated@@237 $generated@@242) (= $generated@@243 $generated@@240)) (and ($generated@@42 $generated@@28 $generated@@243 ($generated@@32 $generated@@234)) (= $generated@@232 $generated@@243)))) (and (=> (= (ControlFlow 0 9) 5) $generated@@250) (=> (= (ControlFlow 0 9) 8) $generated@@249))))))
(let (($generated@@252 true))
(let (($generated@@253  (=> (or (not (= $generated@@239 $generated@@59)) (not true)) (and (=> (= (ControlFlow 0 10) 9) $generated@@251) (=> (= (ControlFlow 0 10) 3) $generated@@252)))))
(let (($generated@@254 true))
(let (($generated@@255 true))
(let (($generated@@256  (=> (= $generated@@244 ($generated@@145 $generated@@245 $generated@@238 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@255) (=> (= (ControlFlow 0 11) 2) $generated@@254)) (=> (= (ControlFlow 0 11) 10) $generated@@253)))))
(let (($generated@@257  (=> (and (and (and ($generated@@31 $generated@@238) ($generated@@246 $generated@@238)) ($generated@@42 $generated@@28 $generated@@239 ($generated@@30 $generated@@234))) (and (= 1 $generated@@37) (= (ControlFlow 0 12) 11))) $generated@@256)))
$generated@@257))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
