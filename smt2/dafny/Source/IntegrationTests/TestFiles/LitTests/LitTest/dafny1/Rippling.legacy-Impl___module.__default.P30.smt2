(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@U) Bool)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@80 () Int)
(declare-fun $generated@@81 (T@U T@U T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U T@U T@U) T@U)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Int)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 () T@T)
(declare-fun $generated@@168 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@169 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@170 () T@T)
(declare-fun $generated@@171 (T@T T@T) T@T)
(declare-fun $generated@@172 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@173 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@174 (T@T) T@T)
(declare-fun $generated@@175 (T@T) T@T)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@232 (T@U) T@U)
(declare-fun $generated@@233 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@3))
(assert (= ($generated@@35 $generated@@37) $generated@@4))
(assert (= ($generated@@35 $generated@@38) $generated@@5))
(assert (= ($generated@@35 $generated@@39) $generated@@7))
(assert ($generated@@28 $generated@@29 $generated@@36 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@37 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@38 $generated@@32))
(assert ($generated@@28 $generated@@29 $generated@@39 $generated@@31))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@43) (= $generated@@42 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@44 $generated@@45 $generated@@46) (= $generated@@45 $generated@@46))
 :pattern ( ($generated@@44 $generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 $generated@@48) $generated@@48)
 :pattern ( ($generated@@47 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@35 $generated@@51) $generated@@3))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (! (= ($generated@@52 $generated@@53) (= ($generated@@35 $generated@@53) $generated@@4))
 :pattern ( ($generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@54 $generated@@55) (= ($generated@@35 $generated@@55) $generated@@5))
 :pattern ( ($generated@@54 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@35 $generated@@57) $generated@@6))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@35 $generated@@59) $generated@@7))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ) (! (= ($generated@@60 $generated@@61) (= ($generated@@35 $generated@@61) $generated@@8))
 :pattern ( ($generated@@60 $generated@@61))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@63 $generated@@65 ($generated@@62 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@62 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@60 $generated@@66) (exists (($generated@@67 T@U) ($generated@@68 T@U) ) (= $generated@@66 ($generated@@30 $generated@@67 $generated@@68))))
 :pattern ( ($generated@@60 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@50 $generated@@69) (= $generated@@69 $generated@@36))
 :pattern ( ($generated@@50 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (!  (=> ($generated@@52 $generated@@70) (= $generated@@70 $generated@@37))
 :pattern ( ($generated@@52 $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@54 $generated@@71) (= $generated@@71 $generated@@38))
 :pattern ( ($generated@@54 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (!  (=> ($generated@@58 $generated@@72) (= $generated@@72 $generated@@39))
 :pattern ( ($generated@@58 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (!  (=> ($generated@@56 $generated@@74) (exists (($generated@@75 T@U) ) (= $generated@@74 ($generated@@73 $generated@@75))))
 :pattern ( ($generated@@56 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@73 $generated@@76) $generated@@32) ($generated@@28 $generated@@29 $generated@@76 $generated@@32))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@73 $generated@@76) $generated@@32))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and ($generated@@56 $generated@@78) ($generated@@56 $generated@@79)) (= ($generated@@44 $generated@@78 $generated@@79) ($generated@@44 ($generated@@77 $generated@@78) ($generated@@77 $generated@@79))))
 :pattern ( ($generated@@44 $generated@@78 $generated@@79) ($generated@@56 $generated@@78))
 :pattern ( ($generated@@44 $generated@@78 $generated@@79) ($generated@@56 $generated@@79))
)))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (or ($generated@@82 $generated@@84 $generated@@85) (and (< 1 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@84 $generated@@32) ($generated@@28 $generated@@29 $generated@@85 $generated@@32)))) ($generated@@28 $generated@@29 ($generated@@81 $generated@@83 $generated@@84 $generated@@85) $generated@@40))
 :pattern ( ($generated@@81 $generated@@83 $generated@@84 $generated@@85))
))))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@87 $generated@@89 $generated@@90) (and (< 2 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@89 $generated@@32) ($generated@@28 $generated@@29 $generated@@90 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@86 $generated@@88 $generated@@89 $generated@@90) $generated@@40))
 :pattern ( ($generated@@86 $generated@@88 $generated@@89 $generated@@90))
))))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (or ($generated@@92 $generated@@94 $generated@@95) (and (< 2 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@94 $generated@@32) ($generated@@28 $generated@@29 $generated@@95 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@91 $generated@@93 $generated@@94 $generated@@95) $generated@@31))
 :pattern ( ($generated@@91 $generated@@93 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (! (= ($generated@@81 ($generated@@96 $generated@@97) $generated@@98 $generated@@99) ($generated@@81 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@81 ($generated@@96 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@86 ($generated@@96 $generated@@100) $generated@@101 $generated@@102) ($generated@@86 $generated@@100 $generated@@101 $generated@@102))
 :pattern ( ($generated@@86 ($generated@@96 $generated@@100) $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@91 ($generated@@96 $generated@@103) $generated@@104 $generated@@105) ($generated@@91 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@91 ($generated@@96 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@106 $generated@@107) (or ($generated@@50 $generated@@107) ($generated@@52 $generated@@107)))
 :pattern ( ($generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@108 $generated@@109) (or ($generated@@54 $generated@@109) ($generated@@56 $generated@@109)))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or ($generated@@82 ($generated@@47 $generated@@29 $generated@@111) ($generated@@47 $generated@@29 $generated@@112)) (and (< 1 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@111 $generated@@32) ($generated@@28 $generated@@29 $generated@@112 $generated@@32)))) (and (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@54 ($generated@@47 $generated@@29 $generated@@112)))))) (let (($generated@@113 ($generated@@47 $generated@@29 ($generated@@77 ($generated@@47 $generated@@29 $generated@@112)))))
 (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@54 ($generated@@47 $generated@@29 $generated@@111)))))) (let (($generated@@114 ($generated@@47 $generated@@29 ($generated@@77 ($generated@@47 $generated@@29 $generated@@111)))))
($generated@@82 $generated@@114 $generated@@113))))) (= ($generated@@81 ($generated@@96 $generated@@110) ($generated@@47 $generated@@29 $generated@@111) ($generated@@47 $generated@@29 $generated@@112)) (ite ($generated@@54 ($generated@@47 $generated@@29 $generated@@112)) $generated@@36 (let (($generated@@115 ($generated@@47 $generated@@29 ($generated@@77 ($generated@@47 $generated@@29 $generated@@112)))))
(ite ($generated@@54 ($generated@@47 $generated@@29 $generated@@111)) $generated@@37 (let (($generated@@116 ($generated@@47 $generated@@29 ($generated@@77 ($generated@@47 $generated@@29 $generated@@111)))))
($generated@@47 $generated@@29 ($generated@@81 ($generated@@96 $generated@@110) $generated@@116 $generated@@115)))))))))
 :weight 3
 :pattern ( ($generated@@81 ($generated@@96 $generated@@110) ($generated@@47 $generated@@29 $generated@@111) ($generated@@47 $generated@@29 $generated@@112)))
))))
(assert  (=> (<= 1 $generated@@80) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@82 $generated@@118 $generated@@119) (and (< 1 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@118 $generated@@32) ($generated@@28 $generated@@29 $generated@@119 $generated@@32)))) (and (=> (not ($generated@@54 $generated@@119)) (let (($generated@@120 ($generated@@77 $generated@@119)))
 (=> (not ($generated@@54 $generated@@118)) (let (($generated@@121 ($generated@@77 $generated@@118)))
($generated@@82 $generated@@121 $generated@@120))))) (= ($generated@@81 ($generated@@96 $generated@@117) $generated@@118 $generated@@119) (ite ($generated@@54 $generated@@119) $generated@@36 (let (($generated@@122 ($generated@@77 $generated@@119)))
(ite ($generated@@54 $generated@@118) $generated@@37 (let (($generated@@123 ($generated@@77 $generated@@118)))
($generated@@81 $generated@@117 $generated@@123 $generated@@122))))))))
 :pattern ( ($generated@@81 ($generated@@96 $generated@@117) $generated@@118 $generated@@119))
))))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@124 $generated@@40) (or ($generated@@50 $generated@@124) ($generated@@52 $generated@@124)))
 :pattern ( ($generated@@52 $generated@@124) ($generated@@28 $generated@@29 $generated@@124 $generated@@40))
 :pattern ( ($generated@@50 $generated@@124) ($generated@@28 $generated@@29 $generated@@124 $generated@@40))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@125 $generated@@32) (or ($generated@@54 $generated@@125) ($generated@@56 $generated@@125)))
 :pattern ( ($generated@@56 $generated@@125) ($generated@@28 $generated@@29 $generated@@125 $generated@@32))
 :pattern ( ($generated@@54 $generated@@125) ($generated@@28 $generated@@29 $generated@@125 $generated@@32))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@126 $generated@@31) (or ($generated@@58 $generated@@126) ($generated@@60 $generated@@126)))
 :pattern ( ($generated@@60 $generated@@126) ($generated@@28 $generated@@29 $generated@@126 $generated@@31))
 :pattern ( ($generated@@58 $generated@@126) ($generated@@28 $generated@@29 $generated@@126 $generated@@31))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@50 $generated@@127) ($generated@@50 $generated@@128)) ($generated@@41 $generated@@127 $generated@@128))
 :pattern ( ($generated@@41 $generated@@127 $generated@@128) ($generated@@50 $generated@@127))
 :pattern ( ($generated@@41 $generated@@127 $generated@@128) ($generated@@50 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@52 $generated@@129) ($generated@@52 $generated@@130)) ($generated@@41 $generated@@129 $generated@@130))
 :pattern ( ($generated@@41 $generated@@129 $generated@@130) ($generated@@52 $generated@@129))
 :pattern ( ($generated@@41 $generated@@129 $generated@@130) ($generated@@52 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@54 $generated@@131) ($generated@@54 $generated@@132)) ($generated@@44 $generated@@131 $generated@@132))
 :pattern ( ($generated@@44 $generated@@131 $generated@@132) ($generated@@54 $generated@@131))
 :pattern ( ($generated@@44 $generated@@131 $generated@@132) ($generated@@54 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@35 ($generated@@30 $generated@@133 $generated@@134)) $generated@@8)
 :pattern ( ($generated@@30 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@135 ($generated@@30 $generated@@136 $generated@@137)) $generated@@136)
 :pattern ( ($generated@@30 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@138 ($generated@@30 $generated@@139 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@30 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@35 ($generated@@73 $generated@@141)) $generated@@6)
 :pattern ( ($generated@@73 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@77 ($generated@@73 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@73 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@T) ) (! (= ($generated@@62 $generated@@144 ($generated@@63 $generated@@144 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@63 $generated@@144 $generated@@143))
)))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> (or ($generated@@87 $generated@@146 $generated@@147) (and (< 2 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@146 $generated@@32) ($generated@@28 $generated@@29 $generated@@147 $generated@@31)))) (and (=> (not ($generated@@58 $generated@@147)) (let (($generated@@148 ($generated@@138 $generated@@147)))
(let (($generated@@149 ($generated@@135 $generated@@147)))
 (and (and ($generated@@108 $generated@@146) ($generated@@108 $generated@@149)) (=> (not ($generated@@44 $generated@@146 $generated@@149)) ($generated@@87 $generated@@146 $generated@@148)))))) (= ($generated@@86 ($generated@@96 $generated@@145) $generated@@146 $generated@@147) (ite ($generated@@58 $generated@@147) $generated@@36 (let (($generated@@150 ($generated@@138 $generated@@147)))
(let (($generated@@151 ($generated@@135 $generated@@147)))
(ite ($generated@@44 $generated@@146 $generated@@151) $generated@@37 ($generated@@86 $generated@@145 $generated@@146 $generated@@150))))))))
 :pattern ( ($generated@@86 ($generated@@96 $generated@@145) $generated@@146 $generated@@147))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (< ($generated@@152 $generated@@153) ($generated@@152 ($generated@@30 $generated@@153 $generated@@154)))
 :pattern ( ($generated@@30 $generated@@153 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (! (< ($generated@@152 $generated@@156) ($generated@@152 ($generated@@30 $generated@@155 $generated@@156)))
 :pattern ( ($generated@@30 $generated@@155 $generated@@156))
)))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or ($generated@@87 ($generated@@47 $generated@@29 $generated@@158) ($generated@@47 $generated@@29 $generated@@159)) (and (< 2 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@158 $generated@@32) ($generated@@28 $generated@@29 $generated@@159 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@58 ($generated@@47 $generated@@29 $generated@@159)))))) (let (($generated@@160 ($generated@@47 $generated@@29 ($generated@@138 ($generated@@47 $generated@@29 $generated@@159)))))
(let (($generated@@161 ($generated@@47 $generated@@29 ($generated@@135 ($generated@@47 $generated@@29 $generated@@159)))))
 (and (and ($generated@@108 ($generated@@47 $generated@@29 $generated@@158)) ($generated@@108 $generated@@161)) (=> (not ($generated@@44 $generated@@158 $generated@@161)) ($generated@@87 ($generated@@47 $generated@@29 $generated@@158) $generated@@160)))))) (= ($generated@@86 ($generated@@96 $generated@@157) ($generated@@47 $generated@@29 $generated@@158) ($generated@@47 $generated@@29 $generated@@159)) (ite ($generated@@58 ($generated@@47 $generated@@29 $generated@@159)) $generated@@36 (let (($generated@@162 ($generated@@47 $generated@@29 ($generated@@138 ($generated@@47 $generated@@29 $generated@@159)))))
(let (($generated@@163 ($generated@@47 $generated@@29 ($generated@@135 ($generated@@47 $generated@@29 $generated@@159)))))
(ite ($generated@@44 $generated@@158 $generated@@163) $generated@@37 ($generated@@86 ($generated@@96 $generated@@157) ($generated@@47 $generated@@29 $generated@@158) $generated@@162))))))))
 :weight 3
 :pattern ( ($generated@@86 ($generated@@96 $generated@@157) ($generated@@47 $generated@@29 $generated@@158) ($generated@@47 $generated@@29 $generated@@159)))
))))
(assert (forall (($generated@@164 T@U) ) (! (< ($generated@@152 $generated@@164) ($generated@@152 ($generated@@73 $generated@@164)))
 :pattern ( ($generated@@73 $generated@@164))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@165 $generated@@176 $generated@@177 $generated@@178 ($generated@@172 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@181 $generated@@182) $generated@@179)
 :weight 0
)) (and (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (or (= $generated@@188 $generated@@190) (= ($generated@@165 $generated@@183 $generated@@184 $generated@@185 ($generated@@172 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@188 $generated@@189 $generated@@186) $generated@@190 $generated@@191) ($generated@@165 $generated@@183 $generated@@184 $generated@@185 $generated@@187 $generated@@190 $generated@@191)))
 :weight 0
)) (forall (($generated@@192 T@T) ($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@198 $generated@@200) (= ($generated@@165 $generated@@192 $generated@@193 $generated@@194 ($generated@@172 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@197 $generated@@198 $generated@@195) $generated@@199 $generated@@200) ($generated@@165 $generated@@192 $generated@@193 $generated@@194 $generated@@196 $generated@@199 $generated@@200)))
 :weight 0
)))) (= ($generated@@12 $generated@@166) 4)) (= ($generated@@12 $generated@@167) 5)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@169 $generated@@201 $generated@@202 ($generated@@173 $generated@@201 $generated@@202 $generated@@204 $generated@@205 $generated@@203) $generated@@205) $generated@@203)
 :weight 0
))) (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (or (= $generated@@210 $generated@@211) (= ($generated@@169 $generated@@206 $generated@@207 ($generated@@173 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@208) $generated@@211) ($generated@@169 $generated@@206 $generated@@207 $generated@@209 $generated@@211)))
 :weight 0
))) (= ($generated@@12 $generated@@170) 6)) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (= ($generated@@12 ($generated@@171 $generated@@212 $generated@@213)) 7))) (forall (($generated@@214 T@T) ($generated@@215 T@T) ) (! (= ($generated@@174 ($generated@@171 $generated@@214 $generated@@215)) $generated@@214)
 :pattern ( ($generated@@171 $generated@@214 $generated@@215))
))) (forall (($generated@@216 T@T) ($generated@@217 T@T) ) (! (= ($generated@@175 ($generated@@171 $generated@@216 $generated@@217)) $generated@@217)
 :pattern ( ($generated@@171 $generated@@216 $generated@@217))
))))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 Bool) ($generated@@222 T@U) ($generated@@223 T@U) ) (! (= ($generated@@17 ($generated@@165 $generated@@166 $generated@@167 $generated@@13 ($generated@@168 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))  (=> (and (or (not (= $generated@@222 $generated@@218)) (not true)) ($generated@@17 ($generated@@62 $generated@@13 ($generated@@169 $generated@@167 $generated@@170 ($generated@@169 $generated@@166 ($generated@@171 $generated@@167 $generated@@170) $generated@@219 $generated@@222) $generated@@220)))) $generated@@221))
 :pattern ( ($generated@@165 $generated@@166 $generated@@167 $generated@@13 ($generated@@168 $generated@@218 $generated@@219 $generated@@220 $generated@@221) $generated@@222 $generated@@223))
)))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (or ($generated@@92 ($generated@@47 $generated@@29 $generated@@226) ($generated@@47 $generated@@29 $generated@@227)) (and (< 2 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@226 $generated@@32) ($generated@@28 $generated@@29 $generated@@227 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@47 $generated@@13 ($generated@@16 ($generated@@58 ($generated@@47 $generated@@29 $generated@@227)))))) (let (($generated@@228 ($generated@@47 $generated@@29 ($generated@@138 ($generated@@47 $generated@@29 $generated@@227)))))
(let (($generated@@229 ($generated@@47 $generated@@29 ($generated@@135 ($generated@@47 $generated@@29 $generated@@227)))))
 (and (and ($generated@@106 ($generated@@81 ($generated@@96 $generated@@224) ($generated@@47 $generated@@29 $generated@@226) $generated@@229)) ($generated@@82 ($generated@@47 $generated@@29 $generated@@226) $generated@@229)) (=> (not ($generated@@41 ($generated@@81 ($generated@@96 $generated@@224) ($generated@@47 $generated@@29 $generated@@226) $generated@@229) $generated@@37)) ($generated@@92 ($generated@@47 $generated@@29 $generated@@226) $generated@@228)))))) (= ($generated@@91 ($generated@@96 $generated@@225) ($generated@@47 $generated@@29 $generated@@226) ($generated@@47 $generated@@29 $generated@@227)) (ite ($generated@@58 ($generated@@47 $generated@@29 $generated@@227)) ($generated@@30 ($generated@@47 $generated@@29 $generated@@226) ($generated@@47 $generated@@29 $generated@@39)) (let (($generated@@230 ($generated@@47 $generated@@29 ($generated@@138 ($generated@@47 $generated@@29 $generated@@227)))))
(let (($generated@@231 ($generated@@47 $generated@@29 ($generated@@135 ($generated@@47 $generated@@29 $generated@@227)))))
(ite ($generated@@41 ($generated@@81 ($generated@@96 $generated@@224) ($generated@@47 $generated@@29 $generated@@226) $generated@@231) $generated@@37) ($generated@@30 ($generated@@47 $generated@@29 $generated@@226) ($generated@@47 $generated@@29 ($generated@@30 $generated@@231 $generated@@230))) ($generated@@30 $generated@@231 ($generated@@47 $generated@@29 ($generated@@91 ($generated@@96 $generated@@225) ($generated@@47 $generated@@29 $generated@@226) $generated@@230))))))))))
 :weight 3
 :pattern ( ($generated@@91 ($generated@@96 $generated@@225) ($generated@@47 $generated@@29 $generated@@226) ($generated@@47 $generated@@29 $generated@@227)))
))))
(assert (= ($generated@@232 $generated@@40) $generated@@0))
(assert (= ($generated@@233 $generated@@40) $generated@@9))
(assert (= ($generated@@232 $generated@@32) $generated@@1))
(assert (= ($generated@@233 $generated@@32) $generated@@10))
(assert (= ($generated@@232 $generated@@31) $generated@@2))
(assert (= ($generated@@233 $generated@@31) $generated@@11))
(assert (= $generated@@36 ($generated@@47 $generated@@29 $generated@@36)))
(assert (= $generated@@37 ($generated@@47 $generated@@29 $generated@@37)))
(assert (= $generated@@38 ($generated@@47 $generated@@29 $generated@@38)))
(assert (= $generated@@39 ($generated@@47 $generated@@29 $generated@@39)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (! (= ($generated@@30 ($generated@@47 $generated@@29 $generated@@234) ($generated@@47 $generated@@29 $generated@@235)) ($generated@@47 $generated@@29 ($generated@@30 $generated@@234 $generated@@235)))
 :pattern ( ($generated@@30 ($generated@@47 $generated@@29 $generated@@234) ($generated@@47 $generated@@29 $generated@@235)))
)))
(assert  (=> (<= 2 $generated@@80) (forall (($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (or ($generated@@92 $generated@@237 $generated@@238) (and (< 2 $generated@@80) (and ($generated@@28 $generated@@29 $generated@@237 $generated@@32) ($generated@@28 $generated@@29 $generated@@238 $generated@@31)))) (and (=> (not ($generated@@58 $generated@@238)) (let (($generated@@239 ($generated@@138 $generated@@238)))
(let (($generated@@240 ($generated@@135 $generated@@238)))
 (and (and ($generated@@106 ($generated@@81 ($generated@@96 $generated@@224) $generated@@237 $generated@@240)) ($generated@@82 $generated@@237 $generated@@240)) (=> (not ($generated@@41 ($generated@@81 ($generated@@96 $generated@@224) $generated@@237 $generated@@240) $generated@@37)) ($generated@@92 $generated@@237 $generated@@239)))))) (= ($generated@@91 ($generated@@96 $generated@@236) $generated@@237 $generated@@238) (ite ($generated@@58 $generated@@238) ($generated@@30 $generated@@237 ($generated@@47 $generated@@29 $generated@@39)) (let (($generated@@241 ($generated@@138 $generated@@238)))
(let (($generated@@242 ($generated@@135 $generated@@238)))
(ite ($generated@@41 ($generated@@81 ($generated@@96 $generated@@224) $generated@@237 $generated@@242) $generated@@37) ($generated@@30 $generated@@237 ($generated@@30 $generated@@242 $generated@@241)) ($generated@@30 $generated@@242 ($generated@@91 $generated@@236 $generated@@237 $generated@@241)))))))))
 :pattern ( ($generated@@91 ($generated@@96 $generated@@236) $generated@@237 $generated@@238))
))))
(assert (forall (($generated@@243 T@U) ) (! (= ($generated@@73 ($generated@@47 $generated@@29 $generated@@243)) ($generated@@47 $generated@@29 ($generated@@73 $generated@@243)))
 :pattern ( ($generated@@73 ($generated@@47 $generated@@29 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (= ($generated@@63 $generated@@245 ($generated@@47 $generated@@245 $generated@@244)) ($generated@@47 $generated@@170 ($generated@@63 $generated@@245 $generated@@244)))
 :pattern ( ($generated@@63 $generated@@245 ($generated@@47 $generated@@245 $generated@@244)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@251  (=> (and (= $generated@@246 ($generated@@168 $generated@@247 $generated@@248 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@252 $generated@@32) ($generated@@28 $generated@@29 $generated@@253 $generated@@31)) ($generated@@41 ($generated@@86 ($generated@@96 ($generated@@96 $generated@@224)) $generated@@252 ($generated@@91 ($generated@@96 ($generated@@96 $generated@@224)) $generated@@252 $generated@@253)) $generated@@37))
 :pattern ( ($generated@@91 ($generated@@96 ($generated@@96 $generated@@224)) $generated@@252 $generated@@253))
)))))
(let (($generated@@254  (=> (and (and ($generated@@249 $generated@@248) ($generated@@250 $generated@@248)) (and (= 3 $generated@@80) (= (ControlFlow 0 3) 2))) $generated@@251)))
$generated@@254)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
