(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@70 (Int) Int)
(declare-fun $generated@@72 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U) T@U)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@T T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@112 () Int)
(declare-fun $generated@@113 (T@U T@U T@U T@U T@U) Int)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@115 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@117 (T@U) T@U)
(declare-fun $generated@@127 (T@U T@U) Bool)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@151 (T@U) Int)
(declare-fun $generated@@165 (T@U) Int)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@172 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@27) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@30 $generated@@34) (= ($generated@@26 $generated@@27 ($generated@@28 $generated@@32 $generated@@33) ($generated@@29 $generated@@31) $generated@@34)  (and ($generated@@26 $generated@@27 $generated@@32 ($generated@@29 $generated@@31) $generated@@34) ($generated@@26 $generated@@27 $generated@@33 ($generated@@29 $generated@@31) $generated@@34))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@28 $generated@@32 $generated@@33) ($generated@@29 $generated@@31) $generated@@34))
)))
(assert (= ($generated@@9 $generated@@35) 4))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@26 $generated@@35 $generated@@39 ($generated@@36 $generated@@38) $generated@@40) ($generated@@26 $generated@@35 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
 :pattern ( ($generated@@26 $generated@@35 $generated@@39 ($generated@@36 $generated@@38) $generated@@40))
 :pattern ( ($generated@@26 $generated@@35 $generated@@39 ($generated@@37 $generated@@38) $generated@@40))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@9 $generated@@44) 5)) (= ($generated@@9 $generated@@45) 6)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@9 ($generated@@46 $generated@@61 $generated@@62)) 7))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@26 $generated@@35 $generated@@68 ($generated@@37 $generated@@67) $generated@@69)  (or (= $generated@@68 $generated@@41) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@35 ($generated@@46 $generated@@44 $generated@@45) $generated@@69 $generated@@68) $generated@@1)))))
 :pattern ( ($generated@@26 $generated@@35 $generated@@68 ($generated@@37 $generated@@67) $generated@@69))
)))
(assert (forall (($generated@@71 Int) ) (! (= ($generated@@70 $generated@@71) $generated@@71)
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@T) ) (! (= ($generated@@72 $generated@@74 $generated@@73) $generated@@73)
 :pattern ( ($generated@@72 $generated@@74 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@75 $generated@@77) (= ($generated@@76 $generated@@77) $generated@@2))
 :pattern ( ($generated@@75 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 $generated@@79) (= ($generated@@76 $generated@@79) $generated@@4))
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@42 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@42 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@78 $generated@@83) (exists (($generated@@84 T@U) ($generated@@85 T@U) ) (= $generated@@83 ($generated@@28 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@78 $generated@@83))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@86 $generated@@27 ($generated@@28 $generated@@88 $generated@@89) ($generated@@29 $generated@@87))  (and ($generated@@86 $generated@@27 $generated@@88 ($generated@@29 $generated@@87)) ($generated@@86 $generated@@27 $generated@@89 ($generated@@29 $generated@@87))))
 :pattern ( ($generated@@86 $generated@@27 ($generated@@28 $generated@@88 $generated@@89) ($generated@@29 $generated@@87)))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@75 $generated@@91) (exists (($generated@@92 T@U) ) (= $generated@@91 ($generated@@90 $generated@@92))))
 :pattern ( ($generated@@75 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@86 $generated@@35 $generated@@94 ($generated@@36 $generated@@93))  (and ($generated@@86 $generated@@35 $generated@@94 ($generated@@37 $generated@@93)) (or (not (= $generated@@94 $generated@@41)) (not true))))
 :pattern ( ($generated@@86 $generated@@35 $generated@@94 ($generated@@36 $generated@@93)))
 :pattern ( ($generated@@86 $generated@@35 $generated@@94 ($generated@@37 $generated@@93)))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@95 ($generated@@80 $generated@@99 $generated@@96) $generated@@97 $generated@@98) ($generated@@26 $generated@@99 $generated@@96 $generated@@97 $generated@@98))
 :pattern ( ($generated@@95 ($generated@@80 $generated@@99 $generated@@96) $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@101)) $generated@@3) (= ($generated@@100 ($generated@@29 $generated@@101)) $generated@@7))
 :pattern ( ($generated@@29 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (!  (and (= ($generated@@25 ($generated@@37 $generated@@102)) $generated@@5) (= ($generated@@100 ($generated@@37 $generated@@102)) $generated@@8))
 :pattern ( ($generated@@37 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@25 ($generated@@36 $generated@@103)) $generated@@6) (= ($generated@@100 ($generated@@36 $generated@@103)) $generated@@8))
 :pattern ( ($generated@@36 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@86 $generated@@35 $generated@@106 ($generated@@37 $generated@@105))  (or (= $generated@@106 $generated@@41) (= ($generated@@104 $generated@@106) ($generated@@37 $generated@@105))))
 :pattern ( ($generated@@86 $generated@@35 $generated@@106 ($generated@@37 $generated@@105)))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> ($generated@@30 $generated@@109) (= ($generated@@26 $generated@@27 ($generated@@90 $generated@@108) ($generated@@29 $generated@@107) $generated@@109) ($generated@@95 $generated@@108 $generated@@107 $generated@@109)))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@90 $generated@@108) ($generated@@29 $generated@@107) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@86 $generated@@27 $generated@@111 ($generated@@29 $generated@@110)) (or ($generated@@75 $generated@@111) ($generated@@78 $generated@@111)))
 :pattern ( ($generated@@78 $generated@@111) ($generated@@86 $generated@@27 $generated@@111 ($generated@@29 $generated@@110)))
 :pattern ( ($generated@@75 $generated@@111) ($generated@@86 $generated@@27 $generated@@111 ($generated@@29 $generated@@110)))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (or ($generated@@115 $generated@@118 $generated@@119 $generated@@121 ($generated@@72 $generated@@27 $generated@@122)) (and (< 1 $generated@@112) (and (and (or (not (= $generated@@121 $generated@@41)) (not true)) ($generated@@86 $generated@@35 $generated@@121 ($generated@@36 $generated@@118))) ($generated@@86 $generated@@27 $generated@@122 ($generated@@29 $generated@@119))))) (and (=> (not ($generated@@14 ($generated@@72 $generated@@10 ($generated@@13 ($generated@@75 ($generated@@72 $generated@@27 $generated@@122)))))) (let (($generated@@123 ($generated@@72 $generated@@27 ($generated@@116 ($generated@@72 $generated@@27 $generated@@122)))))
(let (($generated@@124 ($generated@@72 $generated@@27 ($generated@@117 ($generated@@72 $generated@@27 $generated@@122)))))
 (and ($generated@@115 $generated@@118 $generated@@119 $generated@@121 $generated@@124) ($generated@@115 $generated@@118 $generated@@119 $generated@@121 $generated@@123))))) (= ($generated@@113 $generated@@118 $generated@@119 ($generated@@114 $generated@@120) $generated@@121 ($generated@@72 $generated@@27 $generated@@122)) (ite ($generated@@75 ($generated@@72 $generated@@27 $generated@@122)) ($generated@@70 1) (let (($generated@@125 ($generated@@72 $generated@@27 ($generated@@116 ($generated@@72 $generated@@27 $generated@@122)))))
(let (($generated@@126 ($generated@@72 $generated@@27 ($generated@@117 ($generated@@72 $generated@@27 $generated@@122)))))
(+ ($generated@@113 $generated@@118 $generated@@119 ($generated@@114 $generated@@120) $generated@@121 $generated@@126) ($generated@@113 $generated@@118 $generated@@119 ($generated@@114 $generated@@120) $generated@@121 $generated@@125))))))))
 :weight 3
 :pattern ( ($generated@@113 $generated@@118 $generated@@119 ($generated@@114 $generated@@120) $generated@@121 ($generated@@72 $generated@@27 $generated@@122)))
))))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@127 $generated@@128 $generated) (and (= ($generated@@80 $generated@@11 ($generated@@42 $generated@@11 $generated@@128)) $generated@@128) ($generated@@86 $generated@@11 ($generated@@42 $generated@@11 $generated@@128) $generated)))
 :pattern ( ($generated@@127 $generated@@128 $generated))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@127 ($generated@@80 $generated@@131 $generated@@129) $generated@@130) ($generated@@86 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@127 ($generated@@80 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@76 ($generated@@28 $generated@@132 $generated@@133)) $generated@@4)
 :pattern ( ($generated@@28 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@117 ($generated@@28 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@28 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@116 ($generated@@28 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@28 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (= ($generated@@76 ($generated@@90 $generated@@138)) $generated@@2)
 :pattern ( ($generated@@90 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@139 ($generated@@29 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@29 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@141 ($generated@@90 $generated@@142)) $generated@@142)
 :pattern ( ($generated@@90 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@37 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@37 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@36 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@36 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@42 $generated@@148 ($generated@@80 $generated@@148 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@80 $generated@@148 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@86 $generated@@27 ($generated@@90 $generated@@150) ($generated@@29 $generated@@149)) ($generated@@127 $generated@@150 $generated@@149))
 :pattern ( ($generated@@86 $generated@@27 ($generated@@90 $generated@@150) ($generated@@29 $generated@@149)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ) (! (< ($generated@@151 $generated@@152) ($generated@@151 ($generated@@28 $generated@@152 $generated@@153)))
 :pattern ( ($generated@@28 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@151 $generated@@155) ($generated@@151 ($generated@@28 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@28 $generated@@154 $generated@@155))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (or ($generated@@115 $generated@@156 $generated@@157 $generated@@159 $generated@@160) (and (< 1 $generated@@112) (and (and (or (not (= $generated@@159 $generated@@41)) (not true)) ($generated@@86 $generated@@35 $generated@@159 ($generated@@36 $generated@@156))) ($generated@@86 $generated@@27 $generated@@160 ($generated@@29 $generated@@157))))) (and (=> (not ($generated@@75 $generated@@160)) (let (($generated@@161 ($generated@@116 $generated@@160)))
(let (($generated@@162 ($generated@@117 $generated@@160)))
 (and ($generated@@115 $generated@@156 $generated@@157 $generated@@159 $generated@@162) ($generated@@115 $generated@@156 $generated@@157 $generated@@159 $generated@@161))))) (= ($generated@@113 $generated@@156 $generated@@157 ($generated@@114 $generated@@158) $generated@@159 $generated@@160) (ite ($generated@@75 $generated@@160) ($generated@@70 1) (let (($generated@@163 ($generated@@116 $generated@@160)))
(let (($generated@@164 ($generated@@117 $generated@@160)))
(+ ($generated@@113 $generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@164) ($generated@@113 $generated@@156 $generated@@157 $generated@@158 $generated@@159 $generated@@163))))))))
 :pattern ( ($generated@@113 $generated@@156 $generated@@157 ($generated@@114 $generated@@158) $generated@@159 $generated@@160))
))))
(assert (forall (($generated@@166 T@U) ) (! (< ($generated@@165 $generated@@166) ($generated@@151 ($generated@@90 $generated@@166)))
 :pattern ( ($generated@@90 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@30 $generated@@169) (and ($generated@@75 $generated@@167) ($generated@@26 $generated@@27 $generated@@167 ($generated@@29 $generated@@168) $generated@@169))) ($generated@@95 ($generated@@141 $generated@@167) $generated@@168 $generated@@169))
 :pattern ( ($generated@@95 ($generated@@141 $generated@@167) $generated@@168 $generated@@169))
)))
(assert  (and (forall (($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@170 $generated@@173 $generated@@174 $generated@@175 ($generated@@172 $generated@@173 $generated@@174 $generated@@175 $generated@@177 $generated@@178 $generated@@179 $generated@@176) $generated@@178 $generated@@179) $generated@@176)
 :weight 0
)) (and (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@185 $generated@@187) (= ($generated@@170 $generated@@180 $generated@@181 $generated@@182 ($generated@@172 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@170 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)) (forall (($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (!  (or (= $generated@@195 $generated@@197) (= ($generated@@170 $generated@@189 $generated@@190 $generated@@191 ($generated@@172 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@195 $generated@@192) $generated@@196 $generated@@197) ($generated@@170 $generated@@189 $generated@@190 $generated@@191 $generated@@193 $generated@@196 $generated@@197)))
 :weight 0
)))))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 Bool) ($generated@@202 T@U) ($generated@@203 T@U) ) (! (= ($generated@@14 ($generated@@170 $generated@@35 $generated@@44 $generated@@10 ($generated@@171 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))  (=> (and (or (not (= $generated@@202 $generated@@198)) (not true)) ($generated@@14 ($generated@@42 $generated@@10 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@35 ($generated@@46 $generated@@44 $generated@@45) $generated@@199 $generated@@202) $generated@@200)))) $generated@@201))
 :pattern ( ($generated@@170 $generated@@35 $generated@@44 $generated@@10 ($generated@@171 $generated@@198 $generated@@199 $generated@@200 $generated@@201) $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@165 ($generated@@80 $generated@@27 $generated@@204)) ($generated@@151 $generated@@204))
 :pattern ( ($generated@@165 ($generated@@80 $generated@@27 $generated@@204)))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> ($generated@@127 $generated@@206 ($generated@@29 $generated@@205)) (and (= ($generated@@80 $generated@@27 ($generated@@42 $generated@@27 $generated@@206)) $generated@@206) ($generated@@86 $generated@@27 ($generated@@42 $generated@@27 $generated@@206) ($generated@@29 $generated@@205))))
 :pattern ( ($generated@@127 $generated@@206 ($generated@@29 $generated@@205)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> ($generated@@127 $generated@@208 ($generated@@37 $generated@@207)) (and (= ($generated@@80 $generated@@35 ($generated@@42 $generated@@35 $generated@@208)) $generated@@208) ($generated@@86 $generated@@35 ($generated@@42 $generated@@35 $generated@@208) ($generated@@37 $generated@@207))))
 :pattern ( ($generated@@127 $generated@@208 ($generated@@37 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@127 $generated@@210 ($generated@@36 $generated@@209)) (and (= ($generated@@80 $generated@@35 ($generated@@42 $generated@@35 $generated@@210)) $generated@@210) ($generated@@86 $generated@@35 ($generated@@42 $generated@@35 $generated@@210) ($generated@@36 $generated@@209))))
 :pattern ( ($generated@@127 $generated@@210 ($generated@@36 $generated@@209)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@30 $generated@@213) (and ($generated@@78 $generated@@211) ($generated@@26 $generated@@27 $generated@@211 ($generated@@29 $generated@@212) $generated@@213))) ($generated@@26 $generated@@27 ($generated@@117 $generated@@211) ($generated@@29 $generated@@212) $generated@@213))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@117 $generated@@211) ($generated@@29 $generated@@212) $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@30 $generated@@216) (and ($generated@@78 $generated@@214) ($generated@@26 $generated@@27 $generated@@214 ($generated@@29 $generated@@215) $generated@@216))) ($generated@@26 $generated@@27 ($generated@@116 $generated@@214) ($generated@@29 $generated@@215) $generated@@216))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@116 $generated@@214) ($generated@@29 $generated@@215) $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@28 ($generated@@72 $generated@@27 $generated@@217) ($generated@@72 $generated@@27 $generated@@218)) ($generated@@72 $generated@@27 ($generated@@28 $generated@@217 $generated@@218)))
 :pattern ( ($generated@@28 ($generated@@72 $generated@@27 $generated@@217) ($generated@@72 $generated@@27 $generated@@218)))
)))
(assert  (=> (<= 1 $generated@@112) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (or ($generated@@115 $generated@@219 $generated@@220 ($generated@@72 $generated@@35 $generated@@222) ($generated@@72 $generated@@27 $generated@@223)) (and (< 1 $generated@@112) (and (and (or (not (= $generated@@222 $generated@@41)) (not true)) ($generated@@86 $generated@@35 $generated@@222 ($generated@@36 $generated@@219))) ($generated@@86 $generated@@27 $generated@@223 ($generated@@29 $generated@@220))))) (and (=> (not ($generated@@14 ($generated@@72 $generated@@10 ($generated@@13 ($generated@@75 ($generated@@72 $generated@@27 $generated@@223)))))) (let (($generated@@224 ($generated@@72 $generated@@27 ($generated@@116 ($generated@@72 $generated@@27 $generated@@223)))))
(let (($generated@@225 ($generated@@72 $generated@@27 ($generated@@117 ($generated@@72 $generated@@27 $generated@@223)))))
 (and ($generated@@115 $generated@@219 $generated@@220 ($generated@@72 $generated@@35 $generated@@222) $generated@@225) ($generated@@115 $generated@@219 $generated@@220 ($generated@@72 $generated@@35 $generated@@222) $generated@@224))))) (= ($generated@@113 $generated@@219 $generated@@220 ($generated@@114 $generated@@221) ($generated@@72 $generated@@35 $generated@@222) ($generated@@72 $generated@@27 $generated@@223)) (ite ($generated@@75 ($generated@@72 $generated@@27 $generated@@223)) ($generated@@70 1) (let (($generated@@226 ($generated@@72 $generated@@27 ($generated@@116 ($generated@@72 $generated@@27 $generated@@223)))))
(let (($generated@@227 ($generated@@72 $generated@@27 ($generated@@117 ($generated@@72 $generated@@27 $generated@@223)))))
($generated@@70 (+ ($generated@@113 $generated@@219 $generated@@220 ($generated@@114 $generated@@221) ($generated@@72 $generated@@35 $generated@@222) $generated@@227) ($generated@@113 $generated@@219 $generated@@220 ($generated@@114 $generated@@221) ($generated@@72 $generated@@35 $generated@@222) $generated@@226)))))))))
 :weight 3
 :pattern ( ($generated@@113 $generated@@219 $generated@@220 ($generated@@114 $generated@@221) ($generated@@72 $generated@@35 $generated@@222) ($generated@@72 $generated@@27 $generated@@223)))
))))
(assert (forall (($generated@@228 Int) ) (! (= ($generated@@80 $generated@@11 ($generated@@15 ($generated@@70 $generated@@228))) ($generated@@72 $generated@@45 ($generated@@80 $generated@@11 ($generated@@15 $generated@@228))))
 :pattern ( ($generated@@80 $generated@@11 ($generated@@15 ($generated@@70 $generated@@228))))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@90 ($generated@@72 $generated@@45 $generated@@229)) ($generated@@72 $generated@@27 ($generated@@90 $generated@@229)))
 :pattern ( ($generated@@90 ($generated@@72 $generated@@45 $generated@@229)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (= ($generated@@80 $generated@@231 ($generated@@72 $generated@@231 $generated@@230)) ($generated@@72 $generated@@45 ($generated@@80 $generated@@231 $generated@@230)))
 :pattern ( ($generated@@80 $generated@@231 ($generated@@72 $generated@@231 $generated@@230)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (! ($generated@@26 $generated@@11 $generated@@233 $generated $generated@@232)
 :pattern ( ($generated@@26 $generated@@11 $generated@@233 $generated $generated@@232))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ) (! (= ($generated@@113 $generated@@234 $generated@@235 ($generated@@114 $generated@@236) $generated@@237 $generated@@238) ($generated@@113 $generated@@234 $generated@@235 $generated@@236 $generated@@237 $generated@@238))
 :pattern ( ($generated@@113 $generated@@234 $generated@@235 ($generated@@114 $generated@@236) $generated@@237 $generated@@238))
)))
(assert (forall (($generated@@239 T@U) ) (! ($generated@@86 $generated@@11 $generated@@239 $generated)
 :pattern ( ($generated@@86 $generated@@11 $generated@@239 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () T@U)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@254 true))
(let (($generated@@255  (=> (= $generated@@240 ($generated@@28 $generated@@241 $generated@@242)) (=> (and ($generated@@86 $generated@@27 $generated@@241 ($generated@@29 $generated@@243)) ($generated@@86 $generated@@27 $generated@@242 ($generated@@29 $generated@@243))) (=> (and (and (and (= $generated@@244 $generated@@242) ($generated@@86 $generated@@27 $generated@@244 ($generated@@29 $generated@@243))) (and (= $generated@@245 $generated@@244) (= $generated@@246 $generated@@241))) (and (and ($generated@@86 $generated@@27 $generated@@246 ($generated@@29 $generated@@243)) (= $generated@@247 $generated@@246)) (and ($generated@@95 ($generated@@80 $generated@@35 $generated@@248) ($generated@@37 $generated@@249) $generated@@250) ($generated@@26 $generated@@27 $generated@@247 ($generated@@29 $generated@@243) $generated@@250)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@151 $generated@@247) ($generated@@151 $generated@@240))) (=> (< ($generated@@151 $generated@@247) ($generated@@151 $generated@@240)) (=> (and (and ($generated@@115 $generated@@249 $generated@@243 $generated@@248 $generated@@247) ($generated@@95 ($generated@@80 $generated@@35 $generated@@248) ($generated@@37 $generated@@249) $generated@@250)) (and ($generated@@26 $generated@@27 $generated@@245 ($generated@@29 $generated@@243) $generated@@250) (= (ControlFlow 0 4) (- 0 3)))) (< ($generated@@151 $generated@@245) ($generated@@151 $generated@@240))))))))))
(let (($generated@@256  (=> (or (not (= $generated@@240 ($generated@@90 $generated@@251))) (not true)) (and (=> (= (ControlFlow 0 7) 4) $generated@@255) (=> (= (ControlFlow 0 7) 6) $generated@@254)))))
(let (($generated@@257 true))
(let (($generated@@258 true))
(let (($generated@@259  (=> (= $generated@@252 ($generated@@171 $generated@@41 $generated@@250 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@258) (=> (= (ControlFlow 0 8) 2) $generated@@257)) (=> (= (ControlFlow 0 8) 7) $generated@@256)))))
(let (($generated@@260  (=> (and ($generated@@30 $generated@@250) ($generated@@253 $generated@@250)) (=> (and (and (and (or (not (= $generated@@248 $generated@@41)) (not true)) (and ($generated@@86 $generated@@35 $generated@@248 ($generated@@36 $generated@@249)) ($generated@@26 $generated@@35 $generated@@248 ($generated@@36 $generated@@249) $generated@@250))) ($generated@@86 $generated@@27 $generated@@240 ($generated@@29 $generated@@243))) (and (= 1 $generated@@112) (= (ControlFlow 0 9) 8))) $generated@@259))))
$generated@@260))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
