(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@97 (T@U) Int)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@104 () T@T)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@107 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@108 () T@T)
(declare-fun $generated@@109 (T@T T@T) T@T)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@111 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@112 (T@T) T@T)
(declare-fun $generated@@113 (T@T) T@T)
(declare-fun $generated@@162 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@163 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30) $generated@@27)  (and ($generated@@24 $generated@@25 $generated@@29 $generated@@28) ($generated@@24 $generated@@25 $generated@@30 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30) $generated@@27))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@35 ($generated@@34 $generated@@25 $generated@@42) ($generated@@34 $generated@@25 $generated@@43)) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@42 $generated@@28) ($generated@@24 $generated@@25 $generated@@43 $generated@@27)))) (and (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@36 ($generated@@34 $generated@@25 $generated@@42)))))) (let (($generated@@44 ($generated@@34 $generated@@25 ($generated@@37 ($generated@@34 $generated@@25 $generated@@42)))))
 (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@38 ($generated@@34 $generated@@25 $generated@@43)))))) (let (($generated@@45 ($generated@@34 $generated@@25 ($generated@@39 ($generated@@34 $generated@@25 $generated@@43)))))
($generated@@35 $generated@@44 $generated@@45))))) (= ($generated@@32 ($generated@@33 $generated@@41) ($generated@@34 $generated@@25 $generated@@42) ($generated@@34 $generated@@25 $generated@@43)) (ite ($generated@@36 ($generated@@34 $generated@@25 $generated@@42)) $generated@@43 (let (($generated@@46 ($generated@@34 $generated@@25 ($generated@@37 ($generated@@34 $generated@@25 $generated@@42)))))
(ite ($generated@@38 ($generated@@34 $generated@@25 $generated@@43)) $generated@@40 (let (($generated@@47 ($generated@@34 $generated@@25 ($generated@@39 ($generated@@34 $generated@@25 $generated@@43)))))
($generated@@34 $generated@@25 ($generated@@32 ($generated@@33 $generated@@41) $generated@@46 $generated@@47)))))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@33 $generated@@41) ($generated@@34 $generated@@25 $generated@@42) ($generated@@34 $generated@@25 $generated@@43)))
))))
(assert (= ($generated@@48 $generated@@49) $generated@@2))
(assert (= ($generated@@48 $generated@@40) $generated@@4))
(assert ($generated@@24 $generated@@25 $generated@@49 $generated@@28))
(assert ($generated@@24 $generated@@25 $generated@@40 $generated@@27))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@34 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@34 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@36 $generated@@52) (= ($generated@@48 $generated@@52) $generated@@2))
 :pattern ( ($generated@@36 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@48 $generated@@54) $generated@@3))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@38 $generated@@55) (= ($generated@@48 $generated@@55) $generated@@4))
 :pattern ( ($generated@@38 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@48 $generated@@57) $generated@@5))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@59 $generated@@61 ($generated@@58 $generated@@61 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@58 $generated@@61 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@56 $generated@@62) (exists (($generated@@63 T@U) ($generated@@64 T@U) ) (= $generated@@62 ($generated@@26 $generated@@63 $generated@@64))))
 :pattern ( ($generated@@56 $generated@@62))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@36 $generated@@65) (= $generated@@65 $generated@@49))
 :pattern ( ($generated@@36 $generated@@65))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@38 $generated@@66) (= $generated@@66 $generated@@40))
 :pattern ( ($generated@@38 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@53 $generated@@68) (exists (($generated@@69 T@U) ) (= $generated@@68 ($generated@@67 $generated@@69))))
 :pattern ( ($generated@@53 $generated@@68))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@35 $generated@@71 $generated@@72) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@71 $generated@@28) ($generated@@24 $generated@@25 $generated@@72 $generated@@27)))) (and (=> (not ($generated@@36 $generated@@71)) (let (($generated@@73 ($generated@@37 $generated@@71)))
 (=> (not ($generated@@38 $generated@@72)) (let (($generated@@74 ($generated@@39 $generated@@72)))
($generated@@35 $generated@@73 $generated@@74))))) (= ($generated@@32 ($generated@@33 $generated@@70) $generated@@71 $generated@@72) (ite ($generated@@36 $generated@@71) $generated@@72 (let (($generated@@75 ($generated@@37 $generated@@71)))
(ite ($generated@@38 $generated@@72) $generated@@40 (let (($generated@@76 ($generated@@39 $generated@@72)))
($generated@@32 $generated@@70 $generated@@75 $generated@@76))))))))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@70) $generated@@71 $generated@@72))
))))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@67 $generated@@77) $generated@@28) ($generated@@24 $generated@@25 $generated@@77 $generated@@28))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@67 $generated@@77) $generated@@28))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (or ($generated@@35 $generated@@79 $generated@@80) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@79 $generated@@28) ($generated@@24 $generated@@25 $generated@@80 $generated@@27)))) ($generated@@24 $generated@@25 ($generated@@32 $generated@@78 $generated@@79 $generated@@80) $generated@@27))
 :pattern ( ($generated@@32 $generated@@78 $generated@@79 $generated@@80))
))))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@32 ($generated@@33 $generated@@81) $generated@@82 $generated@@83) ($generated@@32 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@84 $generated@@28) (or ($generated@@36 $generated@@84) ($generated@@53 $generated@@84)))
 :pattern ( ($generated@@53 $generated@@84) ($generated@@24 $generated@@25 $generated@@84 $generated@@28))
 :pattern ( ($generated@@36 $generated@@84) ($generated@@24 $generated@@25 $generated@@84 $generated@@28))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@85 $generated@@27) (or ($generated@@38 $generated@@85) ($generated@@56 $generated@@85)))
 :pattern ( ($generated@@56 $generated@@85) ($generated@@24 $generated@@25 $generated@@85 $generated@@27))
 :pattern ( ($generated@@38 $generated@@85) ($generated@@24 $generated@@25 $generated@@85 $generated@@27))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@48 ($generated@@26 $generated@@86 $generated@@87)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 ($generated@@26 $generated@@89 $generated@@90)) $generated@@89)
 :pattern ( ($generated@@26 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@39 ($generated@@26 $generated@@91 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@26 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ) (! (= ($generated@@48 ($generated@@67 $generated@@93)) $generated@@3)
 :pattern ( ($generated@@67 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (! (= ($generated@@37 ($generated@@67 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@67 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@58 $generated@@96 ($generated@@59 $generated@@96 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@59 $generated@@96 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (! (< ($generated@@97 $generated@@98) ($generated@@97 ($generated@@26 $generated@@98 $generated@@99)))
 :pattern ( ($generated@@26 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (< ($generated@@97 $generated@@101) ($generated@@97 ($generated@@26 $generated@@100 $generated@@101)))
 :pattern ( ($generated@@26 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ) (! (< ($generated@@97 $generated@@102) ($generated@@97 ($generated@@67 $generated@@102)))
 :pattern ( ($generated@@67 $generated@@102))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@103 $generated@@114 $generated@@115 $generated@@116 ($generated@@110 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@119 $generated@@120) $generated@@117)
 :weight 0
)) (and (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@103 $generated@@121 $generated@@122 $generated@@123 ($generated@@110 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@103 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)) (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@136 $generated@@138) (= ($generated@@103 $generated@@130 $generated@@131 $generated@@132 ($generated@@110 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)))) (= ($generated@@8 $generated@@104) 4)) (= ($generated@@8 $generated@@105) 5)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@107 $generated@@139 $generated@@140 ($generated@@111 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@143) $generated@@141)
 :weight 0
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@148 $generated@@149) (= ($generated@@107 $generated@@144 $generated@@145 ($generated@@111 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@107 $generated@@144 $generated@@145 $generated@@147 $generated@@149)))
 :weight 0
))) (= ($generated@@8 $generated@@108) 6)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@8 ($generated@@109 $generated@@150 $generated@@151)) 7))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@112 ($generated@@109 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@109 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@113 ($generated@@109 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@109 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Bool) ($generated@@160 T@U) ($generated@@161 T@U) ) (! (= ($generated@@13 ($generated@@103 $generated@@104 $generated@@105 $generated@@9 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))  (=> (and (or (not (= $generated@@160 $generated@@156)) (not true)) ($generated@@13 ($generated@@58 $generated@@9 ($generated@@107 $generated@@105 $generated@@108 ($generated@@107 $generated@@104 ($generated@@109 $generated@@105 $generated@@108) $generated@@157 $generated@@160) $generated@@158)))) $generated@@159))
 :pattern ( ($generated@@103 $generated@@104 $generated@@105 $generated@@9 ($generated@@106 $generated@@156 $generated@@157 $generated@@158 $generated@@159) $generated@@160 $generated@@161))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@163 $generated@@165) ($generated@@24 $generated@@25 $generated@@164 $generated@@28)) ($generated@@162 $generated@@25 $generated@@164 $generated@@28 $generated@@165))
 :pattern ( ($generated@@162 $generated@@25 $generated@@164 $generated@@28 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@163 $generated@@167) ($generated@@24 $generated@@25 $generated@@166 $generated@@27)) ($generated@@162 $generated@@25 $generated@@166 $generated@@27 $generated@@167))
 :pattern ( ($generated@@162 $generated@@25 $generated@@166 $generated@@27 $generated@@167))
)))
(assert (= ($generated@@168 $generated@@28) $generated@@0))
(assert (= ($generated@@169 $generated@@28) $generated@@6))
(assert (= ($generated@@168 $generated@@27) $generated@@1))
(assert (= ($generated@@169 $generated@@27) $generated@@7))
(assert (= $generated@@49 ($generated@@34 $generated@@25 $generated@@49)))
(assert (= $generated@@40 ($generated@@34 $generated@@25 $generated@@40)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and ($generated@@163 $generated@@171) (and ($generated@@53 $generated@@170) ($generated@@162 $generated@@25 $generated@@170 $generated@@28 $generated@@171))) ($generated@@162 $generated@@25 ($generated@@37 $generated@@170) $generated@@28 $generated@@171))
 :pattern ( ($generated@@162 $generated@@25 ($generated@@37 $generated@@170) $generated@@28 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@163 $generated@@173) (and ($generated@@56 $generated@@172) ($generated@@162 $generated@@25 $generated@@172 $generated@@27 $generated@@173))) ($generated@@162 $generated@@25 ($generated@@88 $generated@@172) $generated@@28 $generated@@173))
 :pattern ( ($generated@@162 $generated@@25 ($generated@@88 $generated@@172) $generated@@28 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@163 $generated@@175) (and ($generated@@56 $generated@@174) ($generated@@162 $generated@@25 $generated@@174 $generated@@27 $generated@@175))) ($generated@@162 $generated@@25 ($generated@@39 $generated@@174) $generated@@27 $generated@@175))
 :pattern ( ($generated@@162 $generated@@25 ($generated@@39 $generated@@174) $generated@@27 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@26 ($generated@@34 $generated@@25 $generated@@176) ($generated@@34 $generated@@25 $generated@@177)) ($generated@@34 $generated@@25 ($generated@@26 $generated@@176 $generated@@177)))
 :pattern ( ($generated@@26 ($generated@@34 $generated@@25 $generated@@176) ($generated@@34 $generated@@25 $generated@@177)))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@67 ($generated@@34 $generated@@25 $generated@@178)) ($generated@@34 $generated@@25 ($generated@@67 $generated@@178)))
 :pattern ( ($generated@@67 ($generated@@34 $generated@@25 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@59 $generated@@180 ($generated@@34 $generated@@180 $generated@@179)) ($generated@@34 $generated@@108 ($generated@@59 $generated@@180 $generated@@179)))
 :pattern ( ($generated@@59 $generated@@180 ($generated@@34 $generated@@180 $generated@@179)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@196 true))
(let (($generated@@197  (=> (and (and (= $generated@@181 ($generated@@26 $generated@@182 $generated@@183)) ($generated@@24 $generated@@25 $generated@@182 $generated@@28)) (and ($generated@@24 $generated@@25 $generated@@183 $generated@@27) (= $generated@@184 $generated@@183))) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@184 $generated@@27) (= $generated@@185 $generated@@184)) (and (= $generated@@186 $generated@@182) ($generated@@24 $generated@@25 $generated@@186 $generated@@28))) (and (and (= $generated@@187 $generated@@186) ($generated@@162 $generated@@25 $generated@@188 $generated@@28 $generated@@189)) (and ($generated@@162 $generated@@25 $generated@@185 $generated@@27 $generated@@189) (= (ControlFlow 0 6) (- 0 5))))) (or (< ($generated@@97 $generated@@188) ($generated@@97 $generated@@190)) (and (= ($generated@@97 $generated@@188) ($generated@@97 $generated@@190)) (< ($generated@@97 $generated@@185) ($generated@@97 $generated@@181))))))))
(let (($generated@@198  (=> (or (not (= $generated@@181 $generated@@40)) (not true)) (and (=> (= (ControlFlow 0 8) 6) $generated@@197) (=> (= (ControlFlow 0 8) 7) $generated@@196)))))
(let (($generated@@199 true))
(let (($generated@@200  (=> (= $generated@@190 ($generated@@67 $generated@@191)) (=> (and (and ($generated@@24 $generated@@25 $generated@@191 $generated@@28) (= $generated@@192 $generated@@191)) (and ($generated@@24 $generated@@25 $generated@@192 $generated@@28) (= $generated@@188 $generated@@192))) (and (=> (= (ControlFlow 0 9) 4) $generated@@199) (=> (= (ControlFlow 0 9) 8) $generated@@198))))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (or (not (= $generated@@190 $generated@@49)) (not true)) (and (=> (= (ControlFlow 0 10) 9) $generated@@200) (=> (= (ControlFlow 0 10) 3) $generated@@201)))))
(let (($generated@@203 true))
(let (($generated@@204 true))
(let (($generated@@205  (=> (= $generated@@193 ($generated@@106 $generated@@194 $generated@@189 $generated false)) (and (and (=> (= (ControlFlow 0 11) 1) $generated@@204) (=> (= (ControlFlow 0 11) 2) $generated@@203)) (=> (= (ControlFlow 0 11) 10) $generated@@202)))))
(let (($generated@@206  (=> (and ($generated@@163 $generated@@189) ($generated@@195 $generated@@189)) (=> (and (and ($generated@@24 $generated@@25 $generated@@190 $generated@@28) ($generated@@24 $generated@@25 $generated@@181 $generated@@27)) (and (= 2 $generated@@31) (= (ControlFlow 0 12) 11))) $generated@@205))))
$generated@@206))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
