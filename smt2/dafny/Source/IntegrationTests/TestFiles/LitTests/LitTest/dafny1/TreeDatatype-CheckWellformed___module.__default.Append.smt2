(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 () Int)
(declare-fun $generated@@21 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U) T@U)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 (T@T T@U T@U) Bool)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) Bool)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U T@U T@U) Int)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@57 (Int) Int)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@112 (T@U T@U) Bool)
(declare-fun $generated@@118 (T@U) Int)
(declare-fun $generated@@119 (T@U) Int)
(declare-fun $generated@@127 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 () T@T)
(declare-fun $generated@@130 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@132 (T@T T@T) T@T)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@134 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 (T@T) T@T)
(declare-fun $generated@@136 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert  (and (= ($generated@@4 $generated@@24) 3) (= ($generated@@4 $generated@@30) 4)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> (or ($generated@@25 $generated@@33 ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (and (< 2 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@35 ($generated@@27 $generated@@33)) ($generated@@26 $generated@@24 $generated@@36 ($generated@@27 $generated@@33))))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)))))) (let (($generated@@37 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@25 $generated@@33 $generated@@37 ($generated@@23 $generated@@24 $generated@@36)))) (= ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@35)) $generated@@36 (let (($generated@@38 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@35)))))
(let (($generated@@39 ($generated@@23 $generated@@30 ($generated@@31 ($generated@@23 $generated@@24 $generated@@35)))))
($generated@@23 $generated@@24 ($generated@@32 $generated@@39 ($generated@@23 $generated@@24 ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) $generated@@38 ($generated@@23 $generated@@24 $generated@@36)))))))))))
 :weight 3
 :pattern ( ($generated@@21 $generated@@33 ($generated@@22 $generated@@34) ($generated@@23 $generated@@24 $generated@@35) ($generated@@23 $generated@@24 $generated@@36)))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 $generated@@41 ($generated@@22 $generated@@42) $generated@@43) ($generated@@40 $generated@@41 $generated@@42 $generated@@43))
 :pattern ( ($generated@@40 $generated@@41 ($generated@@22 $generated@@42) $generated@@43))
)))
(assert (= ($generated@@44 $generated@@45) $generated@@1))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (!  (=> ($generated@@47 $generated@@49) ($generated@@46 $generated@@24 $generated@@45 ($generated@@27 $generated@@48) $generated@@49))
 :pattern ( ($generated@@46 $generated@@24 $generated@@45 ($generated@@27 $generated@@48) $generated@@49))
)))
(assert (forall (($generated@@50 T@U) ) (! ($generated@@26 $generated@@24 $generated@@45 ($generated@@27 $generated@@50))
 :pattern ( ($generated@@26 $generated@@24 $generated@@45 ($generated@@27 $generated@@50)))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@51 $generated@@52 $generated@@53) (= $generated@@52 $generated@@53))
 :pattern ( ($generated@@51 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@54 $generated@@55) ($generated@@54 $generated@@56)) (= ($generated@@51 $generated@@55 $generated@@56)  (and (= ($generated@@31 $generated@@55) ($generated@@31 $generated@@56)) ($generated@@51 ($generated@@29 $generated@@55) ($generated@@29 $generated@@56)))))
 :pattern ( ($generated@@51 $generated@@55 $generated@@56) ($generated@@54 $generated@@55))
 :pattern ( ($generated@@51 $generated@@55 $generated@@56) ($generated@@54 $generated@@56))
)))
(assert (forall (($generated@@58 Int) ) (! (= ($generated@@57 $generated@@58) $generated@@58)
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@T) ) (! (= ($generated@@23 $generated@@60 $generated@@59) $generated@@59)
 :pattern ( ($generated@@23 $generated@@60 $generated@@59))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@25 $generated@@62 $generated@@64 $generated@@65) (and (< 2 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@64 ($generated@@27 $generated@@62)) ($generated@@26 $generated@@24 $generated@@65 ($generated@@27 $generated@@62))))) (and (= ($generated@@40 $generated@@62 ($generated@@22 $generated@@61) ($generated@@21 $generated@@62 $generated@@63 $generated@@64 $generated@@65)) (+ ($generated@@40 $generated@@62 ($generated@@22 $generated@@61) $generated@@64) ($generated@@40 $generated@@62 ($generated@@22 $generated@@61) $generated@@65))) ($generated@@26 $generated@@24 ($generated@@21 $generated@@62 $generated@@63 $generated@@64 $generated@@65) ($generated@@27 $generated@@62))))
 :pattern ( ($generated@@21 $generated@@62 $generated@@63 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@26 $generated@@24 ($generated@@32 $generated@@68 $generated@@69) ($generated@@27 $generated@@67))  (and ($generated@@66 $generated@@68 $generated@@67) ($generated@@26 $generated@@24 $generated@@69 ($generated@@27 $generated@@67))))
 :pattern ( ($generated@@26 $generated@@24 ($generated@@32 $generated@@68 $generated@@69) ($generated@@27 $generated@@67)))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> (or ($generated@@25 $generated@@70 $generated@@72 $generated@@73) (and (< 2 $generated@@20) (and ($generated@@26 $generated@@24 $generated@@72 ($generated@@27 $generated@@70)) ($generated@@26 $generated@@24 $generated@@73 ($generated@@27 $generated@@70))))) (and (=> (not ($generated@@28 $generated@@72)) (let (($generated@@74 ($generated@@29 $generated@@72)))
($generated@@25 $generated@@70 $generated@@74 $generated@@73))) (= ($generated@@21 $generated@@70 ($generated@@22 $generated@@71) $generated@@72 $generated@@73) (ite ($generated@@28 $generated@@72) $generated@@73 (let (($generated@@75 ($generated@@29 $generated@@72)))
(let (($generated@@76 ($generated@@31 $generated@@72)))
($generated@@32 $generated@@76 ($generated@@21 $generated@@70 $generated@@71 $generated@@75 $generated@@73))))))))
 :pattern ( ($generated@@21 $generated@@70 ($generated@@22 $generated@@71) $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@77 T@U) ) (! (= ($generated@@28 $generated@@77) (= ($generated@@44 $generated@@77) $generated@@1))
 :pattern ( ($generated@@28 $generated@@77))
)))
(assert (forall (($generated@@78 T@U) ) (! (= ($generated@@54 $generated@@78) (= ($generated@@44 $generated@@78) $generated@@2))
 :pattern ( ($generated@@54 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@79 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@79 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@54 $generated@@83) (exists (($generated@@84 T@U) ($generated@@85 T@U) ) (= $generated@@83 ($generated@@32 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@54 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@28 $generated@@86) (= $generated@@86 $generated@@45))
 :pattern ( ($generated@@28 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@87 ($generated@@80 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@46 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@87 ($generated@@80 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@92 ($generated@@27 $generated@@94)) $generated@@0) (= ($generated@@93 ($generated@@27 $generated@@94)) $generated@@3))
 :pattern ( ($generated@@27 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@26 $generated@@24 $generated@@96 ($generated@@27 $generated@@95)) (or ($generated@@28 $generated@@96) ($generated@@54 $generated@@96)))
 :pattern ( ($generated@@54 $generated@@96) ($generated@@26 $generated@@24 $generated@@96 ($generated@@27 $generated@@95)))
 :pattern ( ($generated@@28 $generated@@96) ($generated@@26 $generated@@24 $generated@@96 ($generated@@27 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@66 ($generated@@80 $generated@@99 $generated@@97) $generated@@98) ($generated@@26 $generated@@99 $generated@@97 $generated@@98))
 :pattern ( ($generated@@66 ($generated@@80 $generated@@99 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (and ($generated@@28 $generated@@100) ($generated@@28 $generated@@101)) ($generated@@51 $generated@@100 $generated@@101))
 :pattern ( ($generated@@51 $generated@@100 $generated@@101) ($generated@@28 $generated@@100))
 :pattern ( ($generated@@51 $generated@@100 $generated@@101) ($generated@@28 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@44 ($generated@@32 $generated@@102 $generated@@103)) $generated@@2)
 :pattern ( ($generated@@32 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@31 ($generated@@32 $generated@@104 $generated@@105)) $generated@@104)
 :pattern ( ($generated@@32 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@29 ($generated@@32 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@32 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 ($generated@@27 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@27 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@79 $generated@@111 ($generated@@80 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@80 $generated@@111 $generated@@110))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or ($generated@@112 $generated@@113 $generated@@115) (and (< 1 $generated@@20) ($generated@@26 $generated@@24 $generated@@115 ($generated@@27 $generated@@113)))) (and (=> (not ($generated@@28 $generated@@115)) (let (($generated@@116 ($generated@@29 $generated@@115)))
($generated@@112 $generated@@113 $generated@@116))) (= ($generated@@40 $generated@@113 ($generated@@22 $generated@@114) $generated@@115) (ite ($generated@@28 $generated@@115) 0 (let (($generated@@117 ($generated@@29 $generated@@115)))
(+ 1 ($generated@@40 $generated@@113 $generated@@114 $generated@@117)))))))
 :pattern ( ($generated@@40 $generated@@113 ($generated@@22 $generated@@114) $generated@@115))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (< ($generated@@118 $generated@@120) ($generated@@119 ($generated@@32 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@32 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (< ($generated@@119 $generated@@123) ($generated@@119 ($generated@@32 $generated@@122 $generated@@123)))
 :pattern ( ($generated@@32 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@47 $generated@@126) (and ($generated@@54 $generated@@124) ($generated@@46 $generated@@24 $generated@@124 ($generated@@27 $generated@@125) $generated@@126))) ($generated@@87 ($generated@@31 $generated@@124) $generated@@125 $generated@@126))
 :pattern ( ($generated@@87 ($generated@@31 $generated@@124) $generated@@125 $generated@@126))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@127 $generated@@137 $generated@@138 $generated@@139 ($generated@@133 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@142 $generated@@143) $generated@@140)
 :weight 0
)) (and (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@127 $generated@@144 $generated@@145 $generated@@146 ($generated@@133 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@149 $generated@@150 $generated@@147) $generated@@151 $generated@@152) ($generated@@127 $generated@@144 $generated@@145 $generated@@146 $generated@@148 $generated@@151 $generated@@152)))
 :weight 0
)) (forall (($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@T) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ) (!  (or (= $generated@@159 $generated@@161) (= ($generated@@127 $generated@@153 $generated@@154 $generated@@155 ($generated@@133 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156) $generated@@160 $generated@@161) ($generated@@127 $generated@@153 $generated@@154 $generated@@155 $generated@@157 $generated@@160 $generated@@161)))
 :weight 0
)))) (= ($generated@@4 $generated@@128) 5)) (= ($generated@@4 $generated@@129) 6)) (forall (($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@131 $generated@@162 $generated@@163 ($generated@@134 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@164) $generated@@166) $generated@@164)
 :weight 0
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (!  (or (= $generated@@171 $generated@@172) (= ($generated@@131 $generated@@167 $generated@@168 ($generated@@134 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@169) $generated@@172) ($generated@@131 $generated@@167 $generated@@168 $generated@@170 $generated@@172)))
 :weight 0
))) (forall (($generated@@173 T@T) ($generated@@174 T@T) ) (= ($generated@@4 ($generated@@132 $generated@@173 $generated@@174)) 7))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ) (! (= ($generated@@135 ($generated@@132 $generated@@175 $generated@@176)) $generated@@175)
 :pattern ( ($generated@@132 $generated@@175 $generated@@176))
))) (forall (($generated@@177 T@T) ($generated@@178 T@T) ) (! (= ($generated@@136 ($generated@@132 $generated@@177 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@132 $generated@@177 $generated@@178))
))))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Bool) ($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@9 ($generated@@127 $generated@@128 $generated@@129 $generated@@5 ($generated@@130 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))  (=> (and (or (not (= $generated@@183 $generated@@179)) (not true)) ($generated@@9 ($generated@@79 $generated@@5 ($generated@@131 $generated@@129 $generated@@30 ($generated@@131 $generated@@128 ($generated@@132 $generated@@129 $generated@@30) $generated@@180 $generated@@183) $generated@@181)))) $generated@@182))
 :pattern ( ($generated@@127 $generated@@128 $generated@@129 $generated@@5 ($generated@@130 $generated@@179 $generated@@180 $generated@@181 $generated@@182) $generated@@183 $generated@@184))
)))
(assert  (=> (<= 2 $generated@@20) (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and (or ($generated@@25 $generated@@186 $generated@@188 $generated@@189) (and (< 2 $generated@@20) (and (and ($generated@@26 $generated@@24 $generated@@188 ($generated@@27 $generated@@186)) ($generated@@46 $generated@@24 $generated@@188 ($generated@@27 $generated@@186) $generated@@185)) (and ($generated@@26 $generated@@24 $generated@@189 ($generated@@27 $generated@@186)) ($generated@@46 $generated@@24 $generated@@189 ($generated@@27 $generated@@186) $generated@@185))))) ($generated@@47 $generated@@185)) ($generated@@46 $generated@@24 ($generated@@21 $generated@@186 $generated@@187 $generated@@188 $generated@@189) ($generated@@27 $generated@@186) $generated@@185))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@21 $generated@@186 $generated@@187 $generated@@188 $generated@@189) ($generated@@27 $generated@@186) $generated@@185))
))))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@118 ($generated@@80 $generated@@24 $generated@@190)) ($generated@@119 $generated@@190))
 :pattern ( ($generated@@118 ($generated@@80 $generated@@24 $generated@@190)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@21 $generated@@191 ($generated@@22 $generated@@192) $generated@@193 $generated@@194) ($generated@@21 $generated@@191 $generated@@192 $generated@@193 $generated@@194))
 :pattern ( ($generated@@21 $generated@@191 ($generated@@22 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@66 $generated@@196 ($generated@@27 $generated@@195)) (and (= ($generated@@80 $generated@@24 ($generated@@79 $generated@@24 $generated@@196)) $generated@@196) ($generated@@26 $generated@@24 ($generated@@79 $generated@@24 $generated@@196) ($generated@@27 $generated@@195))))
 :pattern ( ($generated@@66 $generated@@196 ($generated@@27 $generated@@195)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> (and ($generated@@47 $generated@@199) (and ($generated@@54 $generated@@197) ($generated@@46 $generated@@24 $generated@@197 ($generated@@27 $generated@@198) $generated@@199))) ($generated@@46 $generated@@24 ($generated@@29 $generated@@197) ($generated@@27 $generated@@198) $generated@@199))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@29 $generated@@197) ($generated@@27 $generated@@198) $generated@@199))
)))
(assert (= $generated@@45 ($generated@@23 $generated@@24 $generated@@45)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@32 ($generated@@23 $generated@@30 $generated@@200) ($generated@@23 $generated@@24 $generated@@201)) ($generated@@23 $generated@@24 ($generated@@32 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@32 ($generated@@23 $generated@@30 $generated@@200) ($generated@@23 $generated@@24 $generated@@201)))
)))
(assert (forall (($generated@@202 Int) ) (! (= ($generated@@80 $generated@@6 ($generated@@10 ($generated@@57 $generated@@202))) ($generated@@23 $generated@@30 ($generated@@80 $generated@@6 ($generated@@10 $generated@@202))))
 :pattern ( ($generated@@80 $generated@@6 ($generated@@10 ($generated@@57 $generated@@202))))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@T) ) (! (= ($generated@@80 $generated@@204 ($generated@@23 $generated@@204 $generated@@203)) ($generated@@23 $generated@@30 ($generated@@80 $generated@@204 $generated@@203)))
 :pattern ( ($generated@@80 $generated@@204 ($generated@@23 $generated@@204 $generated@@203)))
)))
(assert  (=> (<= 1 $generated@@20) (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (or ($generated@@112 $generated@@205 ($generated@@23 $generated@@24 $generated@@207)) (and (< 1 $generated@@20) ($generated@@26 $generated@@24 $generated@@207 ($generated@@27 $generated@@205)))) (and (=> (not ($generated@@9 ($generated@@23 $generated@@5 ($generated@@8 ($generated@@28 ($generated@@23 $generated@@24 $generated@@207)))))) (let (($generated@@208 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@207)))))
($generated@@112 $generated@@205 $generated@@208))) (= ($generated@@40 $generated@@205 ($generated@@22 $generated@@206) ($generated@@23 $generated@@24 $generated@@207)) (ite ($generated@@28 ($generated@@23 $generated@@24 $generated@@207)) 0 (let (($generated@@209 ($generated@@23 $generated@@24 ($generated@@29 ($generated@@23 $generated@@24 $generated@@207)))))
($generated@@57 (+ 1 ($generated@@40 $generated@@205 ($generated@@22 $generated@@206) $generated@@209))))))))
 :weight 3
 :pattern ( ($generated@@40 $generated@@205 ($generated@@22 $generated@@206) ($generated@@23 $generated@@24 $generated@@207)))
))))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@47 $generated@@213) (= ($generated@@46 $generated@@24 ($generated@@32 $generated@@211 $generated@@212) ($generated@@27 $generated@@210) $generated@@213)  (and ($generated@@87 $generated@@211 $generated@@210 $generated@@213) ($generated@@46 $generated@@24 $generated@@212 ($generated@@27 $generated@@210) $generated@@213))))
 :pattern ( ($generated@@46 $generated@@24 ($generated@@32 $generated@@211 $generated@@212) ($generated@@27 $generated@@210) $generated@@213))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@227  (=> (= (ControlFlow 0 5) (- 0 4)) (= ($generated@@40 $generated@@214 ($generated@@22 ($generated@@22 $generated@@61)) ($generated@@21 $generated@@214 ($generated@@22 ($generated@@22 $generated@@61)) $generated@@215 $generated@@216)) (+ ($generated@@40 $generated@@214 ($generated@@22 ($generated@@22 $generated@@61)) $generated@@215) ($generated@@40 $generated@@214 ($generated@@22 ($generated@@22 $generated@@61)) $generated@@216))))))
(let (($generated@@228  (=> (= $generated@@215 ($generated@@32 $generated@@217 $generated@@218)) (=> (and ($generated@@66 $generated@@217 $generated@@214) ($generated@@26 $generated@@24 $generated@@218 ($generated@@27 $generated@@214))) (=> (and (and (and (= $generated@@219 $generated@@218) ($generated@@26 $generated@@24 $generated@@219 ($generated@@27 $generated@@214))) (and (= $generated@@220 $generated@@219) (= $generated@@221 $generated@@217))) (and (and ($generated@@66 $generated@@221 $generated@@214) (= $generated@@222 $generated@@221)) (and ($generated@@46 $generated@@24 $generated@@220 ($generated@@27 $generated@@214) $generated@@223) ($generated@@46 $generated@@24 $generated@@216 ($generated@@27 $generated@@214) $generated@@223)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (< ($generated@@119 $generated@@220) ($generated@@119 $generated@@215)) (and (= ($generated@@119 $generated@@220) ($generated@@119 $generated@@215)) (< ($generated@@119 $generated@@216) ($generated@@119 $generated@@216))))) (=> (or (< ($generated@@119 $generated@@220) ($generated@@119 $generated@@215)) (and (= ($generated@@119 $generated@@220) ($generated@@119 $generated@@215)) (< ($generated@@119 $generated@@216) ($generated@@119 $generated@@216)))) (=> ($generated@@25 $generated@@214 $generated@@220 $generated@@216) (=> (and (and (= ($generated@@21 $generated@@214 ($generated@@22 $generated@@61) $generated@@215 $generated@@216) ($generated@@32 $generated@@222 ($generated@@21 $generated@@214 ($generated@@22 $generated@@61) $generated@@220 $generated@@216))) ($generated@@25 $generated@@214 $generated@@220 $generated@@216)) (and ($generated@@26 $generated@@24 ($generated@@21 $generated@@214 ($generated@@22 $generated@@61) $generated@@215 $generated@@216) ($generated@@27 $generated@@214)) (= (ControlFlow 0 7) 5))) $generated@@227)))))))))
(let (($generated@@229  (=> (and (and (= $generated@@215 $generated@@45) (= ($generated@@21 $generated@@214 ($generated@@22 $generated@@61) $generated@@215 $generated@@216) $generated@@216)) (and ($generated@@26 $generated@@24 ($generated@@21 $generated@@214 ($generated@@22 $generated@@61) $generated@@215 $generated@@216) ($generated@@27 $generated@@214)) (= (ControlFlow 0 6) 5))) $generated@@227)))
(let (($generated@@230 true))
(let (($generated@@231  (=> (or (not (= $generated@@215 $generated@@45)) (not true)) (and (=> (= (ControlFlow 0 9) 7) $generated@@228) (=> (= (ControlFlow 0 9) 3) $generated@@230)))))
(let (($generated@@232  (=> (and (and ($generated@@26 $generated@@24 ($generated@@21 $generated@@214 ($generated@@22 $generated@@61) $generated@@215 $generated@@216) ($generated@@27 $generated@@214)) ($generated@@46 $generated@@24 $generated@@215 ($generated@@27 $generated@@214) $generated@@223)) (and ($generated@@46 $generated@@24 $generated@@216 ($generated@@27 $generated@@214) $generated@@223) (= (ControlFlow 0 2) (- 0 1)))) (or (and ($generated@@51 $generated@@215 $generated@@215) ($generated@@51 $generated@@216 $generated@@216)) (or (< ($generated@@119 $generated@@215) ($generated@@119 $generated@@215)) (and (= ($generated@@119 $generated@@215) ($generated@@119 $generated@@215)) (< ($generated@@119 $generated@@216) ($generated@@119 $generated@@216))))))))
(let (($generated@@233  (=> (= $generated@@224 ($generated@@130 $generated@@225 $generated@@223 $generated false)) (and (and (=> (= (ControlFlow 0 10) 2) $generated@@232) (=> (= (ControlFlow 0 10) 6) $generated@@229)) (=> (= (ControlFlow 0 10) 9) $generated@@231)))))
(let (($generated@@234  (=> (and ($generated@@47 $generated@@223) ($generated@@226 $generated@@223)) (=> (and (and ($generated@@26 $generated@@24 $generated@@215 ($generated@@27 $generated@@214)) ($generated@@26 $generated@@24 $generated@@216 ($generated@@27 $generated@@214))) (and (= 2 $generated@@20) (= (ControlFlow 0 11) 10))) $generated@@233))))
$generated@@234)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
