(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@89 () T@U)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U) Bool)
(declare-fun $generated@@98 (T@U) Bool)
(declare-fun $generated@@101 (T@U) Bool)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@119 (T@U T@U) T@U)
(declare-fun $generated@@131 (T@U) T@U)
(declare-fun $generated@@137 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@161 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@167 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@186 (T@U) Int)
(declare-fun $generated@@199 () T@T)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@202 () T@T)
(declare-fun $generated@@203 () T@T)
(declare-fun $generated@@204 (T@T T@T) T@T)
(declare-fun $generated@@205 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@206 (T@T) T@T)
(declare-fun $generated@@207 (T@T) T@T)
(declare-fun $generated@@241 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@242 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@243 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@283 (T@U) T@U)
(declare-fun $generated@@284 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@14 $generated@@31) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@32 $generated@@35 $generated@@36) $generated@@33)  (and ($generated@@30 $generated@@31 $generated@@35 $generated@@34) ($generated@@30 $generated@@31 $generated@@36 $generated@@33)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@32 $generated@@35 $generated@@36) $generated@@33))
)))
(assert (= ($generated@@14 $generated@@42) 4))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (or ($generated@@41 $generated@@56 $generated@@57) (and (< 2 $generated@@37) (and (and ($generated@@40 $generated@@55) ($generated@@30 $generated@@42 $generated@@56 ($generated@@43 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@57 $generated@@33)))) (and (=> (not ($generated@@44 $generated@@57)) (let (($generated@@58 ($generated@@45 $generated@@57)))
(let (($generated@@59 ($generated@@46 $generated@@57)))
 (and (and ($generated@@47 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@55 $generated@@56 ($generated@@50 $generated@@31 $generated@@59)))) (=> (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@55 $generated@@56 ($generated@@50 $generated@@31 $generated@@59))) $generated@@52)) ($generated@@41 $generated@@56 $generated@@58))) (=> ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@55 $generated@@56 ($generated@@50 $generated@@31 $generated@@59))) $generated@@52) ($generated@@41 $generated@@56 $generated@@58)))))) (= ($generated@@38 ($generated@@39 $generated@@54) $generated@@56 $generated@@57) (ite ($generated@@44 $generated@@57) $generated@@53 (let (($generated@@60 ($generated@@45 $generated@@57)))
(let (($generated@@61 ($generated@@46 $generated@@57)))
(ite  (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@55 $generated@@56 ($generated@@50 $generated@@31 $generated@@61))) $generated@@52)) ($generated@@32 $generated@@61 ($generated@@38 $generated@@54 $generated@@56 $generated@@60)) ($generated@@38 $generated@@54 $generated@@56 $generated@@60))))))))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@54) $generated@@56 $generated@@57) ($generated@@40 $generated@@55))
))))
(assert (forall (($generated@@64 T@U) ) (!  (not ($generated@@62 $generated@@63 $generated@@64))
 :pattern ( ($generated@@62 $generated@@63 $generated@@64))
)))
(assert (= ($generated@@65 $generated@@52) $generated@@5))
(assert (= ($generated@@65 $generated@@53) $generated@@7))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (or ($generated@@41 ($generated@@66 $generated@@42 $generated@@69) ($generated@@66 $generated@@31 $generated@@70)) (and (< 2 $generated@@37) (and (and ($generated@@40 $generated@@68) ($generated@@30 $generated@@42 $generated@@69 ($generated@@43 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@70 $generated@@33)))) (and (=> (not ($generated@@19 ($generated@@66 $generated@@15 ($generated@@18 ($generated@@44 ($generated@@66 $generated@@31 $generated@@70)))))) (let (($generated@@71 ($generated@@66 $generated@@31 ($generated@@45 ($generated@@66 $generated@@31 $generated@@70)))))
(let (($generated@@72 ($generated@@66 $generated@@31 ($generated@@46 ($generated@@66 $generated@@31 $generated@@70)))))
 (and (and ($generated@@47 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@68 ($generated@@66 $generated@@42 $generated@@69) ($generated@@50 $generated@@31 $generated@@72)))) (=> (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@68 ($generated@@66 $generated@@42 $generated@@69) ($generated@@50 $generated@@31 $generated@@72))) $generated@@52)) ($generated@@41 ($generated@@66 $generated@@42 $generated@@69) $generated@@71))) (=> ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@68 ($generated@@66 $generated@@42 $generated@@69) ($generated@@50 $generated@@31 $generated@@72))) $generated@@52) ($generated@@41 ($generated@@66 $generated@@42 $generated@@69) $generated@@71)))))) (= ($generated@@38 ($generated@@39 $generated@@67) ($generated@@66 $generated@@42 $generated@@69) ($generated@@66 $generated@@31 $generated@@70)) (ite ($generated@@44 ($generated@@66 $generated@@31 $generated@@70)) $generated@@53 (let (($generated@@73 ($generated@@66 $generated@@31 ($generated@@45 ($generated@@66 $generated@@31 $generated@@70)))))
(let (($generated@@74 ($generated@@66 $generated@@31 ($generated@@46 ($generated@@66 $generated@@31 $generated@@70)))))
(ite  (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@68 ($generated@@66 $generated@@42 $generated@@69) ($generated@@50 $generated@@31 $generated@@74))) $generated@@52)) ($generated@@32 $generated@@74 ($generated@@66 $generated@@31 ($generated@@38 ($generated@@39 $generated@@67) ($generated@@66 $generated@@42 $generated@@69) $generated@@73))) ($generated@@38 ($generated@@39 $generated@@67) ($generated@@66 $generated@@42 $generated@@69) $generated@@73))))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@67) ($generated@@66 $generated@@42 $generated@@69) ($generated@@66 $generated@@31 $generated@@70)) ($generated@@40 $generated@@68))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@42 $generated@@77 ($generated@@75 $generated@@78 $generated@@79)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@76 $generated@@82 $generated@@80) ($generated@@76 $generated@@82 $generated@@78))
 :pattern ( ($generated@@76 $generated@@82 $generated@@80))
 :pattern ( ($generated@@76 $generated@@82 $generated@@78))
))) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@76 $generated@@83 $generated@@79) ($generated@@76 $generated@@83 $generated@@81))
 :pattern ( ($generated@@76 $generated@@83 $generated@@79))
 :pattern ( ($generated@@76 $generated@@83 $generated@@81))
))) ($generated@@30 $generated@@42 $generated@@77 ($generated@@75 $generated@@80 $generated@@81)))
 :pattern ( ($generated@@30 $generated@@42 $generated@@77 ($generated@@75 $generated@@78 $generated@@79)) ($generated@@30 $generated@@42 $generated@@77 ($generated@@75 $generated@@80 $generated@@81)))
)))
(assert ($generated@@30 $generated@@31 $generated@@52 $generated@@34))
(assert ($generated@@30 $generated@@31 $generated@@53 $generated@@33))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@51 $generated@@84 $generated@@85) (= $generated@@84 $generated@@85))
 :pattern ( ($generated@@51 $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@66 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@66 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> (and ($generated@@40 $generated@@93) (and ($generated@@76 $generated@@95 $generated@@91) ($generated@@30 $generated@@42 $generated@@94 ($generated@@75 $generated@@91 $generated@@92)))) (= ($generated@@90 ($generated@@88 $generated@@91 $generated@@92 $generated@@89 $generated@@94 $generated@@95) $generated@@63) ($generated@@90 ($generated@@88 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95) $generated@@63)))
 :pattern ( ($generated@@88 $generated@@91 $generated@@92 $generated@@89 $generated@@94 $generated@@95) ($generated@@40 $generated@@93))
 :pattern ( ($generated@@88 $generated@@91 $generated@@92 $generated@@93 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 $generated@@97) (= ($generated@@65 $generated@@97) $generated@@5))
 :pattern ( ($generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@98 $generated@@99) (= ($generated@@65 $generated@@99) $generated@@6))
 :pattern ( ($generated@@98 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ) (! (= ($generated@@44 $generated@@100) (= ($generated@@65 $generated@@100) $generated@@7))
 :pattern ( ($generated@@44 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@101 $generated@@102) (= ($generated@@65 $generated@@102) $generated@@8))
 :pattern ( ($generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@50 $generated@@104 ($generated@@48 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@48 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@101 $generated@@105) (exists (($generated@@106 T@U) ($generated@@107 T@U) ) (= $generated@@105 ($generated@@32 $generated@@106 $generated@@107))))
 :pattern ( ($generated@@101 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@96 $generated@@108) (= $generated@@108 $generated@@52))
 :pattern ( ($generated@@96 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@44 $generated@@109) (= $generated@@109 $generated@@53))
 :pattern ( ($generated@@44 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@98 $generated@@111) (exists (($generated@@112 T@U) ) (= $generated@@111 ($generated@@110 $generated@@112))))
 :pattern ( ($generated@@98 $generated@@111))
)))
(assert ($generated@@40 $generated@@89))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@T) ) (! (= ($generated@@113 ($generated@@50 $generated@@118 $generated@@115) $generated@@116 $generated@@117) ($generated@@114 $generated@@118 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@113 ($generated@@50 $generated@@118 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@114 $generated@@42 $generated@@122 ($generated@@119 $generated@@120 $generated@@121) $generated@@123) ($generated@@114 $generated@@42 $generated@@122 ($generated@@75 $generated@@120 $generated@@121) $generated@@123))
 :pattern ( ($generated@@114 $generated@@42 $generated@@122 ($generated@@119 $generated@@120 $generated@@121) $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@114 $generated@@42 $generated@@126 ($generated@@43 $generated@@124 $generated@@125) $generated@@127) ($generated@@114 $generated@@42 $generated@@126 ($generated@@119 $generated@@124 $generated@@125) $generated@@127))
 :pattern ( ($generated@@114 $generated@@42 $generated@@126 ($generated@@43 $generated@@124 $generated@@125) $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@76 $generated@@128 $generated@@34) (and (= ($generated@@50 $generated@@31 ($generated@@48 $generated@@31 $generated@@128)) $generated@@128) ($generated@@30 $generated@@31 ($generated@@48 $generated@@31 $generated@@128) $generated@@34)))
 :pattern ( ($generated@@76 $generated@@128 $generated@@34))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@76 $generated@@129 $generated@@33) (and (= ($generated@@50 $generated@@31 ($generated@@48 $generated@@31 $generated@@129)) $generated@@129) ($generated@@30 $generated@@31 ($generated@@48 $generated@@31 $generated@@129) $generated@@33)))
 :pattern ( ($generated@@76 $generated@@129 $generated@@33))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@110 $generated@@130) $generated@@34) ($generated@@30 $generated@@31 $generated@@130 $generated@@34))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@110 $generated@@130) $generated@@34))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (and ($generated@@98 $generated@@132) ($generated@@98 $generated@@133)) (= ($generated@@51 $generated@@132 $generated@@133) ($generated@@51 ($generated@@131 $generated@@132) ($generated@@131 $generated@@133))))
 :pattern ( ($generated@@51 $generated@@132 $generated@@133) ($generated@@98 $generated@@132))
 :pattern ( ($generated@@51 $generated@@132 $generated@@133) ($generated@@98 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@38 ($generated@@39 $generated@@134) $generated@@135 $generated@@136) ($generated@@38 $generated@@134 $generated@@135 $generated@@136))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@40 $generated@@141) ($generated@@114 $generated@@42 $generated@@138 ($generated@@75 $generated@@139 $generated@@140) $generated@@141)) (forall (($generated@@142 T@U) ) (!  (=> (and ($generated@@113 $generated@@142 $generated@@139 $generated@@141) ($generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142)) ($generated@@113 ($generated@@49 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142) $generated@@140 $generated@@141))
 :pattern ( ($generated@@49 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142))
)))
 :pattern ( ($generated@@114 $generated@@42 $generated@@138 ($generated@@75 $generated@@139 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@47 $generated@@143) (or ($generated@@96 $generated@@143) ($generated@@98 $generated@@143)))
 :pattern ( ($generated@@47 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@90 $generated@@144 $generated@@145) (= $generated@@144 $generated@@145))
 :pattern ( ($generated@@90 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@146 $generated@@34) (or ($generated@@96 $generated@@146) ($generated@@98 $generated@@146)))
 :pattern ( ($generated@@98 $generated@@146) ($generated@@30 $generated@@31 $generated@@146 $generated@@34))
 :pattern ( ($generated@@96 $generated@@146) ($generated@@30 $generated@@31 $generated@@146 $generated@@34))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@147 $generated@@33) (or ($generated@@44 $generated@@147) ($generated@@101 $generated@@147)))
 :pattern ( ($generated@@101 $generated@@147) ($generated@@30 $generated@@31 $generated@@147 $generated@@33))
 :pattern ( ($generated@@44 $generated@@147) ($generated@@30 $generated@@31 $generated@@147 $generated@@33))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@30 $generated@@42 $generated@@148 ($generated@@75 $generated@@149 $generated@@150)) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@151) ($generated@@76 $generated@@152 $generated@@149)) ($generated@@137 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152)) ($generated@@76 ($generated@@49 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152) $generated@@150))
 :pattern ( ($generated@@49 $generated@@149 $generated@@150 $generated@@151 $generated@@148 $generated@@152))
)))
 :pattern ( ($generated@@30 $generated@@42 $generated@@148 ($generated@@75 $generated@@149 $generated@@150)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@76 ($generated@@50 $generated@@155 $generated@@153) $generated@@154) ($generated@@30 $generated@@155 $generated@@153 $generated@@154))
 :pattern ( ($generated@@76 ($generated@@50 $generated@@155 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@96 $generated@@156) ($generated@@96 $generated@@157)) ($generated@@51 $generated@@156 $generated@@157))
 :pattern ( ($generated@@51 $generated@@156 $generated@@157) ($generated@@96 $generated@@156))
 :pattern ( ($generated@@51 $generated@@156 $generated@@157) ($generated@@96 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@158 ($generated@@75 $generated@@159 $generated@@160)) $generated@@159)
 :pattern ( ($generated@@75 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@161 ($generated@@75 $generated@@162 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@75 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@164 ($generated@@119 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@119 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@167 ($generated@@119 $generated@@168 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@119 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@170 ($generated@@43 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@43 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@173 ($generated@@43 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@43 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@65 ($generated@@32 $generated@@176 $generated@@177)) $generated@@8)
 :pattern ( ($generated@@32 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@46 ($generated@@32 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@32 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@45 ($generated@@32 $generated@@180 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@32 $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (! (= ($generated@@65 ($generated@@110 $generated@@182)) $generated@@6)
 :pattern ( ($generated@@110 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@131 ($generated@@110 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@110 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@T) ) (! (= ($generated@@48 $generated@@185 ($generated@@50 $generated@@185 $generated@@184)) $generated@@184)
 :pattern ( ($generated@@50 $generated@@185 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (< ($generated@@186 $generated@@187) ($generated@@186 ($generated@@32 $generated@@187 $generated@@188)))
 :pattern ( ($generated@@32 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (< ($generated@@186 $generated@@190) ($generated@@186 ($generated@@32 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@32 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (! (= ($generated@@30 $generated@@42 $generated@@193 ($generated@@43 $generated@@191 $generated@@192))  (and ($generated@@30 $generated@@42 $generated@@193 ($generated@@119 $generated@@191 $generated@@192)) (forall (($generated@@194 T@U) )  (=> ($generated@@76 $generated@@194 $generated@@191) ($generated@@137 $generated@@191 $generated@@192 $generated@@89 $generated@@193 $generated@@194)))))
 :pattern ( ($generated@@30 $generated@@42 $generated@@193 ($generated@@43 $generated@@191 $generated@@192)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@30 $generated@@42 $generated@@197 ($generated@@119 $generated@@195 $generated@@196))  (and ($generated@@30 $generated@@42 $generated@@197 ($generated@@75 $generated@@195 $generated@@196)) (forall (($generated@@198 T@U) )  (=> ($generated@@76 $generated@@198 $generated@@195) ($generated@@90 ($generated@@88 $generated@@195 $generated@@196 $generated@@89 $generated@@197 $generated@@198) $generated@@63)))))
 :pattern ( ($generated@@30 $generated@@42 $generated@@197 ($generated@@119 $generated@@195 $generated@@196)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@14 $generated@@199) 5) (forall (($generated@@208 T@T) ($generated@@209 T@T) ($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@201 $generated@@208 $generated@@209 ($generated@@205 $generated@@208 $generated@@209 $generated@@211 $generated@@212 $generated@@210) $generated@@212) $generated@@210)
 :weight 0
))) (forall (($generated@@213 T@T) ($generated@@214 T@T) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (or (= $generated@@217 $generated@@218) (= ($generated@@201 $generated@@213 $generated@@214 ($generated@@205 $generated@@213 $generated@@214 $generated@@216 $generated@@217 $generated@@215) $generated@@218) ($generated@@201 $generated@@213 $generated@@214 $generated@@216 $generated@@218)))
 :weight 0
))) (= ($generated@@14 $generated@@202) 6)) (= ($generated@@14 $generated@@203) 7)) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (= ($generated@@14 ($generated@@204 $generated@@219 $generated@@220)) 8))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@206 ($generated@@204 $generated@@221 $generated@@222)) $generated@@221)
 :pattern ( ($generated@@204 $generated@@221 $generated@@222))
))) (forall (($generated@@223 T@T) ($generated@@224 T@T) ) (! (= ($generated@@207 ($generated@@204 $generated@@223 $generated@@224)) $generated@@224)
 :pattern ( ($generated@@204 $generated@@223 $generated@@224))
))))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> ($generated@@40 $generated@@228) (= ($generated@@114 $generated@@42 $generated@@225 ($generated@@75 $generated@@226 $generated@@227) $generated@@228) (forall (($generated@@229 T@U) ) (!  (=> (and (and ($generated@@76 $generated@@229 $generated@@226) ($generated@@113 $generated@@229 $generated@@226 $generated@@228)) ($generated@@137 $generated@@226 $generated@@227 $generated@@228 $generated@@225 $generated@@229)) (forall (($generated@@230 T@U) ) (!  (=> (and (or (not (= $generated@@230 $generated@@200)) (not true)) ($generated@@62 ($generated@@88 $generated@@226 $generated@@227 $generated@@228 $generated@@225 $generated@@229) ($generated@@50 $generated@@199 $generated@@230))) ($generated@@19 ($generated@@48 $generated@@15 ($generated@@201 $generated@@202 $generated@@203 ($generated@@201 $generated@@199 ($generated@@204 $generated@@202 $generated@@203) $generated@@228 $generated@@230) $generated))))
 :pattern ( ($generated@@62 ($generated@@88 $generated@@226 $generated@@227 $generated@@228 $generated@@225 $generated@@229) ($generated@@50 $generated@@199 $generated@@230)))
)))
 :pattern ( ($generated@@49 $generated@@226 $generated@@227 $generated@@228 $generated@@225 $generated@@229))
 :pattern ( ($generated@@88 $generated@@226 $generated@@227 $generated@@228 $generated@@225 $generated@@229))
))))
 :pattern ( ($generated@@114 $generated@@42 $generated@@225 ($generated@@75 $generated@@226 $generated@@227) $generated@@228))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@76 $generated@@233 ($generated@@75 $generated@@231 $generated@@232)) (and (= ($generated@@50 $generated@@42 ($generated@@48 $generated@@42 $generated@@233)) $generated@@233) ($generated@@30 $generated@@42 ($generated@@48 $generated@@42 $generated@@233) ($generated@@75 $generated@@231 $generated@@232))))
 :pattern ( ($generated@@76 $generated@@233 ($generated@@75 $generated@@231 $generated@@232)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> ($generated@@76 $generated@@236 ($generated@@119 $generated@@234 $generated@@235)) (and (= ($generated@@50 $generated@@42 ($generated@@48 $generated@@42 $generated@@236)) $generated@@236) ($generated@@30 $generated@@42 ($generated@@48 $generated@@42 $generated@@236) ($generated@@119 $generated@@234 $generated@@235))))
 :pattern ( ($generated@@76 $generated@@236 ($generated@@119 $generated@@234 $generated@@235)))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> ($generated@@76 $generated@@239 ($generated@@43 $generated@@237 $generated@@238)) (and (= ($generated@@50 $generated@@42 ($generated@@48 $generated@@42 $generated@@239)) $generated@@239) ($generated@@30 $generated@@42 ($generated@@48 $generated@@42 $generated@@239) ($generated@@43 $generated@@237 $generated@@238))))
 :pattern ( ($generated@@76 $generated@@239 ($generated@@43 $generated@@237 $generated@@238)))
)))
(assert (forall (($generated@@240 T@U) ) (! (< ($generated@@186 $generated@@240) ($generated@@186 ($generated@@110 $generated@@240)))
 :pattern ( ($generated@@110 $generated@@240))
)))
(assert  (and (forall (($generated@@244 T@T) ($generated@@245 T@T) ($generated@@246 T@T) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ) (! (= ($generated@@241 $generated@@244 $generated@@245 $generated@@246 ($generated@@243 $generated@@244 $generated@@245 $generated@@246 $generated@@248 $generated@@249 $generated@@250 $generated@@247) $generated@@249 $generated@@250) $generated@@247)
 :weight 0
)) (and (forall (($generated@@251 T@T) ($generated@@252 T@T) ($generated@@253 T@T) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ) (!  (or (= $generated@@256 $generated@@258) (= ($generated@@241 $generated@@251 $generated@@252 $generated@@253 ($generated@@243 $generated@@251 $generated@@252 $generated@@253 $generated@@255 $generated@@256 $generated@@257 $generated@@254) $generated@@258 $generated@@259) ($generated@@241 $generated@@251 $generated@@252 $generated@@253 $generated@@255 $generated@@258 $generated@@259)))
 :weight 0
)) (forall (($generated@@260 T@T) ($generated@@261 T@T) ($generated@@262 T@T) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (or (= $generated@@266 $generated@@268) (= ($generated@@241 $generated@@260 $generated@@261 $generated@@262 ($generated@@243 $generated@@260 $generated@@261 $generated@@262 $generated@@264 $generated@@265 $generated@@266 $generated@@263) $generated@@267 $generated@@268) ($generated@@241 $generated@@260 $generated@@261 $generated@@262 $generated@@264 $generated@@267 $generated@@268)))
 :weight 0
)))))
(assert (forall (($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 Bool) ($generated@@273 T@U) ($generated@@274 T@U) ) (! (= ($generated@@19 ($generated@@241 $generated@@199 $generated@@202 $generated@@15 ($generated@@242 $generated@@269 $generated@@270 $generated@@271 $generated@@272) $generated@@273 $generated@@274))  (=> (and (or (not (= $generated@@273 $generated@@269)) (not true)) ($generated@@19 ($generated@@48 $generated@@15 ($generated@@201 $generated@@202 $generated@@203 ($generated@@201 $generated@@199 ($generated@@204 $generated@@202 $generated@@203) $generated@@270 $generated@@273) $generated@@271)))) $generated@@272))
 :pattern ( ($generated@@241 $generated@@199 $generated@@202 $generated@@15 ($generated@@242 $generated@@269 $generated@@270 $generated@@271 $generated@@272) $generated@@273 $generated@@274))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ) (!  (=> (or ($generated@@41 $generated@@277 ($generated@@66 $generated@@31 $generated@@278)) (and (< 2 $generated@@37) (and (and ($generated@@40 $generated@@276) ($generated@@30 $generated@@42 $generated@@277 ($generated@@43 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@278 $generated@@33)))) (and (=> (not ($generated@@19 ($generated@@66 $generated@@15 ($generated@@18 ($generated@@44 ($generated@@66 $generated@@31 $generated@@278)))))) (let (($generated@@279 ($generated@@66 $generated@@31 ($generated@@45 ($generated@@66 $generated@@31 $generated@@278)))))
(let (($generated@@280 ($generated@@66 $generated@@31 ($generated@@46 ($generated@@66 $generated@@31 $generated@@278)))))
 (and (and ($generated@@47 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@276 $generated@@277 ($generated@@50 $generated@@31 $generated@@280)))) (=> (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@276 $generated@@277 ($generated@@50 $generated@@31 $generated@@280))) $generated@@52)) ($generated@@41 $generated@@277 $generated@@279))) (=> ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@276 $generated@@277 ($generated@@50 $generated@@31 $generated@@280))) $generated@@52) ($generated@@41 $generated@@277 $generated@@279)))))) (= ($generated@@38 ($generated@@39 $generated@@275) $generated@@277 ($generated@@66 $generated@@31 $generated@@278)) (ite ($generated@@44 ($generated@@66 $generated@@31 $generated@@278)) $generated@@53 (let (($generated@@281 ($generated@@66 $generated@@31 ($generated@@45 ($generated@@66 $generated@@31 $generated@@278)))))
(let (($generated@@282 ($generated@@66 $generated@@31 ($generated@@46 ($generated@@66 $generated@@31 $generated@@278)))))
(ite  (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@276 $generated@@277 ($generated@@50 $generated@@31 $generated@@282))) $generated@@52)) ($generated@@32 $generated@@282 ($generated@@38 ($generated@@39 $generated@@275) $generated@@277 $generated@@281)) ($generated@@38 ($generated@@39 $generated@@275) $generated@@277 $generated@@281))))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@275) $generated@@277 ($generated@@66 $generated@@31 $generated@@278)) ($generated@@40 $generated@@276))
))))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (= ($generated@@283 ($generated@@75 $generated@@285 $generated@@286)) $generated@@0) (= ($generated@@284 ($generated@@75 $generated@@285 $generated@@286)) $generated@@9))
 :pattern ( ($generated@@75 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (= ($generated@@283 ($generated@@119 $generated@@287 $generated@@288)) $generated@@1) (= ($generated@@284 ($generated@@119 $generated@@287 $generated@@288)) $generated@@10))
 :pattern ( ($generated@@119 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ) (!  (and (= ($generated@@283 ($generated@@43 $generated@@289 $generated@@290)) $generated@@2) (= ($generated@@284 ($generated@@43 $generated@@289 $generated@@290)) $generated@@11))
 :pattern ( ($generated@@43 $generated@@289 $generated@@290))
)))
(assert (forall (($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@293) (and ($generated@@76 $generated@@295 $generated@@291) ($generated@@30 $generated@@42 $generated@@294 ($generated@@75 $generated@@291 $generated@@292)))) ($generated@@90 ($generated@@88 $generated@@291 $generated@@292 $generated@@89 $generated@@294 $generated@@295) $generated@@63)) (= ($generated@@137 $generated@@291 $generated@@292 $generated@@89 $generated@@294 $generated@@295) ($generated@@137 $generated@@291 $generated@@292 $generated@@293 $generated@@294 $generated@@295)))
 :pattern ( ($generated@@137 $generated@@291 $generated@@292 $generated@@89 $generated@@294 $generated@@295) ($generated@@40 $generated@@293))
 :pattern ( ($generated@@137 $generated@@291 $generated@@292 $generated@@293 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ) (!  (=> (and ($generated@@40 $generated@@297) ($generated@@30 $generated@@31 $generated@@296 $generated@@34)) ($generated@@114 $generated@@31 $generated@@296 $generated@@34 $generated@@297))
 :pattern ( ($generated@@114 $generated@@31 $generated@@296 $generated@@34 $generated@@297))
)))
(assert (forall (($generated@@298 T@U) ($generated@@299 T@U) ) (!  (=> (and ($generated@@40 $generated@@299) ($generated@@30 $generated@@31 $generated@@298 $generated@@33)) ($generated@@114 $generated@@31 $generated@@298 $generated@@33 $generated@@299))
 :pattern ( ($generated@@114 $generated@@31 $generated@@298 $generated@@33 $generated@@299))
)))
(assert (= ($generated@@283 $generated@@34) $generated@@3))
(assert (= ($generated@@284 $generated@@34) $generated@@12))
(assert (= ($generated@@283 $generated@@33) $generated@@4))
(assert (= ($generated@@284 $generated@@33) $generated@@13))
(assert (= $generated@@52 ($generated@@66 $generated@@31 $generated@@52)))
(assert (= $generated@@53 ($generated@@66 $generated@@31 $generated@@53)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= ($generated@@90 $generated@@300 $generated@@301) (forall (($generated@@302 T@U) ) (! (= ($generated@@62 $generated@@300 $generated@@302) ($generated@@62 $generated@@301 $generated@@302))
 :pattern ( ($generated@@62 $generated@@300 $generated@@302))
 :pattern ( ($generated@@62 $generated@@301 $generated@@302))
)))
 :pattern ( ($generated@@90 $generated@@300 $generated@@301))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (and ($generated@@40 $generated@@304) (and ($generated@@98 $generated@@303) ($generated@@114 $generated@@31 $generated@@303 $generated@@34 $generated@@304))) ($generated@@114 $generated@@31 ($generated@@131 $generated@@303) $generated@@34 $generated@@304))
 :pattern ( ($generated@@114 $generated@@31 ($generated@@131 $generated@@303) $generated@@34 $generated@@304))
)))
(assert (forall (($generated@@305 T@U) ($generated@@306 T@U) ) (!  (=> (and ($generated@@40 $generated@@306) (and ($generated@@101 $generated@@305) ($generated@@114 $generated@@31 $generated@@305 $generated@@33 $generated@@306))) ($generated@@114 $generated@@31 ($generated@@46 $generated@@305) $generated@@34 $generated@@306))
 :pattern ( ($generated@@114 $generated@@31 ($generated@@46 $generated@@305) $generated@@34 $generated@@306))
)))
(assert (forall (($generated@@307 T@U) ($generated@@308 T@U) ) (!  (=> (and ($generated@@40 $generated@@308) (and ($generated@@101 $generated@@307) ($generated@@114 $generated@@31 $generated@@307 $generated@@33 $generated@@308))) ($generated@@114 $generated@@31 ($generated@@45 $generated@@307) $generated@@33 $generated@@308))
 :pattern ( ($generated@@114 $generated@@31 ($generated@@45 $generated@@307) $generated@@33 $generated@@308))
)))
(assert (forall (($generated@@309 T@U) ($generated@@310 T@U) ) (! (= ($generated@@32 ($generated@@66 $generated@@31 $generated@@309) ($generated@@66 $generated@@31 $generated@@310)) ($generated@@66 $generated@@31 ($generated@@32 $generated@@309 $generated@@310)))
 :pattern ( ($generated@@32 ($generated@@66 $generated@@31 $generated@@309) ($generated@@66 $generated@@31 $generated@@310)))
)))
(assert (forall (($generated@@311 T@U) ) (! (= ($generated@@110 ($generated@@66 $generated@@31 $generated@@311)) ($generated@@66 $generated@@31 ($generated@@110 $generated@@311)))
 :pattern ( ($generated@@110 ($generated@@66 $generated@@31 $generated@@311)))
)))
(assert (forall (($generated@@312 T@U) ($generated@@313 T@T) ) (! (= ($generated@@50 $generated@@313 ($generated@@66 $generated@@313 $generated@@312)) ($generated@@66 $generated@@203 ($generated@@50 $generated@@313 $generated@@312)))
 :pattern ( ($generated@@50 $generated@@313 ($generated@@66 $generated@@313 $generated@@312)))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (or ($generated@@41 $generated@@315 $generated@@316) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@42 $generated@@315 ($generated@@43 $generated@@34 $generated@@34)) ($generated@@30 $generated@@31 $generated@@316 $generated@@33)))) ($generated@@30 $generated@@31 ($generated@@38 $generated@@314 $generated@@315 $generated@@316) $generated@@33))
 :pattern ( ($generated@@38 $generated@@314 $generated@@315 $generated@@316))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@317 () T@U)
(declare-fun $generated@@318 () T@U)
(declare-fun $generated@@319 () T@U)
(declare-fun $generated@@320 () T@U)
(declare-fun $generated@@321 () T@U)
(declare-fun $generated@@322 () T@U)
(declare-fun $generated@@323 () T@U)
(declare-fun $generated@@324 () T@U)
(declare-fun $generated@@325 () T@U)
(declare-fun $generated@@326 () T@U)
(declare-fun $generated@@327 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@328  (=> (and (and ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@317 $generated@@318 ($generated@@50 $generated@@31 $generated@@319))) $generated@@52) ($generated@@114 $generated@@42 $generated@@318 ($generated@@43 $generated@@34 $generated@@34) $generated@@317)) (and ($generated@@114 $generated@@31 $generated@@320 $generated@@33 $generated@@317) (= (ControlFlow 0 7) (- 0 6)))) (< ($generated@@186 $generated@@320) ($generated@@186 $generated@@321)))))
(let (($generated@@329  (=> (and (and (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@317 $generated@@318 ($generated@@50 $generated@@31 $generated@@319))) $generated@@52)) ($generated@@114 $generated@@42 $generated@@318 ($generated@@43 $generated@@34 $generated@@34) $generated@@317)) (and ($generated@@114 $generated@@31 $generated@@320 $generated@@33 $generated@@317) (= (ControlFlow 0 5) (- 0 4)))) (< ($generated@@186 $generated@@320) ($generated@@186 $generated@@321)))))
(let (($generated@@330  (=> (= $generated@@321 ($generated@@32 $generated@@322 $generated@@323)) (=> (and (and (and ($generated@@30 $generated@@31 $generated@@322 $generated@@34) ($generated@@30 $generated@@31 $generated@@323 $generated@@33)) (and (= $generated@@324 $generated@@323) ($generated@@30 $generated@@31 $generated@@324 $generated@@33))) (and (and (= $generated@@320 $generated@@324) (= $generated@@325 $generated@@322)) (and ($generated@@30 $generated@@31 $generated@@325 $generated@@34) (= $generated@@319 $generated@@325)))) (and (=> (= (ControlFlow 0 8) 5) $generated@@329) (=> (= (ControlFlow 0 8) 7) $generated@@328))))))
(let (($generated@@331 true))
(let (($generated@@332  (=> (or (not (= $generated@@321 $generated@@53)) (not true)) (and (=> (= (ControlFlow 0 9) 8) $generated@@330) (=> (= (ControlFlow 0 9) 3) $generated@@331)))))
(let (($generated@@333 true))
(let (($generated@@334 true))
(let (($generated@@335  (=> (= $generated@@326 ($generated@@242 $generated@@200 $generated@@317 $generated false)) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@334) (=> (= (ControlFlow 0 10) 2) $generated@@333)) (=> (= (ControlFlow 0 10) 9) $generated@@332)))))
(let (($generated@@336  (=> (and ($generated@@40 $generated@@317) ($generated@@327 $generated@@317)) (=> (and (and ($generated@@30 $generated@@42 $generated@@318 ($generated@@43 $generated@@34 $generated@@34)) ($generated@@30 $generated@@31 $generated@@321 $generated@@33)) (and (= 2 $generated@@37) (= (ControlFlow 0 11) 10))) $generated@@335))))
$generated@@336))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
