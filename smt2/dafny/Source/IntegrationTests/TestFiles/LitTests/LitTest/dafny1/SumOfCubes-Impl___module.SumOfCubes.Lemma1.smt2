(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U Int Int) Int)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (Int Int) Bool)
(declare-fun $generated@@23 (Int) Int)
(declare-fun $generated@@24 (Int Int) Int)
(declare-fun $generated@@28 (T@U Int) Int)
(declare-fun $generated@@29 (Int) Bool)
(declare-fun $generated@@32 (T@U Int Int) Int)
(declare-fun $generated@@33 (Int Int) Bool)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@T T@T) T@T)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@U) Bool)
(declare-fun $generated@@75 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@105 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@25 T@U) ($generated@@26 Int) ($generated@@27 Int) ) (!  (=> (or ($generated@@22 $generated@@26 $generated@@27) (and (< 0 $generated@@19) (and (<= ($generated@@23 0) $generated@@26) (<= $generated@@26 $generated@@27)))) (and (=> (or (not (= $generated@@27 $generated@@26)) (not true)) ($generated@@22 (+ $generated@@26 1) $generated@@27)) (= ($generated@@20 ($generated@@21 $generated@@25) $generated@@26 $generated@@27) (ite (= $generated@@27 $generated@@26) 0 (+ ($generated@@24 ($generated@@24 $generated@@26 $generated@@26) $generated@@26) ($generated@@20 $generated@@25 (+ $generated@@26 1) $generated@@27))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@25) $generated@@26 $generated@@27))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@30 T@U) ($generated@@31 Int) ) (!  (=> (or ($generated@@29 ($generated@@23 $generated@@31)) (and (< 0 $generated@@19) (<= ($generated@@23 0) ($generated@@23 $generated@@31)))) (and (=> (or (not (= ($generated@@23 $generated@@31) ($generated@@23 0))) (not true)) ($generated@@29 ($generated@@23 (- $generated@@31 1)))) (= ($generated@@28 ($generated@@21 $generated@@30) ($generated@@23 $generated@@31)) (ite (= ($generated@@23 $generated@@31) ($generated@@23 0)) 0 (- (+ ($generated@@28 ($generated@@21 $generated@@30) ($generated@@23 (- $generated@@31 1))) $generated@@31) 1)))))
 :weight 3
 :pattern ( ($generated@@28 ($generated@@21 $generated@@30) ($generated@@23 $generated@@31)))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@34 T@U) ($generated@@35 Int) ($generated@@36 Int) ) (!  (=> (or ($generated@@33 $generated@@35 $generated@@36) (and (< 0 $generated@@19) (and (<= ($generated@@23 0) $generated@@35) (<= $generated@@35 $generated@@36)))) (and (=> (or (not (= $generated@@36 $generated@@35)) (not true)) ($generated@@33 $generated@@35 (- $generated@@36 1))) (= ($generated@@32 ($generated@@21 $generated@@34) $generated@@35 $generated@@36) (ite (= $generated@@36 $generated@@35) 0 (+ ($generated@@32 $generated@@34 $generated@@35 (- $generated@@36 1)) ($generated@@24 ($generated@@24 (- $generated@@36 1) (- $generated@@36 1)) (- $generated@@36 1)))))))
 :pattern ( ($generated@@32 ($generated@@21 $generated@@34) $generated@@35 $generated@@36))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@38 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@38 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@38 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@2 $generated@@39) 3)) (= ($generated@@2 $generated@@40) 4)) (= ($generated@@2 $generated@@41) 5)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@2 ($generated@@42 $generated@@58 $generated@@59)) 6))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@42 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@42 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@42 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@42 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> ($generated@@37 $generated@@64 $generated@@65) (forall (($generated@@66 T@U) ) (!  (=> ($generated@@7 ($generated@@43 $generated@@3 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@64 $generated@@66) $generated@@1))) ($generated@@7 ($generated@@43 $generated@@3 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@65 $generated@@66) $generated@@1))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@65 $generated@@66) $generated@@1))
)))
 :pattern ( ($generated@@37 $generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@23 $generated@@67) $generated@@67)
 :pattern ( ($generated@@23 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@43 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@43 $generated@@73 $generated@@72))
)))
(assert ($generated@@74 $generated@@1))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (!  (=> ($generated@@37 $generated@@76 $generated@@77) (=> ($generated@@75 $generated@@80 $generated@@78 $generated@@79 $generated@@76) ($generated@@75 $generated@@80 $generated@@78 $generated@@79 $generated@@77)))
 :pattern ( ($generated@@37 $generated@@76 $generated@@77) ($generated@@75 $generated@@80 $generated@@78 $generated@@79 $generated@@76))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@81 $generated@@82 $generated@@83) (and ($generated@@37 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (!  (=> (not ($generated@@74 $generated@@85)) (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@82 $generated@@84) $generated@@85) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@85)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@83 $generated@@84) $generated@@85))
))))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 Int) ) (! (= ($generated@@20 ($generated@@21 $generated@@86) $generated@@87 $generated@@88) ($generated@@20 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 Int) ) (! (= ($generated@@32 ($generated@@21 $generated@@89) $generated@@90 $generated@@91) ($generated@@32 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@32 ($generated@@21 $generated@@89) $generated@@90 $generated@@91))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@92 T@U) ($generated@@93 Int) ) (!  (=> (or ($generated@@29 $generated@@93) (and (< 0 $generated@@19) (<= ($generated@@23 0) $generated@@93))) (and (=> (or (not (= $generated@@93 ($generated@@23 0))) (not true)) ($generated@@29 (- $generated@@93 1))) (= ($generated@@28 ($generated@@21 $generated@@92) $generated@@93) (ite (= $generated@@93 ($generated@@23 0)) 0 (- (+ ($generated@@28 $generated@@92 (- $generated@@93 1)) $generated@@93) 1)))))
 :pattern ( ($generated@@28 ($generated@@21 $generated@@92) $generated@@93))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> (or (not (= $generated@@94 $generated@@96)) (not true)) (=> (and ($generated@@37 $generated@@94 $generated@@95) ($generated@@37 $generated@@95 $generated@@96)) ($generated@@37 $generated@@94 $generated@@96)))
 :pattern ( ($generated@@37 $generated@@94 $generated@@95) ($generated@@37 $generated@@95 $generated@@96))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@97 T@U) ($generated@@98 Int) ($generated@@99 Int) ) (!  (=> (or ($generated@@22 ($generated@@23 $generated@@98) ($generated@@23 $generated@@99)) (and (< 0 $generated@@19) (and (<= ($generated@@23 0) ($generated@@23 $generated@@98)) (<= ($generated@@23 $generated@@98) ($generated@@23 $generated@@99))))) (and (=> (or (not (= ($generated@@23 $generated@@99) ($generated@@23 $generated@@98))) (not true)) ($generated@@22 ($generated@@23 (+ $generated@@98 1)) ($generated@@23 $generated@@99))) (= ($generated@@20 ($generated@@21 $generated@@97) ($generated@@23 $generated@@98) ($generated@@23 $generated@@99)) (ite (= ($generated@@23 $generated@@99) ($generated@@23 $generated@@98)) 0 (+ ($generated@@24 ($generated@@23 ($generated@@24 ($generated@@23 $generated@@98) ($generated@@23 $generated@@98))) ($generated@@23 $generated@@98)) ($generated@@20 ($generated@@21 $generated@@97) ($generated@@23 (+ $generated@@98 1)) ($generated@@23 $generated@@99)))))))
 :weight 3
 :pattern ( ($generated@@20 ($generated@@21 $generated@@97) ($generated@@23 $generated@@98) ($generated@@23 $generated@@99)))
))))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@43 $generated@@101 ($generated@@71 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@71 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 Int) ) (! (= ($generated@@28 ($generated@@21 $generated@@102) $generated@@103) ($generated@@28 $generated@@102 $generated@@103))
 :pattern ( ($generated@@28 ($generated@@21 $generated@@102) $generated@@103))
)))
(assert  (and (forall (($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@104 $generated@@107 $generated@@108 $generated@@109 ($generated@@106 $generated@@107 $generated@@108 $generated@@109 $generated@@111 $generated@@112 $generated@@113 $generated@@110) $generated@@112 $generated@@113) $generated@@110)
 :weight 0
)) (and (forall (($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@104 $generated@@114 $generated@@115 $generated@@116 ($generated@@106 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@119 $generated@@120 $generated@@117) $generated@@121 $generated@@122) ($generated@@104 $generated@@114 $generated@@115 $generated@@116 $generated@@118 $generated@@121 $generated@@122)))
 :weight 0
)) (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@129 $generated@@131) (= ($generated@@104 $generated@@123 $generated@@124 $generated@@125 ($generated@@106 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@104 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 Bool) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@7 ($generated@@104 $generated@@41 $generated@@39 $generated@@3 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))  (=> (and (or (not (= $generated@@136 $generated@@132)) (not true)) ($generated@@7 ($generated@@43 $generated@@3 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@133 $generated@@136) $generated@@134)))) $generated@@135))
 :pattern ( ($generated@@104 $generated@@41 $generated@@39 $generated@@3 ($generated@@105 $generated@@132 $generated@@133 $generated@@134 $generated@@135) $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 Int) ($generated@@139 Int) ) (! (= ($generated@@24 $generated@@138 $generated@@139) (* $generated@@138 $generated@@139))
 :pattern ( ($generated@@24 $generated@@138 $generated@@139))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@140 T@U) ($generated@@141 Int) ($generated@@142 Int) ) (!  (=> (or ($generated@@33 ($generated@@23 $generated@@141) ($generated@@23 $generated@@142)) (and (< 0 $generated@@19) (and (<= ($generated@@23 0) ($generated@@23 $generated@@141)) (<= ($generated@@23 $generated@@141) ($generated@@23 $generated@@142))))) (and (=> (or (not (= ($generated@@23 $generated@@142) ($generated@@23 $generated@@141))) (not true)) ($generated@@33 ($generated@@23 $generated@@141) ($generated@@23 (- $generated@@142 1)))) (= ($generated@@32 ($generated@@21 $generated@@140) ($generated@@23 $generated@@141) ($generated@@23 $generated@@142)) (ite (= ($generated@@23 $generated@@142) ($generated@@23 $generated@@141)) 0 (+ ($generated@@32 ($generated@@21 $generated@@140) ($generated@@23 $generated@@141) ($generated@@23 (- $generated@@142 1))) ($generated@@24 ($generated@@23 ($generated@@24 ($generated@@23 (- $generated@@142 1)) ($generated@@23 (- $generated@@142 1)))) ($generated@@23 (- $generated@@142 1))))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@21 $generated@@140) ($generated@@23 $generated@@141) ($generated@@23 $generated@@142)))
))))
(assert (forall (($generated@@143 Int) ) (! (= ($generated@@71 $generated@@4 ($generated@@8 ($generated@@23 $generated@@143))) ($generated@@68 $generated@@40 ($generated@@71 $generated@@4 ($generated@@8 $generated@@143))))
 :pattern ( ($generated@@71 $generated@@4 ($generated@@8 ($generated@@23 $generated@@143))))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@71 $generated@@145 ($generated@@68 $generated@@145 $generated@@144)) ($generated@@68 $generated@@40 ($generated@@71 $generated@@145 $generated@@144)))
 :pattern ( ($generated@@71 $generated@@145 ($generated@@68 $generated@@145 $generated@@144)))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! ($generated@@75 $generated@@4 $generated@@147 $generated $generated@@146)
 :pattern ( ($generated@@75 $generated@@4 $generated@@147 $generated $generated@@146))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 (T@U) Bool)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Bool)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Int)
(declare-fun $generated@@163 () T@U)
(declare-fun $generated@@164 () T@U)
(declare-fun $generated@@165 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 24) (let (($generated@@166  (=> (= (ControlFlow 0 14) (- 0 13)) (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@148)) ($generated@@23 0) $generated@@149) ($generated@@24 ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@149) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@149))))))
(let (($generated@@167  (=> (and (<= $generated@@149 $generated@@150) (= $generated@@151 ($generated@@23 0))) (and (=> (= (ControlFlow 0 15) (- 0 17)) (<= ($generated@@23 0) $generated@@151)) (=> (<= ($generated@@23 0) $generated@@151) (and (=> (= (ControlFlow 0 15) (- 0 16)) (<= $generated@@151 $generated@@149)) (=> (<= $generated@@151 $generated@@149) (=> (and (and (and ($generated@@152 $generated@@153) ($generated@@154 $generated@@153)) (and ($generated@@22 $generated@@151 $generated@@149) ($generated@@33 $generated@@151 $generated@@149))) (and (and (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@151 $generated@@149) ($generated@@32 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@151 $generated@@149)) (forall (($generated@@168 T@U) ) (!  (=> (and (or (not (= $generated@@168 $generated@@155)) (not true)) ($generated@@7 ($generated@@43 $generated@@3 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@156 $generated@@168) $generated@@1)))) (= ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@153 $generated@@168) ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@156 $generated@@168)))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@153 $generated@@168))
))) (and ($generated@@81 $generated@@156 $generated@@153) (= (ControlFlow 0 15) 14)))) $generated@@166))))))))
(let (($generated@@169  (=> (and (< $generated@@150 $generated@@149) (= $generated@@157 (- $generated@@149 $generated@@150))) (and (=> (= (ControlFlow 0 8) (- 0 12)) (<= ($generated@@23 0) $generated@@150)) (=> (<= ($generated@@23 0) $generated@@150) (=> (and (and (and ($generated@@152 $generated@@158) ($generated@@154 $generated@@158)) ($generated@@29 $generated@@150)) (and (and (= ($generated@@24 ($generated@@23 2) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@150)) ($generated@@24 $generated@@150 (- $generated@@150 1))) (forall (($generated@@170 T@U) ) (!  (=> (and (or (not (= $generated@@170 $generated@@155)) (not true)) ($generated@@7 ($generated@@43 $generated@@3 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@156 $generated@@170) $generated@@1)))) (= ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@158 $generated@@170) ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@156 $generated@@170)))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@158 $generated@@170))
))) (and ($generated@@81 $generated@@156 $generated@@158) (= $generated@@159 (+ $generated@@150 1))))) (and (=> (= (ControlFlow 0 8) (- 0 11)) (or (<= 0 $generated@@157) (= (- $generated@@149 $generated@@159) $generated@@157))) (=> (or (<= 0 $generated@@157) (= (- $generated@@149 $generated@@159) $generated@@157)) (and (=> (= (ControlFlow 0 8) (- 0 10)) (< (- $generated@@149 $generated@@159) $generated@@157)) (=> (< (- $generated@@149 $generated@@159) $generated@@157) (=> (=> (<= $generated@@159 $generated@@149) (and ($generated@@33 ($generated@@23 0) $generated@@159) (and ($generated@@29 $generated@@159) ($generated@@29 $generated@@159)))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (=> $generated@@160 (<= $generated@@159 $generated@@149))) (=> (=> $generated@@160 (<= $generated@@159 $generated@@149)) (=> (= (ControlFlow 0 8) (- 0 7)) (=> $generated@@160 (= ($generated@@32 ($generated@@21 ($generated@@21 $generated@@148)) ($generated@@23 0) $generated@@159) ($generated@@24 ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@159) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@159))))))))))))))))))
(let (($generated@@171  (=> $generated@@160 (and (=> (= (ControlFlow 0 18) 15) $generated@@167) (=> (= (ControlFlow 0 18) 8) $generated@@169)))))
(let (($generated@@172  (=> (not $generated@@160) (=> (and (and (<= $generated@@150 $generated@@149) (= $generated@@161 ($generated@@23 0))) (and ($generated@@75 $generated@@4 ($generated@@8 $generated@@161) $generated $generated@@156) ($generated@@75 $generated@@4 ($generated@@8 $generated@@150) $generated $generated@@156))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (<= ($generated@@23 0) $generated@@161)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (<= $generated@@161 $generated@@150)) (=> (and ($generated@@33 ($generated@@23 0) $generated@@150) ($generated@@75 $generated@@4 ($generated@@8 $generated@@150) $generated $generated@@156)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (<= ($generated@@23 0) $generated@@150)) (=> ($generated@@29 $generated@@150) (=> (and ($generated@@75 $generated@@4 ($generated@@8 $generated@@150) $generated $generated@@156) (= (ControlFlow 0 3) (- 0 2))) (<= ($generated@@23 0) $generated@@150)))))))))))
(let (($generated@@173  (and (=> (= (ControlFlow 0 19) 3) $generated@@172) (=> (= (ControlFlow 0 19) 18) $generated@@171))))
(let (($generated@@174 true))
(let (($generated@@175  (=> (and ($generated@@152 $generated@@156) ($generated@@154 $generated@@156)) (=> (and (and (and (and (and (not false) (<= 0 $generated@@150)) (<= 0 $generated@@162)) (=> $generated@@160 (<= $generated@@150 $generated@@149))) (and (=> $generated@@160 (and ($generated@@33 ($generated@@23 0) $generated@@150) (and ($generated@@29 $generated@@150) ($generated@@29 $generated@@150)))) (=> $generated@@160 (= ($generated@@32 ($generated@@21 ($generated@@21 $generated@@148)) ($generated@@23 0) $generated@@150) ($generated@@24 ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@150) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@150)))))) (and (and (forall (($generated@@176 T@U) ) (!  (=> (and (or (not (= $generated@@176 $generated@@155)) (not true)) ($generated@@7 ($generated@@43 $generated@@3 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@163 $generated@@176) $generated@@1)))) (= ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@156 $generated@@176) ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@163 $generated@@176)))
 :pattern ( ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@156 $generated@@176))
)) ($generated@@81 $generated@@163 $generated@@156)) (and (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and (or (not (= $generated@@177 $generated@@155)) (not true)) ($generated@@7 ($generated@@43 $generated@@3 ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@163 $generated@@177) $generated@@1)))) (or (= ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@156 $generated@@177) $generated@@178) ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@163 $generated@@177) $generated@@178)) ($generated@@7 ($generated@@104 $generated@@41 $generated@@39 $generated@@3 $generated@@164 $generated@@177 $generated@@178))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40 ($generated@@38 $generated@@41 ($generated@@42 $generated@@39 $generated@@40) $generated@@156 $generated@@177) $generated@@178))
)) (<= (- $generated@@149 $generated@@150) $generated@@162)))) (and (=> (= (ControlFlow 0 20) 1) $generated@@174) (=> (= (ControlFlow 0 20) 19) $generated@@173))))))
(let (($generated@@179  (=> (= $generated@@164 ($generated@@105 $generated@@155 $generated@@163 $generated@@1 false)) (=> (and (= $generated@@165 ($generated@@23 0)) (= $generated@@162 (- $generated@@149 $generated@@165))) (and (=> (= (ControlFlow 0 21) (- 0 23)) (=> $generated@@160 (<= $generated@@165 $generated@@149))) (=> (=> $generated@@160 (<= $generated@@165 $generated@@149)) (and (=> (= (ControlFlow 0 21) (- 0 22)) (=> $generated@@160 (= ($generated@@32 ($generated@@21 ($generated@@21 $generated@@148)) ($generated@@23 0) $generated@@165) ($generated@@24 ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@165) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@165))))) (=> (=> $generated@@160 (= ($generated@@32 ($generated@@21 ($generated@@21 $generated@@148)) ($generated@@23 0) $generated@@165) ($generated@@24 ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@165) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@148)) $generated@@165)))) (=> (= (ControlFlow 0 21) 20) $generated@@175)))))))))
(let (($generated@@180  (=> (and (and (and ($generated@@152 $generated@@163) ($generated@@154 $generated@@163)) (= 2 $generated@@19)) (and (<= ($generated@@23 0) $generated@@149) (= (ControlFlow 0 24) 21))) $generated@@179)))
$generated@@180)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
