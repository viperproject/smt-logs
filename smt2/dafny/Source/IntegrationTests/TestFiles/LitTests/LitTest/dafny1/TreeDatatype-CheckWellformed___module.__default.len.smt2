(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U T@U T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 (Int) Int)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@U T@U T@U) Bool)
(declare-fun $generated@@65 (T@U) T@U)
(declare-fun $generated@@75 (T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@85 () Int)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) Int)
(declare-fun $generated@@93 (T@U) Int)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 () T@T)
(declare-fun $generated@@104 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@105 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@106 () T@T)
(declare-fun $generated@@107 (T@T T@T) T@T)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@111 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (! (= ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27) ($generated@@23 $generated@@25 $generated@@26 $generated@@27))
 :pattern ( ($generated@@23 $generated@@25 ($generated@@24 $generated@@26) $generated@@27))
)))
(assert (= ($generated@@28 $generated@@29) $generated@@3))
(assert (= ($generated@@6 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> ($generated@@33 $generated@@35) ($generated@@30 $generated@@31 $generated@@29 ($generated@@32 $generated@@34) $generated@@35))
 :pattern ( ($generated@@30 $generated@@31 $generated@@29 ($generated@@32 $generated@@34) $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ) (! ($generated@@36 $generated@@31 $generated@@29 ($generated@@32 $generated@@37))
 :pattern ( ($generated@@36 $generated@@31 $generated@@29 ($generated@@32 $generated@@37)))
)))
(assert (forall (($generated@@39 Int) ) (! (= ($generated@@38 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@T) ) (! (= ($generated@@40 $generated@@42 $generated@@41) $generated@@41)
 :pattern ( ($generated@@40 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@31 ($generated@@43 $generated@@46 $generated@@47) ($generated@@32 $generated@@45))  (and ($generated@@44 $generated@@46 $generated@@45) ($generated@@36 $generated@@31 $generated@@47 ($generated@@32 $generated@@45))))
 :pattern ( ($generated@@36 $generated@@31 ($generated@@43 $generated@@46 $generated@@47) ($generated@@32 $generated@@45)))
)))
(assert (forall (($generated@@49 T@U) ) (! (= ($generated@@48 $generated@@49) (= ($generated@@28 $generated@@49) $generated@@3))
 :pattern ( ($generated@@48 $generated@@49))
)))
(assert (forall (($generated@@51 T@U) ) (! (= ($generated@@50 $generated@@51) (= ($generated@@28 $generated@@51) $generated@@4))
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 ($generated@@52 $generated@@55 $generated@@54)) $generated@@54)
 :pattern ( ($generated@@52 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (!  (=> ($generated@@50 $generated@@56) (exists (($generated@@57 T@U) ($generated@@58 T@U) ) (= $generated@@56 ($generated@@43 $generated@@57 $generated@@58))))
 :pattern ( ($generated@@50 $generated@@56))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@48 $generated@@59) (= $generated@@59 $generated@@29))
 :pattern ( ($generated@@48 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@60 ($generated@@53 $generated@@64 $generated@@61) $generated@@62 $generated@@63) ($generated@@30 $generated@@64 $generated@@61 $generated@@62 $generated@@63))
 :pattern ( ($generated@@60 ($generated@@53 $generated@@64 $generated@@61) $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (!  (and (= ($generated@@22 ($generated@@32 $generated@@66)) $generated@@2) (= ($generated@@65 ($generated@@32 $generated@@66)) $generated@@5))
 :pattern ( ($generated@@32 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@36 $generated@@31 $generated@@68 ($generated@@32 $generated@@67)) (or ($generated@@48 $generated@@68) ($generated@@50 $generated@@68)))
 :pattern ( ($generated@@50 $generated@@68) ($generated@@36 $generated@@31 $generated@@68 ($generated@@32 $generated@@67)))
 :pattern ( ($generated@@48 $generated@@68) ($generated@@36 $generated@@31 $generated@@68 ($generated@@32 $generated@@67)))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@44 $generated@@69 $generated) (and (= ($generated@@53 $generated@@8 ($generated@@52 $generated@@8 $generated@@69)) $generated@@69) ($generated@@36 $generated@@8 ($generated@@52 $generated@@8 $generated@@69) $generated)))
 :pattern ( ($generated@@44 $generated@@69 $generated))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@44 ($generated@@53 $generated@@72 $generated@@70) $generated@@71) ($generated@@36 $generated@@72 $generated@@70 $generated@@71))
 :pattern ( ($generated@@44 ($generated@@53 $generated@@72 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@28 ($generated@@43 $generated@@73 $generated@@74)) $generated@@4)
 :pattern ( ($generated@@43 $generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 ($generated@@43 $generated@@76 $generated@@77)) $generated@@76)
 :pattern ( ($generated@@43 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 ($generated@@43 $generated@@79 $generated@@80)) $generated@@80)
 :pattern ( ($generated@@43 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (! (= ($generated@@81 ($generated@@32 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@32 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@52 $generated@@84 ($generated@@53 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@53 $generated@@84 $generated@@83))
)))
(assert  (=> (<= 1 $generated@@85) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or ($generated@@86 $generated@@87 $generated@@89) (and (< 1 $generated@@85) ($generated@@36 $generated@@31 $generated@@89 ($generated@@32 $generated@@87)))) (and (=> (not ($generated@@48 $generated@@89)) (let (($generated@@90 ($generated@@78 $generated@@89)))
($generated@@86 $generated@@87 $generated@@90))) (= ($generated@@23 $generated@@87 ($generated@@24 $generated@@88) $generated@@89) (ite ($generated@@48 $generated@@89) 0 (let (($generated@@91 ($generated@@78 $generated@@89)))
(+ 1 ($generated@@23 $generated@@87 $generated@@88 $generated@@91)))))))
 :pattern ( ($generated@@23 $generated@@87 ($generated@@24 $generated@@88) $generated@@89))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (< ($generated@@92 $generated@@94) ($generated@@93 ($generated@@43 $generated@@94 $generated@@95)))
 :pattern ( ($generated@@43 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (< ($generated@@93 $generated@@97) ($generated@@93 ($generated@@43 $generated@@96 $generated@@97)))
 :pattern ( ($generated@@43 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and ($generated@@33 $generated@@100) (and ($generated@@50 $generated@@98) ($generated@@30 $generated@@31 $generated@@98 ($generated@@32 $generated@@99) $generated@@100))) ($generated@@60 ($generated@@75 $generated@@98) $generated@@99 $generated@@100))
 :pattern ( ($generated@@60 ($generated@@75 $generated@@98) $generated@@99 $generated@@100))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (! (= ($generated@@101 $generated@@112 $generated@@113 $generated@@114 ($generated@@108 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@117 $generated@@118) $generated@@115)
 :weight 0
)) (and (forall (($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@101 $generated@@119 $generated@@120 $generated@@121 ($generated@@108 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@125 $generated@@122) $generated@@126 $generated@@127) ($generated@@101 $generated@@119 $generated@@120 $generated@@121 $generated@@123 $generated@@126 $generated@@127)))
 :weight 0
)) (forall (($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@101 $generated@@128 $generated@@129 $generated@@130 ($generated@@108 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@133 $generated@@134 $generated@@131) $generated@@135 $generated@@136) ($generated@@101 $generated@@128 $generated@@129 $generated@@130 $generated@@132 $generated@@135 $generated@@136)))
 :weight 0
)))) (= ($generated@@6 $generated@@102) 4)) (= ($generated@@6 $generated@@103) 5)) (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@105 $generated@@137 $generated@@138 ($generated@@109 $generated@@137 $generated@@138 $generated@@140 $generated@@141 $generated@@139) $generated@@141) $generated@@139)
 :weight 0
))) (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@146 $generated@@147) (= ($generated@@105 $generated@@142 $generated@@143 ($generated@@109 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@144) $generated@@147) ($generated@@105 $generated@@142 $generated@@143 $generated@@145 $generated@@147)))
 :weight 0
))) (= ($generated@@6 $generated@@106) 6)) (forall (($generated@@148 T@T) ($generated@@149 T@T) ) (= ($generated@@6 ($generated@@107 $generated@@148 $generated@@149)) 7))) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (! (= ($generated@@110 ($generated@@107 $generated@@150 $generated@@151)) $generated@@150)
 :pattern ( ($generated@@107 $generated@@150 $generated@@151))
))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@111 ($generated@@107 $generated@@152 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@107 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 Bool) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@11 ($generated@@101 $generated@@102 $generated@@103 $generated@@7 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))  (=> (and (or (not (= $generated@@158 $generated@@154)) (not true)) ($generated@@11 ($generated@@52 $generated@@7 ($generated@@105 $generated@@103 $generated@@106 ($generated@@105 $generated@@102 ($generated@@107 $generated@@103 $generated@@106) $generated@@155 $generated@@158) $generated@@156)))) $generated@@157))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103 $generated@@7 ($generated@@104 $generated@@154 $generated@@155 $generated@@156 $generated@@157) $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@92 ($generated@@53 $generated@@31 $generated@@160)) ($generated@@93 $generated@@160))
 :pattern ( ($generated@@92 ($generated@@53 $generated@@31 $generated@@160)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@44 $generated@@162 ($generated@@32 $generated@@161)) (and (= ($generated@@53 $generated@@31 ($generated@@52 $generated@@31 $generated@@162)) $generated@@162) ($generated@@36 $generated@@31 ($generated@@52 $generated@@31 $generated@@162) ($generated@@32 $generated@@161))))
 :pattern ( ($generated@@44 $generated@@162 ($generated@@32 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (and ($generated@@33 $generated@@165) (and ($generated@@50 $generated@@163) ($generated@@30 $generated@@31 $generated@@163 ($generated@@32 $generated@@164) $generated@@165))) ($generated@@30 $generated@@31 ($generated@@78 $generated@@163) ($generated@@32 $generated@@164) $generated@@165))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@78 $generated@@163) ($generated@@32 $generated@@164) $generated@@165))
)))
(assert (= $generated@@29 ($generated@@40 $generated@@31 $generated@@29)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@43 ($generated@@40 $generated@@106 $generated@@166) ($generated@@40 $generated@@31 $generated@@167)) ($generated@@40 $generated@@31 ($generated@@43 $generated@@166 $generated@@167)))
 :pattern ( ($generated@@43 ($generated@@40 $generated@@106 $generated@@166) ($generated@@40 $generated@@31 $generated@@167)))
)))
(assert (forall (($generated@@168 Int) ) (! (= ($generated@@53 $generated@@8 ($generated@@12 ($generated@@38 $generated@@168))) ($generated@@40 $generated@@106 ($generated@@53 $generated@@8 ($generated@@12 $generated@@168))))
 :pattern ( ($generated@@53 $generated@@8 ($generated@@12 ($generated@@38 $generated@@168))))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@T) ) (! (= ($generated@@53 $generated@@170 ($generated@@40 $generated@@170 $generated@@169)) ($generated@@40 $generated@@106 ($generated@@53 $generated@@170 $generated@@169)))
 :pattern ( ($generated@@53 $generated@@170 ($generated@@40 $generated@@170 $generated@@169)))
)))
(assert  (=> (<= 1 $generated@@85) (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (or ($generated@@86 $generated@@171 ($generated@@40 $generated@@31 $generated@@173)) (and (< 1 $generated@@85) ($generated@@36 $generated@@31 $generated@@173 ($generated@@32 $generated@@171)))) (and (=> (not ($generated@@11 ($generated@@40 $generated@@7 ($generated@@10 ($generated@@48 ($generated@@40 $generated@@31 $generated@@173)))))) (let (($generated@@174 ($generated@@40 $generated@@31 ($generated@@78 ($generated@@40 $generated@@31 $generated@@173)))))
($generated@@86 $generated@@171 $generated@@174))) (= ($generated@@23 $generated@@171 ($generated@@24 $generated@@172) ($generated@@40 $generated@@31 $generated@@173)) (ite ($generated@@48 ($generated@@40 $generated@@31 $generated@@173)) 0 (let (($generated@@175 ($generated@@40 $generated@@31 ($generated@@78 ($generated@@40 $generated@@31 $generated@@173)))))
($generated@@38 (+ 1 ($generated@@23 $generated@@171 ($generated@@24 $generated@@172) $generated@@175))))))))
 :weight 3
 :pattern ( ($generated@@23 $generated@@171 ($generated@@24 $generated@@172) ($generated@@40 $generated@@31 $generated@@173)))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! ($generated@@30 $generated@@8 $generated@@177 $generated $generated@@176)
 :pattern ( ($generated@@30 $generated@@8 $generated@@177 $generated $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@33 $generated@@181) (= ($generated@@30 $generated@@31 ($generated@@43 $generated@@179 $generated@@180) ($generated@@32 $generated@@178) $generated@@181)  (and ($generated@@60 $generated@@179 $generated@@178 $generated@@181) ($generated@@30 $generated@@31 $generated@@180 ($generated@@32 $generated@@178) $generated@@181))))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@43 $generated@@179 $generated@@180) ($generated@@32 $generated@@178) $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ) (! ($generated@@36 $generated@@8 $generated@@182 $generated)
 :pattern ( ($generated@@36 $generated@@8 $generated@@182 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@195 true))
(let (($generated@@196  (=> (= $generated@@183 ($generated@@43 $generated@@184 $generated@@185)) (=> (and ($generated@@44 $generated@@184 $generated@@186) ($generated@@36 $generated@@31 $generated@@185 ($generated@@32 $generated@@186))) (=> (and (and (and (= $generated@@187 $generated@@185) ($generated@@36 $generated@@31 $generated@@187 ($generated@@32 $generated@@186))) (and (= $generated@@188 $generated@@187) (= $generated@@189 $generated@@184))) (and (and ($generated@@44 $generated@@189 $generated@@186) (= $generated@@190 $generated@@189)) (and ($generated@@30 $generated@@31 $generated@@188 ($generated@@32 $generated@@186) $generated@@191) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@93 $generated@@188) ($generated@@93 $generated@@183)))))))
(let (($generated@@197  (=> (or (not (= $generated@@183 $generated@@29)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@196) (=> (= (ControlFlow 0 6) 5) $generated@@195)))))
(let (($generated@@198 true))
(let (($generated@@199 true))
(let (($generated@@200  (=> (= $generated@@192 ($generated@@104 $generated@@193 $generated@@191 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@199) (=> (= (ControlFlow 0 7) 2) $generated@@198)) (=> (= (ControlFlow 0 7) 6) $generated@@197)))))
(let (($generated@@201  (=> (and (and (and ($generated@@33 $generated@@191) ($generated@@194 $generated@@191)) ($generated@@36 $generated@@31 $generated@@183 ($generated@@32 $generated@@186))) (and (= 1 $generated@@85) (= (ControlFlow 0 8) 7))) $generated@@200)))
$generated@@201))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
