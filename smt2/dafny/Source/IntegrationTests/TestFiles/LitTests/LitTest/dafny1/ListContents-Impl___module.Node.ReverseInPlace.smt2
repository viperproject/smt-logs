(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TagSet () T@U)
(declare-fun TagSeq () T@U)
(declare-fun alloc () T@U)
(declare-fun allocName () T@U)
(declare-fun class._module.Node? () T@U)
(declare-fun Tagclass._module.Node? () T@U)
(declare-fun Tagclass._module.Node () T@U)
(declare-fun tytagFamily$Node () T@U)
(declare-fun field$List () T@U)
(declare-fun field$Repr () T@U)
(declare-fun field$data () T@U)
(declare-fun field$next () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun FDim (T@U) Int)
(declare-fun DeclName (T@U) T@U)
(declare-fun |Set#UnionOne| (T@U T@U) T@U)
(declare-fun |Set#IsMember| (T@U T@U) Bool)
(declare-fun MapType0Select (T@T T@T T@U T@U) T@U)
(declare-fun FieldType () T@T)
(declare-fun BoxType () T@T)
(declare-fun refType () T@T)
(declare-fun MapType0Type (T@T T@T) T@T)
(declare-fun _module.Node.data () T@U)
(declare-fun Tclass._module.Node? (T@U) T@U)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun null () T@U)
(declare-fun dtype (T@U) T@U)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun MapType0Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0TypeInv1 (T@T) T@T)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun |Set#Union| (T@U T@U) T@U)
(declare-fun |Set#Difference| (T@U T@U) T@U)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun Tclass._module.Node (T@U) T@U)
(declare-fun |Set#Empty| () T@U)
(declare-fun |Seq#Length| (T@U) Int)
(declare-fun |Seq#Empty| () T@U)
(declare-fun |Seq#Drop| (T@U Int) T@U)
(declare-fun |Seq#Build| (T@U T@U) T@U)
(declare-fun |Seq#Take| (T@U Int) T@U)
(declare-fun |Seq#Append| (T@U T@U) T@U)
(declare-fun _module.Node.List () T@U)
(declare-fun FieldOfDecl (T@U T@U) T@U)
(declare-fun $IsGhostField (T@U) Bool)
(declare-fun _module.Node.Repr () T@U)
(declare-fun _module.Node.next () T@U)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun LitInt (Int) Int)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun SeqType () T@T)
(declare-fun TSeq (T@U) T@U)
(declare-fun |Set#Subset| (T@U T@U) Bool)
(declare-fun |Seq#Index| (T@U Int) T@U)
(declare-fun |Seq#Equal| (T@U T@U) Bool)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun |Set#Disjoint| (T@U T@U) Bool)
(declare-fun SetType () T@T)
(declare-fun TSet (T@U) T@U)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun _module.Node.Valid (T@U T@U T@U T@U) Bool)
(declare-fun Tag (T@U) T@U)
(declare-fun TagFamily (T@U) T@U)
(declare-fun $FunctionContextHeight () Int)
(declare-fun $LS (T@U) T@U)
(declare-fun |_module.Node.Valid#canCall| (T@U T@U T@U) Bool)
(declare-fun DeclType (T@U) T@U)
(declare-fun Inv0_TSet (T@U) T@U)
(declare-fun Inv0_TSeq (T@U) T@U)
(declare-fun Tclass._module.Node?_0 (T@U) T@U)
(declare-fun Tclass._module.Node_0 (T@U) T@U)
(declare-fun |Seq#Build_inv0| (T@U) T@U)
(declare-fun |Seq#Build_inv1| (T@U) T@U)
(declare-fun MapType1Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun |lambda#8| (T@U T@U T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TagSet TagSeq alloc allocName class._module.Node? Tagclass._module.Node? Tagclass._module.Node tytagFamily$Node field$List field$Repr field$data field$next)
)
(assert (= (FDim alloc) 0))
(assert (= (DeclName alloc) allocName))
(assert (forall ((a T@U) (x@@2 T@U) ) (! (|Set#IsMember| (|Set#UnionOne| a x@@2) x@@2)
 :pattern ( (|Set#UnionOne| a x@@2))
)))
(assert  (and (and (and (and (and (and (and (forall ((t0 T@T) (t1 T@T) (val T@U) (m T@U) (x0 T@U) ) (! (= (MapType0Select t0 t1 (MapType0Store t0 t1 m x0 val) x0) val)
 :weight 0
)) (forall ((u0 T@T) (u1 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (y0 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 (MapType0Store u0 u1 m@@0 x0@@0 val@@0) y0) (MapType0Select u0 u1 m@@0 y0)))
 :weight 0
))) (= (Ctor FieldType) 3)) (= (Ctor BoxType) 4)) (= (Ctor refType) 5)) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType0Type arg0@@2 arg1)) 6))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType0Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType0TypeInv1 (MapType0Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType0Type arg0@@4 arg1@@1))
))))
(assert (forall ((_module.Node$T T@U) ($h T@U) ($o T@U) ) (!  (=> (and ($IsGoodHeap $h) (and (or (not (= $o null)) (not true)) (= (dtype $o) (Tclass._module.Node? _module.Node$T)))) ($IsBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h $o) _module.Node.data) _module.Node$T))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h $o) _module.Node.data) (Tclass._module.Node? _module.Node$T))
)))
(assert (forall ((_module.Node$T@@0 T@U) ($h@@0 T@U) ($o@@0 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@0) (and (or (not (= $o@@0 null)) (not true)) (= (dtype $o@@0) (Tclass._module.Node? _module.Node$T@@0)))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@0 $o@@0) alloc)))) ($IsAllocBox (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@0 $o@@0) _module.Node.data) _module.Node$T@@0 $h@@0))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@0 $o@@0) _module.Node.data) (Tclass._module.Node? _module.Node$T@@0))
)))
(assert (forall ((a@@0 T@U) (x@@3 T@U) (y T@U) ) (!  (=> (|Set#IsMember| a@@0 y) (|Set#IsMember| (|Set#UnionOne| a@@0 x@@3) y))
 :pattern ( (|Set#UnionOne| a@@0 x@@3) (|Set#IsMember| a@@0 y))
)))
(assert (forall ((a@@1 T@U) (b T@U) (y@@0 T@U) ) (!  (=> (|Set#IsMember| a@@1 y@@0) (|Set#IsMember| (|Set#Union| a@@1 b) y@@0))
 :pattern ( (|Set#Union| a@@1 b) (|Set#IsMember| a@@1 y@@0))
)))
(assert (forall ((a@@2 T@U) (b@@0 T@U) (y@@1 T@U) ) (!  (=> (|Set#IsMember| b@@0 y@@1) (|Set#IsMember| (|Set#Union| a@@2 b@@0) y@@1))
 :pattern ( (|Set#Union| a@@2 b@@0) (|Set#IsMember| b@@0 y@@1))
)))
(assert (forall ((a@@3 T@U) (x@@4 T@U) (o T@U) ) (! (= (|Set#IsMember| (|Set#UnionOne| a@@3 x@@4) o)  (or (= o x@@4) (|Set#IsMember| a@@3 o)))
 :pattern ( (|Set#IsMember| (|Set#UnionOne| a@@3 x@@4) o))
)))
(assert (forall ((a@@4 T@U) (b@@1 T@U) (y@@2 T@U) ) (!  (=> (|Set#IsMember| b@@1 y@@2) (not (|Set#IsMember| (|Set#Difference| a@@4 b@@1) y@@2)))
 :pattern ( (|Set#Difference| a@@4 b@@1) (|Set#IsMember| b@@1 y@@2))
)))
(assert (forall ((_module.Node$T@@1 T@U) (|c#0| T@U) ($h@@1 T@U) ) (! (= ($IsAlloc refType |c#0| (Tclass._module.Node _module.Node$T@@1) $h@@1) ($IsAlloc refType |c#0| (Tclass._module.Node? _module.Node$T@@1) $h@@1))
 :pattern ( ($IsAlloc refType |c#0| (Tclass._module.Node _module.Node$T@@1) $h@@1))
 :pattern ( ($IsAlloc refType |c#0| (Tclass._module.Node? _module.Node$T@@1) $h@@1))
)))
(assert (forall ((o@@0 T@U) ) (!  (not (|Set#IsMember| |Set#Empty| o@@0))
 :pattern ( (|Set#IsMember| |Set#Empty| o@@0))
)))
(assert (= (|Seq#Length| |Seq#Empty|) 0))
(assert (forall ((s T@U) (v T@U) (n Int) ) (!  (=> (and (<= 0 n) (<= n (|Seq#Length| s))) (= (|Seq#Drop| (|Seq#Build| s v) n) (|Seq#Build| (|Seq#Drop| s n) v)))
 :pattern ( (|Seq#Drop| (|Seq#Build| s v) n))
)))
(assert (forall ((a@@5 T@U) (b@@2 T@U) ) (! (= (|Set#Union| (|Set#Union| a@@5 b@@2) b@@2) (|Set#Union| a@@5 b@@2))
 :pattern ( (|Set#Union| (|Set#Union| a@@5 b@@2) b@@2))
)))
(assert (forall ((a@@6 T@U) (b@@3 T@U) (o@@1 T@U) ) (! (= (|Set#IsMember| (|Set#Difference| a@@6 b@@3) o@@1)  (and (|Set#IsMember| a@@6 o@@1) (not (|Set#IsMember| b@@3 o@@1))))
 :pattern ( (|Set#IsMember| (|Set#Difference| a@@6 b@@3) o@@1))
)))
(assert (forall ((s@@0 T@U) (t T@U) (n@@0 Int) ) (!  (=> (= n@@0 (|Seq#Length| s@@0)) (and (= (|Seq#Take| (|Seq#Append| s@@0 t) n@@0) s@@0) (= (|Seq#Drop| (|Seq#Append| s@@0 t) n@@0) t)))
 :pattern ( (|Seq#Take| (|Seq#Append| s@@0 t) n@@0))
 :pattern ( (|Seq#Drop| (|Seq#Append| s@@0 t) n@@0))
)))
(assert (= (FDim _module.Node.List) 0))
(assert (= (FieldOfDecl class._module.Node? field$List) _module.Node.List))
(assert ($IsGhostField _module.Node.List))
(assert (= (FDim _module.Node.Repr) 0))
(assert (= (FieldOfDecl class._module.Node? field$Repr) _module.Node.Repr))
(assert ($IsGhostField _module.Node.Repr))
(assert (forall ((_module.Node$T@@2 T@U) ($o@@1 T@U) ($h@@2 T@U) ) (! (= ($IsAlloc refType $o@@1 (Tclass._module.Node? _module.Node$T@@2) $h@@2)  (or (= $o@@1 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@2 $o@@1) alloc)))))
 :pattern ( ($IsAlloc refType $o@@1 (Tclass._module.Node? _module.Node$T@@2) $h@@2))
)))
(assert (= (FDim _module.Node.data) 0))
(assert (= (FieldOfDecl class._module.Node? field$data) _module.Node.data))
(assert  (not ($IsGhostField _module.Node.data)))
(assert (= (FDim _module.Node.next) 0))
(assert (= (FieldOfDecl class._module.Node? field$next) _module.Node.next))
(assert  (not ($IsGhostField _module.Node.next)))
(assert (forall ((h T@U) (k T@U) ) (!  (=> ($HeapSucc h k) (forall ((o@@2 T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h o@@2) alloc))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@2) alloc))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@2) alloc))
)))
 :pattern ( ($HeapSucc h k))
)))
(assert (forall ((s@@1 T@U) (n@@1 Int) ) (!  (=> (= n@@1 0) (= (|Seq#Drop| s@@1 n@@1) s@@1))
 :pattern ( (|Seq#Drop| s@@1 n@@1))
)))
(assert (forall ((x@@5 Int) ) (! (= (LitInt x@@5) x@@5)
 :pattern ( (LitInt x@@5))
)))
(assert (forall ((x@@6 T@U) (T T@T) ) (! (= (Lit T x@@6) x@@6)
 :pattern ( (Lit T x@@6))
)))
(assert (= (Ctor SeqType) 7))
(assert (forall ((s@@2 T@U) (bx T@U) (t@@0 T@U) ) (!  (=> (and ($Is SeqType s@@2 (TSeq t@@0)) ($IsBox bx t@@0)) ($Is SeqType (|Seq#Build| s@@2 bx) (TSeq t@@0)))
 :pattern ( ($Is SeqType (|Seq#Build| s@@2 bx) (TSeq t@@0)))
)))
(assert (forall ((a@@7 T@U) (b@@4 T@U) ) (! (= (|Set#Subset| a@@7 b@@4) (forall ((o@@3 T@U) ) (!  (=> (|Set#IsMember| a@@7 o@@3) (|Set#IsMember| b@@4 o@@3))
 :pattern ( (|Set#IsMember| a@@7 o@@3))
 :pattern ( (|Set#IsMember| b@@4 o@@3))
)))
 :pattern ( (|Set#Subset| a@@7 b@@4))
)))
(assert (forall ((s@@3 T@U) (n@@2 Int) (j Int) ) (!  (=> (and (and (<= 0 j) (< j n@@2)) (< j (|Seq#Length| s@@3))) (= (|Seq#Index| (|Seq#Take| s@@3 n@@2) j) (|Seq#Index| s@@3 j)))
 :weight 25
 :pattern ( (|Seq#Index| (|Seq#Take| s@@3 n@@2) j))
 :pattern ( (|Seq#Index| s@@3 j) (|Seq#Take| s@@3 n@@2))
)))
(assert (forall ((s@@4 T@U) (n@@3 Int) ) (!  (=> (and (<= 0 n@@3) (<= n@@3 (|Seq#Length| s@@4))) (= (|Seq#Length| (|Seq#Drop| s@@4 n@@3)) (- (|Seq#Length| s@@4) n@@3)))
 :pattern ( (|Seq#Length| (|Seq#Drop| s@@4 n@@3)))
)))
(assert (forall ((s0 T@U) (s1 T@U) ) (! (= (|Seq#Equal| s0 s1)  (and (= (|Seq#Length| s0) (|Seq#Length| s1)) (forall ((j@@0 Int) ) (!  (=> (and (<= 0 j@@0) (< j@@0 (|Seq#Length| s0))) (= (|Seq#Index| s0 j@@0) (|Seq#Index| s1 j@@0)))
 :pattern ( (|Seq#Index| s0 j@@0))
 :pattern ( (|Seq#Index| s1 j@@0))
))))
 :pattern ( (|Seq#Equal| s0 s1))
)))
(assert (forall ((x@@7 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@7)) x@@7)
 :pattern ( ($Unbox T@@0 x@@7))
)))
(assert (forall ((a@@8 T@U) (b@@5 T@U) ) (! (= (|Set#Disjoint| a@@8 b@@5) (forall ((o@@4 T@U) ) (!  (or (not (|Set#IsMember| a@@8 o@@4)) (not (|Set#IsMember| b@@5 o@@4)))
 :pattern ( (|Set#IsMember| a@@8 o@@4))
 :pattern ( (|Set#IsMember| b@@5 o@@4))
)))
 :pattern ( (|Set#Disjoint| a@@8 b@@5))
)))
(assert (= (Ctor SetType) 8))
(assert (forall ((v@@0 T@U) (t0@@0 T@U) ) (! (= ($Is SetType v@@0 (TSet t0@@0)) (forall ((bx@@0 T@U) ) (!  (=> (|Set#IsMember| v@@0 bx@@0) ($IsBox bx@@0 t0@@0))
 :pattern ( (|Set#IsMember| v@@0 bx@@0))
)))
 :pattern ( ($Is SetType v@@0 (TSet t0@@0)))
)))
(assert ($IsGhostField alloc))
(assert (forall ((s@@5 T@U) (v@@1 T@U) ) (! (= (|Seq#Length| (|Seq#Build| s@@5 v@@1)) (+ 1 (|Seq#Length| s@@5)))
 :pattern ( (|Seq#Build| s@@5 v@@1))
)))
(assert (forall ((_module.Node$T@@3 T@U) (|c#0@@0| T@U) ) (! (= ($Is refType |c#0@@0| (Tclass._module.Node _module.Node$T@@3))  (and ($Is refType |c#0@@0| (Tclass._module.Node? _module.Node$T@@3)) (or (not (= |c#0@@0| null)) (not true))))
 :pattern ( ($Is refType |c#0@@0| (Tclass._module.Node _module.Node$T@@3)))
 :pattern ( ($Is refType |c#0@@0| (Tclass._module.Node? _module.Node$T@@3)))
)))
(assert (forall ((v@@2 T@U) (t@@1 T@U) (h@@0 T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@2) t@@1 h@@0) ($IsAlloc T@@1 v@@2 t@@1 h@@0))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@2) t@@1 h@@0))
)))
(assert (forall ((_module.Node$T@@4 T@U) ($ly T@U) ($h0 T@U) ($h1 T@U) (this T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0) ($IsGoodHeap $h1)) (and (or (not (= this null)) (not true)) ($Is refType this (Tclass._module.Node _module.Node$T@@4)))) (and ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1))) (=> (forall (($o@@2 T@U) ($f T@U) )  (=> (and (or (not (= $o@@2 null)) (not true)) (or (= $o@@2 this) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 this) _module.Node.Repr)) ($Box refType $o@@2)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o@@2) $f) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1 $o@@2) $f)))) (= (_module.Node.Valid _module.Node$T@@4 $ly $h0 this) (_module.Node.Valid _module.Node$T@@4 $ly $h1 this))))
 :pattern ( ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1) (_module.Node.Valid _module.Node$T@@4 $ly $h1 this))
)))
(assert (forall ((h@@1 T@U) (k@@0 T@U) (bx@@1 T@U) (t@@2 T@U) ) (!  (=> ($HeapSucc h@@1 k@@0) (=> ($IsAllocBox bx@@1 t@@2 h@@1) ($IsAllocBox bx@@1 t@@2 k@@0)))
 :pattern ( ($HeapSucc h@@1 k@@0) ($IsAllocBox bx@@1 t@@2 h@@1))
)))
(assert (forall ((h@@2 T@U) (k@@1 T@U) (v@@3 T@U) (t@@3 T@U) (T@@2 T@T) ) (!  (=> ($HeapSucc h@@2 k@@1) (=> ($IsAlloc T@@2 v@@3 t@@3 h@@2) ($IsAlloc T@@2 v@@3 t@@3 k@@1)))
 :pattern ( ($HeapSucc h@@2 k@@1) ($IsAlloc T@@2 v@@3 t@@3 h@@2))
)))
(assert (forall ((s@@6 T@U) (n@@4 Int) (j@@1 Int) ) (!  (=> (and (and (<= 0 n@@4) (<= 0 j@@1)) (< j@@1 (- (|Seq#Length| s@@6) n@@4))) (= (|Seq#Index| (|Seq#Drop| s@@6 n@@4) j@@1) (|Seq#Index| s@@6 (+ j@@1 n@@4))))
 :weight 25
 :pattern ( (|Seq#Index| (|Seq#Drop| s@@6 n@@4) j@@1))
)))
(assert (forall ((_module.Node$T@@5 T@U) ) (!  (and (= (Tag (Tclass._module.Node? _module.Node$T@@5)) Tagclass._module.Node?) (= (TagFamily (Tclass._module.Node? _module.Node$T@@5)) tytagFamily$Node))
 :pattern ( (Tclass._module.Node? _module.Node$T@@5))
)))
(assert (forall ((_module.Node$T@@6 T@U) ) (!  (and (= (Tag (Tclass._module.Node _module.Node$T@@6)) Tagclass._module.Node) (= (TagFamily (Tclass._module.Node _module.Node$T@@6)) tytagFamily$Node))
 :pattern ( (Tclass._module.Node _module.Node$T@@6))
)))
(assert (forall ((_module.Node$T@@7 T@U) ($h@@3 T@U) ($o@@3 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@3) (and (or (not (= $o@@3 null)) (not true)) (= (dtype $o@@3) (Tclass._module.Node? _module.Node$T@@7)))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@3 $o@@3) alloc)))) ($IsAlloc SeqType ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@3 $o@@3) _module.Node.List)) (TSeq _module.Node$T@@7) $h@@3))
 :pattern ( ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@3 $o@@3) _module.Node.List)) (Tclass._module.Node? _module.Node$T@@7))
)))
(assert (forall ((_module.Node$T@@8 T@U) ($h@@4 T@U) ($o@@4 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@4) (and (or (not (= $o@@4 null)) (not true)) (= (dtype $o@@4) (Tclass._module.Node? _module.Node$T@@8)))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@4 $o@@4) alloc)))) ($IsAlloc refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@4 $o@@4) _module.Node.next)) (Tclass._module.Node? _module.Node$T@@8) $h@@4))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@4 $o@@4) _module.Node.next)) (Tclass._module.Node? _module.Node$T@@8))
)))
(assert (forall ((s0@@0 T@U) (s1@@0 T@U) ) (! (= (|Seq#Length| (|Seq#Append| s0@@0 s1@@0)) (+ (|Seq#Length| s0@@0) (|Seq#Length| s1@@0)))
 :pattern ( (|Seq#Length| (|Seq#Append| s0@@0 s1@@0)))
)))
(assert (forall ((_module.Node$T@@9 T@U) ($o@@5 T@U) ) (! (= ($Is refType $o@@5 (Tclass._module.Node? _module.Node$T@@9))  (or (= $o@@5 null) (= (dtype $o@@5) (Tclass._module.Node? _module.Node$T@@9))))
 :pattern ( ($Is refType $o@@5 (Tclass._module.Node? _module.Node$T@@9)))
)))
(assert (forall ((s@@7 T@U) (i Int) (v@@4 T@U) ) (!  (and (=> (= i (|Seq#Length| s@@7)) (= (|Seq#Index| (|Seq#Build| s@@7 v@@4) i) v@@4)) (=> (or (not (= i (|Seq#Length| s@@7))) (not true)) (= (|Seq#Index| (|Seq#Build| s@@7 v@@4) i) (|Seq#Index| s@@7 i))))
 :pattern ( (|Seq#Index| (|Seq#Build| s@@7 v@@4) i))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall ((_module.Node$T@@10 T@U) ($ly@@0 T@U) ($Heap T@U) (this@@0 T@U) ) (!  (=> (or (|_module.Node.Valid#canCall| _module.Node$T@@10 $Heap this@@0) (and (< 0 $FunctionContextHeight) (and ($IsGoodHeap $Heap) (and (or (not (= this@@0 null)) (not true)) (and ($Is refType this@@0 (Tclass._module.Node _module.Node$T@@10)) ($IsAlloc refType this@@0 (Tclass._module.Node _module.Node$T@@10) $Heap)))))) (and (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.Repr)) ($Box refType this@@0)) (=> (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.data)))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next)) null)) (not true)) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next)) (=> (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.Repr))) (=> (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next))) _module.Node.Repr)) ($Box refType this@@0))) (=> (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next))) _module.Node.List)))) (|_module.Node.Valid#canCall| _module.Node$T@@10 $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next)))))))))) (= (_module.Node.Valid _module.Node$T@@10 ($LS $ly@@0) $Heap this@@0)  (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.Repr)) ($Box refType this@@0)) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.data))))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next)) null)) (not true)) (and (and (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.Repr)))) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next))) _module.Node.Repr)) ($Box refType this@@0)))) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next))) _module.Node.List))))) (_module.Node.Valid _module.Node$T@@10 $ly@@0 $Heap ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Node.next)))))))))
 :pattern ( (_module.Node.Valid _module.Node$T@@10 ($LS $ly@@0) $Heap this@@0) ($IsGoodHeap $Heap))
))))
(assert (forall ((_module.Node$T@@11 T@U) ($h@@5 T@U) ($o@@6 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@5) (and (or (not (= $o@@6 null)) (not true)) (= (dtype $o@@6) (Tclass._module.Node? _module.Node$T@@11)))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@5 $o@@6) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@5 $o@@6) _module.Node.Repr)) (TSet (Tclass._module.Node _module.Node$T@@11)) $h@@5))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@5 $o@@6) _module.Node.Repr)) (Tclass._module.Node? _module.Node$T@@11))
)))
(assert (forall ((a@@9 T@U) (b@@6 T@U) (o@@5 T@U) ) (! (= (|Set#IsMember| (|Set#Union| a@@9 b@@6) o@@5)  (or (|Set#IsMember| a@@9 o@@5) (|Set#IsMember| b@@6 o@@5)))
 :pattern ( (|Set#IsMember| (|Set#Union| a@@9 b@@6) o@@5))
)))
(assert (forall ((a@@10 T@U) (b@@7 T@U) ) (!  (=> (|Set#Disjoint| a@@10 b@@7) (and (= (|Set#Difference| (|Set#Union| a@@10 b@@7) a@@10) b@@7) (= (|Set#Difference| (|Set#Union| a@@10 b@@7) b@@7) a@@10)))
 :pattern ( (|Set#Union| a@@10 b@@7))
)))
(assert (forall ((a@@11 T@U) (b@@8 T@U) ) (!  (=> (|Seq#Equal| a@@11 b@@8) (= a@@11 b@@8))
 :pattern ( (|Seq#Equal| a@@11 b@@8))
)))
(assert (forall ((s@@8 T@U) (n@@5 Int) ) (!  (=> (and (<= 0 n@@5) (<= n@@5 (|Seq#Length| s@@8))) (= (|Seq#Length| (|Seq#Take| s@@8 n@@5)) n@@5))
 :pattern ( (|Seq#Length| (|Seq#Take| s@@8 n@@5)))
)))
(assert (forall ((a@@12 T@U) (b@@9 T@U) (c T@U) ) (!  (=> (or (not (= a@@12 c)) (not true)) (=> (and ($HeapSucc a@@12 b@@9) ($HeapSucc b@@9 c)) ($HeapSucc a@@12 c)))
 :pattern ( ($HeapSucc a@@12 b@@9) ($HeapSucc b@@9 c))
)))
(assert (forall ((cl T@U) (nm T@U) ) (!  (and (= (DeclType (FieldOfDecl cl nm)) cl) (= (DeclName (FieldOfDecl cl nm)) nm))
 :pattern ( (FieldOfDecl cl nm))
)))
(assert (forall ((v@@5 T@U) (t@@4 T@U) (T@@3 T@T) ) (! (= ($IsBox ($Box T@@3 v@@5) t@@4) ($Is T@@3 v@@5 t@@4))
 :pattern ( ($IsBox ($Box T@@3 v@@5) t@@4))
)))
(assert (forall ((s@@9 T@U) ) (! (<= 0 (|Seq#Length| s@@9))
 :pattern ( (|Seq#Length| s@@9))
)))
(assert (forall ((v@@6 T@U) (t0@@1 T@U) (h@@3 T@U) ) (! (= ($IsAlloc SetType v@@6 (TSet t0@@1) h@@3) (forall ((bx@@2 T@U) ) (!  (=> (|Set#IsMember| v@@6 bx@@2) ($IsAllocBox bx@@2 t0@@1 h@@3))
 :pattern ( (|Set#IsMember| v@@6 bx@@2))
)))
 :pattern ( ($IsAlloc SetType v@@6 (TSet t0@@1) h@@3))
)))
(assert (forall ((v@@7 T@U) (t0@@2 T@U) (h@@4 T@U) ) (! (= ($IsAlloc SeqType v@@7 (TSeq t0@@2) h@@4) (forall ((i@@0 Int) ) (!  (=> (and (<= 0 i@@0) (< i@@0 (|Seq#Length| v@@7))) ($IsAllocBox (|Seq#Index| v@@7 i@@0) t0@@2 h@@4))
 :pattern ( (|Seq#Index| v@@7 i@@0))
)))
 :pattern ( ($IsAlloc SeqType v@@7 (TSeq t0@@2) h@@4))
)))
(assert (forall ((t@@5 T@U) ) (! (= (Inv0_TSet (TSet t@@5)) t@@5)
 :pattern ( (TSet t@@5))
)))
(assert (forall ((t@@6 T@U) ) (! (= (Tag (TSet t@@6)) TagSet)
 :pattern ( (TSet t@@6))
)))
(assert (forall ((t@@7 T@U) ) (! (= (Inv0_TSeq (TSeq t@@7)) t@@7)
 :pattern ( (TSeq t@@7))
)))
(assert (forall ((t@@8 T@U) ) (! (= (Tag (TSeq t@@8)) TagSeq)
 :pattern ( (TSeq t@@8))
)))
(assert (forall ((_module.Node$T@@12 T@U) ) (! (= (Tclass._module.Node?_0 (Tclass._module.Node? _module.Node$T@@12)) _module.Node$T@@12)
 :pattern ( (Tclass._module.Node? _module.Node$T@@12))
)))
(assert (forall ((_module.Node$T@@13 T@U) ) (! (= (Tclass._module.Node_0 (Tclass._module.Node _module.Node$T@@13)) _module.Node$T@@13)
 :pattern ( (Tclass._module.Node _module.Node$T@@13))
)))
(assert (forall ((x@@8 T@U) (T@@4 T@T) ) (! (= ($Unbox T@@4 ($Box T@@4 x@@8)) x@@8)
 :pattern ( ($Box T@@4 x@@8))
)))
(assert (forall ((_module.Node$T@@14 T@U) ($ly@@1 T@U) ($Heap@@0 T@U) (this@@1 T@U) ) (! (= (_module.Node.Valid _module.Node$T@@14 ($LS $ly@@1) $Heap@@0 this@@1) (_module.Node.Valid _module.Node$T@@14 $ly@@1 $Heap@@0 this@@1))
 :pattern ( (_module.Node.Valid _module.Node$T@@14 ($LS $ly@@1) $Heap@@0 this@@1))
)))
(assert (forall ((a@@13 T@U) (b@@10 T@U) ) (! (= (|Set#Union| a@@13 (|Set#Union| a@@13 b@@10)) (|Set#Union| a@@13 b@@10))
 :pattern ( (|Set#Union| a@@13 (|Set#Union| a@@13 b@@10)))
)))
(assert (forall ((s@@10 T@U) (val@@1 T@U) ) (!  (and (= (|Seq#Build_inv0| (|Seq#Build| s@@10 val@@1)) s@@10) (= (|Seq#Build_inv1| (|Seq#Build| s@@10 val@@1)) val@@1))
 :pattern ( (|Seq#Build| s@@10 val@@1))
)))
(assert (forall ((_module.Node$T@@15 T@U) ($h@@6 T@U) ($o@@7 T@U) ) (!  (=> (and ($IsGoodHeap $h@@6) (and (or (not (= $o@@7 null)) (not true)) (= (dtype $o@@7) (Tclass._module.Node? _module.Node$T@@15)))) ($Is SeqType ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@6 $o@@7) _module.Node.List)) (TSeq _module.Node$T@@15)))
 :pattern ( ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@6 $o@@7) _module.Node.List)) (Tclass._module.Node? _module.Node$T@@15))
)))
(assert (forall ((_module.Node$T@@16 T@U) ($h@@7 T@U) ($o@@8 T@U) ) (!  (=> (and ($IsGoodHeap $h@@7) (and (or (not (= $o@@8 null)) (not true)) (= (dtype $o@@8) (Tclass._module.Node? _module.Node$T@@16)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@7 $o@@8) _module.Node.next)) (Tclass._module.Node? _module.Node$T@@16)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@7 $o@@8) _module.Node.next)) (Tclass._module.Node? _module.Node$T@@16))
)))
(assert (forall ((bx@@3 T@U) (t@@9 T@U) ) (!  (=> ($IsBox bx@@3 (TSet t@@9)) (and (= ($Box SetType ($Unbox SetType bx@@3)) bx@@3) ($Is SetType ($Unbox SetType bx@@3) (TSet t@@9))))
 :pattern ( ($IsBox bx@@3 (TSet t@@9)))
)))
(assert (forall ((bx@@4 T@U) (t@@10 T@U) ) (!  (=> ($IsBox bx@@4 (TSeq t@@10)) (and (= ($Box SeqType ($Unbox SeqType bx@@4)) bx@@4) ($Is SeqType ($Unbox SeqType bx@@4) (TSeq t@@10))))
 :pattern ( ($IsBox bx@@4 (TSeq t@@10)))
)))
(assert (forall ((_module.Node$T@@17 T@U) (bx@@5 T@U) ) (!  (=> ($IsBox bx@@5 (Tclass._module.Node? _module.Node$T@@17)) (and (= ($Box refType ($Unbox refType bx@@5)) bx@@5) ($Is refType ($Unbox refType bx@@5) (Tclass._module.Node? _module.Node$T@@17))))
 :pattern ( ($IsBox bx@@5 (Tclass._module.Node? _module.Node$T@@17)))
)))
(assert (forall ((_module.Node$T@@18 T@U) (bx@@6 T@U) ) (!  (=> ($IsBox bx@@6 (Tclass._module.Node _module.Node$T@@18)) (and (= ($Box refType ($Unbox refType bx@@6)) bx@@6) ($Is refType ($Unbox refType bx@@6) (Tclass._module.Node _module.Node$T@@18))))
 :pattern ( ($IsBox bx@@6 (Tclass._module.Node _module.Node$T@@18)))
)))
(assert (forall ((h@@5 T@U) (r T@U) (f T@U) (x@@9 T@U) ) (!  (=> ($IsGoodHeap (MapType0Store refType (MapType0Type FieldType BoxType) h@@5 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@5 r) f x@@9))) ($HeapSucc h@@5 (MapType0Store refType (MapType0Type FieldType BoxType) h@@5 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@5 r) f x@@9))))
 :pattern ( (MapType0Store refType (MapType0Type FieldType BoxType) h@@5 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@5 r) f x@@9)))
)))
(assert (forall ((s@@11 T@U) (n@@6 Int) (k@@2 Int) ) (!  (=> (and (and (<= 0 n@@6) (<= n@@6 k@@2)) (< k@@2 (|Seq#Length| s@@11))) (= (|Seq#Index| (|Seq#Drop| s@@11 n@@6) (- k@@2 n@@6)) (|Seq#Index| s@@11 k@@2)))
 :weight 25
 :pattern ( (|Seq#Index| s@@11 k@@2) (|Seq#Drop| s@@11 n@@6))
)))
(assert (forall ((s@@12 T@U) (m@@1 Int) (n@@7 Int) ) (!  (=> (and (and (<= 0 m@@1) (<= 0 n@@7)) (<= (+ m@@1 n@@7) (|Seq#Length| s@@12))) (= (|Seq#Drop| (|Seq#Drop| s@@12 m@@1) n@@7) (|Seq#Drop| s@@12 (+ m@@1 n@@7))))
 :pattern ( (|Seq#Drop| (|Seq#Drop| s@@12 m@@1) n@@7))
)))
(assert (forall ((s0@@1 T@U) (s1@@1 T@U) (n@@8 Int) ) (!  (and (=> (< n@@8 (|Seq#Length| s0@@1)) (= (|Seq#Index| (|Seq#Append| s0@@1 s1@@1) n@@8) (|Seq#Index| s0@@1 n@@8))) (=> (<= (|Seq#Length| s0@@1) n@@8) (= (|Seq#Index| (|Seq#Append| s0@@1 s1@@1) n@@8) (|Seq#Index| s1@@1 (- n@@8 (|Seq#Length| s0@@1))))))
 :pattern ( (|Seq#Index| (|Seq#Append| s0@@1 s1@@1) n@@8))
)))
(assert (forall ((_module.Node$T@@19 T@U) ($h@@8 T@U) ($o@@9 T@U) ) (!  (=> (and ($IsGoodHeap $h@@8) (and (or (not (= $o@@9 null)) (not true)) (= (dtype $o@@9) (Tclass._module.Node? _module.Node$T@@19)))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@8 $o@@9) _module.Node.Repr)) (TSet (Tclass._module.Node _module.Node$T@@19))))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@8 $o@@9) _module.Node.Repr)) (Tclass._module.Node? _module.Node$T@@19))
)))
(assert (forall ((x@@10 Int) ) (! (= ($Box intType (int_2_U (LitInt x@@10))) (Lit BoxType ($Box intType (int_2_U x@@10))))
 :pattern ( ($Box intType (int_2_U (LitInt x@@10))))
)))
(assert (forall ((x@@11 T@U) (T@@5 T@T) ) (! (= ($Box T@@5 (Lit T@@5 x@@11)) (Lit BoxType ($Box T@@5 x@@11)))
 :pattern ( ($Box T@@5 (Lit T@@5 x@@11)))
)))
(assert (forall ((s@@13 T@U) ) (!  (=> (= (|Seq#Length| s@@13) 0) (= s@@13 |Seq#Empty|))
 :pattern ( (|Seq#Length| s@@13))
)))
(assert (forall ((s@@14 T@U) (n@@9 Int) ) (!  (=> (= n@@9 0) (= (|Seq#Take| s@@14 n@@9) |Seq#Empty|))
 :pattern ( (|Seq#Take| s@@14 n@@9))
)))
(assert  (and (forall ((t0@@3 T@T) (t1@@0 T@T) (t2 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@1 T@U) (x1 T@U) ) (! (= (MapType1Select t0@@3 t1@@0 t2 (MapType1Store t0@@3 t1@@0 t2 m@@2 x0@@1 x1 val@@2) x0@@1 x1) val@@2)
 :weight 0
)) (and (forall ((u0@@0 T@T) (u1@@0 T@T) (u2 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@2 T@U) (x1@@0 T@U) (y0@@0 T@U) (y1 T@U) ) (!  (or (= x0@@2 y0@@0) (= (MapType1Select u0@@0 u1@@0 u2 (MapType1Store u0@@0 u1@@0 u2 m@@3 x0@@2 x1@@0 val@@3) y0@@0 y1) (MapType1Select u0@@0 u1@@0 u2 m@@3 y0@@0 y1)))
 :weight 0
)) (forall ((u0@@1 T@T) (u1@@1 T@T) (u2@@0 T@T) (val@@4 T@U) (m@@4 T@U) (x0@@3 T@U) (x1@@1 T@U) (y0@@1 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType1Select u0@@1 u1@@1 u2@@0 (MapType1Store u0@@1 u1@@1 u2@@0 m@@4 x0@@3 x1@@1 val@@4) y0@@1 y1@@0) (MapType1Select u0@@1 u1@@1 u2@@0 m@@4 y0@@1 y1@@0)))
 :weight 0
)))))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| T@U) ($o@@10 T@U) ($f@@0 T@U) ) (! (= (U_2_bool (MapType1Select refType FieldType boolType (|lambda#8| |l#0| |l#1| |l#2| |l#3|) $o@@10 $f@@0))  (=> (and (or (not (= $o@@10 |l#0|)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#1| $o@@10) |l#2|)))) (|Set#IsMember| |l#3| ($Box refType $o@@10))))
 :pattern ( (MapType1Select refType FieldType boolType (|lambda#8| |l#0| |l#1| |l#2| |l#3|) $o@@10 $f@@0))
)))
(assert (forall ((v@@8 T@U) (t0@@4 T@U) ) (! (= ($Is SeqType v@@8 (TSeq t0@@4)) (forall ((i@@1 Int) ) (!  (=> (and (<= 0 i@@1) (< i@@1 (|Seq#Length| v@@8))) ($IsBox (|Seq#Index| v@@8 i@@1) t0@@4))
 :pattern ( (|Seq#Index| v@@8 i@@1))
)))
 :pattern ( ($Is SeqType v@@8 (TSeq t0@@4)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun |current#0@1| () T@U)
(declare-fun $Heap@3 () T@U)
(declare-fun |reverse#0@0| () T@U)
(declare-fun $Heap@@1 () T@U)
(declare-fun this@@2 () T@U)
(declare-fun |i#2@0| () Int)
(declare-fun |defass#reverse#0@0| () Bool)
(declare-fun _module.Node$T@@20 () T@U)
(declare-fun $LZ () T@U)
(declare-fun |$w$loop#0@0| () Bool)
(declare-fun $Heap@7 () T@U)
(declare-fun |reverse#0@1| () T@U)
(declare-fun |$decr$loop#00@1| () Int)
(declare-fun |nx#0_0@1| () T@U)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun $Heap@4 () T@U)
(declare-fun |$rhs#0_1@1| () T@U)
(declare-fun $Heap@5 () T@U)
(declare-fun |$rhs#0_2@1| () T@U)
(declare-fun $Heap@6 () T@U)
(declare-fun |nx#0_0@0| () T@U)
(declare-fun $Heap@2 () T@U)
(declare-fun |$decr_init$loop#00@0| () Int)
(declare-fun |current#0@0| () T@U)
(declare-fun $Heap@0 () T@U)
(declare-fun |$rhs#1@0| () T@U)
(declare-fun $Heap@1 () T@U)
(declare-fun |$rhs#2@0| () T@U)
(declare-fun |defass#reverse#0| () Bool)
(declare-fun |reverse#0| () T@U)
(declare-fun |current#0| () T@U)
(declare-fun |nx#0_0| () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 156) (let ((anon24_correct true))
(let ((anon42_Else_correct  (=> (and (= |current#0@1| null) (= (ControlFlow 0 60) 57)) anon24_correct)))
(let ((anon42_Then_correct  (=> (or (not (= |current#0@1| null)) (not true)) (and (=> (= (ControlFlow 0 58) (- 0 59)) (or (not (= |current#0@1| null)) (not true))) (=> (or (not (= |current#0@1| null)) (not true)) (=> (= (ControlFlow 0 58) 57) anon24_correct))))))
(let ((anon21_correct  (=> (forall ((|i#3| Int) ) (!  (=> (and (<= (LitInt 0) |i#3|) (< |i#3| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))))) (= (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)) |i#3|) (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (- (- (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) 1) |i#3|))))
 :pattern ( (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)) |i#3|))
)) (and (=> (= (ControlFlow 0 61) 58) anon42_Then_correct) (=> (= (ControlFlow 0 61) 60) anon42_Else_correct)))))
(let ((anon41_Else_correct  (=> (and (not (and (<= (LitInt 0) |i#2@0|) (< |i#2@0| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)))))) (= (ControlFlow 0 70) 61)) anon21_correct)))
(let ((anon41_Then_correct  (=> (and (<= (LitInt 0) |i#2@0|) (< |i#2@0| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))))) (and (=> (= (ControlFlow 0 62) (- 0 69)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 62) (- 0 68)) (or (not (= |reverse#0@0| null)) (not true))) (and (=> (= (ControlFlow 0 62) (- 0 67)) (and (<= 0 |i#2@0|) (< |i#2@0| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)))))) (and (=> (= (ControlFlow 0 62) (- 0 66)) ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1)) (=> ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1) (and (=> (= (ControlFlow 0 62) (- 0 65)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 62) (- 0 64)) (or (not (= |reverse#0@0| null)) (not true))) (and (=> (= (ControlFlow 0 62) (- 0 63)) (and (<= 0 (- (- (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) 1) |i#2@0|)) (< (- (- (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) 1) |i#2@0|) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)))))) (=> (= (ControlFlow 0 62) 61) anon21_correct))))))))))))))
(let ((anon40_Else_correct  (=> (< |i#2@0| (LitInt 0)) (and (=> (= (ControlFlow 0 74) 62) anon41_Then_correct) (=> (= (ControlFlow 0 74) 70) anon41_Else_correct)))))
(let ((anon40_Then_correct  (=> (<= (LitInt 0) |i#2@0|) (and (=> (= (ControlFlow 0 71) (- 0 73)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 71) (- 0 72)) (or (not (= |reverse#0@0| null)) (not true))) (and (=> (= (ControlFlow 0 71) 62) anon41_Then_correct) (=> (= (ControlFlow 0 71) 70) anon41_Else_correct))))))))
(let ((anon39_Then_correct  (and (=> (= (ControlFlow 0 75) 71) anon40_Then_correct) (=> (= (ControlFlow 0 75) 74) anon40_Else_correct))))
(let ((anon39_Else_correct true))
(let ((anon16_correct  (=> (=> (or (not (= |current#0@1| null)) (not true)) (and (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (+ (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List))))) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List)) (|Seq#Drop| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))))))) (and (=> (= (ControlFlow 0 76) 75) anon39_Then_correct) (=> (= (ControlFlow 0 76) 56) anon39_Else_correct)))))
(let ((anon38_Else_correct  (=> (and (or (not (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (+ (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List)))))) (not true)) (= (ControlFlow 0 84) 76)) anon16_correct)))
(let ((anon38_Then_correct  (=> (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (+ (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List))))) (and (=> (= (ControlFlow 0 78) (- 0 83)) (or (not (= |current#0@1| null)) (not true))) (and (=> (= (ControlFlow 0 78) (- 0 82)) ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1)) (=> ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1) (and (=> (= (ControlFlow 0 78) (- 0 81)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 78) (- 0 80)) (or (not (= |reverse#0@0| null)) (not true))) (and (=> (= (ControlFlow 0 78) (- 0 79)) (and (<= 0 (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)))) (<= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)))))) (=> (= (ControlFlow 0 78) 76) anon16_correct)))))))))))
(let ((anon37_Then_correct  (=> (or (not (= |current#0@1| null)) (not true)) (and (=> (= (ControlFlow 0 85) (- 0 89)) ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1)) (=> ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1) (and (=> (= (ControlFlow 0 85) (- 0 88)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 85) (- 0 87)) (or (not (= |reverse#0@0| null)) (not true))) (and (=> (= (ControlFlow 0 85) (- 0 86)) (or (not (= |current#0@1| null)) (not true))) (and (=> (= (ControlFlow 0 85) 78) anon38_Then_correct) (=> (= (ControlFlow 0 85) 84) anon38_Else_correct)))))))))))
(let ((anon37_Else_correct  (=> (and (= |current#0@1| null) (= (ControlFlow 0 77) 76)) anon16_correct)))
(let ((anon13_correct  (=> (and (=> (or (not (= |current#0@1| null)) (not true)) (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|)) (=> (or (not (= |current#0@1| null)) (not true)) (and (and (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |current#0@1|))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (|Set#Disjoint| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)))))) (and (=> (= (ControlFlow 0 90) 85) anon37_Then_correct) (=> (= (ControlFlow 0 90) 77) anon37_Else_correct)))))
(let ((anon36_Else_correct  (=> (and (not (and (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |current#0@1|))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr))))) (= (ControlFlow 0 96) 90)) anon13_correct)))
(let ((anon36_Then_correct  (=> (and (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |current#0@1|))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (and (=> (= (ControlFlow 0 92) (- 0 95)) (or (not (= |current#0@1| null)) (not true))) (and (=> (= (ControlFlow 0 92) (- 0 94)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 92) (- 0 93)) (or (not (= |reverse#0@0| null)) (not true))) (=> (= (ControlFlow 0 92) 90) anon13_correct))))))))
(let ((anon35_Else_correct  (=> (not (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |current#0@1|)))) (and (=> (= (ControlFlow 0 100) 92) anon36_Then_correct) (=> (= (ControlFlow 0 100) 96) anon36_Else_correct)))))
(let ((anon35_Then_correct  (=> (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |current#0@1|))) (and (=> (= (ControlFlow 0 97) (- 0 99)) (or (not (= |current#0@1| null)) (not true))) (and (=> (= (ControlFlow 0 97) (- 0 98)) ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1)) (=> ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1) (and (=> (= (ControlFlow 0 97) 92) anon36_Then_correct) (=> (= (ControlFlow 0 97) 96) anon36_Else_correct))))))))
(let ((anon34_Else_correct  (=> (not (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|)) (and (=> (= (ControlFlow 0 103) 97) anon35_Then_correct) (=> (= (ControlFlow 0 103) 100) anon35_Else_correct)))))
(let ((anon34_Then_correct  (=> (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (and (=> (= (ControlFlow 0 101) (- 0 102)) ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1)) (=> ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1) (and (=> (= (ControlFlow 0 101) 97) anon35_Then_correct) (=> (= (ControlFlow 0 101) 100) anon35_Else_correct)))))))
(let ((anon33_Then_correct  (=> (or (not (= |current#0@1| null)) (not true)) (and (=> (= (ControlFlow 0 104) (- 0 105)) (or (not (= |current#0@1| null)) (not true))) (=> (and ($IsAllocBox ($Box refType |current#0@1|) (Tclass._module.Node? _module.Node$T@@20) $Heap@3) (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|)) (and (=> (= (ControlFlow 0 104) 101) anon34_Then_correct) (=> (= (ControlFlow 0 104) 103) anon34_Else_correct)))))))
(let ((anon33_Else_correct  (=> (and (= |current#0@1| null) (= (ControlFlow 0 91) 90)) anon13_correct)))
(let ((anon6_correct  (=> (=> (= |current#0@1| null) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))))) (and (=> (= (ControlFlow 0 106) 104) anon33_Then_correct) (=> (= (ControlFlow 0 106) 91) anon33_Else_correct)))))
(let ((anon32_Else_correct  (=> (and (or (not (= |current#0@1| null)) (not true)) (= (ControlFlow 0 111) 106)) anon6_correct)))
(let ((anon32_Then_correct  (=> (= |current#0@1| null) (and (=> (= (ControlFlow 0 107) (- 0 110)) ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1)) (=> ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1) (and (=> (= (ControlFlow 0 107) (- 0 109)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 107) (- 0 108)) (or (not (= |reverse#0@0| null)) (not true))) (=> (= (ControlFlow 0 107) 106) anon6_correct)))))))))
(let ((anon4_correct  (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (=> (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (and (=> (= (ControlFlow 0 112) 107) anon32_Then_correct) (=> (= (ControlFlow 0 112) 111) anon32_Else_correct))))))
(let ((anon31_Else_correct  (=> (and (not (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|)) (= (ControlFlow 0 117) 112)) anon4_correct)))
(let ((anon31_Then_correct  (=> (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (and (=> (= (ControlFlow 0 113) (- 0 116)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 113) (- 0 115)) (or (not (= |reverse#0@0| null)) (not true))) (and (=> (= (ControlFlow 0 113) (- 0 114)) ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1)) (=> ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1) (=> (= (ControlFlow 0 113) 112) anon4_correct)))))))))
(let ((anon30_Then_correct  (=> (not |$w$loop#0@0|) (and (=> (= (ControlFlow 0 118) (- 0 120)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 118) (- 0 119)) (or (not (= |reverse#0@0| null)) (not true))) (=> (and ($IsAllocBox ($Box refType |reverse#0@0|) (Tclass._module.Node? _module.Node$T@@20) $Heap@3) (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|)) (and (=> (= (ControlFlow 0 118) 113) anon31_Then_correct) (=> (= (ControlFlow 0 118) 117) anon31_Else_correct)))))))))
(let ((GeneratedUnifiedExit_correct  (and (=> (= (ControlFlow 0 43) (- 0 52)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.Repr)) ($Box refType |reverse#0@1|))))) (=> (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.Repr)) ($Box refType |reverse#0@1|)))) (and (=> (= (ControlFlow 0 43) (- 0 51)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.data))))))) (=> (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.data)))))) (and (=> (= (ControlFlow 0 43) (- 0 50)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)))))) (=> (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next))))) (and (=> (= (ControlFlow 0 43) (- 0 49)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.Repr))))))) (=> (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.Repr)))))) (and (=> (= (ControlFlow 0 43) (- 0 48)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next))) _module.Node.Repr)) ($Box refType |reverse#0@1|))))))) (=> (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next))) _module.Node.Repr)) ($Box refType |reverse#0@1|)))))) (and (=> (= (ControlFlow 0 43) (- 0 47)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next))) _module.Node.List)))))))) (=> (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next))) _module.Node.List))))))) (and (=> (= (ControlFlow 0 43) (- 0 46)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@7 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next))))))) (=> (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@7 |reverse#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@7 |reverse#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@7 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.next)))))) (and (=> (= (ControlFlow 0 43) (- 0 45)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (=> (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr))) (and (=> (= (ControlFlow 0 43) (- 0 44)) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))))) (=> (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)))) (=> (= (ControlFlow 0 43) (- 0 42)) (forall ((|i#1| Int) ) (!  (=> (and (<= (LitInt 0) |i#1|) (< |i#1| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List))))) (= (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List)) |i#1|) (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (- (- (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) 1) |i#1|))))
 :pattern ( (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@7 |reverse#0@1|) _module.Node.List)) |i#1|))
)))))))))))))))))))))))
(let ((anon43_Then_correct  (=> (= |current#0@1| null) (and (=> (= (ControlFlow 0 53) (- 0 54)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (=> (= |reverse#0@1| |reverse#0@0|) (=> (and (= $Heap@7 $Heap@3) (= (ControlFlow 0 53) 43)) GeneratedUnifiedExit_correct)))))))
(let ((anon43_Else_correct  (=> (and (or (not (= |current#0@1| null)) (not true)) (= |$decr$loop#00@1| (ite  (or (not (= |current#0@1| null)) (not true)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List))) (- 0 1)))) (and (=> (= (ControlFlow 0 3) (- 0 41)) (or (not (= |current#0@1| null)) (not true))) (=> (or (not (= |current#0@1| null)) (not true)) (=> (= |nx#0_0@1| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next))) (and (=> (= (ControlFlow 0 3) (- 0 40)) (or (not (= |current#0@1| null)) (not true))) (=> (or (not (= |current#0@1| null)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 39)) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 |current#0@1| _module.Node.next))) (=> (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 |current#0@1| _module.Node.next)) (and (=> (= (ControlFlow 0 3) (- 0 38)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (=> (and (= $Heap@4 (MapType0Store refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1| (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next ($Box refType |reverse#0@0|)))) ($IsGoodHeap $Heap@4)) (and (=> (= (ControlFlow 0 3) (- 0 37)) (or (not (= |current#0@1| null)) (not true))) (=> (or (not (= |current#0@1| null)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 36)) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 |current#0@1| _module.Node.Repr))) (=> (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 |current#0@1| _module.Node.Repr)) (and (=> (= (ControlFlow 0 3) (- 0 35)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 3) (- 0 34)) (or (not (= |reverse#0@0| null)) (not true))) (=> (or (not (= |reverse#0@0| null)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 33)) ($Is SetType (|Set#Union| (|Set#UnionOne| |Set#Empty| ($Box refType |current#0@1|)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |reverse#0@0|) _module.Node.Repr))) (TSet (Tclass._module.Node _module.Node$T@@20)))) (=> ($Is SetType (|Set#Union| (|Set#UnionOne| |Set#Empty| ($Box refType |current#0@1|)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |reverse#0@0|) _module.Node.Repr))) (TSet (Tclass._module.Node _module.Node$T@@20))) (=> (= |$rhs#0_1@1| (|Set#Union| (|Set#UnionOne| |Set#Empty| ($Box refType |current#0@1|)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |reverse#0@0|) _module.Node.Repr)))) (=> (and (= $Heap@5 (MapType0Store refType (MapType0Type FieldType BoxType) $Heap@4 |current#0@1| (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@4 |current#0@1|) _module.Node.Repr ($Box SetType |$rhs#0_1@1|)))) ($IsGoodHeap $Heap@5)) (and (=> (= (ControlFlow 0 3) (- 0 32)) (or (not (= |current#0@1| null)) (not true))) (=> (or (not (= |current#0@1| null)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 31)) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 |current#0@1| _module.Node.List))) (=> (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 |current#0@1| _module.Node.List)) (and (=> (= (ControlFlow 0 3) (- 0 30)) (or (not (= |current#0@1| null)) (not true))) (=> (or (not (= |current#0@1| null)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 29)) |defass#reverse#0@0|) (=> |defass#reverse#0@0| (and (=> (= (ControlFlow 0 3) (- 0 28)) (or (not (= |reverse#0@0| null)) (not true))) (=> (or (not (= |reverse#0@0| null)) (not true)) (=> (= |$rhs#0_2@1| (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |current#0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |reverse#0@0|) _module.Node.List)))) (=> (and (= $Heap@6 (MapType0Store refType (MapType0Type FieldType BoxType) $Heap@5 |current#0@1| (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@5 |current#0@1|) _module.Node.List ($Box SeqType |$rhs#0_2@1|)))) ($IsGoodHeap $Heap@6)) (and (=> (= (ControlFlow 0 3) (- 0 27)) ($Is refType |current#0@1| (Tclass._module.Node _module.Node$T@@20))) (=> ($Is refType |current#0@1| (Tclass._module.Node _module.Node$T@@20)) (and (=> (= (ControlFlow 0 3) (- 0 26)) (or (<= 0 |$decr$loop#00@1|) (= (ite  (or (not (= |nx#0_0@1| null)) (not true)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List))) (- 0 1)) |$decr$loop#00@1|))) (=> (or (<= 0 |$decr$loop#00@1|) (= (ite  (or (not (= |nx#0_0@1| null)) (not true)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List))) (- 0 1)) |$decr$loop#00@1|)) (and (=> (= (ControlFlow 0 3) (- 0 25)) (< (ite  (or (not (= |nx#0_0@1| null)) (not true)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List))) (- 0 1)) |$decr$loop#00@1|)) (=> (< (ite  (or (not (= |nx#0_0@1| null)) (not true)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List))) (- 0 1)) |$decr$loop#00@1|) (=> (and (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (=> (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr))) (=> (=> (= |nx#0_0@1| null) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List))))) (=> (or (not (= |nx#0_0@1| null)) (not true)) (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|)))))) (and (=> (= (ControlFlow 0 3) (- 0 24)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)) ($Box refType |current#0@1|)))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)) ($Box refType |current#0@1|))))) (and (=> (= (ControlFlow 0 3) (- 0 23)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.data)))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.data))))))) (and (=> (= (ControlFlow 0 3) (- 0 22)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)))))) (and (=> (= (ControlFlow 0 3) (- 0 21)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr))))))) (and (=> (= (ControlFlow 0 3) (- 0 20)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next))) _module.Node.Repr)) ($Box refType |current#0@1|)))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next))) _module.Node.Repr)) ($Box refType |current#0@1|))))))) (and (=> (= (ControlFlow 0 3) (- 0 19)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next))) _module.Node.List))))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next))) _module.Node.List)))))))) (and (=> (= (ControlFlow 0 3) (- 0 18)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.next))))))) (and (=> (= (ControlFlow 0 3) (- 0 17)) (=> |$w$loop#0@0| (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr))))) (=> (=> |$w$loop#0@0| (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (and (=> (= (ControlFlow 0 3) (- 0 16)) (=> |$w$loop#0@0| (=> (= |nx#0_0@1| null) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List))))))) (=> (=> |$w$loop#0@0| (=> (= |nx#0_0@1| null) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List)))))) (and (=> (= (ControlFlow 0 3) (- 0 15)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)) ($Box refType |nx#0_0@1|))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)) ($Box refType |nx#0_0@1|)))))) (and (=> (= (ControlFlow 0 3) (- 0 14)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.data))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.data)))))))) (and (=> (= (ControlFlow 0 3) (- 0 13)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next))))))) (and (=> (= (ControlFlow 0 3) (- 0 12)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)))))))) (and (=> (= (ControlFlow 0 3) (- 0 11)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next))) _module.Node.Repr)) ($Box refType |nx#0_0@1|))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next))) _module.Node.Repr)) ($Box refType |nx#0_0@1|)))))))) (and (=> (= (ControlFlow 0 3) (- 0 10)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next))) _module.Node.List)))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next))) _module.Node.List))))))))) (and (=> (= (ControlFlow 0 3) (- 0 9)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@6 |nx#0_0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@6 |nx#0_0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@6 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.next)))))))) (and (=> (= (ControlFlow 0 3) (- 0 8)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |nx#0_0@1|))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |nx#0_0@1|)))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr))))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (|Set#Disjoint| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr)))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (|Set#Disjoint| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.Repr))))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (+ (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List)))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (+ (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List))))))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List)) (|Seq#Drop| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List)))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |nx#0_0@1| null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |nx#0_0@1|) _module.Node.List)) (|Seq#Drop| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List))))))) (=> (= (ControlFlow 0 3) (- 0 2)) (=> |$w$loop#0@0| (forall ((|i#3@@0| Int) ) (!  (=> (and (<= (LitInt 0) |i#3@@0|) (< |i#3@@0| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List))))) (= (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List)) |i#3@@0|) (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (- (- (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List))) 1) |i#3@@0|))))
 :pattern ( (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@6 |current#0@1|) _module.Node.List)) |i#3@@0|))
))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((anon30_Else_correct  (=> |$w$loop#0@0| (and (=> (= (ControlFlow 0 55) 53) anon43_Then_correct) (=> (= (ControlFlow 0 55) 3) anon43_Else_correct)))))
(let ((anon29_LoopBody_correct  (and (=> (= (ControlFlow 0 121) 118) anon30_Then_correct) (=> (= (ControlFlow 0 121) 55) anon30_Else_correct))))
(let ((anon29_LoopDone_correct true))
(let ((anon29_LoopHead_correct  (=> (and ($Is refType |nx#0_0@0| (Tclass._module.Node? _module.Node$T@@20)) ($IsAlloc refType |nx#0_0@0| (Tclass._module.Node? _module.Node$T@@20) $Heap@3)) (=> (and (and (and ($IsGoodHeap $Heap@3) ($IsHeapAnchor $Heap@3)) (=> |defass#reverse#0@0| (and ($Is refType |reverse#0@0| (Tclass._module.Node _module.Node$T@@20)) ($IsAlloc refType |reverse#0@0| (Tclass._module.Node _module.Node$T@@20) $Heap@3)))) (and ($Is refType |current#0@1| (Tclass._module.Node? _module.Node$T@@20)) ($IsAlloc refType |current#0@1| (Tclass._module.Node? _module.Node$T@@20) $Heap@3))) (=> (and (and (and (and (and (and (and |defass#reverse#0@0| (not false)) true) (=> |$w$loop#0@0| (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|))) (and (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)) ($Box refType |reverse#0@0|))))) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.data))))))))) (and (and (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)))))) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)))))))) (and (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next))) _module.Node.Repr)) ($Box refType |reverse#0@0|))))))) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next))) _module.Node.List))))))))))) (and (and (and (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next))))))) (=> |$w$loop#0@0| (and (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |reverse#0@0|) (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |reverse#0@0|) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)) ($Box refType |reverse#0@0|)) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.data))))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) null)) (not true)) (and (and (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)))) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next))) _module.Node.Repr)) ($Box refType |reverse#0@0|)))) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next))) _module.Node.List))))) (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.next)))))))))) (and (=> |$w$loop#0@0| (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (=> |$w$loop#0@0| (=> (= |current#0@1| null) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)))))))) (and (and (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|))) (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) ($Box refType |current#0@1|))))))) (and (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.data)))))))) (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next))))))))))) (and (and (and (and (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)))))))) (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next))) _module.Node.Repr)) ($Box refType |current#0@1|))))))))) (and (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next))) _module.Node.List))))))))) (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)))))))))) (and (and (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (and (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@3 |current#0@1|) (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 |current#0@1|) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) ($Box refType |current#0@1|)) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.data))))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) null)) (not true)) (and (and (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)))) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next))) _module.Node.Repr)) ($Box refType |current#0@1|)))) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next))) _module.Node.List))))) (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@3 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.next)))))))))) (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |current#0@1|))))) (and (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr))))) (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (|Set#Disjoint| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.Repr)))))))) (and (and (and (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (+ (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List))))))) (=> |$w$loop#0@0| (=> (or (not (= |current#0@1| null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List)) (|Seq#Drop| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)))))))) (and (=> |$w$loop#0@0| (forall ((|i#3@@1| Int) ) (!  (=> (and (<= (LitInt 0) |i#3@@1|) (< |i#3@@1| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))))) (= (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)) |i#3@@1|) (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (- (- (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List))) 1) |i#3@@1|))))
 :pattern ( (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |reverse#0@0|) _module.Node.List)) |i#3@@1|))
))) (forall (($o@@11 T@U) ) (!  (=> (and (or (not (= $o@@11 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 $o@@11) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@11) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@11)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType $o@@11))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@11))
)))) (and (and ($HeapSucc $Heap@2 $Heap@3) (forall (($o@@12 T@U) ($f@@1 T@U) ) (!  (=> (and (or (not (= $o@@12 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@12) alloc)))) (or (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@12) $f@@1) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@12) $f@@1)) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@12 $f@@1))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 $o@@12) $f@@1))
))) (and (=> true |defass#reverse#0@0|) (<= (ite  (or (not (= |current#0@1| null)) (not true)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |current#0@1|) _module.Node.List))) (- 0 1)) |$decr_init$loop#00@0|)))))) (and (=> (= (ControlFlow 0 122) 1) anon29_LoopDone_correct) (=> (= (ControlFlow 0 122) 121) anon29_LoopBody_correct)))))))
(let ((anon0_correct  (=> (and (= $_ModifiesFrame@0 (|lambda#8| null $Heap@@1 alloc ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (= |current#0@0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next)))) (and (=> (= (ControlFlow 0 123) (- 0 155)) true) (and (=> (= (ControlFlow 0 123) (- 0 154)) (or (not (= this@@2 null)) (not true))) (=> (or (not (= this@@2 null)) (not true)) (and (=> (= (ControlFlow 0 123) (- 0 153)) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 this@@2 _module.Node.next))) (=> (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 this@@2 _module.Node.next)) (=> (and (= $Heap@0 (MapType0Store refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2 (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next ($Box refType null)))) ($IsGoodHeap $Heap@0)) (and (=> (= (ControlFlow 0 123) (- 0 152)) true) (and (=> (= (ControlFlow 0 123) (- 0 151)) (or (not (= this@@2 null)) (not true))) (=> (or (not (= this@@2 null)) (not true)) (and (=> (= (ControlFlow 0 123) (- 0 150)) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 this@@2 _module.Node.Repr))) (=> (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 this@@2 _module.Node.Repr)) (and (=> (= (ControlFlow 0 123) (- 0 149)) true) (=> (= |$rhs#1@0| (|Set#UnionOne| |Set#Empty| ($Box refType this@@2))) (=> (and (= $Heap@1 (MapType0Store refType (MapType0Type FieldType BoxType) $Heap@0 this@@2 (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 this@@2) _module.Node.Repr ($Box SetType |$rhs#1@0|)))) ($IsGoodHeap $Heap@1)) (and (=> (= (ControlFlow 0 123) (- 0 148)) true) (and (=> (= (ControlFlow 0 123) (- 0 147)) (or (not (= this@@2 null)) (not true))) (=> (or (not (= this@@2 null)) (not true)) (and (=> (= (ControlFlow 0 123) (- 0 146)) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 this@@2 _module.Node.List))) (=> (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 this@@2 _module.Node.List)) (=> (and (and (= |$rhs#2@0| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 this@@2) _module.Node.data))) (= $Heap@2 (MapType0Store refType (MapType0Type FieldType BoxType) $Heap@1 this@@2 (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 this@@2) _module.Node.List ($Box SeqType |$rhs#2@0|))))) (and ($IsGoodHeap $Heap@2) (= |$decr_init$loop#00@0| (ite  (or (not (= |current#0@0| null)) (not true)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List))) (- 0 1))))) (and (=> (= (ControlFlow 0 123) (- 0 145)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr)) ($Box refType this@@2)))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr)) ($Box refType this@@2))))) (and (=> (= (ControlFlow 0 123) (- 0 144)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.data)))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.data))))))) (and (=> (= (ControlFlow 0 123) (- 0 143)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)))))) (and (=> (= (ControlFlow 0 123) (- 0 142)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr)))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr))))))) (and (=> (= (ControlFlow 0 123) (- 0 141)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next))) _module.Node.Repr)) ($Box refType this@@2)))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next))) _module.Node.Repr)) ($Box refType this@@2))))))) (and (=> (= (ControlFlow 0 123) (- 0 140)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next))) _module.Node.List))))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next))) _module.Node.List)))))))) (and (=> (= (ControlFlow 0 123) (- 0 139)) (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)))))))) (=> (=> |$w$loop#0@0| (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 this@@2) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 this@@2) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.next))))))) (and (=> (= (ControlFlow 0 123) (- 0 138)) (=> |$w$loop#0@0| (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr))))) (=> (=> |$w$loop#0@0| (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (and (=> (= (ControlFlow 0 123) (- 0 137)) (=> |$w$loop#0@0| (=> (= |current#0@0| null) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List))))))) (=> (=> |$w$loop#0@0| (=> (= |current#0@0| null) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)))))) (and (=> (= (ControlFlow 0 123) (- 0 136)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)) ($Box refType |current#0@0|))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)) ($Box refType |current#0@0|)))))) (and (=> (= (ControlFlow 0 123) (- 0 135)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.data))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.data)))))))) (and (=> (= (ControlFlow 0 123) (- 0 134)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next))))))) (and (=> (= (ControlFlow 0 123) (- 0 133)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)))))))) (and (=> (= (ControlFlow 0 123) (- 0 132)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next))) _module.Node.Repr)) ($Box refType |current#0@0|))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next))) _module.Node.Repr)) ($Box refType |current#0@0|)))))))) (and (=> (= (ControlFlow 0 123) (- 0 131)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next))) _module.Node.List)))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next))) _module.Node.List))))))))) (and (=> (= (ControlFlow 0 123) (- 0 130)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next))))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (=> (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@2 |current#0@0|) (or (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@2 |current#0@0|) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)) null)) (not true)) (_module.Node.Valid _module.Node$T@@20 ($LS ($LS $LZ)) $Heap@2 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.next)))))))) (and (=> (= (ControlFlow 0 123) (- 0 129)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |current#0@0|))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType |current#0@0|)))) (and (=> (= (ControlFlow 0 123) (- 0 128)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr))))) (and (=> (= (ControlFlow 0 123) (- 0 127)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (|Set#Disjoint| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr)))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (|Set#Disjoint| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.Repr))))) (and (=> (= (ControlFlow 0 123) (- 0 126)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (+ (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List)))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (= (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List))) (+ (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List))) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List))))))) (and (=> (= (ControlFlow 0 123) (- 0 125)) (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List)) (|Seq#Drop| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)))))))) (=> (=> |$w$loop#0@0| (=> (or (not (= |current#0@0| null)) (not true)) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |current#0@0|) _module.Node.List)) (|Seq#Drop| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List))))))) (and (=> (= (ControlFlow 0 123) (- 0 124)) (=> |$w$loop#0@0| (forall ((|i#3@@2| Int) ) (!  (=> (and (<= (LitInt 0) |i#3@@2|) (< |i#3@@2| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List))))) (= (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)) |i#3@@2|) (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (- (- (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List))) 1) |i#3@@2|))))
 :pattern ( (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)) |i#3@@2|))
)))) (=> (=> |$w$loop#0@0| (forall ((|i#3@@3| Int) ) (!  (=> (and (<= (LitInt 0) |i#3@@3|) (< |i#3@@3| (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List))))) (= (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)) |i#3@@3|) (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (- (- (|Seq#Length| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List))) 1) |i#3@@3|))))
 :pattern ( (|Seq#Index| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 this@@2) _module.Node.List)) |i#3@@3|))
))) (=> (= (ControlFlow 0 123) 122) anon29_LoopHead_correct))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((PreconditionGeneratedEntry_correct  (=> (and ($IsGoodHeap $Heap@@1) ($IsHeapAnchor $Heap@@1)) (=> (and (and (and (or (not (= this@@2 null)) (not true)) (and ($Is refType this@@2 (Tclass._module.Node _module.Node$T@@20)) ($IsAlloc refType this@@2 (Tclass._module.Node _module.Node$T@@20) $Heap@@1))) (=> |defass#reverse#0| (and ($Is refType |reverse#0| (Tclass._module.Node _module.Node$T@@20)) ($IsAlloc refType |reverse#0| (Tclass._module.Node _module.Node$T@@20) $Heap@@1)))) (and (and ($Is refType |current#0| (Tclass._module.Node? _module.Node$T@@20)) ($IsAlloc refType |current#0| (Tclass._module.Node? _module.Node$T@@20) $Heap@@1)) true)) (=> (and (and (and (and ($Is refType |nx#0_0| (Tclass._module.Node? _module.Node$T@@20)) ($IsAlloc refType |nx#0_0| (Tclass._module.Node? _module.Node$T@@20) $Heap@@1)) true) (= 1 $FunctionContextHeight)) (and (and (|_module.Node.Valid#canCall| _module.Node$T@@20 $Heap@@1 this@@2) (and (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@@1 this@@2) (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) ($Box refType this@@2)) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next)) null) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.data))))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next)) null)) (not true)) (and (and (and (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next))) _module.Node.Repr)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.Repr)))) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next))) _module.Node.Repr)) ($Box refType this@@2)))) (|Seq#Equal| ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.List)) (|Seq#Append| (|Seq#Build| |Seq#Empty| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.data)) ($Unbox SeqType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next))) _module.Node.List))))) (_module.Node.Valid _module.Node$T@@20 ($LS $LZ) $Heap@@1 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@1 this@@2) _module.Node.next)))))))) (= (ControlFlow 0 156) 123))) anon0_correct)))))
PreconditionGeneratedEntry_correct)))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
