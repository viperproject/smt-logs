(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@71 () Int)
(declare-fun $generated@@72 (T@U T@U T@U) T@U)
(declare-fun $generated@@73 (T@U T@U) Bool)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@89 (T@U) T@U)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@106 (T@U) Int)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@T T@T) T@T)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@129 (T@T) T@T)
(declare-fun $generated@@178 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@187 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@3))
(assert (= ($generated@@35 $generated@@37) $generated@@4))
(assert (= ($generated@@35 $generated@@38) $generated@@5))
(assert (= ($generated@@35 $generated@@39) $generated@@7))
(assert ($generated@@28 $generated@@29 $generated@@36 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@37 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@38 $generated@@32))
(assert ($generated@@28 $generated@@29 $generated@@39 $generated@@31))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@43) (= $generated@@42 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@35 $generated@@48) $generated@@5))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@35 $generated@@50) $generated@@6))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@35 $generated@@52) $generated@@7))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@35 $generated@@54) $generated@@8))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@56 $generated@@58 ($generated@@55 $generated@@58 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@55 $generated@@58 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (!  (=> ($generated@@53 $generated@@59) (exists (($generated@@60 T@U) ($generated@@61 T@U) ) (= $generated@@59 ($generated@@30 $generated@@60 $generated@@61))))
 :pattern ( ($generated@@53 $generated@@59))
)))
(assert (forall (($generated@@62 T@U) ) (!  (=> ($generated@@47 $generated@@62) (= $generated@@62 $generated@@38))
 :pattern ( ($generated@@47 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@51 $generated@@63) (= $generated@@63 $generated@@39))
 :pattern ( ($generated@@51 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@49 $generated@@65) (exists (($generated@@66 T@U) ) (= $generated@@65 ($generated@@64 $generated@@66))))
 :pattern ( ($generated@@49 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@64 $generated@@67) $generated@@32) ($generated@@28 $generated@@29 $generated@@67 $generated@@32))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@64 $generated@@67) $generated@@32))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (and ($generated@@49 $generated@@69) ($generated@@49 $generated@@70)) (= ($generated@@41 $generated@@69 $generated@@70) ($generated@@41 ($generated@@68 $generated@@69) ($generated@@68 $generated@@70))))
 :pattern ( ($generated@@41 $generated@@69 $generated@@70) ($generated@@49 $generated@@69))
 :pattern ( ($generated@@41 $generated@@69 $generated@@70) ($generated@@49 $generated@@70))
)))
(assert  (=> (<= 2 $generated@@71) (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@73 $generated@@75 $generated@@76) (and (< 2 $generated@@71) (and ($generated@@28 $generated@@29 $generated@@75 $generated@@32) ($generated@@28 $generated@@29 $generated@@76 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@72 $generated@@74 $generated@@75 $generated@@76) $generated@@40))
 :pattern ( ($generated@@72 $generated@@74 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@72 ($generated@@77 $generated@@78) $generated@@79 $generated@@80) ($generated@@72 $generated@@78 $generated@@79 $generated@@80))
 :pattern ( ($generated@@72 ($generated@@77 $generated@@78) $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ) (!  (=> ($generated@@81 $generated@@82) (or ($generated@@47 $generated@@82) ($generated@@49 $generated@@82)))
 :pattern ( ($generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@83 $generated@@32) (or ($generated@@47 $generated@@83) ($generated@@49 $generated@@83)))
 :pattern ( ($generated@@49 $generated@@83) ($generated@@28 $generated@@29 $generated@@83 $generated@@32))
 :pattern ( ($generated@@47 $generated@@83) ($generated@@28 $generated@@29 $generated@@83 $generated@@32))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@84 $generated@@31) (or ($generated@@51 $generated@@84) ($generated@@53 $generated@@84)))
 :pattern ( ($generated@@53 $generated@@84) ($generated@@28 $generated@@29 $generated@@84 $generated@@31))
 :pattern ( ($generated@@51 $generated@@84) ($generated@@28 $generated@@29 $generated@@84 $generated@@31))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@47 $generated@@85) ($generated@@47 $generated@@86)) ($generated@@41 $generated@@85 $generated@@86))
 :pattern ( ($generated@@41 $generated@@85 $generated@@86) ($generated@@47 $generated@@85))
 :pattern ( ($generated@@41 $generated@@85 $generated@@86) ($generated@@47 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@35 ($generated@@30 $generated@@87 $generated@@88)) $generated@@8)
 :pattern ( ($generated@@30 $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@89 ($generated@@30 $generated@@90 $generated@@91)) $generated@@90)
 :pattern ( ($generated@@30 $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@92 ($generated@@30 $generated@@93 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@30 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@35 ($generated@@64 $generated@@95)) $generated@@6)
 :pattern ( ($generated@@64 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (! (= ($generated@@68 ($generated@@64 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@64 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@55 $generated@@98 ($generated@@56 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@56 $generated@@98 $generated@@97))
)))
(assert  (=> (<= 2 $generated@@71) (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (=> (or ($generated@@73 $generated@@100 $generated@@101) (and (< 2 $generated@@71) (and ($generated@@28 $generated@@29 $generated@@100 $generated@@32) ($generated@@28 $generated@@29 $generated@@101 $generated@@31)))) (and (=> (not ($generated@@51 $generated@@101)) (let (($generated@@102 ($generated@@92 $generated@@101)))
(let (($generated@@103 ($generated@@89 $generated@@101)))
 (and (and ($generated@@81 $generated@@100) ($generated@@81 $generated@@103)) (=> (not ($generated@@41 $generated@@100 $generated@@103)) ($generated@@73 $generated@@100 $generated@@102)))))) (= ($generated@@72 ($generated@@77 $generated@@99) $generated@@100 $generated@@101) (ite ($generated@@51 $generated@@101) $generated@@36 (let (($generated@@104 ($generated@@92 $generated@@101)))
(let (($generated@@105 ($generated@@89 $generated@@101)))
(ite ($generated@@41 $generated@@100 $generated@@105) $generated@@37 ($generated@@72 $generated@@99 $generated@@100 $generated@@104))))))))
 :pattern ( ($generated@@72 ($generated@@77 $generated@@99) $generated@@100 $generated@@101))
))))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (< ($generated@@106 $generated@@107) ($generated@@106 ($generated@@30 $generated@@107 $generated@@108)))
 :pattern ( ($generated@@30 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (< ($generated@@106 $generated@@110) ($generated@@106 ($generated@@30 $generated@@109 $generated@@110)))
 :pattern ( ($generated@@30 $generated@@109 $generated@@110))
)))
(assert  (=> (<= 2 $generated@@71) (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or ($generated@@73 ($generated@@44 $generated@@29 $generated@@112) ($generated@@44 $generated@@29 $generated@@113)) (and (< 2 $generated@@71) (and ($generated@@28 $generated@@29 $generated@@112 $generated@@32) ($generated@@28 $generated@@29 $generated@@113 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@44 $generated@@13 ($generated@@16 ($generated@@51 ($generated@@44 $generated@@29 $generated@@113)))))) (let (($generated@@114 ($generated@@44 $generated@@29 ($generated@@92 ($generated@@44 $generated@@29 $generated@@113)))))
(let (($generated@@115 ($generated@@44 $generated@@29 ($generated@@89 ($generated@@44 $generated@@29 $generated@@113)))))
 (and (and ($generated@@81 ($generated@@44 $generated@@29 $generated@@112)) ($generated@@81 $generated@@115)) (=> (not ($generated@@41 $generated@@112 $generated@@115)) ($generated@@73 ($generated@@44 $generated@@29 $generated@@112) $generated@@114)))))) (= ($generated@@72 ($generated@@77 $generated@@111) ($generated@@44 $generated@@29 $generated@@112) ($generated@@44 $generated@@29 $generated@@113)) (ite ($generated@@51 ($generated@@44 $generated@@29 $generated@@113)) $generated@@36 (let (($generated@@116 ($generated@@44 $generated@@29 ($generated@@92 ($generated@@44 $generated@@29 $generated@@113)))))
(let (($generated@@117 ($generated@@44 $generated@@29 ($generated@@89 ($generated@@44 $generated@@29 $generated@@113)))))
(ite ($generated@@41 $generated@@112 $generated@@117) $generated@@37 ($generated@@72 ($generated@@77 $generated@@111) ($generated@@44 $generated@@29 $generated@@112) $generated@@116))))))))
 :weight 3
 :pattern ( ($generated@@72 ($generated@@77 $generated@@111) ($generated@@44 $generated@@29 $generated@@112) ($generated@@44 $generated@@29 $generated@@113)))
))))
(assert (forall (($generated@@118 T@U) ) (! (< ($generated@@106 $generated@@118) ($generated@@106 ($generated@@64 $generated@@118)))
 :pattern ( ($generated@@64 $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@119 $generated@@130 $generated@@131 $generated@@132 ($generated@@126 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@135 $generated@@136) $generated@@133)
 :weight 0
)) (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@119 $generated@@137 $generated@@138 $generated@@139 ($generated@@126 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@119 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@119 $generated@@146 $generated@@147 $generated@@148 ($generated@@126 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))) (= ($generated@@12 $generated@@120) 4)) (= ($generated@@12 $generated@@121) 5)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@123 $generated@@155 $generated@@156 ($generated@@127 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@159) $generated@@157)
 :weight 0
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@123 $generated@@160 $generated@@161 ($generated@@127 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@123 $generated@@160 $generated@@161 $generated@@163 $generated@@165)))
 :weight 0
))) (= ($generated@@12 $generated@@124) 6)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@12 ($generated@@125 $generated@@166 $generated@@167)) 7))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@128 ($generated@@125 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@125 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@129 ($generated@@125 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@125 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@17 ($generated@@119 $generated@@120 $generated@@121 $generated@@13 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@17 ($generated@@55 $generated@@13 ($generated@@123 $generated@@121 $generated@@124 ($generated@@123 $generated@@120 ($generated@@125 $generated@@121 $generated@@124) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@13 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> (and ($generated@@179 $generated@@181) ($generated@@28 $generated@@29 $generated@@180 $generated@@40)) ($generated@@178 $generated@@29 $generated@@180 $generated@@40 $generated@@181))
 :pattern ( ($generated@@178 $generated@@29 $generated@@180 $generated@@40 $generated@@181))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@179 $generated@@183) ($generated@@28 $generated@@29 $generated@@182 $generated@@32)) ($generated@@178 $generated@@29 $generated@@182 $generated@@32 $generated@@183))
 :pattern ( ($generated@@178 $generated@@29 $generated@@182 $generated@@32 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@179 $generated@@185) ($generated@@28 $generated@@29 $generated@@184 $generated@@31)) ($generated@@178 $generated@@29 $generated@@184 $generated@@31 $generated@@185))
 :pattern ( ($generated@@178 $generated@@29 $generated@@184 $generated@@31 $generated@@185))
)))
(assert (= ($generated@@186 $generated@@40) $generated@@0))
(assert (= ($generated@@187 $generated@@40) $generated@@9))
(assert (= ($generated@@186 $generated@@32) $generated@@1))
(assert (= ($generated@@187 $generated@@32) $generated@@10))
(assert (= ($generated@@186 $generated@@31) $generated@@2))
(assert (= ($generated@@187 $generated@@31) $generated@@11))
(assert (= $generated@@36 ($generated@@44 $generated@@29 $generated@@36)))
(assert (= $generated@@37 ($generated@@44 $generated@@29 $generated@@37)))
(assert (= $generated@@38 ($generated@@44 $generated@@29 $generated@@38)))
(assert (= $generated@@39 ($generated@@44 $generated@@29 $generated@@39)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and ($generated@@179 $generated@@189) (and ($generated@@49 $generated@@188) ($generated@@178 $generated@@29 $generated@@188 $generated@@32 $generated@@189))) ($generated@@178 $generated@@29 ($generated@@68 $generated@@188) $generated@@32 $generated@@189))
 :pattern ( ($generated@@178 $generated@@29 ($generated@@68 $generated@@188) $generated@@32 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@179 $generated@@191) (and ($generated@@53 $generated@@190) ($generated@@178 $generated@@29 $generated@@190 $generated@@31 $generated@@191))) ($generated@@178 $generated@@29 ($generated@@89 $generated@@190) $generated@@32 $generated@@191))
 :pattern ( ($generated@@178 $generated@@29 ($generated@@89 $generated@@190) $generated@@32 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (!  (=> (and ($generated@@179 $generated@@193) (and ($generated@@53 $generated@@192) ($generated@@178 $generated@@29 $generated@@192 $generated@@31 $generated@@193))) ($generated@@178 $generated@@29 ($generated@@92 $generated@@192) $generated@@31 $generated@@193))
 :pattern ( ($generated@@178 $generated@@29 ($generated@@92 $generated@@192) $generated@@31 $generated@@193))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@30 ($generated@@44 $generated@@29 $generated@@194) ($generated@@44 $generated@@29 $generated@@195)) ($generated@@44 $generated@@29 ($generated@@30 $generated@@194 $generated@@195)))
 :pattern ( ($generated@@30 ($generated@@44 $generated@@29 $generated@@194) ($generated@@44 $generated@@29 $generated@@195)))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@64 ($generated@@44 $generated@@29 $generated@@196)) ($generated@@44 $generated@@29 ($generated@@64 $generated@@196)))
 :pattern ( ($generated@@64 ($generated@@44 $generated@@29 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@T) ) (! (= ($generated@@56 $generated@@198 ($generated@@44 $generated@@198 $generated@@197)) ($generated@@44 $generated@@124 ($generated@@56 $generated@@198 $generated@@197)))
 :pattern ( ($generated@@56 $generated@@198 ($generated@@44 $generated@@198 $generated@@197)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@211  (=> (and (and (not ($generated@@41 $generated@@199 $generated@@200)) ($generated@@178 $generated@@29 $generated@@199 $generated@@32 $generated@@201)) (and ($generated@@178 $generated@@29 $generated@@202 $generated@@31 $generated@@201) (= (ControlFlow 0 6) (- 0 5)))) (or (< ($generated@@106 $generated@@199) ($generated@@106 $generated@@199)) (and (= ($generated@@106 $generated@@199) ($generated@@106 $generated@@199)) (< ($generated@@106 $generated@@202) ($generated@@106 $generated@@203)))))))
(let (($generated@@212 true))
(let (($generated@@213  (=> (= $generated@@203 ($generated@@30 $generated@@204 $generated@@205)) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@204 $generated@@32) ($generated@@28 $generated@@29 $generated@@205 $generated@@31)) (and (= $generated@@206 $generated@@205) ($generated@@28 $generated@@29 $generated@@206 $generated@@31))) (and (and (= $generated@@202 $generated@@206) (= $generated@@207 $generated@@204)) (and ($generated@@28 $generated@@29 $generated@@207 $generated@@32) (= $generated@@200 $generated@@207)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@212) (=> (= (ControlFlow 0 7) 6) $generated@@211))))))
(let (($generated@@214 true))
(let (($generated@@215  (=> (or (not (= $generated@@203 $generated@@39)) (not true)) (and (=> (= (ControlFlow 0 8) 7) $generated@@213) (=> (= (ControlFlow 0 8) 3) $generated@@214)))))
(let (($generated@@216 true))
(let (($generated@@217 true))
(let (($generated@@218  (=> (= $generated@@208 ($generated@@122 $generated@@209 $generated@@201 $generated false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@217) (=> (= (ControlFlow 0 9) 2) $generated@@216)) (=> (= (ControlFlow 0 9) 8) $generated@@215)))))
(let (($generated@@219  (=> (and ($generated@@179 $generated@@201) ($generated@@210 $generated@@201)) (=> (and (and ($generated@@28 $generated@@29 $generated@@199 $generated@@32) ($generated@@28 $generated@@29 $generated@@203 $generated@@31)) (and (= 2 $generated@@71) (= (ControlFlow 0 10) 9))) $generated@@218))))
$generated@@219))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
