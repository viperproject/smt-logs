(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 (T@U T@U) T@U)
(declare-fun $generated@@18 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@36 (T@U T@U) Bool)
(declare-fun $generated@@37 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@T)
(declare-fun $generated@@41 (T@T T@T) T@T)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@44 (T@T) T@T)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U T@U) Bool)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@98 () Int)
(declare-fun $generated@@99 (T@U T@U T@U) Bool)
(declare-fun $generated@@100 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@133 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (forall (($generated@@19 T@U) ($generated@@20 T@U) ) (! ($generated@@18 ($generated@@17 $generated@@19 $generated@@20) $generated@@20)
 :pattern ( ($generated@@17 $generated@@19 $generated@@20))
)))
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ($generated@@23 T@U) ) (!  (=> ($generated@@18 $generated@@21 $generated@@23) ($generated@@18 ($generated@@17 $generated@@21 $generated@@22) $generated@@23))
 :pattern ( ($generated@@17 $generated@@21 $generated@@22) ($generated@@18 $generated@@21 $generated@@23))
)))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 T@U) ) (! (= ($generated@@18 ($generated@@17 $generated@@24 $generated@@25) $generated@@26)  (or (= $generated@@26 $generated@@25) ($generated@@18 $generated@@24 $generated@@26)))
 :pattern ( ($generated@@18 ($generated@@17 $generated@@24 $generated@@25) $generated@@26))
)))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> ($generated@@18 $generated@@29 $generated@@30) (not ($generated@@18 ($generated@@27 $generated@@28 $generated@@29) $generated@@30)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29) ($generated@@18 $generated@@29 $generated@@30))
)))
(assert (forall (($generated@@32 T@U) ) (!  (not ($generated@@18 $generated@@31 $generated@@32))
 :pattern ( ($generated@@18 $generated@@31 $generated@@32))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@18 ($generated@@27 $generated@@33 $generated@@34) $generated@@35)  (and ($generated@@18 $generated@@33 $generated@@35) (not ($generated@@18 $generated@@34 $generated@@35))))
 :pattern ( ($generated@@18 ($generated@@27 $generated@@33 $generated@@34) $generated@@35))
)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@37 $generated@@46 $generated@@47 ($generated@@43 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@50) $generated@@48)
 :weight 0
)) (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (or (= $generated@@55 $generated@@56) (= ($generated@@37 $generated@@51 $generated@@52 ($generated@@43 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@56) ($generated@@37 $generated@@51 $generated@@52 $generated@@54 $generated@@56)))
 :weight 0
))) (= ($generated@@1 $generated@@38) 3)) (= ($generated@@1 $generated@@39) 4)) (= ($generated@@1 $generated@@40) 5)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (= ($generated@@1 ($generated@@41 $generated@@57 $generated@@58)) 6))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@44 ($generated@@41 $generated@@59 $generated@@60)) $generated@@59)
 :pattern ( ($generated@@41 $generated@@59 $generated@@60))
))) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (! (= ($generated@@45 ($generated@@41 $generated@@61 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@41 $generated@@61 $generated@@62))
))))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@36 $generated@@63 $generated@@64) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@63 $generated@@65) $generated@@0))) ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@64 $generated@@65) $generated@@0))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@64 $generated@@65) $generated@@0))
)))
 :pattern ( ($generated@@36 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (! (= ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@18 $generated@@70 $generated@@72) ($generated@@18 $generated@@71 $generated@@72))
 :pattern ( ($generated@@18 $generated@@70 $generated@@72))
 :pattern ( ($generated@@18 $generated@@71 $generated@@72))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@42 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@42 $generated@@75 $generated@@74))
)))
(assert (= ($generated@@1 $generated@@77) 7))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@76 $generated@@77 $generated@@80 ($generated@@78 $generated@@81)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@18 $generated@@80 $generated@@82) ($generated@@79 $generated@@82 $generated@@81))
 :pattern ( ($generated@@18 $generated@@80 $generated@@82))
)))
 :pattern ( ($generated@@76 $generated@@77 $generated@@80 ($generated@@78 $generated@@81)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@83 ($generated@@73 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@84 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@83 ($generated@@73 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> ($generated@@36 $generated@@89 $generated@@90) (=> ($generated@@83 $generated@@91 $generated@@92 $generated@@89) ($generated@@83 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@36 $generated@@89 $generated@@90) ($generated@@83 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (!  (=> ($generated@@36 $generated@@93 $generated@@94) (=> ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@93) ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@94)))
 :pattern ( ($generated@@36 $generated@@93 $generated@@94) ($generated@@84 $generated@@97 $generated@@95 $generated@@96 $generated@@93))
)))
(assert  (=> (<= 1 $generated@@98) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@100 $generated@@103 ($generated@@66 $generated@@39 $generated@@104) ($generated@@66 $generated@@77 $generated@@105)) (and (< 1 $generated@@98) (and ($generated@@79 $generated@@104 $generated@@103) ($generated@@76 $generated@@77 $generated@@105 ($generated@@78 $generated@@103))))) (and (=> ($generated@@18 ($generated@@66 $generated@@77 $generated@@105) ($generated@@66 $generated@@39 $generated@@104)) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@79 $generated@@106 $generated@@103) (and (=> ($generated@@18 ($generated@@66 $generated@@77 $generated@@105) $generated@@106) (=> (or (not (= $generated@@106 $generated@@104)) (not true)) ($generated@@102 $generated@@103 $generated@@106 ($generated@@66 $generated@@39 $generated@@104)))) (=> (=> (and ($generated@@18 ($generated@@66 $generated@@77 $generated@@105) $generated@@106) (or (not (= $generated@@106 $generated@@104)) (not true))) ($generated@@101 $generated@@103 $generated@@106 ($generated@@66 $generated@@39 $generated@@104))) (=> ($generated@@18 ($generated@@66 $generated@@77 $generated@@105) $generated@@106) (=> (or (not (= $generated@@106 $generated@@104)) (not true)) ($generated@@102 $generated@@103 ($generated@@66 $generated@@39 $generated@@104) $generated@@106))))))
 :pattern ( ($generated@@101 $generated@@103 $generated@@104 $generated@@106))
 :pattern ( ($generated@@101 $generated@@103 $generated@@106 $generated@@104))
 :pattern ( ($generated@@18 $generated@@105 $generated@@106))
))) (= ($generated@@99 $generated@@103 ($generated@@66 $generated@@39 $generated@@104) ($generated@@66 $generated@@77 $generated@@105))  (and ($generated@@18 ($generated@@66 $generated@@77 $generated@@105) ($generated@@66 $generated@@39 $generated@@104)) (forall (($generated@@107 T@U) ) (!  (=> ($generated@@79 $generated@@107 $generated@@103) (and (=> (and ($generated@@18 ($generated@@66 $generated@@77 $generated@@105) $generated@@107) (or (not (= $generated@@107 $generated@@104)) (not true))) ($generated@@101 $generated@@103 $generated@@107 ($generated@@66 $generated@@39 $generated@@104))) (=> (and ($generated@@18 ($generated@@66 $generated@@77 $generated@@105) $generated@@107) (or (not (= $generated@@107 $generated@@104)) (not true))) (not ($generated@@101 $generated@@103 ($generated@@66 $generated@@39 $generated@@104) $generated@@107)))))
 :pattern ( ($generated@@101 $generated@@103 $generated@@104 $generated@@107))
 :pattern ( ($generated@@101 $generated@@103 $generated@@107 $generated@@104))
 :pattern ( ($generated@@18 $generated@@105 $generated@@107))
))))))
 :weight 3
 :pattern ( ($generated@@99 $generated@@103 ($generated@@66 $generated@@39 $generated@@104) ($generated@@66 $generated@@77 $generated@@105)))
))))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> ($generated@@108 $generated@@109 $generated@@110) (= $generated@@109 $generated@@110))
 :pattern ( ($generated@@108 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (or (not (= $generated@@111 $generated@@113)) (not true)) (=> (and ($generated@@36 $generated@@111 $generated@@112) ($generated@@36 $generated@@112 $generated@@113)) ($generated@@36 $generated@@111 $generated@@113)))
 :pattern ( ($generated@@36 $generated@@111 $generated@@112) ($generated@@36 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@T) ) (! (= ($generated@@79 ($generated@@73 $generated@@116 $generated@@114) $generated@@115) ($generated@@76 $generated@@116 $generated@@114 $generated@@115))
 :pattern ( ($generated@@79 ($generated@@73 $generated@@116 $generated@@114) $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@84 $generated@@77 $generated@@117 ($generated@@78 $generated@@118) $generated@@119) (forall (($generated@@120 T@U) ) (!  (=> ($generated@@18 $generated@@117 $generated@@120) ($generated@@83 $generated@@120 $generated@@118 $generated@@119))
 :pattern ( ($generated@@18 $generated@@117 $generated@@120))
)))
 :pattern ( ($generated@@84 $generated@@77 $generated@@117 ($generated@@78 $generated@@118) $generated@@119))
)))
(assert  (=> (<= 1 $generated@@98) (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (=> (or ($generated@@100 $generated@@121 $generated@@122 ($generated@@66 $generated@@77 $generated@@123)) (and (< 1 $generated@@98) (and ($generated@@79 $generated@@122 $generated@@121) ($generated@@76 $generated@@77 $generated@@123 ($generated@@78 $generated@@121))))) (and (=> ($generated@@18 ($generated@@66 $generated@@77 $generated@@123) $generated@@122) (forall (($generated@@124 T@U) ) (!  (=> ($generated@@79 $generated@@124 $generated@@121) (and (=> ($generated@@18 ($generated@@66 $generated@@77 $generated@@123) $generated@@124) (=> (or (not (= $generated@@124 $generated@@122)) (not true)) ($generated@@102 $generated@@121 $generated@@124 $generated@@122))) (=> (=> (and ($generated@@18 ($generated@@66 $generated@@77 $generated@@123) $generated@@124) (or (not (= $generated@@124 $generated@@122)) (not true))) ($generated@@101 $generated@@121 $generated@@124 $generated@@122)) (=> ($generated@@18 ($generated@@66 $generated@@77 $generated@@123) $generated@@124) (=> (or (not (= $generated@@124 $generated@@122)) (not true)) ($generated@@102 $generated@@121 $generated@@122 $generated@@124))))))
 :pattern ( ($generated@@101 $generated@@121 $generated@@122 $generated@@124))
 :pattern ( ($generated@@101 $generated@@121 $generated@@124 $generated@@122))
 :pattern ( ($generated@@18 $generated@@123 $generated@@124))
))) (= ($generated@@99 $generated@@121 $generated@@122 ($generated@@66 $generated@@77 $generated@@123))  (and ($generated@@18 ($generated@@66 $generated@@77 $generated@@123) $generated@@122) (forall (($generated@@125 T@U) ) (!  (=> ($generated@@79 $generated@@125 $generated@@121) (and (=> (and ($generated@@18 ($generated@@66 $generated@@77 $generated@@123) $generated@@125) (or (not (= $generated@@125 $generated@@122)) (not true))) ($generated@@101 $generated@@121 $generated@@125 $generated@@122)) (=> (and ($generated@@18 ($generated@@66 $generated@@77 $generated@@123) $generated@@125) (or (not (= $generated@@125 $generated@@122)) (not true))) (not ($generated@@101 $generated@@121 $generated@@122 $generated@@125)))))
 :pattern ( ($generated@@101 $generated@@121 $generated@@122 $generated@@125))
 :pattern ( ($generated@@101 $generated@@121 $generated@@125 $generated@@122))
 :pattern ( ($generated@@18 $generated@@123 $generated@@125))
))))))
 :weight 3
 :pattern ( ($generated@@99 $generated@@121 $generated@@122 ($generated@@66 $generated@@77 $generated@@123)))
))))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@78 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@78 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@78 $generated@@129)) $generated)
 :pattern ( ($generated@@78 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@42 $generated@@131 ($generated@@73 $generated@@131 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@73 $generated@@131 $generated@@130))
)))
(assert  (and (forall (($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@132 $generated@@135 $generated@@136 $generated@@137 ($generated@@134 $generated@@135 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@141 $generated@@138) $generated@@140 $generated@@141) $generated@@138)
 :weight 0
)) (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (or (= $generated@@147 $generated@@149) (= ($generated@@132 $generated@@142 $generated@@143 $generated@@144 ($generated@@134 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@149 $generated@@150) ($generated@@132 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@149 $generated@@150)))
 :weight 0
)) (forall (($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@132 $generated@@151 $generated@@152 $generated@@153 ($generated@@134 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@157 $generated@@154) $generated@@158 $generated@@159) ($generated@@132 $generated@@151 $generated@@152 $generated@@153 $generated@@155 $generated@@158 $generated@@159)))
 :weight 0
)))))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 Bool) ($generated@@164 T@U) ($generated@@165 T@U) ) (! (= ($generated@@6 ($generated@@132 $generated@@40 $generated@@38 $generated@@2 ($generated@@133 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))  (=> (and (or (not (= $generated@@164 $generated@@160)) (not true)) ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@161 $generated@@164) $generated@@162)))) $generated@@163))
 :pattern ( ($generated@@132 $generated@@40 $generated@@38 $generated@@2 ($generated@@133 $generated@@160 $generated@@161 $generated@@162 $generated@@163) $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@79 $generated@@166 ($generated@@78 $generated@@167)) (and (= ($generated@@73 $generated@@77 ($generated@@42 $generated@@77 $generated@@166)) $generated@@166) ($generated@@76 $generated@@77 ($generated@@42 $generated@@77 $generated@@166) ($generated@@78 $generated@@167))))
 :pattern ( ($generated@@79 $generated@@166 ($generated@@78 $generated@@167)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@108 $generated@@168 $generated@@169) (forall (($generated@@170 T@U) ) (! (= ($generated@@18 $generated@@168 $generated@@170) ($generated@@18 $generated@@169 $generated@@170))
 :pattern ( ($generated@@18 $generated@@168 $generated@@170))
 :pattern ( ($generated@@18 $generated@@169 $generated@@170))
)))
 :pattern ( ($generated@@108 $generated@@168 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@T) ) (! (= ($generated@@73 $generated@@172 ($generated@@66 $generated@@172 $generated@@171)) ($generated@@66 $generated@@39 ($generated@@73 $generated@@172 $generated@@171)))
 :pattern ( ($generated@@73 $generated@@172 ($generated@@66 $generated@@172 $generated@@171)))
)))
(assert  (=> (<= 1 $generated@@98) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (or ($generated@@100 $generated@@173 $generated@@174 $generated@@175) (and (< 1 $generated@@98) (and ($generated@@79 $generated@@174 $generated@@173) ($generated@@76 $generated@@77 $generated@@175 ($generated@@78 $generated@@173))))) (and (=> ($generated@@18 $generated@@175 $generated@@174) (forall (($generated@@176 T@U) ) (!  (=> ($generated@@79 $generated@@176 $generated@@173) (and (=> ($generated@@18 $generated@@175 $generated@@176) (=> (or (not (= $generated@@176 $generated@@174)) (not true)) ($generated@@102 $generated@@173 $generated@@176 $generated@@174))) (=> (=> (and ($generated@@18 $generated@@175 $generated@@176) (or (not (= $generated@@176 $generated@@174)) (not true))) ($generated@@101 $generated@@173 $generated@@176 $generated@@174)) (=> ($generated@@18 $generated@@175 $generated@@176) (=> (or (not (= $generated@@176 $generated@@174)) (not true)) ($generated@@102 $generated@@173 $generated@@174 $generated@@176))))))
 :pattern ( ($generated@@101 $generated@@173 $generated@@174 $generated@@176))
 :pattern ( ($generated@@101 $generated@@173 $generated@@176 $generated@@174))
 :pattern ( ($generated@@18 $generated@@175 $generated@@176))
))) (= ($generated@@99 $generated@@173 $generated@@174 $generated@@175)  (and ($generated@@18 $generated@@175 $generated@@174) (forall (($generated@@177 T@U) ) (!  (=> ($generated@@79 $generated@@177 $generated@@173) (and (=> (and ($generated@@18 $generated@@175 $generated@@177) (or (not (= $generated@@177 $generated@@174)) (not true))) ($generated@@101 $generated@@173 $generated@@177 $generated@@174)) (=> (and ($generated@@18 $generated@@175 $generated@@177) (or (not (= $generated@@177 $generated@@174)) (not true))) (not ($generated@@101 $generated@@173 $generated@@174 $generated@@177)))))
 :pattern ( ($generated@@101 $generated@@173 $generated@@174 $generated@@177))
 :pattern ( ($generated@@101 $generated@@173 $generated@@177 $generated@@174))
 :pattern ( ($generated@@18 $generated@@175 $generated@@177))
))))))
 :pattern ( ($generated@@99 $generated@@173 $generated@@174 $generated@@175))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () T@U)
(declare-fun $generated@@180 () T@U)
(declare-fun $generated@@181 () T@U)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Bool)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 (T@U) Bool)
(declare-fun $generated@@201 (T@U) Bool)
(declare-fun $generated@@202 () Bool)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Bool)
(declare-fun $generated@@208 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 44) (let (($generated@@209  (=> (= (ControlFlow 0 28) (- 0 27)) (= $generated@@178 $generated@@179))))
(let (($generated@@210  (=> ($generated@@108 $generated@@180 ($generated@@17 $generated@@31 $generated@@181)) (and (=> (= (ControlFlow 0 29) (- 0 31)) $generated@@182) (=> $generated@@182 (and (=> (= (ControlFlow 0 29) (- 0 30)) true) (=> (and (= $generated@@178 $generated@@181) (= (ControlFlow 0 29) 28)) $generated@@209)))))))
(let (($generated@@211  (and (=> (= (ControlFlow 0 5) (- 0 9)) (exists (($generated@@212 T@U) )  (and ($generated@@79 $generated@@212 $generated@@183) ($generated@@18 $generated@@184 $generated@@212)))) (=> (exists (($generated@@213 T@U) )  (and ($generated@@79 $generated@@213 $generated@@183) ($generated@@18 $generated@@184 $generated@@213))) (=> (and (=> true (and ($generated@@79 $generated@@185 $generated@@183) ($generated@@83 $generated@@185 $generated@@183 $generated@@186))) ($generated@@18 $generated@@184 $generated@@185)) (and (=> (= (ControlFlow 0 5) (- 0 8)) (and ($generated@@69 $generated@@184 $generated@@180) (not ($generated@@69 $generated@@180 $generated@@184)))) (=> (and ($generated@@69 $generated@@184 $generated@@180) (not ($generated@@69 $generated@@180 $generated@@184))) (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@184) (and (=> (= (ControlFlow 0 5) (- 0 7)) (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@184) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@184) ($generated@@18 $generated@@184 $generated@@179))))) (=> (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@184) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@184) ($generated@@18 $generated@@184 $generated@@179)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@184) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@184) (forall (($generated@@214 T@U) ) (!  (=> ($generated@@79 $generated@@214 $generated@@183) (and (=> (and ($generated@@18 $generated@@184 $generated@@214) (or (not (= $generated@@214 $generated@@179)) (not true))) ($generated@@101 $generated@@183 $generated@@214 $generated@@179)) (=> (and ($generated@@18 $generated@@184 $generated@@214) (or (not (= $generated@@214 $generated@@179)) (not true))) (not ($generated@@101 $generated@@183 $generated@@179 $generated@@214)))))
 :pattern ( ($generated@@101 $generated@@183 $generated@@179 $generated@@214))
 :pattern ( ($generated@@101 $generated@@183 $generated@@214 $generated@@179))
 :pattern ( ($generated@@18 $generated@@184 $generated@@214))
)))))) (=> (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@184) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@184) (forall (($generated@@215 T@U) ) (!  (=> ($generated@@79 $generated@@215 $generated@@183) (and (=> (and ($generated@@18 $generated@@184 $generated@@215) (or (not (= $generated@@215 $generated@@179)) (not true))) ($generated@@101 $generated@@183 $generated@@215 $generated@@179)) (=> (and ($generated@@18 $generated@@184 $generated@@215) (or (not (= $generated@@215 $generated@@179)) (not true))) (not ($generated@@101 $generated@@183 $generated@@179 $generated@@215)))))
 :pattern ( ($generated@@101 $generated@@183 $generated@@179 $generated@@215))
 :pattern ( ($generated@@101 $generated@@183 $generated@@215 $generated@@179))
 :pattern ( ($generated@@18 $generated@@184 $generated@@215))
))))) (=> (= (ControlFlow 0 5) (- 0 4)) (=> $generated@@187 ($generated@@18 $generated@@184 $generated@@185)))))))))))))))
(let (($generated@@216  (=> (and (not (and ($generated@@79 $generated@@188 $generated@@183) ($generated@@83 $generated@@188 $generated@@183 $generated@@186))) (= (ControlFlow 0 11) 5)) $generated@@211)))
(let (($generated@@217  (=> (and (and ($generated@@79 $generated@@188 $generated@@183) ($generated@@83 $generated@@188 $generated@@183 $generated@@186)) (= (ControlFlow 0 10) 5)) $generated@@211)))
(let (($generated@@218  (=> (not ($generated@@101 $generated@@183 $generated@@181 $generated@@189)) (and (=> (= (ControlFlow 0 14) (- 0 17)) true) (=> (= $generated@@190 ($generated@@27 $generated@@180 ($generated@@17 $generated@@31 $generated@@189))) (and (=> (= (ControlFlow 0 14) (- 0 16)) $generated@@182) (=> $generated@@182 (and (=> (= (ControlFlow 0 14) (- 0 15)) ($generated@@18 $generated@@190 $generated@@181)) (=> ($generated@@18 $generated@@190 $generated@@181) (=> (= $generated@@184 $generated@@190) (and (=> (= (ControlFlow 0 14) 10) $generated@@217) (=> (= (ControlFlow 0 14) 11) $generated@@216))))))))))))
(let (($generated@@219  (=> ($generated@@101 $generated@@183 $generated@@181 $generated@@189) (and (=> (= (ControlFlow 0 12) (- 0 13)) $generated@@182) (=> $generated@@182 (=> (and (= $generated@@191 ($generated@@27 $generated@@180 ($generated@@17 $generated@@31 $generated@@181))) (= $generated@@184 $generated@@191)) (and (=> (= (ControlFlow 0 12) 10) $generated@@217) (=> (= (ControlFlow 0 12) 11) $generated@@216))))))))
(let (($generated@@220  (and (=> (= (ControlFlow 0 18) (- 0 22)) (exists (($generated@@221 T@U) )  (and ($generated@@79 $generated@@221 $generated@@183) ($generated@@18 ($generated@@27 $generated@@180 ($generated@@17 $generated@@31 $generated@@181)) $generated@@221)))) (=> (exists (($generated@@222 T@U) )  (and ($generated@@79 $generated@@222 $generated@@183) ($generated@@18 ($generated@@27 $generated@@180 ($generated@@17 $generated@@31 $generated@@181)) $generated@@222))) (=> (and (=> true (and ($generated@@79 $generated@@189 $generated@@183) ($generated@@83 $generated@@189 $generated@@183 $generated@@186))) ($generated@@18 ($generated@@27 $generated@@180 ($generated@@17 $generated@@31 $generated@@181)) $generated@@189)) (and (=> (= (ControlFlow 0 18) (- 0 21)) $generated@@182) (=> $generated@@182 (=> ($generated@@83 $generated@@181 $generated@@183 $generated@@186) (and (=> (= (ControlFlow 0 18) (- 0 20)) true) (=> ($generated@@83 $generated@@189 $generated@@183 $generated@@186) (and (=> (= (ControlFlow 0 18) (- 0 19)) (or (not (= $generated@@181 $generated@@189)) (not true))) (=> (or (not (= $generated@@181 $generated@@189)) (not true)) (=> (and ($generated@@102 $generated@@183 $generated@@181 $generated@@189) ($generated@@102 $generated@@183 $generated@@181 $generated@@189)) (and (=> (= (ControlFlow 0 18) 12) $generated@@219) (=> (= (ControlFlow 0 18) 14) $generated@@218)))))))))))))))
(let (($generated@@223  (=> (and (not (and ($generated@@79 $generated@@192 $generated@@183) ($generated@@83 $generated@@192 $generated@@183 $generated@@186))) (= (ControlFlow 0 25) 18)) $generated@@220)))
(let (($generated@@224  (=> (and ($generated@@79 $generated@@192 $generated@@183) ($generated@@83 $generated@@192 $generated@@183 $generated@@186)) (and (=> (= (ControlFlow 0 23) (- 0 24)) $generated@@182) (=> $generated@@182 (=> (= (ControlFlow 0 23) 18) $generated@@220))))))
(let (($generated@@225  (=> (not ($generated@@108 $generated@@180 ($generated@@17 $generated@@31 $generated@@181))) (and (=> (= (ControlFlow 0 26) 23) $generated@@224) (=> (= (ControlFlow 0 26) 25) $generated@@223)))))
(let (($generated@@226  (=> $generated@@187 (and (=> (= (ControlFlow 0 32) (- 0 33)) $generated@@182) (=> $generated@@182 (and (=> (= (ControlFlow 0 32) 29) $generated@@210) (=> (= (ControlFlow 0 32) 26) $generated@@225)))))))
(let (($generated@@227  (=> (not $generated@@187) (=> (and ($generated@@83 $generated@@179 $generated@@183 $generated@@186) ($generated@@84 $generated@@77 $generated@@180 ($generated@@78 $generated@@183) $generated@@186)) (=> (and (and ($generated@@100 $generated@@183 $generated@@179 $generated@@180) ($generated@@100 $generated@@183 $generated@@179 $generated@@180)) (and ($generated@@99 $generated@@183 $generated@@179 $generated@@180) (= (ControlFlow 0 3) (- 0 2)))) $generated@@182)))))
(let (($generated@@228  (and (=> (= (ControlFlow 0 34) 3) $generated@@227) (=> (= (ControlFlow 0 34) 32) $generated@@226))))
(let (($generated@@229 true))
(let (($generated@@230  (=> (=> $generated@@182 (and ($generated@@79 $generated@@181 $generated@@183) ($generated@@83 $generated@@181 $generated@@183 $generated@@186))) (=> (and (and ($generated@@76 $generated@@77 $generated@@180 ($generated@@78 $generated@@183)) ($generated@@84 $generated@@77 $generated@@180 ($generated@@78 $generated@@183) $generated@@186)) (=> $generated@@193 (and ($generated@@79 $generated@@194 $generated@@183) ($generated@@83 $generated@@194 $generated@@183 $generated@@186)))) (=> (and (and (and (and (not false) $generated@@182) true) (and (=> $generated@@187 ($generated@@100 $generated@@183 $generated@@179 $generated@@180)) (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@180) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@180) ($generated@@18 $generated@@180 $generated@@179)))))) (and (and (and (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@180) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@180) (forall (($generated@@231 T@U) ) (!  (=> ($generated@@79 $generated@@231 $generated@@183) (and (=> (and ($generated@@18 $generated@@180 $generated@@231) (or (not (= $generated@@231 $generated@@179)) (not true))) ($generated@@101 $generated@@183 $generated@@231 $generated@@179)) (=> (and ($generated@@18 $generated@@180 $generated@@231) (or (not (= $generated@@231 $generated@@179)) (not true))) (not ($generated@@101 $generated@@183 $generated@@179 $generated@@231)))))
 :pattern ( ($generated@@101 $generated@@183 $generated@@179 $generated@@231))
 :pattern ( ($generated@@101 $generated@@183 $generated@@231 $generated@@179))
 :pattern ( ($generated@@18 $generated@@180 $generated@@231))
))))) (=> $generated@@187 (and ($generated@@100 $generated@@183 $generated@@179 $generated@@180) (and ($generated@@99 $generated@@183 $generated@@179 $generated@@180) (and ($generated@@18 $generated@@180 $generated@@179) (forall (($generated@@232 T@U) ) (!  (=> ($generated@@79 $generated@@232 $generated@@183) (and (=> (and ($generated@@18 $generated@@180 $generated@@232) (or (not (= $generated@@232 $generated@@179)) (not true))) ($generated@@101 $generated@@183 $generated@@232 $generated@@179)) (=> (and ($generated@@18 $generated@@180 $generated@@232) (or (not (= $generated@@232 $generated@@179)) (not true))) (not ($generated@@101 $generated@@183 $generated@@179 $generated@@232)))))
 :pattern ( ($generated@@101 $generated@@183 $generated@@179 $generated@@232))
 :pattern ( ($generated@@101 $generated@@183 $generated@@232 $generated@@179))
 :pattern ( ($generated@@18 $generated@@180 $generated@@232))
))))))) (and (=> $generated@@187 ($generated@@18 $generated@@180 $generated@@181)) (forall (($generated@@233 T@U) ) (!  (=> (and (or (not (= $generated@@233 $generated@@195)) (not true)) ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@186 $generated@@233) $generated@@0)))) (= ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@186 $generated@@233) ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@186 $generated@@233)))
 :pattern ( ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@186 $generated@@233))
)))) (and (and ($generated@@36 $generated@@186 $generated@@186) (forall (($generated@@234 T@U) ($generated@@235 T@U) ) (!  (=> (and (or (not (= $generated@@234 $generated@@195)) (not true)) ($generated@@6 ($generated@@42 $generated@@2 ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@186 $generated@@234) $generated@@0)))) (or (= ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@186 $generated@@234) $generated@@235) ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@186 $generated@@234) $generated@@235)) ($generated@@6 ($generated@@132 $generated@@40 $generated@@38 $generated@@2 $generated@@196 $generated@@234 $generated@@235))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39 ($generated@@37 $generated@@40 ($generated@@41 $generated@@38 $generated@@39) $generated@@186 $generated@@234) $generated@@235))
))) (and (=> true $generated@@182) ($generated@@69 $generated@@180 $generated@@197))))) (and (=> (= (ControlFlow 0 35) 1) $generated@@229) (=> (= (ControlFlow 0 35) 34) $generated@@228)))))))
(let (($generated@@236  (and (=> (= (ControlFlow 0 36) (- 0 40)) (exists (($generated@@237 T@U) )  (and ($generated@@79 $generated@@237 $generated@@183) ($generated@@18 $generated@@197 $generated@@237)))) (=> (exists (($generated@@238 T@U) )  (and ($generated@@79 $generated@@238 $generated@@183) ($generated@@18 $generated@@197 $generated@@238))) (=> (and (=> true (and ($generated@@79 $generated@@198 $generated@@183) ($generated@@83 $generated@@198 $generated@@183 $generated@@186))) ($generated@@18 $generated@@197 $generated@@198)) (and (=> (= (ControlFlow 0 36) (- 0 39)) (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@197) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@197) ($generated@@18 $generated@@197 $generated@@179))))) (=> (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@197) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@197) ($generated@@18 $generated@@197 $generated@@179)))) (and (=> (= (ControlFlow 0 36) (- 0 38)) (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@197) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@197) (forall (($generated@@239 T@U) ) (!  (=> ($generated@@79 $generated@@239 $generated@@183) (and (=> (and ($generated@@18 $generated@@197 $generated@@239) (or (not (= $generated@@239 $generated@@179)) (not true))) ($generated@@101 $generated@@183 $generated@@239 $generated@@179)) (=> (and ($generated@@18 $generated@@197 $generated@@239) (or (not (= $generated@@239 $generated@@179)) (not true))) (not ($generated@@101 $generated@@183 $generated@@179 $generated@@239)))))
 :pattern ( ($generated@@101 $generated@@183 $generated@@179 $generated@@239))
 :pattern ( ($generated@@101 $generated@@183 $generated@@239 $generated@@179))
 :pattern ( ($generated@@18 $generated@@197 $generated@@239))
)))))) (=> (=> $generated@@187 (=> ($generated@@100 $generated@@183 $generated@@179 $generated@@197) (or ($generated@@99 $generated@@183 $generated@@179 $generated@@197) (forall (($generated@@240 T@U) ) (!  (=> ($generated@@79 $generated@@240 $generated@@183) (and (=> (and ($generated@@18 $generated@@197 $generated@@240) (or (not (= $generated@@240 $generated@@179)) (not true))) ($generated@@101 $generated@@183 $generated@@240 $generated@@179)) (=> (and ($generated@@18 $generated@@197 $generated@@240) (or (not (= $generated@@240 $generated@@179)) (not true))) (not ($generated@@101 $generated@@183 $generated@@179 $generated@@240)))))
 :pattern ( ($generated@@101 $generated@@183 $generated@@179 $generated@@240))
 :pattern ( ($generated@@101 $generated@@183 $generated@@240 $generated@@179))
 :pattern ( ($generated@@18 $generated@@197 $generated@@240))
))))) (and (=> (= (ControlFlow 0 36) (- 0 37)) (=> $generated@@187 ($generated@@18 $generated@@197 $generated@@198))) (=> (=> $generated@@187 ($generated@@18 $generated@@197 $generated@@198)) (=> (= (ControlFlow 0 36) 35) $generated@@230))))))))))))
(let (($generated@@241  (=> (and (not (and ($generated@@79 $generated@@199 $generated@@183) ($generated@@83 $generated@@199 $generated@@183 $generated@@186))) (= (ControlFlow 0 42) 36)) $generated@@236)))
(let (($generated@@242  (=> (and (and ($generated@@79 $generated@@199 $generated@@183) ($generated@@83 $generated@@199 $generated@@183 $generated@@186)) (= (ControlFlow 0 41) 36)) $generated@@236)))
(let (($generated@@243  (=> (= $generated@@196 ($generated@@133 $generated@@195 $generated@@186 $generated@@0 false)) (and (=> (= (ControlFlow 0 43) 41) $generated@@242) (=> (= (ControlFlow 0 43) 42) $generated@@241)))))
(let (($generated@@244  (=> (and (and (and ($generated@@200 $generated@@186) ($generated@@201 $generated@@186)) (and ($generated@@76 $generated@@77 $generated@@197 ($generated@@78 $generated@@183)) ($generated@@84 $generated@@77 $generated@@197 ($generated@@78 $generated@@183) $generated@@186))) (and (and ($generated@@79 $generated@@179 $generated@@183) ($generated@@83 $generated@@179 $generated@@183 $generated@@186)) (=> $generated@@202 (and ($generated@@79 $generated@@203 $generated@@183) ($generated@@83 $generated@@203 $generated@@183 $generated@@186))))) (=> (and (and (and (and ($generated@@76 $generated@@77 $generated@@204 ($generated@@78 $generated@@183)) ($generated@@84 $generated@@77 $generated@@204 ($generated@@78 $generated@@183) $generated@@186)) true) (and (=> $generated@@205 (and ($generated@@79 $generated@@206 $generated@@183) ($generated@@83 $generated@@206 $generated@@183 $generated@@186))) true)) (and (and (and (=> $generated@@207 (and ($generated@@79 $generated@@208 $generated@@183) ($generated@@83 $generated@@208 $generated@@183 $generated@@186))) true) (= 2 $generated@@98)) (and (and ($generated@@100 $generated@@183 $generated@@179 $generated@@197) (and ($generated@@99 $generated@@183 $generated@@179 $generated@@197) (and ($generated@@18 $generated@@197 $generated@@179) (forall (($generated@@245 T@U) ) (!  (=> ($generated@@79 $generated@@245 $generated@@183) (and (=> (and ($generated@@18 $generated@@197 $generated@@245) (or (not (= $generated@@245 $generated@@179)) (not true))) ($generated@@101 $generated@@183 $generated@@245 $generated@@179)) (=> (and ($generated@@18 $generated@@197 $generated@@245) (or (not (= $generated@@245 $generated@@179)) (not true))) (not ($generated@@101 $generated@@183 $generated@@179 $generated@@245)))))
 :pattern ( ($generated@@101 $generated@@183 $generated@@179 $generated@@245))
 :pattern ( ($generated@@101 $generated@@183 $generated@@245 $generated@@179))
 :pattern ( ($generated@@18 $generated@@197 $generated@@245))
))))) (= (ControlFlow 0 44) 43)))) $generated@@243))))
$generated@@244))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
