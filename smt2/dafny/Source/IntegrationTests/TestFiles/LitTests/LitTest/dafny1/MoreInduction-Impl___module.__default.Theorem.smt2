(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) Bool)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@35 () Int)
(declare-fun $generated@@36 (T@U T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@56 (T@U T@U) T@U)
(declare-fun $generated@@57 (T@U T@U) Bool)
(declare-fun $generated@@58 (T@U T@U T@U) Bool)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@60 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@61 () T@U)
(declare-fun $generated@@64 (T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@U) Int)
(declare-fun $generated@@69 () T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U T@U) T@U)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@79 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@87 (T@U) Bool)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U Int) T@U)
(declare-fun $generated@@94 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@119 (T@U) T@U)
(declare-fun $generated@@122 (T@U T@U) T@U)
(declare-fun $generated@@135 (T@U T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(declare-fun $generated@@148 (T@U) Bool)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@182 (T@U) T@U)
(declare-fun $generated@@202 (T@U) Int)
(declare-fun $generated@@220 (T@U) Int)
(declare-fun $generated@@226 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@227 () T@T)
(declare-fun $generated@@228 () T@T)
(declare-fun $generated@@229 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@230 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@231 (T@T T@T) T@T)
(declare-fun $generated@@232 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@233 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@234 (T@T) T@T)
(declare-fun $generated@@235 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(declare-fun $generated@@352 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@26) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@34) (= ($generated@@25 $generated@@26 ($generated@@27 $generated@@32 $generated@@33) ($generated@@28 $generated@@31) $generated@@34)  (and ($generated@@25 $generated@@26 $generated@@32 ($generated@@30 $generated@@31) $generated@@34) ($generated@@25 $generated@@26 $generated@@33 ($generated@@28 $generated@@31) $generated@@34))))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@27 $generated@@32 $generated@@33) ($generated@@28 $generated@@31) $generated@@34))
)))
(assert (= ($generated@@9 $generated@@45) 4))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@39 $generated@@46 ($generated@@38 $generated@@26 $generated@@48)) (and (< 1 $generated@@35) ($generated@@40 $generated@@26 $generated@@48 ($generated@@28 $generated@@46)))) (and (=> (not ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 ($generated@@41 ($generated@@38 $generated@@26 $generated@@48)))))) (let (($generated@@49 ($generated@@38 $generated@@26 ($generated@@42 ($generated@@38 $generated@@26 $generated@@48)))))
(let (($generated@@50 ($generated@@38 $generated@@26 ($generated@@43 ($generated@@38 $generated@@26 $generated@@48)))))
 (=> ($generated@@44 $generated@@50) ($generated@@39 $generated@@46 $generated@@49))))) (= ($generated@@36 $generated@@46 ($generated@@37 $generated@@47) ($generated@@38 $generated@@26 $generated@@48)) (ite ($generated@@41 ($generated@@38 $generated@@26 $generated@@48)) true (let (($generated@@51 ($generated@@38 $generated@@26 ($generated@@42 ($generated@@38 $generated@@26 $generated@@48)))))
(let (($generated@@52 ($generated@@38 $generated@@26 ($generated@@43 ($generated@@38 $generated@@26 $generated@@48)))))
(ite ($generated@@44 $generated@@52) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 ($generated@@36 $generated@@46 ($generated@@37 $generated@@47) $generated@@51)))) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 false))))))))))
 :weight 3
 :pattern ( ($generated@@36 $generated@@46 ($generated@@37 $generated@@47) ($generated@@38 $generated@@26 $generated@@48)))
))))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@36 $generated@@53 ($generated@@37 $generated@@54) $generated@@55) ($generated@@36 $generated@@53 $generated@@54 $generated@@55))
 :pattern ( ($generated@@36 $generated@@53 ($generated@@37 $generated@@54) $generated@@55))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (or ($generated@@57 $generated@@62 ($generated@@38 $generated@@26 $generated@@63)) (and (< 3 $generated@@35) ($generated@@40 $generated@@26 $generated@@63 ($generated@@28 $generated@@62)))) (and ($generated@@58 $generated@@62 ($generated@@38 $generated@@26 $generated@@63) ($generated@@38 $generated@@26 $generated@@59)) (= ($generated@@56 $generated@@62 ($generated@@38 $generated@@26 $generated@@63)) ($generated@@38 $generated@@26 ($generated@@60 $generated@@62 ($generated@@37 $generated@@61) ($generated@@38 $generated@@26 $generated@@63) ($generated@@38 $generated@@26 $generated@@59))))))
 :weight 3
 :pattern ( ($generated@@56 $generated@@62 ($generated@@38 $generated@@26 $generated@@63)))
))))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (! (= ($generated@@64 $generated@@65 ($generated@@37 $generated@@66) $generated@@67) ($generated@@64 $generated@@65 $generated@@66 $generated@@67))
 :pattern ( ($generated@@64 $generated@@65 ($generated@@37 $generated@@66) $generated@@67))
)))
(assert (= ($generated@@68 $generated@@69) 0))
(assert (= ($generated@@70 $generated@@59) $generated@@3))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> ($generated@@29 $generated@@72) ($generated@@25 $generated@@26 $generated@@59 ($generated@@28 $generated@@71) $generated@@72))
 :pattern ( ($generated@@25 $generated@@26 $generated@@59 ($generated@@28 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ) (! ($generated@@40 $generated@@26 $generated@@59 ($generated@@28 $generated@@73))
 :pattern ( ($generated@@40 $generated@@26 $generated@@59 ($generated@@28 $generated@@73)))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@38 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@38 $generated@@75 $generated@@74))
)))
(assert (= ($generated@@9 $generated@@76) 5))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (and ($generated@@40 $generated@@76 $generated@@80 ($generated@@78 $generated@@82)) ($generated@@79 $generated@@81 $generated@@82)) ($generated@@40 $generated@@76 ($generated@@77 $generated@@80 $generated@@81) ($generated@@78 $generated@@82)))
 :pattern ( ($generated@@40 $generated@@76 ($generated@@77 $generated@@80 $generated@@81) ($generated@@78 $generated@@82)))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@41 $generated@@83) (= ($generated@@70 $generated@@83) $generated@@3))
 :pattern ( ($generated@@41 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ) (! (= ($generated@@84 $generated@@85) (= ($generated@@70 $generated@@85) $generated@@4))
 :pattern ( ($generated@@84 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@44 $generated@@86) (= ($generated@@70 $generated@@86) $generated@@5))
 :pattern ( ($generated@@44 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ) (! (= ($generated@@87 $generated@@88) (= ($generated@@70 $generated@@88) $generated@@6))
 :pattern ( ($generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@89 $generated@@91 $generated@@92)  (and (= ($generated@@68 $generated@@91) ($generated@@68 $generated@@92)) (forall (($generated@@93 Int) ) (!  (=> (and (<= 0 $generated@@93) (< $generated@@93 ($generated@@68 $generated@@91))) (= ($generated@@90 $generated@@91 $generated@@93) ($generated@@90 $generated@@92 $generated@@93)))
 :pattern ( ($generated@@90 $generated@@91 $generated@@93))
 :pattern ( ($generated@@90 $generated@@92 $generated@@93))
))))
 :pattern ( ($generated@@89 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 ($generated@@94 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@94 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@84 $generated@@98) (exists (($generated@@99 T@U) ($generated@@100 T@U) ) (= $generated@@98 ($generated@@27 $generated@@99 $generated@@100))))
 :pattern ( ($generated@@84 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@40 $generated@@26 ($generated@@27 $generated@@102 $generated@@103) ($generated@@28 $generated@@101))  (and ($generated@@40 $generated@@26 $generated@@102 ($generated@@30 $generated@@101)) ($generated@@40 $generated@@26 $generated@@103 ($generated@@28 $generated@@101))))
 :pattern ( ($generated@@40 $generated@@26 ($generated@@27 $generated@@102 $generated@@103) ($generated@@28 $generated@@101)))
)))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@41 $generated@@104) (= $generated@@104 $generated@@59))
 :pattern ( ($generated@@41 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@44 $generated@@106) (exists (($generated@@107 T@U) ) (= $generated@@106 ($generated@@105 $generated@@107))))
 :pattern ( ($generated@@44 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@87 $generated@@109) (exists (($generated@@110 T@U) ) (= $generated@@109 ($generated@@108 $generated@@110))))
 :pattern ( ($generated@@87 $generated@@109))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@68 ($generated@@77 $generated@@111 $generated@@112)) (+ 1 ($generated@@68 $generated@@111)))
 :pattern ( ($generated@@77 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@113 ($generated@@95 $generated@@117 $generated@@114) $generated@@115 $generated@@116) ($generated@@25 $generated@@117 $generated@@114 $generated@@115 $generated@@116))
 :pattern ( ($generated@@113 ($generated@@95 $generated@@117 $generated@@114) $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@120 T@U) ) (!  (and (= ($generated@@118 ($generated@@28 $generated@@120)) $generated@@1) (= ($generated@@119 ($generated@@28 $generated@@120)) $generated@@7))
 :pattern ( ($generated@@28 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ) (!  (and (= ($generated@@118 ($generated@@30 $generated@@121)) $generated@@2) (= ($generated@@119 ($generated@@30 $generated@@121)) $generated@@8))
 :pattern ( ($generated@@30 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@68 ($generated@@122 $generated@@123 $generated@@124)) (+ ($generated@@68 $generated@@123) ($generated@@68 $generated@@124)))
 :pattern ( ($generated@@68 ($generated@@122 $generated@@123 $generated@@124)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 Int) ($generated@@127 T@U) ) (!  (and (=> (= $generated@@126 ($generated@@68 $generated@@125)) (= ($generated@@90 ($generated@@77 $generated@@125 $generated@@127) $generated@@126) $generated@@127)) (=> (or (not (= $generated@@126 ($generated@@68 $generated@@125))) (not true)) (= ($generated@@90 ($generated@@77 $generated@@125 $generated@@127) $generated@@126) ($generated@@90 $generated@@125 $generated@@126))))
 :pattern ( ($generated@@90 ($generated@@77 $generated@@125 $generated@@127) $generated@@126))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (=> (or ($generated@@58 $generated@@128 $generated@@130 $generated@@131) (and (< 2 $generated@@35) (and (and ($generated@@40 $generated@@26 $generated@@130 ($generated@@28 $generated@@128)) ($generated@@40 $generated@@26 $generated@@131 ($generated@@28 $generated@@128))) ($generated@@36 $generated@@128 ($generated@@37 $generated@@61) $generated@@131)))) (and ($generated@@36 $generated@@128 ($generated@@37 $generated@@61) ($generated@@60 $generated@@128 $generated@@129 $generated@@130 $generated@@131)) ($generated@@40 $generated@@26 ($generated@@60 $generated@@128 $generated@@129 $generated@@130 $generated@@131) ($generated@@28 $generated@@128))))
 :pattern ( ($generated@@60 $generated@@128 $generated@@129 $generated@@130 $generated@@131))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> ($generated@@29 $generated@@134) (= ($generated@@25 $generated@@26 ($generated@@105 $generated@@133) ($generated@@30 $generated@@132) $generated@@134) ($generated@@113 $generated@@133 $generated@@132 $generated@@134)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@105 $generated@@133) ($generated@@30 $generated@@132) $generated@@134))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or ($generated@@135 $generated@@138 ($generated@@38 $generated@@26 $generated@@140)) (and (< 1 $generated@@35) ($generated@@40 $generated@@26 $generated@@140 ($generated@@28 $generated@@138)))) (and (=> (not ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 ($generated@@41 ($generated@@38 $generated@@26 $generated@@140)))))) (let (($generated@@141 ($generated@@38 $generated@@26 ($generated@@42 ($generated@@38 $generated@@26 $generated@@140)))))
(let (($generated@@142 ($generated@@38 $generated@@26 ($generated@@43 ($generated@@38 $generated@@26 $generated@@140)))))
 (and (=> ($generated@@44 $generated@@142) ($generated@@135 $generated@@138 $generated@@141)) (=> (not ($generated@@44 $generated@@142)) (let (($generated@@143 ($generated@@136 $generated@@142)))
 (and ($generated@@135 $generated@@138 $generated@@143) ($generated@@135 $generated@@138 $generated@@141)))))))) (= ($generated@@64 $generated@@138 ($generated@@37 $generated@@139) ($generated@@38 $generated@@26 $generated@@140)) (ite ($generated@@41 ($generated@@38 $generated@@26 $generated@@140)) $generated@@69 (let (($generated@@144 ($generated@@38 $generated@@26 ($generated@@42 ($generated@@38 $generated@@26 $generated@@140)))))
(let (($generated@@145 ($generated@@38 $generated@@26 ($generated@@43 ($generated@@38 $generated@@26 $generated@@140)))))
(ite ($generated@@44 $generated@@145) (let (($generated@@146 ($generated@@38 $generated@@45 ($generated@@137 $generated@@145))))
($generated@@122 ($generated@@77 $generated@@69 $generated@@146) ($generated@@64 $generated@@138 ($generated@@37 $generated@@139) $generated@@144))) (let (($generated@@147 ($generated@@38 $generated@@26 ($generated@@136 $generated@@145))))
($generated@@122 ($generated@@64 $generated@@138 ($generated@@37 $generated@@139) $generated@@147) ($generated@@64 $generated@@138 ($generated@@37 $generated@@139) $generated@@144))))))))))
 :weight 3
 :pattern ( ($generated@@64 $generated@@138 ($generated@@37 $generated@@139) ($generated@@38 $generated@@26 $generated@@140)))
))))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@148 $generated@@149) (or ($generated@@41 $generated@@149) ($generated@@84 $generated@@149)))
 :pattern ( ($generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@29 $generated@@152) (= ($generated@@25 $generated@@26 ($generated@@108 $generated@@151) ($generated@@30 $generated@@150) $generated@@152) ($generated@@25 $generated@@26 $generated@@151 ($generated@@28 $generated@@150) $generated@@152)))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@108 $generated@@151) ($generated@@30 $generated@@150) $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@40 $generated@@26 $generated@@154 ($generated@@28 $generated@@153)) (or ($generated@@41 $generated@@154) ($generated@@84 $generated@@154)))
 :pattern ( ($generated@@84 $generated@@154) ($generated@@40 $generated@@26 $generated@@154 ($generated@@28 $generated@@153)))
 :pattern ( ($generated@@41 $generated@@154) ($generated@@40 $generated@@26 $generated@@154 ($generated@@28 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@40 $generated@@26 $generated@@156 ($generated@@30 $generated@@155)) (or ($generated@@44 $generated@@156) ($generated@@87 $generated@@156)))
 :pattern ( ($generated@@87 $generated@@156) ($generated@@40 $generated@@26 $generated@@156 ($generated@@30 $generated@@155)))
 :pattern ( ($generated@@44 $generated@@156) ($generated@@40 $generated@@26 $generated@@156 ($generated@@30 $generated@@155)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@89 $generated@@157 $generated@@158) (= $generated@@157 $generated@@158))
 :pattern ( ($generated@@89 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@79 ($generated@@95 $generated@@161 $generated@@159) $generated@@160) ($generated@@40 $generated@@161 $generated@@159 $generated@@160))
 :pattern ( ($generated@@79 ($generated@@95 $generated@@161 $generated@@159) $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ) (! (<= 0 ($generated@@68 $generated@@162))
 :pattern ( ($generated@@68 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@70 ($generated@@27 $generated@@163 $generated@@164)) $generated@@4)
 :pattern ( ($generated@@27 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@43 ($generated@@27 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@27 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@42 ($generated@@27 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@27 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@25 $generated@@76 $generated@@169 ($generated@@78 $generated@@170) $generated@@171) (forall (($generated@@172 Int) ) (!  (=> (and (<= 0 $generated@@172) (< $generated@@172 ($generated@@68 $generated@@169))) ($generated@@113 ($generated@@90 $generated@@169 $generated@@172) $generated@@170 $generated@@171))
 :pattern ( ($generated@@90 $generated@@169 $generated@@172))
)))
 :pattern ( ($generated@@25 $generated@@76 $generated@@169 ($generated@@78 $generated@@170) $generated@@171))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (or ($generated@@135 $generated@@174 $generated@@176) (and (< 1 $generated@@35) (and ($generated@@40 $generated@@26 $generated@@176 ($generated@@28 $generated@@174)) ($generated@@25 $generated@@26 $generated@@176 ($generated@@28 $generated@@174) $generated@@173)))) ($generated@@29 $generated@@173)) ($generated@@25 $generated@@76 ($generated@@64 $generated@@174 $generated@@175 $generated@@176) ($generated@@78 $generated@@174) $generated@@173))
 :pattern ( ($generated@@25 $generated@@76 ($generated@@64 $generated@@174 $generated@@175 $generated@@176) ($generated@@78 $generated@@174) $generated@@173))
))))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@177 ($generated@@78 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@78 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@118 ($generated@@78 $generated@@179)) $generated)
 :pattern ( ($generated@@78 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@180 ($generated@@28 $generated@@181)) $generated@@181)
 :pattern ( ($generated@@28 $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@182 ($generated@@30 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@30 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ) (! (= ($generated@@70 ($generated@@105 $generated@@184)) $generated@@5)
 :pattern ( ($generated@@105 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ) (! (= ($generated@@137 ($generated@@105 $generated@@185)) $generated@@185)
 :pattern ( ($generated@@105 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ) (! (= ($generated@@70 ($generated@@108 $generated@@186)) $generated@@6)
 :pattern ( ($generated@@108 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ) (! (= ($generated@@136 ($generated@@108 $generated@@187)) $generated@@187)
 :pattern ( ($generated@@108 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@94 $generated@@189 ($generated@@95 $generated@@189 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@95 $generated@@189 $generated@@188))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@40 $generated@@26 ($generated@@105 $generated@@191) ($generated@@30 $generated@@190)) ($generated@@79 $generated@@191 $generated@@190))
 :pattern ( ($generated@@40 $generated@@26 ($generated@@105 $generated@@191) ($generated@@30 $generated@@190)))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (or ($generated@@135 $generated@@192 $generated@@194) (and (< 1 $generated@@35) ($generated@@40 $generated@@26 $generated@@194 ($generated@@28 $generated@@192)))) (and (=> (not ($generated@@41 $generated@@194)) (let (($generated@@195 ($generated@@42 $generated@@194)))
(let (($generated@@196 ($generated@@43 $generated@@194)))
 (and (=> ($generated@@44 $generated@@196) ($generated@@135 $generated@@192 $generated@@195)) (=> (not ($generated@@44 $generated@@196)) (let (($generated@@197 ($generated@@136 $generated@@196)))
 (and ($generated@@135 $generated@@192 $generated@@197) ($generated@@135 $generated@@192 $generated@@195)))))))) (= ($generated@@64 $generated@@192 ($generated@@37 $generated@@193) $generated@@194) (ite ($generated@@41 $generated@@194) $generated@@69 (let (($generated@@198 ($generated@@42 $generated@@194)))
(let (($generated@@199 ($generated@@43 $generated@@194)))
(ite ($generated@@44 $generated@@199) (let (($generated@@200 ($generated@@137 $generated@@199)))
($generated@@122 ($generated@@77 $generated@@69 $generated@@200) ($generated@@64 $generated@@192 $generated@@193 $generated@@198))) (let (($generated@@201 ($generated@@136 $generated@@199)))
($generated@@122 ($generated@@64 $generated@@192 $generated@@193 $generated@@201) ($generated@@64 $generated@@192 $generated@@193 $generated@@198))))))))))
 :pattern ( ($generated@@64 $generated@@192 ($generated@@37 $generated@@193) $generated@@194))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! (< ($generated@@202 $generated@@203) ($generated@@202 ($generated@@27 $generated@@203 $generated@@204)))
 :pattern ( ($generated@@27 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (! (< ($generated@@202 $generated@@206) ($generated@@202 ($generated@@27 $generated@@205 $generated@@206)))
 :pattern ( ($generated@@27 $generated@@205 $generated@@206))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (or ($generated@@135 $generated@@207 $generated@@209) (and (< 1 $generated@@35) ($generated@@40 $generated@@26 $generated@@209 ($generated@@28 $generated@@207)))) ($generated@@40 $generated@@76 ($generated@@64 $generated@@207 $generated@@208 $generated@@209) ($generated@@78 $generated@@207)))
 :pattern ( ($generated@@64 $generated@@207 $generated@@208 $generated@@209))
))))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (or ($generated@@57 $generated@@210 $generated@@211) (and (< 3 $generated@@35) ($generated@@40 $generated@@26 $generated@@211 ($generated@@28 $generated@@210)))) (and ($generated@@58 $generated@@210 $generated@@211 ($generated@@38 $generated@@26 $generated@@59)) (= ($generated@@56 $generated@@210 $generated@@211) ($generated@@60 $generated@@210 ($generated@@37 $generated@@61) $generated@@211 ($generated@@38 $generated@@26 $generated@@59)))))
 :pattern ( ($generated@@56 $generated@@210 $generated@@211))
))))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and (or ($generated@@58 $generated@@213 $generated@@215 $generated@@216) (and (< 2 $generated@@35) (and (and (and ($generated@@40 $generated@@26 $generated@@215 ($generated@@28 $generated@@213)) ($generated@@25 $generated@@26 $generated@@215 ($generated@@28 $generated@@213) $generated@@212)) (and ($generated@@40 $generated@@26 $generated@@216 ($generated@@28 $generated@@213)) ($generated@@25 $generated@@26 $generated@@216 ($generated@@28 $generated@@213) $generated@@212))) ($generated@@36 $generated@@213 ($generated@@37 $generated@@61) $generated@@216)))) ($generated@@29 $generated@@212)) ($generated@@25 $generated@@26 ($generated@@60 $generated@@213 $generated@@214 $generated@@215 $generated@@216) ($generated@@28 $generated@@213) $generated@@212))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@60 $generated@@213 $generated@@214 $generated@@215 $generated@@216) ($generated@@28 $generated@@213) $generated@@212))
))))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@217 T@U) ($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> (and (or ($generated@@57 $generated@@218 $generated@@219) (and (< 3 $generated@@35) (and ($generated@@40 $generated@@26 $generated@@219 ($generated@@28 $generated@@218)) ($generated@@25 $generated@@26 $generated@@219 ($generated@@28 $generated@@218) $generated@@217)))) ($generated@@29 $generated@@217)) ($generated@@25 $generated@@26 ($generated@@56 $generated@@218 $generated@@219) ($generated@@28 $generated@@218) $generated@@217))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@56 $generated@@218 $generated@@219) ($generated@@28 $generated@@218) $generated@@217))
))))
(assert (forall (($generated@@221 T@U) ) (! (< ($generated@@220 $generated@@221) ($generated@@202 ($generated@@105 $generated@@221)))
 :pattern ( ($generated@@105 $generated@@221))
)))
(assert (forall (($generated@@222 T@U) ) (! (< ($generated@@202 $generated@@222) ($generated@@202 ($generated@@108 $generated@@222)))
 :pattern ( ($generated@@108 $generated@@222))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@29 $generated@@225) (and ($generated@@44 $generated@@223) ($generated@@25 $generated@@26 $generated@@223 ($generated@@30 $generated@@224) $generated@@225))) ($generated@@113 ($generated@@137 $generated@@223) $generated@@224 $generated@@225))
 :pattern ( ($generated@@113 ($generated@@137 $generated@@223) $generated@@224 $generated@@225))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@236 T@T) ($generated@@237 T@T) ($generated@@238 T@T) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ) (! (= ($generated@@226 $generated@@236 $generated@@237 $generated@@238 ($generated@@232 $generated@@236 $generated@@237 $generated@@238 $generated@@240 $generated@@241 $generated@@242 $generated@@239) $generated@@241 $generated@@242) $generated@@239)
 :weight 0
)) (and (forall (($generated@@243 T@T) ($generated@@244 T@T) ($generated@@245 T@T) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ) (!  (or (= $generated@@248 $generated@@250) (= ($generated@@226 $generated@@243 $generated@@244 $generated@@245 ($generated@@232 $generated@@243 $generated@@244 $generated@@245 $generated@@247 $generated@@248 $generated@@249 $generated@@246) $generated@@250 $generated@@251) ($generated@@226 $generated@@243 $generated@@244 $generated@@245 $generated@@247 $generated@@250 $generated@@251)))
 :weight 0
)) (forall (($generated@@252 T@T) ($generated@@253 T@T) ($generated@@254 T@T) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ($generated@@258 T@U) ($generated@@259 T@U) ($generated@@260 T@U) ) (!  (or (= $generated@@258 $generated@@260) (= ($generated@@226 $generated@@252 $generated@@253 $generated@@254 ($generated@@232 $generated@@252 $generated@@253 $generated@@254 $generated@@256 $generated@@257 $generated@@258 $generated@@255) $generated@@259 $generated@@260) ($generated@@226 $generated@@252 $generated@@253 $generated@@254 $generated@@256 $generated@@259 $generated@@260)))
 :weight 0
)))) (= ($generated@@9 $generated@@227) 6)) (= ($generated@@9 $generated@@228) 7)) (forall (($generated@@261 T@T) ($generated@@262 T@T) ($generated@@263 T@U) ($generated@@264 T@U) ($generated@@265 T@U) ) (! (= ($generated@@230 $generated@@261 $generated@@262 ($generated@@233 $generated@@261 $generated@@262 $generated@@264 $generated@@265 $generated@@263) $generated@@265) $generated@@263)
 :weight 0
))) (forall (($generated@@266 T@T) ($generated@@267 T@T) ($generated@@268 T@U) ($generated@@269 T@U) ($generated@@270 T@U) ($generated@@271 T@U) ) (!  (or (= $generated@@270 $generated@@271) (= ($generated@@230 $generated@@266 $generated@@267 ($generated@@233 $generated@@266 $generated@@267 $generated@@269 $generated@@270 $generated@@268) $generated@@271) ($generated@@230 $generated@@266 $generated@@267 $generated@@269 $generated@@271)))
 :weight 0
))) (forall (($generated@@272 T@T) ($generated@@273 T@T) ) (= ($generated@@9 ($generated@@231 $generated@@272 $generated@@273)) 8))) (forall (($generated@@274 T@T) ($generated@@275 T@T) ) (! (= ($generated@@234 ($generated@@231 $generated@@274 $generated@@275)) $generated@@274)
 :pattern ( ($generated@@231 $generated@@274 $generated@@275))
))) (forall (($generated@@276 T@T) ($generated@@277 T@T) ) (! (= ($generated@@235 ($generated@@231 $generated@@276 $generated@@277)) $generated@@277)
 :pattern ( ($generated@@231 $generated@@276 $generated@@277))
))))
(assert (forall (($generated@@278 T@U) ($generated@@279 T@U) ($generated@@280 T@U) ($generated@@281 Bool) ($generated@@282 T@U) ($generated@@283 T@U) ) (! (= ($generated@@14 ($generated@@226 $generated@@227 $generated@@228 $generated@@10 ($generated@@229 $generated@@278 $generated@@279 $generated@@280 $generated@@281) $generated@@282 $generated@@283))  (=> (and (or (not (= $generated@@282 $generated@@278)) (not true)) ($generated@@14 ($generated@@94 $generated@@10 ($generated@@230 $generated@@228 $generated@@45 ($generated@@230 $generated@@227 ($generated@@231 $generated@@228 $generated@@45) $generated@@279 $generated@@282) $generated@@280)))) $generated@@281))
 :pattern ( ($generated@@226 $generated@@227 $generated@@228 $generated@@10 ($generated@@229 $generated@@278 $generated@@279 $generated@@280 $generated@@281) $generated@@282 $generated@@283))
)))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (= ($generated@@284 ($generated@@77 $generated@@286 $generated@@287)) $generated@@286) (= ($generated@@285 ($generated@@77 $generated@@286 $generated@@287)) $generated@@287))
 :pattern ( ($generated@@77 $generated@@286 $generated@@287))
)))
(assert  (=> (<= 1 $generated@@35) (forall (($generated@@288 T@U) ($generated@@289 T@U) ($generated@@290 T@U) ) (!  (=> (or ($generated@@39 $generated@@288 $generated@@290) (and (< 1 $generated@@35) ($generated@@40 $generated@@26 $generated@@290 ($generated@@28 $generated@@288)))) (and (=> (not ($generated@@41 $generated@@290)) (let (($generated@@291 ($generated@@42 $generated@@290)))
(let (($generated@@292 ($generated@@43 $generated@@290)))
 (=> ($generated@@44 $generated@@292) ($generated@@39 $generated@@288 $generated@@291))))) (= ($generated@@36 $generated@@288 ($generated@@37 $generated@@289) $generated@@290) (ite ($generated@@41 $generated@@290) true (let (($generated@@293 ($generated@@42 $generated@@290)))
(let (($generated@@294 ($generated@@43 $generated@@290)))
(ite ($generated@@44 $generated@@294) ($generated@@36 $generated@@288 $generated@@289 $generated@@293) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 false))))))))))
 :pattern ( ($generated@@36 $generated@@288 ($generated@@37 $generated@@289) $generated@@290))
))))
(assert (forall (($generated@@295 T@U) ) (! (= ($generated@@220 ($generated@@95 $generated@@26 $generated@@295)) ($generated@@202 $generated@@295))
 :pattern ( ($generated@@220 ($generated@@95 $generated@@26 $generated@@295)))
)))
(assert (forall (($generated@@296 T@U) ($generated@@297 T@U) ($generated@@298 T@U) ($generated@@299 T@U) ) (! (= ($generated@@60 $generated@@296 ($generated@@37 $generated@@297) $generated@@298 $generated@@299) ($generated@@60 $generated@@296 $generated@@297 $generated@@298 $generated@@299))
 :pattern ( ($generated@@60 $generated@@296 ($generated@@37 $generated@@297) $generated@@298 $generated@@299))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (!  (=> ($generated@@79 $generated@@300 ($generated@@78 $generated@@301)) (and (= ($generated@@95 $generated@@76 ($generated@@94 $generated@@76 $generated@@300)) $generated@@300) ($generated@@40 $generated@@76 ($generated@@94 $generated@@76 $generated@@300) ($generated@@78 $generated@@301))))
 :pattern ( ($generated@@79 $generated@@300 ($generated@@78 $generated@@301)))
)))
(assert (forall (($generated@@302 T@U) ($generated@@303 T@U) ) (!  (=> ($generated@@79 $generated@@303 ($generated@@28 $generated@@302)) (and (= ($generated@@95 $generated@@26 ($generated@@94 $generated@@26 $generated@@303)) $generated@@303) ($generated@@40 $generated@@26 ($generated@@94 $generated@@26 $generated@@303) ($generated@@28 $generated@@302))))
 :pattern ( ($generated@@79 $generated@@303 ($generated@@28 $generated@@302)))
)))
(assert (forall (($generated@@304 T@U) ($generated@@305 T@U) ) (!  (=> ($generated@@79 $generated@@305 ($generated@@30 $generated@@304)) (and (= ($generated@@95 $generated@@26 ($generated@@94 $generated@@26 $generated@@305)) $generated@@305) ($generated@@40 $generated@@26 ($generated@@94 $generated@@26 $generated@@305) ($generated@@30 $generated@@304))))
 :pattern ( ($generated@@79 $generated@@305 ($generated@@30 $generated@@304)))
)))
(assert (forall (($generated@@306 T@U) ($generated@@307 T@U) ) (! (= ($generated@@40 $generated@@26 ($generated@@108 $generated@@307) ($generated@@30 $generated@@306)) ($generated@@40 $generated@@26 $generated@@307 ($generated@@28 $generated@@306)))
 :pattern ( ($generated@@40 $generated@@26 ($generated@@108 $generated@@307) ($generated@@30 $generated@@306)))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@308 T@U) ($generated@@309 T@U) ($generated@@310 T@U) ($generated@@311 T@U) ) (!  (=> (or ($generated@@58 $generated@@308 $generated@@310 $generated@@311) (and (< 2 $generated@@35) (and (and ($generated@@40 $generated@@26 $generated@@310 ($generated@@28 $generated@@308)) ($generated@@40 $generated@@26 $generated@@311 ($generated@@28 $generated@@308))) ($generated@@36 $generated@@308 ($generated@@37 $generated@@61) $generated@@311)))) (and (=> (not ($generated@@41 $generated@@310)) (let (($generated@@312 ($generated@@42 $generated@@310)))
(let (($generated@@313 ($generated@@43 $generated@@310)))
 (and (=> ($generated@@44 $generated@@313) ($generated@@58 $generated@@308 $generated@@312 $generated@@311)) (=> (not ($generated@@44 $generated@@313)) (let (($generated@@314 ($generated@@136 $generated@@313)))
 (and ($generated@@58 $generated@@308 $generated@@312 $generated@@311) ($generated@@58 $generated@@308 $generated@@314 ($generated@@60 $generated@@308 $generated@@309 $generated@@312 $generated@@311))))))))) (= ($generated@@60 $generated@@308 ($generated@@37 $generated@@309) $generated@@310 $generated@@311) (ite ($generated@@41 $generated@@310) $generated@@311 (let (($generated@@315 ($generated@@42 $generated@@310)))
(let (($generated@@316 ($generated@@43 $generated@@310)))
(ite ($generated@@44 $generated@@316) ($generated@@27 $generated@@316 ($generated@@60 $generated@@308 $generated@@309 $generated@@315 $generated@@311)) (let (($generated@@317 ($generated@@136 $generated@@316)))
($generated@@60 $generated@@308 $generated@@309 $generated@@317 ($generated@@60 $generated@@308 $generated@@309 $generated@@315 $generated@@311))))))))))
 :pattern ( ($generated@@60 $generated@@308 ($generated@@37 $generated@@309) $generated@@310 $generated@@311))
))))
(assert (forall (($generated@@318 T@U) ($generated@@319 T@U) ($generated@@320 T@U) ) (!  (=> (and ($generated@@29 $generated@@320) (and ($generated@@84 $generated@@318) ($generated@@25 $generated@@26 $generated@@318 ($generated@@28 $generated@@319) $generated@@320))) ($generated@@25 $generated@@26 ($generated@@43 $generated@@318) ($generated@@30 $generated@@319) $generated@@320))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@43 $generated@@318) ($generated@@30 $generated@@319) $generated@@320))
)))
(assert (forall (($generated@@321 T@U) ($generated@@322 T@U) ($generated@@323 T@U) ) (!  (=> (and ($generated@@29 $generated@@323) (and ($generated@@84 $generated@@321) ($generated@@25 $generated@@26 $generated@@321 ($generated@@28 $generated@@322) $generated@@323))) ($generated@@25 $generated@@26 ($generated@@42 $generated@@321) ($generated@@28 $generated@@322) $generated@@323))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@42 $generated@@321) ($generated@@28 $generated@@322) $generated@@323))
)))
(assert (forall (($generated@@324 T@U) ($generated@@325 T@U) ($generated@@326 T@U) ) (!  (=> (and ($generated@@29 $generated@@326) (and ($generated@@87 $generated@@324) ($generated@@25 $generated@@26 $generated@@324 ($generated@@30 $generated@@325) $generated@@326))) ($generated@@25 $generated@@26 ($generated@@136 $generated@@324) ($generated@@28 $generated@@325) $generated@@326))
 :pattern ( ($generated@@25 $generated@@26 ($generated@@136 $generated@@324) ($generated@@28 $generated@@325) $generated@@326))
)))
(assert (= $generated@@59 ($generated@@38 $generated@@26 $generated@@59)))
(assert (forall (($generated@@327 T@U) ($generated@@328 T@U) ($generated@@329 Int) ) (!  (and (=> (< $generated@@329 ($generated@@68 $generated@@327)) (= ($generated@@90 ($generated@@122 $generated@@327 $generated@@328) $generated@@329) ($generated@@90 $generated@@327 $generated@@329))) (=> (<= ($generated@@68 $generated@@327) $generated@@329) (= ($generated@@90 ($generated@@122 $generated@@327 $generated@@328) $generated@@329) ($generated@@90 $generated@@328 (- $generated@@329 ($generated@@68 $generated@@327))))))
 :pattern ( ($generated@@90 ($generated@@122 $generated@@327 $generated@@328) $generated@@329))
)))
(assert  (=> (<= 3 $generated@@35) (forall (($generated@@330 T@U) ($generated@@331 T@U) ) (!  (=> (or ($generated@@57 $generated@@330 $generated@@331) (and (< 3 $generated@@35) ($generated@@40 $generated@@26 $generated@@331 ($generated@@28 $generated@@330)))) (and ($generated@@36 $generated@@330 ($generated@@37 $generated@@61) ($generated@@56 $generated@@330 $generated@@331)) ($generated@@40 $generated@@26 ($generated@@56 $generated@@330 $generated@@331) ($generated@@28 $generated@@330))))
 :pattern ( ($generated@@56 $generated@@330 $generated@@331))
))))
(assert (forall (($generated@@332 T@U) ($generated@@333 T@U) ) (! (= ($generated@@27 ($generated@@38 $generated@@26 $generated@@332) ($generated@@38 $generated@@26 $generated@@333)) ($generated@@38 $generated@@26 ($generated@@27 $generated@@332 $generated@@333)))
 :pattern ( ($generated@@27 ($generated@@38 $generated@@26 $generated@@332) ($generated@@38 $generated@@26 $generated@@333)))
)))
(assert (forall (($generated@@334 T@U) ) (! (= ($generated@@105 ($generated@@38 $generated@@45 $generated@@334)) ($generated@@38 $generated@@26 ($generated@@105 $generated@@334)))
 :pattern ( ($generated@@105 ($generated@@38 $generated@@45 $generated@@334)))
)))
(assert (forall (($generated@@335 T@U) ) (! (= ($generated@@108 ($generated@@38 $generated@@26 $generated@@335)) ($generated@@38 $generated@@26 ($generated@@108 $generated@@335)))
 :pattern ( ($generated@@108 ($generated@@38 $generated@@26 $generated@@335)))
)))
(assert (forall (($generated@@336 T@U) ($generated@@337 T@T) ) (! (= ($generated@@95 $generated@@337 ($generated@@38 $generated@@337 $generated@@336)) ($generated@@38 $generated@@45 ($generated@@95 $generated@@337 $generated@@336)))
 :pattern ( ($generated@@95 $generated@@337 ($generated@@38 $generated@@337 $generated@@336)))
)))
(assert  (=> (<= 2 $generated@@35) (forall (($generated@@338 T@U) ($generated@@339 T@U) ($generated@@340 T@U) ($generated@@341 T@U) ) (!  (=> (or ($generated@@58 $generated@@338 ($generated@@38 $generated@@26 $generated@@340) ($generated@@38 $generated@@26 $generated@@341)) (and (< 2 $generated@@35) (and (and ($generated@@40 $generated@@26 $generated@@340 ($generated@@28 $generated@@338)) ($generated@@40 $generated@@26 $generated@@341 ($generated@@28 $generated@@338))) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 ($generated@@36 $generated@@338 ($generated@@37 $generated@@61) ($generated@@38 $generated@@26 $generated@@341)))))))) (and (=> (not ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 ($generated@@41 ($generated@@38 $generated@@26 $generated@@340)))))) (let (($generated@@342 ($generated@@38 $generated@@26 ($generated@@42 ($generated@@38 $generated@@26 $generated@@340)))))
(let (($generated@@343 ($generated@@38 $generated@@26 ($generated@@43 ($generated@@38 $generated@@26 $generated@@340)))))
 (and (=> ($generated@@44 $generated@@343) ($generated@@58 $generated@@338 $generated@@342 ($generated@@38 $generated@@26 $generated@@341))) (=> (not ($generated@@44 $generated@@343)) (let (($generated@@344 ($generated@@136 $generated@@343)))
 (and ($generated@@58 $generated@@338 $generated@@342 ($generated@@38 $generated@@26 $generated@@341)) ($generated@@58 $generated@@338 $generated@@344 ($generated@@60 $generated@@338 ($generated@@37 $generated@@339) $generated@@342 ($generated@@38 $generated@@26 $generated@@341)))))))))) (= ($generated@@60 $generated@@338 ($generated@@37 $generated@@339) ($generated@@38 $generated@@26 $generated@@340) ($generated@@38 $generated@@26 $generated@@341)) (ite ($generated@@41 ($generated@@38 $generated@@26 $generated@@340)) $generated@@341 (let (($generated@@345 ($generated@@38 $generated@@26 ($generated@@42 ($generated@@38 $generated@@26 $generated@@340)))))
(let (($generated@@346 ($generated@@38 $generated@@26 ($generated@@43 ($generated@@38 $generated@@26 $generated@@340)))))
(ite ($generated@@44 $generated@@346) ($generated@@38 $generated@@26 ($generated@@27 $generated@@346 ($generated@@38 $generated@@26 ($generated@@60 $generated@@338 ($generated@@37 $generated@@339) $generated@@345 ($generated@@38 $generated@@26 $generated@@341))))) (let (($generated@@347 ($generated@@38 $generated@@26 ($generated@@136 $generated@@346))))
($generated@@38 $generated@@26 ($generated@@60 $generated@@338 ($generated@@37 $generated@@339) $generated@@347 ($generated@@38 $generated@@26 ($generated@@60 $generated@@338 ($generated@@37 $generated@@339) $generated@@345 ($generated@@38 $generated@@26 $generated@@341)))))))))))))
 :weight 3
 :pattern ( ($generated@@60 $generated@@338 ($generated@@37 $generated@@339) ($generated@@38 $generated@@26 $generated@@340) ($generated@@38 $generated@@26 $generated@@341)))
))))
(assert (forall (($generated@@348 T@U) ) (!  (=> (= ($generated@@68 $generated@@348) 0) (= $generated@@348 $generated@@69))
 :pattern ( ($generated@@68 $generated@@348))
)))
(assert (forall (($generated@@349 T@U) ($generated@@350 T@U) ) (! (= ($generated@@40 $generated@@76 $generated@@349 ($generated@@78 $generated@@350)) (forall (($generated@@351 Int) ) (!  (=> (and (<= 0 $generated@@351) (< $generated@@351 ($generated@@68 $generated@@349))) ($generated@@79 ($generated@@90 $generated@@349 $generated@@351) $generated@@350))
 :pattern ( ($generated@@90 $generated@@349 $generated@@351))
)))
 :pattern ( ($generated@@40 $generated@@76 $generated@@349 ($generated@@78 $generated@@350)))
)))
(assert (forall (($generated@@353 T@U) ($generated@@354 Int) ) (!  (=> (and (<= 0 $generated@@354) (< $generated@@354 ($generated@@68 $generated@@353))) (< ($generated@@202 ($generated@@94 $generated@@26 ($generated@@90 $generated@@353 $generated@@354))) ($generated@@352 $generated@@353)))
 :pattern ( ($generated@@202 ($generated@@94 $generated@@26 ($generated@@90 $generated@@353 $generated@@354))))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@355 () T@U)
(declare-fun $generated@@356 () T@U)
(declare-fun $generated@@357 () T@U)
(declare-fun $generated@@358 () T@U)
(declare-fun $generated@@359 () T@U)
(declare-fun $generated@@360 (T@U) Bool)
(declare-fun $generated@@361 () T@U)
(declare-fun $generated@@362 () T@U)
(declare-fun $generated@@363 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@364  (=> (and (= $generated@@355 ($generated@@229 $generated@@356 $generated@@357 $generated@@0 false)) ($generated@@148 $generated@@358)) (=> (and (and (and ($generated@@29 $generated@@359) ($generated@@360 $generated@@359)) (= $generated@@357 $generated@@359)) (and (forall (($generated@@365 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@26 $generated@@365 ($generated@@28 $generated@@361)) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 true)))) (< ($generated@@202 $generated@@365) ($generated@@202 $generated@@358))) ($generated@@89 ($generated@@64 $generated@@361 ($generated@@37 $generated@@61) $generated@@365) ($generated@@64 $generated@@361 ($generated@@37 $generated@@61) ($generated@@56 $generated@@361 $generated@@365))))
 :pattern ( ($generated@@56 $generated@@361 $generated@@365))
)) (= $generated@@362 ($generated@@38 $generated@@26 $generated@@59)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@39 $generated@@361 $generated@@362) (or ($generated@@36 $generated@@361 ($generated@@37 $generated@@61) $generated@@362) (=> ($generated@@41 $generated@@362) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 true))))))) (=> (=> ($generated@@39 $generated@@361 $generated@@362) (or ($generated@@36 $generated@@361 ($generated@@37 $generated@@61) $generated@@362) (=> ($generated@@41 $generated@@362) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@39 $generated@@361 $generated@@362) (or ($generated@@36 $generated@@361 ($generated@@37 $generated@@61) $generated@@362) (=> (not ($generated@@41 $generated@@362)) (let (($generated@@366 ($generated@@42 $generated@@362)))
(let (($generated@@367 ($generated@@43 $generated@@362)))
 (=> ($generated@@44 $generated@@367) ($generated@@36 $generated@@361 ($generated@@37 ($generated@@37 $generated@@61)) $generated@@366)))))))) (=> (=> ($generated@@39 $generated@@361 $generated@@362) (or ($generated@@36 $generated@@361 ($generated@@37 $generated@@61) $generated@@362) (=> (not ($generated@@41 $generated@@362)) (let (($generated@@368 ($generated@@42 $generated@@362)))
(let (($generated@@369 ($generated@@43 $generated@@362)))
 (=> ($generated@@44 $generated@@369) ($generated@@36 $generated@@361 ($generated@@37 ($generated@@37 $generated@@61)) $generated@@368))))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@39 $generated@@361 $generated@@362) (or ($generated@@36 $generated@@361 ($generated@@37 $generated@@61) $generated@@362) (=> (not ($generated@@41 $generated@@362)) (let (($generated@@370 ($generated@@43 $generated@@362)))
 (=> (not ($generated@@44 $generated@@370)) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 false))))))))) (=> (=> ($generated@@39 $generated@@361 $generated@@362) (or ($generated@@36 $generated@@361 ($generated@@37 $generated@@61) $generated@@362) (=> (not ($generated@@41 $generated@@362)) (let (($generated@@371 ($generated@@43 $generated@@362)))
 (=> (not ($generated@@44 $generated@@371)) ($generated@@14 ($generated@@38 $generated@@10 ($generated@@13 false)))))))) (=> (and ($generated@@29 $generated@@363) ($generated@@360 $generated@@363)) (=> (and (and (and (and ($generated@@135 $generated@@361 $generated@@358) ($generated@@135 $generated@@361 $generated@@362)) (and ($generated@@58 $generated@@361 $generated@@358 $generated@@362) ($generated@@135 $generated@@361 ($generated@@60 $generated@@361 ($generated@@37 $generated@@61) $generated@@358 $generated@@362)))) ($generated@@89 ($generated@@122 ($generated@@64 $generated@@361 ($generated@@37 ($generated@@37 $generated@@61)) $generated@@358) ($generated@@64 $generated@@361 ($generated@@37 ($generated@@37 $generated@@61)) $generated@@362)) ($generated@@64 $generated@@361 ($generated@@37 ($generated@@37 $generated@@61)) ($generated@@60 $generated@@361 ($generated@@37 ($generated@@37 $generated@@61)) $generated@@358 $generated@@362)))) (and (= $generated@@359 $generated@@363) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@89 ($generated@@64 $generated@@361 ($generated@@37 ($generated@@37 $generated@@61)) $generated@@358) ($generated@@64 $generated@@361 ($generated@@37 ($generated@@37 $generated@@61)) ($generated@@56 $generated@@361 $generated@@358)))))))))))))))
(let (($generated@@372  (=> (and ($generated@@29 $generated@@357) ($generated@@360 $generated@@357)) (=> (and (and (and ($generated@@40 $generated@@26 $generated@@358 ($generated@@28 $generated@@361)) ($generated@@25 $generated@@26 $generated@@358 ($generated@@28 $generated@@361) $generated@@357)) ($generated@@148 $generated@@358)) (and (= 4 $generated@@35) (= (ControlFlow 0 6) 2))) $generated@@364))))
$generated@@372)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
