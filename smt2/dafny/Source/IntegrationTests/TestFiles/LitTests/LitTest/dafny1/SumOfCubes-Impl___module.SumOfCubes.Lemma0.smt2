(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 (T@T) Int)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 (Bool) T@U)
(declare-fun $generated@@7 (T@U) Bool)
(declare-fun $generated@@8 (Int) T@U)
(declare-fun $generated@@9 (T@U) Int)
(declare-fun $generated@@10 (Real) T@U)
(declare-fun $generated@@11 (T@U) Real)
(declare-fun $generated@@18 (T@U) T@U)
(declare-fun $generated@@19 () Int)
(declare-fun $generated@@20 (T@U Int Int) Int)
(declare-fun $generated@@21 (T@U) T@U)
(declare-fun $generated@@22 (Int Int) Bool)
(declare-fun $generated@@23 (Int) Int)
(declare-fun $generated@@24 (Int Int) Int)
(declare-fun $generated@@28 (T@U Int Int) Int)
(declare-fun $generated@@29 (Int Int) Bool)
(declare-fun $generated@@33 (T@U T@U) Bool)
(declare-fun $generated@@34 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 (T@T T@T) T@T)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@98 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@2 $generated@@3) 0) (= ($generated@@2 $generated@@4) 1)) (= ($generated@@2 $generated@@5) 2)) (forall (($generated@@12 Bool) ) (! (= ($generated@@7 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 T@U) ) (! (= ($generated@@6 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 Int) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Real) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))))
(assert (distinct $generated $generated@@0 $generated@@1)
)
(assert (= ($generated@@18 $generated) $generated@@0))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@25 T@U) ($generated@@26 Int) ($generated@@27 Int) ) (!  (=> (or ($generated@@22 $generated@@26 $generated@@27) (and (< 0 $generated@@19) (and (<= ($generated@@23 0) $generated@@26) (<= $generated@@26 $generated@@27)))) (and (=> (or (not (= $generated@@27 $generated@@26)) (not true)) ($generated@@22 (+ $generated@@26 1) $generated@@27)) (= ($generated@@20 ($generated@@21 $generated@@25) $generated@@26 $generated@@27) (ite (= $generated@@27 $generated@@26) 0 (+ ($generated@@24 ($generated@@24 $generated@@26 $generated@@26) $generated@@26) ($generated@@20 $generated@@25 (+ $generated@@26 1) $generated@@27))))))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@25) $generated@@26 $generated@@27))
))))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@30 T@U) ($generated@@31 Int) ($generated@@32 Int) ) (!  (=> (or ($generated@@29 $generated@@31 $generated@@32) (and (< 0 $generated@@19) (and (<= ($generated@@23 0) $generated@@31) (<= $generated@@31 $generated@@32)))) (and (=> (or (not (= $generated@@32 $generated@@31)) (not true)) ($generated@@29 $generated@@31 (- $generated@@32 1))) (= ($generated@@28 ($generated@@21 $generated@@30) $generated@@31 $generated@@32) (ite (= $generated@@32 $generated@@31) 0 (+ ($generated@@28 $generated@@30 $generated@@31 (- $generated@@32 1)) ($generated@@24 ($generated@@24 (- $generated@@32 1) (- $generated@@32 1)) (- $generated@@32 1)))))))
 :pattern ( ($generated@@28 ($generated@@21 $generated@@30) $generated@@31 $generated@@32))
))))
(assert  (and (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@34 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@34 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@34 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@2 $generated@@35) 3)) (= ($generated@@2 $generated@@36) 4)) (= ($generated@@2 $generated@@37) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@2 ($generated@@38 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@38 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@38 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@38 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@38 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@33 $generated@@60 $generated@@61) (forall (($generated@@62 T@U) ) (!  (=> ($generated@@7 ($generated@@39 $generated@@3 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@60 $generated@@62) $generated@@1))) ($generated@@7 ($generated@@39 $generated@@3 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@1))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@61 $generated@@62) $generated@@1))
)))
 :pattern ( ($generated@@33 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 Int) ) (! (= ($generated@@23 $generated@@63) $generated@@63)
 :pattern ( ($generated@@23 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@64 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 ($generated@@39 $generated@@69 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@39 $generated@@69 $generated@@68))
)))
(assert ($generated@@70 $generated@@1))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (!  (=> ($generated@@33 $generated@@72 $generated@@73) (=> ($generated@@71 $generated@@76 $generated@@74 $generated@@75 $generated@@72) ($generated@@71 $generated@@76 $generated@@74 $generated@@75 $generated@@73)))
 :pattern ( ($generated@@33 $generated@@72 $generated@@73) ($generated@@71 $generated@@76 $generated@@74 $generated@@75 $generated@@72))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> ($generated@@77 $generated@@78 $generated@@79) (and ($generated@@33 $generated@@78 $generated@@79) (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (not ($generated@@70 $generated@@81)) (= ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@78 $generated@@80) $generated@@81) ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@79 $generated@@80) $generated@@81)))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@79 $generated@@80) $generated@@81))
))))
 :pattern ( ($generated@@77 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 Int) ($generated@@84 Int) ) (! (= ($generated@@20 ($generated@@21 $generated@@82) $generated@@83 $generated@@84) ($generated@@20 $generated@@82 $generated@@83 $generated@@84))
 :pattern ( ($generated@@20 ($generated@@21 $generated@@82) $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 Int) ($generated@@87 Int) ) (! (= ($generated@@28 ($generated@@21 $generated@@85) $generated@@86 $generated@@87) ($generated@@28 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@28 ($generated@@21 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or (not (= $generated@@88 $generated@@90)) (not true)) (=> (and ($generated@@33 $generated@@88 $generated@@89) ($generated@@33 $generated@@89 $generated@@90)) ($generated@@33 $generated@@88 $generated@@90)))
 :pattern ( ($generated@@33 $generated@@88 $generated@@89) ($generated@@33 $generated@@89 $generated@@90))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@91 T@U) ($generated@@92 Int) ($generated@@93 Int) ) (!  (=> (or ($generated@@22 ($generated@@23 $generated@@92) ($generated@@23 $generated@@93)) (and (< 0 $generated@@19) (and (<= ($generated@@23 0) ($generated@@23 $generated@@92)) (<= ($generated@@23 $generated@@92) ($generated@@23 $generated@@93))))) (and (=> (or (not (= ($generated@@23 $generated@@93) ($generated@@23 $generated@@92))) (not true)) ($generated@@22 ($generated@@23 (+ $generated@@92 1)) ($generated@@23 $generated@@93))) (= ($generated@@20 ($generated@@21 $generated@@91) ($generated@@23 $generated@@92) ($generated@@23 $generated@@93)) (ite (= ($generated@@23 $generated@@93) ($generated@@23 $generated@@92)) 0 (+ ($generated@@24 ($generated@@23 ($generated@@24 ($generated@@23 $generated@@92) ($generated@@23 $generated@@92))) ($generated@@23 $generated@@92)) ($generated@@20 ($generated@@21 $generated@@91) ($generated@@23 (+ $generated@@92 1)) ($generated@@23 $generated@@93)))))))
 :weight 3
 :pattern ( ($generated@@20 ($generated@@21 $generated@@91) ($generated@@23 $generated@@92) ($generated@@23 $generated@@93)))
))))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@39 $generated@@95 ($generated@@67 $generated@@95 $generated@@94)) $generated@@94)
 :pattern ( ($generated@@67 $generated@@95 $generated@@94))
)))
(assert  (and (forall (($generated@@99 T@T) ($generated@@100 T@T) ($generated@@101 T@T) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@96 $generated@@99 $generated@@100 $generated@@101 ($generated@@98 $generated@@99 $generated@@100 $generated@@101 $generated@@103 $generated@@104 $generated@@105 $generated@@102) $generated@@104 $generated@@105) $generated@@102)
 :weight 0
)) (and (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@111 $generated@@113) (= ($generated@@96 $generated@@106 $generated@@107 $generated@@108 ($generated@@98 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@113 $generated@@114) ($generated@@96 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@113 $generated@@114)))
 :weight 0
)) (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@96 $generated@@115 $generated@@116 $generated@@117 ($generated@@98 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@96 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)))))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 Bool) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@7 ($generated@@96 $generated@@37 $generated@@35 $generated@@3 ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@127) $generated@@128 $generated@@129))  (=> (and (or (not (= $generated@@128 $generated@@124)) (not true)) ($generated@@7 ($generated@@39 $generated@@3 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@125 $generated@@128) $generated@@126)))) $generated@@127))
 :pattern ( ($generated@@96 $generated@@37 $generated@@35 $generated@@3 ($generated@@97 $generated@@124 $generated@@125 $generated@@126 $generated@@127) $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 Int) ($generated@@131 Int) ) (! (= ($generated@@24 $generated@@130 $generated@@131) (* $generated@@130 $generated@@131))
 :pattern ( ($generated@@24 $generated@@130 $generated@@131))
)))
(assert  (=> (<= 0 $generated@@19) (forall (($generated@@132 T@U) ($generated@@133 Int) ($generated@@134 Int) ) (!  (=> (or ($generated@@29 ($generated@@23 $generated@@133) ($generated@@23 $generated@@134)) (and (< 0 $generated@@19) (and (<= ($generated@@23 0) ($generated@@23 $generated@@133)) (<= ($generated@@23 $generated@@133) ($generated@@23 $generated@@134))))) (and (=> (or (not (= ($generated@@23 $generated@@134) ($generated@@23 $generated@@133))) (not true)) ($generated@@29 ($generated@@23 $generated@@133) ($generated@@23 (- $generated@@134 1)))) (= ($generated@@28 ($generated@@21 $generated@@132) ($generated@@23 $generated@@133) ($generated@@23 $generated@@134)) (ite (= ($generated@@23 $generated@@134) ($generated@@23 $generated@@133)) 0 (+ ($generated@@28 ($generated@@21 $generated@@132) ($generated@@23 $generated@@133) ($generated@@23 (- $generated@@134 1))) ($generated@@24 ($generated@@23 ($generated@@24 ($generated@@23 (- $generated@@134 1)) ($generated@@23 (- $generated@@134 1)))) ($generated@@23 (- $generated@@134 1))))))))
 :weight 3
 :pattern ( ($generated@@28 ($generated@@21 $generated@@132) ($generated@@23 $generated@@133) ($generated@@23 $generated@@134)))
))))
(assert (forall (($generated@@135 Int) ) (! (= ($generated@@67 $generated@@4 ($generated@@8 ($generated@@23 $generated@@135))) ($generated@@64 $generated@@36 ($generated@@67 $generated@@4 ($generated@@8 $generated@@135))))
 :pattern ( ($generated@@67 $generated@@4 ($generated@@8 ($generated@@23 $generated@@135))))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@67 $generated@@137 ($generated@@64 $generated@@137 $generated@@136)) ($generated@@64 $generated@@36 ($generated@@67 $generated@@137 $generated@@136)))
 :pattern ( ($generated@@67 $generated@@137 ($generated@@64 $generated@@137 $generated@@136)))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! ($generated@@71 $generated@@4 $generated@@139 $generated $generated@@138)
 :pattern ( ($generated@@71 $generated@@4 $generated@@139 $generated $generated@@138))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 () Int)
(declare-fun $generated@@143 () Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Bool)
(declare-fun $generated@@147 () T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U) Bool)
(declare-fun $generated@@150 () T@U)
(declare-fun $generated@@151 (T@U) Bool)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () Int)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () T@U)
(declare-fun $generated@@159 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 34) (let (($generated@@160  (=> (and (and (and (<= $generated@@140 $generated@@141) (<= $generated@@141 $generated@@142)) (= $generated@@143 ($generated@@23 0))) (and ($generated@@71 $generated@@4 ($generated@@8 $generated@@143) $generated $generated@@144) ($generated@@71 $generated@@4 ($generated@@8 $generated@@140) $generated $generated@@144))) (and (=> (= (ControlFlow 0 19) (- 0 24)) (<= ($generated@@23 0) $generated@@143)) (and (=> (= (ControlFlow 0 19) (- 0 23)) (<= $generated@@143 $generated@@140)) (=> ($generated@@29 ($generated@@23 0) $generated@@140) (=> (and ($generated@@71 $generated@@4 ($generated@@8 $generated@@140) $generated $generated@@144) ($generated@@71 $generated@@4 ($generated@@8 $generated@@141) $generated $generated@@144)) (and (=> (= (ControlFlow 0 19) (- 0 22)) (<= ($generated@@23 0) $generated@@140)) (and (=> (= (ControlFlow 0 19) (- 0 21)) (<= $generated@@140 $generated@@141)) (=> (and (and ($generated@@29 $generated@@140 $generated@@141) (= $generated@@145 ($generated@@23 0))) (and ($generated@@71 $generated@@4 ($generated@@8 $generated@@145) $generated $generated@@144) ($generated@@71 $generated@@4 ($generated@@8 $generated@@141) $generated $generated@@144))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (<= ($generated@@23 0) $generated@@145)) (=> (= (ControlFlow 0 19) (- 0 18)) (<= $generated@@145 $generated@@141)))))))))))))
(let (($generated@@161  (=> (and (< $generated@@141 $generated@@140) (= (ControlFlow 0 26) 19)) $generated@@160)))
(let (($generated@@162  (=> (and (<= $generated@@140 $generated@@141) (= (ControlFlow 0 25) 19)) $generated@@160)))
(let (($generated@@163  (=> (not $generated@@146) (and (=> (= (ControlFlow 0 27) 25) $generated@@162) (=> (= (ControlFlow 0 27) 26) $generated@@161)))))
(let (($generated@@164  (=> (= (ControlFlow 0 9) (- 0 8)) (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@140 $generated@@142) (- ($generated@@20 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@142) ($generated@@20 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@140))))))
(let (($generated@@165  (=> (and (<= $generated@@142 $generated@@141) (= $generated@@148 ($generated@@23 0))) (and (=> (= (ControlFlow 0 10) (- 0 16)) (<= ($generated@@23 0) $generated@@148)) (=> (<= ($generated@@23 0) $generated@@148) (and (=> (= (ControlFlow 0 10) (- 0 15)) (<= $generated@@148 $generated@@140)) (=> (<= $generated@@148 $generated@@140) (=> (and ($generated@@149 $generated@@150) ($generated@@151 $generated@@150)) (=> (and (and (and ($generated@@22 $generated@@148 $generated@@140) ($generated@@29 $generated@@148 $generated@@140)) (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@148 $generated@@140) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@148 $generated@@140))) (and (forall (($generated@@166 T@U) ) (!  (=> (and (or (not (= $generated@@166 $generated@@152)) (not true)) ($generated@@7 ($generated@@39 $generated@@3 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@166) $generated@@1)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@150 $generated@@166) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@166)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@150 $generated@@166))
)) ($generated@@77 $generated@@144 $generated@@150))) (and (=> (= (ControlFlow 0 10) (- 0 14)) (<= ($generated@@23 0) $generated@@140)) (=> (<= ($generated@@23 0) $generated@@140) (and (=> (= (ControlFlow 0 10) (- 0 13)) (<= $generated@@140 $generated@@141)) (=> (<= $generated@@140 $generated@@141) (=> (and (and (and ($generated@@149 $generated@@153) ($generated@@151 $generated@@153)) (and ($generated@@22 $generated@@140 $generated@@141) ($generated@@29 $generated@@140 $generated@@141))) (and (and (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@140 $generated@@141) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@140 $generated@@141)) (forall (($generated@@167 T@U) ) (!  (=> (and (or (not (= $generated@@167 $generated@@152)) (not true)) ($generated@@7 ($generated@@39 $generated@@3 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@150 $generated@@167) $generated@@1)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@153 $generated@@167) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@150 $generated@@167)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@153 $generated@@167))
))) (and ($generated@@77 $generated@@150 $generated@@153) (= $generated@@154 ($generated@@23 0))))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (<= ($generated@@23 0) $generated@@154)) (=> (<= ($generated@@23 0) $generated@@154) (and (=> (= (ControlFlow 0 10) (- 0 11)) (<= $generated@@154 $generated@@141)) (=> (<= $generated@@154 $generated@@141) (=> (and (and (and ($generated@@149 $generated@@155) ($generated@@151 $generated@@155)) (and ($generated@@22 $generated@@154 $generated@@141) ($generated@@29 $generated@@154 $generated@@141))) (and (and (= ($generated@@20 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@154 $generated@@141) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@154 $generated@@141)) (forall (($generated@@168 T@U) ) (!  (=> (and (or (not (= $generated@@168 $generated@@152)) (not true)) ($generated@@7 ($generated@@39 $generated@@3 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@153 $generated@@168) $generated@@1)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@155 $generated@@168) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@153 $generated@@168)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@155 $generated@@168))
))) (and ($generated@@77 $generated@@153 $generated@@155) (= (ControlFlow 0 10) 9)))) $generated@@164)))))))))))))))))))
(let (($generated@@169  (=> (< $generated@@141 $generated@@142) (=> (and (= $generated@@156 (- $generated@@142 $generated@@141)) (= $generated@@157 (+ $generated@@141 1))) (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (<= 0 $generated@@156) (= (- $generated@@142 $generated@@157) $generated@@156))) (=> (or (<= 0 $generated@@156) (= (- $generated@@142 $generated@@157) $generated@@156)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (< (- $generated@@142 $generated@@157) $generated@@156)) (=> (< (- $generated@@142 $generated@@157) $generated@@156) (=> (=> (<= $generated@@140 $generated@@157) (=> (<= $generated@@157 $generated@@142) (and (and ($generated@@29 ($generated@@23 0) $generated@@140) ($generated@@29 $generated@@140 $generated@@157)) ($generated@@29 ($generated@@23 0) $generated@@157)))) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@146 (<= $generated@@140 $generated@@157))) (=> (=> $generated@@146 (<= $generated@@140 $generated@@157)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@146 (<= $generated@@157 $generated@@142))) (=> (=> $generated@@146 (<= $generated@@157 $generated@@142)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@146 (= (+ ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@140) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@140 $generated@@157)) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@157)))))))))))))))))
(let (($generated@@170  (=> $generated@@146 (and (=> (= (ControlFlow 0 17) 10) $generated@@165) (=> (= (ControlFlow 0 17) 3) $generated@@169)))))
(let (($generated@@171  (and (=> (= (ControlFlow 0 28) 27) $generated@@163) (=> (= (ControlFlow 0 28) 17) $generated@@170))))
(let (($generated@@172 true))
(let (($generated@@173  (=> (and (not false) (<= 0 $generated@@141)) (=> (and (and (and (=> $generated@@146 (<= $generated@@140 $generated@@141)) (=> $generated@@146 (<= $generated@@141 $generated@@142))) (and (=> $generated@@146 (and (and ($generated@@29 ($generated@@23 0) $generated@@140) ($generated@@29 $generated@@140 $generated@@141)) ($generated@@29 ($generated@@23 0) $generated@@141))) (=> $generated@@146 (= (+ ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@140) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@140 $generated@@141)) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@141))))) (and (and (forall (($generated@@174 T@U) ) (!  (=> (and (or (not (= $generated@@174 $generated@@152)) (not true)) ($generated@@7 ($generated@@39 $generated@@3 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@174) $generated@@1)))) (= ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@174) ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@174)))
 :pattern ( ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@174))
)) ($generated@@77 $generated@@144 $generated@@144)) (and (forall (($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (or (not (= $generated@@175 $generated@@152)) (not true)) ($generated@@7 ($generated@@39 $generated@@3 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@175) $generated@@1)))) (or (= ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@175) $generated@@176) ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@175) $generated@@176)) ($generated@@7 ($generated@@96 $generated@@37 $generated@@35 $generated@@3 $generated@@158 $generated@@175 $generated@@176))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@38 $generated@@35 $generated@@36) $generated@@144 $generated@@175) $generated@@176))
)) (<= (- $generated@@142 $generated@@141) $generated@@159)))) (and (=> (= (ControlFlow 0 29) 1) $generated@@172) (=> (= (ControlFlow 0 29) 28) $generated@@171))))))
(let (($generated@@177  (=> (and (= $generated@@158 ($generated@@97 $generated@@152 $generated@@144 $generated@@1 false)) (= $generated@@159 (- $generated@@142 $generated@@140))) (and (=> (= (ControlFlow 0 30) (- 0 33)) (=> $generated@@146 (<= $generated@@140 $generated@@140))) (=> (=> $generated@@146 (<= $generated@@140 $generated@@140)) (and (=> (= (ControlFlow 0 30) (- 0 32)) (=> $generated@@146 (<= $generated@@140 $generated@@142))) (=> (=> $generated@@146 (<= $generated@@140 $generated@@142)) (and (=> (= (ControlFlow 0 30) (- 0 31)) (=> $generated@@146 (= (+ ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@140) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@140 $generated@@140)) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@140)))) (=> (=> $generated@@146 (= (+ ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@140) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) $generated@@140 $generated@@140)) ($generated@@28 ($generated@@21 ($generated@@21 $generated@@147)) ($generated@@23 0) $generated@@140))) (=> (= (ControlFlow 0 30) 29) $generated@@173))))))))))
(let (($generated@@178  (=> (and ($generated@@149 $generated@@144) ($generated@@151 $generated@@144)) (=> (and (and (= 2 $generated@@19) (<= ($generated@@23 0) $generated@@140)) (and (<= $generated@@140 $generated@@142) (= (ControlFlow 0 34) 30))) $generated@@177))))
$generated@@178))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
