(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@25 (T@T T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U Int Int) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (Int) Int)
(declare-fun $generated@@35 (T@U Int Int) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@43 (T@T T@U) T@U)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@137 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24)
 :pattern ( ($generated@@21 $generated@@7 $generated@@23 $generated@@22 $generated@@24))
)))
(assert (= ($generated@@5 $generated@@26) 3))
(assert (forall (($generated@@30 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 $generated@@27)  (or (= $generated@@30 $generated@@28) (= ($generated@@29 $generated@@30) $generated@@27)))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 $generated@@27))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 Int) ($generated@@40 Int) ) (!  (=> (or ($generated@@35 $generated@@38 ($generated@@34 $generated@@39) ($generated@@34 $generated@@40)) (and (< 0 $generated@@31) (and (and (and (or (not (= $generated@@38 $generated@@28)) (not true)) ($generated@@25 $generated@@26 $generated@@38 $generated@@36)) (<= ($generated@@34 0) $generated@@39)) (<= ($generated@@34 0) $generated@@40)))) (and (=> (or (not (= ($generated@@34 $generated@@39) ($generated@@34 0))) (not true)) (and (=> (= ($generated@@34 $generated@@40) ($generated@@34 0)) ($generated@@35 $generated@@38 ($generated@@34 (- $generated@@39 1)) ($generated@@34 1))) (=> (or (not (= ($generated@@34 $generated@@40) ($generated@@34 0))) (not true)) (and ($generated@@35 $generated@@38 ($generated@@34 $generated@@39) ($generated@@34 (- $generated@@40 1))) ($generated@@35 $generated@@38 ($generated@@34 (- $generated@@39 1)) ($generated@@32 ($generated@@33 $generated@@37) $generated@@38 ($generated@@34 $generated@@39) ($generated@@34 (- $generated@@40 1)))))))) (= ($generated@@32 ($generated@@33 $generated@@37) $generated@@38 ($generated@@34 $generated@@39) ($generated@@34 $generated@@40)) (ite (= ($generated@@34 $generated@@39) ($generated@@34 0)) (+ $generated@@40 1) (ite (= ($generated@@34 $generated@@40) ($generated@@34 0)) ($generated@@32 ($generated@@33 $generated@@37) $generated@@38 ($generated@@34 (- $generated@@39 1)) ($generated@@34 1)) ($generated@@32 ($generated@@33 $generated@@37) $generated@@38 ($generated@@34 (- $generated@@39 1)) ($generated@@32 ($generated@@33 $generated@@37) $generated@@38 ($generated@@34 $generated@@39) ($generated@@34 (- $generated@@40 1)))))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@33 $generated@@37) $generated@@38 ($generated@@34 $generated@@39) ($generated@@34 $generated@@40)))
))))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@21 $generated@@26 $generated@@41 $generated@@36 $generated@@42) ($generated@@21 $generated@@26 $generated@@41 $generated@@27 $generated@@42))
 :pattern ( ($generated@@21 $generated@@26 $generated@@41 $generated@@36 $generated@@42))
 :pattern ( ($generated@@21 $generated@@26 $generated@@41 $generated@@27 $generated@@42))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@51 T@T) ($generated@@52 T@T) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@44 $generated@@51 $generated@@52 ($generated@@48 $generated@@51 $generated@@52 $generated@@54 $generated@@55 $generated@@53) $generated@@55) $generated@@53)
 :weight 0
)) (forall (($generated@@56 T@T) ($generated@@57 T@T) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (!  (or (= $generated@@60 $generated@@61) (= ($generated@@44 $generated@@56 $generated@@57 ($generated@@48 $generated@@56 $generated@@57 $generated@@59 $generated@@60 $generated@@58) $generated@@61) ($generated@@44 $generated@@56 $generated@@57 $generated@@59 $generated@@61)))
 :weight 0
))) (= ($generated@@5 $generated@@45) 4)) (= ($generated@@5 $generated@@46) 5)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (= ($generated@@5 ($generated@@47 $generated@@62 $generated@@63)) 6))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@49 ($generated@@47 $generated@@64 $generated@@65)) $generated@@64)
 :pattern ( ($generated@@47 $generated@@64 $generated@@65))
))) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (! (= ($generated@@50 ($generated@@47 $generated@@66 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@66 $generated@@67))
))))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@21 $generated@@26 $generated@@68 $generated@@27 $generated@@69)  (or (= $generated@@68 $generated@@28) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@26 ($generated@@47 $generated@@45 $generated@@46) $generated@@69 $generated@@68) $generated)))))
 :pattern ( ($generated@@21 $generated@@26 $generated@@68 $generated@@27 $generated@@69))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 Int) ($generated@@74 Int) ) (!  (=> (or ($generated@@35 ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 $generated@@73) ($generated@@34 $generated@@74)) (and (< 0 $generated@@31) (and (and (and (or (not (= $generated@@72 $generated@@28)) (not true)) ($generated@@25 $generated@@26 $generated@@72 $generated@@36)) (<= ($generated@@34 0) $generated@@73)) (<= ($generated@@34 0) $generated@@74)))) (and (=> (or (not (= ($generated@@34 $generated@@73) ($generated@@34 0))) (not true)) (and (=> (= ($generated@@34 $generated@@74) ($generated@@34 0)) ($generated@@35 ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 (- $generated@@73 1)) ($generated@@34 1))) (=> (or (not (= ($generated@@34 $generated@@74) ($generated@@34 0))) (not true)) (and ($generated@@35 ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 $generated@@73) ($generated@@34 (- $generated@@74 1))) ($generated@@35 ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 (- $generated@@73 1)) ($generated@@34 ($generated@@32 ($generated@@33 $generated@@71) ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 $generated@@73) ($generated@@34 (- $generated@@74 1))))))))) (= ($generated@@32 ($generated@@33 $generated@@71) ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 $generated@@73) ($generated@@34 $generated@@74)) (ite (= ($generated@@34 $generated@@73) ($generated@@34 0)) (+ $generated@@74 1) (ite (= ($generated@@34 $generated@@74) ($generated@@34 0)) ($generated@@32 ($generated@@33 $generated@@71) ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 (- $generated@@73 1)) ($generated@@34 1)) ($generated@@32 ($generated@@33 $generated@@71) ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 (- $generated@@73 1)) ($generated@@34 ($generated@@32 ($generated@@33 $generated@@71) ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 $generated@@73) ($generated@@34 (- $generated@@74 1))))))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@33 $generated@@71) ($generated@@70 $generated@@26 $generated@@72) ($generated@@34 $generated@@73) ($generated@@34 $generated@@74)))
))))
(assert (forall (($generated@@75 Int) ) (! (= ($generated@@34 $generated@@75) $generated@@75)
 :pattern ( ($generated@@34 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@70 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@70 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 ($generated@@43 $generated@@80 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@43 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@25 $generated@@7 $generated@@81 $generated@@22) (<= ($generated@@34 0) ($generated@@12 $generated@@81)))
 :pattern ( ($generated@@25 $generated@@7 $generated@@81 $generated@@22))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@T) ) (! (= ($generated@@82 ($generated@@78 $generated@@86 $generated@@83) $generated@@84 $generated@@85) ($generated@@21 $generated@@86 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@82 ($generated@@78 $generated@@86 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@87 $generated@@36)  (and ($generated@@25 $generated@@26 $generated@@87 $generated@@27) (or (not (= $generated@@87 $generated@@28)) (not true))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@87 $generated@@36))
 :pattern ( ($generated@@25 $generated@@26 $generated@@87 $generated@@27))
)))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 Int) ($generated@@91 Int) ) (!  (=> (or ($generated@@35 $generated@@89 $generated@@90 $generated@@91) (and (< 0 $generated@@31) (and (and (and (or (not (= $generated@@89 $generated@@28)) (not true)) ($generated@@25 $generated@@26 $generated@@89 $generated@@36)) (<= ($generated@@34 0) $generated@@90)) (<= ($generated@@34 0) $generated@@91)))) (and (=> (or (not (= $generated@@90 ($generated@@34 0))) (not true)) (and (=> (= $generated@@91 ($generated@@34 0)) ($generated@@35 $generated@@89 (- $generated@@90 1) ($generated@@34 1))) (=> (or (not (= $generated@@91 ($generated@@34 0))) (not true)) (and ($generated@@35 $generated@@89 $generated@@90 (- $generated@@91 1)) ($generated@@35 $generated@@89 (- $generated@@90 1) ($generated@@32 $generated@@88 $generated@@89 $generated@@90 (- $generated@@91 1))))))) (= ($generated@@32 ($generated@@33 $generated@@88) $generated@@89 $generated@@90 $generated@@91) (ite (= $generated@@90 ($generated@@34 0)) (+ $generated@@91 1) (ite (= $generated@@91 ($generated@@34 0)) ($generated@@32 $generated@@88 $generated@@89 (- $generated@@90 1) ($generated@@34 1)) ($generated@@32 $generated@@88 $generated@@89 (- $generated@@90 1) ($generated@@32 $generated@@88 $generated@@89 $generated@@90 (- $generated@@91 1))))))))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@88) $generated@@89 $generated@@90 $generated@@91))
))))
(assert  (=> (<= 0 $generated@@31) (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 Int) ) (!  (=> (or ($generated@@35 $generated@@93 $generated@@94 $generated@@95) (and (< 0 $generated@@31) (and (and (and (or (not (= $generated@@93 $generated@@28)) (not true)) ($generated@@25 $generated@@26 $generated@@93 $generated@@36)) (<= ($generated@@34 0) $generated@@94)) (<= ($generated@@34 0) $generated@@95)))) (<= ($generated@@34 0) ($generated@@32 $generated@@92 $generated@@93 $generated@@94 $generated@@95)))
 :pattern ( ($generated@@32 $generated@@92 $generated@@93 $generated@@94 $generated@@95))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@43 $generated@@97 ($generated@@78 $generated@@97 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@78 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 Int) ) (! (= ($generated@@32 ($generated@@33 $generated@@98) $generated@@99 $generated@@100 $generated@@101) ($generated@@32 $generated@@98 $generated@@99 $generated@@100 $generated@@101))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@98) $generated@@99 $generated@@100 $generated@@101))
)))
(assert  (and (forall (($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@102 $generated@@105 $generated@@106 $generated@@107 ($generated@@104 $generated@@105 $generated@@106 $generated@@107 $generated@@109 $generated@@110 $generated@@111 $generated@@108) $generated@@110 $generated@@111) $generated@@108)
 :weight 0
)) (and (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@102 $generated@@112 $generated@@113 $generated@@114 ($generated@@104 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@102 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@102 $generated@@121 $generated@@122 $generated@@123 ($generated@@104 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@126 $generated@@127 $generated@@124) $generated@@128 $generated@@129) ($generated@@102 $generated@@121 $generated@@122 $generated@@123 $generated@@125 $generated@@128 $generated@@129)))
 :weight 0
)))))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 Bool) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@10 ($generated@@102 $generated@@26 $generated@@45 $generated@@6 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))  (=> (and (or (not (= $generated@@134 $generated@@130)) (not true)) ($generated@@10 ($generated@@43 $generated@@6 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@26 ($generated@@47 $generated@@45 $generated@@46) $generated@@131 $generated@@134) $generated@@132)))) $generated@@133))
 :pattern ( ($generated@@102 $generated@@26 $generated@@45 $generated@@6 ($generated@@103 $generated@@130 $generated@@131 $generated@@132 $generated@@133) $generated@@134 $generated@@135))
)))
(assert (= ($generated@@136 $generated@@22) $generated@@0))
(assert (= ($generated@@137 $generated@@22) $generated@@3))
(assert (= ($generated@@136 $generated@@27) $generated@@1))
(assert (= ($generated@@137 $generated@@27) $generated@@4))
(assert (= ($generated@@136 $generated@@36) $generated@@2))
(assert (= ($generated@@137 $generated@@36) $generated@@4))
(assert (forall (($generated@@138 Int) ) (! (= ($generated@@78 $generated@@7 ($generated@@11 ($generated@@34 $generated@@138))) ($generated@@70 $generated@@46 ($generated@@78 $generated@@7 ($generated@@11 $generated@@138))))
 :pattern ( ($generated@@78 $generated@@7 ($generated@@11 ($generated@@34 $generated@@138))))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@T) ) (! (= ($generated@@78 $generated@@140 ($generated@@70 $generated@@140 $generated@@139)) ($generated@@70 $generated@@46 ($generated@@78 $generated@@140 $generated@@139)))
 :pattern ( ($generated@@78 $generated@@140 ($generated@@70 $generated@@140 $generated@@139)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@141 () Int)
(declare-fun $generated@@142 () T@U)
(declare-fun $generated@@143 () T@U)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 () Int)
(declare-fun $generated@@146 () Int)
(declare-fun $generated@@147 () Int)
(declare-fun $generated@@148 () T@U)
(declare-fun $generated@@149 () Int)
(declare-fun $generated@@150 () Int)
(declare-fun $generated@@151 () T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@154  (=> (and (or (not (= $generated@@141 ($generated@@34 0))) (not true)) ($generated@@82 ($generated@@78 $generated@@26 $generated@@142) $generated@@27 $generated@@143)) (and (=> (= (ControlFlow 0 11) (- 0 18)) ($generated@@25 $generated@@7 ($generated@@11 (- $generated@@144 1)) $generated@@22)) (=> ($generated@@25 $generated@@7 ($generated@@11 (- $generated@@144 1)) $generated@@22) (=> (and (and (= $generated@@145 (- $generated@@144 1)) ($generated@@21 $generated@@7 ($generated@@11 $generated@@145) $generated@@22 $generated@@143)) (and ($generated@@82 ($generated@@78 $generated@@26 $generated@@142) $generated@@27 $generated@@143) ($generated@@21 $generated@@7 ($generated@@11 $generated@@144) $generated@@22 $generated@@143))) (and (=> (= (ControlFlow 0 11) (- 0 17)) ($generated@@25 $generated@@7 ($generated@@11 (- $generated@@141 1)) $generated@@22)) (=> ($generated@@25 $generated@@7 ($generated@@11 (- $generated@@141 1)) $generated@@22) (=> (and (= $generated@@146 (- $generated@@141 1)) ($generated@@21 $generated@@7 ($generated@@11 $generated@@146) $generated@@22 $generated@@143)) (and (=> (= (ControlFlow 0 11) (- 0 16)) (or (<= 0 $generated@@144) (= $generated@@144 $generated@@144))) (=> (or (<= 0 $generated@@144) (= $generated@@144 $generated@@144)) (and (=> (= (ControlFlow 0 11) (- 0 15)) (or (or (<= 0 $generated@@141) (< $generated@@144 $generated@@144)) (= $generated@@146 $generated@@141))) (=> (or (or (<= 0 $generated@@141) (< $generated@@144 $generated@@144)) (= $generated@@146 $generated@@141)) (and (=> (= (ControlFlow 0 11) (- 0 14)) (or (< $generated@@144 $generated@@144) (and (= $generated@@144 $generated@@144) (< $generated@@146 $generated@@141)))) (=> (or (< $generated@@144 $generated@@144) (and (= $generated@@144 $generated@@144) (< $generated@@146 $generated@@141))) (=> ($generated@@35 $generated@@142 $generated@@144 (- $generated@@141 1)) (=> (and (= $generated@@147 ($generated@@32 ($generated@@33 $generated@@148) $generated@@142 $generated@@144 (- $generated@@141 1))) ($generated@@21 $generated@@7 ($generated@@11 $generated@@147) $generated@@22 $generated@@143)) (and (=> (= (ControlFlow 0 11) (- 0 13)) (or (<= 0 $generated@@144) (= $generated@@145 $generated@@144))) (=> (or (<= 0 $generated@@144) (= $generated@@145 $generated@@144)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (or (or (<= 0 $generated@@141) (< $generated@@145 $generated@@144)) (= $generated@@147 $generated@@141))) (=> (or (or (<= 0 $generated@@141) (< $generated@@145 $generated@@144)) (= $generated@@147 $generated@@141)) (=> (= (ControlFlow 0 11) (- 0 10)) (or (< $generated@@145 $generated@@144) (and (= $generated@@145 $generated@@144) (< $generated@@147 $generated@@141)))))))))))))))))))))))))
(let (($generated@@155  (=> (and (= $generated@@141 ($generated@@34 0)) ($generated@@82 ($generated@@78 $generated@@26 $generated@@142) $generated@@27 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 9)) ($generated@@25 $generated@@7 ($generated@@11 (- $generated@@144 1)) $generated@@22)) (=> ($generated@@25 $generated@@7 ($generated@@11 (- $generated@@144 1)) $generated@@22) (=> (and (= $generated@@149 (- $generated@@144 1)) ($generated@@21 $generated@@7 ($generated@@11 $generated@@149) $generated@@22 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 8)) ($generated@@25 $generated@@7 ($generated@@11 ($generated@@34 1)) $generated@@22)) (=> ($generated@@25 $generated@@7 ($generated@@11 ($generated@@34 1)) $generated@@22) (=> (and (= $generated@@150 ($generated@@34 1)) ($generated@@21 $generated@@7 ($generated@@11 $generated@@150) $generated@@22 $generated@@143)) (and (=> (= (ControlFlow 0 5) (- 0 7)) (or (<= 0 $generated@@144) (= $generated@@149 $generated@@144))) (=> (or (<= 0 $generated@@144) (= $generated@@149 $generated@@144)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (or (<= 0 $generated@@141) (< $generated@@149 $generated@@144)) (= $generated@@150 $generated@@141))) (=> (or (or (<= 0 $generated@@141) (< $generated@@149 $generated@@144)) (= $generated@@150 $generated@@141)) (=> (= (ControlFlow 0 5) (- 0 4)) (or (< $generated@@149 $generated@@144) (and (= $generated@@149 $generated@@144) (< $generated@@150 $generated@@141)))))))))))))))))
(let (($generated@@156  (=> (or (not (= $generated@@144 ($generated@@34 0))) (not true)) (and (=> (= (ControlFlow 0 19) 5) $generated@@155) (=> (= (ControlFlow 0 19) 11) $generated@@154)))))
(let (($generated@@157  (=> (and (= $generated@@144 ($generated@@34 0)) (= (ControlFlow 0 3) (- 0 2))) ($generated@@25 $generated@@7 ($generated@@11 (+ $generated@@141 1)) $generated@@22))))
(let (($generated@@158 true))
(let (($generated@@159  (=> (= $generated@@151 ($generated@@103 $generated@@28 $generated@@143 $generated false)) (and (and (=> (= (ControlFlow 0 20) 1) $generated@@158) (=> (= (ControlFlow 0 20) 3) $generated@@157)) (=> (= (ControlFlow 0 20) 19) $generated@@156)))))
(let (($generated@@160  (=> (and (and (and ($generated@@152 $generated@@143) ($generated@@153 $generated@@143)) (and (or (not (= $generated@@142 $generated@@28)) (not true)) (and ($generated@@25 $generated@@26 $generated@@142 $generated@@36) ($generated@@21 $generated@@26 $generated@@142 $generated@@36 $generated@@143)))) (and (and (<= ($generated@@34 0) $generated@@144) (<= ($generated@@34 0) $generated@@141)) (and (= 0 $generated@@31) (= (ControlFlow 0 21) 20)))) $generated@@159)))
$generated@@160))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
