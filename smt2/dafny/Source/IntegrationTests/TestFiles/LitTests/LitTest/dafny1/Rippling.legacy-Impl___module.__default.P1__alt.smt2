(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@74 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) Bool)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@143 (T@U) Int)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@150 () T@T)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@153 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@T T@T) T@T)
(declare-fun $generated@@156 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@208 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@209 (T@U) Bool)
(declare-fun $generated@@214 (T@U) T@U)
(declare-fun $generated@@215 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30) $generated@@27)  (and ($generated@@24 $generated@@25 $generated@@29 $generated@@28) ($generated@@24 $generated@@25 $generated@@30 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30) $generated@@27))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@35 ($generated@@34 $generated@@25 $generated@@40) ($generated@@34 $generated@@25 $generated@@41)) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@40 $generated@@27) ($generated@@24 $generated@@25 $generated@@41 $generated@@27)))) (and (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@36 ($generated@@34 $generated@@25 $generated@@40)))))) (let (($generated@@42 ($generated@@34 $generated@@25 ($generated@@37 ($generated@@34 $generated@@25 $generated@@40)))))
($generated@@35 $generated@@42 ($generated@@34 $generated@@25 $generated@@41)))) (= ($generated@@32 ($generated@@33 $generated@@39) ($generated@@34 $generated@@25 $generated@@40) ($generated@@34 $generated@@25 $generated@@41)) (ite ($generated@@36 ($generated@@34 $generated@@25 $generated@@40)) $generated@@41 (let (($generated@@43 ($generated@@34 $generated@@25 ($generated@@37 ($generated@@34 $generated@@25 $generated@@40)))))
(let (($generated@@44 ($generated@@34 $generated@@25 ($generated@@38 ($generated@@34 $generated@@25 $generated@@40)))))
($generated@@34 $generated@@25 ($generated@@26 $generated@@44 ($generated@@34 $generated@@25 ($generated@@32 ($generated@@33 $generated@@39) $generated@@43 ($generated@@34 $generated@@25 $generated@@41)))))))))))
 :weight 3
 :pattern ( ($generated@@32 ($generated@@33 $generated@@39) ($generated@@34 $generated@@25 $generated@@40) ($generated@@34 $generated@@25 $generated@@41)))
))))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (=> (or ($generated@@46 ($generated@@34 $generated@@25 $generated@@51) ($generated@@34 $generated@@25 $generated@@52)) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@51 $generated@@28) ($generated@@24 $generated@@25 $generated@@52 $generated@@27)))) (and (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@47 ($generated@@34 $generated@@25 $generated@@51)))))) (let (($generated@@53 ($generated@@34 $generated@@25 ($generated@@48 ($generated@@34 $generated@@25 $generated@@51)))))
 (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@36 ($generated@@34 $generated@@25 $generated@@52)))))) (let (($generated@@54 ($generated@@34 $generated@@25 ($generated@@37 ($generated@@34 $generated@@25 $generated@@52)))))
($generated@@46 $generated@@53 $generated@@54))))) (= ($generated@@45 ($generated@@33 $generated@@50) ($generated@@34 $generated@@25 $generated@@51) ($generated@@34 $generated@@25 $generated@@52)) (ite ($generated@@47 ($generated@@34 $generated@@25 $generated@@51)) $generated@@52 (let (($generated@@55 ($generated@@34 $generated@@25 ($generated@@48 ($generated@@34 $generated@@25 $generated@@51)))))
(ite ($generated@@36 ($generated@@34 $generated@@25 $generated@@52)) $generated@@49 (let (($generated@@56 ($generated@@34 $generated@@25 ($generated@@37 ($generated@@34 $generated@@25 $generated@@52)))))
($generated@@34 $generated@@25 ($generated@@45 ($generated@@33 $generated@@50) $generated@@55 $generated@@56)))))))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@33 $generated@@50) ($generated@@34 $generated@@25 $generated@@51) ($generated@@34 $generated@@25 $generated@@52)))
))))
(assert (= ($generated@@57 $generated@@58) $generated@@2))
(assert (= ($generated@@57 $generated@@49) $generated@@4))
(assert ($generated@@24 $generated@@25 $generated@@58 $generated@@28))
(assert ($generated@@24 $generated@@25 $generated@@49 $generated@@27))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@59 $generated@@60 $generated@@61) (= $generated@@60 $generated@@61))
 :pattern ( ($generated@@59 $generated@@60 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@62 $generated@@63 $generated@@64) (= $generated@@63 $generated@@64))
 :pattern ( ($generated@@62 $generated@@63 $generated@@64))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@T) ) (! (= ($generated@@34 $generated@@66 $generated@@65) $generated@@65)
 :pattern ( ($generated@@34 $generated@@66 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ) (! (= ($generated@@47 $generated@@67) (= ($generated@@57 $generated@@67) $generated@@2))
 :pattern ( ($generated@@47 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 $generated@@69) (= ($generated@@57 $generated@@69) $generated@@3))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@36 $generated@@70) (= ($generated@@57 $generated@@70) $generated@@4))
 :pattern ( ($generated@@36 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@57 $generated@@72) $generated@@5))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@74 $generated@@76 ($generated@@73 $generated@@76 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@73 $generated@@76 $generated@@75))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@35 $generated@@78 $generated@@79) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@78 $generated@@27) ($generated@@24 $generated@@25 $generated@@79 $generated@@27)))) (and (=> (not ($generated@@36 $generated@@78)) (let (($generated@@80 ($generated@@37 $generated@@78)))
($generated@@35 $generated@@80 $generated@@79))) (= ($generated@@32 ($generated@@33 $generated@@77) $generated@@78 $generated@@79) (ite ($generated@@36 $generated@@78) $generated@@79 (let (($generated@@81 ($generated@@37 $generated@@78)))
(let (($generated@@82 ($generated@@38 $generated@@78)))
($generated@@26 $generated@@82 ($generated@@32 $generated@@77 $generated@@81 $generated@@79))))))))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@77) $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@71 $generated@@83) (exists (($generated@@84 T@U) ($generated@@85 T@U) ) (= $generated@@83 ($generated@@26 $generated@@84 $generated@@85))))
 :pattern ( ($generated@@71 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ) (!  (=> ($generated@@47 $generated@@86) (= $generated@@86 $generated@@58))
 :pattern ( ($generated@@47 $generated@@86))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@36 $generated@@87) (= $generated@@87 $generated@@49))
 :pattern ( ($generated@@36 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@68 $generated@@89) (exists (($generated@@90 T@U) ) (= $generated@@89 ($generated@@88 $generated@@90))))
 :pattern ( ($generated@@68 $generated@@89))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@46 $generated@@92 $generated@@93) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@92 $generated@@28) ($generated@@24 $generated@@25 $generated@@93 $generated@@27)))) (and (=> (not ($generated@@47 $generated@@92)) (let (($generated@@94 ($generated@@48 $generated@@92)))
 (=> (not ($generated@@36 $generated@@93)) (let (($generated@@95 ($generated@@37 $generated@@93)))
($generated@@46 $generated@@94 $generated@@95))))) (= ($generated@@45 ($generated@@33 $generated@@91) $generated@@92 $generated@@93) (ite ($generated@@47 $generated@@92) $generated@@93 (let (($generated@@96 ($generated@@48 $generated@@92)))
(ite ($generated@@36 $generated@@93) $generated@@49 (let (($generated@@97 ($generated@@37 $generated@@93)))
($generated@@45 $generated@@91 $generated@@96 $generated@@97))))))))
 :pattern ( ($generated@@45 ($generated@@33 $generated@@91) $generated@@92 $generated@@93))
))))
(assert (forall (($generated@@98 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@88 $generated@@98) $generated@@28) ($generated@@24 $generated@@25 $generated@@98 $generated@@28))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@88 $generated@@98) $generated@@28))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and ($generated@@68 $generated@@99) ($generated@@68 $generated@@100)) (= ($generated@@59 $generated@@99 $generated@@100) ($generated@@59 ($generated@@48 $generated@@99) ($generated@@48 $generated@@100))))
 :pattern ( ($generated@@59 $generated@@99 $generated@@100) ($generated@@68 $generated@@99))
 :pattern ( ($generated@@59 $generated@@99 $generated@@100) ($generated@@68 $generated@@100))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (!  (=> (or ($generated@@35 $generated@@102 $generated@@103) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@102 $generated@@27) ($generated@@24 $generated@@25 $generated@@103 $generated@@27)))) ($generated@@24 $generated@@25 ($generated@@32 $generated@@101 $generated@@102 $generated@@103) $generated@@27))
 :pattern ( ($generated@@32 $generated@@101 $generated@@102 $generated@@103))
))))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@46 $generated@@105 $generated@@106) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@105 $generated@@28) ($generated@@24 $generated@@25 $generated@@106 $generated@@27)))) ($generated@@24 $generated@@25 ($generated@@45 $generated@@104 $generated@@105 $generated@@106) $generated@@27))
 :pattern ( ($generated@@45 $generated@@104 $generated@@105 $generated@@106))
))))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@108 $generated@@110 $generated@@111) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@110 $generated@@28) ($generated@@24 $generated@@25 $generated@@111 $generated@@27)))) ($generated@@24 $generated@@25 ($generated@@107 $generated@@109 $generated@@110 $generated@@111) $generated@@27))
 :pattern ( ($generated@@107 $generated@@109 $generated@@110 $generated@@111))
))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@32 ($generated@@33 $generated@@112) $generated@@113 $generated@@114) ($generated@@32 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@32 ($generated@@33 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@45 ($generated@@33 $generated@@115) $generated@@116 $generated@@117) ($generated@@45 $generated@@115 $generated@@116 $generated@@117))
 :pattern ( ($generated@@45 ($generated@@33 $generated@@115) $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@107 ($generated@@33 $generated@@118) $generated@@119 $generated@@120) ($generated@@107 $generated@@118 $generated@@119 $generated@@120))
 :pattern ( ($generated@@107 ($generated@@33 $generated@@118) $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@121 $generated@@122) (or ($generated@@47 $generated@@122) ($generated@@68 $generated@@122)))
 :pattern ( ($generated@@121 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@123 $generated@@124) (or ($generated@@36 $generated@@124) ($generated@@71 $generated@@124)))
 :pattern ( ($generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@125 $generated@@28) (or ($generated@@47 $generated@@125) ($generated@@68 $generated@@125)))
 :pattern ( ($generated@@68 $generated@@125) ($generated@@24 $generated@@25 $generated@@125 $generated@@28))
 :pattern ( ($generated@@47 $generated@@125) ($generated@@24 $generated@@25 $generated@@125 $generated@@28))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@126 $generated@@27) (or ($generated@@36 $generated@@126) ($generated@@71 $generated@@126)))
 :pattern ( ($generated@@71 $generated@@126) ($generated@@24 $generated@@25 $generated@@126 $generated@@27))
 :pattern ( ($generated@@36 $generated@@126) ($generated@@24 $generated@@25 $generated@@126 $generated@@27))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@71 $generated@@127) ($generated@@71 $generated@@128)) (= ($generated@@62 $generated@@127 $generated@@128)  (and ($generated@@59 ($generated@@38 $generated@@127) ($generated@@38 $generated@@128)) ($generated@@62 ($generated@@37 $generated@@127) ($generated@@37 $generated@@128)))))
 :pattern ( ($generated@@62 $generated@@127 $generated@@128) ($generated@@71 $generated@@127))
 :pattern ( ($generated@@62 $generated@@127 $generated@@128) ($generated@@71 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (=> (and ($generated@@47 $generated@@129) ($generated@@47 $generated@@130)) ($generated@@59 $generated@@129 $generated@@130))
 :pattern ( ($generated@@59 $generated@@129 $generated@@130) ($generated@@47 $generated@@129))
 :pattern ( ($generated@@59 $generated@@129 $generated@@130) ($generated@@47 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@36 $generated@@131) ($generated@@36 $generated@@132)) ($generated@@62 $generated@@131 $generated@@132))
 :pattern ( ($generated@@62 $generated@@131 $generated@@132) ($generated@@36 $generated@@131))
 :pattern ( ($generated@@62 $generated@@131 $generated@@132) ($generated@@36 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@57 ($generated@@26 $generated@@133 $generated@@134)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@38 ($generated@@26 $generated@@135 $generated@@136)) $generated@@135)
 :pattern ( ($generated@@26 $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@37 ($generated@@26 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@26 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@57 ($generated@@88 $generated@@139)) $generated@@3)
 :pattern ( ($generated@@88 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@48 ($generated@@88 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@88 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@73 $generated@@142 ($generated@@74 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@74 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (< ($generated@@143 $generated@@144) ($generated@@143 ($generated@@26 $generated@@144 $generated@@145)))
 :pattern ( ($generated@@26 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (< ($generated@@143 $generated@@147) ($generated@@143 ($generated@@26 $generated@@146 $generated@@147)))
 :pattern ( ($generated@@26 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (< ($generated@@143 $generated@@148) ($generated@@143 ($generated@@88 $generated@@148)))
 :pattern ( ($generated@@88 $generated@@148))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@149 $generated@@160 $generated@@161 $generated@@162 ($generated@@156 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@165 $generated@@166) $generated@@163)
 :weight 0
)) (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@149 $generated@@167 $generated@@168 $generated@@169 ($generated@@156 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@149 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@149 $generated@@176 $generated@@177 $generated@@178 ($generated@@156 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@149 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)))) (= ($generated@@8 $generated@@150) 4)) (= ($generated@@8 $generated@@151) 5)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@153 $generated@@185 $generated@@186 ($generated@@157 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@187) $generated@@189) $generated@@187)
 :weight 0
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@194 $generated@@195) (= ($generated@@153 $generated@@190 $generated@@191 ($generated@@157 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@192) $generated@@195) ($generated@@153 $generated@@190 $generated@@191 $generated@@193 $generated@@195)))
 :weight 0
))) (= ($generated@@8 $generated@@154) 6)) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (= ($generated@@8 ($generated@@155 $generated@@196 $generated@@197)) 7))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@158 ($generated@@155 $generated@@198 $generated@@199)) $generated@@198)
 :pattern ( ($generated@@155 $generated@@198 $generated@@199))
))) (forall (($generated@@200 T@T) ($generated@@201 T@T) ) (! (= ($generated@@159 ($generated@@155 $generated@@200 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@155 $generated@@200 $generated@@201))
))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 Bool) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@13 ($generated@@149 $generated@@150 $generated@@151 $generated@@9 ($generated@@152 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (or (not (= $generated@@206 $generated@@202)) (not true)) ($generated@@13 ($generated@@73 $generated@@9 ($generated@@153 $generated@@151 $generated@@154 ($generated@@153 $generated@@150 ($generated@@155 $generated@@151 $generated@@154) $generated@@203 $generated@@206) $generated@@204)))) $generated@@205))
 :pattern ( ($generated@@149 $generated@@150 $generated@@151 $generated@@9 ($generated@@152 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@209 $generated@@211) ($generated@@24 $generated@@25 $generated@@210 $generated@@28)) ($generated@@208 $generated@@25 $generated@@210 $generated@@28 $generated@@211))
 :pattern ( ($generated@@208 $generated@@25 $generated@@210 $generated@@28 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@209 $generated@@213) ($generated@@24 $generated@@25 $generated@@212 $generated@@27)) ($generated@@208 $generated@@25 $generated@@212 $generated@@27 $generated@@213))
 :pattern ( ($generated@@208 $generated@@25 $generated@@212 $generated@@27 $generated@@213))
)))
(assert (= ($generated@@214 $generated@@28) $generated@@0))
(assert (= ($generated@@215 $generated@@28) $generated@@6))
(assert (= ($generated@@214 $generated@@27) $generated@@1))
(assert (= ($generated@@215 $generated@@27) $generated@@7))
(assert (= $generated@@58 ($generated@@34 $generated@@25 $generated@@58)))
(assert (= $generated@@49 ($generated@@34 $generated@@25 $generated@@49)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (or ($generated@@108 $generated@@217 $generated@@218) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@217 $generated@@28) ($generated@@24 $generated@@25 $generated@@218 $generated@@27)))) (and (=> (not ($generated@@47 $generated@@217)) (let (($generated@@219 ($generated@@48 $generated@@217)))
 (=> (not ($generated@@36 $generated@@218)) (let (($generated@@220 ($generated@@37 $generated@@218)))
($generated@@108 $generated@@219 $generated@@220))))) (= ($generated@@107 ($generated@@33 $generated@@216) $generated@@217 $generated@@218) (ite ($generated@@47 $generated@@217) $generated@@49 (let (($generated@@221 ($generated@@48 $generated@@217)))
(ite ($generated@@36 $generated@@218) $generated@@49 (let (($generated@@222 ($generated@@37 $generated@@218)))
(let (($generated@@223 ($generated@@38 $generated@@218)))
($generated@@26 $generated@@223 ($generated@@107 $generated@@216 $generated@@221 $generated@@222))))))))))
 :pattern ( ($generated@@107 ($generated@@33 $generated@@216) $generated@@217 $generated@@218))
))))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and ($generated@@209 $generated@@225) (and ($generated@@68 $generated@@224) ($generated@@208 $generated@@25 $generated@@224 $generated@@28 $generated@@225))) ($generated@@208 $generated@@25 ($generated@@48 $generated@@224) $generated@@28 $generated@@225))
 :pattern ( ($generated@@208 $generated@@25 ($generated@@48 $generated@@224) $generated@@28 $generated@@225))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@209 $generated@@227) (and ($generated@@71 $generated@@226) ($generated@@208 $generated@@25 $generated@@226 $generated@@27 $generated@@227))) ($generated@@208 $generated@@25 ($generated@@38 $generated@@226) $generated@@28 $generated@@227))
 :pattern ( ($generated@@208 $generated@@25 ($generated@@38 $generated@@226) $generated@@28 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and ($generated@@209 $generated@@229) (and ($generated@@71 $generated@@228) ($generated@@208 $generated@@25 $generated@@228 $generated@@27 $generated@@229))) ($generated@@208 $generated@@25 ($generated@@37 $generated@@228) $generated@@27 $generated@@229))
 :pattern ( ($generated@@208 $generated@@25 ($generated@@37 $generated@@228) $generated@@27 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@26 ($generated@@34 $generated@@25 $generated@@230) ($generated@@34 $generated@@25 $generated@@231)) ($generated@@34 $generated@@25 ($generated@@26 $generated@@230 $generated@@231)))
 :pattern ( ($generated@@26 ($generated@@34 $generated@@25 $generated@@230) ($generated@@34 $generated@@25 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ) (! (= ($generated@@88 ($generated@@34 $generated@@25 $generated@@232)) ($generated@@34 $generated@@25 ($generated@@88 $generated@@232)))
 :pattern ( ($generated@@88 ($generated@@34 $generated@@25 $generated@@232)))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@T) ) (! (= ($generated@@74 $generated@@234 ($generated@@34 $generated@@234 $generated@@233)) ($generated@@34 $generated@@154 ($generated@@74 $generated@@234 $generated@@233)))
 :pattern ( ($generated@@74 $generated@@234 ($generated@@34 $generated@@234 $generated@@233)))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@235 T@U) ($generated@@236 T@U) ($generated@@237 T@U) ) (!  (=> (or ($generated@@108 ($generated@@34 $generated@@25 $generated@@236) ($generated@@34 $generated@@25 $generated@@237)) (and (< 2 $generated@@31) (and ($generated@@24 $generated@@25 $generated@@236 $generated@@28) ($generated@@24 $generated@@25 $generated@@237 $generated@@27)))) (and (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@47 ($generated@@34 $generated@@25 $generated@@236)))))) (let (($generated@@238 ($generated@@34 $generated@@25 ($generated@@48 ($generated@@34 $generated@@25 $generated@@236)))))
 (=> (not ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 ($generated@@36 ($generated@@34 $generated@@25 $generated@@237)))))) (let (($generated@@239 ($generated@@34 $generated@@25 ($generated@@37 ($generated@@34 $generated@@25 $generated@@237)))))
($generated@@108 $generated@@238 $generated@@239))))) (= ($generated@@107 ($generated@@33 $generated@@235) ($generated@@34 $generated@@25 $generated@@236) ($generated@@34 $generated@@25 $generated@@237)) (ite ($generated@@47 ($generated@@34 $generated@@25 $generated@@236)) $generated@@49 (let (($generated@@240 ($generated@@34 $generated@@25 ($generated@@48 ($generated@@34 $generated@@25 $generated@@236)))))
(ite ($generated@@36 ($generated@@34 $generated@@25 $generated@@237)) $generated@@49 (let (($generated@@241 ($generated@@34 $generated@@25 ($generated@@37 ($generated@@34 $generated@@25 $generated@@237)))))
(let (($generated@@242 ($generated@@34 $generated@@25 ($generated@@38 ($generated@@34 $generated@@25 $generated@@237)))))
($generated@@34 $generated@@25 ($generated@@26 $generated@@242 ($generated@@34 $generated@@25 ($generated@@107 ($generated@@33 $generated@@235) $generated@@240 $generated@@241))))))))))))
 :weight 3
 :pattern ( ($generated@@107 ($generated@@33 $generated@@235) ($generated@@34 $generated@@25 $generated@@236) ($generated@@34 $generated@@25 $generated@@237)))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@243 () T@U)
(declare-fun $generated@@244 () T@U)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 (T@U) Bool)
(declare-fun $generated@@250 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@251  (=> (= $generated@@243 ($generated@@152 $generated@@244 $generated@@245 $generated false)) (=> (and ($generated@@121 $generated@@246) ($generated@@123 $generated@@247)) (=> (and (and (and ($generated@@209 $generated@@248) ($generated@@249 $generated@@248)) (= $generated@@245 $generated@@248)) (and (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (!  (=> (and (and (and ($generated@@24 $generated@@25 $generated@@252 $generated@@28) ($generated@@24 $generated@@25 $generated@@253 $generated@@27)) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@12 true)))) (or (< ($generated@@143 $generated@@252) ($generated@@143 $generated@@246)) (and (= ($generated@@143 $generated@@252) ($generated@@143 $generated@@246)) (< ($generated@@143 $generated@@253) ($generated@@143 $generated@@247))))) ($generated@@62 ($generated@@32 ($generated@@33 $generated@@250) ($generated@@107 ($generated@@33 $generated@@250) $generated@@252 $generated@@253) ($generated@@45 ($generated@@33 $generated@@250) $generated@@252 $generated@@253)) $generated@@253))
 :pattern ( ($generated@@45 ($generated@@33 $generated@@250) $generated@@252 $generated@@253))
 :pattern ( ($generated@@107 ($generated@@33 $generated@@250) $generated@@252 $generated@@253))
)) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@62 ($generated@@32 ($generated@@33 ($generated@@33 $generated@@250)) ($generated@@107 ($generated@@33 ($generated@@33 $generated@@250)) $generated@@246 $generated@@247) ($generated@@45 ($generated@@33 ($generated@@33 $generated@@250)) $generated@@246 $generated@@247)) $generated@@247))))))
(let (($generated@@254  (=> (and ($generated@@209 $generated@@245) ($generated@@249 $generated@@245)) (=> (and (and ($generated@@24 $generated@@25 $generated@@246 $generated@@28) ($generated@@208 $generated@@25 $generated@@246 $generated@@28 $generated@@245)) ($generated@@121 $generated@@246)) (=> (and (and (and ($generated@@24 $generated@@25 $generated@@247 $generated@@27) ($generated@@208 $generated@@25 $generated@@247 $generated@@27 $generated@@245)) ($generated@@123 $generated@@247)) (and (= 3 $generated@@31) (= (ControlFlow 0 3) 2))) $generated@@251)))))
$generated@@254)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
