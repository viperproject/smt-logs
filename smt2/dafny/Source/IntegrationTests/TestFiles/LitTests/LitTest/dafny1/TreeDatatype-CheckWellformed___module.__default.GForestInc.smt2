(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@27 () T@T)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@U T@U T@U) Bool)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (Int) Int)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 (T@U) T@U)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@U T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@134 (T@U) Int)
(declare-fun $generated@@135 (T@U) Int)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@158 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@159 () T@T)
(declare-fun $generated@@160 (T@T T@T) T@T)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@T) T@T)
(declare-fun $generated@@164 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (= ($generated@@9 $generated@@27) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (!  (=> ($generated@@30 $generated@@36) (= ($generated@@26 $generated@@27 ($generated@@28 $generated@@34 $generated@@35) ($generated@@29 $generated@@33) $generated@@36)  (and ($generated@@31 $generated@@34 $generated@@33 $generated@@36) ($generated@@26 $generated@@27 $generated@@35 ($generated@@32 ($generated@@29 $generated@@33)) $generated@@36))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@28 $generated@@34 $generated@@35) ($generated@@29 $generated@@33) $generated@@36))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@40 $generated@@50) (and (< 2 $generated@@37) ($generated@@41 $generated@@27 $generated@@50 ($generated@@29 $generated)))) (and (and ($generated@@42 $generated@@50) (let (($generated@@51 ($generated@@43 $generated@@50)))
 (and ($generated@@42 $generated@@50) ($generated@@44 $generated@@51)))) (= ($generated@@38 ($generated@@39 $generated@@49) $generated@@50) (let (($generated@@52 ($generated@@43 $generated@@50)))
(let (($generated@@53 ($generated@@16 ($generated@@45 $generated@@11 ($generated@@46 $generated@@50)))))
($generated@@28 ($generated@@47 $generated@@11 ($generated@@15 (+ $generated@@53 1))) ($generated@@48 $generated@@49 $generated@@52)))))))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@49) $generated@@50))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (or ($generated@@40 ($generated@@54 $generated@@27 $generated@@57)) (and (< 2 $generated@@37) ($generated@@41 $generated@@27 $generated@@57 ($generated@@29 $generated)))) (and (and ($generated@@42 ($generated@@54 $generated@@27 $generated@@57)) (let (($generated@@58 ($generated@@54 $generated@@27 ($generated@@43 ($generated@@54 $generated@@27 $generated@@57)))))
 (and ($generated@@42 ($generated@@54 $generated@@27 $generated@@57)) ($generated@@44 $generated@@58)))) (= ($generated@@38 ($generated@@39 $generated@@56) ($generated@@54 $generated@@27 $generated@@57)) (let (($generated@@59 ($generated@@54 $generated@@27 ($generated@@43 ($generated@@54 $generated@@27 $generated@@57)))))
(let (($generated@@60 ($generated@@55 ($generated@@16 ($generated@@45 $generated@@11 ($generated@@46 ($generated@@54 $generated@@27 $generated@@57)))))))
($generated@@54 $generated@@27 ($generated@@28 ($generated@@47 $generated@@11 ($generated@@15 ($generated@@55 (+ $generated@@60 1)))) ($generated@@54 $generated@@27 ($generated@@48 ($generated@@39 $generated@@56) $generated@@59)))))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@56) ($generated@@54 $generated@@27 $generated@@57)))
))))
(assert (= ($generated@@61 $generated@@62) $generated@@4))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (!  (=> ($generated@@41 $generated@@27 $generated@@64 ($generated@@29 $generated@@63)) ($generated@@42 $generated@@64))
 :pattern ( ($generated@@42 $generated@@64) ($generated@@41 $generated@@27 $generated@@64 ($generated@@29 $generated@@63)))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (!  (=> (or ($generated@@44 ($generated@@54 $generated@@27 $generated@@70)) (and (< 2 $generated@@37) ($generated@@41 $generated@@27 $generated@@70 ($generated@@32 ($generated@@29 $generated))))) (and (=> (not ($generated@@14 ($generated@@54 $generated@@10 ($generated@@13 ($generated@@65 ($generated@@54 $generated@@27 $generated@@70)))))) (let (($generated@@71 ($generated@@54 $generated@@27 ($generated@@66 ($generated@@54 $generated@@27 $generated@@70)))))
(let (($generated@@72 ($generated@@54 $generated@@27 ($generated@@45 $generated@@27 ($generated@@67 ($generated@@54 $generated@@27 $generated@@70))))))
 (and ($generated@@40 $generated@@72) ($generated@@44 $generated@@71))))) (= ($generated@@48 ($generated@@39 $generated@@69) ($generated@@54 $generated@@27 $generated@@70)) (ite ($generated@@65 ($generated@@54 $generated@@27 $generated@@70)) $generated@@70 (let (($generated@@73 ($generated@@54 $generated@@27 ($generated@@66 ($generated@@54 $generated@@27 $generated@@70)))))
(let (($generated@@74 ($generated@@54 $generated@@27 ($generated@@45 $generated@@27 ($generated@@67 ($generated@@54 $generated@@27 $generated@@70))))))
($generated@@54 $generated@@27 ($generated@@68 ($generated@@47 $generated@@27 ($generated@@54 $generated@@27 ($generated@@38 ($generated@@39 $generated@@69) $generated@@74))) ($generated@@54 $generated@@27 ($generated@@48 ($generated@@39 $generated@@69) $generated@@73))))))))))
 :weight 3
 :pattern ( ($generated@@48 ($generated@@39 $generated@@69) ($generated@@54 $generated@@27 $generated@@70)))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> (or ($generated@@44 $generated@@76) (and (< 2 $generated@@37) ($generated@@41 $generated@@27 $generated@@76 ($generated@@32 ($generated@@29 $generated))))) ($generated@@41 $generated@@27 ($generated@@48 $generated@@75 $generated@@76) ($generated@@32 ($generated@@29 $generated))))
 :pattern ( ($generated@@48 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> ($generated@@30 $generated@@78) ($generated@@26 $generated@@27 $generated@@62 ($generated@@32 $generated@@77) $generated@@78))
 :pattern ( ($generated@@26 $generated@@27 $generated@@62 ($generated@@32 $generated@@77) $generated@@78))
)))
(assert (forall (($generated@@79 T@U) ) (! ($generated@@41 $generated@@27 $generated@@62 ($generated@@32 $generated@@79))
 :pattern ( ($generated@@41 $generated@@27 $generated@@62 ($generated@@32 $generated@@79)))
)))
(assert (forall (($generated@@80 Int) ) (! (= ($generated@@55 $generated@@80) $generated@@80)
 :pattern ( ($generated@@55 $generated@@80))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@54 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@54 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@41 $generated@@27 ($generated@@68 $generated@@85 $generated@@86) ($generated@@32 $generated@@84))  (and ($generated@@83 $generated@@85 $generated@@84) ($generated@@41 $generated@@27 $generated@@86 ($generated@@32 $generated@@84))))
 :pattern ( ($generated@@41 $generated@@27 ($generated@@68 $generated@@85 $generated@@86) ($generated@@32 $generated@@84)))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@65 $generated@@87) (= ($generated@@61 $generated@@87) $generated@@4))
 :pattern ( ($generated@@65 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@88 $generated@@89) (= ($generated@@61 $generated@@89) $generated@@5))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@42 $generated@@90) (= ($generated@@61 $generated@@90) $generated@@6))
 :pattern ( ($generated@@42 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@47 $generated@@92 ($generated@@45 $generated@@92 $generated@@91)) $generated@@91)
 :pattern ( ($generated@@45 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@88 $generated@@93) (exists (($generated@@94 T@U) ($generated@@95 T@U) ) (= $generated@@93 ($generated@@68 $generated@@94 $generated@@95))))
 :pattern ( ($generated@@88 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@42 $generated@@96) (exists (($generated@@97 T@U) ($generated@@98 T@U) ) (= $generated@@96 ($generated@@28 $generated@@97 $generated@@98))))
 :pattern ( ($generated@@42 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ) (!  (=> ($generated@@65 $generated@@99) (= $generated@@99 $generated@@62))
 :pattern ( ($generated@@65 $generated@@99))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@41 $generated@@27 ($generated@@28 $generated@@101 $generated@@102) ($generated@@29 $generated@@100))  (and ($generated@@83 $generated@@101 $generated@@100) ($generated@@41 $generated@@27 $generated@@102 ($generated@@32 ($generated@@29 $generated@@100)))))
 :pattern ( ($generated@@41 $generated@@27 ($generated@@28 $generated@@101 $generated@@102) ($generated@@29 $generated@@100)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@31 ($generated@@47 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@26 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@31 ($generated@@47 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@108 T@U) ) (!  (and (= ($generated@@25 ($generated@@32 $generated@@108)) $generated@@2) (= ($generated@@107 ($generated@@32 $generated@@108)) $generated@@7))
 :pattern ( ($generated@@32 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@25 ($generated@@29 $generated@@109)) $generated@@3) (= ($generated@@107 ($generated@@29 $generated@@109)) $generated@@8))
 :pattern ( ($generated@@29 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> ($generated@@41 $generated@@27 $generated@@111 ($generated@@32 $generated@@110)) (or ($generated@@65 $generated@@111) ($generated@@88 $generated@@111)))
 :pattern ( ($generated@@88 $generated@@111) ($generated@@41 $generated@@27 $generated@@111 ($generated@@32 $generated@@110)))
 :pattern ( ($generated@@65 $generated@@111) ($generated@@41 $generated@@27 $generated@@111 ($generated@@32 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@83 $generated@@112 $generated) (and (= ($generated@@47 $generated@@11 ($generated@@45 $generated@@11 $generated@@112)) $generated@@112) ($generated@@41 $generated@@11 ($generated@@45 $generated@@11 $generated@@112) $generated)))
 :pattern ( ($generated@@83 $generated@@112 $generated))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@83 ($generated@@47 $generated@@115 $generated@@113) $generated@@114) ($generated@@41 $generated@@115 $generated@@113 $generated@@114))
 :pattern ( ($generated@@83 ($generated@@47 $generated@@115 $generated@@113) $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@61 ($generated@@68 $generated@@116 $generated@@117)) $generated@@5)
 :pattern ( ($generated@@68 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@67 ($generated@@68 $generated@@118 $generated@@119)) $generated@@118)
 :pattern ( ($generated@@68 $generated@@118 $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@66 ($generated@@68 $generated@@120 $generated@@121)) $generated@@121)
 :pattern ( ($generated@@68 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@61 ($generated@@28 $generated@@122 $generated@@123)) $generated@@6)
 :pattern ( ($generated@@28 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@46 ($generated@@28 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@28 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@43 ($generated@@28 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@28 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@128 ($generated@@32 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@32 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@29 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@29 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@45 $generated@@133 ($generated@@47 $generated@@133 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@47 $generated@@133 $generated@@132))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (< ($generated@@134 $generated@@136) ($generated@@135 ($generated@@68 $generated@@136 $generated@@137)))
 :pattern ( ($generated@@68 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (! (< ($generated@@135 $generated@@139) ($generated@@135 ($generated@@68 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@68 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (< ($generated@@134 $generated@@140) ($generated@@135 ($generated@@28 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@28 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (< ($generated@@135 $generated@@143) ($generated@@135 ($generated@@28 $generated@@142 $generated@@143)))
 :pattern ( ($generated@@28 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@38 ($generated@@39 $generated@@144) $generated@@145) ($generated@@38 $generated@@144 $generated@@145))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@48 ($generated@@39 $generated@@146) $generated@@147) ($generated@@48 $generated@@146 $generated@@147))
 :pattern ( ($generated@@48 ($generated@@39 $generated@@146) $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> (and ($generated@@30 $generated@@150) (and ($generated@@88 $generated@@148) ($generated@@26 $generated@@27 $generated@@148 ($generated@@32 $generated@@149) $generated@@150))) ($generated@@31 ($generated@@67 $generated@@148) $generated@@149 $generated@@150))
 :pattern ( ($generated@@31 ($generated@@67 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (and ($generated@@30 $generated@@153) (and ($generated@@42 $generated@@151) ($generated@@26 $generated@@27 $generated@@151 ($generated@@29 $generated@@152) $generated@@153))) ($generated@@31 ($generated@@46 $generated@@151) $generated@@152 $generated@@153))
 :pattern ( ($generated@@31 ($generated@@46 $generated@@151) $generated@@152 $generated@@153))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (! (= ($generated@@154 $generated@@165 $generated@@166 $generated@@167 ($generated@@161 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@170 $generated@@171) $generated@@168)
 :weight 0
)) (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@177 $generated@@179) (= ($generated@@154 $generated@@172 $generated@@173 $generated@@174 ($generated@@161 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@179 $generated@@180) ($generated@@154 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@179 $generated@@180)))
 :weight 0
)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (!  (or (= $generated@@187 $generated@@189) (= ($generated@@154 $generated@@181 $generated@@182 $generated@@183 ($generated@@161 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@188 $generated@@189) ($generated@@154 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@188 $generated@@189)))
 :weight 0
)))) (= ($generated@@9 $generated@@155) 4)) (= ($generated@@9 $generated@@156) 5)) (forall (($generated@@190 T@T) ($generated@@191 T@T) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@158 $generated@@190 $generated@@191 ($generated@@162 $generated@@190 $generated@@191 $generated@@193 $generated@@194 $generated@@192) $generated@@194) $generated@@192)
 :weight 0
))) (forall (($generated@@195 T@T) ($generated@@196 T@T) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ) (!  (or (= $generated@@199 $generated@@200) (= ($generated@@158 $generated@@195 $generated@@196 ($generated@@162 $generated@@195 $generated@@196 $generated@@198 $generated@@199 $generated@@197) $generated@@200) ($generated@@158 $generated@@195 $generated@@196 $generated@@198 $generated@@200)))
 :weight 0
))) (= ($generated@@9 $generated@@159) 6)) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (= ($generated@@9 ($generated@@160 $generated@@201 $generated@@202)) 7))) (forall (($generated@@203 T@T) ($generated@@204 T@T) ) (! (= ($generated@@163 ($generated@@160 $generated@@203 $generated@@204)) $generated@@203)
 :pattern ( ($generated@@160 $generated@@203 $generated@@204))
))) (forall (($generated@@205 T@T) ($generated@@206 T@T) ) (! (= ($generated@@164 ($generated@@160 $generated@@205 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@160 $generated@@205 $generated@@206))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 Bool) ($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@14 ($generated@@154 $generated@@155 $generated@@156 $generated@@10 ($generated@@157 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))  (=> (and (or (not (= $generated@@211 $generated@@207)) (not true)) ($generated@@14 ($generated@@45 $generated@@10 ($generated@@158 $generated@@156 $generated@@159 ($generated@@158 $generated@@155 ($generated@@160 $generated@@156 $generated@@159) $generated@@208 $generated@@211) $generated@@209)))) $generated@@210))
 :pattern ( ($generated@@154 $generated@@155 $generated@@156 $generated@@10 ($generated@@157 $generated@@207 $generated@@208 $generated@@209 $generated@@210) $generated@@211 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ) (! (= ($generated@@134 ($generated@@47 $generated@@27 $generated@@213)) ($generated@@135 $generated@@213))
 :pattern ( ($generated@@134 ($generated@@47 $generated@@27 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@83 $generated@@215 ($generated@@32 $generated@@214)) (and (= ($generated@@47 $generated@@27 ($generated@@45 $generated@@27 $generated@@215)) $generated@@215) ($generated@@41 $generated@@27 ($generated@@45 $generated@@27 $generated@@215) ($generated@@32 $generated@@214))))
 :pattern ( ($generated@@83 $generated@@215 ($generated@@32 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@83 $generated@@217 ($generated@@29 $generated@@216)) (and (= ($generated@@47 $generated@@27 ($generated@@45 $generated@@27 $generated@@217)) $generated@@217) ($generated@@41 $generated@@27 ($generated@@45 $generated@@27 $generated@@217) ($generated@@29 $generated@@216))))
 :pattern ( ($generated@@83 $generated@@217 ($generated@@29 $generated@@216)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and ($generated@@30 $generated@@220) (and ($generated@@88 $generated@@218) ($generated@@26 $generated@@27 $generated@@218 ($generated@@32 $generated@@219) $generated@@220))) ($generated@@26 $generated@@27 ($generated@@66 $generated@@218) ($generated@@32 $generated@@219) $generated@@220))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@66 $generated@@218) ($generated@@32 $generated@@219) $generated@@220))
)))
(assert (= $generated@@62 ($generated@@54 $generated@@27 $generated@@62)))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@68 ($generated@@54 $generated@@159 $generated@@221) ($generated@@54 $generated@@27 $generated@@222)) ($generated@@54 $generated@@27 ($generated@@68 $generated@@221 $generated@@222)))
 :pattern ( ($generated@@68 ($generated@@54 $generated@@159 $generated@@221) ($generated@@54 $generated@@27 $generated@@222)))
)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (! (= ($generated@@28 ($generated@@54 $generated@@159 $generated@@223) ($generated@@54 $generated@@27 $generated@@224)) ($generated@@54 $generated@@27 ($generated@@28 $generated@@223 $generated@@224)))
 :pattern ( ($generated@@28 ($generated@@54 $generated@@159 $generated@@223) ($generated@@54 $generated@@27 $generated@@224)))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@30 $generated@@227) (and ($generated@@42 $generated@@225) ($generated@@26 $generated@@27 $generated@@225 ($generated@@29 $generated@@226) $generated@@227))) ($generated@@26 $generated@@27 ($generated@@43 $generated@@225) ($generated@@32 ($generated@@29 $generated@@226)) $generated@@227))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@43 $generated@@225) ($generated@@32 ($generated@@29 $generated@@226)) $generated@@227))
)))
(assert (forall (($generated@@228 Int) ) (! (= ($generated@@47 $generated@@11 ($generated@@15 ($generated@@55 $generated@@228))) ($generated@@54 $generated@@159 ($generated@@47 $generated@@11 ($generated@@15 $generated@@228))))
 :pattern ( ($generated@@47 $generated@@11 ($generated@@15 ($generated@@55 $generated@@228))))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@T) ) (! (= ($generated@@47 $generated@@230 ($generated@@54 $generated@@230 $generated@@229)) ($generated@@54 $generated@@159 ($generated@@47 $generated@@230 $generated@@229)))
 :pattern ( ($generated@@47 $generated@@230 ($generated@@54 $generated@@230 $generated@@229)))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (! ($generated@@26 $generated@@11 $generated@@232 $generated $generated@@231)
 :pattern ( ($generated@@26 $generated@@11 $generated@@232 $generated $generated@@231))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> ($generated@@30 $generated@@236) (= ($generated@@26 $generated@@27 ($generated@@68 $generated@@234 $generated@@235) ($generated@@32 $generated@@233) $generated@@236)  (and ($generated@@31 $generated@@234 $generated@@233 $generated@@236) ($generated@@26 $generated@@27 $generated@@235 ($generated@@32 $generated@@233) $generated@@236))))
 :pattern ( ($generated@@26 $generated@@27 ($generated@@68 $generated@@234 $generated@@235) ($generated@@32 $generated@@233) $generated@@236))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (!  (=> (or ($generated@@40 $generated@@238) (and (< 2 $generated@@37) ($generated@@41 $generated@@27 $generated@@238 ($generated@@29 $generated)))) ($generated@@41 $generated@@27 ($generated@@38 $generated@@237 $generated@@238) ($generated@@29 $generated)))
 :pattern ( ($generated@@38 $generated@@237 $generated@@238))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (or ($generated@@44 $generated@@240) (and (< 2 $generated@@37) ($generated@@41 $generated@@27 $generated@@240 ($generated@@32 ($generated@@29 $generated))))) (and (=> (not ($generated@@65 $generated@@240)) (let (($generated@@241 ($generated@@66 $generated@@240)))
(let (($generated@@242 ($generated@@45 $generated@@27 ($generated@@67 $generated@@240))))
 (and ($generated@@40 $generated@@242) ($generated@@44 $generated@@241))))) (= ($generated@@48 ($generated@@39 $generated@@239) $generated@@240) (ite ($generated@@65 $generated@@240) $generated@@240 (let (($generated@@243 ($generated@@66 $generated@@240)))
(let (($generated@@244 ($generated@@45 $generated@@27 ($generated@@67 $generated@@240))))
($generated@@68 ($generated@@47 $generated@@27 ($generated@@38 $generated@@239 $generated@@244)) ($generated@@48 $generated@@239 $generated@@243))))))))
 :pattern ( ($generated@@48 ($generated@@39 $generated@@239) $generated@@240))
))))
(assert (forall (($generated@@245 T@U) ) (! ($generated@@41 $generated@@11 $generated@@245 $generated)
 :pattern ( ($generated@@41 $generated@@11 $generated@@245 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@258 true))
(let (($generated@@259  (=> (and (= $generated@@246 ($generated@@68 ($generated@@47 $generated@@27 $generated@@247) $generated@@248)) ($generated@@41 $generated@@27 $generated@@247 ($generated@@29 $generated))) (=> (and (and (and ($generated@@41 $generated@@27 $generated@@248 ($generated@@32 ($generated@@29 $generated))) (= $generated@@249 $generated@@248)) (and ($generated@@41 $generated@@27 $generated@@249 ($generated@@32 ($generated@@29 $generated))) (= $generated@@250 $generated@@249))) (and (and (= $generated@@251 $generated@@247) ($generated@@41 $generated@@27 $generated@@251 ($generated@@29 $generated))) (and (= $generated@@252 $generated@@251) ($generated@@26 $generated@@27 $generated@@252 ($generated@@29 $generated) $generated@@253)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@135 $generated@@252) ($generated@@135 $generated@@246))) (=> (< ($generated@@135 $generated@@252) ($generated@@135 $generated@@246)) (=> (and (and ($generated@@40 $generated@@252) ($generated@@42 ($generated@@38 ($generated@@39 $generated@@254) $generated@@252))) (and ($generated@@26 $generated@@27 $generated@@250 ($generated@@32 ($generated@@29 $generated)) $generated@@253) (= (ControlFlow 0 4) (- 0 3)))) (< ($generated@@135 $generated@@250) ($generated@@135 $generated@@246)))))))))
(let (($generated@@260  (=> (or (not (= $generated@@246 $generated@@62)) (not true)) (and (=> (= (ControlFlow 0 7) 4) $generated@@259) (=> (= (ControlFlow 0 7) 6) $generated@@258)))))
(let (($generated@@261 true))
(let (($generated@@262 true))
(let (($generated@@263  (=> (= $generated@@255 ($generated@@157 $generated@@256 $generated@@253 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@262) (=> (= (ControlFlow 0 8) 2) $generated@@261)) (=> (= (ControlFlow 0 8) 7) $generated@@260)))))
(let (($generated@@264  (=> (and (and (and ($generated@@30 $generated@@253) ($generated@@257 $generated@@253)) ($generated@@41 $generated@@27 $generated@@246 ($generated@@32 ($generated@@29 $generated)))) (and (= 2 $generated@@37) (= (ControlFlow 0 9) 8))) $generated@@263)))
$generated@@264))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
