(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) T@U)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 () T@U)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 () T@T)
(declare-fun $generated@@149 () T@T)
(declare-fun $generated@@150 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@151 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@T T@T) T@T)
(declare-fun $generated@@154 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@155 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@156 (T@T) T@T)
(declare-fun $generated@@157 (T@T) T@T)
(declare-fun $generated@@213 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@214 (T@U) Bool)
(declare-fun $generated@@221 (T@U) T@U)
(declare-fun $generated@@222 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@3))
(assert (= ($generated@@35 $generated@@37) $generated@@4))
(assert (= ($generated@@35 $generated@@38) $generated@@5))
(assert (= ($generated@@35 $generated@@39) $generated@@7))
(assert ($generated@@28 $generated@@29 $generated@@36 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@37 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@38 $generated@@32))
(assert ($generated@@28 $generated@@29 $generated@@39 $generated@@31))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@43) (= $generated@@42 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@35 $generated@@48) $generated@@3))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@35 $generated@@50) $generated@@4))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@35 $generated@@52) $generated@@5))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@35 $generated@@54) $generated@@6))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@35 $generated@@56) $generated@@7))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@35 $generated@@58) $generated@@8))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@57 $generated@@63) (exists (($generated@@64 T@U) ($generated@@65 T@U) ) (= $generated@@63 ($generated@@30 $generated@@64 $generated@@65))))
 :pattern ( ($generated@@57 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@47 $generated@@66) (= $generated@@66 $generated@@36))
 :pattern ( ($generated@@47 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@49 $generated@@67) (= $generated@@67 $generated@@37))
 :pattern ( ($generated@@49 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@51 $generated@@68) (= $generated@@68 $generated@@38))
 :pattern ( ($generated@@51 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@55 $generated@@69) (= $generated@@69 $generated@@39))
 :pattern ( ($generated@@55 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@53 $generated@@71) (exists (($generated@@72 T@U) ) (= $generated@@71 ($generated@@70 $generated@@72))))
 :pattern ( ($generated@@53 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@70 $generated@@73) $generated@@32) ($generated@@28 $generated@@29 $generated@@73 $generated@@32))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@70 $generated@@73) $generated@@32))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@76 $generated@@78 $generated@@79) (and (< 1 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@78 $generated@@32) ($generated@@28 $generated@@29 $generated@@79 $generated@@32)))) ($generated@@28 $generated@@29 ($generated@@75 $generated@@77 $generated@@78 $generated@@79) $generated@@40))
 :pattern ( ($generated@@75 $generated@@77 $generated@@78 $generated@@79))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@81 $generated@@83 $generated@@84) (and (< 2 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@83 $generated@@32) ($generated@@28 $generated@@29 $generated@@84 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@80 $generated@@82 $generated@@83 $generated@@84) $generated@@31))
 :pattern ( ($generated@@80 $generated@@82 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@75 ($generated@@85 $generated@@86) $generated@@87 $generated@@88) ($generated@@75 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@75 ($generated@@85 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@80 ($generated@@85 $generated@@89) $generated@@90 $generated@@91) ($generated@@80 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@80 ($generated@@85 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@92 $generated@@93) (or ($generated@@47 $generated@@93) ($generated@@49 $generated@@93)))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (or ($generated@@95 ($generated@@44 $generated@@29 $generated@@100)) (and (< 3 $generated@@74) ($generated@@28 $generated@@29 $generated@@100 $generated@@31))) (and (=> (not ($generated@@17 ($generated@@44 $generated@@13 ($generated@@16 ($generated@@55 ($generated@@44 $generated@@29 $generated@@100)))))) (let (($generated@@101 ($generated@@44 $generated@@29 ($generated@@96 ($generated@@44 $generated@@29 $generated@@100)))))
(let (($generated@@102 ($generated@@44 $generated@@29 ($generated@@97 ($generated@@44 $generated@@29 $generated@@100)))))
 (and ($generated@@95 $generated@@101) ($generated@@81 $generated@@102 ($generated@@94 ($generated@@85 $generated@@99) $generated@@101)))))) (= ($generated@@94 ($generated@@85 $generated@@99) ($generated@@44 $generated@@29 $generated@@100)) (ite ($generated@@55 ($generated@@44 $generated@@29 $generated@@100)) $generated@@39 (let (($generated@@103 ($generated@@44 $generated@@29 ($generated@@96 ($generated@@44 $generated@@29 $generated@@100)))))
(let (($generated@@104 ($generated@@44 $generated@@29 ($generated@@97 ($generated@@44 $generated@@29 $generated@@100)))))
($generated@@44 $generated@@29 ($generated@@80 ($generated@@85 $generated@@98) $generated@@104 ($generated@@44 $generated@@29 ($generated@@94 ($generated@@85 $generated@@99) $generated@@103))))))))))
 :weight 3
 :pattern ( ($generated@@94 ($generated@@85 $generated@@99) ($generated@@44 $generated@@29 $generated@@100)))
))))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@95 $generated@@106) (and (< 3 $generated@@74) ($generated@@28 $generated@@29 $generated@@106 $generated@@31))) ($generated@@28 $generated@@29 ($generated@@94 $generated@@105 $generated@@106) $generated@@31))
 :pattern ( ($generated@@94 $generated@@105 $generated@@106))
))))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@76 ($generated@@44 $generated@@29 $generated@@109) ($generated@@44 $generated@@29 $generated@@110)) (and (< 1 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@109 $generated@@32) ($generated@@28 $generated@@29 $generated@@110 $generated@@32)))) (and (=> (not ($generated@@17 ($generated@@44 $generated@@13 ($generated@@16 ($generated@@51 ($generated@@44 $generated@@29 $generated@@109)))))) (let (($generated@@111 ($generated@@44 $generated@@29 ($generated@@107 ($generated@@44 $generated@@29 $generated@@109)))))
 (=> (not ($generated@@17 ($generated@@44 $generated@@13 ($generated@@16 ($generated@@51 ($generated@@44 $generated@@29 $generated@@110)))))) (let (($generated@@112 ($generated@@44 $generated@@29 ($generated@@107 ($generated@@44 $generated@@29 $generated@@110)))))
($generated@@76 $generated@@111 $generated@@112))))) (= ($generated@@75 ($generated@@85 $generated@@108) ($generated@@44 $generated@@29 $generated@@109) ($generated@@44 $generated@@29 $generated@@110)) (ite ($generated@@51 ($generated@@44 $generated@@29 $generated@@109)) $generated@@37 (let (($generated@@113 ($generated@@44 $generated@@29 ($generated@@107 ($generated@@44 $generated@@29 $generated@@109)))))
(ite ($generated@@51 ($generated@@44 $generated@@29 $generated@@110)) $generated@@36 (let (($generated@@114 ($generated@@44 $generated@@29 ($generated@@107 ($generated@@44 $generated@@29 $generated@@110)))))
($generated@@44 $generated@@29 ($generated@@75 ($generated@@85 $generated@@108) $generated@@113 $generated@@114)))))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@85 $generated@@108) ($generated@@44 $generated@@29 $generated@@109) ($generated@@44 $generated@@29 $generated@@110)))
))))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@76 $generated@@116 $generated@@117) (and (< 1 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@116 $generated@@32) ($generated@@28 $generated@@29 $generated@@117 $generated@@32)))) (and (=> (not ($generated@@51 $generated@@116)) (let (($generated@@118 ($generated@@107 $generated@@116)))
 (=> (not ($generated@@51 $generated@@117)) (let (($generated@@119 ($generated@@107 $generated@@117)))
($generated@@76 $generated@@118 $generated@@119))))) (= ($generated@@75 ($generated@@85 $generated@@115) $generated@@116 $generated@@117) (ite ($generated@@51 $generated@@116) $generated@@37 (let (($generated@@120 ($generated@@107 $generated@@116)))
(ite ($generated@@51 $generated@@117) $generated@@36 (let (($generated@@121 ($generated@@107 $generated@@117)))
($generated@@75 $generated@@115 $generated@@120 $generated@@121))))))))
 :pattern ( ($generated@@75 ($generated@@85 $generated@@115) $generated@@116 $generated@@117))
))))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@122 $generated@@40) (or ($generated@@47 $generated@@122) ($generated@@49 $generated@@122)))
 :pattern ( ($generated@@49 $generated@@122) ($generated@@28 $generated@@29 $generated@@122 $generated@@40))
 :pattern ( ($generated@@47 $generated@@122) ($generated@@28 $generated@@29 $generated@@122 $generated@@40))
)))
(assert (forall (($generated@@123 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@123 $generated@@32) (or ($generated@@51 $generated@@123) ($generated@@53 $generated@@123)))
 :pattern ( ($generated@@53 $generated@@123) ($generated@@28 $generated@@29 $generated@@123 $generated@@32))
 :pattern ( ($generated@@51 $generated@@123) ($generated@@28 $generated@@29 $generated@@123 $generated@@32))
)))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@124 $generated@@31) (or ($generated@@55 $generated@@124) ($generated@@57 $generated@@124)))
 :pattern ( ($generated@@57 $generated@@124) ($generated@@28 $generated@@29 $generated@@124 $generated@@31))
 :pattern ( ($generated@@55 $generated@@124) ($generated@@28 $generated@@29 $generated@@124 $generated@@31))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@47 $generated@@125) ($generated@@47 $generated@@126)) ($generated@@41 $generated@@125 $generated@@126))
 :pattern ( ($generated@@41 $generated@@125 $generated@@126) ($generated@@47 $generated@@125))
 :pattern ( ($generated@@41 $generated@@125 $generated@@126) ($generated@@47 $generated@@126))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (and ($generated@@49 $generated@@127) ($generated@@49 $generated@@128)) ($generated@@41 $generated@@127 $generated@@128))
 :pattern ( ($generated@@41 $generated@@127 $generated@@128) ($generated@@49 $generated@@127))
 :pattern ( ($generated@@41 $generated@@127 $generated@@128) ($generated@@49 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (= ($generated@@35 ($generated@@30 $generated@@129 $generated@@130)) $generated@@8)
 :pattern ( ($generated@@30 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@97 ($generated@@30 $generated@@131 $generated@@132)) $generated@@131)
 :pattern ( ($generated@@30 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@96 ($generated@@30 $generated@@133 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@30 $generated@@133 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@35 ($generated@@70 $generated@@135)) $generated@@6)
 :pattern ( ($generated@@70 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ) (! (= ($generated@@107 ($generated@@70 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@70 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@59 $generated@@138 ($generated@@60 $generated@@138 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@60 $generated@@138 $generated@@137))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (< ($generated@@139 $generated@@140) ($generated@@139 ($generated@@30 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@30 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (< ($generated@@139 $generated@@143) ($generated@@139 ($generated@@30 $generated@@142 $generated@@143)))
 :pattern ( ($generated@@30 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@94 ($generated@@85 $generated@@144) $generated@@145) ($generated@@94 $generated@@144 $generated@@145))
 :pattern ( ($generated@@94 ($generated@@85 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ) (! (< ($generated@@139 $generated@@146) ($generated@@139 ($generated@@70 $generated@@146)))
 :pattern ( ($generated@@70 $generated@@146))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@147 $generated@@158 $generated@@159 $generated@@160 ($generated@@154 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@163 $generated@@164) $generated@@161)
 :weight 0
)) (and (forall (($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (or (= $generated@@170 $generated@@172) (= ($generated@@147 $generated@@165 $generated@@166 $generated@@167 ($generated@@154 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@170 $generated@@171 $generated@@168) $generated@@172 $generated@@173) ($generated@@147 $generated@@165 $generated@@166 $generated@@167 $generated@@169 $generated@@172 $generated@@173)))
 :weight 0
)) (forall (($generated@@174 T@T) ($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@147 $generated@@174 $generated@@175 $generated@@176 ($generated@@154 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@180 $generated@@177) $generated@@181 $generated@@182) ($generated@@147 $generated@@174 $generated@@175 $generated@@176 $generated@@178 $generated@@181 $generated@@182)))
 :weight 0
)))) (= ($generated@@12 $generated@@148) 4)) (= ($generated@@12 $generated@@149) 5)) (forall (($generated@@183 T@T) ($generated@@184 T@T) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@151 $generated@@183 $generated@@184 ($generated@@155 $generated@@183 $generated@@184 $generated@@186 $generated@@187 $generated@@185) $generated@@187) $generated@@185)
 :weight 0
))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@192 $generated@@193) (= ($generated@@151 $generated@@188 $generated@@189 ($generated@@155 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@190) $generated@@193) ($generated@@151 $generated@@188 $generated@@189 $generated@@191 $generated@@193)))
 :weight 0
))) (= ($generated@@12 $generated@@152) 6)) (forall (($generated@@194 T@T) ($generated@@195 T@T) ) (= ($generated@@12 ($generated@@153 $generated@@194 $generated@@195)) 7))) (forall (($generated@@196 T@T) ($generated@@197 T@T) ) (! (= ($generated@@156 ($generated@@153 $generated@@196 $generated@@197)) $generated@@196)
 :pattern ( ($generated@@153 $generated@@196 $generated@@197))
))) (forall (($generated@@198 T@T) ($generated@@199 T@T) ) (! (= ($generated@@157 ($generated@@153 $generated@@198 $generated@@199)) $generated@@199)
 :pattern ( ($generated@@153 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 Bool) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@17 ($generated@@147 $generated@@148 $generated@@149 $generated@@13 ($generated@@150 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))  (=> (and (or (not (= $generated@@204 $generated@@200)) (not true)) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@151 $generated@@149 $generated@@152 ($generated@@151 $generated@@148 ($generated@@153 $generated@@149 $generated@@152) $generated@@201 $generated@@204) $generated@@202)))) $generated@@203))
 :pattern ( ($generated@@147 $generated@@148 $generated@@149 $generated@@13 ($generated@@150 $generated@@200 $generated@@201 $generated@@202 $generated@@203) $generated@@204 $generated@@205))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (or ($generated@@81 ($generated@@44 $generated@@29 $generated@@207) ($generated@@44 $generated@@29 $generated@@208)) (and (< 2 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@207 $generated@@32) ($generated@@28 $generated@@29 $generated@@208 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@44 $generated@@13 ($generated@@16 ($generated@@55 ($generated@@44 $generated@@29 $generated@@208)))))) (let (($generated@@209 ($generated@@44 $generated@@29 ($generated@@96 ($generated@@44 $generated@@29 $generated@@208)))))
(let (($generated@@210 ($generated@@44 $generated@@29 ($generated@@97 ($generated@@44 $generated@@29 $generated@@208)))))
 (and (and ($generated@@92 ($generated@@75 ($generated@@85 $generated@@98) ($generated@@44 $generated@@29 $generated@@207) $generated@@210)) ($generated@@76 ($generated@@44 $generated@@29 $generated@@207) $generated@@210)) (=> (not ($generated@@41 ($generated@@75 ($generated@@85 $generated@@98) ($generated@@44 $generated@@29 $generated@@207) $generated@@210) $generated@@37)) ($generated@@81 ($generated@@44 $generated@@29 $generated@@207) $generated@@209)))))) (= ($generated@@80 ($generated@@85 $generated@@206) ($generated@@44 $generated@@29 $generated@@207) ($generated@@44 $generated@@29 $generated@@208)) (ite ($generated@@55 ($generated@@44 $generated@@29 $generated@@208)) ($generated@@30 ($generated@@44 $generated@@29 $generated@@207) ($generated@@44 $generated@@29 $generated@@39)) (let (($generated@@211 ($generated@@44 $generated@@29 ($generated@@96 ($generated@@44 $generated@@29 $generated@@208)))))
(let (($generated@@212 ($generated@@44 $generated@@29 ($generated@@97 ($generated@@44 $generated@@29 $generated@@208)))))
(ite ($generated@@41 ($generated@@75 ($generated@@85 $generated@@98) ($generated@@44 $generated@@29 $generated@@207) $generated@@212) $generated@@37) ($generated@@30 ($generated@@44 $generated@@29 $generated@@207) ($generated@@44 $generated@@29 ($generated@@30 $generated@@212 $generated@@211))) ($generated@@30 $generated@@212 ($generated@@44 $generated@@29 ($generated@@80 ($generated@@85 $generated@@206) ($generated@@44 $generated@@29 $generated@@207) $generated@@211))))))))))
 :weight 3
 :pattern ( ($generated@@80 ($generated@@85 $generated@@206) ($generated@@44 $generated@@29 $generated@@207) ($generated@@44 $generated@@29 $generated@@208)))
))))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@214 $generated@@216) ($generated@@28 $generated@@29 $generated@@215 $generated@@40)) ($generated@@213 $generated@@29 $generated@@215 $generated@@40 $generated@@216))
 :pattern ( ($generated@@213 $generated@@29 $generated@@215 $generated@@40 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and ($generated@@214 $generated@@218) ($generated@@28 $generated@@29 $generated@@217 $generated@@32)) ($generated@@213 $generated@@29 $generated@@217 $generated@@32 $generated@@218))
 :pattern ( ($generated@@213 $generated@@29 $generated@@217 $generated@@32 $generated@@218))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> (and ($generated@@214 $generated@@220) ($generated@@28 $generated@@29 $generated@@219 $generated@@31)) ($generated@@213 $generated@@29 $generated@@219 $generated@@31 $generated@@220))
 :pattern ( ($generated@@213 $generated@@29 $generated@@219 $generated@@31 $generated@@220))
)))
(assert (= ($generated@@221 $generated@@40) $generated@@0))
(assert (= ($generated@@222 $generated@@40) $generated@@9))
(assert (= ($generated@@221 $generated@@32) $generated@@1))
(assert (= ($generated@@222 $generated@@32) $generated@@10))
(assert (= ($generated@@221 $generated@@31) $generated@@2))
(assert (= ($generated@@222 $generated@@31) $generated@@11))
(assert (= $generated@@36 ($generated@@44 $generated@@29 $generated@@36)))
(assert (= $generated@@37 ($generated@@44 $generated@@29 $generated@@37)))
(assert (= $generated@@38 ($generated@@44 $generated@@29 $generated@@38)))
(assert (= $generated@@39 ($generated@@44 $generated@@29 $generated@@39)))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and ($generated@@214 $generated@@224) (and ($generated@@53 $generated@@223) ($generated@@213 $generated@@29 $generated@@223 $generated@@32 $generated@@224))) ($generated@@213 $generated@@29 ($generated@@107 $generated@@223) $generated@@32 $generated@@224))
 :pattern ( ($generated@@213 $generated@@29 ($generated@@107 $generated@@223) $generated@@32 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and ($generated@@214 $generated@@226) (and ($generated@@57 $generated@@225) ($generated@@213 $generated@@29 $generated@@225 $generated@@31 $generated@@226))) ($generated@@213 $generated@@29 ($generated@@97 $generated@@225) $generated@@32 $generated@@226))
 :pattern ( ($generated@@213 $generated@@29 ($generated@@97 $generated@@225) $generated@@32 $generated@@226))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@U) ) (!  (=> (and ($generated@@214 $generated@@228) (and ($generated@@57 $generated@@227) ($generated@@213 $generated@@29 $generated@@227 $generated@@31 $generated@@228))) ($generated@@213 $generated@@29 ($generated@@96 $generated@@227) $generated@@31 $generated@@228))
 :pattern ( ($generated@@213 $generated@@29 ($generated@@96 $generated@@227) $generated@@31 $generated@@228))
)))
(assert  (=> (<= 3 $generated@@74) (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (!  (=> (or ($generated@@95 $generated@@230) (and (< 3 $generated@@74) ($generated@@28 $generated@@29 $generated@@230 $generated@@31))) (and (=> (not ($generated@@55 $generated@@230)) (let (($generated@@231 ($generated@@96 $generated@@230)))
(let (($generated@@232 ($generated@@97 $generated@@230)))
 (and ($generated@@95 $generated@@231) ($generated@@81 $generated@@232 ($generated@@94 $generated@@229 $generated@@231)))))) (= ($generated@@94 ($generated@@85 $generated@@229) $generated@@230) (ite ($generated@@55 $generated@@230) $generated@@39 (let (($generated@@233 ($generated@@96 $generated@@230)))
(let (($generated@@234 ($generated@@97 $generated@@230)))
($generated@@80 ($generated@@85 $generated@@98) $generated@@234 ($generated@@94 $generated@@229 $generated@@233))))))))
 :pattern ( ($generated@@94 ($generated@@85 $generated@@229) $generated@@230))
))))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= ($generated@@30 ($generated@@44 $generated@@29 $generated@@235) ($generated@@44 $generated@@29 $generated@@236)) ($generated@@44 $generated@@29 ($generated@@30 $generated@@235 $generated@@236)))
 :pattern ( ($generated@@30 ($generated@@44 $generated@@29 $generated@@235) ($generated@@44 $generated@@29 $generated@@236)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> (or ($generated@@81 $generated@@238 $generated@@239) (and (< 2 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@238 $generated@@32) ($generated@@28 $generated@@29 $generated@@239 $generated@@31)))) (and (=> (not ($generated@@55 $generated@@239)) (let (($generated@@240 ($generated@@96 $generated@@239)))
(let (($generated@@241 ($generated@@97 $generated@@239)))
 (and (and ($generated@@92 ($generated@@75 ($generated@@85 $generated@@98) $generated@@238 $generated@@241)) ($generated@@76 $generated@@238 $generated@@241)) (=> (not ($generated@@41 ($generated@@75 ($generated@@85 $generated@@98) $generated@@238 $generated@@241) $generated@@37)) ($generated@@81 $generated@@238 $generated@@240)))))) (= ($generated@@80 ($generated@@85 $generated@@237) $generated@@238 $generated@@239) (ite ($generated@@55 $generated@@239) ($generated@@30 $generated@@238 ($generated@@44 $generated@@29 $generated@@39)) (let (($generated@@242 ($generated@@96 $generated@@239)))
(let (($generated@@243 ($generated@@97 $generated@@239)))
(ite ($generated@@41 ($generated@@75 ($generated@@85 $generated@@98) $generated@@238 $generated@@243) $generated@@37) ($generated@@30 $generated@@238 ($generated@@30 $generated@@243 $generated@@242)) ($generated@@30 $generated@@243 ($generated@@80 $generated@@237 $generated@@238 $generated@@242)))))))))
 :pattern ( ($generated@@80 ($generated@@85 $generated@@237) $generated@@238 $generated@@239))
))))
(assert (forall (($generated@@244 T@U) ) (! (= ($generated@@70 ($generated@@44 $generated@@29 $generated@@244)) ($generated@@44 $generated@@29 ($generated@@70 $generated@@244)))
 :pattern ( ($generated@@70 ($generated@@44 $generated@@29 $generated@@244)))
)))
(assert (forall (($generated@@245 T@U) ($generated@@246 T@T) ) (! (= ($generated@@60 $generated@@246 ($generated@@44 $generated@@246 $generated@@245)) ($generated@@44 $generated@@152 ($generated@@60 $generated@@246 $generated@@245)))
 :pattern ( ($generated@@60 $generated@@246 ($generated@@44 $generated@@246 $generated@@245)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@258 true))
(let (($generated@@259  (=> (and (and (= $generated@@247 ($generated@@30 $generated@@248 $generated@@249)) ($generated@@28 $generated@@29 $generated@@248 $generated@@32)) (and ($generated@@28 $generated@@29 $generated@@249 $generated@@31) (= $generated@@250 $generated@@249))) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@250 $generated@@31) (= $generated@@251 $generated@@250)) (and (= $generated@@252 $generated@@248) ($generated@@28 $generated@@29 $generated@@252 $generated@@32))) (and (and (= $generated@@253 $generated@@252) ($generated@@213 $generated@@29 $generated@@253 $generated@@32 $generated@@254)) (and ($generated@@213 $generated@@29 $generated@@251 $generated@@31 $generated@@254) (= (ControlFlow 0 4) (- 0 3))))) (< ($generated@@139 $generated@@251) ($generated@@139 $generated@@247))))))
(let (($generated@@260  (=> (or (not (= $generated@@247 $generated@@39)) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@259) (=> (= (ControlFlow 0 6) 5) $generated@@258)))))
(let (($generated@@261 true))
(let (($generated@@262 true))
(let (($generated@@263  (=> (= $generated@@255 ($generated@@150 $generated@@256 $generated@@254 $generated false)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@262) (=> (= (ControlFlow 0 7) 2) $generated@@261)) (=> (= (ControlFlow 0 7) 6) $generated@@260)))))
(let (($generated@@264  (=> (and (and (and ($generated@@214 $generated@@254) ($generated@@257 $generated@@254)) ($generated@@28 $generated@@29 $generated@@247 $generated@@31)) (and (= 3 $generated@@74) (= (ControlFlow 0 8) 7))) $generated@@263)))
$generated@@264))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
