(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@T T@U) T@U)
(declare-fun $generated@@49 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@62 (T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@72 () T@U)
(declare-fun $generated@@74 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) Bool)
(declare-fun $generated@@109 (T@U) Bool)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@150 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@171 (T@U T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(declare-fun $generated@@194 (T@U) Int)
(declare-fun $generated@@217 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@218 () T@T)
(declare-fun $generated@@219 () T@T)
(declare-fun $generated@@220 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@221 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@222 () T@T)
(declare-fun $generated@@223 (T@T T@T) T@T)
(declare-fun $generated@@224 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@225 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@226 (T@T) T@T)
(declare-fun $generated@@227 (T@T) T@T)
(declare-fun $generated@@284 (T@U) T@U)
(declare-fun $generated@@285 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@14 $generated@@31) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@32 $generated@@35 $generated@@36) $generated@@33)  (and ($generated@@30 $generated@@31 $generated@@35 $generated@@34) ($generated@@30 $generated@@31 $generated@@36 $generated@@33)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@32 $generated@@35 $generated@@36) $generated@@33))
)))
(assert (= ($generated@@14 $generated@@42) 4))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (=> (or ($generated@@41 $generated@@56 $generated@@57) (and (< 2 $generated@@37) (and (and ($generated@@40 $generated@@55) ($generated@@30 $generated@@42 $generated@@56 ($generated@@43 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@57 $generated@@33)))) (and (=> (not ($generated@@44 $generated@@57)) (let (($generated@@58 ($generated@@45 $generated@@57)))
(let (($generated@@59 ($generated@@46 $generated@@57)))
 (and (and ($generated@@47 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@55 $generated@@56 ($generated@@50 $generated@@31 $generated@@59)))) (=> (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@55 $generated@@56 ($generated@@50 $generated@@31 $generated@@59))) $generated@@52)) ($generated@@41 $generated@@56 $generated@@58))) (=> ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@55 $generated@@56 ($generated@@50 $generated@@31 $generated@@59))) $generated@@52) ($generated@@41 $generated@@56 $generated@@58)))))) (= ($generated@@38 ($generated@@39 $generated@@54) $generated@@56 $generated@@57) (ite ($generated@@44 $generated@@57) $generated@@53 (let (($generated@@60 ($generated@@45 $generated@@57)))
(let (($generated@@61 ($generated@@46 $generated@@57)))
(ite  (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@55 $generated@@56 ($generated@@50 $generated@@31 $generated@@61))) $generated@@52)) ($generated@@32 $generated@@61 ($generated@@38 $generated@@54 $generated@@56 $generated@@60)) ($generated@@38 $generated@@54 $generated@@56 $generated@@60))))))))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@54) $generated@@56 $generated@@57) ($generated@@40 $generated@@55))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (or ($generated@@64 ($generated@@63 $generated@@31 $generated@@66) ($generated@@63 $generated@@31 $generated@@67)) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@31 $generated@@66 $generated@@33) ($generated@@30 $generated@@31 $generated@@67 $generated@@33)))) (and (=> (not ($generated@@19 ($generated@@63 $generated@@15 ($generated@@18 ($generated@@44 ($generated@@63 $generated@@31 $generated@@66)))))) (let (($generated@@68 ($generated@@63 $generated@@31 ($generated@@45 ($generated@@63 $generated@@31 $generated@@66)))))
($generated@@64 $generated@@68 ($generated@@63 $generated@@31 $generated@@67)))) (= ($generated@@62 ($generated@@39 $generated@@65) ($generated@@63 $generated@@31 $generated@@66) ($generated@@63 $generated@@31 $generated@@67)) (ite ($generated@@44 ($generated@@63 $generated@@31 $generated@@66)) $generated@@67 (let (($generated@@69 ($generated@@63 $generated@@31 ($generated@@45 ($generated@@63 $generated@@31 $generated@@66)))))
(let (($generated@@70 ($generated@@63 $generated@@31 ($generated@@46 ($generated@@63 $generated@@31 $generated@@66)))))
($generated@@63 $generated@@31 ($generated@@32 $generated@@70 ($generated@@63 $generated@@31 ($generated@@62 ($generated@@39 $generated@@65) $generated@@69 ($generated@@63 $generated@@31 $generated@@67)))))))))))
 :weight 3
 :pattern ( ($generated@@62 ($generated@@39 $generated@@65) ($generated@@63 $generated@@31 $generated@@66) ($generated@@63 $generated@@31 $generated@@67)))
))))
(assert (forall (($generated@@73 T@U) ) (!  (not ($generated@@71 $generated@@72 $generated@@73))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (= ($generated@@74 $generated@@52) $generated@@5))
(assert (= ($generated@@74 $generated@@53) $generated@@7))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@41 ($generated@@63 $generated@@42 $generated@@77) ($generated@@63 $generated@@31 $generated@@78)) (and (< 2 $generated@@37) (and (and ($generated@@40 $generated@@76) ($generated@@30 $generated@@42 $generated@@77 ($generated@@43 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@78 $generated@@33)))) (and (=> (not ($generated@@19 ($generated@@63 $generated@@15 ($generated@@18 ($generated@@44 ($generated@@63 $generated@@31 $generated@@78)))))) (let (($generated@@79 ($generated@@63 $generated@@31 ($generated@@45 ($generated@@63 $generated@@31 $generated@@78)))))
(let (($generated@@80 ($generated@@63 $generated@@31 ($generated@@46 ($generated@@63 $generated@@31 $generated@@78)))))
 (and (and ($generated@@47 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@76 ($generated@@63 $generated@@42 $generated@@77) ($generated@@50 $generated@@31 $generated@@80)))) (=> (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@76 ($generated@@63 $generated@@42 $generated@@77) ($generated@@50 $generated@@31 $generated@@80))) $generated@@52)) ($generated@@41 ($generated@@63 $generated@@42 $generated@@77) $generated@@79))) (=> ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@76 ($generated@@63 $generated@@42 $generated@@77) ($generated@@50 $generated@@31 $generated@@80))) $generated@@52) ($generated@@41 ($generated@@63 $generated@@42 $generated@@77) $generated@@79)))))) (= ($generated@@38 ($generated@@39 $generated@@75) ($generated@@63 $generated@@42 $generated@@77) ($generated@@63 $generated@@31 $generated@@78)) (ite ($generated@@44 ($generated@@63 $generated@@31 $generated@@78)) $generated@@53 (let (($generated@@81 ($generated@@63 $generated@@31 ($generated@@45 ($generated@@63 $generated@@31 $generated@@78)))))
(let (($generated@@82 ($generated@@63 $generated@@31 ($generated@@46 ($generated@@63 $generated@@31 $generated@@78)))))
(ite  (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@76 ($generated@@63 $generated@@42 $generated@@77) ($generated@@50 $generated@@31 $generated@@82))) $generated@@52)) ($generated@@32 $generated@@82 ($generated@@63 $generated@@31 ($generated@@38 ($generated@@39 $generated@@75) ($generated@@63 $generated@@42 $generated@@77) $generated@@81))) ($generated@@38 ($generated@@39 $generated@@75) ($generated@@63 $generated@@42 $generated@@77) $generated@@81))))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@75) ($generated@@63 $generated@@42 $generated@@77) ($generated@@63 $generated@@31 $generated@@78)) ($generated@@40 $generated@@76))
))))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@42 $generated@@85 ($generated@@83 $generated@@86 $generated@@87)) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@84 $generated@@90 $generated@@88) ($generated@@84 $generated@@90 $generated@@86))
 :pattern ( ($generated@@84 $generated@@90 $generated@@88))
 :pattern ( ($generated@@84 $generated@@90 $generated@@86))
))) (forall (($generated@@91 T@U) ) (!  (=> ($generated@@84 $generated@@91 $generated@@87) ($generated@@84 $generated@@91 $generated@@89))
 :pattern ( ($generated@@84 $generated@@91 $generated@@87))
 :pattern ( ($generated@@84 $generated@@91 $generated@@89))
))) ($generated@@30 $generated@@42 $generated@@85 ($generated@@83 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@30 $generated@@42 $generated@@85 ($generated@@83 $generated@@86 $generated@@87)) ($generated@@30 $generated@@42 $generated@@85 ($generated@@83 $generated@@88 $generated@@89)))
)))
(assert ($generated@@30 $generated@@31 $generated@@52 $generated@@34))
(assert ($generated@@30 $generated@@31 $generated@@53 $generated@@33))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@51 $generated@@92 $generated@@93) (= $generated@@92 $generated@@93))
 :pattern ( ($generated@@51 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@94 $generated@@95 $generated@@96) (= $generated@@95 $generated@@96))
 :pattern ( ($generated@@94 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@63 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@63 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and ($generated@@40 $generated@@104) (and ($generated@@84 $generated@@106 $generated@@102) ($generated@@30 $generated@@42 $generated@@105 ($generated@@83 $generated@@102 $generated@@103)))) (= ($generated@@101 ($generated@@99 $generated@@102 $generated@@103 $generated@@100 $generated@@105 $generated@@106) $generated@@72) ($generated@@101 ($generated@@99 $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106) $generated@@72)))
 :pattern ( ($generated@@99 $generated@@102 $generated@@103 $generated@@100 $generated@@105 $generated@@106) ($generated@@40 $generated@@104))
 :pattern ( ($generated@@99 $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@107 $generated@@108) (= ($generated@@74 $generated@@108) $generated@@5))
 :pattern ( ($generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@109 $generated@@110) (= ($generated@@74 $generated@@110) $generated@@6))
 :pattern ( ($generated@@109 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (! (= ($generated@@44 $generated@@111) (= ($generated@@74 $generated@@111) $generated@@7))
 :pattern ( ($generated@@44 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@112 $generated@@113) (= ($generated@@74 $generated@@113) $generated@@8))
 :pattern ( ($generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@50 $generated@@115 ($generated@@48 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@48 $generated@@115 $generated@@114))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@64 $generated@@117 $generated@@118) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@31 $generated@@117 $generated@@33) ($generated@@30 $generated@@31 $generated@@118 $generated@@33)))) (and (=> (not ($generated@@44 $generated@@117)) (let (($generated@@119 ($generated@@45 $generated@@117)))
($generated@@64 $generated@@119 $generated@@118))) (= ($generated@@62 ($generated@@39 $generated@@116) $generated@@117 $generated@@118) (ite ($generated@@44 $generated@@117) $generated@@118 (let (($generated@@120 ($generated@@45 $generated@@117)))
(let (($generated@@121 ($generated@@46 $generated@@117)))
($generated@@32 $generated@@121 ($generated@@62 $generated@@116 $generated@@120 $generated@@118))))))))
 :pattern ( ($generated@@62 ($generated@@39 $generated@@116) $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@112 $generated@@122) (exists (($generated@@123 T@U) ($generated@@124 T@U) ) (= $generated@@122 ($generated@@32 $generated@@123 $generated@@124))))
 :pattern ( ($generated@@112 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@107 $generated@@125) (= $generated@@125 $generated@@52))
 :pattern ( ($generated@@107 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@44 $generated@@126) (= $generated@@126 $generated@@53))
 :pattern ( ($generated@@44 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@109 $generated@@128) (exists (($generated@@129 T@U) ) (= $generated@@128 ($generated@@127 $generated@@129))))
 :pattern ( ($generated@@109 $generated@@128))
)))
(assert ($generated@@40 $generated@@100))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@84 $generated@@130 $generated@@34) (and (= ($generated@@50 $generated@@31 ($generated@@48 $generated@@31 $generated@@130)) $generated@@130) ($generated@@30 $generated@@31 ($generated@@48 $generated@@31 $generated@@130) $generated@@34)))
 :pattern ( ($generated@@84 $generated@@130 $generated@@34))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@84 $generated@@131 $generated@@33) (and (= ($generated@@50 $generated@@31 ($generated@@48 $generated@@31 $generated@@131)) $generated@@131) ($generated@@30 $generated@@31 ($generated@@48 $generated@@31 $generated@@131) $generated@@33)))
 :pattern ( ($generated@@84 $generated@@131 $generated@@33))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@127 $generated@@132) $generated@@34) ($generated@@30 $generated@@31 $generated@@132 $generated@@34))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@127 $generated@@132) $generated@@34))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@109 $generated@@134) ($generated@@109 $generated@@135)) (= ($generated@@51 $generated@@134 $generated@@135) ($generated@@51 ($generated@@133 $generated@@134) ($generated@@133 $generated@@135))))
 :pattern ( ($generated@@51 $generated@@134 $generated@@135) ($generated@@109 $generated@@134))
 :pattern ( ($generated@@51 $generated@@134 $generated@@135) ($generated@@109 $generated@@135))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (or ($generated@@64 $generated@@137 $generated@@138) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@31 $generated@@137 $generated@@33) ($generated@@30 $generated@@31 $generated@@138 $generated@@33)))) ($generated@@30 $generated@@31 ($generated@@62 $generated@@136 $generated@@137 $generated@@138) $generated@@33))
 :pattern ( ($generated@@62 $generated@@136 $generated@@137 $generated@@138))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@62 ($generated@@39 $generated@@139) $generated@@140 $generated@@141) ($generated@@62 $generated@@139 $generated@@140 $generated@@141))
 :pattern ( ($generated@@62 ($generated@@39 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@38 ($generated@@39 $generated@@142) $generated@@143 $generated@@144) ($generated@@38 $generated@@142 $generated@@143 $generated@@144))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@142) $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (!  (=> ($generated@@47 $generated@@145) (or ($generated@@107 $generated@@145) ($generated@@109 $generated@@145)))
 :pattern ( ($generated@@47 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@101 $generated@@146 $generated@@147) (= $generated@@146 $generated@@147))
 :pattern ( ($generated@@101 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@148 $generated@@34) (or ($generated@@107 $generated@@148) ($generated@@109 $generated@@148)))
 :pattern ( ($generated@@109 $generated@@148) ($generated@@30 $generated@@31 $generated@@148 $generated@@34))
 :pattern ( ($generated@@107 $generated@@148) ($generated@@30 $generated@@31 $generated@@148 $generated@@34))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@149 $generated@@33) (or ($generated@@44 $generated@@149) ($generated@@112 $generated@@149)))
 :pattern ( ($generated@@112 $generated@@149) ($generated@@30 $generated@@31 $generated@@149 $generated@@33))
 :pattern ( ($generated@@44 $generated@@149) ($generated@@30 $generated@@31 $generated@@149 $generated@@33))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@30 $generated@@42 $generated@@151 ($generated@@83 $generated@@152 $generated@@153)) (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@154) ($generated@@84 $generated@@155 $generated@@152)) ($generated@@150 $generated@@152 $generated@@153 $generated@@154 $generated@@151 $generated@@155)) ($generated@@84 ($generated@@49 $generated@@152 $generated@@153 $generated@@154 $generated@@151 $generated@@155) $generated@@153))
 :pattern ( ($generated@@49 $generated@@152 $generated@@153 $generated@@154 $generated@@151 $generated@@155))
)))
 :pattern ( ($generated@@30 $generated@@42 $generated@@151 ($generated@@83 $generated@@152 $generated@@153)))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (and ($generated@@112 $generated@@156) ($generated@@112 $generated@@157)) (= ($generated@@94 $generated@@156 $generated@@157)  (and ($generated@@51 ($generated@@46 $generated@@156) ($generated@@46 $generated@@157)) ($generated@@94 ($generated@@45 $generated@@156) ($generated@@45 $generated@@157)))))
 :pattern ( ($generated@@94 $generated@@156 $generated@@157) ($generated@@112 $generated@@156))
 :pattern ( ($generated@@94 $generated@@156 $generated@@157) ($generated@@112 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@T) ) (! (= ($generated@@84 ($generated@@50 $generated@@160 $generated@@158) $generated@@159) ($generated@@30 $generated@@160 $generated@@158 $generated@@159))
 :pattern ( ($generated@@84 ($generated@@50 $generated@@160 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@107 $generated@@161) ($generated@@107 $generated@@162)) ($generated@@51 $generated@@161 $generated@@162))
 :pattern ( ($generated@@51 $generated@@161 $generated@@162) ($generated@@107 $generated@@161))
 :pattern ( ($generated@@51 $generated@@161 $generated@@162) ($generated@@107 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (and ($generated@@44 $generated@@163) ($generated@@44 $generated@@164)) ($generated@@94 $generated@@163 $generated@@164))
 :pattern ( ($generated@@94 $generated@@163 $generated@@164) ($generated@@44 $generated@@163))
 :pattern ( ($generated@@94 $generated@@163 $generated@@164) ($generated@@44 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@165 ($generated@@83 $generated@@166 $generated@@167)) $generated@@166)
 :pattern ( ($generated@@83 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@168 ($generated@@83 $generated@@169 $generated@@170)) $generated@@170)
 :pattern ( ($generated@@83 $generated@@169 $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@172 ($generated@@171 $generated@@173 $generated@@174)) $generated@@173)
 :pattern ( ($generated@@171 $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@175 ($generated@@171 $generated@@176 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@171 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@178 ($generated@@43 $generated@@179 $generated@@180)) $generated@@179)
 :pattern ( ($generated@@43 $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@181 ($generated@@43 $generated@@182 $generated@@183)) $generated@@183)
 :pattern ( ($generated@@43 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@74 ($generated@@32 $generated@@184 $generated@@185)) $generated@@8)
 :pattern ( ($generated@@32 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@46 ($generated@@32 $generated@@186 $generated@@187)) $generated@@186)
 :pattern ( ($generated@@32 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@45 ($generated@@32 $generated@@188 $generated@@189)) $generated@@189)
 :pattern ( ($generated@@32 $generated@@188 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ) (! (= ($generated@@74 ($generated@@127 $generated@@190)) $generated@@6)
 :pattern ( ($generated@@127 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@133 ($generated@@127 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@127 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@T) ) (! (= ($generated@@48 $generated@@193 ($generated@@50 $generated@@193 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@50 $generated@@193 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (! (< ($generated@@194 $generated@@195) ($generated@@194 ($generated@@32 $generated@@195 $generated@@196)))
 :pattern ( ($generated@@32 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (< ($generated@@194 $generated@@198) ($generated@@194 ($generated@@32 $generated@@197 $generated@@198)))
 :pattern ( ($generated@@32 $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@30 $generated@@42 $generated@@201 ($generated@@43 $generated@@199 $generated@@200))  (and ($generated@@30 $generated@@42 $generated@@201 ($generated@@171 $generated@@199 $generated@@200)) (forall (($generated@@202 T@U) )  (=> ($generated@@84 $generated@@202 $generated@@199) ($generated@@150 $generated@@199 $generated@@200 $generated@@100 $generated@@201 $generated@@202)))))
 :pattern ( ($generated@@30 $generated@@42 $generated@@201 ($generated@@43 $generated@@199 $generated@@200)))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (! (= ($generated@@30 $generated@@42 $generated@@205 ($generated@@171 $generated@@203 $generated@@204))  (and ($generated@@30 $generated@@42 $generated@@205 ($generated@@83 $generated@@203 $generated@@204)) (forall (($generated@@206 T@U) )  (=> ($generated@@84 $generated@@206 $generated@@203) ($generated@@101 ($generated@@99 $generated@@203 $generated@@204 $generated@@100 $generated@@205 $generated@@206) $generated@@72)))))
 :pattern ( ($generated@@30 $generated@@42 $generated@@205 ($generated@@171 $generated@@203 $generated@@204)))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@84 $generated@@209 ($generated@@83 $generated@@207 $generated@@208)) (and (= ($generated@@50 $generated@@42 ($generated@@48 $generated@@42 $generated@@209)) $generated@@209) ($generated@@30 $generated@@42 ($generated@@48 $generated@@42 $generated@@209) ($generated@@83 $generated@@207 $generated@@208))))
 :pattern ( ($generated@@84 $generated@@209 ($generated@@83 $generated@@207 $generated@@208)))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> ($generated@@84 $generated@@212 ($generated@@171 $generated@@210 $generated@@211)) (and (= ($generated@@50 $generated@@42 ($generated@@48 $generated@@42 $generated@@212)) $generated@@212) ($generated@@30 $generated@@42 ($generated@@48 $generated@@42 $generated@@212) ($generated@@171 $generated@@210 $generated@@211))))
 :pattern ( ($generated@@84 $generated@@212 ($generated@@171 $generated@@210 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@84 $generated@@215 ($generated@@43 $generated@@213 $generated@@214)) (and (= ($generated@@50 $generated@@42 ($generated@@48 $generated@@42 $generated@@215)) $generated@@215) ($generated@@30 $generated@@42 ($generated@@48 $generated@@42 $generated@@215) ($generated@@43 $generated@@213 $generated@@214))))
 :pattern ( ($generated@@84 $generated@@215 ($generated@@43 $generated@@213 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ) (! (< ($generated@@194 $generated@@216) ($generated@@194 ($generated@@127 $generated@@216)))
 :pattern ( ($generated@@127 $generated@@216))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@228 T@T) ($generated@@229 T@T) ($generated@@230 T@T) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (! (= ($generated@@217 $generated@@228 $generated@@229 $generated@@230 ($generated@@224 $generated@@228 $generated@@229 $generated@@230 $generated@@232 $generated@@233 $generated@@234 $generated@@231) $generated@@233 $generated@@234) $generated@@231)
 :weight 0
)) (and (forall (($generated@@235 T@T) ($generated@@236 T@T) ($generated@@237 T@T) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@240 $generated@@242) (= ($generated@@217 $generated@@235 $generated@@236 $generated@@237 ($generated@@224 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@217 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)) (forall (($generated@@244 T@T) ($generated@@245 T@T) ($generated@@246 T@T) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ($generated@@250 T@U) ($generated@@251 T@U) ($generated@@252 T@U) ) (!  (or (= $generated@@250 $generated@@252) (= ($generated@@217 $generated@@244 $generated@@245 $generated@@246 ($generated@@224 $generated@@244 $generated@@245 $generated@@246 $generated@@248 $generated@@249 $generated@@250 $generated@@247) $generated@@251 $generated@@252) ($generated@@217 $generated@@244 $generated@@245 $generated@@246 $generated@@248 $generated@@251 $generated@@252)))
 :weight 0
)))) (= ($generated@@14 $generated@@218) 5)) (= ($generated@@14 $generated@@219) 6)) (forall (($generated@@253 T@T) ($generated@@254 T@T) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (! (= ($generated@@221 $generated@@253 $generated@@254 ($generated@@225 $generated@@253 $generated@@254 $generated@@256 $generated@@257 $generated@@255) $generated@@257) $generated@@255)
 :weight 0
))) (forall (($generated@@258 T@T) ($generated@@259 T@T) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ($generated@@263 T@U) ) (!  (or (= $generated@@262 $generated@@263) (= ($generated@@221 $generated@@258 $generated@@259 ($generated@@225 $generated@@258 $generated@@259 $generated@@261 $generated@@262 $generated@@260) $generated@@263) ($generated@@221 $generated@@258 $generated@@259 $generated@@261 $generated@@263)))
 :weight 0
))) (= ($generated@@14 $generated@@222) 7)) (forall (($generated@@264 T@T) ($generated@@265 T@T) ) (= ($generated@@14 ($generated@@223 $generated@@264 $generated@@265)) 8))) (forall (($generated@@266 T@T) ($generated@@267 T@T) ) (! (= ($generated@@226 ($generated@@223 $generated@@266 $generated@@267)) $generated@@266)
 :pattern ( ($generated@@223 $generated@@266 $generated@@267))
))) (forall (($generated@@268 T@T) ($generated@@269 T@T) ) (! (= ($generated@@227 ($generated@@223 $generated@@268 $generated@@269)) $generated@@269)
 :pattern ( ($generated@@223 $generated@@268 $generated@@269))
))))
(assert (forall (($generated@@270 T@U) ($generated@@271 T@U) ($generated@@272 T@U) ($generated@@273 Bool) ($generated@@274 T@U) ($generated@@275 T@U) ) (! (= ($generated@@19 ($generated@@217 $generated@@218 $generated@@219 $generated@@15 ($generated@@220 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))  (=> (and (or (not (= $generated@@274 $generated@@270)) (not true)) ($generated@@19 ($generated@@48 $generated@@15 ($generated@@221 $generated@@219 $generated@@222 ($generated@@221 $generated@@218 ($generated@@223 $generated@@219 $generated@@222) $generated@@271 $generated@@274) $generated@@272)))) $generated@@273))
 :pattern ( ($generated@@217 $generated@@218 $generated@@219 $generated@@15 ($generated@@220 $generated@@270 $generated@@271 $generated@@272 $generated@@273) $generated@@274 $generated@@275))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 T@U) ($generated@@279 T@U) ) (!  (=> (or ($generated@@41 $generated@@278 ($generated@@63 $generated@@31 $generated@@279)) (and (< 2 $generated@@37) (and (and ($generated@@40 $generated@@277) ($generated@@30 $generated@@42 $generated@@278 ($generated@@43 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@279 $generated@@33)))) (and (=> (not ($generated@@19 ($generated@@63 $generated@@15 ($generated@@18 ($generated@@44 ($generated@@63 $generated@@31 $generated@@279)))))) (let (($generated@@280 ($generated@@63 $generated@@31 ($generated@@45 ($generated@@63 $generated@@31 $generated@@279)))))
(let (($generated@@281 ($generated@@63 $generated@@31 ($generated@@46 ($generated@@63 $generated@@31 $generated@@279)))))
 (and (and ($generated@@47 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@277 $generated@@278 ($generated@@50 $generated@@31 $generated@@281)))) (=> (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@277 $generated@@278 ($generated@@50 $generated@@31 $generated@@281))) $generated@@52)) ($generated@@41 $generated@@278 $generated@@280))) (=> ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@277 $generated@@278 ($generated@@50 $generated@@31 $generated@@281))) $generated@@52) ($generated@@41 $generated@@278 $generated@@280)))))) (= ($generated@@38 ($generated@@39 $generated@@276) $generated@@278 ($generated@@63 $generated@@31 $generated@@279)) (ite ($generated@@44 ($generated@@63 $generated@@31 $generated@@279)) $generated@@53 (let (($generated@@282 ($generated@@63 $generated@@31 ($generated@@45 ($generated@@63 $generated@@31 $generated@@279)))))
(let (($generated@@283 ($generated@@63 $generated@@31 ($generated@@46 ($generated@@63 $generated@@31 $generated@@279)))))
(ite  (not ($generated@@51 ($generated@@48 $generated@@31 ($generated@@49 $generated@@34 $generated@@34 $generated@@277 $generated@@278 ($generated@@50 $generated@@31 $generated@@283))) $generated@@52)) ($generated@@32 $generated@@283 ($generated@@38 ($generated@@39 $generated@@276) $generated@@278 $generated@@282)) ($generated@@38 ($generated@@39 $generated@@276) $generated@@278 $generated@@282))))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@276) $generated@@278 ($generated@@63 $generated@@31 $generated@@279)) ($generated@@40 $generated@@277))
))))
(assert (forall (($generated@@286 T@U) ($generated@@287 T@U) ) (!  (and (= ($generated@@284 ($generated@@83 $generated@@286 $generated@@287)) $generated@@0) (= ($generated@@285 ($generated@@83 $generated@@286 $generated@@287)) $generated@@9))
 :pattern ( ($generated@@83 $generated@@286 $generated@@287))
)))
(assert (forall (($generated@@288 T@U) ($generated@@289 T@U) ) (!  (and (= ($generated@@284 ($generated@@171 $generated@@288 $generated@@289)) $generated@@1) (= ($generated@@285 ($generated@@171 $generated@@288 $generated@@289)) $generated@@10))
 :pattern ( ($generated@@171 $generated@@288 $generated@@289))
)))
(assert (forall (($generated@@290 T@U) ($generated@@291 T@U) ) (!  (and (= ($generated@@284 ($generated@@43 $generated@@290 $generated@@291)) $generated@@2) (= ($generated@@285 ($generated@@43 $generated@@290 $generated@@291)) $generated@@11))
 :pattern ( ($generated@@43 $generated@@290 $generated@@291))
)))
(assert (forall (($generated@@292 T@U) ($generated@@293 T@U) ($generated@@294 T@U) ($generated@@295 T@U) ($generated@@296 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@294) (and ($generated@@84 $generated@@296 $generated@@292) ($generated@@30 $generated@@42 $generated@@295 ($generated@@83 $generated@@292 $generated@@293)))) ($generated@@101 ($generated@@99 $generated@@292 $generated@@293 $generated@@100 $generated@@295 $generated@@296) $generated@@72)) (= ($generated@@150 $generated@@292 $generated@@293 $generated@@100 $generated@@295 $generated@@296) ($generated@@150 $generated@@292 $generated@@293 $generated@@294 $generated@@295 $generated@@296)))
 :pattern ( ($generated@@150 $generated@@292 $generated@@293 $generated@@100 $generated@@295 $generated@@296) ($generated@@40 $generated@@294))
 :pattern ( ($generated@@150 $generated@@292 $generated@@293 $generated@@294 $generated@@295 $generated@@296))
)))
(assert (= ($generated@@284 $generated@@34) $generated@@3))
(assert (= ($generated@@285 $generated@@34) $generated@@12))
(assert (= ($generated@@284 $generated@@33) $generated@@4))
(assert (= ($generated@@285 $generated@@33) $generated@@13))
(assert (= $generated@@52 ($generated@@63 $generated@@31 $generated@@52)))
(assert (= $generated@@53 ($generated@@63 $generated@@31 $generated@@53)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (= ($generated@@101 $generated@@297 $generated@@298) (forall (($generated@@299 T@U) ) (! (= ($generated@@71 $generated@@297 $generated@@299) ($generated@@71 $generated@@298 $generated@@299))
 :pattern ( ($generated@@71 $generated@@297 $generated@@299))
 :pattern ( ($generated@@71 $generated@@298 $generated@@299))
)))
 :pattern ( ($generated@@101 $generated@@297 $generated@@298))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@U) ) (! (= ($generated@@32 ($generated@@63 $generated@@31 $generated@@300) ($generated@@63 $generated@@31 $generated@@301)) ($generated@@63 $generated@@31 ($generated@@32 $generated@@300 $generated@@301)))
 :pattern ( ($generated@@32 ($generated@@63 $generated@@31 $generated@@300) ($generated@@63 $generated@@31 $generated@@301)))
)))
(assert (forall (($generated@@302 T@U) ) (! (= ($generated@@127 ($generated@@63 $generated@@31 $generated@@302)) ($generated@@63 $generated@@31 ($generated@@127 $generated@@302)))
 :pattern ( ($generated@@127 ($generated@@63 $generated@@31 $generated@@302)))
)))
(assert (forall (($generated@@303 T@U) ($generated@@304 T@T) ) (! (= ($generated@@50 $generated@@304 ($generated@@63 $generated@@304 $generated@@303)) ($generated@@63 $generated@@222 ($generated@@50 $generated@@304 $generated@@303)))
 :pattern ( ($generated@@50 $generated@@304 ($generated@@63 $generated@@304 $generated@@303)))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@305 T@U) ($generated@@306 T@U) ($generated@@307 T@U) ) (!  (=> (or ($generated@@41 $generated@@306 $generated@@307) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@42 $generated@@306 ($generated@@43 $generated@@34 $generated@@34)) ($generated@@30 $generated@@31 $generated@@307 $generated@@33)))) ($generated@@30 $generated@@31 ($generated@@38 $generated@@305 $generated@@306 $generated@@307) $generated@@33))
 :pattern ( ($generated@@38 $generated@@305 $generated@@306 $generated@@307))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@309 () T@U)
(declare-fun $generated@@310 () T@U)
(declare-fun $generated@@311 () T@U)
(declare-fun $generated@@312 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@313  (=> (and (= $generated@@308 ($generated@@220 $generated@@309 $generated@@310 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@314 T@U) ($generated@@315 T@U) ($generated@@316 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@31 $generated@@314 $generated@@33) ($generated@@30 $generated@@31 $generated@@315 $generated@@33)) ($generated@@30 $generated@@42 $generated@@316 ($generated@@43 $generated@@34 $generated@@34))) ($generated@@94 ($generated@@38 ($generated@@39 ($generated@@39 $generated@@311)) $generated@@316 ($generated@@62 ($generated@@39 ($generated@@39 $generated@@311)) $generated@@314 $generated@@315)) ($generated@@62 ($generated@@39 ($generated@@39 $generated@@311)) ($generated@@38 ($generated@@39 ($generated@@39 $generated@@311)) $generated@@316 $generated@@314) ($generated@@38 ($generated@@39 ($generated@@39 $generated@@311)) $generated@@316 $generated@@315))))
 :pattern ( ($generated@@62 ($generated@@39 ($generated@@39 $generated@@311)) ($generated@@38 ($generated@@39 ($generated@@39 $generated@@311)) $generated@@316 $generated@@314) ($generated@@38 ($generated@@39 ($generated@@39 $generated@@311)) $generated@@316 $generated@@315)))
 :pattern ( ($generated@@38 ($generated@@39 ($generated@@39 $generated@@311)) $generated@@316 ($generated@@62 ($generated@@39 ($generated@@39 $generated@@311)) $generated@@314 $generated@@315)))
)))))
(let (($generated@@317  (=> (and (and ($generated@@40 $generated@@310) ($generated@@312 $generated@@310)) (and (= 3 $generated@@37) (= (ControlFlow 0 3) 2))) $generated@@313)))
$generated@@317)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
