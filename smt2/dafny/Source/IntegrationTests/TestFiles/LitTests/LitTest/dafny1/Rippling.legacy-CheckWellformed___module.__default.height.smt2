(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () Int)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@68 (T@U) Bool)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@73 (T@U) Bool)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@126 (T@U) Int)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 () T@T)
(declare-fun $generated@@141 () T@T)
(declare-fun $generated@@142 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@143 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@144 () T@T)
(declare-fun $generated@@145 (T@T T@T) T@T)
(declare-fun $generated@@146 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@T) T@T)
(declare-fun $generated@@149 (T@T) T@T)
(declare-fun $generated@@198 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@199 (T@U) Bool)
(declare-fun $generated@@204 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30 $generated@@31) $generated@@27)  (and (and ($generated@@24 $generated@@25 $generated@@29 $generated@@27) ($generated@@24 $generated@@25 $generated@@30 $generated@@28)) ($generated@@24 $generated@@25 $generated@@31 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30 $generated@@31) $generated@@27))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@32 ($generated@@26 $generated@@33 $generated@@34 $generated@@35)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@26 $generated@@37 $generated@@38 $generated@@39)) $generated@@37)
 :pattern ( ($generated@@26 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 ($generated@@26 $generated@@41 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@26 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@44 ($generated@@26 $generated@@45 $generated@@46 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@26 $generated@@45 $generated@@46 $generated@@47))
)))
(assert (= ($generated@@32 $generated@@48) $generated@@2))
(assert (= ($generated@@32 $generated@@49) $generated@@4))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@54 ($generated@@53 $generated@@25 $generated@@61)) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@61 $generated@@27))) (and (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@55 ($generated@@53 $generated@@25 $generated@@61)))))) (let (($generated@@62 ($generated@@53 $generated@@25 ($generated@@44 ($generated@@53 $generated@@25 $generated@@61)))))
(let (($generated@@63 ($generated@@53 $generated@@25 ($generated@@36 ($generated@@53 $generated@@25 $generated@@61)))))
 (and (and ($generated@@54 $generated@@63) ($generated@@54 $generated@@62)) ($generated@@56 ($generated@@51 ($generated@@52 $generated@@60) $generated@@63) ($generated@@51 ($generated@@52 $generated@@60) $generated@@62)))))) (= ($generated@@51 ($generated@@52 $generated@@60) ($generated@@53 $generated@@25 $generated@@61)) (ite ($generated@@55 ($generated@@53 $generated@@25 $generated@@61)) $generated@@48 (let (($generated@@64 ($generated@@53 $generated@@25 ($generated@@44 ($generated@@53 $generated@@25 $generated@@61)))))
(let (($generated@@65 ($generated@@53 $generated@@25 ($generated@@36 ($generated@@53 $generated@@25 $generated@@61)))))
($generated@@53 $generated@@25 ($generated@@57 ($generated@@53 $generated@@25 ($generated@@58 ($generated@@52 $generated@@59) ($generated@@53 $generated@@25 ($generated@@51 ($generated@@52 $generated@@60) $generated@@65)) ($generated@@53 $generated@@25 ($generated@@51 ($generated@@52 $generated@@60) $generated@@64))))))))))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@52 $generated@@60) ($generated@@53 $generated@@25 $generated@@61)))
))))
(assert ($generated@@24 $generated@@25 $generated@@48 $generated@@28))
(assert ($generated@@24 $generated@@25 $generated@@49 $generated@@27))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@53 $generated@@67 $generated@@66) $generated@@66)
 :pattern ( ($generated@@53 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@68 $generated@@69) (= ($generated@@32 $generated@@69) $generated@@2))
 :pattern ( ($generated@@68 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (! (= ($generated@@70 $generated@@71) (= ($generated@@32 $generated@@71) $generated@@3))
 :pattern ( ($generated@@70 $generated@@71))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@55 $generated@@72) (= ($generated@@32 $generated@@72) $generated@@4))
 :pattern ( ($generated@@55 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ) (! (= ($generated@@73 $generated@@74) (= ($generated@@32 $generated@@74) $generated@@5))
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@75 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@75 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@73 $generated@@79) (exists (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (= $generated@@79 ($generated@@26 $generated@@80 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@73 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ) (!  (=> ($generated@@68 $generated@@83) (= $generated@@83 $generated@@48))
 :pattern ( ($generated@@68 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@55 $generated@@84) (= $generated@@84 $generated@@49))
 :pattern ( ($generated@@55 $generated@@84))
)))
(assert (forall (($generated@@85 T@U) ) (!  (=> ($generated@@70 $generated@@85) (exists (($generated@@86 T@U) ) (= $generated@@85 ($generated@@57 $generated@@86))))
 :pattern ( ($generated@@70 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@57 $generated@@87) $generated@@28) ($generated@@24 $generated@@25 $generated@@87 $generated@@28))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@57 $generated@@87) $generated@@28))
)))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@56 $generated@@89 $generated@@90) (and (< 1 $generated@@50) (and ($generated@@24 $generated@@25 $generated@@89 $generated@@28) ($generated@@24 $generated@@25 $generated@@90 $generated@@28)))) ($generated@@24 $generated@@25 ($generated@@58 $generated@@88 $generated@@89 $generated@@90) $generated@@28))
 :pattern ( ($generated@@58 $generated@@88 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@58 ($generated@@52 $generated@@91) $generated@@92 $generated@@93) ($generated@@58 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@58 ($generated@@52 $generated@@91) $generated@@92 $generated@@93))
)))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@56 $generated@@96 $generated@@97) (and (< 1 $generated@@50) (and ($generated@@24 $generated@@25 $generated@@96 $generated@@28) ($generated@@24 $generated@@25 $generated@@97 $generated@@28)))) (and (=> (not ($generated@@68 $generated@@96)) (let (($generated@@98 ($generated@@94 $generated@@96)))
 (=> (not ($generated@@68 $generated@@97)) (let (($generated@@99 ($generated@@94 $generated@@97)))
($generated@@56 $generated@@98 $generated@@99))))) (= ($generated@@58 ($generated@@52 $generated@@95) $generated@@96 $generated@@97) (ite ($generated@@68 $generated@@96) $generated@@97 (let (($generated@@100 ($generated@@94 $generated@@96)))
(ite ($generated@@68 $generated@@97) $generated@@96 (let (($generated@@101 ($generated@@94 $generated@@97)))
($generated@@57 ($generated@@58 $generated@@95 $generated@@100 $generated@@101)))))))))
 :pattern ( ($generated@@58 ($generated@@52 $generated@@95) $generated@@96 $generated@@97))
))))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@56 ($generated@@53 $generated@@25 $generated@@103) ($generated@@53 $generated@@25 $generated@@104)) (and (< 1 $generated@@50) (and ($generated@@24 $generated@@25 $generated@@103 $generated@@28) ($generated@@24 $generated@@25 $generated@@104 $generated@@28)))) (and (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@68 ($generated@@53 $generated@@25 $generated@@103)))))) (let (($generated@@105 ($generated@@53 $generated@@25 ($generated@@94 ($generated@@53 $generated@@25 $generated@@103)))))
 (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@68 ($generated@@53 $generated@@25 $generated@@104)))))) (let (($generated@@106 ($generated@@53 $generated@@25 ($generated@@94 ($generated@@53 $generated@@25 $generated@@104)))))
($generated@@56 $generated@@105 $generated@@106))))) (= ($generated@@58 ($generated@@52 $generated@@102) ($generated@@53 $generated@@25 $generated@@103) ($generated@@53 $generated@@25 $generated@@104)) (ite ($generated@@68 ($generated@@53 $generated@@25 $generated@@103)) $generated@@104 (let (($generated@@107 ($generated@@53 $generated@@25 ($generated@@94 ($generated@@53 $generated@@25 $generated@@103)))))
(ite ($generated@@68 ($generated@@53 $generated@@25 $generated@@104)) $generated@@103 (let (($generated@@108 ($generated@@53 $generated@@25 ($generated@@94 ($generated@@53 $generated@@25 $generated@@104)))))
($generated@@53 $generated@@25 ($generated@@57 ($generated@@53 $generated@@25 ($generated@@58 ($generated@@52 $generated@@102) $generated@@107 $generated@@108)))))))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@52 $generated@@102) ($generated@@53 $generated@@25 $generated@@103) ($generated@@53 $generated@@25 $generated@@104)))
))))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (or ($generated@@54 $generated@@110) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@110 $generated@@27))) ($generated@@24 $generated@@25 ($generated@@51 $generated@@109 $generated@@110) $generated@@28))
 :pattern ( ($generated@@51 $generated@@109 $generated@@110))
))))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@111 $generated@@28) (or ($generated@@68 $generated@@111) ($generated@@70 $generated@@111)))
 :pattern ( ($generated@@70 $generated@@111) ($generated@@24 $generated@@25 $generated@@111 $generated@@28))
 :pattern ( ($generated@@68 $generated@@111) ($generated@@24 $generated@@25 $generated@@111 $generated@@28))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@112 $generated@@27) (or ($generated@@55 $generated@@112) ($generated@@73 $generated@@112)))
 :pattern ( ($generated@@73 $generated@@112) ($generated@@24 $generated@@25 $generated@@112 $generated@@27))
 :pattern ( ($generated@@55 $generated@@112) ($generated@@24 $generated@@25 $generated@@112 $generated@@27))
)))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (or ($generated@@54 $generated@@114) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@114 $generated@@27))) (and (=> (not ($generated@@55 $generated@@114)) (let (($generated@@115 ($generated@@44 $generated@@114)))
(let (($generated@@116 ($generated@@36 $generated@@114)))
 (and (and ($generated@@54 $generated@@116) ($generated@@54 $generated@@115)) ($generated@@56 ($generated@@51 $generated@@113 $generated@@116) ($generated@@51 $generated@@113 $generated@@115)))))) (= ($generated@@51 ($generated@@52 $generated@@113) $generated@@114) (ite ($generated@@55 $generated@@114) $generated@@48 (let (($generated@@117 ($generated@@44 $generated@@114)))
(let (($generated@@118 ($generated@@36 $generated@@114)))
($generated@@57 ($generated@@58 ($generated@@52 $generated@@59) ($generated@@51 $generated@@113 $generated@@118) ($generated@@51 $generated@@113 $generated@@117)))))))))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@113) $generated@@114))
))))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@26 ($generated@@53 $generated@@25 $generated@@119) ($generated@@53 $generated@@25 $generated@@120) ($generated@@53 $generated@@25 $generated@@121)) ($generated@@53 $generated@@25 ($generated@@26 $generated@@119 $generated@@120 $generated@@121)))
 :pattern ( ($generated@@26 ($generated@@53 $generated@@25 $generated@@119) ($generated@@53 $generated@@25 $generated@@120) ($generated@@53 $generated@@25 $generated@@121)))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@32 ($generated@@57 $generated@@122)) $generated@@3)
 :pattern ( ($generated@@57 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@94 ($generated@@57 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@57 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@75 $generated@@125 ($generated@@76 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@76 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (< ($generated@@126 $generated@@127) ($generated@@126 ($generated@@26 $generated@@127 $generated@@128 $generated@@129)))
 :pattern ( ($generated@@26 $generated@@127 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@126 $generated@@131) ($generated@@126 ($generated@@26 $generated@@130 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@26 $generated@@130 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (! (< ($generated@@126 $generated@@135) ($generated@@126 ($generated@@26 $generated@@133 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@26 $generated@@133 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@51 ($generated@@52 $generated@@136) $generated@@137) ($generated@@51 $generated@@136 $generated@@137))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ) (! (< ($generated@@126 $generated@@138) ($generated@@126 ($generated@@57 $generated@@138)))
 :pattern ( ($generated@@57 $generated@@138))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@139 $generated@@150 $generated@@151 $generated@@152 ($generated@@146 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@139 $generated@@157 $generated@@158 $generated@@159 ($generated@@146 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@139 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@139 $generated@@166 $generated@@167 $generated@@168 ($generated@@146 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@139 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))) (= ($generated@@8 $generated@@140) 4)) (= ($generated@@8 $generated@@141) 5)) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@143 $generated@@175 $generated@@176 ($generated@@147 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@179) $generated@@177)
 :weight 0
))) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@184 $generated@@185) (= ($generated@@143 $generated@@180 $generated@@181 ($generated@@147 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@182) $generated@@185) ($generated@@143 $generated@@180 $generated@@181 $generated@@183 $generated@@185)))
 :weight 0
))) (= ($generated@@8 $generated@@144) 6)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ) (= ($generated@@8 ($generated@@145 $generated@@186 $generated@@187)) 7))) (forall (($generated@@188 T@T) ($generated@@189 T@T) ) (! (= ($generated@@148 ($generated@@145 $generated@@188 $generated@@189)) $generated@@188)
 :pattern ( ($generated@@145 $generated@@188 $generated@@189))
))) (forall (($generated@@190 T@T) ($generated@@191 T@T) ) (! (= ($generated@@149 ($generated@@145 $generated@@190 $generated@@191)) $generated@@191)
 :pattern ( ($generated@@145 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Bool) ($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@13 ($generated@@139 $generated@@140 $generated@@141 $generated@@9 ($generated@@142 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))  (=> (and (or (not (= $generated@@196 $generated@@192)) (not true)) ($generated@@13 ($generated@@75 $generated@@9 ($generated@@143 $generated@@141 $generated@@144 ($generated@@143 $generated@@140 ($generated@@145 $generated@@141 $generated@@144) $generated@@193 $generated@@196) $generated@@194)))) $generated@@195))
 :pattern ( ($generated@@139 $generated@@140 $generated@@141 $generated@@9 ($generated@@142 $generated@@192 $generated@@193 $generated@@194 $generated@@195) $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@199 $generated@@201) ($generated@@24 $generated@@25 $generated@@200 $generated@@28)) ($generated@@198 $generated@@25 $generated@@200 $generated@@28 $generated@@201))
 :pattern ( ($generated@@198 $generated@@25 $generated@@200 $generated@@28 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (and ($generated@@199 $generated@@203) ($generated@@24 $generated@@25 $generated@@202 $generated@@27)) ($generated@@198 $generated@@25 $generated@@202 $generated@@27 $generated@@203))
 :pattern ( ($generated@@198 $generated@@25 $generated@@202 $generated@@27 $generated@@203))
)))
(assert (= ($generated@@204 $generated@@28) $generated@@0))
(assert (= ($generated@@205 $generated@@28) $generated@@6))
(assert (= ($generated@@204 $generated@@27) $generated@@1))
(assert (= ($generated@@205 $generated@@27) $generated@@7))
(assert (= $generated@@48 ($generated@@53 $generated@@25 $generated@@48)))
(assert (= $generated@@49 ($generated@@53 $generated@@25 $generated@@49)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> (and ($generated@@199 $generated@@207) (and ($generated@@70 $generated@@206) ($generated@@198 $generated@@25 $generated@@206 $generated@@28 $generated@@207))) ($generated@@198 $generated@@25 ($generated@@94 $generated@@206) $generated@@28 $generated@@207))
 :pattern ( ($generated@@198 $generated@@25 ($generated@@94 $generated@@206) $generated@@28 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> (and ($generated@@199 $generated@@209) (and ($generated@@73 $generated@@208) ($generated@@198 $generated@@25 $generated@@208 $generated@@27 $generated@@209))) ($generated@@198 $generated@@25 ($generated@@36 $generated@@208) $generated@@27 $generated@@209))
 :pattern ( ($generated@@198 $generated@@25 ($generated@@36 $generated@@208) $generated@@27 $generated@@209))
)))
(assert (forall (($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@199 $generated@@211) (and ($generated@@73 $generated@@210) ($generated@@198 $generated@@25 $generated@@210 $generated@@27 $generated@@211))) ($generated@@198 $generated@@25 ($generated@@40 $generated@@210) $generated@@28 $generated@@211))
 :pattern ( ($generated@@198 $generated@@25 ($generated@@40 $generated@@210) $generated@@28 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@199 $generated@@213) (and ($generated@@73 $generated@@212) ($generated@@198 $generated@@25 $generated@@212 $generated@@27 $generated@@213))) ($generated@@198 $generated@@25 ($generated@@44 $generated@@212) $generated@@27 $generated@@213))
 :pattern ( ($generated@@198 $generated@@25 ($generated@@44 $generated@@212) $generated@@27 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ) (! (= ($generated@@57 ($generated@@53 $generated@@25 $generated@@214)) ($generated@@53 $generated@@25 ($generated@@57 $generated@@214)))
 :pattern ( ($generated@@57 ($generated@@53 $generated@@25 $generated@@214)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@T) ) (! (= ($generated@@76 $generated@@216 ($generated@@53 $generated@@216 $generated@@215)) ($generated@@53 $generated@@144 ($generated@@76 $generated@@216 $generated@@215)))
 :pattern ( ($generated@@76 $generated@@216 ($generated@@53 $generated@@216 $generated@@215)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 () T@U)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () T@U)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@232 true))
(let (($generated@@233  (=> (and (= $generated@@217 ($generated@@26 $generated@@218 $generated@@219 $generated@@220)) ($generated@@24 $generated@@25 $generated@@218 $generated@@27)) (=> (and (and ($generated@@24 $generated@@25 $generated@@219 $generated@@28) ($generated@@24 $generated@@25 $generated@@220 $generated@@27)) (and (= $generated@@221 $generated@@220) ($generated@@24 $generated@@25 $generated@@221 $generated@@27))) (=> (and (and (and (= $generated@@222 $generated@@221) (= $generated@@223 $generated@@219)) (and ($generated@@24 $generated@@25 $generated@@223 $generated@@28) (= $generated@@224 $generated@@223))) (and (and (= $generated@@225 $generated@@218) ($generated@@24 $generated@@25 $generated@@225 $generated@@27)) (and (= $generated@@226 $generated@@225) ($generated@@198 $generated@@25 $generated@@226 $generated@@27 $generated@@227)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (< ($generated@@126 $generated@@226) ($generated@@126 $generated@@217))) (=> (< ($generated@@126 $generated@@226) ($generated@@126 $generated@@217)) (=> ($generated@@54 $generated@@226) (=> (and (and (= $generated@@228 ($generated@@51 ($generated@@52 $generated@@59) $generated@@226)) ($generated@@198 $generated@@25 $generated@@228 $generated@@28 $generated@@227)) (and ($generated@@198 $generated@@25 $generated@@222 $generated@@27 $generated@@227) (= (ControlFlow 0 4) (- 0 3)))) (< ($generated@@126 $generated@@222) ($generated@@126 $generated@@217)))))))))))
(let (($generated@@234  (=> (or (not (= $generated@@217 $generated@@49)) (not true)) (and (=> (= (ControlFlow 0 7) 4) $generated@@233) (=> (= (ControlFlow 0 7) 6) $generated@@232)))))
(let (($generated@@235 true))
(let (($generated@@236 true))
(let (($generated@@237  (=> (= $generated@@229 ($generated@@142 $generated@@230 $generated@@227 $generated false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@236) (=> (= (ControlFlow 0 8) 2) $generated@@235)) (=> (= (ControlFlow 0 8) 7) $generated@@234)))))
(let (($generated@@238  (=> (and (and (and ($generated@@199 $generated@@227) ($generated@@231 $generated@@227)) ($generated@@24 $generated@@25 $generated@@217 $generated@@27)) (and (= 2 $generated@@50) (= (ControlFlow 0 9) 8))) $generated@@237)))
$generated@@238))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
