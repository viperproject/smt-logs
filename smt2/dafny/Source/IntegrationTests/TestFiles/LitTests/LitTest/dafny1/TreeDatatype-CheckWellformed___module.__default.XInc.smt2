(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 (Int T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@105 (T@U) Int)
(declare-fun $generated@@116 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@117 () T@T)
(declare-fun $generated@@118 () T@T)
(declare-fun $generated@@119 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@120 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@T T@T) T@T)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@125 (T@T) T@T)
(declare-fun $generated@@126 (T@T) T@T)
(declare-fun $generated@@175 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@176 (T@U) Bool)
(declare-fun $generated@@183 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@9 $generated@@29) 3))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> (or ($generated@@30 ($generated@@28 $generated@@29 $generated@@41)) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@41 $generated@@32))) (and (and ($generated@@33 ($generated@@28 $generated@@29 $generated@@41)) (let (($generated@@42 ($generated@@28 $generated@@29 ($generated@@34 ($generated@@28 $generated@@29 $generated@@41)))))
 (and ($generated@@33 ($generated@@28 $generated@@29 $generated@@41)) ($generated@@35 $generated@@42)))) (= ($generated@@26 ($generated@@27 $generated@@40) ($generated@@28 $generated@@29 $generated@@41)) (let (($generated@@43 ($generated@@28 $generated@@29 ($generated@@34 ($generated@@28 $generated@@29 $generated@@41)))))
(let (($generated@@44 ($generated@@36 ($generated@@37 ($generated@@28 $generated@@29 $generated@@41)))))
($generated@@28 $generated@@29 ($generated@@38 ($generated@@36 (+ $generated@@44 1)) ($generated@@28 $generated@@29 ($generated@@39 ($generated@@27 $generated@@40) $generated@@43)))))))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@27 $generated@@40) ($generated@@28 $generated@@29 $generated@@41)))
))))
(assert (= ($generated@@45 $generated) $generated@@0))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ) (! (= ($generated@@31 $generated@@29 ($generated@@46 $generated@@48 $generated@@49) $generated@@47)  (and ($generated@@31 $generated@@29 $generated@@48 $generated@@32) ($generated@@31 $generated@@29 $generated@@49 $generated@@47)))
 :pattern ( ($generated@@31 $generated@@29 ($generated@@46 $generated@@48 $generated@@49) $generated@@47))
)))
(assert (= ($generated@@50 $generated@@51) $generated@@4))
(assert (forall (($generated@@52 T@U) ) (!  (=> ($generated@@31 $generated@@29 $generated@@52 $generated@@32) ($generated@@33 $generated@@52))
 :pattern ( ($generated@@33 $generated@@52) ($generated@@31 $generated@@29 $generated@@52 $generated@@32))
)))
(assert ($generated@@31 $generated@@29 $generated@@51 $generated@@47))
(assert (forall (($generated@@53 Int) ) (! (= ($generated@@36 $generated@@53) $generated@@53)
 :pattern ( ($generated@@36 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@28 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@28 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ) (! (= ($generated@@56 $generated@@57) (= ($generated@@50 $generated@@57) $generated@@4))
 :pattern ( ($generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ) (! (= ($generated@@58 $generated@@59) (= ($generated@@50 $generated@@59) $generated@@5))
 :pattern ( ($generated@@58 $generated@@59))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@33 $generated@@60) (= ($generated@@50 $generated@@60) $generated@@6))
 :pattern ( ($generated@@33 $generated@@60))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@62 $generated@@64 ($generated@@61 $generated@@64 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@61 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@65 T@U) ) (!  (=> ($generated@@58 $generated@@65) (exists (($generated@@66 T@U) ($generated@@67 T@U) ) (= $generated@@65 ($generated@@46 $generated@@66 $generated@@67))))
 :pattern ( ($generated@@58 $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@33 $generated@@68) (exists (($generated@@69 Int) ($generated@@70 T@U) ) (= $generated@@68 ($generated@@38 $generated@@69 $generated@@70))))
 :pattern ( ($generated@@33 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@56 $generated@@71) (= $generated@@71 $generated@@51))
 :pattern ( ($generated@@56 $generated@@71))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> (or ($generated@@35 $generated@@75) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@75 $generated@@47))) (and (=> (not ($generated@@56 $generated@@75)) (let (($generated@@76 ($generated@@72 $generated@@75)))
(let (($generated@@77 ($generated@@73 $generated@@75)))
 (and ($generated@@30 $generated@@77) ($generated@@35 $generated@@76))))) (= ($generated@@39 ($generated@@27 $generated@@74) $generated@@75) (ite ($generated@@56 $generated@@75) $generated@@75 (let (($generated@@78 ($generated@@72 $generated@@75)))
(let (($generated@@79 ($generated@@73 $generated@@75)))
($generated@@46 ($generated@@26 $generated@@74 $generated@@79) ($generated@@39 $generated@@74 $generated@@78))))))))
 :pattern ( ($generated@@39 ($generated@@27 $generated@@74) $generated@@75))
))))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@30 $generated@@81) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@81 $generated@@32))) ($generated@@31 $generated@@29 ($generated@@26 $generated@@80 $generated@@81) $generated@@32))
 :pattern ( ($generated@@26 $generated@@80 $generated@@81))
))))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (or ($generated@@35 $generated@@83) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@83 $generated@@47))) ($generated@@31 $generated@@29 ($generated@@39 $generated@@82 $generated@@83) $generated@@47))
 :pattern ( ($generated@@39 $generated@@82 $generated@@83))
))))
(assert (forall (($generated@@84 T@U) ) (!  (=> ($generated@@31 $generated@@29 $generated@@84 $generated@@47) (or ($generated@@56 $generated@@84) ($generated@@58 $generated@@84)))
 :pattern ( ($generated@@58 $generated@@84) ($generated@@31 $generated@@29 $generated@@84 $generated@@47))
 :pattern ( ($generated@@56 $generated@@84) ($generated@@31 $generated@@29 $generated@@84 $generated@@47))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@35 ($generated@@28 $generated@@29 $generated@@86)) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@86 $generated@@47))) (and (=> (not ($generated@@14 ($generated@@28 $generated@@10 ($generated@@13 ($generated@@56 ($generated@@28 $generated@@29 $generated@@86)))))) (let (($generated@@87 ($generated@@28 $generated@@29 ($generated@@72 ($generated@@28 $generated@@29 $generated@@86)))))
(let (($generated@@88 ($generated@@28 $generated@@29 ($generated@@73 ($generated@@28 $generated@@29 $generated@@86)))))
 (and ($generated@@30 $generated@@88) ($generated@@35 $generated@@87))))) (= ($generated@@39 ($generated@@27 $generated@@85) ($generated@@28 $generated@@29 $generated@@86)) (ite ($generated@@56 ($generated@@28 $generated@@29 $generated@@86)) $generated@@86 (let (($generated@@89 ($generated@@28 $generated@@29 ($generated@@72 ($generated@@28 $generated@@29 $generated@@86)))))
(let (($generated@@90 ($generated@@28 $generated@@29 ($generated@@73 ($generated@@28 $generated@@29 $generated@@86)))))
($generated@@28 $generated@@29 ($generated@@46 ($generated@@28 $generated@@29 ($generated@@26 ($generated@@27 $generated@@85) $generated@@90)) ($generated@@28 $generated@@29 ($generated@@39 ($generated@@27 $generated@@85) $generated@@89))))))))))
 :weight 3
 :pattern ( ($generated@@39 ($generated@@27 $generated@@85) ($generated@@28 $generated@@29 $generated@@86)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@50 ($generated@@46 $generated@@91 $generated@@92)) $generated@@5)
 :pattern ( ($generated@@46 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@73 ($generated@@46 $generated@@93 $generated@@94)) $generated@@93)
 :pattern ( ($generated@@46 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@72 ($generated@@46 $generated@@95 $generated@@96)) $generated@@96)
 :pattern ( ($generated@@46 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@97 Int) ($generated@@98 T@U) ) (! (= ($generated@@50 ($generated@@38 $generated@@97 $generated@@98)) $generated@@6)
 :pattern ( ($generated@@38 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@99 Int) ($generated@@100 T@U) ) (! (= ($generated@@37 ($generated@@38 $generated@@99 $generated@@100)) $generated@@99)
 :pattern ( ($generated@@38 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@101 Int) ($generated@@102 T@U) ) (! (= ($generated@@34 ($generated@@38 $generated@@101 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@38 $generated@@101 $generated@@102))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@61 $generated@@104 ($generated@@62 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@62 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (< ($generated@@105 $generated@@106) ($generated@@105 ($generated@@46 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@46 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (! (< ($generated@@105 $generated@@109) ($generated@@105 ($generated@@46 $generated@@108 $generated@@109)))
 :pattern ( ($generated@@46 $generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 Int) ($generated@@111 T@U) ) (! (< ($generated@@105 $generated@@111) ($generated@@105 ($generated@@38 $generated@@110 $generated@@111)))
 :pattern ( ($generated@@38 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@112) $generated@@113) ($generated@@26 $generated@@112 $generated@@113))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@39 ($generated@@27 $generated@@114) $generated@@115) ($generated@@39 $generated@@114 $generated@@115))
 :pattern ( ($generated@@39 ($generated@@27 $generated@@114) $generated@@115))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@116 $generated@@127 $generated@@128 $generated@@129 ($generated@@123 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@132 $generated@@133) $generated@@130)
 :weight 0
)) (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (!  (or (= $generated@@139 $generated@@141) (= ($generated@@116 $generated@@134 $generated@@135 $generated@@136 ($generated@@123 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@141 $generated@@142) ($generated@@116 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@141 $generated@@142)))
 :weight 0
)) (forall (($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (or (= $generated@@149 $generated@@151) (= ($generated@@116 $generated@@143 $generated@@144 $generated@@145 ($generated@@123 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@149 $generated@@146) $generated@@150 $generated@@151) ($generated@@116 $generated@@143 $generated@@144 $generated@@145 $generated@@147 $generated@@150 $generated@@151)))
 :weight 0
)))) (= ($generated@@9 $generated@@117) 4)) (= ($generated@@9 $generated@@118) 5)) (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@120 $generated@@152 $generated@@153 ($generated@@124 $generated@@152 $generated@@153 $generated@@155 $generated@@156 $generated@@154) $generated@@156) $generated@@154)
 :weight 0
))) (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (or (= $generated@@161 $generated@@162) (= ($generated@@120 $generated@@157 $generated@@158 ($generated@@124 $generated@@157 $generated@@158 $generated@@160 $generated@@161 $generated@@159) $generated@@162) ($generated@@120 $generated@@157 $generated@@158 $generated@@160 $generated@@162)))
 :weight 0
))) (= ($generated@@9 $generated@@121) 6)) (forall (($generated@@163 T@T) ($generated@@164 T@T) ) (= ($generated@@9 ($generated@@122 $generated@@163 $generated@@164)) 7))) (forall (($generated@@165 T@T) ($generated@@166 T@T) ) (! (= ($generated@@125 ($generated@@122 $generated@@165 $generated@@166)) $generated@@165)
 :pattern ( ($generated@@122 $generated@@165 $generated@@166))
))) (forall (($generated@@167 T@T) ($generated@@168 T@T) ) (! (= ($generated@@126 ($generated@@122 $generated@@167 $generated@@168)) $generated@@168)
 :pattern ( ($generated@@122 $generated@@167 $generated@@168))
))))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 Bool) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@14 ($generated@@116 $generated@@117 $generated@@118 $generated@@10 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))  (=> (and (or (not (= $generated@@173 $generated@@169)) (not true)) ($generated@@14 ($generated@@61 $generated@@10 ($generated@@120 $generated@@118 $generated@@121 ($generated@@120 $generated@@117 ($generated@@122 $generated@@118 $generated@@121) $generated@@170 $generated@@173) $generated@@171)))) $generated@@172))
 :pattern ( ($generated@@116 $generated@@117 $generated@@118 $generated@@10 ($generated@@119 $generated@@169 $generated@@170 $generated@@171 $generated@@172) $generated@@173 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ) (!  (=> (and ($generated@@176 $generated@@178) (and ($generated@@33 $generated@@177) ($generated@@175 $generated@@29 $generated@@177 $generated@@32 $generated@@178))) ($generated@@175 $generated@@11 ($generated@@15 ($generated@@37 $generated@@177)) $generated $generated@@178))
 :pattern ( ($generated@@175 $generated@@11 ($generated@@15 ($generated@@37 $generated@@177)) $generated $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and ($generated@@176 $generated@@180) ($generated@@31 $generated@@29 $generated@@179 $generated@@47)) ($generated@@175 $generated@@29 $generated@@179 $generated@@47 $generated@@180))
 :pattern ( ($generated@@175 $generated@@29 $generated@@179 $generated@@47 $generated@@180))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> (and ($generated@@176 $generated@@182) ($generated@@31 $generated@@29 $generated@@181 $generated@@32)) ($generated@@175 $generated@@29 $generated@@181 $generated@@32 $generated@@182))
 :pattern ( ($generated@@175 $generated@@29 $generated@@181 $generated@@32 $generated@@182))
)))
(assert (= ($generated@@45 $generated@@32) $generated@@2))
(assert (= ($generated@@183 $generated@@32) $generated@@7))
(assert (= ($generated@@45 $generated@@47) $generated@@3))
(assert (= ($generated@@183 $generated@@47) $generated@@8))
(assert (= $generated@@51 ($generated@@28 $generated@@29 $generated@@51)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@176 $generated@@185) (and ($generated@@58 $generated@@184) ($generated@@175 $generated@@29 $generated@@184 $generated@@47 $generated@@185))) ($generated@@175 $generated@@29 ($generated@@73 $generated@@184) $generated@@32 $generated@@185))
 :pattern ( ($generated@@175 $generated@@29 ($generated@@73 $generated@@184) $generated@@32 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and ($generated@@176 $generated@@187) (and ($generated@@58 $generated@@186) ($generated@@175 $generated@@29 $generated@@186 $generated@@47 $generated@@187))) ($generated@@175 $generated@@29 ($generated@@72 $generated@@186) $generated@@47 $generated@@187))
 :pattern ( ($generated@@175 $generated@@29 ($generated@@72 $generated@@186) $generated@@47 $generated@@187))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> (and ($generated@@176 $generated@@189) (and ($generated@@33 $generated@@188) ($generated@@175 $generated@@29 $generated@@188 $generated@@32 $generated@@189))) ($generated@@175 $generated@@29 ($generated@@34 $generated@@188) $generated@@47 $generated@@189))
 :pattern ( ($generated@@175 $generated@@29 ($generated@@34 $generated@@188) $generated@@47 $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@46 ($generated@@28 $generated@@29 $generated@@190) ($generated@@28 $generated@@29 $generated@@191)) ($generated@@28 $generated@@29 ($generated@@46 $generated@@190 $generated@@191)))
 :pattern ( ($generated@@46 ($generated@@28 $generated@@29 $generated@@190) ($generated@@28 $generated@@29 $generated@@191)))
)))
(assert (forall (($generated@@192 Int) ($generated@@193 T@U) ) (! (= ($generated@@38 ($generated@@36 $generated@@192) ($generated@@28 $generated@@29 $generated@@193)) ($generated@@28 $generated@@29 ($generated@@38 $generated@@192 $generated@@193)))
 :pattern ( ($generated@@38 ($generated@@36 $generated@@192) ($generated@@28 $generated@@29 $generated@@193)))
)))
(assert (forall (($generated@@194 Int) ) (! (= ($generated@@62 $generated@@11 ($generated@@15 ($generated@@36 $generated@@194))) ($generated@@28 $generated@@121 ($generated@@62 $generated@@11 ($generated@@15 $generated@@194))))
 :pattern ( ($generated@@62 $generated@@11 ($generated@@15 ($generated@@36 $generated@@194))))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@T) ) (! (= ($generated@@62 $generated@@196 ($generated@@28 $generated@@196 $generated@@195)) ($generated@@28 $generated@@121 ($generated@@62 $generated@@196 $generated@@195)))
 :pattern ( ($generated@@62 $generated@@196 ($generated@@28 $generated@@196 $generated@@195)))
)))
(assert (forall (($generated@@197 Int) ($generated@@198 T@U) ) (! (= ($generated@@31 $generated@@29 ($generated@@38 $generated@@197 $generated@@198) $generated@@32)  (and ($generated@@31 $generated@@11 ($generated@@15 $generated@@197) $generated) ($generated@@31 $generated@@29 $generated@@198 $generated@@47)))
 :pattern ( ($generated@@31 $generated@@29 ($generated@@38 $generated@@197 $generated@@198) $generated@@32))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (! ($generated@@175 $generated@@11 $generated@@200 $generated $generated@@199)
 :pattern ( ($generated@@175 $generated@@11 $generated@@200 $generated $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@31 $generated@@11 $generated@@201 $generated)
 :pattern ( ($generated@@31 $generated@@11 $generated@@201 $generated))
)))
(assert  (=> (<= 1 $generated@@25) (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> (or ($generated@@30 $generated@@203) (and (< 1 $generated@@25) ($generated@@31 $generated@@29 $generated@@203 $generated@@32))) (and (and ($generated@@33 $generated@@203) (let (($generated@@204 ($generated@@34 $generated@@203)))
 (and ($generated@@33 $generated@@203) ($generated@@35 $generated@@204)))) (= ($generated@@26 ($generated@@27 $generated@@202) $generated@@203) (let (($generated@@205 ($generated@@34 $generated@@203)))
(let (($generated@@206 ($generated@@37 $generated@@203)))
($generated@@38 (+ $generated@@206 1) ($generated@@39 $generated@@202 $generated@@205)))))))
 :pattern ( ($generated@@26 ($generated@@27 $generated@@202) $generated@@203))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@218 true))
(let (($generated@@219  (=> (and (= $generated@@207 ($generated@@38 $generated@@208 $generated@@209)) ($generated@@31 $generated@@29 $generated@@209 $generated@@47)) (=> (and (and (and (= $generated@@210 $generated@@209) ($generated@@31 $generated@@29 $generated@@210 $generated@@47)) (and (= $generated@@211 $generated@@210) (= $generated@@212 $generated@@208))) (and (and ($generated@@31 $generated@@11 ($generated@@15 $generated@@212) $generated) (= $generated@@213 $generated@@212)) (and ($generated@@175 $generated@@29 $generated@@211 $generated@@47 $generated@@214) (= (ControlFlow 0 3) (- 0 2))))) (< ($generated@@105 $generated@@211) ($generated@@105 $generated@@207))))))
(let (($generated@@220 true))
(let (($generated@@221  (=> (= $generated@@215 ($generated@@119 $generated@@216 $generated@@214 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 5) 1) $generated@@220) (=> (= (ControlFlow 0 5) 3) $generated@@219)) (=> (= (ControlFlow 0 5) 4) $generated@@218)))))
(let (($generated@@222  (=> (and (and (and ($generated@@176 $generated@@214) ($generated@@217 $generated@@214)) ($generated@@31 $generated@@29 $generated@@207 $generated@@32)) (and (= 1 $generated@@25) (= (ControlFlow 0 6) 5))) $generated@@221)))
$generated@@222))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
