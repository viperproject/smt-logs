(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@U) Bool)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U) T@U)
(declare-fun $generated@@59 () Int)
(declare-fun $generated@@60 (T@U T@U T@U) T@U)
(declare-fun $generated@@61 (T@U) T@U)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@U) T@U)
(declare-fun $generated@@75 (T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@88 (T@U) Bool)
(declare-fun $generated@@121 (T@U) Int)
(declare-fun $generated@@123 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 () T@T)
(declare-fun $generated@@126 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@128 () T@T)
(declare-fun $generated@@129 (T@T T@T) T@T)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@T) T@T)
(declare-fun $generated@@133 (T@T) T@T)
(declare-fun $generated@@182 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@189 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@25) $generated@@2))
(assert (= ($generated@@24 $generated@@26) $generated@@3))
(assert (= ($generated@@24 $generated@@27) $generated@@4))
(assert (= ($generated@@8 $generated@@29) 3))
(assert ($generated@@28 $generated@@29 $generated@@25 $generated@@30))
(assert ($generated@@28 $generated@@29 $generated@@26 $generated@@30))
(assert ($generated@@28 $generated@@29 $generated@@27 $generated@@31))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@32 $generated@@33 $generated@@34) (= $generated@@33 $generated@@34))
 :pattern ( ($generated@@32 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@37) (= $generated@@36 $generated@@37))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@41 $generated@@42) (= ($generated@@24 $generated@@42) $generated@@2))
 :pattern ( ($generated@@41 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@43 $generated@@44) (= ($generated@@24 $generated@@44) $generated@@3))
 :pattern ( ($generated@@43 $generated@@44))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@45 $generated@@46) (= ($generated@@24 $generated@@46) $generated@@4))
 :pattern ( ($generated@@45 $generated@@46))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@24 $generated@@48) $generated@@5))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@T) ) (! (= ($generated@@50 $generated@@52 ($generated@@49 $generated@@52 $generated@@51)) $generated@@51)
 :pattern ( ($generated@@49 $generated@@52 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ) (!  (=> ($generated@@41 $generated@@53) (= $generated@@53 $generated@@25))
 :pattern ( ($generated@@41 $generated@@53))
)))
(assert (forall (($generated@@54 T@U) ) (!  (=> ($generated@@43 $generated@@54) (= $generated@@54 $generated@@26))
 :pattern ( ($generated@@43 $generated@@54))
)))
(assert (forall (($generated@@55 T@U) ) (!  (=> ($generated@@45 $generated@@55) (= $generated@@55 $generated@@27))
 :pattern ( ($generated@@45 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ) (!  (=> ($generated@@47 $generated@@57) (exists (($generated@@58 T@U) ) (= $generated@@57 ($generated@@56 $generated@@58))))
 :pattern ( ($generated@@47 $generated@@57))
)))
(assert  (=> (<= 1 $generated@@59) (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (or ($generated@@62 ($generated@@38 $generated@@29 $generated@@65) ($generated@@38 $generated@@29 $generated@@66)) (and (< 1 $generated@@59) (and ($generated@@28 $generated@@29 $generated@@65 $generated@@31) ($generated@@28 $generated@@29 $generated@@66 $generated@@31)))) (and (=> (not ($generated@@13 ($generated@@38 $generated@@9 ($generated@@12 ($generated@@45 ($generated@@38 $generated@@29 $generated@@65)))))) (let (($generated@@67 ($generated@@38 $generated@@29 ($generated@@63 ($generated@@38 $generated@@29 $generated@@65)))))
($generated@@62 $generated@@67 ($generated@@38 $generated@@29 $generated@@66)))) (= ($generated@@60 ($generated@@61 $generated@@64) ($generated@@38 $generated@@29 $generated@@65) ($generated@@38 $generated@@29 $generated@@66)) (ite ($generated@@45 ($generated@@38 $generated@@29 $generated@@65)) $generated@@66 (let (($generated@@68 ($generated@@38 $generated@@29 ($generated@@63 ($generated@@38 $generated@@29 $generated@@65)))))
($generated@@38 $generated@@29 ($generated@@56 ($generated@@38 $generated@@29 ($generated@@60 ($generated@@61 $generated@@64) $generated@@68 ($generated@@38 $generated@@29 $generated@@66))))))))))
 :weight 3
 :pattern ( ($generated@@60 ($generated@@61 $generated@@64) ($generated@@38 $generated@@29 $generated@@65) ($generated@@38 $generated@@29 $generated@@66)))
))))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@56 $generated@@69) $generated@@31) ($generated@@28 $generated@@29 $generated@@69 $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@56 $generated@@69) $generated@@31))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (and ($generated@@47 $generated@@70) ($generated@@47 $generated@@71)) (= ($generated@@35 $generated@@70 $generated@@71) ($generated@@35 ($generated@@63 $generated@@70) ($generated@@63 $generated@@71))))
 :pattern ( ($generated@@35 $generated@@70 $generated@@71) ($generated@@47 $generated@@70))
 :pattern ( ($generated@@35 $generated@@70 $generated@@71) ($generated@@47 $generated@@71))
)))
(assert  (=> (<= 1 $generated@@59) (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@62 $generated@@73 $generated@@74) (and (< 1 $generated@@59) (and ($generated@@28 $generated@@29 $generated@@73 $generated@@31) ($generated@@28 $generated@@29 $generated@@74 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@60 $generated@@72 $generated@@73 $generated@@74) $generated@@31))
 :pattern ( ($generated@@60 $generated@@72 $generated@@73 $generated@@74))
))))
(assert  (=> (<= 1 $generated@@59) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@76 $generated@@78 $generated@@79) (and (< 1 $generated@@59) (and ($generated@@28 $generated@@29 $generated@@78 $generated@@31) ($generated@@28 $generated@@29 $generated@@79 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@75 $generated@@77 $generated@@78 $generated@@79) $generated@@30))
 :pattern ( ($generated@@75 $generated@@77 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@60 ($generated@@61 $generated@@80) $generated@@81 $generated@@82) ($generated@@60 $generated@@80 $generated@@81 $generated@@82))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@80) $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@75 ($generated@@61 $generated@@83) $generated@@84 $generated@@85) ($generated@@75 $generated@@83 $generated@@84 $generated@@85))
 :pattern ( ($generated@@75 ($generated@@61 $generated@@83) $generated@@84 $generated@@85))
)))
(assert (forall (($generated@@87 T@U) ) (!  (=> ($generated@@86 $generated@@87) (or ($generated@@41 $generated@@87) ($generated@@43 $generated@@87)))
 :pattern ( ($generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (!  (=> ($generated@@88 $generated@@89) (or ($generated@@45 $generated@@89) ($generated@@47 $generated@@89)))
 :pattern ( ($generated@@88 $generated@@89))
)))
(assert  (=> (<= 1 $generated@@59) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (or ($generated@@76 ($generated@@38 $generated@@29 $generated@@91) ($generated@@38 $generated@@29 $generated@@92)) (and (< 1 $generated@@59) (and ($generated@@28 $generated@@29 $generated@@91 $generated@@31) ($generated@@28 $generated@@29 $generated@@92 $generated@@31)))) (and (=> (not ($generated@@13 ($generated@@38 $generated@@9 ($generated@@12 ($generated@@45 ($generated@@38 $generated@@29 $generated@@92)))))) (let (($generated@@93 ($generated@@38 $generated@@29 ($generated@@63 ($generated@@38 $generated@@29 $generated@@92)))))
 (=> (not ($generated@@13 ($generated@@38 $generated@@9 ($generated@@12 ($generated@@45 ($generated@@38 $generated@@29 $generated@@91)))))) (let (($generated@@94 ($generated@@38 $generated@@29 ($generated@@63 ($generated@@38 $generated@@29 $generated@@91)))))
($generated@@76 $generated@@94 $generated@@93))))) (= ($generated@@75 ($generated@@61 $generated@@90) ($generated@@38 $generated@@29 $generated@@91) ($generated@@38 $generated@@29 $generated@@92)) (ite ($generated@@45 ($generated@@38 $generated@@29 $generated@@92)) $generated@@25 (let (($generated@@95 ($generated@@38 $generated@@29 ($generated@@63 ($generated@@38 $generated@@29 $generated@@92)))))
(ite ($generated@@45 ($generated@@38 $generated@@29 $generated@@91)) $generated@@26 (let (($generated@@96 ($generated@@38 $generated@@29 ($generated@@63 ($generated@@38 $generated@@29 $generated@@91)))))
($generated@@38 $generated@@29 ($generated@@75 ($generated@@61 $generated@@90) $generated@@96 $generated@@95)))))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@61 $generated@@90) ($generated@@38 $generated@@29 $generated@@91) ($generated@@38 $generated@@29 $generated@@92)))
))))
(assert  (=> (<= 1 $generated@@59) (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> (or ($generated@@76 $generated@@98 $generated@@99) (and (< 1 $generated@@59) (and ($generated@@28 $generated@@29 $generated@@98 $generated@@31) ($generated@@28 $generated@@29 $generated@@99 $generated@@31)))) (and (=> (not ($generated@@45 $generated@@99)) (let (($generated@@100 ($generated@@63 $generated@@99)))
 (=> (not ($generated@@45 $generated@@98)) (let (($generated@@101 ($generated@@63 $generated@@98)))
($generated@@76 $generated@@101 $generated@@100))))) (= ($generated@@75 ($generated@@61 $generated@@97) $generated@@98 $generated@@99) (ite ($generated@@45 $generated@@99) $generated@@25 (let (($generated@@102 ($generated@@63 $generated@@99)))
(ite ($generated@@45 $generated@@98) $generated@@26 (let (($generated@@103 ($generated@@63 $generated@@98)))
($generated@@75 $generated@@97 $generated@@103 $generated@@102))))))))
 :pattern ( ($generated@@75 ($generated@@61 $generated@@97) $generated@@98 $generated@@99))
))))
(assert (forall (($generated@@104 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@104 $generated@@30) (or ($generated@@41 $generated@@104) ($generated@@43 $generated@@104)))
 :pattern ( ($generated@@43 $generated@@104) ($generated@@28 $generated@@29 $generated@@104 $generated@@30))
 :pattern ( ($generated@@41 $generated@@104) ($generated@@28 $generated@@29 $generated@@104 $generated@@30))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@105 $generated@@31) (or ($generated@@45 $generated@@105) ($generated@@47 $generated@@105)))
 :pattern ( ($generated@@47 $generated@@105) ($generated@@28 $generated@@29 $generated@@105 $generated@@31))
 :pattern ( ($generated@@45 $generated@@105) ($generated@@28 $generated@@29 $generated@@105 $generated@@31))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (!  (=> (and ($generated@@41 $generated@@106) ($generated@@41 $generated@@107)) ($generated@@32 $generated@@106 $generated@@107))
 :pattern ( ($generated@@32 $generated@@106 $generated@@107) ($generated@@41 $generated@@106))
 :pattern ( ($generated@@32 $generated@@106 $generated@@107) ($generated@@41 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@U) ) (!  (=> (and ($generated@@43 $generated@@108) ($generated@@43 $generated@@109)) ($generated@@32 $generated@@108 $generated@@109))
 :pattern ( ($generated@@32 $generated@@108 $generated@@109) ($generated@@43 $generated@@108))
 :pattern ( ($generated@@32 $generated@@108 $generated@@109) ($generated@@43 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and ($generated@@45 $generated@@110) ($generated@@45 $generated@@111)) ($generated@@35 $generated@@110 $generated@@111))
 :pattern ( ($generated@@35 $generated@@110 $generated@@111) ($generated@@45 $generated@@110))
 :pattern ( ($generated@@35 $generated@@110 $generated@@111) ($generated@@45 $generated@@111))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@24 ($generated@@56 $generated@@112)) $generated@@5)
 :pattern ( ($generated@@56 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ) (! (= ($generated@@63 ($generated@@56 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@56 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@49 $generated@@115 ($generated@@50 $generated@@115 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@50 $generated@@115 $generated@@114))
)))
(assert  (=> (<= 1 $generated@@59) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@62 $generated@@117 $generated@@118) (and (< 1 $generated@@59) (and ($generated@@28 $generated@@29 $generated@@117 $generated@@31) ($generated@@28 $generated@@29 $generated@@118 $generated@@31)))) (and (=> (not ($generated@@45 $generated@@117)) (let (($generated@@119 ($generated@@63 $generated@@117)))
($generated@@62 $generated@@119 $generated@@118))) (= ($generated@@60 ($generated@@61 $generated@@116) $generated@@117 $generated@@118) (ite ($generated@@45 $generated@@117) $generated@@118 (let (($generated@@120 ($generated@@63 $generated@@117)))
($generated@@56 ($generated@@60 $generated@@116 $generated@@120 $generated@@118)))))))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@116) $generated@@117 $generated@@118))
))))
(assert (forall (($generated@@122 T@U) ) (! (< ($generated@@121 $generated@@122) ($generated@@121 ($generated@@56 $generated@@122)))
 :pattern ( ($generated@@56 $generated@@122))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@123 $generated@@134 $generated@@135 $generated@@136 ($generated@@130 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@123 $generated@@141 $generated@@142 $generated@@143 ($generated@@130 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@123 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@123 $generated@@150 $generated@@151 $generated@@152 ($generated@@130 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@123 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))) (= ($generated@@8 $generated@@124) 4)) (= ($generated@@8 $generated@@125) 5)) (forall (($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@127 $generated@@159 $generated@@160 ($generated@@131 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@161) $generated@@163) $generated@@161)
 :weight 0
))) (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@168 $generated@@169) (= ($generated@@127 $generated@@164 $generated@@165 ($generated@@131 $generated@@164 $generated@@165 $generated@@167 $generated@@168 $generated@@166) $generated@@169) ($generated@@127 $generated@@164 $generated@@165 $generated@@167 $generated@@169)))
 :weight 0
))) (= ($generated@@8 $generated@@128) 6)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (= ($generated@@8 ($generated@@129 $generated@@170 $generated@@171)) 7))) (forall (($generated@@172 T@T) ($generated@@173 T@T) ) (! (= ($generated@@132 ($generated@@129 $generated@@172 $generated@@173)) $generated@@172)
 :pattern ( ($generated@@129 $generated@@172 $generated@@173))
))) (forall (($generated@@174 T@T) ($generated@@175 T@T) ) (! (= ($generated@@133 ($generated@@129 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@129 $generated@@174 $generated@@175))
))))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 Bool) ($generated@@180 T@U) ($generated@@181 T@U) ) (! (= ($generated@@13 ($generated@@123 $generated@@124 $generated@@125 $generated@@9 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))  (=> (and (or (not (= $generated@@180 $generated@@176)) (not true)) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@127 $generated@@125 $generated@@128 ($generated@@127 $generated@@124 ($generated@@129 $generated@@125 $generated@@128) $generated@@177 $generated@@180) $generated@@178)))) $generated@@179))
 :pattern ( ($generated@@123 $generated@@124 $generated@@125 $generated@@9 ($generated@@126 $generated@@176 $generated@@177 $generated@@178 $generated@@179) $generated@@180 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and ($generated@@183 $generated@@185) ($generated@@28 $generated@@29 $generated@@184 $generated@@30)) ($generated@@182 $generated@@29 $generated@@184 $generated@@30 $generated@@185))
 :pattern ( ($generated@@182 $generated@@29 $generated@@184 $generated@@30 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and ($generated@@183 $generated@@187) ($generated@@28 $generated@@29 $generated@@186 $generated@@31)) ($generated@@182 $generated@@29 $generated@@186 $generated@@31 $generated@@187))
 :pattern ( ($generated@@182 $generated@@29 $generated@@186 $generated@@31 $generated@@187))
)))
(assert (= ($generated@@188 $generated@@30) $generated@@0))
(assert (= ($generated@@189 $generated@@30) $generated@@6))
(assert (= ($generated@@188 $generated@@31) $generated@@1))
(assert (= ($generated@@189 $generated@@31) $generated@@7))
(assert (= $generated@@25 ($generated@@38 $generated@@29 $generated@@25)))
(assert (= $generated@@26 ($generated@@38 $generated@@29 $generated@@26)))
(assert (= $generated@@27 ($generated@@38 $generated@@29 $generated@@27)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (and ($generated@@183 $generated@@191) (and ($generated@@47 $generated@@190) ($generated@@182 $generated@@29 $generated@@190 $generated@@31 $generated@@191))) ($generated@@182 $generated@@29 ($generated@@63 $generated@@190) $generated@@31 $generated@@191))
 :pattern ( ($generated@@182 $generated@@29 ($generated@@63 $generated@@190) $generated@@31 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@56 ($generated@@38 $generated@@29 $generated@@192)) ($generated@@38 $generated@@29 ($generated@@56 $generated@@192)))
 :pattern ( ($generated@@56 ($generated@@38 $generated@@29 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@50 $generated@@194 ($generated@@38 $generated@@194 $generated@@193)) ($generated@@38 $generated@@128 ($generated@@50 $generated@@194 $generated@@193)))
 :pattern ( ($generated@@50 $generated@@194 ($generated@@38 $generated@@194 $generated@@193)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 16) (let (($generated@@208  (=> (= (ControlFlow 0 2) (- 0 1)) (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@209 $generated@@31) ($generated@@28 $generated@@29 $generated@@210 $generated@@31)) ($generated@@32 ($generated@@75 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@209 ($generated@@56 ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@210 $generated@@209))) $generated@@26))
 :pattern ( ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@210 $generated@@209))
)))))
(let (($generated@@211  (=> (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@212 $generated@@31) ($generated@@28 $generated@@29 $generated@@213 $generated@@31)) (and ($generated@@88 ($generated@@60 ($generated@@61 $generated@@195) $generated@@212 ($generated@@56 $generated@@213))) (and ($generated@@62 $generated@@212 ($generated@@56 $generated@@213)) ($generated@@62 $generated@@212 $generated@@213))))
 :pattern ( ($generated@@56 ($generated@@60 ($generated@@61 $generated@@195) $generated@@212 $generated@@213)))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@195) $generated@@212 ($generated@@56 $generated@@213)))
)) (and (=> (= (ControlFlow 0 11) (- 0 12)) (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@214 $generated@@31) ($generated@@28 $generated@@29 $generated@@215 $generated@@31)) ($generated@@35 ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@214 ($generated@@56 $generated@@215)) ($generated@@56 ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@214 $generated@@215))))
 :pattern ( ($generated@@56 ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@214 $generated@@215)))
 :pattern ( ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@214 ($generated@@56 $generated@@215)))
))) (=> (and (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@216 $generated@@31) ($generated@@28 $generated@@29 $generated@@217 $generated@@31)) ($generated@@35 ($generated@@60 ($generated@@61 $generated@@195) $generated@@216 ($generated@@56 $generated@@217)) ($generated@@56 ($generated@@60 ($generated@@61 $generated@@195) $generated@@216 $generated@@217))))
 :pattern ( ($generated@@56 ($generated@@60 ($generated@@61 $generated@@195) $generated@@216 $generated@@217)))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@195) $generated@@216 ($generated@@56 $generated@@217)))
)) (= (ControlFlow 0 11) 2)) $generated@@208)))))
(let (($generated@@218  (=> (and (not (and (and ($generated@@28 $generated@@29 $generated@@196 $generated@@31) ($generated@@182 $generated@@29 $generated@@196 $generated@@31 $generated@@197)) (and ($generated@@28 $generated@@29 $generated@@198 $generated@@31) ($generated@@182 $generated@@29 $generated@@198 $generated@@31 $generated@@197)))) (= (ControlFlow 0 14) 11)) $generated@@211)))
(let (($generated@@219  (=> (and (and ($generated@@28 $generated@@29 $generated@@196 $generated@@31) ($generated@@182 $generated@@29 $generated@@196 $generated@@31 $generated@@197)) (and ($generated@@28 $generated@@29 $generated@@198 $generated@@31) ($generated@@182 $generated@@29 $generated@@198 $generated@@31 $generated@@197))) (=> (and (and (and ($generated@@182 $generated@@29 $generated@@196 $generated@@31 $generated@@197) (= $generated@@199 ($generated@@56 $generated@@198))) (and ($generated@@182 $generated@@29 $generated@@199 $generated@@31 $generated@@197) ($generated@@62 $generated@@196 ($generated@@56 $generated@@198)))) (and (and ($generated@@182 $generated@@29 $generated@@196 $generated@@31 $generated@@197) ($generated@@182 $generated@@29 $generated@@198 $generated@@31 $generated@@197)) (and ($generated@@62 $generated@@196 $generated@@198) (= (ControlFlow 0 13) 11)))) $generated@@211))))
(let (($generated@@220  (=> (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@221 $generated@@31) ($generated@@28 $generated@@29 $generated@@222 $generated@@31)) (and (and ($generated@@88 ($generated@@60 ($generated@@61 $generated@@195) $generated@@221 $generated@@222)) ($generated@@88 ($generated@@60 ($generated@@61 $generated@@195) $generated@@222 $generated@@221))) (and ($generated@@62 $generated@@221 $generated@@222) ($generated@@62 $generated@@222 $generated@@221))))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@195) $generated@@222 $generated@@221))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@195) $generated@@221 $generated@@222))
)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (forall (($generated@@223 T@U) ($generated@@224 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@223 $generated@@31) ($generated@@28 $generated@@29 $generated@@224 $generated@@31)) ($generated@@35 ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@223 $generated@@224) ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@224 $generated@@223)))
 :pattern ( ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@224 $generated@@223))
 :pattern ( ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@223 $generated@@224))
))) (=> (and (forall (($generated@@225 T@U) ($generated@@226 T@U) ) (!  (=> (and ($generated@@28 $generated@@29 $generated@@225 $generated@@31) ($generated@@28 $generated@@29 $generated@@226 $generated@@31)) ($generated@@35 ($generated@@60 ($generated@@61 $generated@@195) $generated@@225 $generated@@226) ($generated@@60 ($generated@@61 $generated@@195) $generated@@226 $generated@@225)))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@195) $generated@@226 $generated@@225))
 :pattern ( ($generated@@60 ($generated@@61 $generated@@195) $generated@@225 $generated@@226))
)) (= (ControlFlow 0 3) 2)) $generated@@208)))))
(let (($generated@@227  (=> (and (not (and (and ($generated@@28 $generated@@29 $generated@@200 $generated@@31) ($generated@@182 $generated@@29 $generated@@200 $generated@@31 $generated@@197)) (and ($generated@@28 $generated@@29 $generated@@201 $generated@@31) ($generated@@182 $generated@@29 $generated@@201 $generated@@31 $generated@@197)))) (= (ControlFlow 0 6) 3)) $generated@@220)))
(let (($generated@@228  (=> (and (and (and (and (and ($generated@@28 $generated@@29 $generated@@200 $generated@@31) ($generated@@182 $generated@@29 $generated@@200 $generated@@31 $generated@@197)) (and ($generated@@28 $generated@@29 $generated@@201 $generated@@31) ($generated@@182 $generated@@29 $generated@@201 $generated@@31 $generated@@197))) ($generated@@182 $generated@@29 $generated@@200 $generated@@31 $generated@@197)) (and ($generated@@182 $generated@@29 $generated@@201 $generated@@31 $generated@@197) ($generated@@62 $generated@@200 $generated@@201))) (and (and ($generated@@182 $generated@@29 $generated@@201 $generated@@31 $generated@@197) ($generated@@182 $generated@@29 $generated@@200 $generated@@31 $generated@@197)) (and ($generated@@62 $generated@@201 $generated@@200) (= (ControlFlow 0 5) 3)))) $generated@@220)))
(let (($generated@@229  (=> (forall (($generated@@230 T@U) ($generated@@231 T@U) )  (=> (and ($generated@@28 $generated@@29 $generated@@230 $generated@@31) ($generated@@28 $generated@@29 $generated@@231 $generated@@31)) (and ($generated@@86 ($generated@@75 ($generated@@61 $generated@@195) $generated@@230 ($generated@@56 ($generated@@60 ($generated@@61 $generated@@195) $generated@@230 $generated@@231)))) (and ($generated@@62 $generated@@230 $generated@@231) ($generated@@76 $generated@@230 ($generated@@56 ($generated@@60 ($generated@@61 $generated@@195) $generated@@230 $generated@@231))))))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (forall (($generated@@232 T@U) ($generated@@233 T@U) )  (=> (and ($generated@@28 $generated@@29 $generated@@232 $generated@@31) ($generated@@28 $generated@@29 $generated@@233 $generated@@31)) ($generated@@32 ($generated@@75 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@232 ($generated@@56 ($generated@@60 ($generated@@61 ($generated@@61 $generated@@195)) $generated@@232 $generated@@233))) $generated@@26)))) (=> (forall (($generated@@234 T@U) ($generated@@235 T@U) )  (=> (and ($generated@@28 $generated@@29 $generated@@234 $generated@@31) ($generated@@28 $generated@@29 $generated@@235 $generated@@31)) ($generated@@32 ($generated@@75 ($generated@@61 $generated@@195) $generated@@234 ($generated@@56 ($generated@@60 ($generated@@61 $generated@@195) $generated@@234 $generated@@235))) $generated@@26))) (and (=> (= (ControlFlow 0 7) 5) $generated@@228) (=> (= (ControlFlow 0 7) 6) $generated@@227)))))))
(let (($generated@@236  (=> (and (not (and (and ($generated@@28 $generated@@29 $generated@@202 $generated@@31) ($generated@@182 $generated@@29 $generated@@202 $generated@@31 $generated@@197)) (and ($generated@@28 $generated@@29 $generated@@203 $generated@@31) ($generated@@182 $generated@@29 $generated@@203 $generated@@31 $generated@@197)))) (= (ControlFlow 0 10) 7)) $generated@@229)))
(let (($generated@@237  (=> (and (and ($generated@@28 $generated@@29 $generated@@202 $generated@@31) ($generated@@182 $generated@@29 $generated@@202 $generated@@31 $generated@@197)) (and ($generated@@28 $generated@@29 $generated@@203 $generated@@31) ($generated@@182 $generated@@29 $generated@@203 $generated@@31 $generated@@197))) (=> (and (and (and ($generated@@182 $generated@@29 $generated@@202 $generated@@31 $generated@@197) ($generated@@182 $generated@@29 $generated@@202 $generated@@31 $generated@@197)) (and ($generated@@182 $generated@@29 $generated@@203 $generated@@31 $generated@@197) ($generated@@62 $generated@@202 $generated@@203))) (and (and (= $generated@@204 ($generated@@56 ($generated@@60 ($generated@@61 $generated@@195) $generated@@202 $generated@@203))) ($generated@@182 $generated@@29 $generated@@204 $generated@@31 $generated@@197)) (and ($generated@@76 $generated@@202 ($generated@@56 ($generated@@60 ($generated@@61 $generated@@195) $generated@@202 $generated@@203))) (= (ControlFlow 0 9) 7)))) $generated@@229))))
(let (($generated@@238  (=> (= $generated@@205 ($generated@@126 $generated@@206 $generated@@197 $generated false)) (and (and (and (=> (= (ControlFlow 0 15) 13) $generated@@219) (=> (= (ControlFlow 0 15) 14) $generated@@218)) (=> (= (ControlFlow 0 15) 9) $generated@@237)) (=> (= (ControlFlow 0 15) 10) $generated@@236)))))
(let (($generated@@239  (=> (and (and ($generated@@183 $generated@@197) ($generated@@207 $generated@@197)) (and (= 2 $generated@@59) (= (ControlFlow 0 16) 15))) $generated@@238)))
$generated@@239)))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 7) (- 8))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 11) (- 12))))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
