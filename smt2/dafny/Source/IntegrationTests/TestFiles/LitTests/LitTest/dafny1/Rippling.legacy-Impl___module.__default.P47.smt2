(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@50 () Int)
(declare-fun $generated@@51 (T@U T@U) T@U)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@U) T@U)
(declare-fun $generated@@58 (T@U T@U T@U) T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U T@U) T@U)
(declare-fun $generated@@72 (T@U) Bool)
(declare-fun $generated@@80 (T@U) Bool)
(declare-fun $generated@@82 (T@U) Bool)
(declare-fun $generated@@85 (T@U) Bool)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@100 (T@U) T@U)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@146 (T@U) Int)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@162 () T@T)
(declare-fun $generated@@163 () T@T)
(declare-fun $generated@@164 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@165 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@166 () T@T)
(declare-fun $generated@@167 (T@T T@T) T@T)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@T) T@T)
(declare-fun $generated@@171 (T@T) T@T)
(declare-fun $generated@@220 (T@U) T@U)
(declare-fun $generated@@221 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@8 $generated@@25) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30 $generated@@31) $generated@@27)  (and (and ($generated@@24 $generated@@25 $generated@@29 $generated@@27) ($generated@@24 $generated@@25 $generated@@30 $generated@@28)) ($generated@@24 $generated@@25 $generated@@31 $generated@@27)))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@26 $generated@@29 $generated@@30 $generated@@31) $generated@@27))
)))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@32 ($generated@@26 $generated@@33 $generated@@34 $generated@@35)) $generated@@5)
 :pattern ( ($generated@@26 $generated@@33 $generated@@34 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@36 ($generated@@26 $generated@@37 $generated@@38 $generated@@39)) $generated@@37)
 :pattern ( ($generated@@26 $generated@@37 $generated@@38 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@40 ($generated@@26 $generated@@41 $generated@@42 $generated@@43)) $generated@@42)
 :pattern ( ($generated@@26 $generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@44 ($generated@@26 $generated@@45 $generated@@46 $generated@@47)) $generated@@47)
 :pattern ( ($generated@@26 $generated@@45 $generated@@46 $generated@@47))
)))
(assert (= ($generated@@32 $generated@@48) $generated@@2))
(assert (= ($generated@@32 $generated@@49) $generated@@4))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> (or ($generated@@54 ($generated@@53 $generated@@25 $generated@@61)) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@61 $generated@@27))) (and (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@55 ($generated@@53 $generated@@25 $generated@@61)))))) (let (($generated@@62 ($generated@@53 $generated@@25 ($generated@@44 ($generated@@53 $generated@@25 $generated@@61)))))
(let (($generated@@63 ($generated@@53 $generated@@25 ($generated@@36 ($generated@@53 $generated@@25 $generated@@61)))))
 (and (and ($generated@@54 $generated@@63) ($generated@@54 $generated@@62)) ($generated@@56 ($generated@@51 ($generated@@52 $generated@@60) $generated@@63) ($generated@@51 ($generated@@52 $generated@@60) $generated@@62)))))) (= ($generated@@51 ($generated@@52 $generated@@60) ($generated@@53 $generated@@25 $generated@@61)) (ite ($generated@@55 ($generated@@53 $generated@@25 $generated@@61)) $generated@@48 (let (($generated@@64 ($generated@@53 $generated@@25 ($generated@@44 ($generated@@53 $generated@@25 $generated@@61)))))
(let (($generated@@65 ($generated@@53 $generated@@25 ($generated@@36 ($generated@@53 $generated@@25 $generated@@61)))))
($generated@@53 $generated@@25 ($generated@@57 ($generated@@53 $generated@@25 ($generated@@58 ($generated@@52 $generated@@59) ($generated@@53 $generated@@25 ($generated@@51 ($generated@@52 $generated@@60) $generated@@65)) ($generated@@53 $generated@@25 ($generated@@51 ($generated@@52 $generated@@60) $generated@@64))))))))))))
 :weight 3
 :pattern ( ($generated@@51 ($generated@@52 $generated@@60) ($generated@@53 $generated@@25 $generated@@61)))
))))
(assert ($generated@@24 $generated@@25 $generated@@48 $generated@@28))
(assert ($generated@@24 $generated@@25 $generated@@49 $generated@@27))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@66 $generated@@67 $generated@@68) (= $generated@@67 $generated@@68))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@53 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@53 $generated@@70 $generated@@69))
)))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (!  (=> (or ($generated@@72 ($generated@@53 $generated@@25 $generated@@74)) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@74 $generated@@27))) (and (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@55 ($generated@@53 $generated@@25 $generated@@74)))))) (let (($generated@@75 ($generated@@53 $generated@@25 ($generated@@44 ($generated@@53 $generated@@25 $generated@@74)))))
(let (($generated@@76 ($generated@@53 $generated@@25 ($generated@@36 ($generated@@53 $generated@@25 $generated@@74)))))
 (and ($generated@@72 $generated@@75) ($generated@@72 $generated@@76))))) (= ($generated@@71 ($generated@@52 $generated@@73) ($generated@@53 $generated@@25 $generated@@74)) (ite ($generated@@55 ($generated@@53 $generated@@25 $generated@@74)) $generated@@49 (let (($generated@@77 ($generated@@53 $generated@@25 ($generated@@44 ($generated@@53 $generated@@25 $generated@@74)))))
(let (($generated@@78 ($generated@@53 $generated@@25 ($generated@@40 ($generated@@53 $generated@@25 $generated@@74)))))
(let (($generated@@79 ($generated@@53 $generated@@25 ($generated@@36 ($generated@@53 $generated@@25 $generated@@74)))))
($generated@@53 $generated@@25 ($generated@@26 ($generated@@53 $generated@@25 ($generated@@71 ($generated@@52 $generated@@73) $generated@@77)) $generated@@78 ($generated@@53 $generated@@25 ($generated@@71 ($generated@@52 $generated@@73) $generated@@79)))))))))))
 :weight 3
 :pattern ( ($generated@@71 ($generated@@52 $generated@@73) ($generated@@53 $generated@@25 $generated@@74)))
))))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 $generated@@81) (= ($generated@@32 $generated@@81) $generated@@2))
 :pattern ( ($generated@@80 $generated@@81))
)))
(assert (forall (($generated@@83 T@U) ) (! (= ($generated@@82 $generated@@83) (= ($generated@@32 $generated@@83) $generated@@3))
 :pattern ( ($generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ) (! (= ($generated@@55 $generated@@84) (= ($generated@@32 $generated@@84) $generated@@4))
 :pattern ( ($generated@@55 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ) (! (= ($generated@@85 $generated@@86) (= ($generated@@32 $generated@@86) $generated@@5))
 :pattern ( ($generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@87 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@87 $generated@@90 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ) (!  (=> ($generated@@85 $generated@@91) (exists (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (= $generated@@91 ($generated@@26 $generated@@92 $generated@@93 $generated@@94))))
 :pattern ( ($generated@@85 $generated@@91))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@80 $generated@@95) (= $generated@@95 $generated@@48))
 :pattern ( ($generated@@80 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@55 $generated@@96) (= $generated@@96 $generated@@49))
 :pattern ( ($generated@@55 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ) (!  (=> ($generated@@82 $generated@@97) (exists (($generated@@98 T@U) ) (= $generated@@97 ($generated@@57 $generated@@98))))
 :pattern ( ($generated@@82 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@24 $generated@@25 ($generated@@57 $generated@@99) $generated@@28) ($generated@@24 $generated@@25 $generated@@99 $generated@@28))
 :pattern ( ($generated@@24 $generated@@25 ($generated@@57 $generated@@99) $generated@@28))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (and ($generated@@82 $generated@@101) ($generated@@82 $generated@@102)) (= ($generated@@66 $generated@@101 $generated@@102) ($generated@@66 ($generated@@100 $generated@@101) ($generated@@100 $generated@@102))))
 :pattern ( ($generated@@66 $generated@@101 $generated@@102) ($generated@@82 $generated@@101))
 :pattern ( ($generated@@66 $generated@@101 $generated@@102) ($generated@@82 $generated@@102))
)))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (=> (or ($generated@@56 $generated@@104 $generated@@105) (and (< 1 $generated@@50) (and ($generated@@24 $generated@@25 $generated@@104 $generated@@28) ($generated@@24 $generated@@25 $generated@@105 $generated@@28)))) ($generated@@24 $generated@@25 ($generated@@58 $generated@@103 $generated@@104 $generated@@105) $generated@@28))
 :pattern ( ($generated@@58 $generated@@103 $generated@@104 $generated@@105))
))))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@58 ($generated@@52 $generated@@106) $generated@@107 $generated@@108) ($generated@@58 $generated@@106 $generated@@107 $generated@@108))
 :pattern ( ($generated@@58 ($generated@@52 $generated@@106) $generated@@107 $generated@@108))
)))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (or ($generated@@56 $generated@@110 $generated@@111) (and (< 1 $generated@@50) (and ($generated@@24 $generated@@25 $generated@@110 $generated@@28) ($generated@@24 $generated@@25 $generated@@111 $generated@@28)))) (and (=> (not ($generated@@80 $generated@@110)) (let (($generated@@112 ($generated@@100 $generated@@110)))
 (=> (not ($generated@@80 $generated@@111)) (let (($generated@@113 ($generated@@100 $generated@@111)))
($generated@@56 $generated@@112 $generated@@113))))) (= ($generated@@58 ($generated@@52 $generated@@109) $generated@@110 $generated@@111) (ite ($generated@@80 $generated@@110) $generated@@111 (let (($generated@@114 ($generated@@100 $generated@@110)))
(ite ($generated@@80 $generated@@111) $generated@@110 (let (($generated@@115 ($generated@@100 $generated@@111)))
($generated@@57 ($generated@@58 $generated@@109 $generated@@114 $generated@@115)))))))))
 :pattern ( ($generated@@58 ($generated@@52 $generated@@109) $generated@@110 $generated@@111))
))))
(assert  (=> (<= 1 $generated@@50) (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@56 ($generated@@53 $generated@@25 $generated@@117) ($generated@@53 $generated@@25 $generated@@118)) (and (< 1 $generated@@50) (and ($generated@@24 $generated@@25 $generated@@117 $generated@@28) ($generated@@24 $generated@@25 $generated@@118 $generated@@28)))) (and (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@80 ($generated@@53 $generated@@25 $generated@@117)))))) (let (($generated@@119 ($generated@@53 $generated@@25 ($generated@@100 ($generated@@53 $generated@@25 $generated@@117)))))
 (=> (not ($generated@@13 ($generated@@53 $generated@@9 ($generated@@12 ($generated@@80 ($generated@@53 $generated@@25 $generated@@118)))))) (let (($generated@@120 ($generated@@53 $generated@@25 ($generated@@100 ($generated@@53 $generated@@25 $generated@@118)))))
($generated@@56 $generated@@119 $generated@@120))))) (= ($generated@@58 ($generated@@52 $generated@@116) ($generated@@53 $generated@@25 $generated@@117) ($generated@@53 $generated@@25 $generated@@118)) (ite ($generated@@80 ($generated@@53 $generated@@25 $generated@@117)) $generated@@118 (let (($generated@@121 ($generated@@53 $generated@@25 ($generated@@100 ($generated@@53 $generated@@25 $generated@@117)))))
(ite ($generated@@80 ($generated@@53 $generated@@25 $generated@@118)) $generated@@117 (let (($generated@@122 ($generated@@53 $generated@@25 ($generated@@100 ($generated@@53 $generated@@25 $generated@@118)))))
($generated@@53 $generated@@25 ($generated@@57 ($generated@@53 $generated@@25 ($generated@@58 ($generated@@52 $generated@@116) $generated@@121 $generated@@122)))))))))))
 :weight 3
 :pattern ( ($generated@@58 ($generated@@52 $generated@@116) ($generated@@53 $generated@@25 $generated@@117) ($generated@@53 $generated@@25 $generated@@118)))
))))
(assert (forall (($generated@@124 T@U) ) (!  (=> ($generated@@123 $generated@@124) (or ($generated@@80 $generated@@124) ($generated@@82 $generated@@124)))
 :pattern ( ($generated@@123 $generated@@124))
)))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (or ($generated@@54 $generated@@126) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@126 $generated@@27))) ($generated@@24 $generated@@25 ($generated@@51 $generated@@125 $generated@@126) $generated@@28))
 :pattern ( ($generated@@51 $generated@@125 $generated@@126))
))))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (=> (or ($generated@@72 $generated@@128) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@128 $generated@@27))) ($generated@@24 $generated@@25 ($generated@@71 $generated@@127 $generated@@128) $generated@@27))
 :pattern ( ($generated@@71 $generated@@127 $generated@@128))
))))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@129 $generated@@28) (or ($generated@@80 $generated@@129) ($generated@@82 $generated@@129)))
 :pattern ( ($generated@@82 $generated@@129) ($generated@@24 $generated@@25 $generated@@129 $generated@@28))
 :pattern ( ($generated@@80 $generated@@129) ($generated@@24 $generated@@25 $generated@@129 $generated@@28))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@130 $generated@@27) (or ($generated@@55 $generated@@130) ($generated@@85 $generated@@130)))
 :pattern ( ($generated@@85 $generated@@130) ($generated@@24 $generated@@25 $generated@@130 $generated@@27))
 :pattern ( ($generated@@55 $generated@@130) ($generated@@24 $generated@@25 $generated@@130 $generated@@27))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (and ($generated@@80 $generated@@131) ($generated@@80 $generated@@132)) ($generated@@66 $generated@@131 $generated@@132))
 :pattern ( ($generated@@66 $generated@@131 $generated@@132) ($generated@@80 $generated@@131))
 :pattern ( ($generated@@66 $generated@@131 $generated@@132) ($generated@@80 $generated@@132))
)))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (or ($generated@@54 $generated@@134) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@134 $generated@@27))) (and (=> (not ($generated@@55 $generated@@134)) (let (($generated@@135 ($generated@@44 $generated@@134)))
(let (($generated@@136 ($generated@@36 $generated@@134)))
 (and (and ($generated@@54 $generated@@136) ($generated@@54 $generated@@135)) ($generated@@56 ($generated@@51 $generated@@133 $generated@@136) ($generated@@51 $generated@@133 $generated@@135)))))) (= ($generated@@51 ($generated@@52 $generated@@133) $generated@@134) (ite ($generated@@55 $generated@@134) $generated@@48 (let (($generated@@137 ($generated@@44 $generated@@134)))
(let (($generated@@138 ($generated@@36 $generated@@134)))
($generated@@57 ($generated@@58 ($generated@@52 $generated@@59) ($generated@@51 $generated@@133 $generated@@138) ($generated@@51 $generated@@133 $generated@@137)))))))))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@133) $generated@@134))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@26 ($generated@@53 $generated@@25 $generated@@139) ($generated@@53 $generated@@25 $generated@@140) ($generated@@53 $generated@@25 $generated@@141)) ($generated@@53 $generated@@25 ($generated@@26 $generated@@139 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@26 ($generated@@53 $generated@@25 $generated@@139) ($generated@@53 $generated@@25 $generated@@140) ($generated@@53 $generated@@25 $generated@@141)))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@32 ($generated@@57 $generated@@142)) $generated@@3)
 :pattern ( ($generated@@57 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@100 ($generated@@57 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@57 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@T) ) (! (= ($generated@@87 $generated@@145 ($generated@@88 $generated@@145 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@88 $generated@@145 $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (! (< ($generated@@146 $generated@@147) ($generated@@146 ($generated@@26 $generated@@147 $generated@@148 $generated@@149)))
 :pattern ( ($generated@@26 $generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (< ($generated@@146 $generated@@151) ($generated@@146 ($generated@@26 $generated@@150 $generated@@151 $generated@@152)))
 :pattern ( ($generated@@26 $generated@@150 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (< ($generated@@146 $generated@@155) ($generated@@146 ($generated@@26 $generated@@153 $generated@@154 $generated@@155)))
 :pattern ( ($generated@@26 $generated@@153 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! (= ($generated@@51 ($generated@@52 $generated@@156) $generated@@157) ($generated@@51 $generated@@156 $generated@@157))
 :pattern ( ($generated@@51 ($generated@@52 $generated@@156) $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@71 ($generated@@52 $generated@@158) $generated@@159) ($generated@@71 $generated@@158 $generated@@159))
 :pattern ( ($generated@@71 ($generated@@52 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ) (! (< ($generated@@146 $generated@@160) ($generated@@146 ($generated@@57 $generated@@160)))
 :pattern ( ($generated@@57 $generated@@160))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@161 $generated@@172 $generated@@173 $generated@@174 ($generated@@168 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@177 $generated@@178) $generated@@175)
 :weight 0
)) (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@161 $generated@@179 $generated@@180 $generated@@181 ($generated@@168 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@161 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@161 $generated@@188 $generated@@189 $generated@@190 ($generated@@168 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@161 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)))) (= ($generated@@8 $generated@@162) 4)) (= ($generated@@8 $generated@@163) 5)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@165 $generated@@197 $generated@@198 ($generated@@169 $generated@@197 $generated@@198 $generated@@200 $generated@@201 $generated@@199) $generated@@201) $generated@@199)
 :weight 0
))) (forall (($generated@@202 T@T) ($generated@@203 T@T) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (!  (or (= $generated@@206 $generated@@207) (= ($generated@@165 $generated@@202 $generated@@203 ($generated@@169 $generated@@202 $generated@@203 $generated@@205 $generated@@206 $generated@@204) $generated@@207) ($generated@@165 $generated@@202 $generated@@203 $generated@@205 $generated@@207)))
 :weight 0
))) (= ($generated@@8 $generated@@166) 6)) (forall (($generated@@208 T@T) ($generated@@209 T@T) ) (= ($generated@@8 ($generated@@167 $generated@@208 $generated@@209)) 7))) (forall (($generated@@210 T@T) ($generated@@211 T@T) ) (! (= ($generated@@170 ($generated@@167 $generated@@210 $generated@@211)) $generated@@210)
 :pattern ( ($generated@@167 $generated@@210 $generated@@211))
))) (forall (($generated@@212 T@T) ($generated@@213 T@T) ) (! (= ($generated@@171 ($generated@@167 $generated@@212 $generated@@213)) $generated@@213)
 :pattern ( ($generated@@167 $generated@@212 $generated@@213))
))))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 Bool) ($generated@@218 T@U) ($generated@@219 T@U) ) (! (= ($generated@@13 ($generated@@161 $generated@@162 $generated@@163 $generated@@9 ($generated@@164 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))  (=> (and (or (not (= $generated@@218 $generated@@214)) (not true)) ($generated@@13 ($generated@@87 $generated@@9 ($generated@@165 $generated@@163 $generated@@166 ($generated@@165 $generated@@162 ($generated@@167 $generated@@163 $generated@@166) $generated@@215 $generated@@218) $generated@@216)))) $generated@@217))
 :pattern ( ($generated@@161 $generated@@162 $generated@@163 $generated@@9 ($generated@@164 $generated@@214 $generated@@215 $generated@@216 $generated@@217) $generated@@218 $generated@@219))
)))
(assert (= ($generated@@220 $generated@@28) $generated@@0))
(assert (= ($generated@@221 $generated@@28) $generated@@6))
(assert (= ($generated@@220 $generated@@27) $generated@@1))
(assert (= ($generated@@221 $generated@@27) $generated@@7))
(assert (= $generated@@48 ($generated@@53 $generated@@25 $generated@@48)))
(assert (= $generated@@49 ($generated@@53 $generated@@25 $generated@@49)))
(assert  (=> (<= 2 $generated@@50) (forall (($generated@@222 T@U) ($generated@@223 T@U) ) (!  (=> (or ($generated@@72 $generated@@223) (and (< 2 $generated@@50) ($generated@@24 $generated@@25 $generated@@223 $generated@@27))) (and (=> (not ($generated@@55 $generated@@223)) (let (($generated@@224 ($generated@@44 $generated@@223)))
(let (($generated@@225 ($generated@@36 $generated@@223)))
 (and ($generated@@72 $generated@@224) ($generated@@72 $generated@@225))))) (= ($generated@@71 ($generated@@52 $generated@@222) $generated@@223) (ite ($generated@@55 $generated@@223) $generated@@49 (let (($generated@@226 ($generated@@44 $generated@@223)))
(let (($generated@@227 ($generated@@40 $generated@@223)))
(let (($generated@@228 ($generated@@36 $generated@@223)))
($generated@@26 ($generated@@71 $generated@@222 $generated@@226) $generated@@227 ($generated@@71 $generated@@222 $generated@@228)))))))))
 :pattern ( ($generated@@71 ($generated@@52 $generated@@222) $generated@@223))
))))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@57 ($generated@@53 $generated@@25 $generated@@229)) ($generated@@53 $generated@@25 ($generated@@57 $generated@@229)))
 :pattern ( ($generated@@57 ($generated@@53 $generated@@25 $generated@@229)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@T) ) (! (= ($generated@@88 $generated@@231 ($generated@@53 $generated@@231 $generated@@230)) ($generated@@53 $generated@@166 ($generated@@88 $generated@@231 $generated@@230)))
 :pattern ( ($generated@@88 $generated@@231 ($generated@@53 $generated@@231 $generated@@230)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 (T@U) Bool)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@238  (=> (= $generated@@232 ($generated@@164 $generated@@233 $generated@@234 $generated false)) (=> (and ($generated@@235 $generated@@236) ($generated@@237 $generated@@236)) (=> (and (and (forall (($generated@@239 T@U) ($generated@@240 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@239 $generated@@28) ($generated@@24 $generated@@25 $generated@@240 $generated@@28)) (and (and ($generated@@123 ($generated@@58 ($generated@@52 $generated@@59) $generated@@239 $generated@@240)) ($generated@@123 ($generated@@58 ($generated@@52 $generated@@59) $generated@@240 $generated@@239))) (and ($generated@@56 $generated@@239 $generated@@240) ($generated@@56 $generated@@240 $generated@@239))))
 :pattern ( ($generated@@58 ($generated@@52 $generated@@59) $generated@@240 $generated@@239))
 :pattern ( ($generated@@58 ($generated@@52 $generated@@59) $generated@@239 $generated@@240))
)) (forall (($generated@@241 T@U) ($generated@@242 T@U) ) (!  (=> (and ($generated@@24 $generated@@25 $generated@@241 $generated@@28) ($generated@@24 $generated@@25 $generated@@242 $generated@@28)) ($generated@@66 ($generated@@58 ($generated@@52 $generated@@59) $generated@@241 $generated@@242) ($generated@@58 ($generated@@52 $generated@@59) $generated@@242 $generated@@241)))
 :pattern ( ($generated@@58 ($generated@@52 $generated@@59) $generated@@242 $generated@@241))
 :pattern ( ($generated@@58 ($generated@@52 $generated@@59) $generated@@241 $generated@@242))
))) (and (= $generated@@234 $generated@@236) (= (ControlFlow 0 2) (- 0 1)))) (forall (($generated@@243 T@U) ) (!  (=> ($generated@@24 $generated@@25 $generated@@243 $generated@@27) ($generated@@66 ($generated@@51 ($generated@@52 ($generated@@52 $generated@@59)) ($generated@@71 ($generated@@52 ($generated@@52 $generated@@59)) $generated@@243)) ($generated@@51 ($generated@@52 ($generated@@52 $generated@@59)) $generated@@243)))
 :pattern ( ($generated@@71 ($generated@@52 ($generated@@52 $generated@@59)) $generated@@243))
)))))))
(let (($generated@@244  (=> (and (and ($generated@@235 $generated@@234) ($generated@@237 $generated@@234)) (and (= 3 $generated@@50) (= (ControlFlow 0 3) 2))) $generated@@238)))
$generated@@244)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
