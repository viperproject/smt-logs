(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U) Bool)
(declare-fun $generated@@21 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@T T@T) T@T)
(declare-fun $generated@@26 (T@T T@U) T@U)
(declare-fun $generated@@27 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@28 (T@T) T@T)
(declare-fun $generated@@29 (T@T) T@T)
(declare-fun $generated@@50 (Int) Int)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@U T@U) Bool)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@81 () Int)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U T@U) Bool)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@112 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@114 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert  (and (and (and (and (and (and (and (forall (($generated@@30 T@T) ($generated@@31 T@T) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@21 $generated@@30 $generated@@31 ($generated@@27 $generated@@30 $generated@@31 $generated@@33 $generated@@34 $generated@@32) $generated@@34) $generated@@32)
 :weight 0
)) (forall (($generated@@35 T@T) ($generated@@36 T@T) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 T@U) ($generated@@40 T@U) ) (!  (or (= $generated@@39 $generated@@40) (= ($generated@@21 $generated@@35 $generated@@36 ($generated@@27 $generated@@35 $generated@@36 $generated@@38 $generated@@39 $generated@@37) $generated@@40) ($generated@@21 $generated@@35 $generated@@36 $generated@@38 $generated@@40)))
 :weight 0
))) (= ($generated@@3 $generated@@22) 3)) (= ($generated@@3 $generated@@23) 4)) (= ($generated@@3 $generated@@24) 5)) (forall (($generated@@41 T@T) ($generated@@42 T@T) ) (= ($generated@@3 ($generated@@25 $generated@@41 $generated@@42)) 6))) (forall (($generated@@43 T@T) ($generated@@44 T@T) ) (! (= ($generated@@28 ($generated@@25 $generated@@43 $generated@@44)) $generated@@43)
 :pattern ( ($generated@@25 $generated@@43 $generated@@44))
))) (forall (($generated@@45 T@T) ($generated@@46 T@T) ) (! (= ($generated@@29 ($generated@@25 $generated@@45 $generated@@46)) $generated@@46)
 :pattern ( ($generated@@25 $generated@@45 $generated@@46))
))))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> ($generated@@20 $generated@@47 $generated@@48) (forall (($generated@@49 T@U) ) (!  (=> ($generated@@8 ($generated@@26 $generated@@4 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@47 $generated@@49) $generated@@2))) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@48 $generated@@49) $generated@@2))))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@48 $generated@@49) $generated@@2))
)))
 :pattern ( ($generated@@20 $generated@@47 $generated@@48))
)))
(assert (forall (($generated@@51 Int) ) (! (= ($generated@@50 $generated@@51) $generated@@51)
 :pattern ( ($generated@@50 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@T) ) (! (= ($generated@@52 $generated@@54 $generated@@53) $generated@@53)
 :pattern ( ($generated@@52 $generated@@54 $generated@@53))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@T) ) (! (= ($generated@@55 $generated@@57 ($generated@@26 $generated@@57 $generated@@56)) $generated@@56)
 :pattern ( ($generated@@26 $generated@@57 $generated@@56))
)))
(assert (= ($generated@@3 $generated@@59) 7))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@58 $generated@@59 $generated@@63 ($generated@@60 $generated@@64)) (forall (($generated@@65 T@U) ) (!  (=> ($generated@@61 $generated@@63 $generated@@65) ($generated@@62 $generated@@65 $generated@@64))
 :pattern ( ($generated@@61 $generated@@63 $generated@@65))
)))
 :pattern ( ($generated@@58 $generated@@59 $generated@@63 ($generated@@60 $generated@@64)))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@66 ($generated@@55 $generated@@71 $generated@@68) $generated@@69 $generated@@70) ($generated@@67 $generated@@71 $generated@@68 $generated@@69 $generated@@70))
 :pattern ( ($generated@@66 ($generated@@55 $generated@@71 $generated@@68) $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@20 $generated@@72 $generated@@73) (=> ($generated@@66 $generated@@74 $generated@@75 $generated@@72) ($generated@@66 $generated@@74 $generated@@75 $generated@@73)))
 :pattern ( ($generated@@20 $generated@@72 $generated@@73) ($generated@@66 $generated@@74 $generated@@75 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (!  (=> ($generated@@20 $generated@@76 $generated@@77) (=> ($generated@@67 $generated@@80 $generated@@78 $generated@@79 $generated@@76) ($generated@@67 $generated@@80 $generated@@78 $generated@@79 $generated@@77)))
 :pattern ( ($generated@@20 $generated@@76 $generated@@77) ($generated@@67 $generated@@80 $generated@@78 $generated@@79 $generated@@76))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (or ($generated@@83 $generated@@86 ($generated@@52 $generated@@23 $generated@@87) ($generated@@52 $generated@@59 $generated@@88)) (and (< 1 $generated@@81) (and ($generated@@62 $generated@@87 $generated@@86) ($generated@@58 $generated@@59 $generated@@88 ($generated@@60 $generated@@86))))) (and (=> ($generated@@61 ($generated@@52 $generated@@59 $generated@@88) ($generated@@52 $generated@@23 $generated@@87)) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@62 $generated@@89 $generated@@86) (and (=> ($generated@@61 ($generated@@52 $generated@@59 $generated@@88) $generated@@89) (=> (or (not (= $generated@@89 $generated@@87)) (not true)) ($generated@@85 $generated@@86 $generated@@89 ($generated@@52 $generated@@23 $generated@@87)))) (=> (=> (and ($generated@@61 ($generated@@52 $generated@@59 $generated@@88) $generated@@89) (or (not (= $generated@@89 $generated@@87)) (not true))) ($generated@@84 $generated@@86 $generated@@89 ($generated@@52 $generated@@23 $generated@@87))) (=> ($generated@@61 ($generated@@52 $generated@@59 $generated@@88) $generated@@89) (=> (or (not (= $generated@@89 $generated@@87)) (not true)) ($generated@@85 $generated@@86 ($generated@@52 $generated@@23 $generated@@87) $generated@@89))))))
 :pattern ( ($generated@@84 $generated@@86 $generated@@87 $generated@@89))
 :pattern ( ($generated@@84 $generated@@86 $generated@@89 $generated@@87))
 :pattern ( ($generated@@61 $generated@@88 $generated@@89))
))) (= ($generated@@82 $generated@@86 ($generated@@52 $generated@@23 $generated@@87) ($generated@@52 $generated@@59 $generated@@88))  (and ($generated@@61 ($generated@@52 $generated@@59 $generated@@88) ($generated@@52 $generated@@23 $generated@@87)) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@62 $generated@@90 $generated@@86) (and (=> (and ($generated@@61 ($generated@@52 $generated@@59 $generated@@88) $generated@@90) (or (not (= $generated@@90 $generated@@87)) (not true))) ($generated@@84 $generated@@86 $generated@@90 ($generated@@52 $generated@@23 $generated@@87))) (=> (and ($generated@@61 ($generated@@52 $generated@@59 $generated@@88) $generated@@90) (or (not (= $generated@@90 $generated@@87)) (not true))) (not ($generated@@84 $generated@@86 ($generated@@52 $generated@@23 $generated@@87) $generated@@90)))))
 :pattern ( ($generated@@84 $generated@@86 $generated@@87 $generated@@90))
 :pattern ( ($generated@@84 $generated@@86 $generated@@90 $generated@@87))
 :pattern ( ($generated@@61 $generated@@88 $generated@@90))
))))))
 :weight 3
 :pattern ( ($generated@@82 $generated@@86 ($generated@@52 $generated@@23 $generated@@87) ($generated@@52 $generated@@59 $generated@@88)))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or (not (= $generated@@91 $generated@@93)) (not true)) (=> (and ($generated@@20 $generated@@91 $generated@@92) ($generated@@20 $generated@@92 $generated@@93)) ($generated@@20 $generated@@91 $generated@@93)))
 :pattern ( ($generated@@20 $generated@@91 $generated@@92) ($generated@@20 $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ) (!  (=> ($generated@@62 $generated@@94 $generated) (and (= ($generated@@55 $generated@@5 ($generated@@26 $generated@@5 $generated@@94)) $generated@@94) ($generated@@58 $generated@@5 ($generated@@26 $generated@@5 $generated@@94) $generated)))
 :pattern ( ($generated@@62 $generated@@94 $generated))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@62 ($generated@@55 $generated@@97 $generated@@95) $generated@@96) ($generated@@58 $generated@@97 $generated@@95 $generated@@96))
 :pattern ( ($generated@@62 ($generated@@55 $generated@@97 $generated@@95) $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@67 $generated@@59 $generated@@98 ($generated@@60 $generated@@99) $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@61 $generated@@98 $generated@@101) ($generated@@66 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@61 $generated@@98 $generated@@101))
)))
 :pattern ( ($generated@@67 $generated@@59 $generated@@98 ($generated@@60 $generated@@99) $generated@@100))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@83 $generated@@102 $generated@@103 ($generated@@52 $generated@@59 $generated@@104)) (and (< 1 $generated@@81) (and ($generated@@62 $generated@@103 $generated@@102) ($generated@@58 $generated@@59 $generated@@104 ($generated@@60 $generated@@102))))) (and (=> ($generated@@61 ($generated@@52 $generated@@59 $generated@@104) $generated@@103) (forall (($generated@@105 T@U) ) (!  (=> ($generated@@62 $generated@@105 $generated@@102) (and (=> ($generated@@61 ($generated@@52 $generated@@59 $generated@@104) $generated@@105) (=> (or (not (= $generated@@105 $generated@@103)) (not true)) ($generated@@85 $generated@@102 $generated@@105 $generated@@103))) (=> (=> (and ($generated@@61 ($generated@@52 $generated@@59 $generated@@104) $generated@@105) (or (not (= $generated@@105 $generated@@103)) (not true))) ($generated@@84 $generated@@102 $generated@@105 $generated@@103)) (=> ($generated@@61 ($generated@@52 $generated@@59 $generated@@104) $generated@@105) (=> (or (not (= $generated@@105 $generated@@103)) (not true)) ($generated@@85 $generated@@102 $generated@@103 $generated@@105))))))
 :pattern ( ($generated@@84 $generated@@102 $generated@@103 $generated@@105))
 :pattern ( ($generated@@84 $generated@@102 $generated@@105 $generated@@103))
 :pattern ( ($generated@@61 $generated@@104 $generated@@105))
))) (= ($generated@@82 $generated@@102 $generated@@103 ($generated@@52 $generated@@59 $generated@@104))  (and ($generated@@61 ($generated@@52 $generated@@59 $generated@@104) $generated@@103) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@62 $generated@@106 $generated@@102) (and (=> (and ($generated@@61 ($generated@@52 $generated@@59 $generated@@104) $generated@@106) (or (not (= $generated@@106 $generated@@103)) (not true))) ($generated@@84 $generated@@102 $generated@@106 $generated@@103)) (=> (and ($generated@@61 ($generated@@52 $generated@@59 $generated@@104) $generated@@106) (or (not (= $generated@@106 $generated@@103)) (not true))) (not ($generated@@84 $generated@@102 $generated@@103 $generated@@106)))))
 :pattern ( ($generated@@84 $generated@@102 $generated@@103 $generated@@106))
 :pattern ( ($generated@@84 $generated@@102 $generated@@106 $generated@@103))
 :pattern ( ($generated@@61 $generated@@104 $generated@@106))
))))))
 :weight 3
 :pattern ( ($generated@@82 $generated@@102 $generated@@103 ($generated@@52 $generated@@59 $generated@@104)))
))))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@107 ($generated@@60 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@60 $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@19 ($generated@@60 $generated@@109)) $generated@@1)
 :pattern ( ($generated@@60 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@T) ) (! (= ($generated@@26 $generated@@111 ($generated@@55 $generated@@111 $generated@@110)) $generated@@110)
 :pattern ( ($generated@@55 $generated@@111 $generated@@110))
)))
(assert  (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@112 $generated@@115 $generated@@116 $generated@@117 ($generated@@114 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@120 $generated@@121) $generated@@118)
 :weight 0
)) (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@127 $generated@@129) (= ($generated@@112 $generated@@122 $generated@@123 $generated@@124 ($generated@@114 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@129 $generated@@130) ($generated@@112 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@129 $generated@@130)))
 :weight 0
)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (!  (or (= $generated@@137 $generated@@139) (= ($generated@@112 $generated@@131 $generated@@132 $generated@@133 ($generated@@114 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@136 $generated@@137 $generated@@134) $generated@@138 $generated@@139) ($generated@@112 $generated@@131 $generated@@132 $generated@@133 $generated@@135 $generated@@138 $generated@@139)))
 :weight 0
)))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 Bool) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@8 ($generated@@112 $generated@@24 $generated@@22 $generated@@4 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))  (=> (and (or (not (= $generated@@144 $generated@@140)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@141 $generated@@144) $generated@@142)))) $generated@@143))
 :pattern ( ($generated@@112 $generated@@24 $generated@@22 $generated@@4 ($generated@@113 $generated@@140 $generated@@141 $generated@@142 $generated@@143) $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@62 $generated@@146 ($generated@@60 $generated@@147)) (and (= ($generated@@55 $generated@@59 ($generated@@26 $generated@@59 $generated@@146)) $generated@@146) ($generated@@58 $generated@@59 ($generated@@26 $generated@@59 $generated@@146) ($generated@@60 $generated@@147))))
 :pattern ( ($generated@@62 $generated@@146 ($generated@@60 $generated@@147)))
)))
(assert (forall (($generated@@148 Int) ) (! (= ($generated@@55 $generated@@5 ($generated@@9 ($generated@@50 $generated@@148))) ($generated@@52 $generated@@23 ($generated@@55 $generated@@5 ($generated@@9 $generated@@148))))
 :pattern ( ($generated@@55 $generated@@5 ($generated@@9 ($generated@@50 $generated@@148))))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@55 $generated@@150 ($generated@@52 $generated@@150 $generated@@149)) ($generated@@52 $generated@@23 ($generated@@55 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@55 $generated@@150 ($generated@@52 $generated@@150 $generated@@149)))
)))
(assert  (=> (<= 1 $generated@@81) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (or ($generated@@83 $generated@@151 $generated@@152 $generated@@153) (and (< 1 $generated@@81) (and ($generated@@62 $generated@@152 $generated@@151) ($generated@@58 $generated@@59 $generated@@153 ($generated@@60 $generated@@151))))) (and (=> ($generated@@61 $generated@@153 $generated@@152) (forall (($generated@@154 T@U) ) (!  (=> ($generated@@62 $generated@@154 $generated@@151) (and (=> ($generated@@61 $generated@@153 $generated@@154) (=> (or (not (= $generated@@154 $generated@@152)) (not true)) ($generated@@85 $generated@@151 $generated@@154 $generated@@152))) (=> (=> (and ($generated@@61 $generated@@153 $generated@@154) (or (not (= $generated@@154 $generated@@152)) (not true))) ($generated@@84 $generated@@151 $generated@@154 $generated@@152)) (=> ($generated@@61 $generated@@153 $generated@@154) (=> (or (not (= $generated@@154 $generated@@152)) (not true)) ($generated@@85 $generated@@151 $generated@@152 $generated@@154))))))
 :pattern ( ($generated@@84 $generated@@151 $generated@@152 $generated@@154))
 :pattern ( ($generated@@84 $generated@@151 $generated@@154 $generated@@152))
 :pattern ( ($generated@@61 $generated@@153 $generated@@154))
))) (= ($generated@@82 $generated@@151 $generated@@152 $generated@@153)  (and ($generated@@61 $generated@@153 $generated@@152) (forall (($generated@@155 T@U) ) (!  (=> ($generated@@62 $generated@@155 $generated@@151) (and (=> (and ($generated@@61 $generated@@153 $generated@@155) (or (not (= $generated@@155 $generated@@152)) (not true))) ($generated@@84 $generated@@151 $generated@@155 $generated@@152)) (=> (and ($generated@@61 $generated@@153 $generated@@155) (or (not (= $generated@@155 $generated@@152)) (not true))) (not ($generated@@84 $generated@@151 $generated@@152 $generated@@155)))))
 :pattern ( ($generated@@84 $generated@@151 $generated@@152 $generated@@155))
 :pattern ( ($generated@@84 $generated@@151 $generated@@155 $generated@@152))
 :pattern ( ($generated@@61 $generated@@153 $generated@@155))
))))))
 :pattern ( ($generated@@82 $generated@@151 $generated@@152 $generated@@153))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (! ($generated@@67 $generated@@5 $generated@@157 $generated $generated@@156)
 :pattern ( ($generated@@67 $generated@@5 $generated@@157 $generated $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ) (! ($generated@@58 $generated@@5 $generated@@158 $generated)
 :pattern ( ($generated@@58 $generated@@5 $generated@@158 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 () Int)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 () Bool)
(declare-fun $generated@@163 () Int)
(declare-fun $generated@@164 () Int)
(declare-fun $generated@@165 () Int)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 () Int)
(declare-fun $generated@@168 () Int)
(declare-fun $generated@@169 () Int)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 () Int)
(declare-fun $generated@@172 () Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () Int)
(declare-fun $generated@@177 (T@U) Bool)
(declare-fun $generated@@178 (T@U) Bool)
(declare-fun $generated@@179 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 28) (let (($generated@@180 true))
(let (($generated@@181  (=> (and (< $generated@@159 $generated@@160) (= (ControlFlow 0 19) 16)) $generated@@180)))
(let (($generated@@182  (=> (and (<= $generated@@160 $generated@@159) (= (ControlFlow 0 18) 16)) $generated@@180)))
(let (($generated@@183  (=> (or (not (= $generated@@159 $generated@@161)) (not true)) (and (=> (= (ControlFlow 0 20) 18) $generated@@182) (=> (= (ControlFlow 0 20) 19) $generated@@181)))))
(let (($generated@@184  (=> (and (= $generated@@159 $generated@@161) (= (ControlFlow 0 17) 16)) $generated@@180)))
(let (($generated@@185  (=> (not $generated@@162) (=> (and (<= $generated@@160 $generated@@163) (< $generated@@161 $generated@@160)) (and (=> (= (ControlFlow 0 21) 20) $generated@@183) (=> (= (ControlFlow 0 21) 17) $generated@@184))))))
(let (($generated@@186  (=> (= (ControlFlow 0 13) (- 0 12)) (= $generated@@164 $generated@@159))))
(let (($generated@@187  (=> (<= $generated@@163 $generated@@160) (=> (and (= $generated@@164 $generated@@161) (= (ControlFlow 0 14) 13)) $generated@@186))))
(let (($generated@@188  (and (=> (= (ControlFlow 0 3) (- 0 7)) (or (<= 0 $generated@@165) (= (- $generated@@163 $generated@@166) $generated@@165))) (=> (or (<= 0 $generated@@165) (= (- $generated@@163 $generated@@166) $generated@@165)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (< (- $generated@@163 $generated@@166) $generated@@165)) (=> (< (- $generated@@163 $generated@@166) $generated@@165) (and (=> (= (ControlFlow 0 3) (- 0 5)) (=> $generated@@162 (<= $generated@@166 $generated@@163))) (=> (=> $generated@@162 (<= $generated@@166 $generated@@163)) (and (=> (= (ControlFlow 0 3) (- 0 4)) (=> $generated@@162 (< $generated@@167 $generated@@166))) (=> (=> $generated@@162 (< $generated@@167 $generated@@166)) (=> (= (ControlFlow 0 3) (- 0 2)) (=> $generated@@162 (or (= $generated@@159 $generated@@167) (and (<= $generated@@166 $generated@@159) (< $generated@@159 $generated@@163)))))))))))))))
(let (($generated@@189  (=> (not ($generated@@84 $generated ($generated@@55 $generated@@5 ($generated@@9 $generated@@160)) ($generated@@55 $generated@@5 ($generated@@9 $generated@@161)))) (=> (and (and (= $generated@@168 (+ $generated@@160 1)) (= $generated@@166 $generated@@168)) (and (= $generated@@167 $generated@@160) (= (ControlFlow 0 9) 3))) $generated@@188))))
(let (($generated@@190  (=> ($generated@@84 $generated ($generated@@55 $generated@@5 ($generated@@9 $generated@@160)) ($generated@@55 $generated@@5 ($generated@@9 $generated@@161))) (=> (and (and (= $generated@@169 (+ $generated@@160 1)) (= $generated@@166 $generated@@169)) (and (= $generated@@167 $generated@@161) (= (ControlFlow 0 8) 3))) $generated@@188))))
(let (($generated@@191  (=> (and (and (< $generated@@160 $generated@@163) (= $generated@@165 (- $generated@@163 $generated@@160))) (and ($generated@@67 $generated@@5 ($generated@@9 $generated@@160) $generated $generated@@170) ($generated@@67 $generated@@5 ($generated@@9 $generated@@161) $generated $generated@@170))) (and (=> (= (ControlFlow 0 10) (- 0 11)) (or (not (= $generated@@160 $generated@@161)) (not true))) (=> (or (not (= $generated@@160 $generated@@161)) (not true)) (=> (and ($generated@@85 $generated ($generated@@55 $generated@@5 ($generated@@9 $generated@@160)) ($generated@@55 $generated@@5 ($generated@@9 $generated@@161))) ($generated@@85 $generated ($generated@@55 $generated@@5 ($generated@@9 $generated@@160)) ($generated@@55 $generated@@5 ($generated@@9 $generated@@161)))) (and (=> (= (ControlFlow 0 10) 8) $generated@@190) (=> (= (ControlFlow 0 10) 9) $generated@@189))))))))
(let (($generated@@192  (=> $generated@@162 (and (=> (= (ControlFlow 0 15) 14) $generated@@187) (=> (= (ControlFlow 0 15) 10) $generated@@191)))))
(let (($generated@@193  (and (=> (= (ControlFlow 0 22) 21) $generated@@185) (=> (= (ControlFlow 0 22) 15) $generated@@192))))
(let (($generated@@194 true))
(let (($generated@@195  (=> (and (and (and (and (and (and (and (= $generated@@171 0) (not false)) (<= 1 $generated@@160)) (<= 0 $generated@@161)) (<= 0 $generated@@172)) (=> $generated@@162 (<= $generated@@160 $generated@@163))) (and (=> $generated@@162 (< $generated@@161 $generated@@160)) (=> $generated@@162 (or (= $generated@@159 $generated@@161) (and (<= $generated@@160 $generated@@159) (< $generated@@159 $generated@@163)))))) (and (and (forall (($generated@@196 T@U) ) (!  (=> (and (or (not (= $generated@@196 $generated@@173)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@170 $generated@@196) $generated@@2)))) (= ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@170 $generated@@196) ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@170 $generated@@196)))
 :pattern ( ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@170 $generated@@196))
)) ($generated@@20 $generated@@170 $generated@@170)) (and (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and (or (not (= $generated@@197 $generated@@173)) (not true)) ($generated@@8 ($generated@@26 $generated@@4 ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@170 $generated@@197) $generated@@2)))) (or (= ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@170 $generated@@197) $generated@@198) ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@170 $generated@@197) $generated@@198)) ($generated@@8 ($generated@@112 $generated@@24 $generated@@22 $generated@@4 $generated@@174 $generated@@197 $generated@@198))))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23 ($generated@@21 $generated@@24 ($generated@@25 $generated@@22 $generated@@23) $generated@@170 $generated@@197) $generated@@198))
)) (<= (- $generated@@163 $generated@@160) $generated@@172)))) (and (=> (= (ControlFlow 0 23) 1) $generated@@194) (=> (= (ControlFlow 0 23) 22) $generated@@193)))))
(let (($generated@@199  (=> (= $generated@@174 ($generated@@113 $generated@@173 $generated@@170 $generated@@2 false)) (=> (and (and (= $generated@@171 ($generated@@50 0)) (= $generated@@175 ($generated@@50 1))) (and (= $generated@@176 ($generated@@50 0)) (= $generated@@172 (- $generated@@163 $generated@@175)))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (=> $generated@@162 (<= $generated@@175 $generated@@163))) (=> (=> $generated@@162 (<= $generated@@175 $generated@@163)) (and (=> (= (ControlFlow 0 24) (- 0 26)) (=> $generated@@162 (< $generated@@176 $generated@@175))) (=> (=> $generated@@162 (< $generated@@176 $generated@@175)) (and (=> (= (ControlFlow 0 24) (- 0 25)) (=> $generated@@162 (or (= $generated@@159 $generated@@176) (and (<= $generated@@175 $generated@@159) (< $generated@@159 $generated@@163))))) (=> (=> $generated@@162 (or (= $generated@@159 $generated@@176) (and (<= $generated@@175 $generated@@159) (< $generated@@159 $generated@@163)))) (=> (= (ControlFlow 0 24) 23) $generated@@195)))))))))))
(let (($generated@@200  (=> (and ($generated@@177 $generated@@170) ($generated@@178 $generated@@170)) (=> (and (and (and (and ($generated@@58 $generated@@59 $generated@@179 ($generated@@60 $generated)) ($generated@@67 $generated@@59 $generated@@179 ($generated@@60 $generated) $generated@@170)) (= 2 $generated@@81)) (and (< 0 $generated@@163) (forall (($generated@@201 T@U) ) (! (= ($generated@@61 $generated@@179 ($generated@@55 $generated@@5 $generated@@201))  (and (<= ($generated@@50 0) ($generated@@10 $generated@@201)) (< ($generated@@10 $generated@@201) $generated@@163)))
 :pattern ( ($generated@@61 $generated@@179 ($generated@@55 $generated@@5 $generated@@201)))
)))) (and (and ($generated@@83 $generated ($generated@@55 $generated@@5 ($generated@@9 $generated@@159)) $generated@@179) (and ($generated@@82 $generated ($generated@@55 $generated@@5 ($generated@@9 $generated@@159)) $generated@@179) (and ($generated@@61 $generated@@179 ($generated@@55 $generated@@5 ($generated@@9 $generated@@159))) (forall (($generated@@202 T@U) ) (!  (and (=> (and ($generated@@61 $generated@@179 ($generated@@55 $generated@@5 $generated@@202)) (or (not (= ($generated@@10 $generated@@202) $generated@@159)) (not true))) ($generated@@84 $generated ($generated@@55 $generated@@5 $generated@@202) ($generated@@55 $generated@@5 ($generated@@9 $generated@@159)))) (=> (and ($generated@@61 $generated@@179 ($generated@@55 $generated@@5 $generated@@202)) (or (not (= ($generated@@10 $generated@@202) $generated@@159)) (not true))) (not ($generated@@84 $generated ($generated@@55 $generated@@5 ($generated@@9 $generated@@159)) ($generated@@55 $generated@@5 $generated@@202)))))
 :pattern ( ($generated@@84 $generated ($generated@@55 $generated@@5 ($generated@@9 $generated@@159)) ($generated@@55 $generated@@5 $generated@@202)))
 :pattern ( ($generated@@84 $generated ($generated@@55 $generated@@5 $generated@@202) ($generated@@55 $generated@@5 ($generated@@9 $generated@@159))))
 :pattern ( ($generated@@61 $generated@@179 ($generated@@55 $generated@@5 $generated@@202)))
))))) (= (ControlFlow 0 28) 24))) $generated@@199))))
$generated@@200)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
