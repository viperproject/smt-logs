(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () Int)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@29 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@T T@U) T@U)
(declare-fun $generated@@35 (T@U Int) T@U)
(declare-fun $generated@@36 (Int) Int)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@45 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@U T@U) Bool)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@120 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@122 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert  (and (= ($generated@@8 $generated@@30) 3) (= ($generated@@8 $generated@@32) 4)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (!  (=> (or ($generated@@27 $generated@@38 $generated@@39) (and (< 0 $generated@@25) (and (and (or (not (= $generated@@38 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@38 $generated@@31)) ($generated@@29 $generated@@32 $generated@@39 ($generated@@33 $generated@@0))))) (= ($generated@@26 $generated@@38 $generated@@39) (forall (($generated@@40 Int) ) (!  (=> (and (<= ($generated@@36 1) $generated@@40) (< $generated@@40 ($generated@@37 $generated@@39))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@39 (- $generated@@40 1)))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@39 $generated@@40)))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@35 $generated@@39 $generated@@40)))
))))
 :pattern ( ($generated@@26 $generated@@38 $generated@@39))
))))
(assert (= ($generated@@37 $generated@@41) 0))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@44 $generated@@42)  (or (= $generated@@44 $generated@@28) (= ($generated@@43 $generated@@44) $generated@@42)))
 :pattern ( ($generated@@29 $generated@@30 $generated@@44 $generated@@42))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@45 $generated@@30 $generated@@46 $generated@@31 $generated@@47) ($generated@@45 $generated@@30 $generated@@46 $generated@@42 $generated@@47))
 :pattern ( ($generated@@45 $generated@@30 $generated@@46 $generated@@31 $generated@@47))
 :pattern ( ($generated@@45 $generated@@30 $generated@@46 $generated@@42 $generated@@47))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@8 $generated@@49) 5)) (= ($generated@@8 $generated@@50) 6)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@8 ($generated@@51 $generated@@66 $generated@@67)) 7))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@45 $generated@@30 $generated@@72 $generated@@42 $generated@@73)  (or (= $generated@@72 $generated@@28) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@30 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@72) $generated@@4)))))
 :pattern ( ($generated@@45 $generated@@30 $generated@@72 $generated@@42 $generated@@73))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@36 $generated@@74) $generated@@74)
 :pattern ( ($generated@@36 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (! (= ($generated@@78 $generated@@79 $generated@@80)  (and (= ($generated@@37 $generated@@79) ($generated@@37 $generated@@80)) (forall (($generated@@81 Int) ) (!  (=> (and (<= 0 $generated@@81) (< $generated@@81 ($generated@@37 $generated@@79))) (= ($generated@@35 $generated@@79 $generated@@81) ($generated@@35 $generated@@80 $generated@@81)))
 :pattern ( ($generated@@35 $generated@@79 $generated@@81))
 :pattern ( ($generated@@35 $generated@@80 $generated@@81))
))))
 :pattern ( ($generated@@78 $generated@@79 $generated@@80))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@82 $generated@@84 ($generated@@34 $generated@@84 $generated@@83)) $generated@@83)
 :pattern ( ($generated@@34 $generated@@84 $generated@@83))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (or ($generated@@27 $generated@@85 ($generated@@75 $generated@@32 $generated@@86)) (and (< 0 $generated@@25) (and (and (or (not (= $generated@@85 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@85 $generated@@31)) ($generated@@29 $generated@@32 $generated@@86 ($generated@@33 $generated@@0))))) (= ($generated@@26 $generated@@85 ($generated@@75 $generated@@32 $generated@@86)) (forall (($generated@@87 Int) ) (!  (=> (and (<= ($generated@@36 1) $generated@@87) (< $generated@@87 ($generated@@37 ($generated@@75 $generated@@32 $generated@@86)))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 ($generated@@75 $generated@@32 $generated@@86) (- $generated@@87 1)))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 ($generated@@75 $generated@@32 $generated@@86) $generated@@87)))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@35 $generated@@86 $generated@@87)))
))))
 :weight 3
 :pattern ( ($generated@@26 $generated@@85 ($generated@@75 $generated@@32 $generated@@86)))
))))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (or ($generated@@27 $generated@@88 $generated@@89) (and (< 0 $generated@@25) (and (and (or (not (= $generated@@88 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@88 $generated@@31)) ($generated@@29 $generated@@32 $generated@@89 ($generated@@33 $generated@@0))))) (and (=> ($generated@@26 $generated@@88 $generated@@89) (forall (($generated@@90 Int) ($generated@@91 Int) )  (=> (and (and (<= ($generated@@36 0) $generated@@90) (< $generated@@90 $generated@@91)) (< $generated@@91 ($generated@@37 $generated@@89))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@89 $generated@@90))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@89 $generated@@91))))))) (=> (forall (($generated@@92 Int) ($generated@@93 Int) ) (!  (=> (and (and (<= ($generated@@36 0) $generated@@92) (< $generated@@92 $generated@@93)) (< $generated@@93 ($generated@@37 $generated@@89))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@89 $generated@@92))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@89 $generated@@93)))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@35 $generated@@89 $generated@@93)) ($generated@@34 $generated@@10 ($generated@@35 $generated@@89 $generated@@92)))
)) ($generated@@26 $generated@@88 $generated@@89))))
 :pattern ( ($generated@@26 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@82 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@45 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@82 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ) (!  (=> ($generated@@99 $generated@@100 $generated@@42) (and (= ($generated@@82 $generated@@30 ($generated@@34 $generated@@30 $generated@@100)) $generated@@100) ($generated@@29 $generated@@30 ($generated@@34 $generated@@30 $generated@@100) $generated@@42)))
 :pattern ( ($generated@@99 $generated@@100 $generated@@42))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@99 $generated@@101 $generated@@31) (and (= ($generated@@82 $generated@@30 ($generated@@34 $generated@@30 $generated@@101)) $generated@@101) ($generated@@29 $generated@@30 ($generated@@34 $generated@@30 $generated@@101) $generated@@31)))
 :pattern ( ($generated@@99 $generated@@101 $generated@@31))
)))
(assert (forall (($generated@@102 T@U) ) (! (= ($generated@@29 $generated@@30 $generated@@102 $generated@@31)  (and ($generated@@29 $generated@@30 $generated@@102 $generated@@42) (or (not (= $generated@@102 $generated@@28)) (not true))))
 :pattern ( ($generated@@29 $generated@@30 $generated@@102 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 $generated@@102 $generated@@42))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> ($generated@@78 $generated@@103 $generated@@104) (= $generated@@103 $generated@@104))
 :pattern ( ($generated@@78 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@99 $generated@@105 $generated@@0) (and (= ($generated@@82 $generated@@10 ($generated@@34 $generated@@10 $generated@@105)) $generated@@105) ($generated@@29 $generated@@10 ($generated@@34 $generated@@10 $generated@@105) $generated@@0)))
 :pattern ( ($generated@@99 $generated@@105 $generated@@0))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@99 $generated@@106 $generated) (and (= ($generated@@82 $generated@@9 ($generated@@34 $generated@@9 $generated@@106)) $generated@@106) ($generated@@29 $generated@@9 ($generated@@34 $generated@@9 $generated@@106) $generated)))
 :pattern ( ($generated@@99 $generated@@106 $generated))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@99 ($generated@@82 $generated@@109 $generated@@107) $generated@@108) ($generated@@29 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@99 ($generated@@82 $generated@@109 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ) (! (<= 0 ($generated@@37 $generated@@110))
 :pattern ( ($generated@@37 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@45 $generated@@32 $generated@@111 ($generated@@33 $generated@@112) $generated@@113) (forall (($generated@@114 Int) ) (!  (=> (and (<= 0 $generated@@114) (< $generated@@114 ($generated@@37 $generated@@111))) ($generated@@94 ($generated@@35 $generated@@111 $generated@@114) $generated@@112 $generated@@113))
 :pattern ( ($generated@@35 $generated@@111 $generated@@114))
)))
 :pattern ( ($generated@@45 $generated@@32 $generated@@111 ($generated@@33 $generated@@112) $generated@@113))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@115 ($generated@@33 $generated@@116)) $generated@@116)
 :pattern ( ($generated@@33 $generated@@116))
)))
(assert (forall (($generated@@117 T@U) ) (! (= ($generated@@24 ($generated@@33 $generated@@117)) $generated@@3)
 :pattern ( ($generated@@33 $generated@@117))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@34 $generated@@119 ($generated@@82 $generated@@119 $generated@@118)) $generated@@118)
 :pattern ( ($generated@@82 $generated@@119 $generated@@118))
)))
(assert  (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@120 $generated@@123 $generated@@124 $generated@@125 ($generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@128 $generated@@129) $generated@@126)
 :weight 0
)) (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (or (= $generated@@135 $generated@@137) (= ($generated@@120 $generated@@130 $generated@@131 $generated@@132 ($generated@@122 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@137 $generated@@138) ($generated@@120 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@137 $generated@@138)))
 :weight 0
)) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@120 $generated@@139 $generated@@140 $generated@@141 ($generated@@122 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@144 $generated@@145 $generated@@142) $generated@@146 $generated@@147) ($generated@@120 $generated@@139 $generated@@140 $generated@@141 $generated@@143 $generated@@146 $generated@@147)))
 :weight 0
)))))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Bool) ($generated@@152 T@U) ($generated@@153 T@U) ) (! (= ($generated@@13 ($generated@@120 $generated@@30 $generated@@49 $generated@@9 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))  (=> (and (or (not (= $generated@@152 $generated@@148)) (not true)) ($generated@@13 ($generated@@34 $generated@@9 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@30 ($generated@@51 $generated@@49 $generated@@50) $generated@@149 $generated@@152) $generated@@150)))) $generated@@151))
 :pattern ( ($generated@@120 $generated@@30 $generated@@49 $generated@@9 ($generated@@121 $generated@@148 $generated@@149 $generated@@150 $generated@@151) $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@99 $generated@@154 ($generated@@33 $generated@@155)) (and (= ($generated@@82 $generated@@32 ($generated@@34 $generated@@32 $generated@@154)) $generated@@154) ($generated@@29 $generated@@32 ($generated@@34 $generated@@32 $generated@@154) ($generated@@33 $generated@@155))))
 :pattern ( ($generated@@99 $generated@@154 ($generated@@33 $generated@@155)))
)))
(assert  (=> (<= 0 $generated@@25) (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (or ($generated@@27 ($generated@@75 $generated@@30 $generated@@156) ($generated@@75 $generated@@32 $generated@@157)) (and (< 0 $generated@@25) (and (and (or (not (= $generated@@156 $generated@@28)) (not true)) ($generated@@29 $generated@@30 $generated@@156 $generated@@31)) ($generated@@29 $generated@@32 $generated@@157 ($generated@@33 $generated@@0))))) (= ($generated@@26 ($generated@@75 $generated@@30 $generated@@156) ($generated@@75 $generated@@32 $generated@@157)) (forall (($generated@@158 Int) ) (!  (=> (and (<= ($generated@@36 1) $generated@@158) (< $generated@@158 ($generated@@37 ($generated@@75 $generated@@32 $generated@@157)))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 ($generated@@75 $generated@@32 $generated@@157) (- $generated@@158 1)))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 ($generated@@75 $generated@@32 $generated@@157) $generated@@158)))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@35 $generated@@157 $generated@@158)))
))))
 :weight 3
 :pattern ( ($generated@@26 ($generated@@75 $generated@@30 $generated@@156) ($generated@@75 $generated@@32 $generated@@157)))
))))
(assert (= ($generated@@24 $generated@@42) $generated@@5))
(assert (= ($generated@@159 $generated@@42) $generated@@7))
(assert (= ($generated@@24 $generated@@31) $generated@@6))
(assert (= ($generated@@159 $generated@@31) $generated@@7))
(assert (forall (($generated@@160 Int) ) (! (= ($generated@@82 $generated@@10 ($generated@@14 ($generated@@36 $generated@@160))) ($generated@@75 $generated@@50 ($generated@@82 $generated@@10 ($generated@@14 $generated@@160))))
 :pattern ( ($generated@@82 $generated@@10 ($generated@@14 ($generated@@36 $generated@@160))))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@T) ) (! (= ($generated@@82 $generated@@162 ($generated@@75 $generated@@162 $generated@@161)) ($generated@@75 $generated@@50 ($generated@@82 $generated@@162 $generated@@161)))
 :pattern ( ($generated@@82 $generated@@162 ($generated@@75 $generated@@162 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ) (!  (=> (= ($generated@@37 $generated@@163) 0) (= $generated@@163 $generated@@41))
 :pattern ( ($generated@@37 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! ($generated@@45 $generated@@10 $generated@@165 $generated@@0 $generated@@164)
 :pattern ( ($generated@@45 $generated@@10 $generated@@165 $generated@@0 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! ($generated@@45 $generated@@9 $generated@@167 $generated $generated@@166)
 :pattern ( ($generated@@45 $generated@@9 $generated@@167 $generated $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@29 $generated@@32 $generated@@168 ($generated@@33 $generated@@169)) (forall (($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@37 $generated@@168))) ($generated@@99 ($generated@@35 $generated@@168 $generated@@170) $generated@@169))
 :pattern ( ($generated@@35 $generated@@168 $generated@@170))
)))
 :pattern ( ($generated@@29 $generated@@32 $generated@@168 ($generated@@33 $generated@@169)))
)))
(assert (forall (($generated@@171 T@U) ) (! ($generated@@29 $generated@@10 $generated@@171 $generated@@0)
 :pattern ( ($generated@@29 $generated@@10 $generated@@171 $generated@@0))
)))
(assert (forall (($generated@@172 T@U) ) (! ($generated@@29 $generated@@9 $generated@@172 $generated)
 :pattern ( ($generated@@29 $generated@@9 $generated@@172 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () Int)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 (T@U) Int)
(declare-fun $generated@@178 () Int)
(declare-fun $generated@@179 () Int)
(declare-fun $generated@@180 () Int)
(declare-fun $generated@@181 () Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(declare-fun $generated@@184 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 42) (let (($generated@@185  (and (=> (= (ControlFlow 0 31) (- 0 32)) (=> ($generated@@26 $generated@@173 $generated@@174) (forall (($generated@@186 Int) ($generated@@187 Int) )  (=> (and (forall (($generated@@188 Int) )  (=> (and (<= 0 $generated@@188) (< $generated@@188 $generated@@187)) (=> (and (and (<= ($generated@@36 0) $generated@@186) (< $generated@@186 $generated@@188)) (< $generated@@188 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@186))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@188))))))) true) (=> (and (and (<= ($generated@@36 0) $generated@@186) (< $generated@@186 $generated@@187)) (< $generated@@187 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@186))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@187))))))))) (=> (=> ($generated@@26 $generated@@173 $generated@@174) (forall (($generated@@189 Int) ($generated@@190 Int) )  (=> (and (forall (($generated@@191 Int) )  (=> (and (<= 0 $generated@@191) (< $generated@@191 $generated@@190)) (=> (and (and (<= ($generated@@36 0) $generated@@189) (< $generated@@189 $generated@@191)) (< $generated@@191 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@189))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@191))))))) true) (=> (and (and (<= ($generated@@36 0) $generated@@189) (< $generated@@189 $generated@@190)) (< $generated@@190 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@189))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@190)))))))) (=> (= (ControlFlow 0 31) (- 0 30)) (=> (forall (($generated@@192 Int) ($generated@@193 Int) ) (!  (=> (and (and (<= ($generated@@36 0) $generated@@192) (< $generated@@192 $generated@@193)) (< $generated@@193 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@192))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@193)))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@193)) ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@192)))
)) ($generated@@26 $generated@@173 $generated@@174)))))))
(let (($generated@@194  (=> (= ($generated@@26 $generated@@173 $generated@@174) (forall (($generated@@195 Int) ) (!  (=> (and (<= ($generated@@36 1) $generated@@195) (< $generated@@195 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 (- $generated@@195 1)))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@195)))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@195)))
))) (=> (and ($generated@@29 $generated@@9 ($generated@@12 ($generated@@26 $generated@@173 $generated@@174)) $generated) (= (ControlFlow 0 33) 31)) $generated@@185))))
(let (($generated@@196  (=> (and (not (and (<= ($generated@@36 1) $generated@@175) (< $generated@@175 ($generated@@37 $generated@@174)))) (= (ControlFlow 0 37) 33)) $generated@@194)))
(let (($generated@@197  (=> (and (<= ($generated@@36 1) $generated@@175) (< $generated@@175 ($generated@@37 $generated@@174))) (and (=> (= (ControlFlow 0 34) (- 0 36)) (and (<= 0 (- $generated@@175 1)) (< (- $generated@@175 1) ($generated@@37 $generated@@174)))) (=> (and (<= 0 (- $generated@@175 1)) (< (- $generated@@175 1) ($generated@@37 $generated@@174))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@37 $generated@@174)))) (=> (and (<= 0 $generated@@175) (< $generated@@175 ($generated@@37 $generated@@174))) (=> (= (ControlFlow 0 34) 33) $generated@@194))))))))
(let (($generated@@198  (=> (< $generated@@175 ($generated@@36 1)) (and (=> (= (ControlFlow 0 39) 34) $generated@@197) (=> (= (ControlFlow 0 39) 37) $generated@@196)))))
(let (($generated@@199  (=> (<= ($generated@@36 1) $generated@@175) (and (=> (= (ControlFlow 0 38) 34) $generated@@197) (=> (= (ControlFlow 0 38) 37) $generated@@196)))))
(let (($generated@@200  (and (=> (= (ControlFlow 0 40) 38) $generated@@199) (=> (= (ControlFlow 0 40) 39) $generated@@198))))
(let (($generated@@201 true))
(let (($generated@@202 true))
(let (($generated@@203  (=> (forall (($generated@@204 Int) ($generated@@205 Int) ) (!  (=> (and (and (<= ($generated@@36 0) $generated@@204) (< $generated@@204 $generated@@205)) (< $generated@@205 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@204))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@205)))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@205)) ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@204)))
)) (=> (and ($generated@@94 ($generated@@82 $generated@@30 $generated@@173) $generated@@42 $generated@@176) ($generated@@45 $generated@@32 $generated@@174 ($generated@@33 $generated@@0) $generated@@176)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (and (= $generated@@173 $generated@@173) ($generated@@78 $generated@@174 $generated@@174)) (< ($generated@@177 $generated@@174) ($generated@@177 $generated@@174)))) (=> (or (and (= $generated@@173 $generated@@173) ($generated@@78 $generated@@174 $generated@@174)) (< ($generated@@177 $generated@@174) ($generated@@177 $generated@@174))) (=> (or (and (= $generated@@173 $generated@@173) ($generated@@78 $generated@@174 $generated@@174)) ($generated@@27 $generated@@173 $generated@@174)) (=> (and ($generated@@26 $generated@@173 $generated@@174) (= (ControlFlow 0 5) 3)) $generated@@202))))))))
(let (($generated@@206  (=> (and (not (and (and (<= ($generated@@36 0) $generated@@178) (< $generated@@178 $generated@@179)) (< $generated@@179 ($generated@@37 $generated@@174)))) (= (ControlFlow 0 10) 5)) $generated@@203)))
(let (($generated@@207  (=> (and (and (<= ($generated@@36 0) $generated@@178) (< $generated@@178 $generated@@179)) (< $generated@@179 ($generated@@37 $generated@@174))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@178) (< $generated@@178 ($generated@@37 $generated@@174)))) (=> (and (<= 0 $generated@@178) (< $generated@@178 ($generated@@37 $generated@@174))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@37 $generated@@174)))) (=> (and (<= 0 $generated@@179) (< $generated@@179 ($generated@@37 $generated@@174))) (=> (= (ControlFlow 0 7) 5) $generated@@203))))))))
(let (($generated@@208  (=> (not (and (<= ($generated@@36 0) $generated@@178) (< $generated@@178 $generated@@179))) (and (=> (= (ControlFlow 0 12) 7) $generated@@207) (=> (= (ControlFlow 0 12) 10) $generated@@206)))))
(let (($generated@@209  (=> (and (<= ($generated@@36 0) $generated@@178) (< $generated@@178 $generated@@179)) (and (=> (= (ControlFlow 0 11) 7) $generated@@207) (=> (= (ControlFlow 0 11) 10) $generated@@206)))))
(let (($generated@@210  (=> (< $generated@@178 ($generated@@36 0)) (and (=> (= (ControlFlow 0 14) 11) $generated@@209) (=> (= (ControlFlow 0 14) 12) $generated@@208)))))
(let (($generated@@211  (=> (<= ($generated@@36 0) $generated@@178) (and (=> (= (ControlFlow 0 13) 11) $generated@@209) (=> (= (ControlFlow 0 13) 12) $generated@@208)))))
(let (($generated@@212  (and (=> (= (ControlFlow 0 15) 13) $generated@@211) (=> (= (ControlFlow 0 15) 14) $generated@@210))))
(let (($generated@@213  (=> (and (=> (forall (($generated@@214 Int) ($generated@@215 Int) ) (!  (=> (and (and (<= ($generated@@36 0) $generated@@214) (< $generated@@214 $generated@@215)) (< $generated@@215 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@214))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@215)))))
 :pattern ( ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@215)) ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@214)))
)) ($generated@@26 $generated@@173 $generated@@174)) (= (ControlFlow 0 4) 3)) $generated@@202)))
(let (($generated@@216 true))
(let (($generated@@217  (=> (forall (($generated@@218 Int) ($generated@@219 Int) )  (=> (and (and (<= ($generated@@36 0) $generated@@218) (< $generated@@218 $generated@@219)) (< $generated@@219 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@218))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@219)))))) (and (and (=> (= (ControlFlow 0 18) 4) $generated@@213) (=> (= (ControlFlow 0 18) 15) $generated@@212)) (=> (= (ControlFlow 0 18) 2) $generated@@216)))))
(let (($generated@@220  (=> (and (not (and (and (<= ($generated@@36 0) $generated@@180) (< $generated@@180 $generated@@181)) (< $generated@@181 ($generated@@37 $generated@@174)))) (= (ControlFlow 0 22) 18)) $generated@@217)))
(let (($generated@@221  (=> (and (and (<= ($generated@@36 0) $generated@@180) (< $generated@@180 $generated@@181)) (< $generated@@181 ($generated@@37 $generated@@174))) (and (=> (= (ControlFlow 0 19) (- 0 21)) (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@37 $generated@@174)))) (=> (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@37 $generated@@174))) (and (=> (= (ControlFlow 0 19) (- 0 20)) (and (<= 0 $generated@@181) (< $generated@@181 ($generated@@37 $generated@@174)))) (=> (and (<= 0 $generated@@181) (< $generated@@181 ($generated@@37 $generated@@174))) (=> (= (ControlFlow 0 19) 18) $generated@@217))))))))
(let (($generated@@222  (=> (not (and (<= ($generated@@36 0) $generated@@180) (< $generated@@180 $generated@@181))) (and (=> (= (ControlFlow 0 24) 19) $generated@@221) (=> (= (ControlFlow 0 24) 22) $generated@@220)))))
(let (($generated@@223  (=> (and (<= ($generated@@36 0) $generated@@180) (< $generated@@180 $generated@@181)) (and (=> (= (ControlFlow 0 23) 19) $generated@@221) (=> (= (ControlFlow 0 23) 22) $generated@@220)))))
(let (($generated@@224  (=> (< $generated@@180 ($generated@@36 0)) (and (=> (= (ControlFlow 0 26) 23) $generated@@223) (=> (= (ControlFlow 0 26) 24) $generated@@222)))))
(let (($generated@@225  (=> (<= ($generated@@36 0) $generated@@180) (and (=> (= (ControlFlow 0 25) 23) $generated@@223) (=> (= (ControlFlow 0 25) 24) $generated@@222)))))
(let (($generated@@226  (and (=> (= (ControlFlow 0 27) 25) $generated@@225) (=> (= (ControlFlow 0 27) 26) $generated@@224))))
(let (($generated@@227  (=> (and ($generated@@94 ($generated@@82 $generated@@30 $generated@@173) $generated@@42 $generated@@176) ($generated@@45 $generated@@32 $generated@@174 ($generated@@33 $generated@@0) $generated@@176)) (and (=> (= (ControlFlow 0 28) (- 0 29)) (or (and (= $generated@@173 $generated@@173) ($generated@@78 $generated@@174 $generated@@174)) (< ($generated@@177 $generated@@174) ($generated@@177 $generated@@174)))) (=> (or (and (= $generated@@173 $generated@@173) ($generated@@78 $generated@@174 $generated@@174)) (< ($generated@@177 $generated@@174) ($generated@@177 $generated@@174))) (=> (and (or (and (= $generated@@173 $generated@@173) ($generated@@78 $generated@@174 $generated@@174)) ($generated@@27 $generated@@173 $generated@@174)) ($generated@@26 $generated@@173 $generated@@174)) (and (=> (= (ControlFlow 0 28) 27) $generated@@226) (=> (= (ControlFlow 0 28) 17) $generated@@201))))))))
(let (($generated@@228  (=> (=> ($generated@@26 $generated@@173 $generated@@174) (forall (($generated@@229 Int) ($generated@@230 Int) )  (=> (and (and (<= ($generated@@36 0) $generated@@229) (< $generated@@229 $generated@@230)) (< $generated@@230 ($generated@@37 $generated@@174))) (<= ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@229))) ($generated@@15 ($generated@@34 $generated@@10 ($generated@@35 $generated@@174 $generated@@230))))))) (and (and (=> (= (ControlFlow 0 16) 4) $generated@@213) (=> (= (ControlFlow 0 16) 15) $generated@@212)) (=> (= (ControlFlow 0 16) 2) $generated@@216)))))
(let (($generated@@231 true))
(let (($generated@@232  (=> (= $generated@@182 ($generated@@121 $generated@@28 $generated@@176 $generated@@4 false)) (and (and (and (=> (= (ControlFlow 0 41) 40) $generated@@200) (=> (= (ControlFlow 0 41) 1) $generated@@231)) (=> (= (ControlFlow 0 41) 28) $generated@@227)) (=> (= (ControlFlow 0 41) 16) $generated@@228)))))
(let (($generated@@233  (=> (and ($generated@@183 $generated@@176) ($generated@@184 $generated@@176)) (=> (and (and (and (or (not (= $generated@@173 $generated@@28)) (not true)) (and ($generated@@29 $generated@@30 $generated@@173 $generated@@31) ($generated@@45 $generated@@30 $generated@@173 $generated@@31 $generated@@176))) ($generated@@29 $generated@@32 $generated@@174 ($generated@@33 $generated@@0))) (and (= 0 $generated@@25) (= (ControlFlow 0 42) 41))) $generated@@232))))
$generated@@233)))))))))))))))))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
