(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@46 (T@U T@U) Bool)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@49 (T@U) Int)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 (T@U) T@U)
(declare-fun $generated@@58 () T@U)
(declare-fun $generated@@59 (T@U T@U) T@U)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@89 () Int)
(declare-fun $generated@@90 (T@U T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@91 (T@U) T@U)
(declare-fun $generated@@92 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@93 () T@T)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@95 (T@U) Bool)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@100 () T@T)
(declare-fun $generated@@111 (T@T T@U) T@U)
(declare-fun $generated@@114 (T@U) Bool)
(declare-fun $generated@@123 (T@U) Bool)
(declare-fun $generated@@127 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@128 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@129 () T@U)
(declare-fun $generated@@140 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U T@U T@U) Bool)
(declare-fun $generated@@153 (T@U Int) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@191 (T@U) T@U)
(declare-fun $generated@@194 (T@U) T@U)
(declare-fun $generated@@199 (T@U) Int)
(declare-fun $generated@@206 (T@U) T@U)
(declare-fun $generated@@216 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@217 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@218 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@255 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@3) 0))
(assert (= ($generated@@31 $generated) $generated@@0))
(assert (= ($generated@@32 $generated@@3) $generated@@4))
(assert  (and (= ($generated@@14 $generated@@34) 3) (= ($generated@@14 $generated@@37) 4)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ) (! (= ($generated@@33 $generated@@34 ($generated@@35 $generated@@39 $generated@@40) $generated@@36)  (and ($generated@@33 $generated@@34 $generated@@39 $generated@@36) ($generated@@33 $generated@@37 $generated@@40 $generated@@38)))
 :pattern ( ($generated@@33 $generated@@34 ($generated@@35 $generated@@39 $generated@@40) $generated@@36))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (!  (=> ($generated@@42 $generated@@45) (= ($generated@@41 $generated@@34 ($generated@@35 $generated@@43 $generated@@44) $generated@@36 $generated@@45)  (and ($generated@@41 $generated@@34 $generated@@43 $generated@@36 $generated@@45) ($generated@@41 $generated@@37 $generated@@44 $generated@@38 $generated@@45))))
 :pattern ( ($generated@@41 $generated@@34 ($generated@@35 $generated@@43 $generated@@44) $generated@@36 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ) (!  (not ($generated@@46 $generated@@47 $generated@@48))
 :pattern ( ($generated@@46 $generated@@47 $generated@@48))
)))
(assert (= ($generated@@49 $generated@@47) 0))
(assert (= ($generated@@50 $generated@@51) $generated@@9))
(assert (forall (($generated@@55 T@U) ) (! (= ($generated@@33 $generated@@37 $generated@@55 $generated@@52)  (or (= $generated@@55 $generated@@53) (= ($generated@@54 $generated@@55) $generated@@52)))
 :pattern ( ($generated@@33 $generated@@37 $generated@@55 $generated@@52))
)))
(assert (forall (($generated@@56 T@U) ($generated@@57 T@U) ) (! (= ($generated@@41 $generated@@37 $generated@@56 $generated@@38 $generated@@57) ($generated@@41 $generated@@37 $generated@@56 $generated@@52 $generated@@57))
 :pattern ( ($generated@@41 $generated@@37 $generated@@56 $generated@@38 $generated@@57))
 :pattern ( ($generated@@41 $generated@@37 $generated@@56 $generated@@52 $generated@@57))
)))
(assert ($generated@@33 $generated@@34 $generated@@51 $generated@@36))
(assert (= ($generated@@30 $generated@@58) 0))
(assert (= ($generated@@59 $generated@@8 $generated@@13) $generated@@58))
(assert  (not ($generated@@60 $generated@@58)))
(assert (forall (($generated@@61 T@U) ) (!  (=> ($generated@@42 $generated@@61) ($generated@@41 $generated@@34 $generated@@51 $generated@@36 $generated@@61))
 :pattern ( ($generated@@41 $generated@@34 $generated@@51 $generated@@36 $generated@@61))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@70 $generated@@71 ($generated@@67 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@74) $generated@@72)
 :weight 0
)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@79 $generated@@80) (= ($generated@@63 $generated@@75 $generated@@76 ($generated@@67 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@80) ($generated@@63 $generated@@75 $generated@@76 $generated@@78 $generated@@80)))
 :weight 0
))) (= ($generated@@14 $generated@@64) 5)) (= ($generated@@14 $generated@@65) 6)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (= ($generated@@14 ($generated@@66 $generated@@81 $generated@@82)) 7))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@68 ($generated@@66 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@66 $generated@@83 $generated@@84))
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@66 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@41 $generated@@37 $generated@@87 $generated@@52 $generated@@88)  (or (= $generated@@87 $generated@@53) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@88 $generated@@87) $generated@@3)))))
 :pattern ( ($generated@@41 $generated@@37 $generated@@87 $generated@@52 $generated@@88))
)))
(assert  (and (= ($generated@@14 $generated@@93) 8) (= ($generated@@14 $generated@@100) 9)))
(assert  (=> (<= 2 $generated@@89) (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (or ($generated@@92 $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106) (and (< 2 $generated@@89) (and (and (and (and ($generated@@42 $generated@@102) ($generated@@33 $generated@@37 $generated@@103 $generated@@38)) ($generated@@33 $generated@@34 $generated@@104 $generated@@36)) ($generated@@33 $generated@@37 $generated@@105 $generated@@38)) ($generated@@33 $generated@@93 $generated@@106 ($generated@@94 $generated@@38))))) (and (=> (not ($generated@@95 $generated@@104)) (let (($generated@@107 ($generated@@96 $generated@@104)))
(let (($generated@@108 ($generated@@97 $generated@@104)))
 (=> ($generated@@98 $generated@@106 ($generated@@99 $generated@@37 $generated@@107)) (=> ($generated@@46 ($generated@@62 $generated@@100 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@102 $generated@@107) $generated@@58)) ($generated@@99 $generated@@37 $generated@@105)) ($generated@@92 $generated@@102 $generated@@103 $generated@@108 $generated@@107 $generated@@106)))))) (= ($generated@@90 ($generated@@91 $generated@@101) $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106) (ite ($generated@@95 $generated@@104) (= $generated@@103 $generated@@105) (let (($generated@@109 ($generated@@96 $generated@@104)))
(let (($generated@@110 ($generated@@97 $generated@@104)))
 (and (and ($generated@@98 $generated@@106 ($generated@@99 $generated@@37 $generated@@109)) ($generated@@46 ($generated@@62 $generated@@100 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@102 $generated@@109) $generated@@58)) ($generated@@99 $generated@@37 $generated@@105))) ($generated@@90 $generated@@101 $generated@@102 $generated@@103 $generated@@110 $generated@@109 $generated@@106))))))))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@101) $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106) ($generated@@42 $generated@@102))
))))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@111 $generated@@113 $generated@@112) $generated@@112)
 :pattern ( ($generated@@111 $generated@@113 $generated@@112))
)))
(assert  (=> (<= 2 $generated@@89) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (or ($generated@@92 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@120) (and (< 2 $generated@@89) (and (and (and (and ($generated@@42 $generated@@116) (and ($generated@@33 $generated@@37 $generated@@117 $generated@@38) ($generated@@41 $generated@@37 $generated@@117 $generated@@38 $generated@@116))) (and ($generated@@33 $generated@@34 $generated@@118 $generated@@36) ($generated@@41 $generated@@34 $generated@@118 $generated@@36 $generated@@116))) (and ($generated@@33 $generated@@37 $generated@@119 $generated@@38) ($generated@@41 $generated@@37 $generated@@119 $generated@@38 $generated@@116))) (and ($generated@@33 $generated@@93 $generated@@120 ($generated@@94 $generated@@38)) ($generated@@41 $generated@@93 $generated@@120 ($generated@@94 $generated@@38) $generated@@116))))) (forall (($generated@@121 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@121) ($generated@@114 $generated@@121)) (and ($generated@@90 $generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@120) (and (and ($generated@@41 $generated@@37 $generated@@117 $generated@@38 $generated@@121) ($generated@@41 $generated@@37 $generated@@119 $generated@@38 $generated@@121)) ($generated@@41 $generated@@93 $generated@@120 ($generated@@94 $generated@@38) $generated@@121)))) ($generated@@41 $generated@@34 $generated@@118 $generated@@36 $generated@@121))
 :pattern ( ($generated@@114 $generated@@121))
)))
 :pattern ( ($generated@@90 $generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119 $generated@@120))
))))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@95 $generated@@122) (= ($generated@@50 $generated@@122) $generated@@9))
 :pattern ( ($generated@@95 $generated@@122))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@123 $generated@@124) (= ($generated@@50 $generated@@124) $generated@@10))
 :pattern ( ($generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@T) ) (! (= ($generated@@99 $generated@@126 ($generated@@62 $generated@@126 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@62 $generated@@126 $generated@@125))
)))
(assert  (=> (<= 3 $generated@@89) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> (or ($generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@133) (and (< 3 $generated@@89) (and (and (and ($generated@@42 $generated@@130) ($generated@@33 $generated@@37 $generated@@131 $generated@@38)) ($generated@@33 $generated@@37 $generated@@132 $generated@@38)) ($generated@@33 $generated@@93 $generated@@133 ($generated@@94 $generated@@38))))) (and (forall (($generated@@134 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@134 $generated@@36) ($generated@@92 $generated@@130 $generated@@131 $generated@@134 $generated@@132 $generated@@133))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@129) $generated@@130 $generated@@131 $generated@@134 $generated@@132 $generated@@133))
)) (= ($generated@@127 $generated@@130 $generated@@131 $generated@@132 $generated@@133) (exists (($generated@@135 T@U) ) (!  (and ($generated@@33 $generated@@34 $generated@@135 $generated@@36) ($generated@@90 ($generated@@91 $generated@@129) $generated@@130 $generated@@131 $generated@@135 $generated@@132 $generated@@133))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@129) $generated@@130 $generated@@131 $generated@@135 $generated@@132 $generated@@133))
)))))
 :pattern ( ($generated@@127 $generated@@130 $generated@@131 $generated@@132 $generated@@133) ($generated@@42 $generated@@130))
))))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@123 $generated@@136) (exists (($generated@@137 T@U) ($generated@@138 T@U) ) (= $generated@@136 ($generated@@35 $generated@@137 $generated@@138))))
 :pattern ( ($generated@@123 $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@95 $generated@@139) (= $generated@@139 $generated@@51))
 :pattern ( ($generated@@95 $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@33 $generated@@93 $generated@@141 ($generated@@94 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> ($generated@@98 $generated@@141 $generated@@143) ($generated@@140 $generated@@143 $generated@@142))
 :pattern ( ($generated@@98 $generated@@141 $generated@@143))
)))
 :pattern ( ($generated@@33 $generated@@93 $generated@@141 ($generated@@94 $generated@@142)))
)))
(assert ($generated@@60 $generated@@3))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@T) ) (! (= ($generated@@144 ($generated@@99 $generated@@148 $generated@@145) $generated@@146 $generated@@147) ($generated@@41 $generated@@148 $generated@@145 $generated@@146 $generated@@147))
 :pattern ( ($generated@@144 ($generated@@99 $generated@@148 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@140 $generated@@149 $generated@@38) (and (= ($generated@@99 $generated@@37 ($generated@@62 $generated@@37 $generated@@149)) $generated@@149) ($generated@@33 $generated@@37 ($generated@@62 $generated@@37 $generated@@149) $generated@@38)))
 :pattern ( ($generated@@140 $generated@@149 $generated@@38))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@140 $generated@@150 $generated@@36) (and (= ($generated@@99 $generated@@34 ($generated@@62 $generated@@34 $generated@@150)) $generated@@150) ($generated@@33 $generated@@34 ($generated@@62 $generated@@34 $generated@@150) $generated@@36)))
 :pattern ( ($generated@@140 $generated@@150 $generated@@36))
)))
(assert (forall (($generated@@151 T@U) ) (!  (=> ($generated@@140 $generated@@151 $generated@@52) (and (= ($generated@@99 $generated@@37 ($generated@@62 $generated@@37 $generated@@151)) $generated@@151) ($generated@@33 $generated@@37 ($generated@@62 $generated@@37 $generated@@151) $generated@@52)))
 :pattern ( ($generated@@140 $generated@@151 $generated@@52))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@33 $generated@@37 $generated@@152 $generated@@38)  (and ($generated@@33 $generated@@37 $generated@@152 $generated@@52) (or (not (= $generated@@152 $generated@@53)) (not true))))
 :pattern ( ($generated@@33 $generated@@37 $generated@@152 $generated@@38))
 :pattern ( ($generated@@33 $generated@@37 $generated@@152 $generated@@52))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@46 $generated@@154 $generated@@155) (exists (($generated@@156 Int) ) (!  (and (and (<= 0 $generated@@156) (< $generated@@156 ($generated@@49 $generated@@154))) (= ($generated@@153 $generated@@154 $generated@@156) $generated@@155))
 :pattern ( ($generated@@153 $generated@@154 $generated@@156))
)))
 :pattern ( ($generated@@46 $generated@@154 $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@42 $generated@@158) (and (or (not (= $generated@@159 $generated@@53)) (not true)) (= ($generated@@54 $generated@@159) $generated@@52))) ($generated@@33 $generated@@100 ($generated@@62 $generated@@100 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@158 $generated@@159) $generated@@58)) ($generated@@157 $generated@@52)))
 :pattern ( ($generated@@62 $generated@@100 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@158 $generated@@159) $generated@@58)))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@160) (and (or (not (= $generated@@161 $generated@@53)) (not true)) (= ($generated@@54 $generated@@161) $generated@@52))) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@160 $generated@@161) $generated@@3)))) ($generated@@41 $generated@@100 ($generated@@62 $generated@@100 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@160 $generated@@161) $generated@@58)) ($generated@@157 $generated@@52) $generated@@160))
 :pattern ( ($generated@@62 $generated@@100 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@160 $generated@@161) $generated@@58)))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@90 ($generated@@91 $generated@@162) $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167) ($generated@@90 $generated@@162 $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@162) $generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@168 $generated@@36) (or ($generated@@95 $generated@@168) ($generated@@123 $generated@@168)))
 :pattern ( ($generated@@123 $generated@@168) ($generated@@33 $generated@@34 $generated@@168 $generated@@36))
 :pattern ( ($generated@@95 $generated@@168) ($generated@@33 $generated@@34 $generated@@168 $generated@@36))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (and (= ($generated@@169 ($generated@@59 $generated@@170 $generated@@171)) $generated@@170) (= ($generated@@32 ($generated@@59 $generated@@170 $generated@@171)) $generated@@171))
 :pattern ( ($generated@@59 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> ($generated@@140 $generated@@172 $generated) (and (= ($generated@@99 $generated@@15 ($generated@@62 $generated@@15 $generated@@172)) $generated@@172) ($generated@@33 $generated@@15 ($generated@@62 $generated@@15 $generated@@172) $generated)))
 :pattern ( ($generated@@140 $generated@@172 $generated))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@T) ) (! (= ($generated@@140 ($generated@@99 $generated@@175 $generated@@173) $generated@@174) ($generated@@33 $generated@@175 $generated@@173 $generated@@174))
 :pattern ( ($generated@@140 ($generated@@99 $generated@@175 $generated@@173) $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (<= 0 ($generated@@49 $generated@@176))
 :pattern ( ($generated@@49 $generated@@176))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@41 $generated@@93 $generated@@177 ($generated@@94 $generated@@178) $generated@@179) (forall (($generated@@180 T@U) ) (!  (=> ($generated@@98 $generated@@177 $generated@@180) ($generated@@144 $generated@@180 $generated@@178 $generated@@179))
 :pattern ( ($generated@@98 $generated@@177 $generated@@180))
)))
 :pattern ( ($generated@@41 $generated@@93 $generated@@177 ($generated@@94 $generated@@178) $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@50 ($generated@@35 $generated@@181 $generated@@182)) $generated@@10)
 :pattern ( ($generated@@35 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! (= ($generated@@97 ($generated@@35 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@35 $generated@@183 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@96 ($generated@@35 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@35 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ) (! (= ($generated@@41 $generated@@100 $generated@@187 ($generated@@157 $generated@@188) $generated@@189) (forall (($generated@@190 Int) ) (!  (=> (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@49 $generated@@187))) ($generated@@144 ($generated@@153 $generated@@187 $generated@@190) $generated@@188 $generated@@189))
 :pattern ( ($generated@@153 $generated@@187 $generated@@190))
)))
 :pattern ( ($generated@@41 $generated@@100 $generated@@187 ($generated@@157 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@192 T@U) ) (! (= ($generated@@191 ($generated@@94 $generated@@192)) $generated@@192)
 :pattern ( ($generated@@94 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ) (! (= ($generated@@31 ($generated@@94 $generated@@193)) $generated@@1)
 :pattern ( ($generated@@94 $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@194 ($generated@@157 $generated@@195)) $generated@@195)
 :pattern ( ($generated@@157 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@31 ($generated@@157 $generated@@196)) $generated@@2)
 :pattern ( ($generated@@157 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@T) ) (! (= ($generated@@62 $generated@@198 ($generated@@99 $generated@@198 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@99 $generated@@198 $generated@@197))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (< ($generated@@199 $generated@@200) ($generated@@199 ($generated@@35 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@35 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@140 $generated@@202 ($generated@@94 $generated@@203)) (and (= ($generated@@99 $generated@@93 ($generated@@62 $generated@@93 $generated@@202)) $generated@@202) ($generated@@33 $generated@@93 ($generated@@62 $generated@@93 $generated@@202) ($generated@@94 $generated@@203))))
 :pattern ( ($generated@@140 $generated@@202 ($generated@@94 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@140 $generated@@204 ($generated@@157 $generated@@205)) (and (= ($generated@@99 $generated@@100 ($generated@@62 $generated@@100 $generated@@204)) $generated@@204) ($generated@@33 $generated@@100 ($generated@@62 $generated@@100 $generated@@204) ($generated@@157 $generated@@205))))
 :pattern ( ($generated@@140 $generated@@204 ($generated@@157 $generated@@205)))
)))
(assert (= ($generated@@31 $generated@@38) $generated@@5))
(assert (= ($generated@@206 $generated@@38) $generated@@11))
(assert (= ($generated@@31 $generated@@36) $generated@@6))
(assert (= ($generated@@206 $generated@@36) $generated@@12))
(assert (= ($generated@@31 $generated@@52) $generated@@7))
(assert (= ($generated@@206 $generated@@52) $generated@@11))
(assert (= $generated@@51 ($generated@@111 $generated@@34 $generated@@51)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@42 $generated@@208) (and ($generated@@123 $generated@@207) ($generated@@41 $generated@@34 $generated@@207 $generated@@36 $generated@@208))) ($generated@@41 $generated@@34 ($generated@@97 $generated@@207) $generated@@36 $generated@@208))
 :pattern ( ($generated@@41 $generated@@34 ($generated@@97 $generated@@207) $generated@@36 $generated@@208))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> (and ($generated@@42 $generated@@210) (and ($generated@@123 $generated@@209) ($generated@@41 $generated@@34 $generated@@209 $generated@@36 $generated@@210))) ($generated@@41 $generated@@37 ($generated@@96 $generated@@209) $generated@@38 $generated@@210))
 :pattern ( ($generated@@41 $generated@@37 ($generated@@96 $generated@@209) $generated@@38 $generated@@210))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (! (= ($generated@@35 ($generated@@111 $generated@@34 $generated@@211) ($generated@@111 $generated@@37 $generated@@212)) ($generated@@111 $generated@@34 ($generated@@35 $generated@@211 $generated@@212)))
 :pattern ( ($generated@@35 ($generated@@111 $generated@@34 $generated@@211) ($generated@@111 $generated@@37 $generated@@212)))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@T) ) (! (= ($generated@@99 $generated@@214 ($generated@@111 $generated@@214 $generated@@213)) ($generated@@111 $generated@@65 ($generated@@99 $generated@@214 $generated@@213)))
 :pattern ( ($generated@@99 $generated@@214 ($generated@@111 $generated@@214 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ) (!  (=> (= ($generated@@49 $generated@@215) 0) (= $generated@@215 $generated@@47))
 :pattern ( ($generated@@49 $generated@@215))
)))
(assert  (and (forall (($generated@@219 T@T) ($generated@@220 T@T) ($generated@@221 T@T) ($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (! (= ($generated@@216 $generated@@219 $generated@@220 $generated@@221 ($generated@@218 $generated@@219 $generated@@220 $generated@@221 $generated@@223 $generated@@224 $generated@@225 $generated@@222) $generated@@224 $generated@@225) $generated@@222)
 :weight 0
)) (and (forall (($generated@@226 T@T) ($generated@@227 T@T) ($generated@@228 T@T) ($generated@@229 T@U) ($generated@@230 T@U) ($generated@@231 T@U) ($generated@@232 T@U) ($generated@@233 T@U) ($generated@@234 T@U) ) (!  (or (= $generated@@231 $generated@@233) (= ($generated@@216 $generated@@226 $generated@@227 $generated@@228 ($generated@@218 $generated@@226 $generated@@227 $generated@@228 $generated@@230 $generated@@231 $generated@@232 $generated@@229) $generated@@233 $generated@@234) ($generated@@216 $generated@@226 $generated@@227 $generated@@228 $generated@@230 $generated@@233 $generated@@234)))
 :weight 0
)) (forall (($generated@@235 T@T) ($generated@@236 T@T) ($generated@@237 T@T) ($generated@@238 T@U) ($generated@@239 T@U) ($generated@@240 T@U) ($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ) (!  (or (= $generated@@241 $generated@@243) (= ($generated@@216 $generated@@235 $generated@@236 $generated@@237 ($generated@@218 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@240 $generated@@241 $generated@@238) $generated@@242 $generated@@243) ($generated@@216 $generated@@235 $generated@@236 $generated@@237 $generated@@239 $generated@@242 $generated@@243)))
 :weight 0
)))))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ($generated@@249 T@U) ) (! (= ($generated@@19 ($generated@@216 $generated@@37 $generated@@64 $generated@@15 ($generated@@217 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))  (=> (and (or (not (= $generated@@248 $generated@@244)) (not true)) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@245 $generated@@248) $generated@@246)))) ($generated@@98 $generated@@247 ($generated@@99 $generated@@37 $generated@@248))))
 :pattern ( ($generated@@216 $generated@@37 $generated@@64 $generated@@15 ($generated@@217 $generated@@244 $generated@@245 $generated@@246 $generated@@247) $generated@@248 $generated@@249))
)))
(assert (forall (($generated@@250 T@U) ($generated@@251 T@U) ) (! ($generated@@41 $generated@@15 $generated@@251 $generated $generated@@250)
 :pattern ( ($generated@@41 $generated@@15 $generated@@251 $generated $generated@@250))
)))
(assert (forall (($generated@@252 T@U) ($generated@@253 T@U) ) (! (= ($generated@@33 $generated@@100 $generated@@252 ($generated@@157 $generated@@253)) (forall (($generated@@254 Int) ) (!  (=> (and (<= 0 $generated@@254) (< $generated@@254 ($generated@@49 $generated@@252))) ($generated@@140 ($generated@@153 $generated@@252 $generated@@254) $generated@@253))
 :pattern ( ($generated@@153 $generated@@252 $generated@@254))
)))
 :pattern ( ($generated@@33 $generated@@100 $generated@@252 ($generated@@157 $generated@@253)))
)))
(assert (forall (($generated@@256 T@U) ($generated@@257 Int) ) (!  (=> (and (<= 0 $generated@@257) (< $generated@@257 ($generated@@49 $generated@@256))) (< ($generated@@199 ($generated@@62 $generated@@34 ($generated@@153 $generated@@256 $generated@@257))) ($generated@@255 $generated@@256)))
 :pattern ( ($generated@@199 ($generated@@62 $generated@@34 ($generated@@153 $generated@@256 $generated@@257))))
)))
(assert (forall (($generated@@258 T@U) ) (! ($generated@@33 $generated@@15 $generated@@258 $generated)
 :pattern ( ($generated@@33 $generated@@15 $generated@@258 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@259 () T@U)
(declare-fun $generated@@260 () T@U)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () T@U)
(declare-fun $generated@@263 () Bool)
(declare-fun $generated@@264 () T@U)
(declare-fun $generated@@265 () Bool)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@268  (=> (and (and (= ($generated@@127 $generated@@259 $generated@@260 $generated@@261 $generated@@262) (exists (($generated@@269 T@U) ) (!  (and ($generated@@33 $generated@@34 $generated@@269 $generated@@36) ($generated@@90 ($generated@@91 $generated@@129) $generated@@259 $generated@@260 $generated@@269 $generated@@261 $generated@@262))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@129) $generated@@259 $generated@@260 $generated@@269 $generated@@261 $generated@@262))
))) (forall (($generated@@270 T@U) ) (!  (=> ($generated@@33 $generated@@34 $generated@@270 $generated@@36) ($generated@@92 $generated@@259 $generated@@260 $generated@@270 $generated@@261 $generated@@262))
 :pattern ( ($generated@@90 ($generated@@91 $generated@@129) $generated@@259 $generated@@260 $generated@@270 $generated@@261 $generated@@262))
))) (and ($generated@@33 $generated@@15 ($generated@@18 ($generated@@127 $generated@@259 $generated@@260 $generated@@261 $generated@@262)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@263)))
(let (($generated@@271  (=> (not (and ($generated@@33 $generated@@34 $generated@@264 $generated@@36) ($generated@@41 $generated@@34 $generated@@264 $generated@@36 $generated@@259))) (=> (and (= $generated@@263 true) (= (ControlFlow 0 5) 3)) $generated@@268))))
(let (($generated@@272  (=> (and ($generated@@33 $generated@@34 $generated@@264 $generated@@36) ($generated@@41 $generated@@34 $generated@@264 $generated@@36 $generated@@259)) (=> (and (and (and ($generated@@41 $generated@@37 $generated@@260 $generated@@38 $generated@@259) ($generated@@41 $generated@@34 $generated@@264 $generated@@36 $generated@@259)) (and ($generated@@41 $generated@@37 $generated@@261 $generated@@38 $generated@@259) ($generated@@41 $generated@@93 $generated@@262 ($generated@@94 $generated@@38) $generated@@259))) (and (and (= $generated@@265 (forall (($generated@@273 T@U) ($generated@@274 T@U) )  (=> (and (and (or (not (= $generated@@273 $generated@@53)) (not true)) ($generated@@19 ($generated@@62 $generated@@15 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@37 ($generated@@66 $generated@@64 $generated@@65) $generated@@259 $generated@@273) $generated@@3)))) ($generated@@98 $generated@@262 ($generated@@99 $generated@@37 $generated@@273))) ($generated@@19 ($generated@@216 $generated@@37 $generated@@64 $generated@@15 $generated@@266 $generated@@273 $generated@@274))))) ($generated@@92 $generated@@259 $generated@@260 $generated@@264 $generated@@261 $generated@@262)) (and (= $generated@@263 $generated@@265) (= (ControlFlow 0 4) 3)))) $generated@@268))))
(let (($generated@@275 true))
(let (($generated@@276  (=> (= $generated@@266 ($generated@@217 $generated@@53 $generated@@259 $generated@@3 $generated@@262)) (and (and (=> (= (ControlFlow 0 6) 1) $generated@@275) (=> (= (ControlFlow 0 6) 4) $generated@@272)) (=> (= (ControlFlow 0 6) 5) $generated@@271)))))
(let (($generated@@277  (=> (and (and (and ($generated@@42 $generated@@259) ($generated@@267 $generated@@259)) ($generated@@33 $generated@@37 $generated@@260 $generated@@38)) (and (and ($generated@@33 $generated@@37 $generated@@261 $generated@@38) ($generated@@33 $generated@@93 $generated@@262 ($generated@@94 $generated@@38))) (and (= 3 $generated@@89) (= (ControlFlow 0 7) 6)))) $generated@@276)))
$generated@@277)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
