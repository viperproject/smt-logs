(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (Int) Int)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@42 () Int)
(declare-fun $generated@@43 (T@U T@U Int Int) T@U)
(declare-fun $generated@@44 (T@U Int Int) Bool)
(declare-fun $generated@@49 (T@U T@U Int Int) T@U)
(declare-fun $generated@@50 (T@U Int Int) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@63 (T@U) Bool)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@72 (Int T@U) T@U)
(declare-fun $generated@@77 (Int) T@U)
(declare-fun $generated@@80 (Int) T@U)
(declare-fun $generated@@83 (T@U) T@U)
(declare-fun $generated@@84 (T@U) T@U)
(declare-fun $generated@@85 (T@U) Int)
(declare-fun $generated@@86 (T@U) Int)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@127 (T@U) Int)
(declare-fun $generated@@133 (T@U) Int)
(declare-fun $generated@@150 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@151 () T@T)
(declare-fun $generated@@152 () T@T)
(declare-fun $generated@@153 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@154 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@155 () T@T)
(declare-fun $generated@@156 (T@T T@T) T@T)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@160 (T@T) T@T)
(declare-fun $generated@@209 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@210 (T@U) Bool)
(declare-fun $generated@@230 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@11 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@4))
(assert ($generated@@28 $generated@@29 $generated@@36 $generated@@31))
(assert (forall (($generated@@38 Int) ) (! (= ($generated@@37 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@38))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@T) ) (! (= ($generated@@39 $generated@@41 $generated@@40) $generated@@40)
 :pattern ( ($generated@@39 $generated@@41 $generated@@40))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 Int) ($generated@@48 Int) ) (!  (=> (or ($generated@@44 $generated@@46 $generated@@47 $generated@@48) (and (< 1 $generated@@42) ($generated@@28 $generated@@29 $generated@@46 $generated@@32))) ($generated@@28 $generated@@29 ($generated@@43 $generated@@45 $generated@@46 $generated@@47 $generated@@48) $generated@@32))
 :pattern ( ($generated@@43 $generated@@45 $generated@@46 $generated@@47 $generated@@48))
))))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 Int) ) (!  (=> (or ($generated@@50 $generated@@52 $generated@@53 $generated@@54) (and (< 1 $generated@@42) ($generated@@28 $generated@@29 $generated@@52 $generated@@31))) ($generated@@28 $generated@@29 ($generated@@49 $generated@@51 $generated@@52 $generated@@53 $generated@@54) $generated@@31))
 :pattern ( ($generated@@49 $generated@@51 $generated@@52 $generated@@53 $generated@@54))
))))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@35 $generated@@56) $generated@@4))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@35 $generated@@58) $generated@@5))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ) (! (= ($generated@@59 $generated@@60) (= ($generated@@35 $generated@@60) $generated@@6))
 :pattern ( ($generated@@59 $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (= ($generated@@61 $generated@@62) (= ($generated@@35 $generated@@62) $generated@@7))
 :pattern ( ($generated@@61 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@63 $generated@@64) (= ($generated@@35 $generated@@64) $generated@@8))
 :pattern ( ($generated@@63 $generated@@64))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 ($generated@@65 $generated@@68 $generated@@67)) $generated@@67)
 :pattern ( ($generated@@65 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@57 $generated@@69) (exists (($generated@@70 T@U) ($generated@@71 T@U) ) (= $generated@@69 ($generated@@30 $generated@@70 $generated@@71))))
 :pattern ( ($generated@@57 $generated@@69))
)))
(assert (forall (($generated@@73 T@U) ) (!  (=> ($generated@@63 $generated@@73) (exists (($generated@@74 Int) ($generated@@75 T@U) ) (= $generated@@73 ($generated@@72 $generated@@74 $generated@@75))))
 :pattern ( ($generated@@63 $generated@@73))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@55 $generated@@76) (= $generated@@76 $generated@@36))
 :pattern ( ($generated@@55 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ) (!  (=> ($generated@@59 $generated@@78) (exists (($generated@@79 Int) ) (= $generated@@78 ($generated@@77 $generated@@79))))
 :pattern ( ($generated@@59 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ) (!  (=> ($generated@@61 $generated@@81) (exists (($generated@@82 Int) ) (= $generated@@81 ($generated@@80 $generated@@82))))
 :pattern ( ($generated@@61 $generated@@81))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 Int) ($generated@@90 Int) ) (!  (=> (or ($generated@@44 ($generated@@39 $generated@@29 $generated@@88) ($generated@@37 $generated@@89) ($generated@@37 $generated@@90)) (and (< 1 $generated@@42) ($generated@@28 $generated@@29 $generated@@88 $generated@@32))) (and (=> (not ($generated@@16 ($generated@@39 $generated@@12 ($generated@@15 ($generated@@59 ($generated@@39 $generated@@29 $generated@@88)))))) (=> (not ($generated@@16 ($generated@@39 $generated@@12 ($generated@@15 ($generated@@61 ($generated@@39 $generated@@29 $generated@@88)))))) (let (($generated@@91 ($generated@@39 $generated@@29 ($generated@@84 ($generated@@39 $generated@@29 $generated@@88)))))
($generated@@50 $generated@@91 ($generated@@37 $generated@@89) ($generated@@37 $generated@@90))))) (= ($generated@@43 ($generated@@83 $generated@@87) ($generated@@39 $generated@@29 $generated@@88) ($generated@@37 $generated@@89) ($generated@@37 $generated@@90)) (ite ($generated@@59 ($generated@@39 $generated@@29 $generated@@88)) ($generated@@39 $generated@@29 $generated@@88) (ite ($generated@@61 ($generated@@39 $generated@@29 $generated@@88)) (let (($generated@@92 ($generated@@37 ($generated@@85 ($generated@@39 $generated@@29 $generated@@88)))))
(ite (= $generated@@92 ($generated@@37 $generated@@89)) ($generated@@77 ($generated@@37 $generated@@90)) $generated@@88)) (let (($generated@@93 ($generated@@39 $generated@@29 ($generated@@84 ($generated@@39 $generated@@29 $generated@@88)))))
(let (($generated@@94 ($generated@@37 ($generated@@86 ($generated@@39 $generated@@29 $generated@@88)))))
($generated@@39 $generated@@29 ($generated@@72 $generated@@94 ($generated@@39 $generated@@29 ($generated@@49 ($generated@@83 $generated@@87) $generated@@93 ($generated@@37 $generated@@89) ($generated@@37 $generated@@90))))))))))))
 :weight 3
 :pattern ( ($generated@@43 ($generated@@83 $generated@@87) ($generated@@39 $generated@@29 $generated@@88) ($generated@@37 $generated@@89) ($generated@@37 $generated@@90)))
))))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 Int) ($generated@@98 Int) ) (!  (=> (or ($generated@@44 $generated@@96 $generated@@97 $generated@@98) (and (< 1 $generated@@42) ($generated@@28 $generated@@29 $generated@@96 $generated@@32))) (and (=> (not ($generated@@59 $generated@@96)) (=> (not ($generated@@61 $generated@@96)) (let (($generated@@99 ($generated@@84 $generated@@96)))
($generated@@50 $generated@@99 $generated@@97 $generated@@98)))) (= ($generated@@43 ($generated@@83 $generated@@95) $generated@@96 $generated@@97 $generated@@98) (ite ($generated@@59 $generated@@96) $generated@@96 (ite ($generated@@61 $generated@@96) (let (($generated@@100 ($generated@@85 $generated@@96)))
(ite (= $generated@@100 $generated@@97) ($generated@@77 $generated@@98) $generated@@96)) (let (($generated@@101 ($generated@@84 $generated@@96)))
(let (($generated@@102 ($generated@@86 $generated@@96)))
($generated@@72 $generated@@102 ($generated@@49 $generated@@95 $generated@@101 $generated@@97 $generated@@98)))))))))
 :pattern ( ($generated@@43 ($generated@@83 $generated@@95) $generated@@96 $generated@@97 $generated@@98))
))))
(assert (forall (($generated@@103 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@103 $generated@@31) (or ($generated@@55 $generated@@103) ($generated@@57 $generated@@103)))
 :pattern ( ($generated@@57 $generated@@103) ($generated@@28 $generated@@29 $generated@@103 $generated@@31))
 :pattern ( ($generated@@55 $generated@@103) ($generated@@28 $generated@@29 $generated@@103 $generated@@31))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@35 ($generated@@30 $generated@@104 $generated@@105)) $generated@@5)
 :pattern ( ($generated@@30 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@106 ($generated@@30 $generated@@107 $generated@@108)) $generated@@107)
 :pattern ( ($generated@@30 $generated@@107 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@30 $generated@@110 $generated@@111)) $generated@@111)
 :pattern ( ($generated@@30 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@112 Int) ($generated@@113 T@U) ) (! (= ($generated@@35 ($generated@@72 $generated@@112 $generated@@113)) $generated@@8)
 :pattern ( ($generated@@72 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 Int) ($generated@@115 T@U) ) (! (= ($generated@@86 ($generated@@72 $generated@@114 $generated@@115)) $generated@@114)
 :pattern ( ($generated@@72 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 Int) ($generated@@117 T@U) ) (! (= ($generated@@84 ($generated@@72 $generated@@116 $generated@@117)) $generated@@117)
 :pattern ( ($generated@@72 $generated@@116 $generated@@117))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 Int) ($generated@@121 Int) ) (!  (=> (or ($generated@@50 ($generated@@39 $generated@@29 $generated@@119) ($generated@@37 $generated@@120) ($generated@@37 $generated@@121)) (and (< 1 $generated@@42) ($generated@@28 $generated@@29 $generated@@119 $generated@@31))) (and (=> (not ($generated@@16 ($generated@@39 $generated@@12 ($generated@@15 ($generated@@55 ($generated@@39 $generated@@29 $generated@@119)))))) (let (($generated@@122 ($generated@@39 $generated@@29 ($generated@@109 ($generated@@39 $generated@@29 $generated@@119)))))
(let (($generated@@123 ($generated@@39 $generated@@29 ($generated@@106 ($generated@@39 $generated@@29 $generated@@119)))))
 (and ($generated@@44 $generated@@123 ($generated@@37 $generated@@120) ($generated@@37 $generated@@121)) ($generated@@50 $generated@@122 ($generated@@37 $generated@@120) ($generated@@37 $generated@@121)))))) (= ($generated@@49 ($generated@@83 $generated@@118) ($generated@@39 $generated@@29 $generated@@119) ($generated@@37 $generated@@120) ($generated@@37 $generated@@121)) (ite ($generated@@55 ($generated@@39 $generated@@29 $generated@@119)) $generated@@119 (let (($generated@@124 ($generated@@39 $generated@@29 ($generated@@109 ($generated@@39 $generated@@29 $generated@@119)))))
(let (($generated@@125 ($generated@@39 $generated@@29 ($generated@@106 ($generated@@39 $generated@@29 $generated@@119)))))
($generated@@39 $generated@@29 ($generated@@30 ($generated@@39 $generated@@29 ($generated@@43 ($generated@@83 $generated@@118) $generated@@125 ($generated@@37 $generated@@120) ($generated@@37 $generated@@121))) ($generated@@39 $generated@@29 ($generated@@49 ($generated@@83 $generated@@118) $generated@@124 ($generated@@37 $generated@@120) ($generated@@37 $generated@@121)))))))))))
 :weight 3
 :pattern ( ($generated@@49 ($generated@@83 $generated@@118) ($generated@@39 $generated@@29 $generated@@119) ($generated@@37 $generated@@120) ($generated@@37 $generated@@121)))
))))
(assert (forall (($generated@@126 Int) ) (! (= ($generated@@35 ($generated@@77 $generated@@126)) $generated@@6)
 :pattern ( ($generated@@77 $generated@@126))
)))
(assert (forall (($generated@@128 Int) ) (! (= ($generated@@127 ($generated@@77 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@77 $generated@@128))
)))
(assert (forall (($generated@@129 Int) ) (! (= ($generated@@35 ($generated@@80 $generated@@129)) $generated@@7)
 :pattern ( ($generated@@80 $generated@@129))
)))
(assert (forall (($generated@@130 Int) ) (! (= ($generated@@85 ($generated@@80 $generated@@130)) $generated@@130)
 :pattern ( ($generated@@80 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@65 $generated@@132 ($generated@@66 $generated@@132 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@66 $generated@@132 $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (< ($generated@@133 $generated@@134) ($generated@@133 ($generated@@30 $generated@@134 $generated@@135)))
 :pattern ( ($generated@@30 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (! (< ($generated@@133 $generated@@137) ($generated@@133 ($generated@@30 $generated@@136 $generated@@137)))
 :pattern ( ($generated@@30 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 Int) ($generated@@139 T@U) ) (! (< ($generated@@133 $generated@@139) ($generated@@133 ($generated@@72 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@72 $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 Int) ) (! (= ($generated@@28 $generated@@29 ($generated@@77 $generated@@140) $generated@@32) ($generated@@28 $generated@@13 ($generated@@17 $generated@@140) $generated))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@77 $generated@@140) $generated@@32))
)))
(assert (forall (($generated@@141 Int) ) (! (= ($generated@@28 $generated@@29 ($generated@@80 $generated@@141) $generated@@32) ($generated@@28 $generated@@13 ($generated@@17 $generated@@141) $generated))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@80 $generated@@141) $generated@@32))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 Int) ($generated@@145 Int) ) (! (= ($generated@@43 ($generated@@83 $generated@@142) $generated@@143 $generated@@144 $generated@@145) ($generated@@43 $generated@@142 $generated@@143 $generated@@144 $generated@@145))
 :pattern ( ($generated@@43 ($generated@@83 $generated@@142) $generated@@143 $generated@@144 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 Int) ($generated@@149 Int) ) (! (= ($generated@@49 ($generated@@83 $generated@@146) $generated@@147 $generated@@148 $generated@@149) ($generated@@49 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
 :pattern ( ($generated@@49 ($generated@@83 $generated@@146) $generated@@147 $generated@@148 $generated@@149))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@150 $generated@@161 $generated@@162 $generated@@163 ($generated@@157 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@166 $generated@@167) $generated@@164)
 :weight 0
)) (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@150 $generated@@168 $generated@@169 $generated@@170 ($generated@@157 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@150 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@150 $generated@@177 $generated@@178 $generated@@179 ($generated@@157 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@150 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)))) (= ($generated@@11 $generated@@151) 4)) (= ($generated@@11 $generated@@152) 5)) (forall (($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@154 $generated@@186 $generated@@187 ($generated@@158 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@188) $generated@@190) $generated@@188)
 :weight 0
))) (forall (($generated@@191 T@T) ($generated@@192 T@T) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@195 $generated@@196) (= ($generated@@154 $generated@@191 $generated@@192 ($generated@@158 $generated@@191 $generated@@192 $generated@@194 $generated@@195 $generated@@193) $generated@@196) ($generated@@154 $generated@@191 $generated@@192 $generated@@194 $generated@@196)))
 :weight 0
))) (= ($generated@@11 $generated@@155) 6)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ) (= ($generated@@11 ($generated@@156 $generated@@197 $generated@@198)) 7))) (forall (($generated@@199 T@T) ($generated@@200 T@T) ) (! (= ($generated@@159 ($generated@@156 $generated@@199 $generated@@200)) $generated@@199)
 :pattern ( ($generated@@156 $generated@@199 $generated@@200))
))) (forall (($generated@@201 T@T) ($generated@@202 T@T) ) (! (= ($generated@@160 ($generated@@156 $generated@@201 $generated@@202)) $generated@@202)
 :pattern ( ($generated@@156 $generated@@201 $generated@@202))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Bool) ($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@16 ($generated@@150 $generated@@151 $generated@@152 $generated@@12 ($generated@@153 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))  (=> (and (or (not (= $generated@@207 $generated@@203)) (not true)) ($generated@@16 ($generated@@65 $generated@@12 ($generated@@154 $generated@@152 $generated@@155 ($generated@@154 $generated@@151 ($generated@@156 $generated@@152 $generated@@155) $generated@@204 $generated@@207) $generated@@205)))) $generated@@206))
 :pattern ( ($generated@@150 $generated@@151 $generated@@152 $generated@@12 ($generated@@153 $generated@@203 $generated@@204 $generated@@205 $generated@@206) $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@210 $generated@@212) (and ($generated@@59 $generated@@211) ($generated@@209 $generated@@29 $generated@@211 $generated@@32 $generated@@212))) ($generated@@209 $generated@@13 ($generated@@17 ($generated@@127 $generated@@211)) $generated $generated@@212))
 :pattern ( ($generated@@209 $generated@@13 ($generated@@17 ($generated@@127 $generated@@211)) $generated $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and ($generated@@210 $generated@@214) (and ($generated@@61 $generated@@213) ($generated@@209 $generated@@29 $generated@@213 $generated@@32 $generated@@214))) ($generated@@209 $generated@@13 ($generated@@17 ($generated@@85 $generated@@213)) $generated $generated@@214))
 :pattern ( ($generated@@209 $generated@@13 ($generated@@17 ($generated@@85 $generated@@213)) $generated $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@210 $generated@@216) (and ($generated@@63 $generated@@215) ($generated@@209 $generated@@29 $generated@@215 $generated@@32 $generated@@216))) ($generated@@209 $generated@@13 ($generated@@17 ($generated@@86 $generated@@215)) $generated $generated@@216))
 :pattern ( ($generated@@209 $generated@@13 ($generated@@17 ($generated@@86 $generated@@215)) $generated $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@217 $generated@@32) (or (or ($generated@@59 $generated@@217) ($generated@@61 $generated@@217)) ($generated@@63 $generated@@217)))
 :pattern ( ($generated@@63 $generated@@217) ($generated@@28 $generated@@29 $generated@@217 $generated@@32))
 :pattern ( ($generated@@61 $generated@@217) ($generated@@28 $generated@@29 $generated@@217 $generated@@32))
 :pattern ( ($generated@@59 $generated@@217) ($generated@@28 $generated@@29 $generated@@217 $generated@@32))
)))
(assert  (=> (<= 1 $generated@@42) (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 Int) ($generated@@221 Int) ) (!  (=> (or ($generated@@50 $generated@@219 $generated@@220 $generated@@221) (and (< 1 $generated@@42) ($generated@@28 $generated@@29 $generated@@219 $generated@@31))) (and (=> (not ($generated@@55 $generated@@219)) (let (($generated@@222 ($generated@@109 $generated@@219)))
(let (($generated@@223 ($generated@@106 $generated@@219)))
 (and ($generated@@44 $generated@@223 $generated@@220 $generated@@221) ($generated@@50 $generated@@222 $generated@@220 $generated@@221))))) (= ($generated@@49 ($generated@@83 $generated@@218) $generated@@219 $generated@@220 $generated@@221) (ite ($generated@@55 $generated@@219) $generated@@219 (let (($generated@@224 ($generated@@109 $generated@@219)))
(let (($generated@@225 ($generated@@106 $generated@@219)))
($generated@@30 ($generated@@43 $generated@@218 $generated@@225 $generated@@220 $generated@@221) ($generated@@49 $generated@@218 $generated@@224 $generated@@220 $generated@@221))))))))
 :pattern ( ($generated@@49 ($generated@@83 $generated@@218) $generated@@219 $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (!  (=> (and ($generated@@210 $generated@@227) ($generated@@28 $generated@@29 $generated@@226 $generated@@31)) ($generated@@209 $generated@@29 $generated@@226 $generated@@31 $generated@@227))
 :pattern ( ($generated@@209 $generated@@29 $generated@@226 $generated@@31 $generated@@227))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@U) ) (!  (=> (and ($generated@@210 $generated@@229) ($generated@@28 $generated@@29 $generated@@228 $generated@@32)) ($generated@@209 $generated@@29 $generated@@228 $generated@@32 $generated@@229))
 :pattern ( ($generated@@209 $generated@@29 $generated@@228 $generated@@32 $generated@@229))
)))
(assert (= ($generated@@27 $generated@@32) $generated@@2))
(assert (= ($generated@@230 $generated@@32) $generated@@9))
(assert (= ($generated@@27 $generated@@31) $generated@@3))
(assert (= ($generated@@230 $generated@@31) $generated@@10))
(assert (= $generated@@36 ($generated@@39 $generated@@29 $generated@@36)))
(assert (forall (($generated@@231 T@U) ($generated@@232 T@U) ) (!  (=> (and ($generated@@210 $generated@@232) (and ($generated@@57 $generated@@231) ($generated@@209 $generated@@29 $generated@@231 $generated@@31 $generated@@232))) ($generated@@209 $generated@@29 ($generated@@106 $generated@@231) $generated@@32 $generated@@232))
 :pattern ( ($generated@@209 $generated@@29 ($generated@@106 $generated@@231) $generated@@32 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (!  (=> (and ($generated@@210 $generated@@234) (and ($generated@@57 $generated@@233) ($generated@@209 $generated@@29 $generated@@233 $generated@@31 $generated@@234))) ($generated@@209 $generated@@29 ($generated@@109 $generated@@233) $generated@@31 $generated@@234))
 :pattern ( ($generated@@209 $generated@@29 ($generated@@109 $generated@@233) $generated@@31 $generated@@234))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and ($generated@@210 $generated@@236) (and ($generated@@63 $generated@@235) ($generated@@209 $generated@@29 $generated@@235 $generated@@32 $generated@@236))) ($generated@@209 $generated@@29 ($generated@@84 $generated@@235) $generated@@31 $generated@@236))
 :pattern ( ($generated@@209 $generated@@29 ($generated@@84 $generated@@235) $generated@@31 $generated@@236))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= ($generated@@30 ($generated@@39 $generated@@29 $generated@@237) ($generated@@39 $generated@@29 $generated@@238)) ($generated@@39 $generated@@29 ($generated@@30 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@30 ($generated@@39 $generated@@29 $generated@@237) ($generated@@39 $generated@@29 $generated@@238)))
)))
(assert (forall (($generated@@239 Int) ($generated@@240 T@U) ) (! (= ($generated@@72 ($generated@@37 $generated@@239) ($generated@@39 $generated@@29 $generated@@240)) ($generated@@39 $generated@@29 ($generated@@72 $generated@@239 $generated@@240)))
 :pattern ( ($generated@@72 ($generated@@37 $generated@@239) ($generated@@39 $generated@@29 $generated@@240)))
)))
(assert (forall (($generated@@241 Int) ) (! (= ($generated@@66 $generated@@13 ($generated@@17 ($generated@@37 $generated@@241))) ($generated@@39 $generated@@155 ($generated@@66 $generated@@13 ($generated@@17 $generated@@241))))
 :pattern ( ($generated@@66 $generated@@13 ($generated@@17 ($generated@@37 $generated@@241))))
)))
(assert (forall (($generated@@242 Int) ) (! (= ($generated@@77 ($generated@@37 $generated@@242)) ($generated@@39 $generated@@29 ($generated@@77 $generated@@242)))
 :pattern ( ($generated@@77 ($generated@@37 $generated@@242)))
)))
(assert (forall (($generated@@243 Int) ) (! (= ($generated@@80 ($generated@@37 $generated@@243)) ($generated@@39 $generated@@29 ($generated@@80 $generated@@243)))
 :pattern ( ($generated@@80 ($generated@@37 $generated@@243)))
)))
(assert (forall (($generated@@244 T@U) ($generated@@245 T@T) ) (! (= ($generated@@66 $generated@@245 ($generated@@39 $generated@@245 $generated@@244)) ($generated@@39 $generated@@155 ($generated@@66 $generated@@245 $generated@@244)))
 :pattern ( ($generated@@66 $generated@@245 ($generated@@39 $generated@@245 $generated@@244)))
)))
(assert (forall (($generated@@246 Int) ($generated@@247 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@72 $generated@@246 $generated@@247) $generated@@32)  (and ($generated@@28 $generated@@13 ($generated@@17 $generated@@246) $generated) ($generated@@28 $generated@@29 $generated@@247 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@72 $generated@@246 $generated@@247) $generated@@32))
)))
(assert (forall (($generated@@248 T@U) ($generated@@249 T@U) ) (! ($generated@@209 $generated@@13 $generated@@249 $generated $generated@@248)
 :pattern ( ($generated@@209 $generated@@13 $generated@@249 $generated $generated@@248))
)))
(assert (forall (($generated@@250 T@U) ) (! ($generated@@28 $generated@@13 $generated@@250 $generated)
 :pattern ( ($generated@@28 $generated@@13 $generated@@250 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () Int)
(declare-fun $generated@@253 () Int)
(declare-fun $generated@@254 () Int)
(declare-fun $generated@@255 () Int)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 () T@U)
(declare-fun $generated@@259 () Int)
(declare-fun $generated@@260 () Int)
(declare-fun $generated@@261 () T@U)
(declare-fun $generated@@262 () Int)
(declare-fun $generated@@263 () Int)
(declare-fun $generated@@264 () Int)
(declare-fun $generated@@265 () T@U)
(declare-fun $generated@@266 () T@U)
(declare-fun $generated@@267 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@268 true))
(let (($generated@@269 true))
(let (($generated@@270  (=> (and (and (= $generated@@251 ($generated@@80 $generated@@252)) (= $generated@@253 $generated@@252)) (and ($generated@@28 $generated@@13 ($generated@@17 $generated@@253) $generated) (= $generated@@254 $generated@@253))) (and (=> (= (ControlFlow 0 11) 9) $generated@@269) (=> (= (ControlFlow 0 11) 10) $generated@@268)))))
(let (($generated@@271 true))
(let (($generated@@272  (=> (= $generated@@251 ($generated@@72 $generated@@255 $generated@@256)) (=> (and ($generated@@28 $generated@@29 $generated@@256 $generated@@31) (= $generated@@257 $generated@@256)) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@257 $generated@@31) (= $generated@@258 $generated@@257)) (and (= $generated@@259 $generated@@255) ($generated@@28 $generated@@13 ($generated@@17 $generated@@259) $generated))) (and (and (= $generated@@260 $generated@@259) ($generated@@209 $generated@@29 $generated@@258 $generated@@31 $generated@@261)) (and ($generated@@209 $generated@@13 ($generated@@17 $generated@@262) $generated $generated@@261) ($generated@@209 $generated@@13 ($generated@@17 $generated@@263) $generated $generated@@261)))) (and (=> (= (ControlFlow 0 4) (- 0 6)) (or (or (<= 0 $generated@@262) (< ($generated@@133 $generated@@258) ($generated@@133 $generated@@251))) (= $generated@@262 $generated@@262))) (=> (or (or (<= 0 $generated@@262) (< ($generated@@133 $generated@@258) ($generated@@133 $generated@@251))) (= $generated@@262 $generated@@262)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (or (<= 0 $generated@@263) (< ($generated@@133 $generated@@258) ($generated@@133 $generated@@251))) (< $generated@@262 $generated@@262)) (= $generated@@263 $generated@@263))) (=> (or (or (or (<= 0 $generated@@263) (< ($generated@@133 $generated@@258) ($generated@@133 $generated@@251))) (< $generated@@262 $generated@@262)) (= $generated@@263 $generated@@263)) (=> (= (ControlFlow 0 4) (- 0 3)) (or (< ($generated@@133 $generated@@258) ($generated@@133 $generated@@251)) (and (= ($generated@@133 $generated@@258) ($generated@@133 $generated@@251)) (or (< $generated@@262 $generated@@262) (and (= $generated@@262 $generated@@262) (< $generated@@263 $generated@@263)))))))))))))))
(let (($generated@@273  (=> (or (not (= $generated@@251 ($generated@@80 $generated@@252))) (not true)) (and (=> (= (ControlFlow 0 8) 4) $generated@@272) (=> (= (ControlFlow 0 8) 7) $generated@@271)))))
(let (($generated@@274  (=> (or (not (= $generated@@251 ($generated@@77 $generated@@264))) (not true)) (and (=> (= (ControlFlow 0 12) 11) $generated@@270) (=> (= (ControlFlow 0 12) 8) $generated@@273)))))
(let (($generated@@275 true))
(let (($generated@@276 true))
(let (($generated@@277  (=> (= $generated@@265 ($generated@@153 $generated@@266 $generated@@261 $generated@@1 false)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@276) (=> (= (ControlFlow 0 13) 2) $generated@@275)) (=> (= (ControlFlow 0 13) 12) $generated@@274)))))
(let (($generated@@278  (=> (and (and (and ($generated@@210 $generated@@261) ($generated@@267 $generated@@261)) ($generated@@28 $generated@@29 $generated@@251 $generated@@32)) (and (= 1 $generated@@42) (= (ControlFlow 0 14) 13))) $generated@@277)))
$generated@@278))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
