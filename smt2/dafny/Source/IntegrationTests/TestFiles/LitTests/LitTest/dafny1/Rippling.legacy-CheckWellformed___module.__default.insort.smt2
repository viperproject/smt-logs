(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 (T@U T@U) T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@51 (T@U) Bool)
(declare-fun $generated@@53 (T@U) Bool)
(declare-fun $generated@@55 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@59 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@92 (T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@128 (T@U) Int)
(declare-fun $generated@@134 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@135 () T@T)
(declare-fun $generated@@136 () T@T)
(declare-fun $generated@@137 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@138 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@T T@T) T@T)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@T) T@T)
(declare-fun $generated@@144 (T@T) T@T)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@201 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@209 (T@U) T@U)
(declare-fun $generated@@210 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@12 $generated@@29) 3))
(assert (forall (($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31)  (and ($generated@@28 $generated@@29 $generated@@33 $generated@@32) ($generated@@28 $generated@@29 $generated@@34 $generated@@31)))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@30 $generated@@33 $generated@@34) $generated@@31))
)))
(assert (= ($generated@@35 $generated@@36) $generated@@3))
(assert (= ($generated@@35 $generated@@37) $generated@@4))
(assert (= ($generated@@35 $generated@@38) $generated@@5))
(assert (= ($generated@@35 $generated@@39) $generated@@7))
(assert ($generated@@28 $generated@@29 $generated@@36 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@37 $generated@@40))
(assert ($generated@@28 $generated@@29 $generated@@38 $generated@@32))
(assert ($generated@@28 $generated@@29 $generated@@39 $generated@@31))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@43) (= $generated@@42 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@T) ) (! (= ($generated@@44 $generated@@46 $generated@@45) $generated@@45)
 :pattern ( ($generated@@44 $generated@@46 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ) (! (= ($generated@@47 $generated@@48) (= ($generated@@35 $generated@@48) $generated@@3))
 :pattern ( ($generated@@47 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ) (! (= ($generated@@49 $generated@@50) (= ($generated@@35 $generated@@50) $generated@@4))
 :pattern ( ($generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ) (! (= ($generated@@51 $generated@@52) (= ($generated@@35 $generated@@52) $generated@@5))
 :pattern ( ($generated@@51 $generated@@52))
)))
(assert (forall (($generated@@54 T@U) ) (! (= ($generated@@53 $generated@@54) (= ($generated@@35 $generated@@54) $generated@@6))
 :pattern ( ($generated@@53 $generated@@54))
)))
(assert (forall (($generated@@56 T@U) ) (! (= ($generated@@55 $generated@@56) (= ($generated@@35 $generated@@56) $generated@@7))
 :pattern ( ($generated@@55 $generated@@56))
)))
(assert (forall (($generated@@58 T@U) ) (! (= ($generated@@57 $generated@@58) (= ($generated@@35 $generated@@58) $generated@@8))
 :pattern ( ($generated@@57 $generated@@58))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 ($generated@@59 $generated@@62 $generated@@61)) $generated@@61)
 :pattern ( ($generated@@59 $generated@@62 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (!  (=> ($generated@@57 $generated@@63) (exists (($generated@@64 T@U) ($generated@@65 T@U) ) (= $generated@@63 ($generated@@30 $generated@@64 $generated@@65))))
 :pattern ( ($generated@@57 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ) (!  (=> ($generated@@47 $generated@@66) (= $generated@@66 $generated@@36))
 :pattern ( ($generated@@47 $generated@@66))
)))
(assert (forall (($generated@@67 T@U) ) (!  (=> ($generated@@49 $generated@@67) (= $generated@@67 $generated@@37))
 :pattern ( ($generated@@49 $generated@@67))
)))
(assert (forall (($generated@@68 T@U) ) (!  (=> ($generated@@51 $generated@@68) (= $generated@@68 $generated@@38))
 :pattern ( ($generated@@51 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (!  (=> ($generated@@55 $generated@@69) (= $generated@@69 $generated@@39))
 :pattern ( ($generated@@55 $generated@@69))
)))
(assert (forall (($generated@@71 T@U) ) (!  (=> ($generated@@53 $generated@@71) (exists (($generated@@72 T@U) ) (= $generated@@71 ($generated@@70 $generated@@72))))
 :pattern ( ($generated@@53 $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (= ($generated@@28 $generated@@29 ($generated@@70 $generated@@73) $generated@@32) ($generated@@28 $generated@@29 $generated@@73 $generated@@32))
 :pattern ( ($generated@@28 $generated@@29 ($generated@@70 $generated@@73) $generated@@32))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (or ($generated@@76 $generated@@78 $generated@@79) (and (< 1 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@78 $generated@@32) ($generated@@28 $generated@@29 $generated@@79 $generated@@32)))) ($generated@@28 $generated@@29 ($generated@@75 $generated@@77 $generated@@78 $generated@@79) $generated@@40))
 :pattern ( ($generated@@75 $generated@@77 $generated@@78 $generated@@79))
))))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> (or ($generated@@81 $generated@@83 $generated@@84) (and (< 2 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@83 $generated@@32) ($generated@@28 $generated@@29 $generated@@84 $generated@@31)))) ($generated@@28 $generated@@29 ($generated@@80 $generated@@82 $generated@@83 $generated@@84) $generated@@31))
 :pattern ( ($generated@@80 $generated@@82 $generated@@83 $generated@@84))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@75 ($generated@@85 $generated@@86) $generated@@87 $generated@@88) ($generated@@75 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@75 ($generated@@85 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@80 ($generated@@85 $generated@@89) $generated@@90 $generated@@91) ($generated@@80 $generated@@89 $generated@@90 $generated@@91))
 :pattern ( ($generated@@80 ($generated@@85 $generated@@89) $generated@@90 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ) (!  (=> ($generated@@92 $generated@@93) (or ($generated@@47 $generated@@93) ($generated@@49 $generated@@93)))
 :pattern ( ($generated@@92 $generated@@93))
)))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> (or ($generated@@76 ($generated@@44 $generated@@29 $generated@@96) ($generated@@44 $generated@@29 $generated@@97)) (and (< 1 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@96 $generated@@32) ($generated@@28 $generated@@29 $generated@@97 $generated@@32)))) (and (=> (not ($generated@@17 ($generated@@44 $generated@@13 ($generated@@16 ($generated@@51 ($generated@@44 $generated@@29 $generated@@96)))))) (let (($generated@@98 ($generated@@44 $generated@@29 ($generated@@94 ($generated@@44 $generated@@29 $generated@@96)))))
 (=> (not ($generated@@17 ($generated@@44 $generated@@13 ($generated@@16 ($generated@@51 ($generated@@44 $generated@@29 $generated@@97)))))) (let (($generated@@99 ($generated@@44 $generated@@29 ($generated@@94 ($generated@@44 $generated@@29 $generated@@97)))))
($generated@@76 $generated@@98 $generated@@99))))) (= ($generated@@75 ($generated@@85 $generated@@95) ($generated@@44 $generated@@29 $generated@@96) ($generated@@44 $generated@@29 $generated@@97)) (ite ($generated@@51 ($generated@@44 $generated@@29 $generated@@96)) $generated@@37 (let (($generated@@100 ($generated@@44 $generated@@29 ($generated@@94 ($generated@@44 $generated@@29 $generated@@96)))))
(ite ($generated@@51 ($generated@@44 $generated@@29 $generated@@97)) $generated@@36 (let (($generated@@101 ($generated@@44 $generated@@29 ($generated@@94 ($generated@@44 $generated@@29 $generated@@97)))))
($generated@@44 $generated@@29 ($generated@@75 ($generated@@85 $generated@@95) $generated@@100 $generated@@101)))))))))
 :weight 3
 :pattern ( ($generated@@75 ($generated@@85 $generated@@95) ($generated@@44 $generated@@29 $generated@@96) ($generated@@44 $generated@@29 $generated@@97)))
))))
(assert  (=> (<= 1 $generated@@74) (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ) (!  (=> (or ($generated@@76 $generated@@103 $generated@@104) (and (< 1 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@103 $generated@@32) ($generated@@28 $generated@@29 $generated@@104 $generated@@32)))) (and (=> (not ($generated@@51 $generated@@103)) (let (($generated@@105 ($generated@@94 $generated@@103)))
 (=> (not ($generated@@51 $generated@@104)) (let (($generated@@106 ($generated@@94 $generated@@104)))
($generated@@76 $generated@@105 $generated@@106))))) (= ($generated@@75 ($generated@@85 $generated@@102) $generated@@103 $generated@@104) (ite ($generated@@51 $generated@@103) $generated@@37 (let (($generated@@107 ($generated@@94 $generated@@103)))
(ite ($generated@@51 $generated@@104) $generated@@36 (let (($generated@@108 ($generated@@94 $generated@@104)))
($generated@@75 $generated@@102 $generated@@107 $generated@@108))))))))
 :pattern ( ($generated@@75 ($generated@@85 $generated@@102) $generated@@103 $generated@@104))
))))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@109 $generated@@40) (or ($generated@@47 $generated@@109) ($generated@@49 $generated@@109)))
 :pattern ( ($generated@@49 $generated@@109) ($generated@@28 $generated@@29 $generated@@109 $generated@@40))
 :pattern ( ($generated@@47 $generated@@109) ($generated@@28 $generated@@29 $generated@@109 $generated@@40))
)))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@110 $generated@@32) (or ($generated@@51 $generated@@110) ($generated@@53 $generated@@110)))
 :pattern ( ($generated@@53 $generated@@110) ($generated@@28 $generated@@29 $generated@@110 $generated@@32))
 :pattern ( ($generated@@51 $generated@@110) ($generated@@28 $generated@@29 $generated@@110 $generated@@32))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@28 $generated@@29 $generated@@111 $generated@@31) (or ($generated@@55 $generated@@111) ($generated@@57 $generated@@111)))
 :pattern ( ($generated@@57 $generated@@111) ($generated@@28 $generated@@29 $generated@@111 $generated@@31))
 :pattern ( ($generated@@55 $generated@@111) ($generated@@28 $generated@@29 $generated@@111 $generated@@31))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (!  (=> (and ($generated@@47 $generated@@112) ($generated@@47 $generated@@113)) ($generated@@41 $generated@@112 $generated@@113))
 :pattern ( ($generated@@41 $generated@@112 $generated@@113) ($generated@@47 $generated@@112))
 :pattern ( ($generated@@41 $generated@@112 $generated@@113) ($generated@@47 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (and ($generated@@49 $generated@@114) ($generated@@49 $generated@@115)) ($generated@@41 $generated@@114 $generated@@115))
 :pattern ( ($generated@@41 $generated@@114 $generated@@115) ($generated@@49 $generated@@114))
 :pattern ( ($generated@@41 $generated@@114 $generated@@115) ($generated@@49 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@35 ($generated@@30 $generated@@116 $generated@@117)) $generated@@8)
 :pattern ( ($generated@@30 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@30 $generated@@119 $generated@@120)) $generated@@119)
 :pattern ( ($generated@@30 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@121 ($generated@@30 $generated@@122 $generated@@123)) $generated@@123)
 :pattern ( ($generated@@30 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@35 ($generated@@70 $generated@@124)) $generated@@6)
 :pattern ( ($generated@@70 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@94 ($generated@@70 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@70 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@T) ) (! (= ($generated@@59 $generated@@127 ($generated@@60 $generated@@127 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@60 $generated@@127 $generated@@126))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (! (< ($generated@@128 $generated@@129) ($generated@@128 ($generated@@30 $generated@@129 $generated@@130)))
 :pattern ( ($generated@@30 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (< ($generated@@128 $generated@@132) ($generated@@128 ($generated@@30 $generated@@131 $generated@@132)))
 :pattern ( ($generated@@30 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ) (! (< ($generated@@128 $generated@@133) ($generated@@128 ($generated@@70 $generated@@133)))
 :pattern ( ($generated@@70 $generated@@133))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@134 $generated@@145 $generated@@146 $generated@@147 ($generated@@141 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@134 $generated@@152 $generated@@153 $generated@@154 ($generated@@141 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@134 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@134 $generated@@161 $generated@@162 $generated@@163 ($generated@@141 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@134 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))) (= ($generated@@12 $generated@@135) 4)) (= ($generated@@12 $generated@@136) 5)) (forall (($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@138 $generated@@170 $generated@@171 ($generated@@142 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@172) $generated@@174) $generated@@172)
 :weight 0
))) (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (or (= $generated@@179 $generated@@180) (= ($generated@@138 $generated@@175 $generated@@176 ($generated@@142 $generated@@175 $generated@@176 $generated@@178 $generated@@179 $generated@@177) $generated@@180) ($generated@@138 $generated@@175 $generated@@176 $generated@@178 $generated@@180)))
 :weight 0
))) (= ($generated@@12 $generated@@139) 6)) (forall (($generated@@181 T@T) ($generated@@182 T@T) ) (= ($generated@@12 ($generated@@140 $generated@@181 $generated@@182)) 7))) (forall (($generated@@183 T@T) ($generated@@184 T@T) ) (! (= ($generated@@143 ($generated@@140 $generated@@183 $generated@@184)) $generated@@183)
 :pattern ( ($generated@@140 $generated@@183 $generated@@184))
))) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (! (= ($generated@@144 ($generated@@140 $generated@@185 $generated@@186)) $generated@@186)
 :pattern ( ($generated@@140 $generated@@185 $generated@@186))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 Bool) ($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@17 ($generated@@134 $generated@@135 $generated@@136 $generated@@13 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))  (=> (and (or (not (= $generated@@191 $generated@@187)) (not true)) ($generated@@17 ($generated@@59 $generated@@13 ($generated@@138 $generated@@136 $generated@@139 ($generated@@138 $generated@@135 ($generated@@140 $generated@@136 $generated@@139) $generated@@188 $generated@@191) $generated@@189)))) $generated@@190))
 :pattern ( ($generated@@134 $generated@@135 $generated@@136 $generated@@13 ($generated@@137 $generated@@187 $generated@@188 $generated@@189 $generated@@190) $generated@@191 $generated@@192))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (or ($generated@@81 ($generated@@44 $generated@@29 $generated@@195) ($generated@@44 $generated@@29 $generated@@196)) (and (< 2 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@195 $generated@@32) ($generated@@28 $generated@@29 $generated@@196 $generated@@31)))) (and (=> (not ($generated@@17 ($generated@@44 $generated@@13 ($generated@@16 ($generated@@55 ($generated@@44 $generated@@29 $generated@@196)))))) (let (($generated@@197 ($generated@@44 $generated@@29 ($generated@@121 ($generated@@44 $generated@@29 $generated@@196)))))
(let (($generated@@198 ($generated@@44 $generated@@29 ($generated@@118 ($generated@@44 $generated@@29 $generated@@196)))))
 (and (and ($generated@@92 ($generated@@75 ($generated@@85 $generated@@193) ($generated@@44 $generated@@29 $generated@@195) $generated@@198)) ($generated@@76 ($generated@@44 $generated@@29 $generated@@195) $generated@@198)) (=> (not ($generated@@41 ($generated@@75 ($generated@@85 $generated@@193) ($generated@@44 $generated@@29 $generated@@195) $generated@@198) $generated@@37)) ($generated@@81 ($generated@@44 $generated@@29 $generated@@195) $generated@@197)))))) (= ($generated@@80 ($generated@@85 $generated@@194) ($generated@@44 $generated@@29 $generated@@195) ($generated@@44 $generated@@29 $generated@@196)) (ite ($generated@@55 ($generated@@44 $generated@@29 $generated@@196)) ($generated@@30 ($generated@@44 $generated@@29 $generated@@195) ($generated@@44 $generated@@29 $generated@@39)) (let (($generated@@199 ($generated@@44 $generated@@29 ($generated@@121 ($generated@@44 $generated@@29 $generated@@196)))))
(let (($generated@@200 ($generated@@44 $generated@@29 ($generated@@118 ($generated@@44 $generated@@29 $generated@@196)))))
(ite ($generated@@41 ($generated@@75 ($generated@@85 $generated@@193) ($generated@@44 $generated@@29 $generated@@195) $generated@@200) $generated@@37) ($generated@@30 ($generated@@44 $generated@@29 $generated@@195) ($generated@@44 $generated@@29 ($generated@@30 $generated@@200 $generated@@199))) ($generated@@30 $generated@@200 ($generated@@44 $generated@@29 ($generated@@80 ($generated@@85 $generated@@194) ($generated@@44 $generated@@29 $generated@@195) $generated@@199))))))))))
 :weight 3
 :pattern ( ($generated@@80 ($generated@@85 $generated@@194) ($generated@@44 $generated@@29 $generated@@195) ($generated@@44 $generated@@29 $generated@@196)))
))))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (=> (and ($generated@@202 $generated@@204) ($generated@@28 $generated@@29 $generated@@203 $generated@@40)) ($generated@@201 $generated@@29 $generated@@203 $generated@@40 $generated@@204))
 :pattern ( ($generated@@201 $generated@@29 $generated@@203 $generated@@40 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (=> (and ($generated@@202 $generated@@206) ($generated@@28 $generated@@29 $generated@@205 $generated@@32)) ($generated@@201 $generated@@29 $generated@@205 $generated@@32 $generated@@206))
 :pattern ( ($generated@@201 $generated@@29 $generated@@205 $generated@@32 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and ($generated@@202 $generated@@208) ($generated@@28 $generated@@29 $generated@@207 $generated@@31)) ($generated@@201 $generated@@29 $generated@@207 $generated@@31 $generated@@208))
 :pattern ( ($generated@@201 $generated@@29 $generated@@207 $generated@@31 $generated@@208))
)))
(assert (= ($generated@@209 $generated@@40) $generated@@0))
(assert (= ($generated@@210 $generated@@40) $generated@@9))
(assert (= ($generated@@209 $generated@@32) $generated@@1))
(assert (= ($generated@@210 $generated@@32) $generated@@10))
(assert (= ($generated@@209 $generated@@31) $generated@@2))
(assert (= ($generated@@210 $generated@@31) $generated@@11))
(assert (= $generated@@36 ($generated@@44 $generated@@29 $generated@@36)))
(assert (= $generated@@37 ($generated@@44 $generated@@29 $generated@@37)))
(assert (= $generated@@38 ($generated@@44 $generated@@29 $generated@@38)))
(assert (= $generated@@39 ($generated@@44 $generated@@29 $generated@@39)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ) (!  (=> (and ($generated@@202 $generated@@212) (and ($generated@@53 $generated@@211) ($generated@@201 $generated@@29 $generated@@211 $generated@@32 $generated@@212))) ($generated@@201 $generated@@29 ($generated@@94 $generated@@211) $generated@@32 $generated@@212))
 :pattern ( ($generated@@201 $generated@@29 ($generated@@94 $generated@@211) $generated@@32 $generated@@212))
)))
(assert (forall (($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> (and ($generated@@202 $generated@@214) (and ($generated@@57 $generated@@213) ($generated@@201 $generated@@29 $generated@@213 $generated@@31 $generated@@214))) ($generated@@201 $generated@@29 ($generated@@118 $generated@@213) $generated@@32 $generated@@214))
 :pattern ( ($generated@@201 $generated@@29 ($generated@@118 $generated@@213) $generated@@32 $generated@@214))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ) (!  (=> (and ($generated@@202 $generated@@216) (and ($generated@@57 $generated@@215) ($generated@@201 $generated@@29 $generated@@215 $generated@@31 $generated@@216))) ($generated@@201 $generated@@29 ($generated@@121 $generated@@215) $generated@@31 $generated@@216))
 :pattern ( ($generated@@201 $generated@@29 ($generated@@121 $generated@@215) $generated@@31 $generated@@216))
)))
(assert (forall (($generated@@217 T@U) ($generated@@218 T@U) ) (! (= ($generated@@30 ($generated@@44 $generated@@29 $generated@@217) ($generated@@44 $generated@@29 $generated@@218)) ($generated@@44 $generated@@29 ($generated@@30 $generated@@217 $generated@@218)))
 :pattern ( ($generated@@30 ($generated@@44 $generated@@29 $generated@@217) ($generated@@44 $generated@@29 $generated@@218)))
)))
(assert  (=> (<= 2 $generated@@74) (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (or ($generated@@81 $generated@@220 $generated@@221) (and (< 2 $generated@@74) (and ($generated@@28 $generated@@29 $generated@@220 $generated@@32) ($generated@@28 $generated@@29 $generated@@221 $generated@@31)))) (and (=> (not ($generated@@55 $generated@@221)) (let (($generated@@222 ($generated@@121 $generated@@221)))
(let (($generated@@223 ($generated@@118 $generated@@221)))
 (and (and ($generated@@92 ($generated@@75 ($generated@@85 $generated@@193) $generated@@220 $generated@@223)) ($generated@@76 $generated@@220 $generated@@223)) (=> (not ($generated@@41 ($generated@@75 ($generated@@85 $generated@@193) $generated@@220 $generated@@223) $generated@@37)) ($generated@@81 $generated@@220 $generated@@222)))))) (= ($generated@@80 ($generated@@85 $generated@@219) $generated@@220 $generated@@221) (ite ($generated@@55 $generated@@221) ($generated@@30 $generated@@220 ($generated@@44 $generated@@29 $generated@@39)) (let (($generated@@224 ($generated@@121 $generated@@221)))
(let (($generated@@225 ($generated@@118 $generated@@221)))
(ite ($generated@@41 ($generated@@75 ($generated@@85 $generated@@193) $generated@@220 $generated@@225) $generated@@37) ($generated@@30 $generated@@220 ($generated@@30 $generated@@225 $generated@@224)) ($generated@@30 $generated@@225 ($generated@@80 $generated@@219 $generated@@220 $generated@@224)))))))))
 :pattern ( ($generated@@80 ($generated@@85 $generated@@219) $generated@@220 $generated@@221))
))))
(assert (forall (($generated@@226 T@U) ) (! (= ($generated@@70 ($generated@@44 $generated@@29 $generated@@226)) ($generated@@44 $generated@@29 ($generated@@70 $generated@@226)))
 :pattern ( ($generated@@70 ($generated@@44 $generated@@29 $generated@@226)))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@60 $generated@@228 ($generated@@44 $generated@@228 $generated@@227)) ($generated@@44 $generated@@139 ($generated@@60 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@60 $generated@@228 ($generated@@44 $generated@@228 $generated@@227)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@241  (=> (and (and (not ($generated@@41 ($generated@@75 ($generated@@85 $generated@@193) $generated@@229 $generated@@230) $generated@@37)) ($generated@@201 $generated@@29 $generated@@229 $generated@@32 $generated@@231)) (and ($generated@@201 $generated@@29 $generated@@232 $generated@@31 $generated@@231) (= (ControlFlow 0 6) (- 0 5)))) (or (< ($generated@@128 $generated@@229) ($generated@@128 $generated@@229)) (and (= ($generated@@128 $generated@@229) ($generated@@128 $generated@@229)) (< ($generated@@128 $generated@@232) ($generated@@128 $generated@@233)))))))
(let (($generated@@242 true))
(let (($generated@@243  (=> (and (and (= $generated@@233 ($generated@@30 $generated@@234 $generated@@235)) ($generated@@28 $generated@@29 $generated@@234 $generated@@32)) (and ($generated@@28 $generated@@29 $generated@@235 $generated@@31) (= $generated@@236 $generated@@235))) (=> (and (and (and ($generated@@28 $generated@@29 $generated@@236 $generated@@31) (= $generated@@232 $generated@@236)) (and (= $generated@@237 $generated@@234) ($generated@@28 $generated@@29 $generated@@237 $generated@@32))) (and (and (= $generated@@230 $generated@@237) ($generated@@201 $generated@@29 $generated@@229 $generated@@32 $generated@@231)) (and ($generated@@201 $generated@@29 $generated@@230 $generated@@32 $generated@@231) ($generated@@76 $generated@@229 $generated@@230)))) (and (=> (= (ControlFlow 0 7) 4) $generated@@242) (=> (= (ControlFlow 0 7) 6) $generated@@241))))))
(let (($generated@@244 true))
(let (($generated@@245  (=> (or (not (= $generated@@233 $generated@@39)) (not true)) (and (=> (= (ControlFlow 0 8) 7) $generated@@243) (=> (= (ControlFlow 0 8) 3) $generated@@244)))))
(let (($generated@@246 true))
(let (($generated@@247 true))
(let (($generated@@248  (=> (= $generated@@238 ($generated@@137 $generated@@239 $generated@@231 $generated false)) (and (and (=> (= (ControlFlow 0 9) 1) $generated@@247) (=> (= (ControlFlow 0 9) 2) $generated@@246)) (=> (= (ControlFlow 0 9) 8) $generated@@245)))))
(let (($generated@@249  (=> (and ($generated@@202 $generated@@231) ($generated@@240 $generated@@231)) (=> (and (and ($generated@@28 $generated@@29 $generated@@229 $generated@@32) ($generated@@28 $generated@@29 $generated@@233 $generated@@31)) (and (= 2 $generated@@74) (= (ControlFlow 0 10) 9))) $generated@@248))))
$generated@@249))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
