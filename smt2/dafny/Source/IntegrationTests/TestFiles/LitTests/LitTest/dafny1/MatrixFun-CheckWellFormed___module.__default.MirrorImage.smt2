(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@33 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U) T@U)
(declare-fun $generated@@40 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 (T@T T@T) T@T)
(declare-fun $generated@@44 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@T) T@T)
(declare-fun $generated@@46 (T@T) T@T)
(declare-fun $generated@@67 (T@U T@U) Bool)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@84 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (Int) T@U)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) Bool)
(declare-fun $generated@@160 (T@U) Int)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (= ($generated@@21 $generated@@1) 0))
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ) (!  (=> (and (or (not (= $generated@@29 $generated@@25)) (not true)) (= ($generated@@26 $generated@@29) ($generated@@24 $generated@@28))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@23 $generated@@29)) $generated))
 :pattern ( ($generated@@23 $generated@@29) ($generated@@24 $generated@@28))
)))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (or (not (= $generated@@32 $generated@@25)) (not true)) (= ($generated@@26 $generated@@32) ($generated@@24 $generated@@31))) ($generated@@27 $generated@@7 ($generated@@11 ($generated@@30 $generated@@32)) $generated))
 :pattern ( ($generated@@30 $generated@@32) ($generated@@24 $generated@@31))
)))
(assert (= ($generated@@5 $generated@@34) 3))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38) ($generated@@33 $generated@@34 $generated@@37 ($generated@@24 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@35 $generated@@36) $generated@@38))
 :pattern ( ($generated@@33 $generated@@34 $generated@@37 ($generated@@24 $generated@@36) $generated@@38))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@40 $generated@@47 $generated@@48 ($generated@@44 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@51) $generated@@49)
 :weight 0
)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ) (!  (or (= $generated@@56 $generated@@57) (= ($generated@@40 $generated@@52 $generated@@53 ($generated@@44 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@57) ($generated@@40 $generated@@52 $generated@@53 $generated@@55 $generated@@57)))
 :weight 0
))) (= ($generated@@5 $generated@@41) 4)) (= ($generated@@5 $generated@@42) 5)) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (= ($generated@@5 ($generated@@43 $generated@@58 $generated@@59)) 6))) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (! (= ($generated@@45 ($generated@@43 $generated@@60 $generated@@61)) $generated@@60)
 :pattern ( ($generated@@43 $generated@@60 $generated@@61))
))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@46 ($generated@@43 $generated@@62 $generated@@63)) $generated@@63)
 :pattern ( ($generated@@43 $generated@@62 $generated@@63))
))))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@65 ($generated@@24 $generated@@64) $generated@@66)  (or (= $generated@@65 $generated@@25) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@66 $generated@@65) $generated@@1)))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@65 ($generated@@24 $generated@@64) $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (!  (=> ($generated@@67 $generated@@68 $generated@@69) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@68 $generated@@70) $generated@@1))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@69 $generated@@70) $generated@@1))))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@69 $generated@@70) $generated@@1))
)))
 :pattern ( ($generated@@67 $generated@@68 $generated@@69))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@39 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@39 $generated@@78 $generated@@77))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ) (! (= ($generated@@21 ($generated@@79 $generated@@80 $generated@@81)) (+ ($generated@@21 $generated@@80) 1))
 :pattern ( ($generated@@79 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@83 ($generated@@35 $generated@@82))  (and ($generated@@27 $generated@@34 $generated@@83 ($generated@@24 $generated@@82)) (or (not (= $generated@@83 $generated@@25)) (not true))))
 :pattern ( ($generated@@27 $generated@@34 $generated@@83 ($generated@@35 $generated@@82)))
 :pattern ( ($generated@@27 $generated@@34 $generated@@83 ($generated@@24 $generated@@82)))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@84 ($generated@@76 $generated@@88 $generated@@85) $generated@@86 $generated@@87) ($generated@@33 $generated@@88 $generated@@85 $generated@@86 $generated@@87))
 :pattern ( ($generated@@84 ($generated@@76 $generated@@88 $generated@@85) $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 Int) ) (!  (=> (and (and (and ($generated@@90 $generated@@92) (and (or (not (= $generated@@93 $generated@@25)) (not true)) (= ($generated@@26 $generated@@93) ($generated@@24 $generated@@91)))) (and (and (<= 0 $generated@@94) (< $generated@@94 ($generated@@23 $generated@@93))) (and (<= 0 $generated@@95) (< $generated@@95 ($generated@@30 $generated@@93))))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@92 $generated@@93) $generated@@1)))) ($generated@@84 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@92 $generated@@93) ($generated@@79 ($generated@@89 $generated@@94) $generated@@95)) $generated@@91 $generated@@92))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@92 $generated@@93) ($generated@@79 ($generated@@89 $generated@@94) $generated@@95)) ($generated@@24 $generated@@91))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@67 $generated@@96 $generated@@97) (=> ($generated@@84 $generated@@98 $generated@@99 $generated@@96) ($generated@@84 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@67 $generated@@96 $generated@@97) ($generated@@84 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (!  (=> ($generated@@67 $generated@@100 $generated@@101) (=> ($generated@@33 $generated@@104 $generated@@102 $generated@@103 $generated@@100) ($generated@@33 $generated@@104 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@67 $generated@@100 $generated@@101) ($generated@@33 $generated@@104 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@22 ($generated@@24 $generated@@106)) $generated@@2) (= ($generated@@105 ($generated@@24 $generated@@106)) $generated@@4))
 :pattern ( ($generated@@24 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@22 ($generated@@35 $generated@@107)) $generated@@3) (= ($generated@@105 ($generated@@35 $generated@@107)) $generated@@4))
 :pattern ( ($generated@@35 $generated@@107))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@10 ($generated@@108 $generated@@34 $generated@@41 $generated@@6 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))  (=> (and (or (not (= $generated@@140 $generated@@136)) (not true)) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@137 $generated@@140) $generated@@138)))) (= $generated@@140 $generated@@139)))
 :pattern ( ($generated@@108 $generated@@34 $generated@@41 $generated@@6 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@27 $generated@@34 $generated@@143 ($generated@@24 $generated@@142))  (or (= $generated@@143 $generated@@25) (= ($generated@@26 $generated@@143) ($generated@@24 $generated@@142))))
 :pattern ( ($generated@@27 $generated@@34 $generated@@143 ($generated@@24 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or (not (= $generated@@144 $generated@@146)) (not true)) (=> (and ($generated@@67 $generated@@144 $generated@@145) ($generated@@67 $generated@@145 $generated@@146)) ($generated@@67 $generated@@144 $generated@@146)))
 :pattern ( ($generated@@67 $generated@@144 $generated@@145) ($generated@@67 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 Int) ($generated@@152 Int) ) (!  (=> (and (and ($generated@@90 $generated@@149) (and (or (not (= $generated@@150 $generated@@25)) (not true)) (= ($generated@@26 $generated@@150) ($generated@@24 $generated@@148)))) (and (and (<= 0 $generated@@151) (< $generated@@151 ($generated@@23 $generated@@150))) (and (<= 0 $generated@@152) (< $generated@@152 ($generated@@30 $generated@@150))))) ($generated@@147 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@149 $generated@@150) ($generated@@79 ($generated@@89 $generated@@151) $generated@@152)) $generated@@148))
 :pattern ( ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@149 $generated@@150) ($generated@@79 ($generated@@89 $generated@@151) $generated@@152)) ($generated@@24 $generated@@148))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@147 $generated@@153 $generated) (and (= ($generated@@76 $generated@@7 ($generated@@39 $generated@@7 $generated@@153)) $generated@@153) ($generated@@27 $generated@@7 ($generated@@39 $generated@@7 $generated@@153) $generated)))
 :pattern ( ($generated@@147 $generated@@153 $generated))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@T) ) (! (= ($generated@@147 ($generated@@76 $generated@@156 $generated@@154) $generated@@155) ($generated@@27 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@147 ($generated@@76 $generated@@156 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ) (! (<= 0 ($generated@@23 $generated@@157))
 :pattern ( ($generated@@23 $generated@@157))
)))
(assert (forall (($generated@@158 T@U) ) (! (<= 0 ($generated@@30 $generated@@158))
 :pattern ( ($generated@@30 $generated@@158))
)))
(assert (forall (($generated@@159 Int) ) (! (= ($generated@@21 ($generated@@89 $generated@@159)) 1)
 :pattern ( ($generated@@89 $generated@@159))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@160 ($generated@@89 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@89 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@24 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@24 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! (= ($generated@@164 ($generated@@35 $generated@@165)) $generated@@165)
 :pattern ( ($generated@@35 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@T) ) (! (= ($generated@@39 $generated@@167 ($generated@@76 $generated@@167 $generated@@166)) $generated@@166)
 :pattern ( ($generated@@76 $generated@@167 $generated@@166))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@169) (and (or (not (= $generated@@170 $generated@@25)) (not true)) (= ($generated@@26 $generated@@170) ($generated@@24 $generated@@168)))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@169 $generated@@170) $generated@@1)))) ($generated@@33 $generated@@7 ($generated@@11 ($generated@@23 $generated@@170)) $generated $generated@@169))
 :pattern ( ($generated@@23 $generated@@170) ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@169 $generated@@170) $generated@@1)) ($generated@@24 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and (and ($generated@@90 $generated@@172) (and (or (not (= $generated@@173 $generated@@25)) (not true)) (= ($generated@@26 $generated@@173) ($generated@@24 $generated@@171)))) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@172 $generated@@173) $generated@@1)))) ($generated@@33 $generated@@7 ($generated@@11 ($generated@@30 $generated@@173)) $generated $generated@@172))
 :pattern ( ($generated@@30 $generated@@173) ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@172 $generated@@173) $generated@@1)) ($generated@@24 $generated@@171))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 Int) ) (!  (and (= ($generated@@174 ($generated@@79 $generated@@176 $generated@@177)) $generated@@176) (= ($generated@@175 ($generated@@79 $generated@@176 $generated@@177)) $generated@@177))
 :pattern ( ($generated@@79 $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (!  (=> ($generated@@147 $generated@@179 ($generated@@24 $generated@@178)) (and (= ($generated@@76 $generated@@34 ($generated@@39 $generated@@34 $generated@@179)) $generated@@179) ($generated@@27 $generated@@34 ($generated@@39 $generated@@34 $generated@@179) ($generated@@24 $generated@@178))))
 :pattern ( ($generated@@147 $generated@@179 ($generated@@24 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@U) ) (!  (=> ($generated@@147 $generated@@181 ($generated@@35 $generated@@180)) (and (= ($generated@@76 $generated@@34 ($generated@@39 $generated@@34 $generated@@181)) $generated@@181) ($generated@@27 $generated@@34 ($generated@@39 $generated@@34 $generated@@181) ($generated@@35 $generated@@180))))
 :pattern ( ($generated@@147 $generated@@181 ($generated@@35 $generated@@180)))
)))
(assert (forall (($generated@@182 Int) ) (! (= ($generated@@76 $generated@@7 ($generated@@11 ($generated@@71 $generated@@182))) ($generated@@73 $generated@@42 ($generated@@76 $generated@@7 ($generated@@11 $generated@@182))))
 :pattern ( ($generated@@76 $generated@@7 ($generated@@11 ($generated@@71 $generated@@182))))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@T) ) (! (= ($generated@@76 $generated@@184 ($generated@@73 $generated@@184 $generated@@183)) ($generated@@73 $generated@@42 ($generated@@76 $generated@@184 $generated@@183)))
 :pattern ( ($generated@@76 $generated@@184 ($generated@@73 $generated@@184 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! ($generated@@33 $generated@@7 $generated@@186 $generated $generated@@185)
 :pattern ( ($generated@@33 $generated@@7 $generated@@186 $generated $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ) (! ($generated@@27 $generated@@7 $generated@@187 $generated)
 :pattern ( ($generated@@27 $generated@@7 $generated@@187 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 (T@U) Bool)
(declare-fun $generated@@196 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 21) (let (($generated@@197 true))
(let (($generated@@198  (=> (and (<= ($generated@@71 0) $generated@@188) (< $generated@@188 ($generated@@30 $generated@@189))) (and (=> (= (ControlFlow 0 3) (- 0 12)) (or (not (= $generated@@189 $generated@@25)) (not true))) (=> (or (not (= $generated@@189 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 11)) (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@23 $generated@@189)))) (=> (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@23 $generated@@189))) (and (=> (= (ControlFlow 0 3) (- 0 10)) (and (<= 0 $generated@@188) (< $generated@@188 ($generated@@30 $generated@@189)))) (=> (and (<= 0 $generated@@188) (< $generated@@188 ($generated@@30 $generated@@189))) (and (=> (= (ControlFlow 0 3) (- 0 9)) (or (not (= $generated@@189 $generated@@25)) (not true))) (=> (or (not (= $generated@@189 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 8)) ($generated@@33 $generated@@34 $generated@@189 ($generated@@35 $generated@@191) $generated@@192)) (=> ($generated@@33 $generated@@34 $generated@@189 ($generated@@35 $generated@@191) $generated@@192) (and (=> (= (ControlFlow 0 3) (- 0 7)) (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@23 $generated@@189)))) (=> (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@23 $generated@@189))) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (not (= $generated@@189 $generated@@25)) (not true))) (=> (or (not (= $generated@@189 $generated@@25)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@33 $generated@@34 $generated@@189 ($generated@@35 $generated@@191) $generated@@192)) (=> ($generated@@33 $generated@@34 $generated@@189 ($generated@@35 $generated@@191) $generated@@192) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 (- (- ($generated@@30 $generated@@189) 1) $generated@@188)) (< (- (- ($generated@@30 $generated@@189) 1) $generated@@188) ($generated@@30 $generated@@189)))) (=> (and (<= 0 (- (- ($generated@@30 $generated@@189) 1) $generated@@188)) (< (- (- ($generated@@30 $generated@@189) 1) $generated@@188) ($generated@@30 $generated@@189))) (=> (and (= ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@193 $generated@@189) ($generated@@79 ($generated@@89 $generated@@190) $generated@@188)) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@189) ($generated@@79 ($generated@@89 $generated@@190) (- (- ($generated@@30 $generated@@189) 1) $generated@@188)))) (= (ControlFlow 0 3) 1)) $generated@@197))))))))))))))))))))))
(let (($generated@@199  (=> (and (< $generated@@188 ($generated@@71 0)) (= (ControlFlow 0 15) 3)) $generated@@198)))
(let (($generated@@200  (=> (<= ($generated@@71 0) $generated@@188) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= $generated@@189 $generated@@25)) (not true))) (=> (or (not (= $generated@@189 $generated@@25)) (not true)) (=> (= (ControlFlow 0 13) 3) $generated@@198))))))
(let (($generated@@201  (=> (and (<= ($generated@@71 0) $generated@@190) (< $generated@@190 ($generated@@23 $generated@@189))) (and (=> (= (ControlFlow 0 16) 13) $generated@@200) (=> (= (ControlFlow 0 16) 15) $generated@@199)))))
(let (($generated@@202  (=> (and (< $generated@@190 ($generated@@71 0)) (= (ControlFlow 0 19) 16)) $generated@@201)))
(let (($generated@@203  (=> (<= ($generated@@71 0) $generated@@190) (and (=> (= (ControlFlow 0 17) (- 0 18)) (or (not (= $generated@@189 $generated@@25)) (not true))) (=> (or (not (= $generated@@189 $generated@@25)) (not true)) (=> (= (ControlFlow 0 17) 16) $generated@@201))))))
(let (($generated@@204  (=> (and (=> (and (and (<= ($generated@@71 0) $generated@@190) (< $generated@@190 ($generated@@23 $generated@@189))) (and (<= ($generated@@71 0) $generated@@188) (< $generated@@188 ($generated@@30 $generated@@189)))) (= ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@193 $generated@@189) ($generated@@79 ($generated@@89 $generated@@190) $generated@@188)) ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@189) ($generated@@79 ($generated@@89 $generated@@190) (- (- ($generated@@30 $generated@@189) 1) $generated@@188))))) (= (ControlFlow 0 2) 1)) $generated@@197)))
(let (($generated@@205  (=> (= $generated@@194 ($generated@@109 $generated@@25 $generated@@192 $generated@@1 $generated@@189)) (=> (and (and ($generated@@90 $generated@@193) ($generated@@195 $generated@@193)) (and (forall (($generated@@206 T@U) ) (!  (=> (and (or (not (= $generated@@206 $generated@@25)) (not true)) ($generated@@10 ($generated@@39 $generated@@6 ($generated@@40 $generated@@41 $generated@@42 ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@206) $generated@@1)))) (or (= ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@193 $generated@@206) ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@192 $generated@@206)) (= $generated@@206 $generated@@189)))
 :pattern ( ($generated@@40 $generated@@34 ($generated@@43 $generated@@41 $generated@@42) $generated@@193 $generated@@206))
)) ($generated@@67 $generated@@192 $generated@@193))) (and (and (=> (= (ControlFlow 0 20) 2) $generated@@204) (=> (= (ControlFlow 0 20) 17) $generated@@203)) (=> (= (ControlFlow 0 20) 19) $generated@@202))))))
(let (($generated@@207  (=> (and ($generated@@90 $generated@@192) ($generated@@195 $generated@@192)) (=> (and (and ($generated@@27 $generated@@34 $generated@@189 ($generated@@35 $generated@@191)) ($generated@@33 $generated@@34 $generated@@189 ($generated@@35 $generated@@191) $generated@@192)) (and (= 0 $generated@@196) (= (ControlFlow 0 21) 20))) $generated@@205))))
$generated@@207)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
