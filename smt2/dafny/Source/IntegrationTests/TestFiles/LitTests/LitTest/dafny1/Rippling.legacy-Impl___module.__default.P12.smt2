(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U T@U) T@U)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@37 () Int)
(declare-fun $generated@@38 (T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 () T@T)
(declare-fun $generated@@42 (T@U) Bool)
(declare-fun $generated@@43 (T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 (T@U) T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@59 (T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@U) T@U)
(declare-fun $generated@@70 (T@U T@U) Bool)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@75 (T@U T@U) T@U)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@84 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@99 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@100 () T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@111 (T@U) Bool)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@155 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@170 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@176 (T@U T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@183 (T@U) T@U)
(declare-fun $generated@@186 (T@U) T@U)
(declare-fun $generated@@199 (T@U) Int)
(declare-fun $generated@@222 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@223 () T@T)
(declare-fun $generated@@224 () T@T)
(declare-fun $generated@@225 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@226 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@227 () T@T)
(declare-fun $generated@@228 (T@T T@T) T@T)
(declare-fun $generated@@229 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@230 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@231 (T@T) T@T)
(declare-fun $generated@@232 (T@T) T@T)
(declare-fun $generated@@281 (T@U) T@U)
(declare-fun $generated@@282 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@14 $generated@@31) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@32 $generated@@35 $generated@@36) $generated@@33)  (and ($generated@@30 $generated@@31 $generated@@35 $generated@@34) ($generated@@30 $generated@@31 $generated@@36 $generated@@33)))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@32 $generated@@35 $generated@@36) $generated@@33))
)))
(assert (= ($generated@@14 $generated@@41) 4))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (!  (=> (or ($generated@@43 ($generated@@40 $generated@@41 $generated@@54) ($generated@@40 $generated@@31 $generated@@55)) (and (< 2 $generated@@37) (and (and ($generated@@42 $generated@@53) ($generated@@30 $generated@@41 $generated@@54 ($generated@@44 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@55 $generated@@33)))) (and (=> (not ($generated@@19 ($generated@@40 $generated@@15 ($generated@@18 ($generated@@45 ($generated@@40 $generated@@31 $generated@@55)))))) (let (($generated@@56 ($generated@@40 $generated@@31 ($generated@@46 ($generated@@40 $generated@@31 $generated@@55)))))
($generated@@43 ($generated@@40 $generated@@41 $generated@@54) $generated@@56))) (= ($generated@@38 ($generated@@39 $generated@@52) ($generated@@40 $generated@@41 $generated@@54) ($generated@@40 $generated@@31 $generated@@55)) (ite ($generated@@45 ($generated@@40 $generated@@31 $generated@@55)) $generated@@47 (let (($generated@@57 ($generated@@40 $generated@@31 ($generated@@46 ($generated@@40 $generated@@31 $generated@@55)))))
(let (($generated@@58 ($generated@@40 $generated@@31 ($generated@@48 ($generated@@40 $generated@@31 $generated@@55)))))
($generated@@32 ($generated@@49 $generated@@31 ($generated@@50 $generated@@34 $generated@@34 $generated@@53 ($generated@@40 $generated@@41 $generated@@54) ($generated@@51 $generated@@31 $generated@@58))) ($generated@@40 $generated@@31 ($generated@@38 ($generated@@39 $generated@@52) ($generated@@40 $generated@@41 $generated@@54) $generated@@57)))))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@52) ($generated@@40 $generated@@41 $generated@@54) ($generated@@40 $generated@@31 $generated@@55)) ($generated@@42 $generated@@53))
))))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (=> (or ($generated@@60 ($generated@@40 $generated@@31 $generated@@64) ($generated@@40 $generated@@31 $generated@@65)) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@31 $generated@@64 $generated@@34) ($generated@@30 $generated@@31 $generated@@65 $generated@@33)))) (and (=> (not ($generated@@19 ($generated@@40 $generated@@15 ($generated@@18 ($generated@@61 ($generated@@40 $generated@@31 $generated@@64)))))) (let (($generated@@66 ($generated@@40 $generated@@31 ($generated@@62 ($generated@@40 $generated@@31 $generated@@64)))))
 (=> (not ($generated@@19 ($generated@@40 $generated@@15 ($generated@@18 ($generated@@45 ($generated@@40 $generated@@31 $generated@@65)))))) (let (($generated@@67 ($generated@@40 $generated@@31 ($generated@@46 ($generated@@40 $generated@@31 $generated@@65)))))
($generated@@60 $generated@@66 $generated@@67))))) (= ($generated@@59 ($generated@@39 $generated@@63) ($generated@@40 $generated@@31 $generated@@64) ($generated@@40 $generated@@31 $generated@@65)) (ite ($generated@@61 ($generated@@40 $generated@@31 $generated@@64)) $generated@@65 (let (($generated@@68 ($generated@@40 $generated@@31 ($generated@@62 ($generated@@40 $generated@@31 $generated@@64)))))
(ite ($generated@@45 ($generated@@40 $generated@@31 $generated@@65)) $generated@@47 (let (($generated@@69 ($generated@@40 $generated@@31 ($generated@@46 ($generated@@40 $generated@@31 $generated@@65)))))
($generated@@40 $generated@@31 ($generated@@59 ($generated@@39 $generated@@63) $generated@@68 $generated@@69)))))))))
 :weight 3
 :pattern ( ($generated@@59 ($generated@@39 $generated@@63) ($generated@@40 $generated@@31 $generated@@64) ($generated@@40 $generated@@31 $generated@@65)))
))))
(assert (forall (($generated@@72 T@U) ) (!  (not ($generated@@70 $generated@@71 $generated@@72))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (= ($generated@@73 $generated@@74) $generated@@5))
(assert (= ($generated@@73 $generated@@47) $generated@@7))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@41 $generated@@77 ($generated@@75 $generated@@78 $generated@@79)) (forall (($generated@@82 T@U) ) (!  (=> ($generated@@76 $generated@@82 $generated@@80) ($generated@@76 $generated@@82 $generated@@78))
 :pattern ( ($generated@@76 $generated@@82 $generated@@80))
 :pattern ( ($generated@@76 $generated@@82 $generated@@78))
))) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@76 $generated@@83 $generated@@79) ($generated@@76 $generated@@83 $generated@@81))
 :pattern ( ($generated@@76 $generated@@83 $generated@@79))
 :pattern ( ($generated@@76 $generated@@83 $generated@@81))
))) ($generated@@30 $generated@@41 $generated@@77 ($generated@@75 $generated@@80 $generated@@81)))
 :pattern ( ($generated@@30 $generated@@41 $generated@@77 ($generated@@75 $generated@@78 $generated@@79)) ($generated@@30 $generated@@41 $generated@@77 ($generated@@75 $generated@@80 $generated@@81)))
)))
(assert ($generated@@30 $generated@@31 $generated@@74 $generated@@34))
(assert ($generated@@30 $generated@@31 $generated@@47 $generated@@33))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@84 $generated@@85 $generated@@86) (= $generated@@85 $generated@@86))
 :pattern ( ($generated@@84 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@87 $generated@@88 $generated@@89) (= $generated@@88 $generated@@89))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@43 $generated@@92 $generated@@93) (and (< 2 $generated@@37) (and (and ($generated@@42 $generated@@91) ($generated@@30 $generated@@41 $generated@@92 ($generated@@44 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@93 $generated@@33)))) (and (=> (not ($generated@@45 $generated@@93)) (let (($generated@@94 ($generated@@46 $generated@@93)))
($generated@@43 $generated@@92 $generated@@94))) (= ($generated@@38 ($generated@@39 $generated@@90) $generated@@92 $generated@@93) (ite ($generated@@45 $generated@@93) $generated@@47 (let (($generated@@95 ($generated@@46 $generated@@93)))
(let (($generated@@96 ($generated@@48 $generated@@93)))
($generated@@32 ($generated@@49 $generated@@31 ($generated@@50 $generated@@34 $generated@@34 $generated@@91 $generated@@92 ($generated@@51 $generated@@31 $generated@@96))) ($generated@@38 $generated@@90 $generated@@92 $generated@@95))))))))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@90) $generated@@92 $generated@@93) ($generated@@42 $generated@@91))
))))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@40 $generated@@98 $generated@@97) $generated@@97)
 :pattern ( ($generated@@40 $generated@@98 $generated@@97))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ) (!  (=> (and ($generated@@42 $generated@@104) (and ($generated@@76 $generated@@106 $generated@@102) ($generated@@30 $generated@@41 $generated@@105 ($generated@@75 $generated@@102 $generated@@103)))) (= ($generated@@101 ($generated@@99 $generated@@102 $generated@@103 $generated@@100 $generated@@105 $generated@@106) $generated@@71) ($generated@@101 ($generated@@99 $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106) $generated@@71)))
 :pattern ( ($generated@@99 $generated@@102 $generated@@103 $generated@@100 $generated@@105 $generated@@106) ($generated@@42 $generated@@104))
 :pattern ( ($generated@@99 $generated@@102 $generated@@103 $generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@61 $generated@@107) (= ($generated@@73 $generated@@107) $generated@@5))
 :pattern ( ($generated@@61 $generated@@107))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@108 $generated@@109) (= ($generated@@73 $generated@@109) $generated@@6))
 :pattern ( ($generated@@108 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (! (= ($generated@@45 $generated@@110) (= ($generated@@73 $generated@@110) $generated@@7))
 :pattern ( ($generated@@45 $generated@@110))
)))
(assert (forall (($generated@@112 T@U) ) (! (= ($generated@@111 $generated@@112) (= ($generated@@73 $generated@@112) $generated@@8))
 :pattern ( ($generated@@111 $generated@@112))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@T) ) (! (= ($generated@@51 $generated@@114 ($generated@@49 $generated@@114 $generated@@113)) $generated@@113)
 :pattern ( ($generated@@49 $generated@@114 $generated@@113))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (or ($generated@@43 $generated@@117 ($generated@@40 $generated@@31 $generated@@118)) (and (< 2 $generated@@37) (and (and ($generated@@42 $generated@@116) ($generated@@30 $generated@@41 $generated@@117 ($generated@@44 $generated@@34 $generated@@34))) ($generated@@30 $generated@@31 $generated@@118 $generated@@33)))) (and (=> (not ($generated@@19 ($generated@@40 $generated@@15 ($generated@@18 ($generated@@45 ($generated@@40 $generated@@31 $generated@@118)))))) (let (($generated@@119 ($generated@@40 $generated@@31 ($generated@@46 ($generated@@40 $generated@@31 $generated@@118)))))
($generated@@43 $generated@@117 $generated@@119))) (= ($generated@@38 ($generated@@39 $generated@@115) $generated@@117 ($generated@@40 $generated@@31 $generated@@118)) (ite ($generated@@45 ($generated@@40 $generated@@31 $generated@@118)) $generated@@47 (let (($generated@@120 ($generated@@40 $generated@@31 ($generated@@46 ($generated@@40 $generated@@31 $generated@@118)))))
(let (($generated@@121 ($generated@@40 $generated@@31 ($generated@@48 ($generated@@40 $generated@@31 $generated@@118)))))
($generated@@32 ($generated@@49 $generated@@31 ($generated@@50 $generated@@34 $generated@@34 $generated@@116 $generated@@117 ($generated@@51 $generated@@31 $generated@@121))) ($generated@@38 ($generated@@39 $generated@@115) $generated@@117 $generated@@120))))))))
 :weight 3
 :pattern ( ($generated@@38 ($generated@@39 $generated@@115) $generated@@117 ($generated@@40 $generated@@31 $generated@@118)) ($generated@@42 $generated@@116))
))))
(assert (forall (($generated@@122 T@U) ) (!  (=> ($generated@@111 $generated@@122) (exists (($generated@@123 T@U) ($generated@@124 T@U) ) (= $generated@@122 ($generated@@32 $generated@@123 $generated@@124))))
 :pattern ( ($generated@@111 $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@61 $generated@@125) (= $generated@@125 $generated@@74))
 :pattern ( ($generated@@61 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@45 $generated@@126) (= $generated@@126 $generated@@47))
 :pattern ( ($generated@@45 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@108 $generated@@128) (exists (($generated@@129 T@U) ) (= $generated@@128 ($generated@@127 $generated@@129))))
 :pattern ( ($generated@@108 $generated@@128))
)))
(assert ($generated@@42 $generated@@100))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or ($generated@@60 $generated@@131 $generated@@132) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@31 $generated@@131 $generated@@34) ($generated@@30 $generated@@31 $generated@@132 $generated@@33)))) (and (=> (not ($generated@@61 $generated@@131)) (let (($generated@@133 ($generated@@62 $generated@@131)))
 (=> (not ($generated@@45 $generated@@132)) (let (($generated@@134 ($generated@@46 $generated@@132)))
($generated@@60 $generated@@133 $generated@@134))))) (= ($generated@@59 ($generated@@39 $generated@@130) $generated@@131 $generated@@132) (ite ($generated@@61 $generated@@131) $generated@@132 (let (($generated@@135 ($generated@@62 $generated@@131)))
(ite ($generated@@45 $generated@@132) $generated@@47 (let (($generated@@136 ($generated@@46 $generated@@132)))
($generated@@59 $generated@@130 $generated@@135 $generated@@136))))))))
 :pattern ( ($generated@@59 ($generated@@39 $generated@@130) $generated@@131 $generated@@132))
))))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@76 $generated@@137 $generated@@34) (and (= ($generated@@51 $generated@@31 ($generated@@49 $generated@@31 $generated@@137)) $generated@@137) ($generated@@30 $generated@@31 ($generated@@49 $generated@@31 $generated@@137) $generated@@34)))
 :pattern ( ($generated@@76 $generated@@137 $generated@@34))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@76 $generated@@138 $generated@@33) (and (= ($generated@@51 $generated@@31 ($generated@@49 $generated@@31 $generated@@138)) $generated@@138) ($generated@@30 $generated@@31 ($generated@@49 $generated@@31 $generated@@138) $generated@@33)))
 :pattern ( ($generated@@76 $generated@@138 $generated@@33))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@30 $generated@@31 ($generated@@127 $generated@@139) $generated@@34) ($generated@@30 $generated@@31 $generated@@139 $generated@@34))
 :pattern ( ($generated@@30 $generated@@31 ($generated@@127 $generated@@139) $generated@@34))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@108 $generated@@140) ($generated@@108 $generated@@141)) (= ($generated@@84 $generated@@140 $generated@@141) ($generated@@84 ($generated@@62 $generated@@140) ($generated@@62 $generated@@141))))
 :pattern ( ($generated@@84 $generated@@140 $generated@@141) ($generated@@108 $generated@@140))
 :pattern ( ($generated@@84 $generated@@140 $generated@@141) ($generated@@108 $generated@@141))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (or ($generated@@60 $generated@@143 $generated@@144) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@31 $generated@@143 $generated@@34) ($generated@@30 $generated@@31 $generated@@144 $generated@@33)))) ($generated@@30 $generated@@31 ($generated@@59 $generated@@142 $generated@@143 $generated@@144) $generated@@33))
 :pattern ( ($generated@@59 $generated@@142 $generated@@143 $generated@@144))
))))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ) (! (= ($generated@@59 ($generated@@39 $generated@@145) $generated@@146 $generated@@147) ($generated@@59 $generated@@145 $generated@@146 $generated@@147))
 :pattern ( ($generated@@59 ($generated@@39 $generated@@145) $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@38 ($generated@@39 $generated@@148) $generated@@149 $generated@@150) ($generated@@38 $generated@@148 $generated@@149 $generated@@150))
 :pattern ( ($generated@@38 ($generated@@39 $generated@@148) $generated@@149 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@101 $generated@@151 $generated@@152) (= $generated@@151 $generated@@152))
 :pattern ( ($generated@@101 $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@153 $generated@@34) (or ($generated@@61 $generated@@153) ($generated@@108 $generated@@153)))
 :pattern ( ($generated@@108 $generated@@153) ($generated@@30 $generated@@31 $generated@@153 $generated@@34))
 :pattern ( ($generated@@61 $generated@@153) ($generated@@30 $generated@@31 $generated@@153 $generated@@34))
)))
(assert (forall (($generated@@154 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@154 $generated@@33) (or ($generated@@45 $generated@@154) ($generated@@111 $generated@@154)))
 :pattern ( ($generated@@111 $generated@@154) ($generated@@30 $generated@@31 $generated@@154 $generated@@33))
 :pattern ( ($generated@@45 $generated@@154) ($generated@@30 $generated@@31 $generated@@154 $generated@@33))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@30 $generated@@41 $generated@@156 ($generated@@75 $generated@@157 $generated@@158)) (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@159) ($generated@@76 $generated@@160 $generated@@157)) ($generated@@155 $generated@@157 $generated@@158 $generated@@159 $generated@@156 $generated@@160)) ($generated@@76 ($generated@@50 $generated@@157 $generated@@158 $generated@@159 $generated@@156 $generated@@160) $generated@@158))
 :pattern ( ($generated@@50 $generated@@157 $generated@@158 $generated@@159 $generated@@156 $generated@@160))
)))
 :pattern ( ($generated@@30 $generated@@41 $generated@@156 ($generated@@75 $generated@@157 $generated@@158)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (and ($generated@@111 $generated@@161) ($generated@@111 $generated@@162)) (= ($generated@@87 $generated@@161 $generated@@162)  (and ($generated@@84 ($generated@@48 $generated@@161) ($generated@@48 $generated@@162)) ($generated@@87 ($generated@@46 $generated@@161) ($generated@@46 $generated@@162)))))
 :pattern ( ($generated@@87 $generated@@161 $generated@@162) ($generated@@111 $generated@@161))
 :pattern ( ($generated@@87 $generated@@161 $generated@@162) ($generated@@111 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@76 ($generated@@51 $generated@@165 $generated@@163) $generated@@164) ($generated@@30 $generated@@165 $generated@@163 $generated@@164))
 :pattern ( ($generated@@76 ($generated@@51 $generated@@165 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and ($generated@@61 $generated@@166) ($generated@@61 $generated@@167)) ($generated@@84 $generated@@166 $generated@@167))
 :pattern ( ($generated@@84 $generated@@166 $generated@@167) ($generated@@61 $generated@@166))
 :pattern ( ($generated@@84 $generated@@166 $generated@@167) ($generated@@61 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ) (!  (=> (and ($generated@@45 $generated@@168) ($generated@@45 $generated@@169)) ($generated@@87 $generated@@168 $generated@@169))
 :pattern ( ($generated@@87 $generated@@168 $generated@@169) ($generated@@45 $generated@@168))
 :pattern ( ($generated@@87 $generated@@168 $generated@@169) ($generated@@45 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@170 ($generated@@75 $generated@@171 $generated@@172)) $generated@@171)
 :pattern ( ($generated@@75 $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@173 ($generated@@75 $generated@@174 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@75 $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@177 ($generated@@176 $generated@@178 $generated@@179)) $generated@@178)
 :pattern ( ($generated@@176 $generated@@178 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! (= ($generated@@180 ($generated@@176 $generated@@181 $generated@@182)) $generated@@182)
 :pattern ( ($generated@@176 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@183 ($generated@@44 $generated@@184 $generated@@185)) $generated@@184)
 :pattern ( ($generated@@44 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@186 ($generated@@44 $generated@@187 $generated@@188)) $generated@@188)
 :pattern ( ($generated@@44 $generated@@187 $generated@@188))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@73 ($generated@@32 $generated@@189 $generated@@190)) $generated@@8)
 :pattern ( ($generated@@32 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! (= ($generated@@48 ($generated@@32 $generated@@191 $generated@@192)) $generated@@191)
 :pattern ( ($generated@@32 $generated@@191 $generated@@192))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@46 ($generated@@32 $generated@@193 $generated@@194)) $generated@@194)
 :pattern ( ($generated@@32 $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ) (! (= ($generated@@73 ($generated@@127 $generated@@195)) $generated@@6)
 :pattern ( ($generated@@127 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (! (= ($generated@@62 ($generated@@127 $generated@@196)) $generated@@196)
 :pattern ( ($generated@@127 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@T) ) (! (= ($generated@@49 $generated@@198 ($generated@@51 $generated@@198 $generated@@197)) $generated@@197)
 :pattern ( ($generated@@51 $generated@@198 $generated@@197))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (< ($generated@@199 $generated@@200) ($generated@@199 ($generated@@32 $generated@@200 $generated@@201)))
 :pattern ( ($generated@@32 $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! (< ($generated@@199 $generated@@203) ($generated@@199 ($generated@@32 $generated@@202 $generated@@203)))
 :pattern ( ($generated@@32 $generated@@202 $generated@@203))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ) (! (= ($generated@@30 $generated@@41 $generated@@206 ($generated@@44 $generated@@204 $generated@@205))  (and ($generated@@30 $generated@@41 $generated@@206 ($generated@@176 $generated@@204 $generated@@205)) (forall (($generated@@207 T@U) )  (=> ($generated@@76 $generated@@207 $generated@@204) ($generated@@155 $generated@@204 $generated@@205 $generated@@100 $generated@@206 $generated@@207)))))
 :pattern ( ($generated@@30 $generated@@41 $generated@@206 ($generated@@44 $generated@@204 $generated@@205)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@30 $generated@@41 $generated@@210 ($generated@@176 $generated@@208 $generated@@209))  (and ($generated@@30 $generated@@41 $generated@@210 ($generated@@75 $generated@@208 $generated@@209)) (forall (($generated@@211 T@U) )  (=> ($generated@@76 $generated@@211 $generated@@208) ($generated@@101 ($generated@@99 $generated@@208 $generated@@209 $generated@@100 $generated@@210 $generated@@211) $generated@@71)))))
 :pattern ( ($generated@@30 $generated@@41 $generated@@210 ($generated@@176 $generated@@208 $generated@@209)))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@76 $generated@@214 ($generated@@75 $generated@@212 $generated@@213)) (and (= ($generated@@51 $generated@@41 ($generated@@49 $generated@@41 $generated@@214)) $generated@@214) ($generated@@30 $generated@@41 ($generated@@49 $generated@@41 $generated@@214) ($generated@@75 $generated@@212 $generated@@213))))
 :pattern ( ($generated@@76 $generated@@214 ($generated@@75 $generated@@212 $generated@@213)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@76 $generated@@217 ($generated@@176 $generated@@215 $generated@@216)) (and (= ($generated@@51 $generated@@41 ($generated@@49 $generated@@41 $generated@@217)) $generated@@217) ($generated@@30 $generated@@41 ($generated@@49 $generated@@41 $generated@@217) ($generated@@176 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@76 $generated@@217 ($generated@@176 $generated@@215 $generated@@216)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ) (!  (=> ($generated@@76 $generated@@220 ($generated@@44 $generated@@218 $generated@@219)) (and (= ($generated@@51 $generated@@41 ($generated@@49 $generated@@41 $generated@@220)) $generated@@220) ($generated@@30 $generated@@41 ($generated@@49 $generated@@41 $generated@@220) ($generated@@44 $generated@@218 $generated@@219))))
 :pattern ( ($generated@@76 $generated@@220 ($generated@@44 $generated@@218 $generated@@219)))
)))
(assert (forall (($generated@@221 T@U) ) (! (< ($generated@@199 $generated@@221) ($generated@@199 ($generated@@127 $generated@@221)))
 :pattern ( ($generated@@127 $generated@@221))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@233 T@T) ($generated@@234 T@T) ($generated@@235 T@T) ($generated@@236 T@U) ($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (! (= ($generated@@222 $generated@@233 $generated@@234 $generated@@235 ($generated@@229 $generated@@233 $generated@@234 $generated@@235 $generated@@237 $generated@@238 $generated@@239 $generated@@236) $generated@@238 $generated@@239) $generated@@236)
 :weight 0
)) (and (forall (($generated@@240 T@T) ($generated@@241 T@T) ($generated@@242 T@T) ($generated@@243 T@U) ($generated@@244 T@U) ($generated@@245 T@U) ($generated@@246 T@U) ($generated@@247 T@U) ($generated@@248 T@U) ) (!  (or (= $generated@@245 $generated@@247) (= ($generated@@222 $generated@@240 $generated@@241 $generated@@242 ($generated@@229 $generated@@240 $generated@@241 $generated@@242 $generated@@244 $generated@@245 $generated@@246 $generated@@243) $generated@@247 $generated@@248) ($generated@@222 $generated@@240 $generated@@241 $generated@@242 $generated@@244 $generated@@247 $generated@@248)))
 :weight 0
)) (forall (($generated@@249 T@T) ($generated@@250 T@T) ($generated@@251 T@T) ($generated@@252 T@U) ($generated@@253 T@U) ($generated@@254 T@U) ($generated@@255 T@U) ($generated@@256 T@U) ($generated@@257 T@U) ) (!  (or (= $generated@@255 $generated@@257) (= ($generated@@222 $generated@@249 $generated@@250 $generated@@251 ($generated@@229 $generated@@249 $generated@@250 $generated@@251 $generated@@253 $generated@@254 $generated@@255 $generated@@252) $generated@@256 $generated@@257) ($generated@@222 $generated@@249 $generated@@250 $generated@@251 $generated@@253 $generated@@256 $generated@@257)))
 :weight 0
)))) (= ($generated@@14 $generated@@223) 5)) (= ($generated@@14 $generated@@224) 6)) (forall (($generated@@258 T@T) ($generated@@259 T@T) ($generated@@260 T@U) ($generated@@261 T@U) ($generated@@262 T@U) ) (! (= ($generated@@226 $generated@@258 $generated@@259 ($generated@@230 $generated@@258 $generated@@259 $generated@@261 $generated@@262 $generated@@260) $generated@@262) $generated@@260)
 :weight 0
))) (forall (($generated@@263 T@T) ($generated@@264 T@T) ($generated@@265 T@U) ($generated@@266 T@U) ($generated@@267 T@U) ($generated@@268 T@U) ) (!  (or (= $generated@@267 $generated@@268) (= ($generated@@226 $generated@@263 $generated@@264 ($generated@@230 $generated@@263 $generated@@264 $generated@@266 $generated@@267 $generated@@265) $generated@@268) ($generated@@226 $generated@@263 $generated@@264 $generated@@266 $generated@@268)))
 :weight 0
))) (= ($generated@@14 $generated@@227) 7)) (forall (($generated@@269 T@T) ($generated@@270 T@T) ) (= ($generated@@14 ($generated@@228 $generated@@269 $generated@@270)) 8))) (forall (($generated@@271 T@T) ($generated@@272 T@T) ) (! (= ($generated@@231 ($generated@@228 $generated@@271 $generated@@272)) $generated@@271)
 :pattern ( ($generated@@228 $generated@@271 $generated@@272))
))) (forall (($generated@@273 T@T) ($generated@@274 T@T) ) (! (= ($generated@@232 ($generated@@228 $generated@@273 $generated@@274)) $generated@@274)
 :pattern ( ($generated@@228 $generated@@273 $generated@@274))
))))
(assert (forall (($generated@@275 T@U) ($generated@@276 T@U) ($generated@@277 T@U) ($generated@@278 Bool) ($generated@@279 T@U) ($generated@@280 T@U) ) (! (= ($generated@@19 ($generated@@222 $generated@@223 $generated@@224 $generated@@15 ($generated@@225 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))  (=> (and (or (not (= $generated@@279 $generated@@275)) (not true)) ($generated@@19 ($generated@@49 $generated@@15 ($generated@@226 $generated@@224 $generated@@227 ($generated@@226 $generated@@223 ($generated@@228 $generated@@224 $generated@@227) $generated@@276 $generated@@279) $generated@@277)))) $generated@@278))
 :pattern ( ($generated@@222 $generated@@223 $generated@@224 $generated@@15 ($generated@@225 $generated@@275 $generated@@276 $generated@@277 $generated@@278) $generated@@279 $generated@@280))
)))
(assert (forall (($generated@@283 T@U) ($generated@@284 T@U) ) (!  (and (= ($generated@@281 ($generated@@75 $generated@@283 $generated@@284)) $generated@@0) (= ($generated@@282 ($generated@@75 $generated@@283 $generated@@284)) $generated@@9))
 :pattern ( ($generated@@75 $generated@@283 $generated@@284))
)))
(assert (forall (($generated@@285 T@U) ($generated@@286 T@U) ) (!  (and (= ($generated@@281 ($generated@@176 $generated@@285 $generated@@286)) $generated@@1) (= ($generated@@282 ($generated@@176 $generated@@285 $generated@@286)) $generated@@10))
 :pattern ( ($generated@@176 $generated@@285 $generated@@286))
)))
(assert (forall (($generated@@287 T@U) ($generated@@288 T@U) ) (!  (and (= ($generated@@281 ($generated@@44 $generated@@287 $generated@@288)) $generated@@2) (= ($generated@@282 ($generated@@44 $generated@@287 $generated@@288)) $generated@@11))
 :pattern ( ($generated@@44 $generated@@287 $generated@@288))
)))
(assert (forall (($generated@@289 T@U) ($generated@@290 T@U) ($generated@@291 T@U) ($generated@@292 T@U) ($generated@@293 T@U) ) (!  (=> (and (and ($generated@@42 $generated@@291) (and ($generated@@76 $generated@@293 $generated@@289) ($generated@@30 $generated@@41 $generated@@292 ($generated@@75 $generated@@289 $generated@@290)))) ($generated@@101 ($generated@@99 $generated@@289 $generated@@290 $generated@@100 $generated@@292 $generated@@293) $generated@@71)) (= ($generated@@155 $generated@@289 $generated@@290 $generated@@100 $generated@@292 $generated@@293) ($generated@@155 $generated@@289 $generated@@290 $generated@@291 $generated@@292 $generated@@293)))
 :pattern ( ($generated@@155 $generated@@289 $generated@@290 $generated@@100 $generated@@292 $generated@@293) ($generated@@42 $generated@@291))
 :pattern ( ($generated@@155 $generated@@289 $generated@@290 $generated@@291 $generated@@292 $generated@@293))
)))
(assert (= ($generated@@281 $generated@@34) $generated@@3))
(assert (= ($generated@@282 $generated@@34) $generated@@12))
(assert (= ($generated@@281 $generated@@33) $generated@@4))
(assert (= ($generated@@282 $generated@@33) $generated@@13))
(assert (= $generated@@74 ($generated@@40 $generated@@31 $generated@@74)))
(assert (= $generated@@47 ($generated@@40 $generated@@31 $generated@@47)))
(assert (forall (($generated@@294 T@U) ($generated@@295 T@U) ) (! (= ($generated@@101 $generated@@294 $generated@@295) (forall (($generated@@296 T@U) ) (! (= ($generated@@70 $generated@@294 $generated@@296) ($generated@@70 $generated@@295 $generated@@296))
 :pattern ( ($generated@@70 $generated@@294 $generated@@296))
 :pattern ( ($generated@@70 $generated@@295 $generated@@296))
)))
 :pattern ( ($generated@@101 $generated@@294 $generated@@295))
)))
(assert (forall (($generated@@297 T@U) ($generated@@298 T@U) ) (! (= ($generated@@32 ($generated@@40 $generated@@31 $generated@@297) ($generated@@40 $generated@@31 $generated@@298)) ($generated@@40 $generated@@31 ($generated@@32 $generated@@297 $generated@@298)))
 :pattern ( ($generated@@32 ($generated@@40 $generated@@31 $generated@@297) ($generated@@40 $generated@@31 $generated@@298)))
)))
(assert (forall (($generated@@299 T@U) ) (! (= ($generated@@127 ($generated@@40 $generated@@31 $generated@@299)) ($generated@@40 $generated@@31 ($generated@@127 $generated@@299)))
 :pattern ( ($generated@@127 ($generated@@40 $generated@@31 $generated@@299)))
)))
(assert (forall (($generated@@300 T@U) ($generated@@301 T@T) ) (! (= ($generated@@51 $generated@@301 ($generated@@40 $generated@@301 $generated@@300)) ($generated@@40 $generated@@227 ($generated@@51 $generated@@301 $generated@@300)))
 :pattern ( ($generated@@51 $generated@@301 ($generated@@40 $generated@@301 $generated@@300)))
)))
(assert  (=> (<= 2 $generated@@37) (forall (($generated@@302 T@U) ($generated@@303 T@U) ($generated@@304 T@U) ) (!  (=> (or ($generated@@43 $generated@@303 $generated@@304) (and (< 2 $generated@@37) (and ($generated@@30 $generated@@41 $generated@@303 ($generated@@44 $generated@@34 $generated@@34)) ($generated@@30 $generated@@31 $generated@@304 $generated@@33)))) ($generated@@30 $generated@@31 ($generated@@38 $generated@@302 $generated@@303 $generated@@304) $generated@@33))
 :pattern ( ($generated@@38 $generated@@302 $generated@@303 $generated@@304))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@305 () T@U)
(declare-fun $generated@@306 () T@U)
(declare-fun $generated@@307 () T@U)
(declare-fun $generated@@308 () T@U)
(declare-fun $generated@@309 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@310  (=> (and (= $generated@@305 ($generated@@225 $generated@@306 $generated@@307 $generated false)) (= (ControlFlow 0 2) (- 0 1))) (forall (($generated@@311 T@U) ($generated@@312 T@U) ($generated@@313 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@31 $generated@@311 $generated@@34) ($generated@@30 $generated@@31 $generated@@312 $generated@@33)) ($generated@@30 $generated@@41 $generated@@313 ($generated@@44 $generated@@34 $generated@@34))) ($generated@@87 ($generated@@59 ($generated@@39 ($generated@@39 $generated@@308)) $generated@@311 ($generated@@38 ($generated@@39 ($generated@@39 $generated@@308)) $generated@@313 $generated@@312)) ($generated@@38 ($generated@@39 ($generated@@39 $generated@@308)) $generated@@313 ($generated@@59 ($generated@@39 ($generated@@39 $generated@@308)) $generated@@311 $generated@@312))))
 :pattern ( ($generated@@38 ($generated@@39 ($generated@@39 $generated@@308)) $generated@@313 ($generated@@59 ($generated@@39 ($generated@@39 $generated@@308)) $generated@@311 $generated@@312)))
 :pattern ( ($generated@@59 ($generated@@39 ($generated@@39 $generated@@308)) $generated@@311 ($generated@@38 ($generated@@39 ($generated@@39 $generated@@308)) $generated@@313 $generated@@312)))
)))))
(let (($generated@@314  (=> (and (and ($generated@@42 $generated@@307) ($generated@@309 $generated@@307)) (and (= 3 $generated@@37) (= (ControlFlow 0 3) 2))) $generated@@310)))
$generated@@314)))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 1))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
