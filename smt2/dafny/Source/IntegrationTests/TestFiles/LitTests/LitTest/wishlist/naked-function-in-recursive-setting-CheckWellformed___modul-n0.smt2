(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) T@U)
(declare-fun $generated@@21 (T@U T@U) Bool)
(declare-fun $generated@@22 () T@U)
(declare-fun $generated@@24 (T@T T@U T@U) Bool)
(declare-fun $generated@@25 () T@T)
(declare-fun $generated@@26 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@35 (Int) Int)
(declare-fun $generated@@37 (T@T T@U) T@U)
(declare-fun $generated@@40 () Int)
(declare-fun $generated@@41 (T@U Int) Int)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@43 (T@U) Bool)
(declare-fun $generated@@44 (Int) Bool)
(declare-fun $generated@@45 (Int Int) Int)
(declare-fun $generated@@49 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@59 (T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@67 (T@U Int) Bool)
(declare-fun $generated@@74 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 () T@U)
(declare-fun $generated@@114 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@115 () T@T)
(declare-fun $generated@@116 () T@T)
(declare-fun $generated@@117 (T@T T@T) T@T)
(declare-fun $generated@@118 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@119 (T@T) T@T)
(declare-fun $generated@@120 (T@T) T@T)
(declare-fun $generated@@147 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@148 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@149 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated) $generated@@0))
(assert (forall (($generated@@23 T@U) ) (!  (not ($generated@@21 $generated@@22 $generated@@23))
 :pattern ( ($generated@@21 $generated@@22 $generated@@23))
)))
(assert (= ($generated@@4 $generated@@25) 3))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ) (!  (=> (and (and ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29 $generated@@30)) (forall (($generated@@33 T@U) ) (!  (=> ($generated@@27 $generated@@33 $generated@@31) ($generated@@27 $generated@@33 $generated@@29))
 :pattern ( ($generated@@27 $generated@@33 $generated@@31))
 :pattern ( ($generated@@27 $generated@@33 $generated@@29))
))) (forall (($generated@@34 T@U) ) (!  (=> ($generated@@27 $generated@@34 $generated@@30) ($generated@@27 $generated@@34 $generated@@32))
 :pattern ( ($generated@@27 $generated@@34 $generated@@30))
 :pattern ( ($generated@@27 $generated@@34 $generated@@32))
))) ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@31 $generated@@32)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@29 $generated@@30)) ($generated@@24 $generated@@25 $generated@@28 ($generated@@26 $generated@@31 $generated@@32)))
)))
(assert (forall (($generated@@36 Int) ) (! (= ($generated@@35 $generated@@36) $generated@@36)
 :pattern ( ($generated@@35 $generated@@36))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@T) ) (! (= ($generated@@37 $generated@@39 $generated@@38) $generated@@38)
 :pattern ( ($generated@@37 $generated@@39 $generated@@38))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 Int) ) (!  (=> (or ($generated@@44 $generated@@48) (and (< 0 $generated@@40) (and ($generated@@43 $generated@@47) (>= $generated@@48 ($generated@@35 0))))) (and (=> (or (not (= $generated@@48 ($generated@@35 0))) (not true)) ($generated@@44 (- $generated@@48 1))) (= ($generated@@41 ($generated@@42 $generated@@46) $generated@@48) (ite (= $generated@@48 ($generated@@35 0)) 1 ($generated@@45 $generated@@48 ($generated@@41 $generated@@46 (- $generated@@48 1)))))))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@46) $generated@@48) ($generated@@43 $generated@@47))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> (and ($generated@@43 $generated@@54) (and ($generated@@27 $generated@@56 $generated@@52) ($generated@@24 $generated@@25 $generated@@55 ($generated@@26 $generated@@52 $generated@@53)))) (= ($generated@@51 ($generated@@49 $generated@@52 $generated@@53 $generated@@50 $generated@@55 $generated@@56) $generated@@22) ($generated@@51 ($generated@@49 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56) $generated@@22)))
 :pattern ( ($generated@@49 $generated@@52 $generated@@53 $generated@@50 $generated@@55 $generated@@56) ($generated@@43 $generated@@54))
 :pattern ( ($generated@@49 $generated@@52 $generated@@53 $generated@@54 $generated@@55 $generated@@56))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 Int) ) (! (= ($generated@@41 $generated@@61 $generated@@63) ($generated@@11 ($generated@@57 $generated@@6 ($generated@@58 $generated $generated $generated@@62 ($generated@@59 $generated@@61) ($generated@@60 $generated@@6 ($generated@@10 $generated@@63))))))
 :pattern ( ($generated@@41 $generated@@61 $generated@@63) ($generated@@43 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@T) ) (! (= ($generated@@60 $generated@@65 ($generated@@57 $generated@@65 $generated@@64)) $generated@@64)
 :pattern ( ($generated@@57 $generated@@65 $generated@@64))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@66 $generated $generated $generated@@69 ($generated@@59 $generated@@68) $generated@@70) ($generated@@67 $generated@@68 ($generated@@11 ($generated@@57 $generated@@6 $generated@@70))))
 :pattern ( ($generated@@66 $generated $generated $generated@@69 ($generated@@59 $generated@@68) $generated@@70))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 Int) ) (!  (=> ($generated@@43 $generated@@72) (= ($generated@@67 $generated@@71 $generated@@73) (>= $generated@@73 ($generated@@35 0))))
 :pattern ( ($generated@@67 $generated@@71 $generated@@73) ($generated@@43 $generated@@72))
)))
(assert ($generated@@43 $generated@@50))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@74 ($generated@@60 $generated@@79 $generated@@76) $generated@@77 $generated@@78) ($generated@@75 $generated@@79 $generated@@76 $generated@@77 $generated@@78))
 :pattern ( ($generated@@74 ($generated@@60 $generated@@79 $generated@@76) $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@58 $generated $generated $generated@@81 ($generated@@59 $generated@@80) $generated@@82) ($generated@@60 $generated@@6 ($generated@@10 ($generated@@41 $generated@@80 ($generated@@11 ($generated@@57 $generated@@6 $generated@@82))))))
 :pattern ( ($generated@@58 $generated $generated $generated@@81 ($generated@@59 $generated@@80) $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and ($generated@@43 $generated@@86) ($generated@@75 $generated@@25 $generated@@83 ($generated@@26 $generated@@84 $generated@@85) $generated@@86)) (forall (($generated@@87 T@U) ) (!  (=> (and ($generated@@74 $generated@@87 $generated@@84 $generated@@86) ($generated@@66 $generated@@84 $generated@@85 $generated@@86 $generated@@83 $generated@@87)) ($generated@@74 ($generated@@58 $generated@@84 $generated@@85 $generated@@86 $generated@@83 $generated@@87) $generated@@85 $generated@@86))
 :pattern ( ($generated@@58 $generated@@84 $generated@@85 $generated@@86 $generated@@83 $generated@@87))
)))
 :pattern ( ($generated@@75 $generated@@25 $generated@@83 ($generated@@26 $generated@@84 $generated@@85) $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@51 $generated@@88 $generated@@89) (= $generated@@88 $generated@@89))
 :pattern ( ($generated@@51 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@24 $generated@@25 $generated@@90 ($generated@@26 $generated@@91 $generated@@92)) (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (and (and ($generated@@43 $generated@@93) ($generated@@27 $generated@@94 $generated@@91)) ($generated@@66 $generated@@91 $generated@@92 $generated@@93 $generated@@90 $generated@@94)) ($generated@@27 ($generated@@58 $generated@@91 $generated@@92 $generated@@93 $generated@@90 $generated@@94) $generated@@92))
 :pattern ( ($generated@@58 $generated@@91 $generated@@92 $generated@@93 $generated@@90 $generated@@94))
)))
 :pattern ( ($generated@@24 $generated@@25 $generated@@90 ($generated@@26 $generated@@91 $generated@@92)))
)))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@27 $generated@@95 $generated) (and (= ($generated@@60 $generated@@6 ($generated@@57 $generated@@6 $generated@@95)) $generated@@95) ($generated@@24 $generated@@6 ($generated@@57 $generated@@6 $generated@@95) $generated)))
 :pattern ( ($generated@@27 $generated@@95 $generated))
)))
(assert  (=> (<= 0 $generated@@40) (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 Int) ) (!  (=> (or ($generated@@44 ($generated@@35 $generated@@98)) (and (< 0 $generated@@40) (and ($generated@@43 $generated@@97) (>= ($generated@@35 $generated@@98) ($generated@@35 0))))) (and (=> (or (not (= ($generated@@35 $generated@@98) ($generated@@35 0))) (not true)) ($generated@@44 ($generated@@35 (- $generated@@98 1)))) (= ($generated@@41 ($generated@@42 $generated@@96) ($generated@@35 $generated@@98)) (ite (= ($generated@@35 $generated@@98) ($generated@@35 0)) 1 ($generated@@45 ($generated@@35 $generated@@98) ($generated@@35 ($generated@@41 ($generated@@42 $generated@@96) ($generated@@35 (- $generated@@98 1)))))))))
 :weight 3
 :pattern ( ($generated@@41 ($generated@@42 $generated@@96) ($generated@@35 $generated@@98)) ($generated@@43 $generated@@97))
))))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@27 ($generated@@60 $generated@@101 $generated@@99) $generated@@100) ($generated@@24 $generated@@101 $generated@@99 $generated@@100))
 :pattern ( ($generated@@27 ($generated@@60 $generated@@101 $generated@@99) $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@102 ($generated@@26 $generated@@103 $generated@@104)) $generated@@103)
 :pattern ( ($generated@@26 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@105 ($generated@@26 $generated@@106 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@26 $generated@@106 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@57 $generated@@109 ($generated@@60 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@60 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 Int) ) (! (= ($generated@@41 ($generated@@42 $generated@@110) $generated@@111) ($generated@@41 $generated@@110 $generated@@111))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@110) $generated@@111))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@4 $generated@@112) 4) (forall (($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (! (= ($generated@@114 $generated@@121 $generated@@122 ($generated@@118 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@123) $generated@@125) $generated@@123)
 :weight 0
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@130 $generated@@131) (= ($generated@@114 $generated@@126 $generated@@127 ($generated@@118 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@128) $generated@@131) ($generated@@114 $generated@@126 $generated@@127 $generated@@129 $generated@@131)))
 :weight 0
))) (= ($generated@@4 $generated@@115) 5)) (= ($generated@@4 $generated@@116) 6)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ) (= ($generated@@4 ($generated@@117 $generated@@132 $generated@@133)) 7))) (forall (($generated@@134 T@T) ($generated@@135 T@T) ) (! (= ($generated@@119 ($generated@@117 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@117 $generated@@134 $generated@@135))
))) (forall (($generated@@136 T@T) ($generated@@137 T@T) ) (! (= ($generated@@120 ($generated@@117 $generated@@136 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@117 $generated@@136 $generated@@137))
))))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@43 $generated@@141) (= ($generated@@75 $generated@@25 $generated@@138 ($generated@@26 $generated@@139 $generated@@140) $generated@@141) (forall (($generated@@142 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@142 $generated@@139) ($generated@@74 $generated@@142 $generated@@139 $generated@@141)) ($generated@@66 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142)) (forall (($generated@@143 T@U) ) (!  (=> (and (or (not (= $generated@@143 $generated@@113)) (not true)) ($generated@@21 ($generated@@49 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142) ($generated@@60 $generated@@112 $generated@@143))) ($generated@@9 ($generated@@57 $generated@@5 ($generated@@114 $generated@@115 $generated@@116 ($generated@@114 $generated@@112 ($generated@@117 $generated@@115 $generated@@116) $generated@@141 $generated@@143) $generated@@1))))
 :pattern ( ($generated@@21 ($generated@@49 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142) ($generated@@60 $generated@@112 $generated@@143)))
)))
 :pattern ( ($generated@@58 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142))
 :pattern ( ($generated@@49 $generated@@139 $generated@@140 $generated@@141 $generated@@138 $generated@@142))
))))
 :pattern ( ($generated@@75 $generated@@25 $generated@@138 ($generated@@26 $generated@@139 $generated@@140) $generated@@141))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@27 $generated@@146 ($generated@@26 $generated@@144 $generated@@145)) (and (= ($generated@@60 $generated@@25 ($generated@@57 $generated@@25 $generated@@146)) $generated@@146) ($generated@@24 $generated@@25 ($generated@@57 $generated@@25 $generated@@146) ($generated@@26 $generated@@144 $generated@@145))))
 :pattern ( ($generated@@27 $generated@@146 ($generated@@26 $generated@@144 $generated@@145)))
)))
(assert  (and (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ) (! (= ($generated@@147 $generated@@150 $generated@@151 $generated@@152 ($generated@@149 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@155 $generated@@156) $generated@@153)
 :weight 0
)) (and (forall (($generated@@157 T@T) ($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@162 $generated@@164) (= ($generated@@147 $generated@@157 $generated@@158 $generated@@159 ($generated@@149 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@162 $generated@@163 $generated@@160) $generated@@164 $generated@@165) ($generated@@147 $generated@@157 $generated@@158 $generated@@159 $generated@@161 $generated@@164 $generated@@165)))
 :weight 0
)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@147 $generated@@166 $generated@@167 $generated@@168 ($generated@@149 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@171 $generated@@172 $generated@@169) $generated@@173 $generated@@174) ($generated@@147 $generated@@166 $generated@@167 $generated@@168 $generated@@170 $generated@@173 $generated@@174)))
 :weight 0
)))))
(assert (forall (($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 Bool) ($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@9 ($generated@@147 $generated@@112 $generated@@115 $generated@@5 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))  (=> (and (or (not (= $generated@@179 $generated@@175)) (not true)) ($generated@@9 ($generated@@57 $generated@@5 ($generated@@114 $generated@@115 $generated@@116 ($generated@@114 $generated@@112 ($generated@@117 $generated@@115 $generated@@116) $generated@@176 $generated@@179) $generated@@177)))) $generated@@178))
 :pattern ( ($generated@@147 $generated@@112 $generated@@115 $generated@@5 ($generated@@148 $generated@@175 $generated@@176 $generated@@177 $generated@@178) $generated@@179 $generated@@180))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (and (= ($generated@@20 ($generated@@26 $generated@@182 $generated@@183)) $generated@@2) (= ($generated@@181 ($generated@@26 $generated@@182 $generated@@183)) $generated@@3))
 :pattern ( ($generated@@26 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 Int) ($generated@@185 Int) ) (! (= ($generated@@45 $generated@@184 $generated@@185) (* $generated@@184 $generated@@185))
 :pattern ( ($generated@@45 $generated@@184 $generated@@185))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> (and (and ($generated@@43 $generated@@188) (and ($generated@@27 $generated@@190 $generated@@186) ($generated@@24 $generated@@25 $generated@@189 ($generated@@26 $generated@@186 $generated@@187)))) ($generated@@51 ($generated@@49 $generated@@186 $generated@@187 $generated@@50 $generated@@189 $generated@@190) $generated@@22)) (= ($generated@@66 $generated@@186 $generated@@187 $generated@@50 $generated@@189 $generated@@190) ($generated@@66 $generated@@186 $generated@@187 $generated@@188 $generated@@189 $generated@@190)))
 :pattern ( ($generated@@66 $generated@@186 $generated@@187 $generated@@50 $generated@@189 $generated@@190) ($generated@@43 $generated@@188))
 :pattern ( ($generated@@66 $generated@@186 $generated@@187 $generated@@188 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (! (= ($generated@@59 ($generated@@42 $generated@@191)) ($generated@@59 $generated@@191))
 :pattern ( ($generated@@59 ($generated@@42 $generated@@191)))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@21 ($generated@@49 $generated $generated $generated@@194 ($generated@@59 $generated@@193) $generated@@195) $generated@@192) false)
 :pattern ( ($generated@@21 ($generated@@49 $generated $generated $generated@@194 ($generated@@59 $generated@@193) $generated@@195) $generated@@192))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (! (= ($generated@@51 $generated@@196 $generated@@197) (forall (($generated@@198 T@U) ) (! (= ($generated@@21 $generated@@196 $generated@@198) ($generated@@21 $generated@@197 $generated@@198))
 :pattern ( ($generated@@21 $generated@@196 $generated@@198))
 :pattern ( ($generated@@21 $generated@@197 $generated@@198))
)))
 :pattern ( ($generated@@51 $generated@@196 $generated@@197))
)))
(assert (forall (($generated@@199 Int) ) (! (= ($generated@@60 $generated@@6 ($generated@@10 ($generated@@35 $generated@@199))) ($generated@@37 $generated@@116 ($generated@@60 $generated@@6 ($generated@@10 $generated@@199))))
 :pattern ( ($generated@@60 $generated@@6 ($generated@@10 ($generated@@35 $generated@@199))))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@T) ) (! (= ($generated@@60 $generated@@201 ($generated@@37 $generated@@201 $generated@@200)) ($generated@@37 $generated@@116 ($generated@@60 $generated@@201 $generated@@200)))
 :pattern ( ($generated@@60 $generated@@201 ($generated@@37 $generated@@201 $generated@@200)))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! ($generated@@75 $generated@@6 $generated@@203 $generated $generated@@202)
 :pattern ( ($generated@@75 $generated@@6 $generated@@203 $generated $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! ($generated@@24 $generated@@6 $generated@@204 $generated)
 :pattern ( ($generated@@24 $generated@@6 $generated@@204 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@205 () Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () Int)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () Int)
(declare-fun $generated@@211 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@212  (=> (or (not (= $generated@@205 ($generated@@35 0))) (not true)) (and (=> (= (ControlFlow 0 4) (- 0 9)) (or (not (= 0 $generated@@40)) (not true))) (=> (or (not (= 0 $generated@@40)) (not true)) (=> ($generated@@74 ($generated@@60 $generated@@25 ($generated@@59 ($generated@@42 $generated@@206))) ($generated@@26 $generated $generated) $generated@@207) (=> (and (= $generated@@208 (- $generated@@205 1)) ($generated@@75 $generated@@6 ($generated@@10 $generated@@208) $generated $generated@@207)) (and (=> (= (ControlFlow 0 4) (- 0 8)) (forall (($generated@@213 T@U) ($generated@@214 T@U) )  (=> (and (and (or (not (= $generated@@213 $generated@@113)) (not true)) ($generated@@9 ($generated@@57 $generated@@5 ($generated@@114 $generated@@115 $generated@@116 ($generated@@114 $generated@@112 ($generated@@117 $generated@@115 $generated@@116) $generated@@207 $generated@@213) $generated@@1)))) ($generated@@21 ($generated@@49 $generated $generated $generated@@207 ($generated@@59 ($generated@@42 $generated@@206)) ($generated@@60 $generated@@6 ($generated@@10 $generated@@208))) ($generated@@60 $generated@@112 $generated@@213))) ($generated@@9 ($generated@@147 $generated@@112 $generated@@115 $generated@@5 $generated@@209 $generated@@213 $generated@@214))))) (and (=> (= (ControlFlow 0 4) (- 0 7)) ($generated@@66 $generated $generated $generated@@207 ($generated@@59 ($generated@@42 $generated@@206)) ($generated@@60 $generated@@6 ($generated@@10 (- $generated@@205 1))))) (=> ($generated@@66 $generated $generated $generated@@207 ($generated@@59 ($generated@@42 $generated@@206)) ($generated@@60 $generated@@6 ($generated@@10 (- $generated@@205 1)))) (=> (and (= $generated@@210 (- $generated@@205 1)) ($generated@@75 $generated@@6 ($generated@@10 $generated@@210) $generated $generated@@207)) (and (=> (= (ControlFlow 0 4) (- 0 6)) (>= $generated@@210 ($generated@@35 0))) (=> (>= $generated@@210 ($generated@@35 0)) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (<= 0 $generated@@205) (= $generated@@210 $generated@@205))) (=> (or (<= 0 $generated@@205) (= $generated@@210 $generated@@205)) (=> (= (ControlFlow 0 4) (- 0 3)) (< $generated@@210 $generated@@205)))))))))))))))))
(let (($generated@@215 true))
(let (($generated@@216 true))
(let (($generated@@217  (=> (and (= $generated@@209 ($generated@@148 $generated@@113 $generated@@207 $generated@@1 false)) (>= $generated@@205 ($generated@@35 0))) (and (and (=> (= (ControlFlow 0 10) 1) $generated@@216) (=> (= (ControlFlow 0 10) 2) $generated@@215)) (=> (= (ControlFlow 0 10) 4) $generated@@212)))))
(let (($generated@@218  (=> (and (and ($generated@@43 $generated@@207) ($generated@@211 $generated@@207)) (and (= 0 $generated@@40) (= (ControlFlow 0 11) 10))) $generated@@217)))
$generated@@218))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 9))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
