(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@42 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 (T@T T@T) T@T)
(declare-fun $generated@@46 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@47 (T@T) T@T)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@78 (Int) T@U)
(declare-fun $generated@@79 (T@U) Bool)
(declare-fun $generated@@80 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@103 (T@U) T@U)
(declare-fun $generated@@106 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@142 (T@U Int) T@U)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@156 () T@T)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 (T@U) Int)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@170 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated@@2) 0))
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and (or (not (= $generated@@30 $generated@@26)) (not true)) (= ($generated@@27 $generated@@30) ($generated@@25 $generated@@29))) ($generated@@28 $generated@@8 ($generated@@12 ($generated@@24 $generated@@30)) $generated))
 :pattern ( ($generated@@24 $generated@@30) ($generated@@25 $generated@@29))
)))
(assert (= ($generated@@6 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36) ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@31 $generated@@32 $generated@@35 ($generated@@25 $generated@@34) $generated@@36))
)))
(assert (forall (($generated@@39 T@U) ) (!  (not ($generated@@37 $generated@@38 $generated@@39))
 :pattern ( ($generated@@37 $generated@@38 $generated@@39))
)))
(assert (= ($generated@@40 $generated@@38) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@49 $generated@@50 ($generated@@46 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@53) $generated@@51)
 :weight 0
)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (!  (or (= $generated@@58 $generated@@59) (= ($generated@@42 $generated@@54 $generated@@55 ($generated@@46 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@59) ($generated@@42 $generated@@54 $generated@@55 $generated@@57 $generated@@59)))
 :weight 0
))) (= ($generated@@6 $generated@@43) 4)) (= ($generated@@6 $generated@@44) 5)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ) (= ($generated@@6 ($generated@@45 $generated@@60 $generated@@61)) 6))) (forall (($generated@@62 T@T) ($generated@@63 T@T) ) (! (= ($generated@@47 ($generated@@45 $generated@@62 $generated@@63)) $generated@@62)
 :pattern ( ($generated@@45 $generated@@62 $generated@@63))
))) (forall (($generated@@64 T@T) ($generated@@65 T@T) ) (! (= ($generated@@48 ($generated@@45 $generated@@64 $generated@@65)) $generated@@65)
 :pattern ( ($generated@@45 $generated@@64 $generated@@65))
))))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@67 ($generated@@25 $generated@@66) $generated@@68)  (or (= $generated@@67 $generated@@26) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@68 $generated@@67) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@67 ($generated@@25 $generated@@66) $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> ($generated@@69 $generated@@70 $generated@@71) (forall (($generated@@72 T@U) ) (!  (=> ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@70 $generated@@72) $generated@@2))) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@72) $generated@@2))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@71 $generated@@72) $generated@@2))
)))
 :pattern ( ($generated@@69 $generated@@70 $generated@@71))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (and (and (and ($generated@@79 $generated@@82) (and (or (not (= $generated@@83 $generated@@26)) (not true)) (= ($generated@@27 $generated@@83) ($generated@@25 $generated@@81)))) (and (<= 0 $generated@@84) (< $generated@@84 ($generated@@24 $generated@@83)))) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) $generated@@2)))) ($generated@@80 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) ($generated@@78 $generated@@84)) $generated@@81 $generated@@82))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@82 $generated@@83) ($generated@@78 $generated@@84)) ($generated@@25 $generated@@81))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@41 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@41 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@89 ($generated@@33 $generated@@88))  (and ($generated@@28 $generated@@32 $generated@@89 ($generated@@25 $generated@@88)) (or (not (= $generated@@89 $generated@@26)) (not true))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@89 ($generated@@33 $generated@@88)))
 :pattern ( ($generated@@28 $generated@@32 $generated@@89 ($generated@@25 $generated@@88)))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@80 ($generated@@85 $generated@@93 $generated@@90) $generated@@91 $generated@@92) ($generated@@31 $generated@@93 $generated@@90 $generated@@91 $generated@@92))
 :pattern ( ($generated@@80 ($generated@@85 $generated@@93 $generated@@90) $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@69 $generated@@94 $generated@@95) (=> ($generated@@80 $generated@@96 $generated@@97 $generated@@94) ($generated@@80 $generated@@96 $generated@@97 $generated@@95)))
 :pattern ( ($generated@@69 $generated@@94 $generated@@95) ($generated@@80 $generated@@96 $generated@@97 $generated@@94))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@T) ) (!  (=> ($generated@@69 $generated@@98 $generated@@99) (=> ($generated@@31 $generated@@102 $generated@@100 $generated@@101 $generated@@98) ($generated@@31 $generated@@102 $generated@@100 $generated@@101 $generated@@99)))
 :pattern ( ($generated@@69 $generated@@98 $generated@@99) ($generated@@31 $generated@@102 $generated@@100 $generated@@101 $generated@@98))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@23 ($generated@@25 $generated@@104)) $generated@@3) (= ($generated@@103 ($generated@@25 $generated@@104)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ) (!  (and (= ($generated@@23 ($generated@@33 $generated@@105)) $generated@@4) (= ($generated@@103 ($generated@@33 $generated@@105)) $generated@@5))
 :pattern ( ($generated@@33 $generated@@105))
)))
(assert  (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@106 $generated@@109 $generated@@110 $generated@@111 ($generated@@108 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@114 $generated@@115) $generated@@112)
 :weight 0
)) (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (!  (or (= $generated@@121 $generated@@123) (= ($generated@@106 $generated@@116 $generated@@117 $generated@@118 ($generated@@108 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@123 $generated@@124) ($generated@@106 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@123 $generated@@124)))
 :weight 0
)) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (!  (or (= $generated@@131 $generated@@133) (= ($generated@@106 $generated@@125 $generated@@126 $generated@@127 ($generated@@108 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@130 $generated@@131 $generated@@128) $generated@@132 $generated@@133) ($generated@@106 $generated@@125 $generated@@126 $generated@@127 $generated@@129 $generated@@132 $generated@@133)))
 :weight 0
)))))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@11 ($generated@@106 $generated@@32 $generated@@43 $generated@@7 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@134)) (not true)) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@135 $generated@@138) $generated@@136)))) (= $generated@@138 $generated@@137)))
 :pattern ( ($generated@@106 $generated@@32 $generated@@43 $generated@@7 ($generated@@107 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@28 $generated@@32 $generated@@141 ($generated@@25 $generated@@140))  (or (= $generated@@141 $generated@@26) (= ($generated@@27 $generated@@141) ($generated@@25 $generated@@140))))
 :pattern ( ($generated@@28 $generated@@32 $generated@@141 ($generated@@25 $generated@@140)))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@37 $generated@@143 $generated@@144) (exists (($generated@@145 Int) ) (!  (and (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@40 $generated@@143))) (= ($generated@@142 $generated@@143 $generated@@145) $generated@@144))
 :pattern ( ($generated@@142 $generated@@143 $generated@@145))
)))
 :pattern ( ($generated@@37 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (or (not (= $generated@@146 $generated@@148)) (not true)) (=> (and ($generated@@69 $generated@@146 $generated@@147) ($generated@@69 $generated@@147 $generated@@148)) ($generated@@69 $generated@@146 $generated@@148)))
 :pattern ( ($generated@@69 $generated@@146 $generated@@147) ($generated@@69 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (!  (=> ($generated@@149 $generated@@150 $generated) (and (= ($generated@@85 $generated@@8 ($generated@@41 $generated@@8 $generated@@150)) $generated@@150) ($generated@@28 $generated@@8 ($generated@@41 $generated@@8 $generated@@150) $generated)))
 :pattern ( ($generated@@149 $generated@@150 $generated))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (! (= ($generated@@149 ($generated@@85 $generated@@153 $generated@@151) $generated@@152) ($generated@@28 $generated@@153 $generated@@151 $generated@@152))
 :pattern ( ($generated@@149 ($generated@@85 $generated@@153 $generated@@151) $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (<= 0 ($generated@@24 $generated@@154))
 :pattern ( ($generated@@24 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (<= 0 ($generated@@40 $generated@@155))
 :pattern ( ($generated@@40 $generated@@155))
)))
(assert (= ($generated@@6 $generated@@156) 7))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (! (= ($generated@@31 $generated@@156 $generated@@158 ($generated@@157 $generated@@159) $generated@@160) (forall (($generated@@161 Int) ) (!  (=> (and (<= 0 $generated@@161) (< $generated@@161 ($generated@@40 $generated@@158))) ($generated@@80 ($generated@@142 $generated@@158 $generated@@161) $generated@@159 $generated@@160))
 :pattern ( ($generated@@142 $generated@@158 $generated@@161))
)))
 :pattern ( ($generated@@31 $generated@@156 $generated@@158 ($generated@@157 $generated@@159) $generated@@160))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@157 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@157 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ) (! (= ($generated@@23 ($generated@@157 $generated@@164)) $generated@@1)
 :pattern ( ($generated@@157 $generated@@164))
)))
(assert (forall (($generated@@165 Int) ) (! (= ($generated@@22 ($generated@@78 $generated@@165)) 1)
 :pattern ( ($generated@@78 $generated@@165))
)))
(assert (forall (($generated@@167 Int) ) (! (= ($generated@@166 ($generated@@78 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@78 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@168 ($generated@@25 $generated@@169)) $generated@@169)
 :pattern ( ($generated@@25 $generated@@169))
)))
(assert (forall (($generated@@171 T@U) ) (! (= ($generated@@170 ($generated@@33 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@33 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@41 $generated@@173 ($generated@@85 $generated@@173 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@85 $generated@@173 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (=> (and (and ($generated@@79 $generated@@175) (and (or (not (= $generated@@176 $generated@@26)) (not true)) (= ($generated@@27 $generated@@176) ($generated@@25 $generated@@174)))) ($generated@@11 ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@175 $generated@@176) $generated@@2)))) ($generated@@31 $generated@@8 ($generated@@12 ($generated@@24 $generated@@176)) $generated $generated@@175))
 :pattern ( ($generated@@24 $generated@@176) ($generated@@41 $generated@@7 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@175 $generated@@176) $generated@@2)) ($generated@@25 $generated@@174))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Int) ) (!  (=> (and (and ($generated@@79 $generated@@178) (and (or (not (= $generated@@179 $generated@@26)) (not true)) (= ($generated@@27 $generated@@179) ($generated@@25 $generated@@177)))) (and (<= 0 $generated@@180) (< $generated@@180 ($generated@@24 $generated@@179)))) ($generated@@149 ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@178 $generated@@179) ($generated@@78 $generated@@180)) $generated@@177))
 :pattern ( ($generated@@42 $generated@@43 $generated@@44 ($generated@@42 $generated@@32 ($generated@@45 $generated@@43 $generated@@44) $generated@@178 $generated@@179) ($generated@@78 $generated@@180)) ($generated@@25 $generated@@177))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@149 $generated@@181 ($generated@@157 $generated@@182)) (and (= ($generated@@85 $generated@@156 ($generated@@41 $generated@@156 $generated@@181)) $generated@@181) ($generated@@28 $generated@@156 ($generated@@41 $generated@@156 $generated@@181) ($generated@@157 $generated@@182))))
 :pattern ( ($generated@@149 $generated@@181 ($generated@@157 $generated@@182)))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> ($generated@@149 $generated@@184 ($generated@@25 $generated@@183)) (and (= ($generated@@85 $generated@@32 ($generated@@41 $generated@@32 $generated@@184)) $generated@@184) ($generated@@28 $generated@@32 ($generated@@41 $generated@@32 $generated@@184) ($generated@@25 $generated@@183))))
 :pattern ( ($generated@@149 $generated@@184 ($generated@@25 $generated@@183)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> ($generated@@149 $generated@@186 ($generated@@33 $generated@@185)) (and (= ($generated@@85 $generated@@32 ($generated@@41 $generated@@32 $generated@@186)) $generated@@186) ($generated@@28 $generated@@32 ($generated@@41 $generated@@32 $generated@@186) ($generated@@33 $generated@@185))))
 :pattern ( ($generated@@149 $generated@@186 ($generated@@33 $generated@@185)))
)))
(assert (forall (($generated@@187 Int) ) (! (= ($generated@@85 $generated@@8 ($generated@@12 ($generated@@73 $generated@@187))) ($generated@@75 $generated@@44 ($generated@@85 $generated@@8 ($generated@@12 $generated@@187))))
 :pattern ( ($generated@@85 $generated@@8 ($generated@@12 ($generated@@73 $generated@@187))))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@T) ) (! (= ($generated@@85 $generated@@189 ($generated@@75 $generated@@189 $generated@@188)) ($generated@@75 $generated@@44 ($generated@@85 $generated@@189 $generated@@188)))
 :pattern ( ($generated@@85 $generated@@189 ($generated@@75 $generated@@189 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ) (!  (=> (= ($generated@@40 $generated@@190) 0) (= $generated@@190 $generated@@38))
 :pattern ( ($generated@@40 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (! ($generated@@31 $generated@@8 $generated@@192 $generated $generated@@191)
 :pattern ( ($generated@@31 $generated@@8 $generated@@192 $generated $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@28 $generated@@156 $generated@@193 ($generated@@157 $generated@@194)) (forall (($generated@@195 Int) ) (!  (=> (and (<= 0 $generated@@195) (< $generated@@195 ($generated@@40 $generated@@193))) ($generated@@149 ($generated@@142 $generated@@193 $generated@@195) $generated@@194))
 :pattern ( ($generated@@142 $generated@@193 $generated@@195))
)))
 :pattern ( ($generated@@28 $generated@@156 $generated@@193 ($generated@@157 $generated@@194)))
)))
(assert (forall (($generated@@196 T@U) ) (! ($generated@@28 $generated@@8 $generated@@196 $generated)
 :pattern ( ($generated@@28 $generated@@8 $generated@@196 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 (T@U) Bool)
(declare-fun $generated@@203 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 12) (let (($generated@@204  (=> (and ($generated@@37 $generated@@197 ($generated@@85 $generated@@32 $generated@@198)) (> ($generated@@24 $generated@@198) 0)) (and (=> (= (ControlFlow 0 3) (- 0 6)) (or (not (= $generated@@198 $generated@@26)) (not true))) (=> (or (not (= $generated@@198 $generated@@26)) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= 0 ($generated@@73 0)) (< ($generated@@73 0) ($generated@@24 $generated@@198)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@11 ($generated@@106 $generated@@32 $generated@@43 $generated@@7 $generated@@199 $generated@@198 ($generated@@78 ($generated@@73 0))))) (=> ($generated@@11 ($generated@@106 $generated@@32 $generated@@43 $generated@@7 $generated@@199 $generated@@198 ($generated@@78 ($generated@@73 0)))) (=> (and ($generated@@28 $generated@@32 $generated@@200 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@200 ($generated@@33 $generated) $generated@@201)) (=> (and (and ($generated@@37 $generated@@197 ($generated@@85 $generated@@32 $generated@@200)) (> ($generated@@24 $generated@@200) 0)) (and (or (not (= $generated@@198 $generated@@200)) (not true)) (= (ControlFlow 0 3) (- 0 2)))) (or (or (or (not (= $generated@@198 $generated@@200)) (not true)) (or (not (= ($generated@@78 ($generated@@73 0)) ($generated@@78 ($generated@@73 0)))) (not true))) (= ($generated@@73 1) ($generated@@73 1)))))))))))))
(let (($generated@@205  (=> (and (not ($generated@@37 $generated@@197 ($generated@@85 $generated@@32 $generated@@198))) (= (ControlFlow 0 9) 3)) $generated@@204)))
(let (($generated@@206  (=> ($generated@@37 $generated@@197 ($generated@@85 $generated@@32 $generated@@198)) (and (=> (= (ControlFlow 0 7) (- 0 8)) (or (not (= $generated@@198 $generated@@26)) (not true))) (=> (= (ControlFlow 0 7) 3) $generated@@204)))))
(let (($generated@@207  (=> (and ($generated@@28 $generated@@32 $generated@@198 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@198 ($generated@@33 $generated) $generated@@201)) (and (=> (= (ControlFlow 0 10) 7) $generated@@206) (=> (= (ControlFlow 0 10) 9) $generated@@205)))))
(let (($generated@@208 true))
(let (($generated@@209  (=> (= $generated@@199 ($generated@@107 $generated@@26 $generated@@201 $generated@@2 ($generated@@41 $generated@@32 ($generated@@142 $generated@@197 ($generated@@73 1))))) (and (=> (= (ControlFlow 0 11) 10) $generated@@207) (=> (= (ControlFlow 0 11) 1) $generated@@208)))))
(let (($generated@@210  (=> (and ($generated@@79 $generated@@201) ($generated@@202 $generated@@201)) (=> (and (and (and ($generated@@28 $generated@@156 $generated@@197 ($generated@@157 ($generated@@33 $generated))) ($generated@@31 $generated@@156 $generated@@197 ($generated@@157 ($generated@@33 $generated)) $generated@@201)) (= 0 $generated@@203)) (and (> ($generated@@40 $generated@@197) 1) (= (ControlFlow 0 12) 11))) $generated@@209))))
$generated@@210))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 3) (- 4))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
