(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U) T@U)
(declare-fun $generated@@23 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@24 () T@T)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@35 () T@T)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@T T@T) T@T)
(declare-fun $generated@@38 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@39 (T@T) T@T)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@65 (Int) Int)
(declare-fun $generated@@67 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@U) T@U)
(declare-fun $generated@@73 (T@T T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@133 (T@U T@U) Bool)
(declare-fun $generated@@139 () T@T)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@141 (T@U Int) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (= ($generated@@22 $generated) $generated@@0))
(assert (= ($generated@@6 $generated@@24) 3))
(assert (forall (($generated@@27 T@U) ($generated@@28 T@U) ($generated@@29 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@28 ($generated@@25 $generated@@27) $generated@@29) ($generated@@23 $generated@@24 $generated@@28 ($generated@@26 $generated@@27) $generated@@29))
 :pattern ( ($generated@@23 $generated@@24 $generated@@28 ($generated@@25 $generated@@27) $generated@@29))
 :pattern ( ($generated@@23 $generated@@24 $generated@@28 ($generated@@26 $generated@@27) $generated@@29))
)))
(assert (= ($generated@@30 $generated@@31) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@41 T@T) ($generated@@42 T@T) ($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@34 $generated@@41 $generated@@42 ($generated@@38 $generated@@41 $generated@@42 $generated@@44 $generated@@45 $generated@@43) $generated@@45) $generated@@43)
 :weight 0
)) (forall (($generated@@46 T@T) ($generated@@47 T@T) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ) (!  (or (= $generated@@50 $generated@@51) (= ($generated@@34 $generated@@46 $generated@@47 ($generated@@38 $generated@@46 $generated@@47 $generated@@49 $generated@@50 $generated@@48) $generated@@51) ($generated@@34 $generated@@46 $generated@@47 $generated@@49 $generated@@51)))
 :weight 0
))) (= ($generated@@6 $generated@@35) 4)) (= ($generated@@6 $generated@@36) 5)) (forall (($generated@@52 T@T) ($generated@@53 T@T) ) (= ($generated@@6 ($generated@@37 $generated@@52 $generated@@53)) 6))) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (! (= ($generated@@39 ($generated@@37 $generated@@54 $generated@@55)) $generated@@54)
 :pattern ( ($generated@@37 $generated@@54 $generated@@55))
))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@40 ($generated@@37 $generated@@56 $generated@@57)) $generated@@57)
 :pattern ( ($generated@@37 $generated@@56 $generated@@57))
))))
(assert (forall (($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (! (= ($generated@@23 $generated@@24 $generated@@59 ($generated@@26 $generated@@58) $generated@@60)  (or (= $generated@@59 $generated@@32) ($generated@@11 ($generated@@33 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@60 $generated@@59) $generated@@2)))))
 :pattern ( ($generated@@23 $generated@@24 $generated@@59 ($generated@@26 $generated@@58) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> ($generated@@61 $generated@@62 $generated@@63) (forall (($generated@@64 T@U) ) (!  (=> ($generated@@11 ($generated@@33 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@62 $generated@@64) $generated@@2))) ($generated@@11 ($generated@@33 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@63 $generated@@64) $generated@@2))))
 :pattern ( ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@63 $generated@@64) $generated@@2))
)))
 :pattern ( ($generated@@61 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 Int) ) (! (= ($generated@@65 $generated@@66) $generated@@66)
 :pattern ( ($generated@@65 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@67 $generated@@69 $generated@@68) $generated@@68)
 :pattern ( ($generated@@67 $generated@@69 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@70 $generated@@72 ($generated@@33 $generated@@72 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@33 $generated@@72 $generated@@71))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@73 $generated@@24 $generated@@75 ($generated@@25 $generated@@74))  (and ($generated@@73 $generated@@24 $generated@@75 ($generated@@26 $generated@@74)) (or (not (= $generated@@75 $generated@@32)) (not true))))
 :pattern ( ($generated@@73 $generated@@24 $generated@@75 ($generated@@25 $generated@@74)))
 :pattern ( ($generated@@73 $generated@@24 $generated@@75 ($generated@@26 $generated@@74)))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@76 ($generated@@70 $generated@@80 $generated@@77) $generated@@78 $generated@@79) ($generated@@23 $generated@@80 $generated@@77 $generated@@78 $generated@@79))
 :pattern ( ($generated@@76 ($generated@@70 $generated@@80 $generated@@77) $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (=> ($generated@@61 $generated@@81 $generated@@82) (=> ($generated@@76 $generated@@83 $generated@@84 $generated@@81) ($generated@@76 $generated@@83 $generated@@84 $generated@@82)))
 :pattern ( ($generated@@61 $generated@@81 $generated@@82) ($generated@@76 $generated@@83 $generated@@84 $generated@@81))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (!  (=> ($generated@@61 $generated@@85 $generated@@86) (=> ($generated@@23 $generated@@89 $generated@@87 $generated@@88 $generated@@85) ($generated@@23 $generated@@89 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@61 $generated@@85 $generated@@86) ($generated@@23 $generated@@89 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= ($generated@@22 ($generated@@26 $generated@@91)) $generated@@3) (= ($generated@@90 ($generated@@26 $generated@@91)) $generated@@5))
 :pattern ( ($generated@@26 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ) (!  (and (= ($generated@@22 ($generated@@25 $generated@@92)) $generated@@4) (= ($generated@@90 ($generated@@25 $generated@@92)) $generated@@5))
 :pattern ( ($generated@@25 $generated@@92))
)))
(assert  (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@93 $generated@@96 $generated@@97 $generated@@98 ($generated@@95 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@101 $generated@@102) $generated@@99)
 :weight 0
)) (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@108 $generated@@110) (= ($generated@@93 $generated@@103 $generated@@104 $generated@@105 ($generated@@95 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@93 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@93 $generated@@112 $generated@@113 $generated@@114 ($generated@@95 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@93 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@11 ($generated@@93 $generated@@24 $generated@@35 $generated@@7 ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@124) $generated@@125 $generated@@126))  (=> (and (or (not (= $generated@@125 $generated@@121)) (not true)) ($generated@@11 ($generated@@33 $generated@@7 ($generated@@34 $generated@@35 $generated@@36 ($generated@@34 $generated@@24 ($generated@@37 $generated@@35 $generated@@36) $generated@@122 $generated@@125) $generated@@123)))) (= $generated@@125 $generated@@124)))
 :pattern ( ($generated@@93 $generated@@24 $generated@@35 $generated@@7 ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@124) $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@73 $generated@@24 $generated@@129 ($generated@@26 $generated@@128))  (or (= $generated@@129 $generated@@32) (= ($generated@@127 $generated@@129) ($generated@@26 $generated@@128))))
 :pattern ( ($generated@@73 $generated@@24 $generated@@129 ($generated@@26 $generated@@128)))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (=> (or (not (= $generated@@130 $generated@@132)) (not true)) (=> (and ($generated@@61 $generated@@130 $generated@@131) ($generated@@61 $generated@@131 $generated@@132)) ($generated@@61 $generated@@130 $generated@@132)))
 :pattern ( ($generated@@61 $generated@@130 $generated@@131) ($generated@@61 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (!  (=> ($generated@@133 $generated@@134 $generated) (and (= ($generated@@70 $generated@@8 ($generated@@33 $generated@@8 $generated@@134)) $generated@@134) ($generated@@73 $generated@@8 ($generated@@33 $generated@@8 $generated@@134) $generated)))
 :pattern ( ($generated@@133 $generated@@134 $generated))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@133 ($generated@@70 $generated@@137 $generated@@135) $generated@@136) ($generated@@73 $generated@@137 $generated@@135 $generated@@136))
 :pattern ( ($generated@@133 ($generated@@70 $generated@@137 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ) (! (<= 0 ($generated@@30 $generated@@138))
 :pattern ( ($generated@@30 $generated@@138))
)))
(assert (= ($generated@@6 $generated@@139) 7))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@23 $generated@@139 $generated@@142 ($generated@@140 $generated@@143) $generated@@144) (forall (($generated@@145 Int) ) (!  (=> (and (<= 0 $generated@@145) (< $generated@@145 ($generated@@30 $generated@@142))) ($generated@@76 ($generated@@141 $generated@@142 $generated@@145) $generated@@143 $generated@@144))
 :pattern ( ($generated@@141 $generated@@142 $generated@@145))
)))
 :pattern ( ($generated@@23 $generated@@139 $generated@@142 ($generated@@140 $generated@@143) $generated@@144))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@140 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@140 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@22 ($generated@@140 $generated@@148)) $generated@@1)
 :pattern ( ($generated@@140 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@26 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@26 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@25 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@25 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@33 $generated@@154 ($generated@@70 $generated@@154 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@70 $generated@@154 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@133 $generated@@155 ($generated@@140 $generated@@156)) (and (= ($generated@@70 $generated@@139 ($generated@@33 $generated@@139 $generated@@155)) $generated@@155) ($generated@@73 $generated@@139 ($generated@@33 $generated@@139 $generated@@155) ($generated@@140 $generated@@156))))
 :pattern ( ($generated@@133 $generated@@155 ($generated@@140 $generated@@156)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@133 $generated@@158 ($generated@@26 $generated@@157)) (and (= ($generated@@70 $generated@@24 ($generated@@33 $generated@@24 $generated@@158)) $generated@@158) ($generated@@73 $generated@@24 ($generated@@33 $generated@@24 $generated@@158) ($generated@@26 $generated@@157))))
 :pattern ( ($generated@@133 $generated@@158 ($generated@@26 $generated@@157)))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@133 $generated@@160 ($generated@@25 $generated@@159)) (and (= ($generated@@70 $generated@@24 ($generated@@33 $generated@@24 $generated@@160)) $generated@@160) ($generated@@73 $generated@@24 ($generated@@33 $generated@@24 $generated@@160) ($generated@@25 $generated@@159))))
 :pattern ( ($generated@@133 $generated@@160 ($generated@@25 $generated@@159)))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@70 $generated@@8 ($generated@@12 ($generated@@65 $generated@@161))) ($generated@@67 $generated@@36 ($generated@@70 $generated@@8 ($generated@@12 $generated@@161))))
 :pattern ( ($generated@@70 $generated@@8 ($generated@@12 ($generated@@65 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@70 $generated@@163 ($generated@@67 $generated@@163 $generated@@162)) ($generated@@67 $generated@@36 ($generated@@70 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@70 $generated@@163 ($generated@@67 $generated@@163 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= ($generated@@30 $generated@@164) 0) (= $generated@@164 $generated@@31))
 :pattern ( ($generated@@30 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! ($generated@@23 $generated@@8 $generated@@166 $generated $generated@@165)
 :pattern ( ($generated@@23 $generated@@8 $generated@@166 $generated $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (! (= ($generated@@73 $generated@@139 $generated@@167 ($generated@@140 $generated@@168)) (forall (($generated@@169 Int) ) (!  (=> (and (<= 0 $generated@@169) (< $generated@@169 ($generated@@30 $generated@@167))) ($generated@@133 ($generated@@141 $generated@@167 $generated@@169) $generated@@168))
 :pattern ( ($generated@@141 $generated@@167 $generated@@169))
)))
 :pattern ( ($generated@@73 $generated@@139 $generated@@167 ($generated@@140 $generated@@168)))
)))
(assert (forall (($generated@@170 T@U) ) (! ($generated@@73 $generated@@8 $generated@@170 $generated)
 :pattern ( ($generated@@73 $generated@@8 $generated@@170 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 (T@U) Bool)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@177  (=> (= $generated@@171 ($generated@@94 $generated@@32 $generated@@172 $generated@@2 ($generated@@33 $generated@@24 ($generated@@141 $generated@@173 ($generated@@65 1))))) (=> (and (> ($generated@@30 $generated@@173) 1) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 ($generated@@65 1)) (< ($generated@@65 1) ($generated@@30 $generated@@173)))))))
(let (($generated@@178  (=> (and ($generated@@174 $generated@@172) ($generated@@175 $generated@@172)) (=> (and (and ($generated@@73 $generated@@139 $generated@@173 ($generated@@140 ($generated@@25 $generated))) ($generated@@23 $generated@@139 $generated@@173 ($generated@@140 ($generated@@25 $generated)) $generated@@172)) (and (= 0 $generated@@176) (= (ControlFlow 0 3) 2))) $generated@@177))))
$generated@@178)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
