(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U T@U T@U) T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@44 () Int)
(declare-fun $generated@@45 (Int Int) T@U)
(declare-fun $generated@@46 (Int) Int)
(declare-fun $generated@@47 (Int Int) Bool)
(declare-fun $generated@@48 (Int) Int)
(declare-fun $generated@@49 (Int) Int)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@51 (T@U Int Int) T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@86 (T@T T@U) T@U)
(declare-fun $generated@@87 (T@T T@U) T@U)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@99 (Int) Int)
(declare-fun $generated@@100 (Int) Int)
(declare-fun $generated@@101 () T@U)
(declare-fun $generated@@110 (T@U) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@138 (T@U) Int)
(declare-fun $generated@@139 (T@U) Int)
(declare-fun $generated@@144 () T@U)
(declare-fun $generated@@152 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 () T@T)
(declare-fun $generated@@155 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@156 (T@T T@T) T@T)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@T) T@T)
(declare-fun $generated@@159 (T@T) T@T)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@208 (T@U) T@U)
(declare-fun $generated@@211 (T@U) T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 (Int) Int)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated) $generated@@0))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@26 ($generated@@27 $generated@@28 $generated@@29 $generated@@30)) $generated@@28)
 :pattern ( ($generated@@26 ($generated@@27 $generated@@28 $generated@@29 $generated@@30)))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (! (= ($generated@@31 ($generated@@27 $generated@@32 $generated@@33 $generated@@34)) $generated@@33)
 :pattern ( ($generated@@31 ($generated@@27 $generated@@32 $generated@@33 $generated@@34)))
)))
(assert (= ($generated@@9 $generated@@36) 3))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@35 $generated@@36 ($generated@@37 $generated@@42 $generated@@43) ($generated@@38 $generated@@40 $generated@@41))  (and ($generated@@39 $generated@@42 $generated@@40) ($generated@@39 $generated@@43 $generated@@41)))
 :pattern ( ($generated@@35 $generated@@36 ($generated@@37 $generated@@42 $generated@@43) ($generated@@38 $generated@@40 $generated@@41)))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@55 Int) ($generated@@56 Int) ) (!  (=> (or ($generated@@47 ($generated@@46 $generated@@55) ($generated@@46 $generated@@56)) (and (< 0 $generated@@44) (and (<= ($generated@@46 0) $generated@@55) (<= ($generated@@46 0) $generated@@56)))) (and (forall (($generated@@57 Int) ($generated@@58 Int) )  (=> (and (< $generated@@57 $generated@@55) (< $generated@@58 $generated@@56)) (and (and (< ($generated@@48 (+ $generated@@57 $generated@@58)) $generated@@55) (< ($generated@@49 (+ $generated@@57 $generated@@58)) $generated@@56)) (= (+ $generated@@57 $generated@@58) (+ ($generated@@48 (+ $generated@@57 $generated@@58)) ($generated@@49 (+ $generated@@57 $generated@@58))))))) (= ($generated@@45 ($generated@@46 $generated@@55) ($generated@@46 $generated@@56)) ($generated@@27 ($generated@@50 ($generated@@51 $generated $generated@@55 $generated@@56)) $generated@@52 ($generated@@53 $generated $generated@@54)))))
 :weight 3
 :pattern ( ($generated@@45 ($generated@@46 $generated@@55) ($generated@@46 $generated@@56)))
))))
(assert (forall (($generated@@59 Int) ) (! (= ($generated@@46 $generated@@59) $generated@@59)
 :pattern ( ($generated@@46 $generated@@59))
)))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@T) ) (! (= ($generated@@60 $generated@@62 $generated@@61) $generated@@61)
 :pattern ( ($generated@@60 $generated@@62 $generated@@61))
)))
(assert  (and (and (and (forall (($generated@@68 T@T) ($generated@@69 T@T) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (! (= ($generated@@64 $generated@@68 $generated@@69 ($generated@@67 $generated@@68 $generated@@69 $generated@@71 $generated@@72 $generated@@70) $generated@@72) $generated@@70)
 :weight 0
)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (!  (or (= $generated@@77 $generated@@78) (= ($generated@@64 $generated@@73 $generated@@74 ($generated@@67 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@78) ($generated@@64 $generated@@73 $generated@@74 $generated@@76 $generated@@78)))
 :weight 0
))) (= ($generated@@9 $generated@@65) 4)) (= ($generated@@9 $generated@@66) 5)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (forall (($generated@@83 T@U) )  (=> ($generated@@63 $generated@@79 $generated@@83) (and ($generated@@39 $generated@@83 $generated@@81) ($generated@@39 ($generated@@64 $generated@@65 $generated@@65 $generated@@80 $generated@@83) $generated@@82)))) ($generated@@35 $generated@@66 ($generated@@27 $generated@@79 $generated@@80 ($generated@@53 $generated@@81 $generated@@82)) ($generated@@53 $generated@@81 $generated@@82)))
 :pattern ( ($generated@@27 $generated@@79 $generated@@80 ($generated@@53 $generated@@81 $generated@@82)))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@84 Int) ($generated@@85 Int) ) (!  (=> (or ($generated@@47 $generated@@84 $generated@@85) (and (< 0 $generated@@44) (and (<= ($generated@@46 0) $generated@@84) (<= ($generated@@46 0) $generated@@85)))) ($generated@@35 $generated@@66 ($generated@@45 $generated@@84 $generated@@85) ($generated@@53 $generated $generated@@54)))
 :pattern ( ($generated@@45 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@87 $generated@@89 ($generated@@86 $generated@@89 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@86 $generated@@89 $generated@@88))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@63 ($generated@@50 $generated@@90) $generated@@91) ($generated@@14 ($generated@@64 $generated@@65 $generated@@10 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@63 ($generated@@50 $generated@@90) $generated@@91))
)))
(assert (= ($generated@@9 $generated@@92) 6))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@35 $generated@@92 $generated@@94 ($generated@@93 $generated@@95)) (forall (($generated@@96 T@U) ) (!  (=> ($generated@@63 $generated@@94 $generated@@96) ($generated@@39 $generated@@96 $generated@@95))
 :pattern ( ($generated@@63 $generated@@94 $generated@@96))
)))
 :pattern ( ($generated@@35 $generated@@92 $generated@@94 ($generated@@93 $generated@@95)))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@35 $generated@@11 $generated@@97 $generated@@54) (<= ($generated@@46 0) ($generated@@16 $generated@@97)))
 :pattern ( ($generated@@35 $generated@@11 $generated@@97 $generated@@54))
)))
(assert (forall (($generated@@98 T@U) ) (!  (=> ($generated@@39 $generated@@98 $generated@@54) (and (= ($generated@@87 $generated@@11 ($generated@@86 $generated@@11 $generated@@98)) $generated@@98) ($generated@@35 $generated@@11 ($generated@@86 $generated@@11 $generated@@98) $generated@@54)))
 :pattern ( ($generated@@39 $generated@@98 $generated@@54))
)))
(assert  (=> (<= 0 $generated@@44) (forall (($generated@@102 Int) ($generated@@103 Int) ) (!  (=> (or ($generated@@47 $generated@@102 $generated@@103) (and (< 0 $generated@@44) (and (<= ($generated@@46 0) $generated@@102) (<= ($generated@@46 0) $generated@@103)))) (and (forall (($generated@@104 Int) ($generated@@105 Int) )  (=> (and (< $generated@@104 $generated@@102) (< $generated@@105 $generated@@103)) (and (and (< ($generated@@99 (+ $generated@@104 $generated@@105)) $generated@@102) (< ($generated@@100 (+ $generated@@104 $generated@@105)) $generated@@103)) (= (+ $generated@@104 $generated@@105) (+ ($generated@@99 (+ $generated@@104 $generated@@105)) ($generated@@100 (+ $generated@@104 $generated@@105))))))) (= ($generated@@45 $generated@@102 $generated@@103) ($generated@@27 ($generated@@50 ($generated@@51 $generated $generated@@102 $generated@@103)) $generated@@101 ($generated@@53 $generated $generated@@54)))))
 :pattern ( ($generated@@45 $generated@@102 $generated@@103))
))))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@39 $generated@@106 $generated) (and (= ($generated@@87 $generated@@11 ($generated@@86 $generated@@11 $generated@@106)) $generated@@106) ($generated@@35 $generated@@11 ($generated@@86 $generated@@11 $generated@@106) $generated)))
 :pattern ( ($generated@@39 $generated@@106 $generated))
)))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@39 ($generated@@87 $generated@@109 $generated@@107) $generated@@108) ($generated@@35 $generated@@109 $generated@@107 $generated@@108))
 :pattern ( ($generated@@39 ($generated@@87 $generated@@109 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@110 ($generated@@53 $generated@@111 $generated@@112)) $generated@@111)
 :pattern ( ($generated@@53 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@113 ($generated@@53 $generated@@114 $generated@@115)) $generated@@115)
 :pattern ( ($generated@@53 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@25 ($generated@@53 $generated@@116 $generated@@117)) $generated@@2)
 :pattern ( ($generated@@53 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@37 $generated@@119 $generated@@120)) $generated@@5)
 :pattern ( ($generated@@37 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@121 ($generated@@38 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@38 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@124 ($generated@@38 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@38 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@127 ($generated@@37 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@37 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@130 ($generated@@37 $generated@@131 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@37 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! (= ($generated@@133 ($generated@@93 $generated@@134)) $generated@@134)
 :pattern ( ($generated@@93 $generated@@134))
)))
(assert (forall (($generated@@135 T@U) ) (! (= ($generated@@25 ($generated@@93 $generated@@135)) $generated@@1)
 :pattern ( ($generated@@93 $generated@@135))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@86 $generated@@137 ($generated@@87 $generated@@137 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@87 $generated@@137 $generated@@136))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (< ($generated@@138 $generated@@140) ($generated@@139 ($generated@@37 $generated@@140 $generated@@141)))
 :pattern ( ($generated@@37 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (< ($generated@@138 $generated@@143) ($generated@@139 ($generated@@37 $generated@@142 $generated@@143)))
 :pattern ( ($generated@@37 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ) (!  (not ($generated@@63 ($generated@@26 $generated@@144) $generated@@145))
 :pattern ( ($generated@@63 ($generated@@26 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> ($generated@@39 $generated@@146 ($generated@@53 $generated@@147 $generated@@148)) (and (= ($generated@@87 $generated@@66 ($generated@@86 $generated@@66 $generated@@146)) $generated@@146) ($generated@@35 $generated@@66 ($generated@@86 $generated@@66 $generated@@146) ($generated@@53 $generated@@147 $generated@@148))))
 :pattern ( ($generated@@39 $generated@@146 ($generated@@53 $generated@@147 $generated@@148)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> ($generated@@39 $generated@@151 ($generated@@38 $generated@@149 $generated@@150)) (and (= ($generated@@87 $generated@@36 ($generated@@86 $generated@@36 $generated@@151)) $generated@@151) ($generated@@35 $generated@@36 ($generated@@86 $generated@@36 $generated@@151) ($generated@@38 $generated@@149 $generated@@150))))
 :pattern ( ($generated@@39 $generated@@151 ($generated@@38 $generated@@149 $generated@@150)))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@152 $generated@@160 $generated@@161 $generated@@162 ($generated@@157 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@165 $generated@@166) $generated@@163)
 :weight 0
)) (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@152 $generated@@167 $generated@@168 $generated@@169 ($generated@@157 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@152 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@152 $generated@@176 $generated@@177 $generated@@178 ($generated@@157 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@152 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)))) (= ($generated@@9 $generated@@153) 7)) (= ($generated@@9 $generated@@154) 8)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ) (= ($generated@@9 ($generated@@156 $generated@@185 $generated@@186)) 9))) (forall (($generated@@187 T@T) ($generated@@188 T@T) ) (! (= ($generated@@158 ($generated@@156 $generated@@187 $generated@@188)) $generated@@187)
 :pattern ( ($generated@@156 $generated@@187 $generated@@188))
))) (forall (($generated@@189 T@T) ($generated@@190 T@T) ) (! (= ($generated@@159 ($generated@@156 $generated@@189 $generated@@190)) $generated@@190)
 :pattern ( ($generated@@156 $generated@@189 $generated@@190))
))))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 Bool) ($generated@@195 T@U) ($generated@@196 T@U) ) (! (= ($generated@@14 ($generated@@152 $generated@@153 $generated@@154 $generated@@10 ($generated@@155 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))  (=> (and (or (not (= $generated@@195 $generated@@191)) (not true)) ($generated@@14 ($generated@@86 $generated@@10 ($generated@@64 $generated@@154 $generated@@65 ($generated@@64 $generated@@153 ($generated@@156 $generated@@154 $generated@@65) $generated@@192 $generated@@195) $generated@@193)))) $generated@@194))
 :pattern ( ($generated@@152 $generated@@153 $generated@@154 $generated@@10 ($generated@@155 $generated@@191 $generated@@192 $generated@@193 $generated@@194) $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 Int) ($generated@@199 Int) ($generated@@200 T@U) ) (! (= ($generated@@14 ($generated@@64 $generated@@65 $generated@@10 ($generated@@51 $generated@@197 $generated@@198 $generated@@199) $generated@@200))  (and ($generated@@39 $generated@@200 $generated@@197) (exists (($generated@@201 Int) ($generated@@202 Int) )  (and (and (< $generated@@201 $generated@@198) (< $generated@@202 $generated@@199)) (= ($generated@@16 ($generated@@86 $generated@@11 $generated@@200)) (+ $generated@@201 $generated@@202))))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@10 ($generated@@51 $generated@@197 $generated@@198 $generated@@199) $generated@@200))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (and (= ($generated@@25 ($generated@@38 $generated@@204 $generated@@205)) $generated@@6) (= ($generated@@203 ($generated@@38 $generated@@204 $generated@@205)) $generated@@8))
 :pattern ( ($generated@@38 $generated@@204 $generated@@205))
)))
(assert (forall (($generated@@206 T@U) ) (!  (or (= $generated@@206 $generated@@144) (exists (($generated@@207 T@U) ) ($generated@@63 ($generated@@26 $generated@@206) $generated@@207)))
 :pattern ( ($generated@@26 $generated@@206))
)))
(assert (forall (($generated@@209 T@U) ) (!  (or (= $generated@@209 $generated@@144) (exists (($generated@@210 T@U) ) ($generated@@63 ($generated@@208 $generated@@209) $generated@@210)))
 :pattern ( ($generated@@208 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (! (= ($generated@@63 ($generated@@211 $generated@@212) $generated@@213)  (and ($generated@@63 ($generated@@26 $generated@@212) ($generated@@127 ($generated@@86 $generated@@36 $generated@@213))) (= ($generated@@64 $generated@@65 $generated@@65 ($generated@@31 $generated@@212) ($generated@@127 ($generated@@86 $generated@@36 $generated@@213))) ($generated@@130 ($generated@@86 $generated@@36 $generated@@213)))))
 :pattern ( ($generated@@63 ($generated@@211 $generated@@212) $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@63 ($generated@@208 $generated@@214) $generated@@215) (exists (($generated@@216 T@U) ) (!  (and ($generated@@63 ($generated@@26 $generated@@214) $generated@@216) (= $generated@@215 ($generated@@64 $generated@@65 $generated@@65 ($generated@@31 $generated@@214) $generated@@216)))
 :pattern ( ($generated@@63 ($generated@@26 $generated@@214) $generated@@216))
 :pattern ( ($generated@@64 $generated@@65 $generated@@65 ($generated@@31 $generated@@214) $generated@@216))
)))
 :pattern ( ($generated@@63 ($generated@@208 $generated@@214) $generated@@215))
)))
(assert (forall (($generated@@217 T@U) ) (! (= ($generated@@138 ($generated@@87 $generated@@36 $generated@@217)) ($generated@@139 $generated@@217))
 :pattern ( ($generated@@138 ($generated@@87 $generated@@36 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ) (!  (=> ($generated@@39 $generated@@218 ($generated@@93 $generated@@219)) (and (= ($generated@@87 $generated@@92 ($generated@@86 $generated@@92 $generated@@218)) $generated@@218) ($generated@@35 $generated@@92 ($generated@@86 $generated@@92 $generated@@218) ($generated@@93 $generated@@219))))
 :pattern ( ($generated@@39 $generated@@218 ($generated@@93 $generated@@219)))
)))
(assert (forall (($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@35 $generated@@66 $generated@@220 ($generated@@53 $generated@@221 $generated@@222)) (forall (($generated@@223 T@U) ) (!  (=> ($generated@@63 ($generated@@26 $generated@@220) $generated@@223) (and ($generated@@39 ($generated@@64 $generated@@65 $generated@@65 ($generated@@31 $generated@@220) $generated@@223) $generated@@222) ($generated@@39 $generated@@223 $generated@@221)))
 :pattern ( ($generated@@64 $generated@@65 $generated@@65 ($generated@@31 $generated@@220) $generated@@223))
 :pattern ( ($generated@@63 ($generated@@26 $generated@@220) $generated@@223))
)))
 :pattern ( ($generated@@35 $generated@@66 $generated@@220 ($generated@@53 $generated@@221 $generated@@222)))
)))
(assert (= ($generated@@25 $generated@@54) $generated@@4))
(assert (= ($generated@@203 $generated@@54) $generated@@7))
(assert (forall (($generated@@224 T@U) ) (! (= ($generated@@64 $generated@@65 $generated@@65 $generated@@101 $generated@@224) ($generated@@87 $generated@@11 ($generated@@15 ($generated@@99 ($generated@@16 ($generated@@86 $generated@@11 $generated@@224))))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@65 $generated@@101 $generated@@224))
)))
(assert (forall (($generated@@225 T@U) ) (! (= ($generated@@64 $generated@@65 $generated@@65 $generated@@52 $generated@@225) ($generated@@87 $generated@@11 ($generated@@15 ($generated@@48 ($generated@@16 ($generated@@86 $generated@@11 $generated@@225))))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@65 $generated@@52 $generated@@225))
)))
(assert (forall (($generated@@228 T@U) ) (! (= ($generated@@64 $generated@@65 $generated@@65 $generated@@226 $generated@@228) ($generated@@87 $generated@@11 ($generated@@15 ($generated@@227 ($generated@@16 ($generated@@86 $generated@@11 $generated@@228))))))
 :pattern ( ($generated@@64 $generated@@65 $generated@@65 $generated@@226 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ($generated@@230 T@U) ) (! (= ($generated@@37 ($generated@@60 $generated@@65 $generated@@229) ($generated@@60 $generated@@65 $generated@@230)) ($generated@@60 $generated@@36 ($generated@@37 $generated@@229 $generated@@230)))
 :pattern ( ($generated@@37 ($generated@@60 $generated@@65 $generated@@229) ($generated@@60 $generated@@65 $generated@@230)))
)))
(assert (forall (($generated@@231 Int) ) (! (= ($generated@@87 $generated@@11 ($generated@@15 ($generated@@46 $generated@@231))) ($generated@@60 $generated@@65 ($generated@@87 $generated@@11 ($generated@@15 $generated@@231))))
 :pattern ( ($generated@@87 $generated@@11 ($generated@@15 ($generated@@46 $generated@@231))))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@T) ) (! (= ($generated@@87 $generated@@233 ($generated@@60 $generated@@233 $generated@@232)) ($generated@@60 $generated@@65 ($generated@@87 $generated@@233 $generated@@232)))
 :pattern ( ($generated@@87 $generated@@233 ($generated@@60 $generated@@233 $generated@@232)))
)))
(assert (forall (($generated@@234 T@U) ) (!  (or (= $generated@@234 $generated@@144) (exists (($generated@@235 T@U) ($generated@@236 T@U) ) ($generated@@63 ($generated@@211 $generated@@234) ($generated@@87 $generated@@36 ($generated@@37 $generated@@235 $generated@@236)))))
 :pattern ( ($generated@@211 $generated@@234))
)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ($generated@@239 T@U) ) (!  (=> ($generated@@35 $generated@@66 $generated@@237 ($generated@@53 $generated@@238 $generated@@239)) (and (and ($generated@@35 $generated@@92 ($generated@@26 $generated@@237) ($generated@@93 $generated@@238)) ($generated@@35 $generated@@92 ($generated@@208 $generated@@237) ($generated@@93 $generated@@239))) ($generated@@35 $generated@@92 ($generated@@211 $generated@@237) ($generated@@93 ($generated@@38 $generated@@238 $generated@@239)))))
 :pattern ( ($generated@@35 $generated@@66 $generated@@237 ($generated@@53 $generated@@238 $generated@@239)))
)))
(assert (forall (($generated@@240 T@U) ) (! ($generated@@35 $generated@@11 $generated@@240 $generated)
 :pattern ( ($generated@@35 $generated@@11 $generated@@240 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () Int)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () Int)
(declare-fun $generated@@246 () Int)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 (T@U) Bool)
(declare-fun $generated@@251 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@252 true))
(let (($generated@@253  (=> (and (not (and (and (< $generated@@241 $generated@@242) (< $generated@@243 $generated@@244)) (and (< $generated@@245 $generated@@242) (< $generated@@246 $generated@@244)))) (= (ControlFlow 0 6) 2)) $generated@@252)))
(let (($generated@@254  (=> (and (and (< $generated@@241 $generated@@242) (< $generated@@243 $generated@@244)) (and (< $generated@@245 $generated@@242) (< $generated@@246 $generated@@244))) (and (=> (= (ControlFlow 0 4) (- 0 5)) (or (or (not (= (+ $generated@@241 $generated@@243) (+ $generated@@245 $generated@@246))) (not true)) (= $generated@@241 $generated@@245))) (=> (or (or (not (= (+ $generated@@241 $generated@@243) (+ $generated@@245 $generated@@246))) (not true)) (= $generated@@241 $generated@@245)) (=> (= (ControlFlow 0 4) 2) $generated@@252))))))
(let (($generated@@255  (=> (not (and (< $generated@@241 $generated@@242) (< $generated@@243 $generated@@244))) (and (=> (= (ControlFlow 0 8) 4) $generated@@254) (=> (= (ControlFlow 0 8) 6) $generated@@253)))))
(let (($generated@@256  (=> (and (< $generated@@241 $generated@@242) (< $generated@@243 $generated@@244)) (and (=> (= (ControlFlow 0 7) 4) $generated@@254) (=> (= (ControlFlow 0 7) 6) $generated@@253)))))
(let (($generated@@257  (=> (not (and (< $generated@@241 $generated@@242) (< $generated@@243 $generated@@244))) (and (=> (= (ControlFlow 0 10) 7) $generated@@256) (=> (= (ControlFlow 0 10) 8) $generated@@255)))))
(let (($generated@@258  (=> (and (< $generated@@241 $generated@@242) (< $generated@@243 $generated@@244)) (and (=> (= (ControlFlow 0 9) 7) $generated@@256) (=> (= (ControlFlow 0 9) 8) $generated@@255)))))
(let (($generated@@259  (=> (<= $generated@@242 $generated@@241) (and (=> (= (ControlFlow 0 12) 9) $generated@@258) (=> (= (ControlFlow 0 12) 10) $generated@@257)))))
(let (($generated@@260  (=> (< $generated@@241 $generated@@242) (and (=> (= (ControlFlow 0 11) 9) $generated@@258) (=> (= (ControlFlow 0 11) 10) $generated@@257)))))
(let (($generated@@261  (=> (and (and (<= ($generated@@46 0) $generated@@241) (<= ($generated@@46 0) $generated@@243)) (and (<= ($generated@@46 0) $generated@@245) (<= ($generated@@46 0) $generated@@246))) (and (=> (= (ControlFlow 0 13) 11) $generated@@260) (=> (= (ControlFlow 0 13) 12) $generated@@259)))))
(let (($generated@@262  (=> (and (not (and (<= ($generated@@46 0) $generated@@241) (<= ($generated@@46 0) $generated@@243))) (= (ControlFlow 0 3) 2)) $generated@@252)))
(let (($generated@@263 true))
(let (($generated@@264  (=> (= $generated@@247 ($generated@@155 $generated@@248 $generated@@249 $generated@@3 false)) (and (and (=> (= (ControlFlow 0 14) 1) $generated@@263) (=> (= (ControlFlow 0 14) 13) $generated@@261)) (=> (= (ControlFlow 0 14) 3) $generated@@262)))))
(let (($generated@@265  (=> (and ($generated@@250 $generated@@249) ($generated@@251 $generated@@249)) (=> (and (and (<= ($generated@@46 0) $generated@@242) (<= ($generated@@46 0) $generated@@244)) (and (= 0 $generated@@44) (= (ControlFlow 0 15) 14))) $generated@@264))))
$generated@@265)))))))))))))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 4) (- 5))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
