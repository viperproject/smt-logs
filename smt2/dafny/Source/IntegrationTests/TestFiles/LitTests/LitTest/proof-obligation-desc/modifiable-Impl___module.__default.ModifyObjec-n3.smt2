(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@T T@U T@U) Bool)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@U) Bool)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U Int) T@U)
(declare-fun $generated@@116 (T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@2) 0))
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (= ($generated@@28 $generated@@2) $generated@@3))
(assert (forall (($generated@@31 T@U) ) (!  (not ($generated@@29 $generated@@30 $generated@@31))
 :pattern ( ($generated@@29 $generated@@30 $generated@@31))
)))
(assert (= ($generated@@32 $generated@@30) 0))
(assert (= ($generated@@10 $generated@@34) 3))
(assert (forall (($generated@@38 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@38 $generated@@35)  (or (= $generated@@38 $generated@@36) (= ($generated@@37 $generated@@38) $generated@@35)))
 :pattern ( ($generated@@33 $generated@@34 $generated@@38 $generated@@35))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@41 $generated@@40 $generated@@42) ($generated@@39 $generated@@34 $generated@@41 $generated@@35 $generated@@42))
 :pattern ( ($generated@@39 $generated@@34 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@39 $generated@@34 $generated@@41 $generated@@35 $generated@@42))
)))
(assert (= ($generated@@26 $generated@@43) 0))
(assert (= ($generated@@44 $generated@@5 $generated@@8) $generated@@43))
(assert  (not ($generated@@45 $generated@@43)))
(assert (= ($generated@@26 $generated@@46) 0))
(assert (= ($generated@@44 $generated@@5 $generated@@9) $generated@@46))
(assert  (not ($generated@@45 $generated@@46)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@10 $generated@@49) 4)) (= ($generated@@10 $generated@@50) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@10 ($generated@@51 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@72 $generated@@35 $generated@@73)  (or (= $generated@@72 $generated@@36) ($generated@@15 ($generated@@47 $generated@@11 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@72) $generated@@2)))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@72 $generated@@35 $generated@@73))
)))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (!  (=> ($generated@@74 $generated@@75 $generated@@76) (forall (($generated@@77 T@U) ) (!  (=> ($generated@@15 ($generated@@47 $generated@@11 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@75 $generated@@77) $generated@@2))) ($generated@@15 ($generated@@47 $generated@@11 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@2))))
 :pattern ( ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@76 $generated@@77) $generated@@2))
)))
 :pattern ( ($generated@@74 $generated@@75 $generated@@76))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@47 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@47 $generated@@85 $generated@@84))
)))
(assert ($generated@@45 $generated@@2))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> (and (and ($generated@@86 $generated@@87) (and (or (not (= $generated@@88 $generated@@36)) (not true)) (= ($generated@@37 $generated@@88) $generated@@35))) ($generated@@15 ($generated@@47 $generated@@11 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@87 $generated@@88) $generated@@2)))) ($generated@@39 $generated@@12 ($generated@@47 $generated@@12 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@87 $generated@@88) $generated@@43)) $generated $generated@@87))
 :pattern ( ($generated@@47 $generated@@12 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@87 $generated@@88) $generated@@43)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and (and ($generated@@86 $generated@@89) (and (or (not (= $generated@@90 $generated@@36)) (not true)) (= ($generated@@37 $generated@@90) $generated@@35))) ($generated@@15 ($generated@@47 $generated@@11 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@89 $generated@@90) $generated@@2)))) ($generated@@39 $generated@@12 ($generated@@47 $generated@@12 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@89 $generated@@90) $generated@@46)) $generated $generated@@89))
 :pattern ( ($generated@@47 $generated@@12 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@89 $generated@@90) $generated@@46)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@91 ($generated@@83 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@39 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@91 ($generated@@83 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@74 $generated@@96 $generated@@97) (=> ($generated@@91 $generated@@98 $generated@@99 $generated@@96) ($generated@@91 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@74 $generated@@96 $generated@@97) ($generated@@91 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (!  (=> ($generated@@74 $generated@@100 $generated@@101) (=> ($generated@@39 $generated@@104 $generated@@102 $generated@@103 $generated@@100) ($generated@@39 $generated@@104 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@74 $generated@@100 $generated@@101) ($generated@@39 $generated@@104 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@105 $generated@@106 $generated@@40) (and (= ($generated@@83 $generated@@34 ($generated@@47 $generated@@34 $generated@@106)) $generated@@106) ($generated@@33 $generated@@34 ($generated@@47 $generated@@34 $generated@@106) $generated@@40)))
 :pattern ( ($generated@@105 $generated@@106 $generated@@40))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@105 $generated@@107 $generated@@35) (and (= ($generated@@83 $generated@@34 ($generated@@47 $generated@@34 $generated@@107)) $generated@@107) ($generated@@33 $generated@@34 ($generated@@47 $generated@@34 $generated@@107) $generated@@35)))
 :pattern ( ($generated@@105 $generated@@107 $generated@@35))
)))
(assert (forall (($generated@@108 T@U) ) (! (= ($generated@@33 $generated@@34 $generated@@108 $generated@@40)  (and ($generated@@33 $generated@@34 $generated@@108 $generated@@35) (or (not (= $generated@@108 $generated@@36)) (not true))))
 :pattern ( ($generated@@33 $generated@@34 $generated@@108 $generated@@40))
 :pattern ( ($generated@@33 $generated@@34 $generated@@108 $generated@@35))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@29 $generated@@110 $generated@@111) (exists (($generated@@112 Int) ) (!  (and (and (<= 0 $generated@@112) (< $generated@@112 ($generated@@32 $generated@@110))) (= ($generated@@109 $generated@@110 $generated@@112) $generated@@111))
 :pattern ( ($generated@@109 $generated@@110 $generated@@112))
)))
 :pattern ( ($generated@@29 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (!  (=> (or (not (= $generated@@113 $generated@@115)) (not true)) (=> (and ($generated@@74 $generated@@113 $generated@@114) ($generated@@74 $generated@@114 $generated@@115)) ($generated@@74 $generated@@113 $generated@@115)))
 :pattern ( ($generated@@74 $generated@@113 $generated@@114) ($generated@@74 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ) (!  (and (= ($generated@@116 ($generated@@44 $generated@@117 $generated@@118)) $generated@@117) (= ($generated@@28 ($generated@@44 $generated@@117 $generated@@118)) $generated@@118))
 :pattern ( ($generated@@44 $generated@@117 $generated@@118))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@105 $generated@@119 $generated) (and (= ($generated@@83 $generated@@12 ($generated@@47 $generated@@12 $generated@@119)) $generated@@119) ($generated@@33 $generated@@12 ($generated@@47 $generated@@12 $generated@@119) $generated)))
 :pattern ( ($generated@@105 $generated@@119 $generated))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@T) ) (! (= ($generated@@105 ($generated@@83 $generated@@122 $generated@@120) $generated@@121) ($generated@@33 $generated@@122 $generated@@120 $generated@@121))
 :pattern ( ($generated@@105 ($generated@@83 $generated@@122 $generated@@120) $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ) (! (<= 0 ($generated@@32 $generated@@123))
 :pattern ( ($generated@@32 $generated@@123))
)))
(assert (= ($generated@@10 $generated@@124) 7))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@39 $generated@@124 $generated@@126 ($generated@@125 $generated@@127) $generated@@128) (forall (($generated@@129 Int) ) (!  (=> (and (<= 0 $generated@@129) (< $generated@@129 ($generated@@32 $generated@@126))) ($generated@@91 ($generated@@109 $generated@@126 $generated@@129) $generated@@127 $generated@@128))
 :pattern ( ($generated@@109 $generated@@126 $generated@@129))
)))
 :pattern ( ($generated@@39 $generated@@124 $generated@@126 ($generated@@125 $generated@@127) $generated@@128))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@130 ($generated@@125 $generated@@131)) $generated@@131)
 :pattern ( ($generated@@125 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@27 ($generated@@125 $generated@@132)) $generated@@1)
 :pattern ( ($generated@@125 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@T) ) (! (= ($generated@@47 $generated@@134 ($generated@@83 $generated@@134 $generated@@133)) $generated@@133)
 :pattern ( ($generated@@83 $generated@@134 $generated@@133))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (!  (=> (and ($generated@@86 $generated@@135) (and (or (not (= $generated@@136 $generated@@36)) (not true)) (= ($generated@@37 $generated@@136) $generated@@35))) ($generated@@33 $generated@@12 ($generated@@47 $generated@@12 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@135 $generated@@136) $generated@@43)) $generated))
 :pattern ( ($generated@@47 $generated@@12 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@135 $generated@@136) $generated@@43)))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and ($generated@@86 $generated@@137) (and (or (not (= $generated@@138 $generated@@36)) (not true)) (= ($generated@@37 $generated@@138) $generated@@35))) ($generated@@33 $generated@@12 ($generated@@47 $generated@@12 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@137 $generated@@138) $generated@@46)) $generated))
 :pattern ( ($generated@@47 $generated@@12 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@137 $generated@@138) $generated@@46)))
)))
(assert  (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@139 $generated@@142 $generated@@143 $generated@@144 ($generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@139 $generated@@149 $generated@@150 $generated@@151 ($generated@@141 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@139 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@139 $generated@@158 $generated@@159 $generated@@160 ($generated@@141 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@139 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@15 ($generated@@139 $generated@@34 $generated@@49 $generated@@11 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@167)) (not true)) ($generated@@15 ($generated@@47 $generated@@11 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@34 ($generated@@51 $generated@@49 $generated@@50) $generated@@168 $generated@@174) $generated@@169)))) (or (= $generated@@174 $generated@@170) (and (and ($generated@@33 $generated@@34 $generated@@174 $generated@@171) ($generated@@29 $generated@@172 ($generated@@83 $generated@@34 $generated@@174))) (= $generated@@175 $generated@@173)))))
 :pattern ( ($generated@@139 $generated@@34 $generated@@49 $generated@@11 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@105 $generated@@176 ($generated@@125 $generated@@177)) (and (= ($generated@@83 $generated@@124 ($generated@@47 $generated@@124 $generated@@176)) $generated@@176) ($generated@@33 $generated@@124 ($generated@@47 $generated@@124 $generated@@176) ($generated@@125 $generated@@177))))
 :pattern ( ($generated@@105 $generated@@176 ($generated@@125 $generated@@177)))
)))
(assert (= ($generated@@27 $generated@@40) $generated@@4))
(assert (= ($generated@@178 $generated@@40) $generated@@7))
(assert (= ($generated@@27 $generated@@35) $generated@@6))
(assert (= ($generated@@178 $generated@@35) $generated@@7))
(assert (forall (($generated@@179 Int) ) (! (= ($generated@@83 $generated@@12 ($generated@@16 ($generated@@78 $generated@@179))) ($generated@@80 $generated@@50 ($generated@@83 $generated@@12 ($generated@@16 $generated@@179))))
 :pattern ( ($generated@@83 $generated@@12 ($generated@@16 ($generated@@78 $generated@@179))))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@83 $generated@@181 ($generated@@80 $generated@@181 $generated@@180)) ($generated@@80 $generated@@50 ($generated@@83 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@83 $generated@@181 ($generated@@80 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ) (!  (=> (= ($generated@@32 $generated@@182) 0) (= $generated@@182 $generated@@30))
 :pattern ( ($generated@@32 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 T@U) ) (! ($generated@@39 $generated@@12 $generated@@184 $generated $generated@@183)
 :pattern ( ($generated@@39 $generated@@12 $generated@@184 $generated $generated@@183))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ) (! (= ($generated@@33 $generated@@124 $generated@@185 ($generated@@125 $generated@@186)) (forall (($generated@@187 Int) ) (!  (=> (and (<= 0 $generated@@187) (< $generated@@187 ($generated@@32 $generated@@185))) ($generated@@105 ($generated@@109 $generated@@185 $generated@@187) $generated@@186))
 :pattern ( ($generated@@109 $generated@@185 $generated@@187))
)))
 :pattern ( ($generated@@33 $generated@@124 $generated@@185 ($generated@@125 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ) (! ($generated@@33 $generated@@12 $generated@@188 $generated)
 :pattern ( ($generated@@33 $generated@@12 $generated@@188 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@196 true))
(let (($generated@@197  (=> (and (and ($generated@@33 $generated@@34 $generated@@189 $generated@@40) ($generated@@39 $generated@@34 $generated@@189 $generated@@40 $generated@@190)) ($generated@@29 $generated@@191 ($generated@@83 $generated@@34 $generated@@189))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@189 $generated@@36)) (not true))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@15 ($generated@@139 $generated@@34 $generated@@49 $generated@@11 $generated@@192 $generated@@189 $generated@@43))) (=> ($generated@@15 ($generated@@139 $generated@@34 $generated@@49 $generated@@11 $generated@@192 $generated@@189 $generated@@43)) (=> (and (and (and ($generated@@33 $generated@@34 $generated@@193 $generated@@40) ($generated@@39 $generated@@34 $generated@@193 $generated@@40 $generated@@190)) ($generated@@29 $generated@@191 ($generated@@83 $generated@@34 $generated@@193))) (and (or (not (= $generated@@189 $generated@@193)) (not true)) (= (ControlFlow 0 2) (- 0 1)))) (or (or (or (not (= $generated@@189 $generated@@193)) (not true)) (or (not (= $generated@@43 $generated@@43)) (not true))) (= ($generated@@78 1) ($generated@@78 1))))))))))
(let (($generated@@198  (=> (= $generated@@192 ($generated@@140 $generated@@36 $generated@@190 $generated@@2 ($generated@@47 $generated@@34 ($generated@@109 $generated@@191 ($generated@@78 1))) $generated@@40 $generated@@191 $generated@@46)) (and (=> (= (ControlFlow 0 6) 2) $generated@@197) (=> (= (ControlFlow 0 6) 5) $generated@@196)))))
(let (($generated@@199  (=> (and ($generated@@86 $generated@@190) ($generated@@194 $generated@@190)) (=> (and (and (and ($generated@@33 $generated@@124 $generated@@191 ($generated@@125 $generated@@40)) ($generated@@39 $generated@@124 $generated@@191 ($generated@@125 $generated@@40) $generated@@190)) (= 1 $generated@@195)) (and (> ($generated@@32 $generated@@191) 1) (= (ControlFlow 0 7) 6))) $generated@@198))))
$generated@@199)))))
))
(check-sat)
(get-info :reason-unknown)
(get-info :rlimit)
(assert (not (= (ControlFlow 0 2) (- 3))))
(check-sat)
(get-info :rlimit)
(pop 1)
; Invalid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
