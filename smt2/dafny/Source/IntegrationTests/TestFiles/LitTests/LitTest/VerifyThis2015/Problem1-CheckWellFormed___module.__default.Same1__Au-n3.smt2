(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@20 () T@U)
(declare-fun $generated@@23 () Int)
(declare-fun $generated@@24 (T@U T@U T@U T@U Int) Bool)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (Int) Int)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U Int) T@U)
(declare-fun $generated@@40 (T@U) Int)
(declare-fun $generated@@41 (T@U Int) T@U)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@60 (T@T T@U) T@U)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@U T@U T@U) Bool)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@100 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@101 () T@T)
(declare-fun $generated@@102 () T@T)
(declare-fun $generated@@103 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@104 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@T T@T) T@T)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T) T@T)
(declare-fun $generated@@110 (T@T) T@T)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@173 (T@U T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (forall (($generated@@21 T@U) ($generated@@22 T@U) ) (! ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22)
 :pattern ( ($generated@@19 $generated@@5 $generated@@21 $generated@@20 $generated@@22))
)))
(assert (= ($generated@@3 $generated@@28) 3))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ($generated@@38 T@U) ($generated@@39 Int) ) (!  (=> (or ($generated@@26 $generated@@35 $generated@@37 $generated@@38 $generated@@39) (and (< 0 $generated@@23) (and (and ($generated@@27 $generated@@28 $generated@@37 ($generated@@29 $generated@@35)) ($generated@@27 $generated@@28 $generated@@38 ($generated@@29 $generated@@35))) (<= ($generated@@30 0) $generated@@39)))) (and (=> (not ($generated@@31 $generated@@37 $generated@@32)) (and (=> (and (not ($generated@@31 $generated@@38 $generated@@32)) (= ($generated@@33 $generated@@37 ($generated@@30 0)) ($generated@@33 $generated@@38 ($generated@@30 0)))) ($generated@@26 $generated@@35 ($generated@@34 $generated@@37 ($generated@@30 1)) ($generated@@34 $generated@@38 ($generated@@30 1)) $generated@@39)) (=> (not (and (not ($generated@@31 $generated@@38 $generated@@32)) (= ($generated@@33 $generated@@37 ($generated@@30 0)) ($generated@@33 $generated@@38 ($generated@@30 0))))) (=> (> $generated@@39 0) ($generated@@26 $generated@@35 ($generated@@34 $generated@@37 ($generated@@30 1)) $generated@@38 (- $generated@@39 1)))))) (= ($generated@@24 $generated@@35 ($generated@@25 $generated@@36) $generated@@37 $generated@@38 $generated@@39) (ite ($generated@@31 $generated@@37 $generated@@32) true (ite  (and (not ($generated@@31 $generated@@38 $generated@@32)) (= ($generated@@33 $generated@@37 ($generated@@30 0)) ($generated@@33 $generated@@38 ($generated@@30 0)))) ($generated@@24 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@30 1)) ($generated@@34 $generated@@38 ($generated@@30 1)) $generated@@39)  (and (> $generated@@39 0) ($generated@@24 $generated@@35 $generated@@36 ($generated@@34 $generated@@37 ($generated@@30 1)) $generated@@38 (- $generated@@39 1))))))))
 :pattern ( ($generated@@24 $generated@@35 ($generated@@25 $generated@@36) $generated@@37 $generated@@38 $generated@@39))
))))
(assert (= ($generated@@40 $generated@@32) 0))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (= $generated@@45 ($generated@@40 $generated@@43)) (and (= ($generated@@41 ($generated@@42 $generated@@43 $generated@@44) $generated@@45) $generated@@43) (= ($generated@@34 ($generated@@42 $generated@@43 $generated@@44) $generated@@45) $generated@@44)))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@43 $generated@@44) $generated@@45))
 :pattern ( ($generated@@34 ($generated@@42 $generated@@43 $generated@@44) $generated@@45))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 Int) ) (!  (=> (= $generated@@47 0) (= ($generated@@34 $generated@@46 $generated@@47) $generated@@46))
 :pattern ( ($generated@@34 $generated@@46 $generated@@47))
)))
(assert (forall (($generated@@48 Int) ) (! (= ($generated@@30 $generated@@48) $generated@@48)
 :pattern ( ($generated@@30 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@49 $generated@@51 $generated@@50) $generated@@50)
 :pattern ( ($generated@@49 $generated@@51 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 Int) ) (!  (=> (and (and (<= 0 $generated@@54) (< $generated@@54 $generated@@53)) (< $generated@@54 ($generated@@40 $generated@@52))) (= ($generated@@33 ($generated@@41 $generated@@52 $generated@@53) $generated@@54) ($generated@@33 $generated@@52 $generated@@54)))
 :weight 25
 :pattern ( ($generated@@33 ($generated@@41 $generated@@52 $generated@@53) $generated@@54))
 :pattern ( ($generated@@33 $generated@@52 $generated@@54) ($generated@@41 $generated@@52 $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 Int) ) (!  (=> (and (<= 0 $generated@@56) (<= $generated@@56 ($generated@@40 $generated@@55))) (= ($generated@@40 ($generated@@34 $generated@@55 $generated@@56)) (- ($generated@@40 $generated@@55) $generated@@56)))
 :pattern ( ($generated@@40 ($generated@@34 $generated@@55 $generated@@56)))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@31 $generated@@57 $generated@@58)  (and (= ($generated@@40 $generated@@57) ($generated@@40 $generated@@58)) (forall (($generated@@59 Int) ) (!  (=> (and (<= 0 $generated@@59) (< $generated@@59 ($generated@@40 $generated@@57))) (= ($generated@@33 $generated@@57 $generated@@59) ($generated@@33 $generated@@58 $generated@@59)))
 :pattern ( ($generated@@33 $generated@@57 $generated@@59))
 :pattern ( ($generated@@33 $generated@@58 $generated@@59))
))))
 :pattern ( ($generated@@31 $generated@@57 $generated@@58))
)))
(assert (forall (($generated@@62 T@U) ($generated@@63 T@T) ) (! (= ($generated@@61 $generated@@63 ($generated@@60 $generated@@63 $generated@@62)) $generated@@62)
 :pattern ( ($generated@@60 $generated@@63 $generated@@62))
)))
(assert (forall (($generated@@64 T@U) ) (! (= ($generated@@27 $generated@@5 $generated@@64 $generated@@20) (<= ($generated@@30 0) ($generated@@10 $generated@@64)))
 :pattern ( ($generated@@27 $generated@@5 $generated@@64 $generated@@20))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@T) ) (! (= ($generated@@65 ($generated@@61 $generated@@69 $generated@@66) $generated@@67 $generated@@68) ($generated@@19 $generated@@69 $generated@@66 $generated@@67 $generated@@68))
 :pattern ( ($generated@@65 ($generated@@61 $generated@@69 $generated@@66) $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 Int) ($generated@@72 Int) ) (!  (=> (and (and (<= 0 $generated@@71) (<= 0 $generated@@72)) (< $generated@@72 (- ($generated@@40 $generated@@70) $generated@@71))) (= ($generated@@33 ($generated@@34 $generated@@70 $generated@@71) $generated@@72) ($generated@@33 $generated@@70 (+ $generated@@72 $generated@@71))))
 :weight 25
 :pattern ( ($generated@@33 ($generated@@34 $generated@@70 $generated@@71) $generated@@72))
)))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@40 ($generated@@42 $generated@@73 $generated@@74)) (+ ($generated@@40 $generated@@73) ($generated@@40 $generated@@74)))
 :pattern ( ($generated@@40 ($generated@@42 $generated@@73 $generated@@74)))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@75 $generated@@76 $generated@@20) (and (= ($generated@@61 $generated@@5 ($generated@@60 $generated@@5 $generated@@76)) $generated@@76) ($generated@@27 $generated@@5 ($generated@@60 $generated@@5 $generated@@76) $generated@@20)))
 :pattern ( ($generated@@75 $generated@@76 $generated@@20))
)))
(assert  (=> (<= 0 $generated@@23) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 Int) ) (!  (=> (or ($generated@@26 $generated@@77 ($generated@@49 $generated@@28 $generated@@79) ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 $generated@@81)) (and (< 0 $generated@@23) (and (and ($generated@@27 $generated@@28 $generated@@79 ($generated@@29 $generated@@77)) ($generated@@27 $generated@@28 $generated@@80 ($generated@@29 $generated@@77))) (<= ($generated@@30 0) $generated@@81)))) (and (=> (not ($generated@@31 $generated@@79 $generated@@32)) (and (=> (and (not ($generated@@31 $generated@@80 $generated@@32)) (= ($generated@@33 ($generated@@49 $generated@@28 $generated@@79) ($generated@@30 0)) ($generated@@33 ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 0)))) ($generated@@26 $generated@@77 ($generated@@49 $generated@@28 ($generated@@34 ($generated@@49 $generated@@28 $generated@@79) ($generated@@30 1))) ($generated@@49 $generated@@28 ($generated@@34 ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 1))) ($generated@@30 $generated@@81))) (=> (not (and (not ($generated@@31 $generated@@80 $generated@@32)) (= ($generated@@33 ($generated@@49 $generated@@28 $generated@@79) ($generated@@30 0)) ($generated@@33 ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 0))))) (=> ($generated@@8 ($generated@@49 $generated@@4 ($generated@@7 (> $generated@@81 0)))) ($generated@@26 $generated@@77 ($generated@@49 $generated@@28 ($generated@@34 ($generated@@49 $generated@@28 $generated@@79) ($generated@@30 1))) ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 (- $generated@@81 1))))))) (= ($generated@@24 $generated@@77 ($generated@@25 $generated@@78) ($generated@@49 $generated@@28 $generated@@79) ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 $generated@@81)) (ite ($generated@@31 $generated@@79 $generated@@32) true (ite  (and (not ($generated@@31 $generated@@80 $generated@@32)) (= ($generated@@33 ($generated@@49 $generated@@28 $generated@@79) ($generated@@30 0)) ($generated@@33 ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 0)))) ($generated@@24 $generated@@77 ($generated@@25 $generated@@78) ($generated@@49 $generated@@28 ($generated@@34 ($generated@@49 $generated@@28 $generated@@79) ($generated@@30 1))) ($generated@@49 $generated@@28 ($generated@@34 ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 1))) ($generated@@30 $generated@@81))  (and (> $generated@@81 0) ($generated@@24 $generated@@77 ($generated@@25 $generated@@78) ($generated@@49 $generated@@28 ($generated@@34 ($generated@@49 $generated@@28 $generated@@79) ($generated@@30 1))) ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 (- $generated@@81 1)))))))))
 :weight 3
 :pattern ( ($generated@@24 $generated@@77 ($generated@@25 $generated@@78) ($generated@@49 $generated@@28 $generated@@79) ($generated@@49 $generated@@28 $generated@@80) ($generated@@30 $generated@@81)))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> ($generated@@31 $generated@@82 $generated@@83) (= $generated@@82 $generated@@83))
 :pattern ( ($generated@@31 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 Int) ) (!  (=> (and (<= 0 $generated@@85) (<= $generated@@85 ($generated@@40 $generated@@84))) (= ($generated@@40 ($generated@@41 $generated@@84 $generated@@85)) $generated@@85))
 :pattern ( ($generated@@40 ($generated@@41 $generated@@84 $generated@@85)))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@T) ) (! (= ($generated@@75 ($generated@@61 $generated@@88 $generated@@86) $generated@@87) ($generated@@27 $generated@@88 $generated@@86 $generated@@87))
 :pattern ( ($generated@@75 ($generated@@61 $generated@@88 $generated@@86) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ) (! (<= 0 ($generated@@40 $generated@@89))
 :pattern ( ($generated@@40 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@19 $generated@@28 $generated@@90 ($generated@@29 $generated@@91) $generated@@92) (forall (($generated@@93 Int) ) (!  (=> (and (<= 0 $generated@@93) (< $generated@@93 ($generated@@40 $generated@@90))) ($generated@@65 ($generated@@33 $generated@@90 $generated@@93) $generated@@91 $generated@@92))
 :pattern ( ($generated@@33 $generated@@90 $generated@@93))
)))
 :pattern ( ($generated@@19 $generated@@28 $generated@@90 ($generated@@29 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ) (! (= ($generated@@94 ($generated@@29 $generated@@95)) $generated@@95)
 :pattern ( ($generated@@29 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ) (! (= ($generated@@96 ($generated@@29 $generated@@97)) $generated)
 :pattern ( ($generated@@29 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@60 $generated@@99 ($generated@@61 $generated@@99 $generated@@98)) $generated@@98)
 :pattern ( ($generated@@61 $generated@@99 $generated@@98))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@100 $generated@@111 $generated@@112 $generated@@113 ($generated@@107 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@100 $generated@@118 $generated@@119 $generated@@120 ($generated@@107 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@100 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@100 $generated@@127 $generated@@128 $generated@@129 ($generated@@107 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))) (= ($generated@@3 $generated@@101) 4)) (= ($generated@@3 $generated@@102) 5)) (forall (($generated@@136 T@T) ($generated@@137 T@T) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@104 $generated@@136 $generated@@137 ($generated@@108 $generated@@136 $generated@@137 $generated@@139 $generated@@140 $generated@@138) $generated@@140) $generated@@138)
 :weight 0
))) (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@145 $generated@@146) (= ($generated@@104 $generated@@141 $generated@@142 ($generated@@108 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@143) $generated@@146) ($generated@@104 $generated@@141 $generated@@142 $generated@@144 $generated@@146)))
 :weight 0
))) (= ($generated@@3 $generated@@105) 6)) (forall (($generated@@147 T@T) ($generated@@148 T@T) ) (= ($generated@@3 ($generated@@106 $generated@@147 $generated@@148)) 7))) (forall (($generated@@149 T@T) ($generated@@150 T@T) ) (! (= ($generated@@109 ($generated@@106 $generated@@149 $generated@@150)) $generated@@149)
 :pattern ( ($generated@@106 $generated@@149 $generated@@150))
))) (forall (($generated@@151 T@T) ($generated@@152 T@T) ) (! (= ($generated@@110 ($generated@@106 $generated@@151 $generated@@152)) $generated@@152)
 :pattern ( ($generated@@106 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 Bool) ($generated@@157 T@U) ($generated@@158 T@U) ) (! (= ($generated@@8 ($generated@@100 $generated@@101 $generated@@102 $generated@@4 ($generated@@103 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))  (=> (and (or (not (= $generated@@157 $generated@@153)) (not true)) ($generated@@8 ($generated@@60 $generated@@4 ($generated@@104 $generated@@102 $generated@@105 ($generated@@104 $generated@@101 ($generated@@106 $generated@@102 $generated@@105) $generated@@154 $generated@@157) $generated@@155)))) $generated@@156))
 :pattern ( ($generated@@100 $generated@@101 $generated@@102 $generated@@4 ($generated@@103 $generated@@153 $generated@@154 $generated@@155 $generated@@156) $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@75 $generated@@159 ($generated@@29 $generated@@160)) (and (= ($generated@@61 $generated@@28 ($generated@@60 $generated@@28 $generated@@159)) $generated@@159) ($generated@@27 $generated@@28 ($generated@@60 $generated@@28 $generated@@159) ($generated@@29 $generated@@160))))
 :pattern ( ($generated@@75 $generated@@159 ($generated@@29 $generated@@160)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 Int) ) (! (= ($generated@@24 $generated@@161 ($generated@@25 $generated@@162) $generated@@163 $generated@@164 $generated@@165) ($generated@@24 $generated@@161 $generated@@162 $generated@@163 $generated@@164 $generated@@165))
 :pattern ( ($generated@@24 $generated@@161 ($generated@@25 $generated@@162) $generated@@163 $generated@@164 $generated@@165))
)))
(assert (= ($generated@@96 $generated@@20) $generated@@1))
(assert (= ($generated@@166 $generated@@20) $generated@@2))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (and (and (<= 0 $generated@@168) (<= $generated@@168 $generated@@169)) (< $generated@@169 ($generated@@40 $generated@@167))) (= ($generated@@33 ($generated@@34 $generated@@167 $generated@@168) (- $generated@@169 $generated@@168)) ($generated@@33 $generated@@167 $generated@@169)))
 :weight 25
 :pattern ( ($generated@@33 $generated@@167 $generated@@169) ($generated@@34 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 Int) ) (!  (=> (and (and (<= 0 $generated@@171) (<= 0 $generated@@172)) (<= (+ $generated@@171 $generated@@172) ($generated@@40 $generated@@170))) (= ($generated@@34 ($generated@@34 $generated@@170 $generated@@171) $generated@@172) ($generated@@34 $generated@@170 (+ $generated@@171 $generated@@172))))
 :pattern ( ($generated@@34 ($generated@@34 $generated@@170 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 Int) ) (! (= ($generated@@173 $generated@@174 $generated@@175 $generated@@176) (forall (($generated@@177 Int) ) (!  (=> (and (<= 0 $generated@@177) (< $generated@@177 $generated@@176)) (= ($generated@@33 $generated@@174 $generated@@177) ($generated@@33 $generated@@175 $generated@@177)))
 :pattern ( ($generated@@33 $generated@@174 $generated@@177))
 :pattern ( ($generated@@33 $generated@@175 $generated@@177))
)))
 :pattern ( ($generated@@173 $generated@@174 $generated@@175 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Int) ) (!  (and (=> (< $generated@@180 ($generated@@40 $generated@@178)) (= ($generated@@33 ($generated@@42 $generated@@178 $generated@@179) $generated@@180) ($generated@@33 $generated@@178 $generated@@180))) (=> (<= ($generated@@40 $generated@@178) $generated@@180) (= ($generated@@33 ($generated@@42 $generated@@178 $generated@@179) $generated@@180) ($generated@@33 $generated@@179 (- $generated@@180 ($generated@@40 $generated@@178))))))
 :pattern ( ($generated@@33 ($generated@@42 $generated@@178 $generated@@179) $generated@@180))
)))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@61 $generated@@5 ($generated@@9 ($generated@@30 $generated@@181))) ($generated@@49 $generated@@105 ($generated@@61 $generated@@5 ($generated@@9 $generated@@181))))
 :pattern ( ($generated@@61 $generated@@5 ($generated@@9 ($generated@@30 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@61 $generated@@183 ($generated@@49 $generated@@183 $generated@@182)) ($generated@@49 $generated@@105 ($generated@@61 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@61 $generated@@183 ($generated@@49 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= ($generated@@40 $generated@@184) 0) (= $generated@@184 $generated@@32))
 :pattern ( ($generated@@40 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ) (!  (=> (= $generated@@186 0) (= ($generated@@41 $generated@@185 $generated@@186) $generated@@32))
 :pattern ( ($generated@@41 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@187 ($generated@@29 $generated@@188)) (forall (($generated@@189 Int) ) (!  (=> (and (<= 0 $generated@@189) (< $generated@@189 ($generated@@40 $generated@@187))) ($generated@@75 ($generated@@33 $generated@@187 $generated@@189) $generated@@188))
 :pattern ( ($generated@@33 $generated@@187 $generated@@189))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@187 ($generated@@29 $generated@@188)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@190 () Int)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U) Bool)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 (T@U) Bool)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 () T@U)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 13) (let (($generated@@200  (=> (or (= (+ $generated@@190 1) ($generated@@40 $generated@@191)) (or (not (= ($generated@@33 $generated@@191 $generated@@190) ($generated@@33 $generated@@191 (+ $generated@@190 1)))) (not true))) (=> (and ($generated@@192 $generated@@193) ($generated@@194 $generated@@193)) (=> (and (and (= $generated@@195 $generated@@193) ($generated@@19 $generated@@28 $generated@@191 ($generated@@29 $generated@@196) $generated@@193)) (and ($generated@@19 $generated@@28 $generated@@197 ($generated@@29 $generated@@196) $generated@@193) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@27 $generated@@5 ($generated@@9 ($generated@@30 1)) $generated@@20))))))
(let (($generated@@201  (=> (and (= (+ $generated@@190 1) ($generated@@40 $generated@@191)) (= (ControlFlow 0 6) 2)) $generated@@200)))
(let (($generated@@202  (=> (or (not (= (+ $generated@@190 1) ($generated@@40 $generated@@191))) (not true)) (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@40 $generated@@191)))) (=> (and (<= 0 $generated@@190) (< $generated@@190 ($generated@@40 $generated@@191))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 (+ $generated@@190 1)) (< (+ $generated@@190 1) ($generated@@40 $generated@@191)))) (=> (and (<= 0 (+ $generated@@190 1)) (< (+ $generated@@190 1) ($generated@@40 $generated@@191))) (=> (= (ControlFlow 0 3) 2) $generated@@200))))))))
(let (($generated@@203  (=> (and (<= ($generated@@30 0) $generated@@190) (< $generated@@190 ($generated@@40 $generated@@191))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 $generated@@190) (<= $generated@@190 ($generated@@40 $generated@@191)))) (=> (and (<= 0 $generated@@190) (<= $generated@@190 ($generated@@40 $generated@@191))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 (+ $generated@@190 1)) (<= (+ $generated@@190 1) ($generated@@40 $generated@@191)))) (=> (and (<= 0 (+ $generated@@190 1)) (<= (+ $generated@@190 1) ($generated@@40 $generated@@191))) (=> (and (<= ($generated@@40 ($generated@@42 ($generated@@41 $generated@@191 $generated@@190) ($generated@@34 $generated@@191 (+ $generated@@190 1)))) ($generated@@40 $generated@@197)) ($generated@@173 ($generated@@42 ($generated@@41 $generated@@191 $generated@@190) ($generated@@34 $generated@@191 (+ $generated@@190 1))) $generated@@197 ($generated@@40 ($generated@@42 ($generated@@41 $generated@@191 $generated@@190) ($generated@@34 $generated@@191 (+ $generated@@190 1)))))) (and (=> (= (ControlFlow 0 7) 3) $generated@@202) (=> (= (ControlFlow 0 7) 6) $generated@@201))))))))))
(let (($generated@@204  (=> (and (< $generated@@190 ($generated@@30 0)) (= (ControlFlow 0 11) 7)) $generated@@203)))
(let (($generated@@205  (=> (and (<= ($generated@@30 0) $generated@@190) (= (ControlFlow 0 10) 7)) $generated@@203)))
(let (($generated@@206  (=> (= $generated@@198 ($generated@@103 $generated@@199 $generated@@195 $generated@@0 false)) (and (=> (= (ControlFlow 0 12) 10) $generated@@205) (=> (= (ControlFlow 0 12) 11) $generated@@204)))))
(let (($generated@@207  (=> (and (and ($generated@@192 $generated@@195) ($generated@@194 $generated@@195)) (and ($generated@@27 $generated@@28 $generated@@191 ($generated@@29 $generated@@196)) ($generated@@19 $generated@@28 $generated@@191 ($generated@@29 $generated@@196) $generated@@195))) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@197 ($generated@@29 $generated@@196)) ($generated@@19 $generated@@28 $generated@@197 ($generated@@29 $generated@@196) $generated@@195)) (<= ($generated@@30 0) $generated@@190)) (and (= 2 $generated@@23) (= (ControlFlow 0 13) 12))) $generated@@206))))
$generated@@207)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
