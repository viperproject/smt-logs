(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@33 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U Int) T@U)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@46 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@51 () T@T)
(declare-fun $generated@@52 () T@T)
(declare-fun $generated@@53 (T@T T@T) T@T)
(declare-fun $generated@@54 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@55 (T@T) T@T)
(declare-fun $generated@@56 (T@T) T@T)
(declare-fun $generated@@85 (T@U Int) T@U)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@114 (T@U) Bool)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@130 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@131 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@132 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) 0))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@27 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@27 $generated@@24)  (or (= $generated@@27 $generated@@25) (= ($generated@@26 $generated@@27) $generated@@24)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@27 $generated@@24))
)))
(assert (= ($generated@@4 $generated@@31) 4))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@33 $generated@@39 $generated@@40 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 $generated@@42)) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@40 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@40 $generated@@34)) ($generated@@22 $generated@@31 $generated@@41 ($generated@@35 $generated@@39))) (<= ($generated@@32 0) $generated@@42)) (< $generated@@42 ($generated@@20 ($generated@@30 $generated@@31 $generated@@41)))))) (= ($generated@@29 $generated@@39 $generated@@40 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 $generated@@42)) ($generated@@36 ($generated@@37 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 $generated@@42)) ($generated@@38 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 (+ $generated@@42 1))))))
 :weight 3
 :pattern ( ($generated@@29 $generated@@39 $generated@@40 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 $generated@@42)))
))))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ($generated@@45 Int) ) (!  (=> (= $generated@@45 ($generated@@20 $generated@@43)) (and (= ($generated@@37 ($generated@@36 $generated@@43 $generated@@44) $generated@@45) $generated@@43) (= ($generated@@38 ($generated@@36 $generated@@43 $generated@@44) $generated@@45) $generated@@44)))
 :pattern ( ($generated@@37 ($generated@@36 $generated@@43 $generated@@44) $generated@@45))
 :pattern ( ($generated@@38 ($generated@@36 $generated@@43 $generated@@44) $generated@@45))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@46 $generated@@23 $generated@@47 $generated@@34 $generated@@48) ($generated@@46 $generated@@23 $generated@@47 $generated@@24 $generated@@48))
 :pattern ( ($generated@@46 $generated@@23 $generated@@47 $generated@@34 $generated@@48))
 :pattern ( ($generated@@46 $generated@@23 $generated@@47 $generated@@24 $generated@@48))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@50 $generated@@57 $generated@@58 ($generated@@54 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@61) $generated@@59)
 :weight 0
)) (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (or (= $generated@@66 $generated@@67) (= ($generated@@50 $generated@@62 $generated@@63 ($generated@@54 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@67) ($generated@@50 $generated@@62 $generated@@63 $generated@@65 $generated@@67)))
 :weight 0
))) (= ($generated@@4 $generated@@51) 5)) (= ($generated@@4 $generated@@52) 6)) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (= ($generated@@4 ($generated@@53 $generated@@68 $generated@@69)) 7))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@55 ($generated@@53 $generated@@70 $generated@@71)) $generated@@70)
 :pattern ( ($generated@@53 $generated@@70 $generated@@71))
))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@56 ($generated@@53 $generated@@72 $generated@@73)) $generated@@73)
 :pattern ( ($generated@@53 $generated@@72 $generated@@73))
))))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@46 $generated@@23 $generated@@74 $generated@@24 $generated@@75)  (or (= $generated@@74 $generated@@25) ($generated@@9 ($generated@@49 $generated@@5 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@23 ($generated@@53 $generated@@51 $generated@@52) $generated@@75 $generated@@74) $generated@@0)))))
 :pattern ( ($generated@@46 $generated@@23 $generated@@74 $generated@@24 $generated@@75))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 Int) ) (!  (=> (or ($generated@@33 $generated@@76 $generated@@77 $generated@@78 $generated@@79) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@77 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@77 $generated@@34)) ($generated@@22 $generated@@31 $generated@@78 ($generated@@35 $generated@@76))) (<= ($generated@@32 0) $generated@@79)) (< $generated@@79 ($generated@@20 $generated@@78))))) (= ($generated@@29 $generated@@76 $generated@@77 $generated@@78 $generated@@79) ($generated@@36 ($generated@@37 $generated@@78 $generated@@79) ($generated@@38 $generated@@78 (+ $generated@@79 1)))))
 :pattern ( ($generated@@29 $generated@@76 $generated@@77 $generated@@78 $generated@@79))
))))
(assert (forall (($generated@@80 T@U) ($generated@@81 Int) ) (!  (=> (= $generated@@81 0) (= ($generated@@38 $generated@@80 $generated@@81) $generated@@80))
 :pattern ( ($generated@@38 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@82 Int) ) (! (= ($generated@@32 $generated@@82) $generated@@82)
 :pattern ( ($generated@@32 $generated@@82))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@30 $generated@@84 $generated@@83) $generated@@83)
 :pattern ( ($generated@@30 $generated@@84 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ($generated@@88 Int) ) (!  (=> (and (and (<= 0 $generated@@88) (< $generated@@88 $generated@@87)) (< $generated@@88 ($generated@@20 $generated@@86))) (= ($generated@@85 ($generated@@37 $generated@@86 $generated@@87) $generated@@88) ($generated@@85 $generated@@86 $generated@@88)))
 :weight 25
 :pattern ( ($generated@@85 ($generated@@37 $generated@@86 $generated@@87) $generated@@88))
 :pattern ( ($generated@@85 $generated@@86 $generated@@88) ($generated@@37 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 Int) ) (!  (=> (and (<= 0 $generated@@90) (<= $generated@@90 ($generated@@20 $generated@@89))) (= ($generated@@20 ($generated@@38 $generated@@89 $generated@@90)) (- ($generated@@20 $generated@@89) $generated@@90)))
 :pattern ( ($generated@@20 ($generated@@38 $generated@@89 $generated@@90)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@T) ) (! (= ($generated@@91 $generated@@93 ($generated@@49 $generated@@93 $generated@@92)) $generated@@92)
 :pattern ( ($generated@@49 $generated@@93 $generated@@92))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@94 ($generated@@91 $generated@@98 $generated@@95) $generated@@96 $generated@@97) ($generated@@46 $generated@@98 $generated@@95 $generated@@96 $generated@@97))
 :pattern ( ($generated@@94 ($generated@@91 $generated@@98 $generated@@95) $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 Int) ) (!  (=> (and (and (<= 0 $generated@@100) (<= 0 $generated@@101)) (< $generated@@101 (- ($generated@@20 $generated@@99) $generated@@100))) (= ($generated@@85 ($generated@@38 $generated@@99 $generated@@100) $generated@@101) ($generated@@85 $generated@@99 (+ $generated@@101 $generated@@100))))
 :weight 25
 :pattern ( ($generated@@85 ($generated@@38 $generated@@99 $generated@@100) $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@20 ($generated@@36 $generated@@102 $generated@@103)) (+ ($generated@@20 $generated@@102) ($generated@@20 $generated@@103)))
 :pattern ( ($generated@@20 ($generated@@36 $generated@@102 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ) (!  (=> ($generated@@104 $generated@@105 $generated@@34) (and (= ($generated@@91 $generated@@23 ($generated@@49 $generated@@23 $generated@@105)) $generated@@105) ($generated@@22 $generated@@23 ($generated@@49 $generated@@23 $generated@@105) $generated@@34)))
 :pattern ( ($generated@@104 $generated@@105 $generated@@34))
)))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@104 $generated@@106 $generated@@24) (and (= ($generated@@91 $generated@@23 ($generated@@49 $generated@@23 $generated@@106)) $generated@@106) ($generated@@22 $generated@@23 ($generated@@49 $generated@@23 $generated@@106) $generated@@24)))
 :pattern ( ($generated@@104 $generated@@106 $generated@@24))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@107 $generated@@34)  (and ($generated@@22 $generated@@23 $generated@@107 $generated@@24) (or (not (= $generated@@107 $generated@@25)) (not true))))
 :pattern ( ($generated@@22 $generated@@23 $generated@@107 $generated@@34))
 :pattern ( ($generated@@22 $generated@@23 $generated@@107 $generated@@24))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 Int) ) (!  (=> (and (<= 0 $generated@@109) (<= $generated@@109 ($generated@@20 $generated@@108))) (= ($generated@@20 ($generated@@37 $generated@@108 $generated@@109)) $generated@@109))
 :pattern ( ($generated@@20 ($generated@@37 $generated@@108 $generated@@109)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@104 ($generated@@91 $generated@@112 $generated@@110) $generated@@111) ($generated@@22 $generated@@112 $generated@@110 $generated@@111))
 :pattern ( ($generated@@104 ($generated@@91 $generated@@112 $generated@@110) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ) (! (<= 0 ($generated@@20 $generated@@113))
 :pattern ( ($generated@@20 $generated@@113))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 Int) ) (!  (=> (and (or ($generated@@33 $generated@@116 $generated@@117 $generated@@118 $generated@@119) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@117 $generated@@25)) (not true)) ($generated@@46 $generated@@23 $generated@@117 $generated@@34 $generated@@115)) (and ($generated@@22 $generated@@31 $generated@@118 ($generated@@35 $generated@@116)) ($generated@@46 $generated@@31 $generated@@118 ($generated@@35 $generated@@116) $generated@@115))) (<= ($generated@@32 0) $generated@@119)) (< $generated@@119 ($generated@@20 $generated@@118))))) ($generated@@114 $generated@@115)) ($generated@@46 $generated@@31 ($generated@@29 $generated@@116 $generated@@117 $generated@@118 $generated@@119) ($generated@@35 $generated@@116) $generated@@115))
 :pattern ( ($generated@@46 $generated@@31 ($generated@@29 $generated@@116 $generated@@117 $generated@@118 $generated@@119) ($generated@@35 $generated@@116) $generated@@115))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@46 $generated@@31 $generated@@120 ($generated@@35 $generated@@121) $generated@@122) (forall (($generated@@123 Int) ) (!  (=> (and (<= 0 $generated@@123) (< $generated@@123 ($generated@@20 $generated@@120))) ($generated@@94 ($generated@@85 $generated@@120 $generated@@123) $generated@@121 $generated@@122))
 :pattern ( ($generated@@85 $generated@@120 $generated@@123))
)))
 :pattern ( ($generated@@46 $generated@@31 $generated@@120 ($generated@@35 $generated@@121) $generated@@122))
)))
(assert (forall (($generated@@125 T@U) ) (! (= ($generated@@124 ($generated@@35 $generated@@125)) $generated@@125)
 :pattern ( ($generated@@35 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ) (! (= ($generated@@126 ($generated@@35 $generated@@127)) $generated)
 :pattern ( ($generated@@35 $generated@@127))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@T) ) (! (= ($generated@@49 $generated@@129 ($generated@@91 $generated@@129 $generated@@128)) $generated@@128)
 :pattern ( ($generated@@91 $generated@@129 $generated@@128))
)))
(assert  (and (forall (($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@130 $generated@@133 $generated@@134 $generated@@135 ($generated@@132 $generated@@133 $generated@@134 $generated@@135 $generated@@137 $generated@@138 $generated@@139 $generated@@136) $generated@@138 $generated@@139) $generated@@136)
 :weight 0
)) (and (forall (($generated@@140 T@T) ($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (or (= $generated@@145 $generated@@147) (= ($generated@@130 $generated@@140 $generated@@141 $generated@@142 ($generated@@132 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@145 $generated@@146 $generated@@143) $generated@@147 $generated@@148) ($generated@@130 $generated@@140 $generated@@141 $generated@@142 $generated@@144 $generated@@147 $generated@@148)))
 :weight 0
)) (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@155 $generated@@157) (= ($generated@@130 $generated@@149 $generated@@150 $generated@@151 ($generated@@132 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@130 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)))))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 Bool) ($generated@@162 T@U) ($generated@@163 T@U) ) (! (= ($generated@@9 ($generated@@130 $generated@@23 $generated@@51 $generated@@5 ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))  (=> (and (or (not (= $generated@@162 $generated@@158)) (not true)) ($generated@@9 ($generated@@49 $generated@@5 ($generated@@50 $generated@@51 $generated@@52 ($generated@@50 $generated@@23 ($generated@@53 $generated@@51 $generated@@52) $generated@@159 $generated@@162) $generated@@160)))) $generated@@161))
 :pattern ( ($generated@@130 $generated@@23 $generated@@51 $generated@@5 ($generated@@131 $generated@@158 $generated@@159 $generated@@160 $generated@@161) $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@104 $generated@@164 ($generated@@35 $generated@@165)) (and (= ($generated@@91 $generated@@31 ($generated@@49 $generated@@31 $generated@@164)) $generated@@164) ($generated@@22 $generated@@31 ($generated@@49 $generated@@31 $generated@@164) ($generated@@35 $generated@@165))))
 :pattern ( ($generated@@104 $generated@@164 ($generated@@35 $generated@@165)))
)))
(assert (= ($generated@@126 $generated@@34) $generated@@1))
(assert (= ($generated@@166 $generated@@34) $generated@@3))
(assert (= ($generated@@126 $generated@@24) $generated@@2))
(assert (= ($generated@@166 $generated@@24) $generated@@3))
(assert (forall (($generated@@167 T@U) ($generated@@168 Int) ($generated@@169 Int) ) (!  (=> (and (and (<= 0 $generated@@168) (<= $generated@@168 $generated@@169)) (< $generated@@169 ($generated@@20 $generated@@167))) (= ($generated@@85 ($generated@@38 $generated@@167 $generated@@168) (- $generated@@169 $generated@@168)) ($generated@@85 $generated@@167 $generated@@169)))
 :weight 25
 :pattern ( ($generated@@85 $generated@@167 $generated@@169) ($generated@@38 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 Int) ($generated@@172 Int) ) (!  (=> (and (and (<= 0 $generated@@171) (<= 0 $generated@@172)) (<= (+ $generated@@171 $generated@@172) ($generated@@20 $generated@@170))) (= ($generated@@38 ($generated@@38 $generated@@170 $generated@@171) $generated@@172) ($generated@@38 $generated@@170 (+ $generated@@171 $generated@@172))))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@170 $generated@@171) $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Int) ) (!  (and (=> (< $generated@@175 ($generated@@20 $generated@@173)) (= ($generated@@85 ($generated@@36 $generated@@173 $generated@@174) $generated@@175) ($generated@@85 $generated@@173 $generated@@175))) (=> (<= ($generated@@20 $generated@@173) $generated@@175) (= ($generated@@85 ($generated@@36 $generated@@173 $generated@@174) $generated@@175) ($generated@@85 $generated@@174 (- $generated@@175 ($generated@@20 $generated@@173))))))
 :pattern ( ($generated@@85 ($generated@@36 $generated@@173 $generated@@174) $generated@@175))
)))
(assert (forall (($generated@@176 Int) ) (! (= ($generated@@91 $generated@@6 ($generated@@10 ($generated@@32 $generated@@176))) ($generated@@30 $generated@@52 ($generated@@91 $generated@@6 ($generated@@10 $generated@@176))))
 :pattern ( ($generated@@91 $generated@@6 ($generated@@10 ($generated@@32 $generated@@176))))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@91 $generated@@178 ($generated@@30 $generated@@178 $generated@@177)) ($generated@@30 $generated@@52 ($generated@@91 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@91 $generated@@178 ($generated@@30 $generated@@178 $generated@@177)))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 Int) ) (!  (=> (or ($generated@@33 $generated@@179 $generated@@180 $generated@@181 $generated@@182) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@180 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@180 $generated@@34)) ($generated@@22 $generated@@31 $generated@@181 ($generated@@35 $generated@@179))) (<= ($generated@@32 0) $generated@@182)) (< $generated@@182 ($generated@@20 $generated@@181))))) ($generated@@22 $generated@@31 ($generated@@29 $generated@@179 $generated@@180 $generated@@181 $generated@@182) ($generated@@35 $generated@@179)))
 :pattern ( ($generated@@29 $generated@@179 $generated@@180 $generated@@181 $generated@@182))
))))
(assert (forall (($generated@@183 T@U) ) (!  (=> (= ($generated@@20 $generated@@183) 0) (= $generated@@183 $generated@@21))
 :pattern ( ($generated@@20 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 Int) ) (!  (=> (= $generated@@185 0) (= ($generated@@37 $generated@@184 $generated@@185) $generated@@21))
 :pattern ( ($generated@@37 $generated@@184 $generated@@185))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Int) ) (!  (=> (or ($generated@@33 $generated@@186 ($generated@@30 $generated@@23 $generated@@187) ($generated@@30 $generated@@31 $generated@@188) ($generated@@32 $generated@@189)) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@187 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@187 $generated@@34)) ($generated@@22 $generated@@31 $generated@@188 ($generated@@35 $generated@@186))) (<= ($generated@@32 0) $generated@@189)) (< $generated@@189 ($generated@@20 ($generated@@30 $generated@@31 $generated@@188)))))) (= ($generated@@29 $generated@@186 ($generated@@30 $generated@@23 $generated@@187) ($generated@@30 $generated@@31 $generated@@188) ($generated@@32 $generated@@189)) ($generated@@36 ($generated@@37 ($generated@@30 $generated@@31 $generated@@188) ($generated@@32 $generated@@189)) ($generated@@38 ($generated@@30 $generated@@31 $generated@@188) ($generated@@32 (+ $generated@@189 1))))))
 :weight 3
 :pattern ( ($generated@@29 $generated@@186 ($generated@@30 $generated@@23 $generated@@187) ($generated@@30 $generated@@31 $generated@@188) ($generated@@32 $generated@@189)))
))))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@22 $generated@@31 $generated@@190 ($generated@@35 $generated@@191)) (forall (($generated@@192 Int) ) (!  (=> (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@20 $generated@@190))) ($generated@@104 ($generated@@85 $generated@@190 $generated@@192) $generated@@191))
 :pattern ( ($generated@@85 $generated@@190 $generated@@192))
)))
 :pattern ( ($generated@@22 $generated@@31 $generated@@190 ($generated@@35 $generated@@191)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@193 () Int)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 () T@U)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@200  (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@193) (<= $generated@@193 ($generated@@20 $generated@@194)))) (=> (and (<= 0 $generated@@193) (<= $generated@@193 ($generated@@20 $generated@@194))) (=> (= (ControlFlow 0 3) (- 0 2)) (and (<= 0 (+ $generated@@193 1)) (<= (+ $generated@@193 1) ($generated@@20 $generated@@194))))))))
(let (($generated@@201 true))
(let (($generated@@202  (=> (and (= $generated@@195 ($generated@@131 $generated@@25 $generated@@196 $generated@@0 false)) (< $generated@@193 ($generated@@20 $generated@@194))) (and (=> (= (ControlFlow 0 5) 1) $generated@@201) (=> (= (ControlFlow 0 5) 3) $generated@@200)))))
(let (($generated@@203  (=> (and (and (and ($generated@@114 $generated@@196) ($generated@@197 $generated@@196)) (and (or (not (= $generated@@198 $generated@@25)) (not true)) (and ($generated@@22 $generated@@23 $generated@@198 $generated@@34) ($generated@@46 $generated@@23 $generated@@198 $generated@@34 $generated@@196)))) (and (and ($generated@@22 $generated@@31 $generated@@194 ($generated@@35 $generated@@199)) (<= ($generated@@32 0) $generated@@193)) (and (= 0 $generated@@28) (= (ControlFlow 0 6) 5)))) $generated@@202)))
$generated@@203)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
