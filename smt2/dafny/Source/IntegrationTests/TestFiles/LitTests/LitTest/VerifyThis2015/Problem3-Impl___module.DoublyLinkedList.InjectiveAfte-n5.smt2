(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@T T@U T@U) Bool)
(declare-fun $generated@@23 () T@T)
(declare-fun $generated@@24 () T@U)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@28 () Int)
(declare-fun $generated@@29 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (Int) Int)
(declare-fun $generated@@33 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U T@U) T@U)
(declare-fun $generated@@37 (T@U Int) T@U)
(declare-fun $generated@@38 (T@U Int) T@U)
(declare-fun $generated@@43 (T@U T@U T@U) Bool)
(declare-fun $generated@@44 (T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U Int) T@U)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@U) T@U)
(declare-fun $generated@@58 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 () T@T)
(declare-fun $generated@@61 (T@T T@T) T@T)
(declare-fun $generated@@62 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@63 (T@T) T@T)
(declare-fun $generated@@64 (T@T) T@T)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U T@U T@U) Bool)
(declare-fun $generated@@111 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) Bool)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) 0))
(assert (= ($generated@@4 $generated@@23) 3))
(assert (forall (($generated@@27 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@27 $generated@@24)  (or (= $generated@@27 $generated@@25) (= ($generated@@26 $generated@@27) $generated@@24)))
 :pattern ( ($generated@@22 $generated@@23 $generated@@27 $generated@@24))
)))
(assert (= ($generated@@4 $generated@@31) 4))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (or ($generated@@33 $generated@@39 $generated@@40 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 $generated@@42)) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@40 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@40 $generated@@34)) ($generated@@22 $generated@@31 $generated@@41 ($generated@@35 $generated@@39))) (<= ($generated@@32 0) $generated@@42)) (< $generated@@42 ($generated@@20 ($generated@@30 $generated@@31 $generated@@41)))))) (= ($generated@@29 $generated@@39 $generated@@40 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 $generated@@42)) ($generated@@36 ($generated@@37 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 $generated@@42)) ($generated@@38 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 (+ $generated@@42 1))))))
 :weight 3
 :pattern ( ($generated@@29 $generated@@39 $generated@@40 ($generated@@30 $generated@@31 $generated@@41) ($generated@@32 $generated@@42)))
))))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (!  (=> (or ($generated@@44 $generated@@46 $generated@@47 ($generated@@30 $generated@@31 $generated@@48)) (and (< 0 $generated@@28) (and (and (or (not (= $generated@@47 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@47 $generated@@34)) ($generated@@22 $generated@@31 $generated@@48 ($generated@@35 $generated@@46))))) (= ($generated@@43 $generated@@46 $generated@@47 ($generated@@30 $generated@@31 $generated@@48)) (forall (($generated@@49 Int) ($generated@@50 Int) ) (!  (=> (and (and (<= ($generated@@32 0) $generated@@49) (< $generated@@49 $generated@@50)) (< $generated@@50 ($generated@@20 ($generated@@30 $generated@@31 $generated@@48)))) (or (not (= ($generated@@45 ($generated@@30 $generated@@31 $generated@@48) $generated@@49) ($generated@@45 ($generated@@30 $generated@@31 $generated@@48) $generated@@50))) (not true)))
 :pattern ( ($generated@@45 $generated@@48 $generated@@50) ($generated@@45 $generated@@48 $generated@@49))
))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@46 $generated@@47 ($generated@@30 $generated@@31 $generated@@48)))
))))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 Int) ) (!  (=> (= $generated@@53 ($generated@@20 $generated@@51)) (and (= ($generated@@37 ($generated@@36 $generated@@51 $generated@@52) $generated@@53) $generated@@51) (= ($generated@@38 ($generated@@36 $generated@@51 $generated@@52) $generated@@53) $generated@@52)))
 :pattern ( ($generated@@37 ($generated@@36 $generated@@51 $generated@@52) $generated@@53))
 :pattern ( ($generated@@38 ($generated@@36 $generated@@51 $generated@@52) $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@54 $generated@@23 $generated@@55 $generated@@34 $generated@@56) ($generated@@54 $generated@@23 $generated@@55 $generated@@24 $generated@@56))
 :pattern ( ($generated@@54 $generated@@23 $generated@@55 $generated@@34 $generated@@56))
 :pattern ( ($generated@@54 $generated@@23 $generated@@55 $generated@@24 $generated@@56))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@58 $generated@@65 $generated@@66 ($generated@@62 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@69) $generated@@67)
 :weight 0
)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ) (!  (or (= $generated@@74 $generated@@75) (= ($generated@@58 $generated@@70 $generated@@71 ($generated@@62 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@75) ($generated@@58 $generated@@70 $generated@@71 $generated@@73 $generated@@75)))
 :weight 0
))) (= ($generated@@4 $generated@@59) 5)) (= ($generated@@4 $generated@@60) 6)) (forall (($generated@@76 T@T) ($generated@@77 T@T) ) (= ($generated@@4 ($generated@@61 $generated@@76 $generated@@77)) 7))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ) (! (= ($generated@@63 ($generated@@61 $generated@@78 $generated@@79)) $generated@@78)
 :pattern ( ($generated@@61 $generated@@78 $generated@@79))
))) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (! (= ($generated@@64 ($generated@@61 $generated@@80 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@61 $generated@@80 $generated@@81))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@54 $generated@@23 $generated@@82 $generated@@24 $generated@@83)  (or (= $generated@@82 $generated@@25) ($generated@@9 ($generated@@57 $generated@@5 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@23 ($generated@@61 $generated@@59 $generated@@60) $generated@@83 $generated@@82) $generated@@0)))))
 :pattern ( ($generated@@54 $generated@@23 $generated@@82 $generated@@24 $generated@@83))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 Int) ) (!  (=> (or ($generated@@33 $generated@@84 $generated@@85 $generated@@86 $generated@@87) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@85 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@85 $generated@@34)) ($generated@@22 $generated@@31 $generated@@86 ($generated@@35 $generated@@84))) (<= ($generated@@32 0) $generated@@87)) (< $generated@@87 ($generated@@20 $generated@@86))))) (= ($generated@@29 $generated@@84 $generated@@85 $generated@@86 $generated@@87) ($generated@@36 ($generated@@37 $generated@@86 $generated@@87) ($generated@@38 $generated@@86 (+ $generated@@87 1)))))
 :pattern ( ($generated@@29 $generated@@84 $generated@@85 $generated@@86 $generated@@87))
))))
(assert (forall (($generated@@88 T@U) ($generated@@89 Int) ) (!  (=> (= $generated@@89 0) (= ($generated@@38 $generated@@88 $generated@@89) $generated@@88))
 :pattern ( ($generated@@38 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@90 Int) ) (! (= ($generated@@32 $generated@@90) $generated@@90)
 :pattern ( ($generated@@32 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@T) ) (! (= ($generated@@30 $generated@@92 $generated@@91) $generated@@91)
 :pattern ( ($generated@@30 $generated@@92 $generated@@91))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 Int) ($generated@@95 Int) ) (!  (=> (and (and (<= 0 $generated@@95) (< $generated@@95 $generated@@94)) (< $generated@@95 ($generated@@20 $generated@@93))) (= ($generated@@45 ($generated@@37 $generated@@93 $generated@@94) $generated@@95) ($generated@@45 $generated@@93 $generated@@95)))
 :weight 25
 :pattern ( ($generated@@45 ($generated@@37 $generated@@93 $generated@@94) $generated@@95))
 :pattern ( ($generated@@45 $generated@@93 $generated@@95) ($generated@@37 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 Int) ) (!  (=> (and (<= 0 $generated@@97) (<= $generated@@97 ($generated@@20 $generated@@96))) (= ($generated@@20 ($generated@@38 $generated@@96 $generated@@97)) (- ($generated@@20 $generated@@96) $generated@@97)))
 :pattern ( ($generated@@20 ($generated@@38 $generated@@96 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 ($generated@@57 $generated@@100 $generated@@99)) $generated@@99)
 :pattern ( ($generated@@57 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (! (= ($generated@@101 ($generated@@98 $generated@@105 $generated@@102) $generated@@103 $generated@@104) ($generated@@54 $generated@@105 $generated@@102 $generated@@103 $generated@@104))
 :pattern ( ($generated@@101 ($generated@@98 $generated@@105 $generated@@102) $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 Int) ($generated@@108 Int) ) (!  (=> (and (and (<= 0 $generated@@107) (<= 0 $generated@@108)) (< $generated@@108 (- ($generated@@20 $generated@@106) $generated@@107))) (= ($generated@@45 ($generated@@38 $generated@@106 $generated@@107) $generated@@108) ($generated@@45 $generated@@106 (+ $generated@@108 $generated@@107))))
 :weight 25
 :pattern ( ($generated@@45 ($generated@@38 $generated@@106 $generated@@107) $generated@@108))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@20 ($generated@@36 $generated@@109 $generated@@110)) (+ ($generated@@20 $generated@@109) ($generated@@20 $generated@@110)))
 :pattern ( ($generated@@20 ($generated@@36 $generated@@109 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@111 $generated@@112 $generated@@34) (and (= ($generated@@98 $generated@@23 ($generated@@57 $generated@@23 $generated@@112)) $generated@@112) ($generated@@22 $generated@@23 ($generated@@57 $generated@@23 $generated@@112) $generated@@34)))
 :pattern ( ($generated@@111 $generated@@112 $generated@@34))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@111 $generated@@113 $generated@@24) (and (= ($generated@@98 $generated@@23 ($generated@@57 $generated@@23 $generated@@113)) $generated@@113) ($generated@@22 $generated@@23 ($generated@@57 $generated@@23 $generated@@113) $generated@@24)))
 :pattern ( ($generated@@111 $generated@@113 $generated@@24))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@22 $generated@@23 $generated@@114 $generated@@34)  (and ($generated@@22 $generated@@23 $generated@@114 $generated@@24) (or (not (= $generated@@114 $generated@@25)) (not true))))
 :pattern ( ($generated@@22 $generated@@23 $generated@@114 $generated@@34))
 :pattern ( ($generated@@22 $generated@@23 $generated@@114 $generated@@24))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (or ($generated@@44 $generated@@115 ($generated@@30 $generated@@23 $generated@@116) ($generated@@30 $generated@@31 $generated@@117)) (and (< 0 $generated@@28) (and (and (or (not (= $generated@@116 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@116 $generated@@34)) ($generated@@22 $generated@@31 $generated@@117 ($generated@@35 $generated@@115))))) (= ($generated@@43 $generated@@115 ($generated@@30 $generated@@23 $generated@@116) ($generated@@30 $generated@@31 $generated@@117)) (forall (($generated@@118 Int) ($generated@@119 Int) ) (!  (=> (and (and (<= ($generated@@32 0) $generated@@118) (< $generated@@118 $generated@@119)) (< $generated@@119 ($generated@@20 ($generated@@30 $generated@@31 $generated@@117)))) (or (not (= ($generated@@45 ($generated@@30 $generated@@31 $generated@@117) $generated@@118) ($generated@@45 ($generated@@30 $generated@@31 $generated@@117) $generated@@119))) (not true)))
 :pattern ( ($generated@@45 $generated@@117 $generated@@119) ($generated@@45 $generated@@117 $generated@@118))
))))
 :weight 3
 :pattern ( ($generated@@43 $generated@@115 ($generated@@30 $generated@@23 $generated@@116) ($generated@@30 $generated@@31 $generated@@117)))
))))
(assert (forall (($generated@@120 T@U) ($generated@@121 Int) ) (!  (=> (and (<= 0 $generated@@121) (<= $generated@@121 ($generated@@20 $generated@@120))) (= ($generated@@20 ($generated@@37 $generated@@120 $generated@@121)) $generated@@121))
 :pattern ( ($generated@@20 ($generated@@37 $generated@@120 $generated@@121)))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (! (= ($generated@@111 ($generated@@98 $generated@@124 $generated@@122) $generated@@123) ($generated@@22 $generated@@124 $generated@@122 $generated@@123))
 :pattern ( ($generated@@111 ($generated@@98 $generated@@124 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ) (! (<= 0 ($generated@@20 $generated@@125))
 :pattern ( ($generated@@20 $generated@@125))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 Int) ) (!  (=> (and (or ($generated@@33 $generated@@128 $generated@@129 $generated@@130 $generated@@131) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@129 $generated@@25)) (not true)) ($generated@@54 $generated@@23 $generated@@129 $generated@@34 $generated@@127)) (and ($generated@@22 $generated@@31 $generated@@130 ($generated@@35 $generated@@128)) ($generated@@54 $generated@@31 $generated@@130 ($generated@@35 $generated@@128) $generated@@127))) (<= ($generated@@32 0) $generated@@131)) (< $generated@@131 ($generated@@20 $generated@@130))))) ($generated@@126 $generated@@127)) ($generated@@54 $generated@@31 ($generated@@29 $generated@@128 $generated@@129 $generated@@130 $generated@@131) ($generated@@35 $generated@@128) $generated@@127))
 :pattern ( ($generated@@54 $generated@@31 ($generated@@29 $generated@@128 $generated@@129 $generated@@130 $generated@@131) ($generated@@35 $generated@@128) $generated@@127))
))))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@54 $generated@@31 $generated@@132 ($generated@@35 $generated@@133) $generated@@134) (forall (($generated@@135 Int) ) (!  (=> (and (<= 0 $generated@@135) (< $generated@@135 ($generated@@20 $generated@@132))) ($generated@@101 ($generated@@45 $generated@@132 $generated@@135) $generated@@133 $generated@@134))
 :pattern ( ($generated@@45 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@54 $generated@@31 $generated@@132 ($generated@@35 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@35 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@35 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@35 $generated@@139)) $generated)
 :pattern ( ($generated@@35 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@57 $generated@@141 ($generated@@98 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@98 $generated@@141 $generated@@140))
)))
(assert  (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@142 $generated@@145 $generated@@146 $generated@@147 ($generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@142 $generated@@152 $generated@@153 $generated@@154 ($generated@@144 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@142 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@142 $generated@@161 $generated@@162 $generated@@163 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@142 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@9 ($generated@@142 $generated@@23 $generated@@59 $generated@@5 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@9 ($generated@@57 $generated@@5 ($generated@@58 $generated@@59 $generated@@60 ($generated@@58 $generated@@23 ($generated@@61 $generated@@59 $generated@@60) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@142 $generated@@23 $generated@@59 $generated@@5 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@111 $generated@@176 ($generated@@35 $generated@@177)) (and (= ($generated@@98 $generated@@31 ($generated@@57 $generated@@31 $generated@@176)) $generated@@176) ($generated@@22 $generated@@31 ($generated@@57 $generated@@31 $generated@@176) ($generated@@35 $generated@@177))))
 :pattern ( ($generated@@111 $generated@@176 ($generated@@35 $generated@@177)))
)))
(assert (= ($generated@@138 $generated@@34) $generated@@1))
(assert (= ($generated@@178 $generated@@34) $generated@@3))
(assert (= ($generated@@138 $generated@@24) $generated@@2))
(assert (= ($generated@@178 $generated@@24) $generated@@3))
(assert (forall (($generated@@179 T@U) ($generated@@180 Int) ($generated@@181 Int) ) (!  (=> (and (and (<= 0 $generated@@180) (<= $generated@@180 $generated@@181)) (< $generated@@181 ($generated@@20 $generated@@179))) (= ($generated@@45 ($generated@@38 $generated@@179 $generated@@180) (- $generated@@181 $generated@@180)) ($generated@@45 $generated@@179 $generated@@181)))
 :weight 25
 :pattern ( ($generated@@45 $generated@@179 $generated@@181) ($generated@@38 $generated@@179 $generated@@180))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (=> (or ($generated@@44 $generated@@182 $generated@@183 $generated@@184) (and (< 0 $generated@@28) (and (and (or (not (= $generated@@183 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@183 $generated@@34)) ($generated@@22 $generated@@31 $generated@@184 ($generated@@35 $generated@@182))))) (= ($generated@@43 $generated@@182 $generated@@183 $generated@@184) (forall (($generated@@185 Int) ($generated@@186 Int) ) (!  (=> (and (and (<= ($generated@@32 0) $generated@@185) (< $generated@@185 $generated@@186)) (< $generated@@186 ($generated@@20 $generated@@184))) (or (not (= ($generated@@45 $generated@@184 $generated@@185) ($generated@@45 $generated@@184 $generated@@186))) (not true)))
 :pattern ( ($generated@@45 $generated@@184 $generated@@186) ($generated@@45 $generated@@184 $generated@@185))
))))
 :pattern ( ($generated@@43 $generated@@182 $generated@@183 $generated@@184))
))))
(assert (forall (($generated@@187 T@U) ($generated@@188 Int) ($generated@@189 Int) ) (!  (=> (and (and (<= 0 $generated@@188) (<= 0 $generated@@189)) (<= (+ $generated@@188 $generated@@189) ($generated@@20 $generated@@187))) (= ($generated@@38 ($generated@@38 $generated@@187 $generated@@188) $generated@@189) ($generated@@38 $generated@@187 (+ $generated@@188 $generated@@189))))
 :pattern ( ($generated@@38 ($generated@@38 $generated@@187 $generated@@188) $generated@@189))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Int) ) (!  (and (=> (< $generated@@192 ($generated@@20 $generated@@190)) (= ($generated@@45 ($generated@@36 $generated@@190 $generated@@191) $generated@@192) ($generated@@45 $generated@@190 $generated@@192))) (=> (<= ($generated@@20 $generated@@190) $generated@@192) (= ($generated@@45 ($generated@@36 $generated@@190 $generated@@191) $generated@@192) ($generated@@45 $generated@@191 (- $generated@@192 ($generated@@20 $generated@@190))))))
 :pattern ( ($generated@@45 ($generated@@36 $generated@@190 $generated@@191) $generated@@192))
)))
(assert (forall (($generated@@193 Int) ) (! (= ($generated@@98 $generated@@6 ($generated@@10 ($generated@@32 $generated@@193))) ($generated@@30 $generated@@60 ($generated@@98 $generated@@6 ($generated@@10 $generated@@193))))
 :pattern ( ($generated@@98 $generated@@6 ($generated@@10 ($generated@@32 $generated@@193))))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@T) ) (! (= ($generated@@98 $generated@@195 ($generated@@30 $generated@@195 $generated@@194)) ($generated@@30 $generated@@60 ($generated@@98 $generated@@195 $generated@@194)))
 :pattern ( ($generated@@98 $generated@@195 ($generated@@30 $generated@@195 $generated@@194)))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Int) ) (!  (=> (or ($generated@@33 $generated@@196 $generated@@197 $generated@@198 $generated@@199) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@197 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@197 $generated@@34)) ($generated@@22 $generated@@31 $generated@@198 ($generated@@35 $generated@@196))) (<= ($generated@@32 0) $generated@@199)) (< $generated@@199 ($generated@@20 $generated@@198))))) ($generated@@22 $generated@@31 ($generated@@29 $generated@@196 $generated@@197 $generated@@198 $generated@@199) ($generated@@35 $generated@@196)))
 :pattern ( ($generated@@29 $generated@@196 $generated@@197 $generated@@198 $generated@@199))
))))
(assert (forall (($generated@@200 T@U) ) (!  (=> (= ($generated@@20 $generated@@200) 0) (= $generated@@200 $generated@@21))
 :pattern ( ($generated@@20 $generated@@200))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 Int) ) (!  (=> (= $generated@@202 0) (= ($generated@@37 $generated@@201 $generated@@202) $generated@@21))
 :pattern ( ($generated@@37 $generated@@201 $generated@@202))
)))
(assert  (=> (<= 0 $generated@@28) (forall (($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 Int) ) (!  (=> (or ($generated@@33 $generated@@203 ($generated@@30 $generated@@23 $generated@@204) ($generated@@30 $generated@@31 $generated@@205) ($generated@@32 $generated@@206)) (and (< 0 $generated@@28) (and (and (and (and (or (not (= $generated@@204 $generated@@25)) (not true)) ($generated@@22 $generated@@23 $generated@@204 $generated@@34)) ($generated@@22 $generated@@31 $generated@@205 ($generated@@35 $generated@@203))) (<= ($generated@@32 0) $generated@@206)) (< $generated@@206 ($generated@@20 ($generated@@30 $generated@@31 $generated@@205)))))) (= ($generated@@29 $generated@@203 ($generated@@30 $generated@@23 $generated@@204) ($generated@@30 $generated@@31 $generated@@205) ($generated@@32 $generated@@206)) ($generated@@36 ($generated@@37 ($generated@@30 $generated@@31 $generated@@205) ($generated@@32 $generated@@206)) ($generated@@38 ($generated@@30 $generated@@31 $generated@@205) ($generated@@32 (+ $generated@@206 1))))))
 :weight 3
 :pattern ( ($generated@@29 $generated@@203 ($generated@@30 $generated@@23 $generated@@204) ($generated@@30 $generated@@31 $generated@@205) ($generated@@32 $generated@@206)))
))))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@22 $generated@@31 $generated@@207 ($generated@@35 $generated@@208)) (forall (($generated@@209 Int) ) (!  (=> (and (<= 0 $generated@@209) (< $generated@@209 ($generated@@20 $generated@@207))) ($generated@@111 ($generated@@45 $generated@@207 $generated@@209) $generated@@208))
 :pattern ( ($generated@@45 $generated@@207 $generated@@209))
)))
 :pattern ( ($generated@@22 $generated@@31 $generated@@207 ($generated@@35 $generated@@208)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () Int)
(declare-fun $generated@@216 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@217  (=> (and (and (= $generated@@210 ($generated@@143 $generated@@25 $generated@@211 $generated@@0 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@44 $generated@@212 $generated@@213 ($generated@@29 $generated@@212 $generated@@213 $generated@@214 $generated@@215))) (or ($generated@@43 $generated@@212 $generated@@213 ($generated@@29 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) (forall (($generated@@218 Int) ($generated@@219 Int) ) (!  (=> (and (and (<= ($generated@@32 0) $generated@@218) (< $generated@@218 $generated@@219)) (< $generated@@219 ($generated@@20 ($generated@@29 $generated@@212 $generated@@213 $generated@@214 $generated@@215)))) (or (not (= ($generated@@45 ($generated@@29 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@218) ($generated@@45 ($generated@@29 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@219))) (not true)))
 :pattern ( ($generated@@45 ($generated@@29 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@219) ($generated@@45 ($generated@@29 $generated@@212 $generated@@213 $generated@@214 $generated@@215) $generated@@218))
))))))
(let (($generated@@220  (=> (and (and ($generated@@126 $generated@@211) ($generated@@216 $generated@@211)) (and (or (not (= $generated@@213 $generated@@25)) (not true)) (and ($generated@@22 $generated@@23 $generated@@213 $generated@@34) ($generated@@54 $generated@@23 $generated@@213 $generated@@34 $generated@@211)))) (=> (and (and (and (and ($generated@@22 $generated@@31 $generated@@214 ($generated@@35 $generated@@212)) ($generated@@54 $generated@@31 $generated@@214 ($generated@@35 $generated@@212) $generated@@211)) (<= ($generated@@32 0) $generated@@215)) (and (= 1 $generated@@28) (< $generated@@215 ($generated@@20 $generated@@214)))) (and (and ($generated@@44 $generated@@212 $generated@@213 $generated@@214) (and ($generated@@43 $generated@@212 $generated@@213 $generated@@214) (forall (($generated@@221 Int) ($generated@@222 Int) ) (!  (=> (and (and (<= ($generated@@32 0) $generated@@221) (< $generated@@221 $generated@@222)) (< $generated@@222 ($generated@@20 $generated@@214))) (or (not (= ($generated@@45 $generated@@214 $generated@@221) ($generated@@45 $generated@@214 $generated@@222))) (not true)))
 :pattern ( ($generated@@45 $generated@@214 $generated@@222) ($generated@@45 $generated@@214 $generated@@221))
)))) (= (ControlFlow 0 3) 2))) $generated@@217))))
$generated@@220)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
