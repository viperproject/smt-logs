(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 (T@T) Int)
(declare-fun $generated@@2 () T@T)
(declare-fun $generated@@3 () T@T)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 (Bool) T@U)
(declare-fun $generated@@6 (T@U) Bool)
(declare-fun $generated@@7 (Int) T@U)
(declare-fun $generated@@8 (T@U) Int)
(declare-fun $generated@@9 (Real) T@U)
(declare-fun $generated@@10 (T@U) Real)
(declare-fun $generated@@17 () Int)
(declare-fun $generated@@18 (T@U T@U T@U T@U Int) Bool)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@21 (T@T T@U T@U) Bool)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (Int) Int)
(declare-fun $generated@@25 (T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U Int) T@U)
(declare-fun $generated@@28 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U) Int)
(declare-fun $generated@@38 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) Int)
(declare-fun $generated@@53 (T@U T@U T@U) Bool)
(declare-fun $generated@@54 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@69 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) T@U)
(declare-fun $generated@@80 (T@U) T@U)
(declare-fun $generated@@84 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@85 () T@T)
(declare-fun $generated@@86 () T@T)
(declare-fun $generated@@87 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@88 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@89 () T@T)
(declare-fun $generated@@90 (T@T T@T) T@T)
(declare-fun $generated@@91 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@92 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@93 (T@T) T@T)
(declare-fun $generated@@94 (T@T) T@T)
(declare-fun $generated@@156 (T@U T@U Int) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@1 $generated@@2) 0) (= ($generated@@1 $generated@@3) 1)) (= ($generated@@1 $generated@@4) 2)) (forall (($generated@@11 Bool) ) (! (= ($generated@@6 ($generated@@5 $generated@@11)) $generated@@11)
 :pattern ( ($generated@@5 $generated@@11))
))) (forall (($generated@@12 T@U) ) (! (= ($generated@@5 ($generated@@6 $generated@@12)) $generated@@12)
 :pattern ( ($generated@@6 $generated@@12))
))) (forall (($generated@@13 Int) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Real) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))))
(assert (distinct $generated $generated@@0)
)
(assert (= ($generated@@1 $generated@@22) 3))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 Int) ) (!  (=> (or ($generated@@20 $generated@@29 $generated@@31 $generated@@32 $generated@@33) (and (< 0 $generated@@17) (and (and ($generated@@21 $generated@@22 $generated@@31 ($generated@@23 $generated@@29)) ($generated@@21 $generated@@22 $generated@@32 ($generated@@23 $generated@@29))) (<= ($generated@@24 0) $generated@@33)))) (and (=> (not ($generated@@25 $generated@@31 $generated@@26)) (and (=> (and (not ($generated@@25 $generated@@32 $generated@@26)) (= ($generated@@27 $generated@@31 ($generated@@24 0)) ($generated@@27 $generated@@32 ($generated@@24 0)))) ($generated@@20 $generated@@29 ($generated@@28 $generated@@31 ($generated@@24 1)) ($generated@@28 $generated@@32 ($generated@@24 1)) $generated@@33)) (=> (not (and (not ($generated@@25 $generated@@32 $generated@@26)) (= ($generated@@27 $generated@@31 ($generated@@24 0)) ($generated@@27 $generated@@32 ($generated@@24 0))))) (=> (> $generated@@33 0) ($generated@@20 $generated@@29 ($generated@@28 $generated@@31 ($generated@@24 1)) $generated@@32 (- $generated@@33 1)))))) (= ($generated@@18 $generated@@29 ($generated@@19 $generated@@30) $generated@@31 $generated@@32 $generated@@33) (ite ($generated@@25 $generated@@31 $generated@@26) true (ite  (and (not ($generated@@25 $generated@@32 $generated@@26)) (= ($generated@@27 $generated@@31 ($generated@@24 0)) ($generated@@27 $generated@@32 ($generated@@24 0)))) ($generated@@18 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@24 1)) ($generated@@28 $generated@@32 ($generated@@24 1)) $generated@@33)  (and (> $generated@@33 0) ($generated@@18 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@24 1)) $generated@@32 (- $generated@@33 1))))))))
 :pattern ( ($generated@@18 $generated@@29 ($generated@@19 $generated@@30) $generated@@31 $generated@@32 $generated@@33))
))))
(assert (= ($generated@@34 $generated@@26) 0))
(assert (forall (($generated@@35 T@U) ($generated@@36 Int) ) (!  (=> (= $generated@@36 0) (= ($generated@@28 $generated@@35 $generated@@36) $generated@@35))
 :pattern ( ($generated@@28 $generated@@35 $generated@@36))
)))
(assert (forall (($generated@@37 Int) ) (! (= ($generated@@24 $generated@@37) $generated@@37)
 :pattern ( ($generated@@24 $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@T) ) (! (= ($generated@@38 $generated@@40 $generated@@39) $generated@@39)
 :pattern ( ($generated@@38 $generated@@40 $generated@@39))
)))
(assert (forall (($generated@@41 T@U) ($generated@@42 Int) ) (!  (=> (and (<= 0 $generated@@42) (<= $generated@@42 ($generated@@34 $generated@@41))) (= ($generated@@34 ($generated@@28 $generated@@41 $generated@@42)) (- ($generated@@34 $generated@@41) $generated@@42)))
 :pattern ( ($generated@@34 ($generated@@28 $generated@@41 $generated@@42)))
)))
(assert (forall (($generated@@43 T@U) ($generated@@44 T@U) ) (! (= ($generated@@25 $generated@@43 $generated@@44)  (and (= ($generated@@34 $generated@@43) ($generated@@34 $generated@@44)) (forall (($generated@@45 Int) ) (!  (=> (and (<= 0 $generated@@45) (< $generated@@45 ($generated@@34 $generated@@43))) (= ($generated@@27 $generated@@43 $generated@@45) ($generated@@27 $generated@@44 $generated@@45)))
 :pattern ( ($generated@@27 $generated@@43 $generated@@45))
 :pattern ( ($generated@@27 $generated@@44 $generated@@45))
))))
 :pattern ( ($generated@@25 $generated@@43 $generated@@44))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@T) ) (! (= ($generated@@47 $generated@@49 ($generated@@46 $generated@@49 $generated@@48)) $generated@@48)
 :pattern ( ($generated@@46 $generated@@49 $generated@@48))
)))
(assert (forall (($generated@@51 T@U) ($generated@@52 Int) ) (!  (=> (and (< 0 $generated@@52) (<= $generated@@52 ($generated@@34 $generated@@51))) (< ($generated@@50 ($generated@@28 $generated@@51 $generated@@52)) ($generated@@50 $generated@@51)))
 :pattern ( ($generated@@50 ($generated@@28 $generated@@51 $generated@@52)))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@T) ) (! (= ($generated@@53 ($generated@@47 $generated@@58 $generated@@55) $generated@@56 $generated@@57) ($generated@@54 $generated@@58 $generated@@55 $generated@@56 $generated@@57))
 :pattern ( ($generated@@53 ($generated@@47 $generated@@58 $generated@@55) $generated@@56 $generated@@57))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 Int) ($generated@@61 Int) ) (!  (=> (and (and (<= 0 $generated@@60) (<= 0 $generated@@61)) (< $generated@@61 (- ($generated@@34 $generated@@59) $generated@@60))) (= ($generated@@27 ($generated@@28 $generated@@59 $generated@@60) $generated@@61) ($generated@@27 $generated@@59 (+ $generated@@61 $generated@@60))))
 :weight 25
 :pattern ( ($generated@@27 ($generated@@28 $generated@@59 $generated@@60) $generated@@61))
)))
(assert  (=> (<= 0 $generated@@17) (forall (($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 Int) ) (!  (=> (or ($generated@@20 $generated@@62 ($generated@@38 $generated@@22 $generated@@64) ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 $generated@@66)) (and (< 0 $generated@@17) (and (and ($generated@@21 $generated@@22 $generated@@64 ($generated@@23 $generated@@62)) ($generated@@21 $generated@@22 $generated@@65 ($generated@@23 $generated@@62))) (<= ($generated@@24 0) $generated@@66)))) (and (=> (not ($generated@@25 $generated@@64 $generated@@26)) (and (=> (and (not ($generated@@25 $generated@@65 $generated@@26)) (= ($generated@@27 ($generated@@38 $generated@@22 $generated@@64) ($generated@@24 0)) ($generated@@27 ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 0)))) ($generated@@20 $generated@@62 ($generated@@38 $generated@@22 ($generated@@28 ($generated@@38 $generated@@22 $generated@@64) ($generated@@24 1))) ($generated@@38 $generated@@22 ($generated@@28 ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 1))) ($generated@@24 $generated@@66))) (=> (not (and (not ($generated@@25 $generated@@65 $generated@@26)) (= ($generated@@27 ($generated@@38 $generated@@22 $generated@@64) ($generated@@24 0)) ($generated@@27 ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 0))))) (=> ($generated@@6 ($generated@@38 $generated@@2 ($generated@@5 (> $generated@@66 0)))) ($generated@@20 $generated@@62 ($generated@@38 $generated@@22 ($generated@@28 ($generated@@38 $generated@@22 $generated@@64) ($generated@@24 1))) ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 (- $generated@@66 1))))))) (= ($generated@@18 $generated@@62 ($generated@@19 $generated@@63) ($generated@@38 $generated@@22 $generated@@64) ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 $generated@@66)) (ite ($generated@@25 $generated@@64 $generated@@26) true (ite  (and (not ($generated@@25 $generated@@65 $generated@@26)) (= ($generated@@27 ($generated@@38 $generated@@22 $generated@@64) ($generated@@24 0)) ($generated@@27 ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 0)))) ($generated@@18 $generated@@62 ($generated@@19 $generated@@63) ($generated@@38 $generated@@22 ($generated@@28 ($generated@@38 $generated@@22 $generated@@64) ($generated@@24 1))) ($generated@@38 $generated@@22 ($generated@@28 ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 1))) ($generated@@24 $generated@@66))  (and (> $generated@@66 0) ($generated@@18 $generated@@62 ($generated@@19 $generated@@63) ($generated@@38 $generated@@22 ($generated@@28 ($generated@@38 $generated@@22 $generated@@64) ($generated@@24 1))) ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 (- $generated@@66 1)))))))))
 :weight 3
 :pattern ( ($generated@@18 $generated@@62 ($generated@@19 $generated@@63) ($generated@@38 $generated@@22 $generated@@64) ($generated@@38 $generated@@22 $generated@@65) ($generated@@24 $generated@@66)))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@25 $generated@@67 $generated@@68) (= $generated@@67 $generated@@68))
 :pattern ( ($generated@@25 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@T) ) (! (= ($generated@@69 ($generated@@47 $generated@@72 $generated@@70) $generated@@71) ($generated@@21 $generated@@72 $generated@@70 $generated@@71))
 :pattern ( ($generated@@69 ($generated@@47 $generated@@72 $generated@@70) $generated@@71))
)))
(assert (forall (($generated@@73 T@U) ) (! (<= 0 ($generated@@34 $generated@@73))
 :pattern ( ($generated@@34 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@54 $generated@@22 $generated@@74 ($generated@@23 $generated@@75) $generated@@76) (forall (($generated@@77 Int) ) (!  (=> (and (<= 0 $generated@@77) (< $generated@@77 ($generated@@34 $generated@@74))) ($generated@@53 ($generated@@27 $generated@@74 $generated@@77) $generated@@75 $generated@@76))
 :pattern ( ($generated@@27 $generated@@74 $generated@@77))
)))
 :pattern ( ($generated@@54 $generated@@22 $generated@@74 ($generated@@23 $generated@@75) $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (! (= ($generated@@78 ($generated@@23 $generated@@79)) $generated@@79)
 :pattern ( ($generated@@23 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ) (! (= ($generated@@80 ($generated@@23 $generated@@81)) $generated)
 :pattern ( ($generated@@23 $generated@@81))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@46 $generated@@83 ($generated@@47 $generated@@83 $generated@@82)) $generated@@82)
 :pattern ( ($generated@@47 $generated@@83 $generated@@82))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@95 T@T) ($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@84 $generated@@95 $generated@@96 $generated@@97 ($generated@@91 $generated@@95 $generated@@96 $generated@@97 $generated@@99 $generated@@100 $generated@@101 $generated@@98) $generated@@100 $generated@@101) $generated@@98)
 :weight 0
)) (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@107 $generated@@109) (= ($generated@@84 $generated@@102 $generated@@103 $generated@@104 ($generated@@91 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@109 $generated@@110) ($generated@@84 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@109 $generated@@110)))
 :weight 0
)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@117 $generated@@119) (= ($generated@@84 $generated@@111 $generated@@112 $generated@@113 ($generated@@91 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@84 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)))) (= ($generated@@1 $generated@@85) 4)) (= ($generated@@1 $generated@@86) 5)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@88 $generated@@120 $generated@@121 ($generated@@92 $generated@@120 $generated@@121 $generated@@123 $generated@@124 $generated@@122) $generated@@124) $generated@@122)
 :weight 0
))) (forall (($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ) (!  (or (= $generated@@129 $generated@@130) (= ($generated@@88 $generated@@125 $generated@@126 ($generated@@92 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@127) $generated@@130) ($generated@@88 $generated@@125 $generated@@126 $generated@@128 $generated@@130)))
 :weight 0
))) (= ($generated@@1 $generated@@89) 6)) (forall (($generated@@131 T@T) ($generated@@132 T@T) ) (= ($generated@@1 ($generated@@90 $generated@@131 $generated@@132)) 7))) (forall (($generated@@133 T@T) ($generated@@134 T@T) ) (! (= ($generated@@93 ($generated@@90 $generated@@133 $generated@@134)) $generated@@133)
 :pattern ( ($generated@@90 $generated@@133 $generated@@134))
))) (forall (($generated@@135 T@T) ($generated@@136 T@T) ) (! (= ($generated@@94 ($generated@@90 $generated@@135 $generated@@136)) $generated@@136)
 :pattern ( ($generated@@90 $generated@@135 $generated@@136))
))))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 Bool) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@6 ($generated@@84 $generated@@85 $generated@@86 $generated@@2 ($generated@@87 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@137)) (not true)) ($generated@@6 ($generated@@46 $generated@@2 ($generated@@88 $generated@@86 $generated@@89 ($generated@@88 $generated@@85 ($generated@@90 $generated@@86 $generated@@89) $generated@@138 $generated@@141) $generated@@139)))) $generated@@140))
 :pattern ( ($generated@@84 $generated@@85 $generated@@86 $generated@@2 ($generated@@87 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> ($generated@@69 $generated@@143 ($generated@@23 $generated@@144)) (and (= ($generated@@47 $generated@@22 ($generated@@46 $generated@@22 $generated@@143)) $generated@@143) ($generated@@21 $generated@@22 ($generated@@46 $generated@@22 $generated@@143) ($generated@@23 $generated@@144))))
 :pattern ( ($generated@@69 $generated@@143 ($generated@@23 $generated@@144)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 Int) ) (! (= ($generated@@18 $generated@@145 ($generated@@19 $generated@@146) $generated@@147 $generated@@148 $generated@@149) ($generated@@18 $generated@@145 $generated@@146 $generated@@147 $generated@@148 $generated@@149))
 :pattern ( ($generated@@18 $generated@@145 ($generated@@19 $generated@@146) $generated@@147 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 Int) ($generated@@152 Int) ) (!  (=> (and (and (<= 0 $generated@@151) (<= $generated@@151 $generated@@152)) (< $generated@@152 ($generated@@34 $generated@@150))) (= ($generated@@27 ($generated@@28 $generated@@150 $generated@@151) (- $generated@@152 $generated@@151)) ($generated@@27 $generated@@150 $generated@@152)))
 :weight 25
 :pattern ( ($generated@@27 $generated@@150 $generated@@152) ($generated@@28 $generated@@150 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 Int) ($generated@@155 Int) ) (!  (=> (and (and (<= 0 $generated@@154) (<= 0 $generated@@155)) (<= (+ $generated@@154 $generated@@155) ($generated@@34 $generated@@153))) (= ($generated@@28 ($generated@@28 $generated@@153 $generated@@154) $generated@@155) ($generated@@28 $generated@@153 (+ $generated@@154 $generated@@155))))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@153 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 Int) ) (! (= ($generated@@156 $generated@@157 $generated@@158 $generated@@159) (forall (($generated@@160 Int) ) (!  (=> (and (<= 0 $generated@@160) (< $generated@@160 $generated@@159)) (= ($generated@@27 $generated@@157 $generated@@160) ($generated@@27 $generated@@158 $generated@@160)))
 :pattern ( ($generated@@27 $generated@@157 $generated@@160))
 :pattern ( ($generated@@27 $generated@@158 $generated@@160))
)))
 :pattern ( ($generated@@156 $generated@@157 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 Int) ) (! (= ($generated@@47 $generated@@3 ($generated@@7 ($generated@@24 $generated@@161))) ($generated@@38 $generated@@89 ($generated@@47 $generated@@3 ($generated@@7 $generated@@161))))
 :pattern ( ($generated@@47 $generated@@3 ($generated@@7 ($generated@@24 $generated@@161))))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@T) ) (! (= ($generated@@47 $generated@@163 ($generated@@38 $generated@@163 $generated@@162)) ($generated@@38 $generated@@89 ($generated@@47 $generated@@163 $generated@@162)))
 :pattern ( ($generated@@47 $generated@@163 ($generated@@38 $generated@@163 $generated@@162)))
)))
(assert (forall (($generated@@164 T@U) ) (!  (=> (= ($generated@@34 $generated@@164) 0) (= $generated@@164 $generated@@26))
 :pattern ( ($generated@@34 $generated@@164))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@21 $generated@@22 $generated@@165 ($generated@@23 $generated@@166)) (forall (($generated@@167 Int) ) (!  (=> (and (<= 0 $generated@@167) (< $generated@@167 ($generated@@34 $generated@@165))) ($generated@@69 ($generated@@27 $generated@@165 $generated@@167) $generated@@166))
 :pattern ( ($generated@@27 $generated@@165 $generated@@167))
)))
 :pattern ( ($generated@@21 $generated@@22 $generated@@165 ($generated@@23 $generated@@166)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 () T@U)
(declare-fun $generated@@170 () T@U)
(declare-fun $generated@@171 (T@U) Bool)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 (T@U) Bool)
(declare-fun $generated@@174 () T@U)
(declare-fun $generated@@175 () T@U)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@178  (=> (= $generated@@168 ($generated@@87 $generated@@169 $generated@@170 $generated@@0 false)) (=> (and (and ($generated@@171 $generated@@172) ($generated@@173 $generated@@172)) (and (= $generated@@170 $generated@@172) (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (and (and (and ($generated@@21 $generated@@22 $generated@@179 ($generated@@23 $generated@@174)) ($generated@@21 $generated@@22 $generated@@180 ($generated@@23 $generated@@174))) (and (<= ($generated@@34 $generated@@179) ($generated@@34 $generated@@180)) ($generated@@156 $generated@@179 $generated@@180 ($generated@@34 $generated@@179)))) (or (< ($generated@@50 $generated@@179) ($generated@@50 $generated@@176)) (and (= ($generated@@50 $generated@@179) ($generated@@50 $generated@@176)) (< ($generated@@50 $generated@@180) ($generated@@50 $generated@@177))))) ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@179 $generated@@180 ($generated@@24 1)))
 :pattern ( ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@179 $generated@@180 ($generated@@24 1)))
)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (=> ($generated@@20 $generated@@174 $generated@@176 $generated@@177 ($generated@@24 1)) (or ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@176 $generated@@177 ($generated@@24 1)) (=> ($generated@@25 $generated@@176 $generated@@26) ($generated@@6 ($generated@@38 $generated@@2 ($generated@@5 true))))))) (=> (=> ($generated@@20 $generated@@174 $generated@@176 $generated@@177 ($generated@@24 1)) (or ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@176 $generated@@177 ($generated@@24 1)) (=> ($generated@@25 $generated@@176 $generated@@26) ($generated@@6 ($generated@@38 $generated@@2 ($generated@@5 true)))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (=> ($generated@@20 $generated@@174 $generated@@176 $generated@@177 ($generated@@24 1)) (or ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@176 $generated@@177 ($generated@@24 1)) (=> (not ($generated@@25 $generated@@176 $generated@@26)) (=> (and (not ($generated@@25 $generated@@177 $generated@@26)) (= ($generated@@27 $generated@@176 ($generated@@24 0)) ($generated@@27 $generated@@177 ($generated@@24 0)))) ($generated@@18 $generated@@174 ($generated@@19 ($generated@@19 $generated@@175)) ($generated@@28 $generated@@176 ($generated@@24 1)) ($generated@@28 $generated@@177 ($generated@@24 1)) ($generated@@24 1))))))) (=> (=> ($generated@@20 $generated@@174 $generated@@176 $generated@@177 ($generated@@24 1)) (or ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@176 $generated@@177 ($generated@@24 1)) (=> (not ($generated@@25 $generated@@176 $generated@@26)) (=> (and (not ($generated@@25 $generated@@177 $generated@@26)) (= ($generated@@27 $generated@@176 ($generated@@24 0)) ($generated@@27 $generated@@177 ($generated@@24 0)))) ($generated@@18 $generated@@174 ($generated@@19 ($generated@@19 $generated@@175)) ($generated@@28 $generated@@176 ($generated@@24 1)) ($generated@@28 $generated@@177 ($generated@@24 1)) ($generated@@24 1)))))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@20 $generated@@174 $generated@@176 $generated@@177 ($generated@@24 1)) (or ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@176 $generated@@177 ($generated@@24 1)) (=> (not ($generated@@25 $generated@@176 $generated@@26)) (=> (not (and (not ($generated@@25 $generated@@177 $generated@@26)) (= ($generated@@27 $generated@@176 ($generated@@24 0)) ($generated@@27 $generated@@177 ($generated@@24 0))))) ($generated@@6 ($generated@@38 $generated@@2 ($generated@@5 (> 1 0))))))))) (=> (=> ($generated@@20 $generated@@174 $generated@@176 $generated@@177 ($generated@@24 1)) (or ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@176 $generated@@177 ($generated@@24 1)) (=> (not ($generated@@25 $generated@@176 $generated@@26)) (=> (not (and (not ($generated@@25 $generated@@177 $generated@@26)) (= ($generated@@27 $generated@@176 ($generated@@24 0)) ($generated@@27 $generated@@177 ($generated@@24 0))))) ($generated@@6 ($generated@@38 $generated@@2 ($generated@@5 (> 1 0)))))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@20 $generated@@174 $generated@@176 $generated@@177 ($generated@@24 1)) (or ($generated@@18 $generated@@174 ($generated@@19 $generated@@175) $generated@@176 $generated@@177 ($generated@@24 1)) (=> (not ($generated@@25 $generated@@176 $generated@@26)) (=> (not (and (not ($generated@@25 $generated@@177 $generated@@26)) (= ($generated@@27 $generated@@176 ($generated@@24 0)) ($generated@@27 $generated@@177 ($generated@@24 0))))) ($generated@@18 $generated@@174 ($generated@@19 ($generated@@19 $generated@@175)) ($generated@@28 $generated@@176 ($generated@@24 1)) $generated@@177 ($generated@@24 (- 1 1))))))))))))))))))
(let (($generated@@181  (=> (and (and ($generated@@171 $generated@@170) ($generated@@173 $generated@@170)) (and ($generated@@21 $generated@@22 $generated@@176 ($generated@@23 $generated@@174)) ($generated@@54 $generated@@22 $generated@@176 ($generated@@23 $generated@@174) $generated@@170))) (=> (and (and (and ($generated@@21 $generated@@22 $generated@@177 ($generated@@23 $generated@@174)) ($generated@@54 $generated@@22 $generated@@177 ($generated@@23 $generated@@174) $generated@@170)) (= 1 $generated@@17)) (and (and (<= ($generated@@34 $generated@@176) ($generated@@34 $generated@@177)) ($generated@@156 $generated@@176 $generated@@177 ($generated@@34 $generated@@176))) (= (ControlFlow 0 6) 2))) $generated@@178))))
$generated@@181)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
