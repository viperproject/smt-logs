(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@T)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@T T@T) T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) Bool)
(declare-fun $generated@@39 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@40 (T@T) T@T)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@69 (T@U T@U) T@U)
(declare-fun $generated@@70 (T@U) Bool)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@72 (T@U T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@77 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@T T@U T@U) Bool)
(declare-fun $generated@@81 () T@T)
(declare-fun $generated@@82 (T@U) T@U)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) T@U)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@152 (T@U) T@U)
(declare-fun $generated@@166 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@167 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@0) 0))
(assert (= ($generated@@27 $generated@@0) $generated@@1))
(assert  (and (and (and (and (and (and (and (forall (($generated@@42 T@T) ($generated@@43 T@T) ($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@28 $generated@@42 $generated@@43 ($generated@@39 $generated@@42 $generated@@43 $generated@@45 $generated@@46 $generated@@44) $generated@@46) $generated@@44)
 :weight 0
)) (forall (($generated@@47 T@T) ($generated@@48 T@T) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ) (!  (or (= $generated@@51 $generated@@52) (= ($generated@@28 $generated@@47 $generated@@48 ($generated@@39 $generated@@47 $generated@@48 $generated@@50 $generated@@51 $generated@@49) $generated@@52) ($generated@@28 $generated@@47 $generated@@48 $generated@@50 $generated@@52)))
 :weight 0
))) (= ($generated@@10 $generated@@29) 3)) (= ($generated@@10 $generated@@30) 4)) (= ($generated@@10 $generated@@31) 5)) (forall (($generated@@53 T@T) ($generated@@54 T@T) ) (= ($generated@@10 ($generated@@32 $generated@@53 $generated@@54)) 6))) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (! (= ($generated@@40 ($generated@@32 $generated@@55 $generated@@56)) $generated@@55)
 :pattern ( ($generated@@32 $generated@@55 $generated@@56))
))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@41 ($generated@@32 $generated@@57 $generated@@58)) $generated@@58)
 :pattern ( ($generated@@32 $generated@@57 $generated@@58))
))))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@35 $generated@@61) (and (or (not (= $generated@@62 $generated@@36)) (not true)) (= ($generated@@37 $generated@@62) ($generated@@34 $generated@@59 $generated@@60)))) ($generated@@38 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@61 $generated@@62) $generated@@33) $generated@@59))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@61 $generated@@62) $generated@@33) ($generated@@34 $generated@@59 $generated@@60))
)))
(assert (forall (($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ($generated@@67 T@U) ) (!  (=> (and ($generated@@35 $generated@@66) (and (or (not (= $generated@@67 $generated@@36)) (not true)) (= ($generated@@37 $generated@@67) ($generated@@34 $generated@@64 $generated@@65)))) ($generated@@38 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@66 $generated@@67) $generated@@63) $generated@@65))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@66 $generated@@67) $generated@@63) ($generated@@34 $generated@@64 $generated@@65))
)))
(assert (= ($generated@@26 $generated@@68) 0))
(assert (= ($generated@@69 $generated@@4 $generated@@6) $generated@@68))
(assert ($generated@@70 $generated@@68))
(assert (= ($generated@@26 $generated@@33) 0))
(assert (= ($generated@@69 $generated@@4 $generated@@7) $generated@@33))
(assert  (not ($generated@@70 $generated@@33)))
(assert (= ($generated@@26 $generated@@63) 0))
(assert (= ($generated@@69 $generated@@4 $generated@@8) $generated@@63))
(assert  (not ($generated@@70 $generated@@63)))
(assert (= ($generated@@26 $generated@@71) 0))
(assert (= ($generated@@69 $generated@@4 $generated@@9) $generated@@71))
(assert  (not ($generated@@70 $generated@@71)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (!  (=> ($generated@@72 $generated@@74 $generated@@75) (forall (($generated@@76 T@U) ) (!  (=> ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@74 $generated@@76) $generated@@0))) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@75 $generated@@76) $generated@@0))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@75 $generated@@76) $generated@@0))
)))
 :pattern ( ($generated@@72 $generated@@74 $generated@@75))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@T) ) (! (= ($generated@@77 $generated@@79 ($generated@@73 $generated@@79 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@73 $generated@@79 $generated@@78))
)))
(assert (= ($generated@@10 $generated@@81) 7))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@80 $generated@@81 $generated@@84 ($generated@@82 $generated@@85)) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@83 $generated@@84 $generated@@86) ($generated@@38 $generated@@86 $generated@@85))
 :pattern ( ($generated@@83 $generated@@84 $generated@@86))
)))
 :pattern ( ($generated@@80 $generated@@81 $generated@@84 ($generated@@82 $generated@@85)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@80 $generated@@31 $generated@@90 ($generated@@87 $generated@@88 $generated@@89))  (and ($generated@@80 $generated@@31 $generated@@90 ($generated@@34 $generated@@88 $generated@@89)) (or (not (= $generated@@90 $generated@@36)) (not true))))
 :pattern ( ($generated@@80 $generated@@31 $generated@@90 ($generated@@87 $generated@@88 $generated@@89)))
 :pattern ( ($generated@@80 $generated@@31 $generated@@90 ($generated@@34 $generated@@88 $generated@@89)))
)))
(assert ($generated@@70 $generated@@0))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@T) ) (! (= ($generated@@91 ($generated@@77 $generated@@96 $generated@@93) $generated@@94 $generated@@95) ($generated@@92 $generated@@96 $generated@@93 $generated@@94 $generated@@95))
 :pattern ( ($generated@@91 ($generated@@77 $generated@@96 $generated@@93) $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@72 $generated@@97 $generated@@98) (=> ($generated@@91 $generated@@99 $generated@@100 $generated@@97) ($generated@@91 $generated@@99 $generated@@100 $generated@@98)))
 :pattern ( ($generated@@72 $generated@@97 $generated@@98) ($generated@@91 $generated@@99 $generated@@100 $generated@@97))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@T) ) (!  (=> ($generated@@72 $generated@@101 $generated@@102) (=> ($generated@@92 $generated@@105 $generated@@103 $generated@@104 $generated@@101) ($generated@@92 $generated@@105 $generated@@103 $generated@@104 $generated@@102)))
 :pattern ( ($generated@@72 $generated@@101 $generated@@102) ($generated@@92 $generated@@105 $generated@@103 $generated@@104 $generated@@101))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@80 $generated@@31 $generated@@108 ($generated@@34 $generated@@106 $generated@@107))  (or (= $generated@@108 $generated@@36) (= ($generated@@37 $generated@@108) ($generated@@34 $generated@@106 $generated@@107))))
 :pattern ( ($generated@@80 $generated@@31 $generated@@108 ($generated@@34 $generated@@106 $generated@@107)))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@111) (and (or (not (= $generated@@112 $generated@@36)) (not true)) (= ($generated@@37 $generated@@112) ($generated@@34 $generated@@109 $generated@@110)))) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@111 $generated@@112) $generated@@0)))) ($generated@@91 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@111 $generated@@112) $generated@@33) $generated@@109 $generated@@111))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@111 $generated@@112) $generated@@33) ($generated@@34 $generated@@109 $generated@@110))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@115) (and (or (not (= $generated@@116 $generated@@36)) (not true)) (= ($generated@@37 $generated@@116) ($generated@@34 $generated@@113 $generated@@114)))) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@115 $generated@@116) $generated@@0)))) ($generated@@91 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@115 $generated@@116) $generated@@63) $generated@@114 $generated@@115))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@115 $generated@@116) $generated@@63) ($generated@@34 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@92 $generated@@31 $generated@@119 ($generated@@87 $generated@@117 $generated@@118) $generated@@120) ($generated@@92 $generated@@31 $generated@@119 ($generated@@34 $generated@@117 $generated@@118) $generated@@120))
 :pattern ( ($generated@@92 $generated@@31 $generated@@119 ($generated@@87 $generated@@117 $generated@@118) $generated@@120))
 :pattern ( ($generated@@92 $generated@@31 $generated@@119 ($generated@@34 $generated@@117 $generated@@118) $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ) (! (= ($generated@@92 $generated@@31 $generated@@123 ($generated@@34 $generated@@121 $generated@@122) $generated@@124)  (or (= $generated@@123 $generated@@36) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@124 $generated@@123) $generated@@0)))))
 :pattern ( ($generated@@92 $generated@@31 $generated@@123 ($generated@@34 $generated@@121 $generated@@122) $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (or (not (= $generated@@125 $generated@@127)) (not true)) (=> (and ($generated@@72 $generated@@125 $generated@@126) ($generated@@72 $generated@@126 $generated@@127)) ($generated@@72 $generated@@125 $generated@@127)))
 :pattern ( ($generated@@72 $generated@@125 $generated@@126) ($generated@@72 $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (and (= ($generated@@128 ($generated@@69 $generated@@129 $generated@@130)) $generated@@129) (= ($generated@@27 ($generated@@69 $generated@@129 $generated@@130)) $generated@@130))
 :pattern ( ($generated@@69 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@38 ($generated@@77 $generated@@133 $generated@@131) $generated@@132) ($generated@@80 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@38 ($generated@@77 $generated@@133 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@92 $generated@@81 $generated@@134 ($generated@@82 $generated@@135) $generated@@136) (forall (($generated@@137 T@U) ) (!  (=> ($generated@@83 $generated@@134 $generated@@137) ($generated@@91 $generated@@137 $generated@@135 $generated@@136))
 :pattern ( ($generated@@83 $generated@@134 $generated@@137))
)))
 :pattern ( ($generated@@92 $generated@@81 $generated@@134 ($generated@@82 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@138 ($generated@@34 $generated@@139 $generated@@140)) $generated@@139)
 :pattern ( ($generated@@34 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@141 ($generated@@34 $generated@@142 $generated@@143)) $generated@@143)
 :pattern ( ($generated@@34 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@144 ($generated@@87 $generated@@145 $generated@@146)) $generated@@145)
 :pattern ( ($generated@@87 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@147 ($generated@@87 $generated@@148 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@87 $generated@@148 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@82 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@82 $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@152 ($generated@@82 $generated@@153)) $generated)
 :pattern ( ($generated@@82 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@73 $generated@@155 ($generated@@77 $generated@@155 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@77 $generated@@155 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@35 $generated@@158) (and (or (not (= $generated@@159 $generated@@36)) (not true)) (= ($generated@@37 $generated@@159) ($generated@@34 $generated@@156 $generated@@157)))) ($generated@@80 $generated@@31 ($generated@@73 $generated@@31 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@158 $generated@@159) $generated@@71)) ($generated@@34 $generated@@156 $generated@@157)))
 :pattern ( ($generated@@73 $generated@@31 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@158 $generated@@159) $generated@@71)) ($generated@@34 $generated@@156 $generated@@157))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@38 $generated@@162 ($generated@@34 $generated@@160 $generated@@161)) (and (= ($generated@@77 $generated@@31 ($generated@@73 $generated@@31 $generated@@162)) $generated@@162) ($generated@@80 $generated@@31 ($generated@@73 $generated@@31 $generated@@162) ($generated@@34 $generated@@160 $generated@@161))))
 :pattern ( ($generated@@38 $generated@@162 ($generated@@34 $generated@@160 $generated@@161)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> ($generated@@38 $generated@@165 ($generated@@87 $generated@@163 $generated@@164)) (and (= ($generated@@77 $generated@@31 ($generated@@73 $generated@@31 $generated@@165)) $generated@@165) ($generated@@80 $generated@@31 ($generated@@73 $generated@@31 $generated@@165) ($generated@@87 $generated@@163 $generated@@164))))
 :pattern ( ($generated@@38 $generated@@165 ($generated@@87 $generated@@163 $generated@@164)))
)))
(assert  (and (forall (($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@T) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@166 $generated@@169 $generated@@170 $generated@@171 ($generated@@168 $generated@@169 $generated@@170 $generated@@171 $generated@@173 $generated@@174 $generated@@175 $generated@@172) $generated@@174 $generated@@175) $generated@@172)
 :weight 0
)) (and (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@181 $generated@@183) (= ($generated@@166 $generated@@176 $generated@@177 $generated@@178 ($generated@@168 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@166 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)) (forall (($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@T) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ) (!  (or (= $generated@@191 $generated@@193) (= ($generated@@166 $generated@@185 $generated@@186 $generated@@187 ($generated@@168 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@190 $generated@@191 $generated@@188) $generated@@192 $generated@@193) ($generated@@166 $generated@@185 $generated@@186 $generated@@187 $generated@@189 $generated@@192 $generated@@193)))
 :weight 0
)))))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 Bool) ($generated@@198 T@U) ($generated@@199 T@U) ) (! (= ($generated@@15 ($generated@@166 $generated@@31 $generated@@29 $generated@@11 ($generated@@167 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))  (=> (and (or (not (= $generated@@198 $generated@@194)) (not true)) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@195 $generated@@198) $generated@@196)))) $generated@@197))
 :pattern ( ($generated@@166 $generated@@31 $generated@@29 $generated@@11 ($generated@@167 $generated@@194 $generated@@195 $generated@@196 $generated@@197) $generated@@198 $generated@@199))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (and (= ($generated@@152 ($generated@@34 $generated@@201 $generated@@202)) $generated@@2) (= ($generated@@200 ($generated@@34 $generated@@201 $generated@@202)) $generated@@5))
 :pattern ( ($generated@@34 $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (and (= ($generated@@152 ($generated@@87 $generated@@203 $generated@@204)) $generated@@3) (= ($generated@@200 ($generated@@87 $generated@@203 $generated@@204)) $generated@@5))
 :pattern ( ($generated@@87 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@207) (and (or (not (= $generated@@208 $generated@@36)) (not true)) (= ($generated@@37 $generated@@208) ($generated@@34 $generated@@205 $generated@@206)))) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@207 $generated@@208) $generated@@0)))) ($generated@@92 $generated@@31 ($generated@@73 $generated@@31 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@207 $generated@@208) $generated@@71)) ($generated@@34 $generated@@205 $generated@@206) $generated@@207))
 :pattern ( ($generated@@73 $generated@@31 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@207 $generated@@208) $generated@@71)) ($generated@@34 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ) (!  (=> ($generated@@38 $generated@@209 ($generated@@82 $generated@@210)) (and (= ($generated@@77 $generated@@81 ($generated@@73 $generated@@81 $generated@@209)) $generated@@209) ($generated@@80 $generated@@81 ($generated@@73 $generated@@81 $generated@@209) ($generated@@82 $generated@@210))))
 :pattern ( ($generated@@38 $generated@@209 ($generated@@82 $generated@@210)))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@U) ($generated@@213 T@U) ($generated@@214 T@U) ) (!  (=> ($generated@@35 ($generated@@39 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@211 $generated@@212 ($generated@@39 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@211 $generated@@212) $generated@@213 $generated@@214))) ($generated@@72 $generated@@211 ($generated@@39 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@211 $generated@@212 ($generated@@39 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@211 $generated@@212) $generated@@213 $generated@@214))))
 :pattern ( ($generated@@39 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@211 $generated@@212 ($generated@@39 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@211 $generated@@212) $generated@@213 $generated@@214)))
)))
(assert (forall (($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (and ($generated@@35 $generated@@217) (and (or (not (= $generated@@218 $generated@@36)) (not true)) (= ($generated@@37 $generated@@218) ($generated@@34 $generated@@215 $generated@@216)))) ($generated@@80 $generated@@81 ($generated@@73 $generated@@81 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@217 $generated@@218) $generated@@68)) ($generated@@82 ($generated@@87 $generated@@215 $generated@@216))))
 :pattern ( ($generated@@73 $generated@@81 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@217 $generated@@218) $generated@@68)) ($generated@@34 $generated@@215 $generated@@216))
)))
(assert (forall (($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ($generated@@222 T@U) ) (!  (=> (and (and ($generated@@35 $generated@@221) (and (or (not (= $generated@@222 $generated@@36)) (not true)) (= ($generated@@37 $generated@@222) ($generated@@34 $generated@@219 $generated@@220)))) ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@221 $generated@@222) $generated@@0)))) ($generated@@92 $generated@@81 ($generated@@73 $generated@@81 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@221 $generated@@222) $generated@@68)) ($generated@@82 ($generated@@87 $generated@@219 $generated@@220)) $generated@@221))
 :pattern ( ($generated@@73 $generated@@81 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@221 $generated@@222) $generated@@68)) ($generated@@34 $generated@@219 $generated@@220))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@223 () T@U)
(declare-fun $generated@@224 () T@U)
(declare-fun $generated@@225 () T@U)
(declare-fun $generated@@226 () T@U)
(declare-fun $generated@@227 () T@U)
(declare-fun $generated@@228 () T@U)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 (T@U) Bool)
(declare-fun $generated@@234 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@235  (=> (= $generated@@223 ($generated@@167 $generated@@36 $generated@@224 $generated@@0 false)) (and (=> (= (ControlFlow 0 2) (- 0 5)) true) (and (=> (= (ControlFlow 0 2) (- 0 4)) true) (=> (and (or (not (= $generated@@225 $generated@@36)) (not true)) ($generated@@80 $generated@@31 $generated@@225 ($generated@@34 $generated@@226 $generated@@227))) (=> (and (and (and (not ($generated@@15 ($generated@@73 $generated@@11 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@224 $generated@@225) $generated@@0)))) (= ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@224 $generated@@225) $generated@@33) $generated@@228)) (and (= ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@224 $generated@@225) $generated@@63) $generated@@229) (= ($generated@@73 $generated@@31 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@224 $generated@@225) $generated@@71)) $generated@@230))) (and (and (= ($generated@@73 $generated@@81 ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@224 $generated@@225) $generated@@68)) $generated@@231) (= $generated@@232 ($generated@@39 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@224 $generated@@225 ($generated@@39 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@224 $generated@@225) $generated@@0 ($generated@@77 $generated@@11 ($generated@@14 true)))))) (and ($generated@@35 $generated@@232) ($generated@@233 $generated@@232)))) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@232 $generated@@225) $generated@@33) $generated@@228)) (=> (= ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@232 $generated@@225) $generated@@33) $generated@@228) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@28 $generated@@29 $generated@@30 ($generated@@28 $generated@@31 ($generated@@32 $generated@@29 $generated@@30) $generated@@232 $generated@@225) $generated@@63) $generated@@229)))))))))))
(let (($generated@@236  (=> (and (and (and ($generated@@35 $generated@@224) ($generated@@233 $generated@@224)) (and ($generated@@38 $generated@@228 $generated@@226) ($generated@@91 $generated@@228 $generated@@226 $generated@@224))) (and (and ($generated@@38 $generated@@229 $generated@@227) ($generated@@91 $generated@@229 $generated@@227 $generated@@224)) (and (= 0 $generated@@234) (= (ControlFlow 0 6) 2)))) $generated@@235)))
$generated@@236)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
