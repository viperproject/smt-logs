(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 (T@T) Int)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 (Bool) T@U)
(declare-fun $generated@@9 (T@U) Bool)
(declare-fun $generated@@10 (Int) T@U)
(declare-fun $generated@@11 (T@U) Int)
(declare-fun $generated@@12 (Real) T@U)
(declare-fun $generated@@13 (T@U) Real)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (T@U Int) T@U)
(declare-fun $generated@@23 (T@U T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 () T@U)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@33 (T@U Int) T@U)
(declare-fun $generated@@34 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@71 (Int) Int)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 (T@U) T@U)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@82 (T@U Int) T@U)
(declare-fun $generated@@88 (T@U T@U) Bool)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@97 (T@U T@U T@U) Bool)
(declare-fun $generated@@125 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@131 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@132 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@133 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@165 (T@U) T@U)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@4 $generated@@5) 0) (= ($generated@@4 $generated@@6) 1)) (= ($generated@@4 $generated@@7) 2)) (forall (($generated@@14 Bool) ) (! (= ($generated@@9 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 T@U) ) (! (= ($generated@@8 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 Int) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Real) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3)
)
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@24 T@U) ($generated@@25 T@U) ($generated@@26 Int) ) (!  (=> (and (<= 0 $generated@@26) (<= $generated@@26 ($generated@@20 $generated@@24))) (= ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26) ($generated@@23 ($generated@@22 $generated@@24 $generated@@26) $generated@@25)))
 :pattern ( ($generated@@22 ($generated@@23 $generated@@24 $generated@@25) $generated@@26))
)))
(assert (= ($generated@@4 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@32 $generated@@29)  (or (= $generated@@32 $generated@@30) (= ($generated@@31 $generated@@32) $generated@@29)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@32 $generated@@29))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 Int) ) (!  (=> (= $generated@@37 ($generated@@20 $generated@@35)) (and (= ($generated@@33 ($generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@35) (= ($generated@@22 ($generated@@34 $generated@@35 $generated@@36) $generated@@37) $generated@@36)))
 :pattern ( ($generated@@33 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
 :pattern ( ($generated@@22 ($generated@@34 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@38 $generated@@28 $generated@@40 $generated@@39 $generated@@41) ($generated@@38 $generated@@28 $generated@@40 $generated@@29 $generated@@41))
 :pattern ( ($generated@@38 $generated@@28 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@38 $generated@@28 $generated@@40 $generated@@29 $generated@@41))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@4 $generated@@44) 4)) (= ($generated@@4 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@4 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@38 $generated@@28 $generated@@67 $generated@@29 $generated@@68)  (or (= $generated@@67 $generated@@30) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@28 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@67) $generated@@0)))))
 :pattern ( ($generated@@38 $generated@@28 $generated@@67 $generated@@29 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 Int) ) (!  (=> (= $generated@@70 0) (= ($generated@@22 $generated@@69 $generated@@70) $generated@@69))
 :pattern ( ($generated@@22 $generated@@69 $generated@@70))
)))
(assert (forall (($generated@@72 Int) ) (! (= ($generated@@71 $generated@@72) $generated@@72)
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@75 $generated@@74))
)))
(assert (= ($generated@@4 $generated@@76) 7))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (and ($generated@@27 $generated@@76 $generated@@79 ($generated@@77 $generated@@81)) ($generated@@78 $generated@@80 $generated@@81)) ($generated@@27 $generated@@76 ($generated@@23 $generated@@79 $generated@@80) ($generated@@77 $generated@@81)))
 :pattern ( ($generated@@27 $generated@@76 ($generated@@23 $generated@@79 $generated@@80) ($generated@@77 $generated@@81)))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 Int) ($generated@@85 Int) ) (!  (=> (and (and (<= 0 $generated@@85) (< $generated@@85 $generated@@84)) (< $generated@@85 ($generated@@20 $generated@@83))) (= ($generated@@82 ($generated@@33 $generated@@83 $generated@@84) $generated@@85) ($generated@@82 $generated@@83 $generated@@85)))
 :weight 25
 :pattern ( ($generated@@82 ($generated@@33 $generated@@83 $generated@@84) $generated@@85))
 :pattern ( ($generated@@82 $generated@@83 $generated@@85) ($generated@@33 $generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 Int) ) (!  (=> (and (<= 0 $generated@@87) (<= $generated@@87 ($generated@@20 $generated@@86))) (= ($generated@@20 ($generated@@22 $generated@@86 $generated@@87)) (- ($generated@@20 $generated@@86) $generated@@87)))
 :pattern ( ($generated@@20 ($generated@@22 $generated@@86 $generated@@87)))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 $generated@@89 $generated@@90)  (and (= ($generated@@20 $generated@@89) ($generated@@20 $generated@@90)) (forall (($generated@@91 Int) ) (!  (=> (and (<= 0 $generated@@91) (< $generated@@91 ($generated@@20 $generated@@89))) (= ($generated@@82 $generated@@89 $generated@@91) ($generated@@82 $generated@@90 $generated@@91)))
 :pattern ( ($generated@@82 $generated@@89 $generated@@91))
 :pattern ( ($generated@@82 $generated@@90 $generated@@91))
))))
 :pattern ( ($generated@@88 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@42 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@42 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@20 ($generated@@23 $generated@@95 $generated@@96)) (+ 1 ($generated@@20 $generated@@95)))
 :pattern ( ($generated@@23 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@97 ($generated@@92 $generated@@101 $generated@@98) $generated@@99 $generated@@100) ($generated@@38 $generated@@101 $generated@@98 $generated@@99 $generated@@100))
 :pattern ( ($generated@@97 ($generated@@92 $generated@@101 $generated@@98) $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 Int) ($generated@@104 Int) ) (!  (=> (and (and (<= 0 $generated@@103) (<= 0 $generated@@104)) (< $generated@@104 (- ($generated@@20 $generated@@102) $generated@@103))) (= ($generated@@82 ($generated@@22 $generated@@102 $generated@@103) $generated@@104) ($generated@@82 $generated@@102 (+ $generated@@104 $generated@@103))))
 :weight 25
 :pattern ( ($generated@@82 ($generated@@22 $generated@@102 $generated@@103) $generated@@104))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@20 ($generated@@34 $generated@@105 $generated@@106)) (+ ($generated@@20 $generated@@105) ($generated@@20 $generated@@106)))
 :pattern ( ($generated@@20 ($generated@@34 $generated@@105 $generated@@106)))
)))
(assert (forall (($generated@@107 T@U) ) (!  (=> ($generated@@78 $generated@@107 $generated@@29) (and (= ($generated@@92 $generated@@28 ($generated@@42 $generated@@28 $generated@@107)) $generated@@107) ($generated@@27 $generated@@28 ($generated@@42 $generated@@28 $generated@@107) $generated@@29)))
 :pattern ( ($generated@@78 $generated@@107 $generated@@29))
)))
(assert (forall (($generated@@108 T@U) ) (!  (=> ($generated@@78 $generated@@108 $generated@@39) (and (= ($generated@@92 $generated@@28 ($generated@@42 $generated@@28 $generated@@108)) $generated@@108) ($generated@@27 $generated@@28 ($generated@@42 $generated@@28 $generated@@108) $generated@@39)))
 :pattern ( ($generated@@78 $generated@@108 $generated@@39))
)))
(assert (forall (($generated@@109 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@109 $generated@@39)  (and ($generated@@27 $generated@@28 $generated@@109 $generated@@29) (or (not (= $generated@@109 $generated@@30)) (not true))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@109 $generated@@39))
 :pattern ( ($generated@@27 $generated@@28 $generated@@109 $generated@@29))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 Int) ($generated@@112 T@U) ) (!  (and (=> (= $generated@@111 ($generated@@20 $generated@@110)) (= ($generated@@82 ($generated@@23 $generated@@110 $generated@@112) $generated@@111) $generated@@112)) (=> (or (not (= $generated@@111 ($generated@@20 $generated@@110))) (not true)) (= ($generated@@82 ($generated@@23 $generated@@110 $generated@@112) $generated@@111) ($generated@@82 $generated@@110 $generated@@111))))
 :pattern ( ($generated@@82 ($generated@@23 $generated@@110 $generated@@112) $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> ($generated@@88 $generated@@113 $generated@@114) (= $generated@@113 $generated@@114))
 :pattern ( ($generated@@88 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@115 T@U) ($generated@@116 Int) ) (!  (=> (and (<= 0 $generated@@116) (<= $generated@@116 ($generated@@20 $generated@@115))) (= ($generated@@20 ($generated@@33 $generated@@115 $generated@@116)) $generated@@116))
 :pattern ( ($generated@@20 ($generated@@33 $generated@@115 $generated@@116)))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@78 ($generated@@92 $generated@@119 $generated@@117) $generated@@118) ($generated@@27 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@78 ($generated@@92 $generated@@119 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (<= 0 ($generated@@20 $generated@@120))
 :pattern ( ($generated@@20 $generated@@120))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@38 $generated@@76 $generated@@121 ($generated@@77 $generated@@122) $generated@@123) (forall (($generated@@124 Int) ) (!  (=> (and (<= 0 $generated@@124) (< $generated@@124 ($generated@@20 $generated@@121))) ($generated@@97 ($generated@@82 $generated@@121 $generated@@124) $generated@@122 $generated@@123))
 :pattern ( ($generated@@82 $generated@@121 $generated@@124))
)))
 :pattern ( ($generated@@38 $generated@@76 $generated@@121 ($generated@@77 $generated@@122) $generated@@123))
)))
(assert (forall (($generated@@126 T@U) ) (! (= ($generated@@125 ($generated@@77 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@77 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ) (! (= ($generated@@127 ($generated@@77 $generated@@128)) $generated)
 :pattern ( ($generated@@77 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@T) ) (! (= ($generated@@42 $generated@@130 ($generated@@92 $generated@@130 $generated@@129)) $generated@@129)
 :pattern ( ($generated@@92 $generated@@130 $generated@@129))
)))
(assert  (and (forall (($generated@@134 T@T) ($generated@@135 T@T) ($generated@@136 T@T) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@131 $generated@@134 $generated@@135 $generated@@136 ($generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@138 $generated@@139 $generated@@140 $generated@@137) $generated@@139 $generated@@140) $generated@@137)
 :weight 0
)) (and (forall (($generated@@141 T@T) ($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@146 $generated@@148) (= ($generated@@131 $generated@@141 $generated@@142 $generated@@143 ($generated@@133 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@146 $generated@@147 $generated@@144) $generated@@148 $generated@@149) ($generated@@131 $generated@@141 $generated@@142 $generated@@143 $generated@@145 $generated@@148 $generated@@149)))
 :weight 0
)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@T) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ) (!  (or (= $generated@@156 $generated@@158) (= ($generated@@131 $generated@@150 $generated@@151 $generated@@152 ($generated@@133 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@155 $generated@@156 $generated@@153) $generated@@157 $generated@@158) ($generated@@131 $generated@@150 $generated@@151 $generated@@152 $generated@@154 $generated@@157 $generated@@158)))
 :weight 0
)))))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ($generated@@161 T@U) ($generated@@162 Bool) ($generated@@163 T@U) ($generated@@164 T@U) ) (! (= ($generated@@9 ($generated@@131 $generated@@28 $generated@@44 $generated@@5 ($generated@@132 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))  (=> (and (or (not (= $generated@@163 $generated@@159)) (not true)) ($generated@@9 ($generated@@42 $generated@@5 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@28 ($generated@@46 $generated@@44 $generated@@45) $generated@@160 $generated@@163) $generated@@161)))) $generated@@162))
 :pattern ( ($generated@@131 $generated@@28 $generated@@44 $generated@@5 ($generated@@132 $generated@@159 $generated@@160 $generated@@161 $generated@@162) $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (= ($generated@@165 ($generated@@23 $generated@@167 $generated@@168)) $generated@@167) (= ($generated@@166 ($generated@@23 $generated@@167 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@23 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@78 $generated@@169 ($generated@@77 $generated@@170)) (and (= ($generated@@92 $generated@@76 ($generated@@42 $generated@@76 $generated@@169)) $generated@@169) ($generated@@27 $generated@@76 ($generated@@42 $generated@@76 $generated@@169) ($generated@@77 $generated@@170))))
 :pattern ( ($generated@@78 $generated@@169 ($generated@@77 $generated@@170)))
)))
(assert (= ($generated@@127 $generated@@29) $generated@@1))
(assert (= ($generated@@171 $generated@@29) $generated@@3))
(assert (= ($generated@@127 $generated@@39) $generated@@2))
(assert (= ($generated@@171 $generated@@39) $generated@@3))
(assert (forall (($generated@@172 T@U) ($generated@@173 Int) ($generated@@174 Int) ) (!  (=> (and (and (<= 0 $generated@@173) (<= $generated@@173 $generated@@174)) (< $generated@@174 ($generated@@20 $generated@@172))) (= ($generated@@82 ($generated@@22 $generated@@172 $generated@@173) (- $generated@@174 $generated@@173)) ($generated@@82 $generated@@172 $generated@@174)))
 :weight 25
 :pattern ( ($generated@@82 $generated@@172 $generated@@174) ($generated@@22 $generated@@172 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ($generated@@176 Int) ($generated@@177 Int) ) (!  (=> (and (and (<= 0 $generated@@176) (<= 0 $generated@@177)) (<= (+ $generated@@176 $generated@@177) ($generated@@20 $generated@@175))) (= ($generated@@22 ($generated@@22 $generated@@175 $generated@@176) $generated@@177) ($generated@@22 $generated@@175 (+ $generated@@176 $generated@@177))))
 :pattern ( ($generated@@22 ($generated@@22 $generated@@175 $generated@@176) $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 Int) ) (!  (and (=> (< $generated@@180 ($generated@@20 $generated@@178)) (= ($generated@@82 ($generated@@34 $generated@@178 $generated@@179) $generated@@180) ($generated@@82 $generated@@178 $generated@@180))) (=> (<= ($generated@@20 $generated@@178) $generated@@180) (= ($generated@@82 ($generated@@34 $generated@@178 $generated@@179) $generated@@180) ($generated@@82 $generated@@179 (- $generated@@180 ($generated@@20 $generated@@178))))))
 :pattern ( ($generated@@82 ($generated@@34 $generated@@178 $generated@@179) $generated@@180))
)))
(assert (forall (($generated@@181 Int) ) (! (= ($generated@@92 $generated@@6 ($generated@@10 ($generated@@71 $generated@@181))) ($generated@@73 $generated@@45 ($generated@@92 $generated@@6 ($generated@@10 $generated@@181))))
 :pattern ( ($generated@@92 $generated@@6 ($generated@@10 ($generated@@71 $generated@@181))))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@T) ) (! (= ($generated@@92 $generated@@183 ($generated@@73 $generated@@183 $generated@@182)) ($generated@@73 $generated@@45 ($generated@@92 $generated@@183 $generated@@182)))
 :pattern ( ($generated@@92 $generated@@183 ($generated@@73 $generated@@183 $generated@@182)))
)))
(assert (forall (($generated@@184 T@U) ) (!  (=> (= ($generated@@20 $generated@@184) 0) (= $generated@@184 $generated@@21))
 :pattern ( ($generated@@20 $generated@@184))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 Int) ) (!  (=> (= $generated@@186 0) (= ($generated@@33 $generated@@185 $generated@@186) $generated@@21))
 :pattern ( ($generated@@33 $generated@@185 $generated@@186))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (! (= ($generated@@27 $generated@@76 $generated@@187 ($generated@@77 $generated@@188)) (forall (($generated@@189 Int) ) (!  (=> (and (<= 0 $generated@@189) (< $generated@@189 ($generated@@20 $generated@@187))) ($generated@@78 ($generated@@82 $generated@@187 $generated@@189) $generated@@188))
 :pattern ( ($generated@@82 $generated@@187 $generated@@189))
)))
 :pattern ( ($generated@@27 $generated@@76 $generated@@187 ($generated@@77 $generated@@188)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 () Int)
(declare-fun $generated@@193 () T@U)
(declare-fun $generated@@194 () T@U)
(declare-fun $generated@@195 () T@U)
(declare-fun $generated@@196 (T@U) Bool)
(declare-fun $generated@@197 (T@U) Bool)
(declare-fun $generated@@198 () T@U)
(declare-fun $generated@@199 () T@U)
(declare-fun $generated@@200 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 68) (let (($generated@@201  (and (=> (= (ControlFlow 0 52) (- 0 57)) (= ($generated@@82 $generated@@190 ($generated@@71 0)) ($generated@@82 $generated@@191 $generated@@192))) (and (=> (= (ControlFlow 0 52) (- 0 56)) ($generated@@88 ($generated@@22 $generated@@190 ($generated@@71 1)) ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 $generated@@192)))) (=> (and (= ($generated@@82 $generated@@190 ($generated@@71 0)) ($generated@@82 $generated@@191 $generated@@192)) ($generated@@88 ($generated@@22 $generated@@190 ($generated@@71 1)) ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 $generated@@192)))) (and (=> (= (ControlFlow 0 52) (- 0 55)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 52) (- 0 54)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 52) (- 0 53)) (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@20 $generated@@191)))) (=> (= (ControlFlow 0 52) (- 0 51)) ($generated@@88 ($generated@@34 ($generated@@22 $generated@@190 ($generated@@71 1)) ($generated@@23 $generated@@21 ($generated@@82 $generated@@190 ($generated@@71 0)))) ($generated@@34 ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 $generated@@192)) ($generated@@23 $generated@@21 ($generated@@82 $generated@@191 $generated@@192)))))))))))))
(let (($generated@@202  (=> (and (or (not (= ($generated@@82 $generated@@190 ($generated@@71 0)) ($generated@@82 $generated@@191 $generated@@192))) (not true)) (= (ControlFlow 0 62) 52)) $generated@@201)))
(let (($generated@@203  (=> (= ($generated@@82 $generated@@190 ($generated@@71 0)) ($generated@@82 $generated@@191 $generated@@192)) (and (=> (= (ControlFlow 0 58) (- 0 61)) (and (<= 0 ($generated@@71 1)) (<= ($generated@@71 1) ($generated@@20 $generated@@190)))) (and (=> (= (ControlFlow 0 58) (- 0 60)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 58) (- 0 59)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (=> (= (ControlFlow 0 58) 52) $generated@@201)))))))
(let (($generated@@204  (=> (and (and (<= 0 ($generated@@71 1)) (<= ($generated@@71 1) ($generated@@20 $generated@@190))) (and (<= 0 ($generated@@71 0)) (< ($generated@@71 0) ($generated@@20 $generated@@190)))) (and (=> (= (ControlFlow 0 63) (- 0 65)) (and (<= 0 ($generated@@71 0)) (< ($generated@@71 0) ($generated@@20 $generated@@190)))) (and (=> (= (ControlFlow 0 63) (- 0 64)) (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 63) 58) $generated@@203) (=> (= (ControlFlow 0 63) 62) $generated@@202)))))))
(let (($generated@@205  (=> (= (ControlFlow 0 49) (- 0 48)) ($generated@@88 $generated@@193 ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 (+ $generated@@192 1)))))))
(let (($generated@@206  (=> (and ($generated@@88 $generated@@193 ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 (+ $generated@@192 1)))) (= (ControlFlow 0 50) 49)) $generated@@205)))
(let (($generated@@207  (=> (and (and (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191))) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191))) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191))))) (and (=> (= (ControlFlow 0 40) (- 0 47)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 40) (- 0 46)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 40) (- 0 45)) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 40) (- 0 44)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 40) (- 0 43)) ($generated@@88 ($generated@@34 ($generated@@33 $generated@@191 $generated@@192) ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192)) ($generated@@33 $generated@@191 (+ $generated@@192 1)))) (=> ($generated@@88 ($generated@@34 ($generated@@33 $generated@@191 $generated@@192) ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192)) ($generated@@33 $generated@@191 (+ $generated@@192 1))) (and (=> (= (ControlFlow 0 40) (- 0 42)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 40) (- 0 41)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (=> (= (ControlFlow 0 40) (- 0 39)) ($generated@@88 ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@34 ($generated@@33 $generated@@191 $generated@@192) ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192))) ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 (+ $generated@@192 1))))))))))))))))
(let (($generated@@208  (=> (and (and (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191))) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191))) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191))))) (and (=> (= (ControlFlow 0 34) (- 0 38)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 34) (- 0 37)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 34) (- 0 36)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 34) (- 0 35)) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (=> (= (ControlFlow 0 34) (- 0 33)) ($generated@@88 ($generated@@34 ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 $generated@@192)) ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192)) ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@34 ($generated@@33 $generated@@191 $generated@@192) ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192))))))))))))
(let (($generated@@209  (=> (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191))) (=> (and (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191))) (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 24) (- 0 32)) (and (<= 0 $generated@@192) (< $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 24) (- 0 31)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 24) (- 0 30)) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 24) (- 0 29)) ($generated@@88 ($generated@@23 $generated@@21 ($generated@@82 $generated@@191 $generated@@192)) ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192))) (=> ($generated@@88 ($generated@@23 $generated@@21 ($generated@@82 $generated@@191 $generated@@192)) ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192)) (and (=> (= (ControlFlow 0 24) (- 0 28)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 24) (- 0 26)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 24) (- 0 25)) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (=> (= (ControlFlow 0 24) (- 0 23)) ($generated@@88 ($generated@@34 ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 $generated@@192)) ($generated@@23 $generated@@21 ($generated@@82 $generated@@191 $generated@@192))) ($generated@@34 ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 $generated@@192)) ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192)))))))))))))))))
(let (($generated@@210  (and (=> (= (ControlFlow 0 20) (- 0 22)) (and (<= 0 ($generated@@71 1)) (<= ($generated@@71 1) ($generated@@20 $generated@@190)))) (and (=> (= (ControlFlow 0 20) (- 0 21)) (and (<= 0 ($generated@@71 0)) (< ($generated@@71 0) ($generated@@20 $generated@@190)))) (=> (= (ControlFlow 0 20) (- 0 19)) ($generated@@88 $generated@@193 ($generated@@34 ($generated@@22 $generated@@190 ($generated@@71 1)) ($generated@@23 $generated@@21 ($generated@@82 $generated@@190 ($generated@@71 0))))))))))
(let (($generated@@211 true))
(let (($generated@@212  (=> ($generated@@88 $generated@@190 ($generated@@34 ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192) ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 $generated@@192)))) (and (and (and (and (and (and (=> (= (ControlFlow 0 66) 18) $generated@@211) (=> (= (ControlFlow 0 66) 20) $generated@@210)) (=> (= (ControlFlow 0 66) 63) $generated@@204)) (=> (= (ControlFlow 0 66) 24) $generated@@209)) (=> (= (ControlFlow 0 66) 34) $generated@@208)) (=> (= (ControlFlow 0 66) 40) $generated@@207)) (=> (= (ControlFlow 0 66) 50) $generated@@206)))))
(let (($generated@@213  (=> (and (and (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191))) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191))) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191))))) (and (=> (= (ControlFlow 0 13) (- 0 17)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 13) (- 0 16)) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 13) (- 0 15)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 13) (- 0 14)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (=> (= (ControlFlow 0 13) (- 0 12)) ($generated@@88 ($generated@@34 ($generated@@34 ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192) ($generated@@22 $generated@@191 (+ $generated@@192 1))) ($generated@@33 $generated@@191 $generated@@192)) ($generated@@34 ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192) ($generated@@34 ($generated@@22 $generated@@191 (+ $generated@@192 1)) ($generated@@33 $generated@@191 $generated@@192))))))))))))
(let (($generated@@214  (=> (and (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191))) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 7) (- 0 11)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 7) (- 0 10)) (and (<= $generated@@192 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 7) (- 0 9)) (and (<= 0 (+ $generated@@192 1)) (<= (+ $generated@@192 1) ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 7) (- 0 8)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (=> (= (ControlFlow 0 7) (- 0 6)) ($generated@@88 ($generated@@34 ($generated@@22 $generated@@191 $generated@@192) ($generated@@33 $generated@@191 $generated@@192)) ($generated@@34 ($generated@@34 ($generated@@22 ($generated@@33 $generated@@191 (+ $generated@@192 1)) $generated@@192) ($generated@@22 $generated@@191 (+ $generated@@192 1))) ($generated@@33 $generated@@191 $generated@@192)))))))))))
(let (($generated@@215  (and (=> (= (ControlFlow 0 3) (- 0 5)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@192) (<= $generated@@192 ($generated@@20 $generated@@191)))) (=> (= (ControlFlow 0 3) (- 0 2)) ($generated@@88 $generated@@190 ($generated@@34 ($generated@@22 $generated@@191 $generated@@192) ($generated@@33 $generated@@191 $generated@@192))))))))
(let (($generated@@216 true))
(let (($generated@@217  (=> (= $generated@@194 ($generated@@132 $generated@@30 $generated@@195 $generated@@0 false)) (and (and (and (and (=> (= (ControlFlow 0 67) 1) $generated@@216) (=> (= (ControlFlow 0 67) 3) $generated@@215)) (=> (= (ControlFlow 0 67) 7) $generated@@214)) (=> (= (ControlFlow 0 67) 13) $generated@@213)) (=> (= (ControlFlow 0 67) 66) $generated@@212)))))
(let (($generated@@218  (=> (and (and ($generated@@196 $generated@@195) ($generated@@197 $generated@@195)) (and (or (not (= $generated@@198 $generated@@30)) (not true)) (and ($generated@@27 $generated@@28 $generated@@198 $generated@@39) ($generated@@38 $generated@@28 $generated@@198 $generated@@39 $generated@@195)))) (=> (and (and (and (and ($generated@@27 $generated@@76 $generated@@191 ($generated@@77 $generated@@199)) ($generated@@38 $generated@@76 $generated@@191 ($generated@@77 $generated@@199) $generated@@195)) (<= ($generated@@71 0) $generated@@192)) (and ($generated@@27 $generated@@76 $generated@@190 ($generated@@77 $generated@@199)) ($generated@@38 $generated@@76 $generated@@190 ($generated@@77 $generated@@199) $generated@@195))) (and (and (and ($generated@@27 $generated@@76 $generated@@193 ($generated@@77 $generated@@199)) ($generated@@38 $generated@@76 $generated@@193 ($generated@@77 $generated@@199) $generated@@195)) (= 0 $generated@@200)) (and (and (< $generated@@192 ($generated@@20 $generated@@191)) ($generated@@88 $generated@@190 ($generated@@34 ($generated@@22 $generated@@191 $generated@@192) ($generated@@33 $generated@@191 $generated@@192)))) (and ($generated@@88 $generated@@193 ($generated@@34 ($generated@@22 $generated@@190 ($generated@@71 1)) ($generated@@23 $generated@@21 ($generated@@82 $generated@@191 $generated@@192)))) (= (ControlFlow 0 68) 67))))) $generated@@217))))
$generated@@218)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
