(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U) Bool)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 () Int)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@U T@U) Bool)
(declare-fun $generated@@63 (T@T T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 (T@T T@T) T@T)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@98 (T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@111 (T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@160 (T@U) Bool)
(declare-fun $generated@@168 (T@U) T@U)
(declare-fun $generated@@169 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@170 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated@@2) 0))
(assert (= ($generated@@33 $generated) $generated@@0))
(assert (= ($generated@@34 $generated@@2) $generated@@3))
(assert (= ($generated@@16 $generated@@36) 3))
(assert (forall (($generated@@40 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@40 $generated@@37)  (or (= $generated@@40 $generated@@38) (= ($generated@@39 $generated@@40) $generated@@37)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@40 $generated@@37))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@42 $generated@@41)  (or (= $generated@@42 $generated@@38) (= ($generated@@39 $generated@@42) $generated@@41)))
 :pattern ( ($generated@@35 $generated@@36 $generated@@42 $generated@@41))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@46 $generated@@44 $generated@@47) ($generated@@43 $generated@@36 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@43 $generated@@36 $generated@@46 $generated@@44 $generated@@47))
 :pattern ( ($generated@@43 $generated@@36 $generated@@46 $generated@@45 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@49 $generated@@48 $generated@@50) ($generated@@43 $generated@@36 $generated@@49 $generated@@37 $generated@@50))
 :pattern ( ($generated@@43 $generated@@36 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@43 $generated@@36 $generated@@49 $generated@@37 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@52 $generated@@51 $generated@@53) ($generated@@43 $generated@@36 $generated@@52 $generated@@41 $generated@@53))
 :pattern ( ($generated@@43 $generated@@36 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@43 $generated@@36 $generated@@52 $generated@@41 $generated@@53))
)))
(assert (= ($generated@@32 $generated@@54) 0))
(assert (= ($generated@@55 $generated@@10 $generated@@14) $generated@@54))
(assert ($generated@@56 $generated@@54))
(assert (= ($generated@@32 $generated@@57) 0))
(assert (= ($generated@@55 $generated@@10 $generated@@15) $generated@@57))
(assert  (not ($generated@@56 $generated@@57)))
(assert  (and (and (and (and (and (and (and (= ($generated@@16 $generated@@64) 4) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@65 $generated@@73 $generated@@74 ($generated@@70 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@77) $generated@@75)
 :weight 0
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (or (= $generated@@82 $generated@@83) (= ($generated@@65 $generated@@78 $generated@@79 ($generated@@70 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@83) ($generated@@65 $generated@@78 $generated@@79 $generated@@81 $generated@@83)))
 :weight 0
))) (= ($generated@@16 $generated@@66) 5)) (= ($generated@@16 $generated@@67) 6)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (= ($generated@@16 ($generated@@68 $generated@@84 $generated@@85)) 7))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@71 ($generated@@68 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@68 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@72 ($generated@@68 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@68 $generated@@88 $generated@@89))
))))
(assert  (=> (<= 0 $generated@@58) (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (!  (=> (or ($generated@@61 $generated@@90 $generated@@91) (and (< 0 $generated@@58) (and ($generated@@60 $generated@@90) (and (or (not (= $generated@@91 $generated@@38)) (not true)) (and ($generated@@35 $generated@@36 $generated@@91 $generated@@51) ($generated@@43 $generated@@36 $generated@@91 $generated@@51 $generated@@90)))))) (= ($generated@@59 $generated@@90 $generated@@91)  (and ($generated@@62 ($generated@@63 $generated@@64 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@90 $generated@@91) $generated@@54)) ($generated@@69 $generated@@36 $generated@@91)) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@90 $generated@@91) $generated@@57))))))
 :pattern ( ($generated@@59 $generated@@90 $generated@@91) ($generated@@60 $generated@@90))
))))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@92 $generated@@45 $generated@@93)  (or (= $generated@@92 $generated@@38) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@93 $generated@@92) $generated@@2)))))
 :pattern ( ($generated@@43 $generated@@36 $generated@@92 $generated@@45 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@94 $generated@@37 $generated@@95)  (or (= $generated@@94 $generated@@38) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@95 $generated@@94) $generated@@2)))))
 :pattern ( ($generated@@43 $generated@@36 $generated@@94 $generated@@37 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@43 $generated@@36 $generated@@96 $generated@@41 $generated@@97)  (or (= $generated@@96 $generated@@38) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@97 $generated@@96) $generated@@2)))))
 :pattern ( ($generated@@43 $generated@@36 $generated@@96 $generated@@41 $generated@@97))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@98 $generated@@99 $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@99 $generated@@101) $generated@@2))) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@100 $generated@@101) $generated@@2))))
 :pattern ( ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@100 $generated@@101) $generated@@2))
)))
 :pattern ( ($generated@@98 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@69 $generated@@103 ($generated@@63 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@63 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@35 $generated@@64 $generated@@106 ($generated@@104 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@62 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@62 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@35 $generated@@64 $generated@@106 ($generated@@104 $generated@@107)))
)))
(assert ($generated@@56 $generated@@2))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ) (!  (=> (and (and ($generated@@60 $generated@@109) (and (or (not (= $generated@@110 $generated@@38)) (not true)) (= ($generated@@39 $generated@@110) $generated@@41))) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@109 $generated@@110) $generated@@2)))) ($generated@@43 $generated@@17 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@109 $generated@@110) $generated@@57)) $generated $generated@@109))
 :pattern ( ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@109 $generated@@110) $generated@@57)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@T) ) (! (= ($generated@@111 ($generated@@69 $generated@@115 $generated@@112) $generated@@113 $generated@@114) ($generated@@43 $generated@@115 $generated@@112 $generated@@113 $generated@@114))
 :pattern ( ($generated@@111 ($generated@@69 $generated@@115 $generated@@112) $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> ($generated@@98 $generated@@116 $generated@@117) (=> ($generated@@111 $generated@@118 $generated@@119 $generated@@116) ($generated@@111 $generated@@118 $generated@@119 $generated@@117)))
 :pattern ( ($generated@@98 $generated@@116 $generated@@117) ($generated@@111 $generated@@118 $generated@@119 $generated@@116))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@T) ) (!  (=> ($generated@@98 $generated@@120 $generated@@121) (=> ($generated@@43 $generated@@124 $generated@@122 $generated@@123 $generated@@120) ($generated@@43 $generated@@124 $generated@@122 $generated@@123 $generated@@121)))
 :pattern ( ($generated@@98 $generated@@120 $generated@@121) ($generated@@43 $generated@@124 $generated@@122 $generated@@123 $generated@@120))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@105 $generated@@125 $generated@@45) (and (= ($generated@@69 $generated@@36 ($generated@@63 $generated@@36 $generated@@125)) $generated@@125) ($generated@@35 $generated@@36 ($generated@@63 $generated@@36 $generated@@125) $generated@@45)))
 :pattern ( ($generated@@105 $generated@@125 $generated@@45))
)))
(assert (forall (($generated@@126 T@U) ) (!  (=> ($generated@@105 $generated@@126 $generated@@44) (and (= ($generated@@69 $generated@@36 ($generated@@63 $generated@@36 $generated@@126)) $generated@@126) ($generated@@35 $generated@@36 ($generated@@63 $generated@@36 $generated@@126) $generated@@44)))
 :pattern ( ($generated@@105 $generated@@126 $generated@@44))
)))
(assert (forall (($generated@@127 T@U) ) (!  (=> ($generated@@105 $generated@@127 $generated@@48) (and (= ($generated@@69 $generated@@36 ($generated@@63 $generated@@36 $generated@@127)) $generated@@127) ($generated@@35 $generated@@36 ($generated@@63 $generated@@36 $generated@@127) $generated@@48)))
 :pattern ( ($generated@@105 $generated@@127 $generated@@48))
)))
(assert (forall (($generated@@128 T@U) ) (!  (=> ($generated@@105 $generated@@128 $generated@@37) (and (= ($generated@@69 $generated@@36 ($generated@@63 $generated@@36 $generated@@128)) $generated@@128) ($generated@@35 $generated@@36 ($generated@@63 $generated@@36 $generated@@128) $generated@@37)))
 :pattern ( ($generated@@105 $generated@@128 $generated@@37))
)))
(assert (forall (($generated@@129 T@U) ) (!  (=> ($generated@@105 $generated@@129 $generated@@51) (and (= ($generated@@69 $generated@@36 ($generated@@63 $generated@@36 $generated@@129)) $generated@@129) ($generated@@35 $generated@@36 ($generated@@63 $generated@@36 $generated@@129) $generated@@51)))
 :pattern ( ($generated@@105 $generated@@129 $generated@@51))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@105 $generated@@130 $generated@@41) (and (= ($generated@@69 $generated@@36 ($generated@@63 $generated@@36 $generated@@130)) $generated@@130) ($generated@@35 $generated@@36 ($generated@@63 $generated@@36 $generated@@130) $generated@@41)))
 :pattern ( ($generated@@105 $generated@@130 $generated@@41))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@131 $generated@@44)  (and ($generated@@35 $generated@@36 $generated@@131 $generated@@45) (or (not (= $generated@@131 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@131 $generated@@44))
 :pattern ( ($generated@@35 $generated@@36 $generated@@131 $generated@@45))
)))
(assert (forall (($generated@@132 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@132 $generated@@48)  (and ($generated@@35 $generated@@36 $generated@@132 $generated@@37) (or (not (= $generated@@132 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@132 $generated@@48))
 :pattern ( ($generated@@35 $generated@@36 $generated@@132 $generated@@37))
)))
(assert (forall (($generated@@133 T@U) ) (! (= ($generated@@35 $generated@@36 $generated@@133 $generated@@51)  (and ($generated@@35 $generated@@36 $generated@@133 $generated@@41) (or (not (= $generated@@133 $generated@@38)) (not true))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@133 $generated@@51))
 :pattern ( ($generated@@35 $generated@@36 $generated@@133 $generated@@41))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> (and ($generated@@60 $generated@@134) (and (or (not (= $generated@@135 $generated@@38)) (not true)) (= ($generated@@39 $generated@@135) $generated@@41))) ($generated@@35 $generated@@64 ($generated@@63 $generated@@64 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@134 $generated@@135) $generated@@54)) ($generated@@104 $generated@@44)))
 :pattern ( ($generated@@63 $generated@@64 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@134 $generated@@135) $generated@@54)))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (=> (and (and ($generated@@60 $generated@@136) (and (or (not (= $generated@@137 $generated@@38)) (not true)) (= ($generated@@39 $generated@@137) $generated@@41))) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@136 $generated@@137) $generated@@2)))) ($generated@@43 $generated@@64 ($generated@@63 $generated@@64 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@136 $generated@@137) $generated@@54)) ($generated@@104 $generated@@44) $generated@@136))
 :pattern ( ($generated@@63 $generated@@64 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@136 $generated@@137) $generated@@54)))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (or (not (= $generated@@138 $generated@@140)) (not true)) (=> (and ($generated@@98 $generated@@138 $generated@@139) ($generated@@98 $generated@@139 $generated@@140)) ($generated@@98 $generated@@138 $generated@@140)))
 :pattern ( ($generated@@98 $generated@@138 $generated@@139) ($generated@@98 $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (and (= ($generated@@141 ($generated@@55 $generated@@142 $generated@@143)) $generated@@142) (= ($generated@@34 ($generated@@55 $generated@@142 $generated@@143)) $generated@@143))
 :pattern ( ($generated@@55 $generated@@142 $generated@@143))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> ($generated@@105 $generated@@144 $generated) (and (= ($generated@@69 $generated@@17 ($generated@@63 $generated@@17 $generated@@144)) $generated@@144) ($generated@@35 $generated@@17 ($generated@@63 $generated@@17 $generated@@144) $generated)))
 :pattern ( ($generated@@105 $generated@@144 $generated))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (! (= ($generated@@105 ($generated@@69 $generated@@147 $generated@@145) $generated@@146) ($generated@@35 $generated@@147 $generated@@145 $generated@@146))
 :pattern ( ($generated@@105 ($generated@@69 $generated@@147 $generated@@145) $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@43 $generated@@64 $generated@@148 ($generated@@104 $generated@@149) $generated@@150) (forall (($generated@@151 T@U) ) (!  (=> ($generated@@62 $generated@@148 $generated@@151) ($generated@@111 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@62 $generated@@148 $generated@@151))
)))
 :pattern ( ($generated@@43 $generated@@64 $generated@@148 ($generated@@104 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! ($generated@@35 $generated@@36 $generated@@152 $generated@@45)
 :pattern ( ($generated@@35 $generated@@36 $generated@@152 $generated@@45))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@104 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@104 $generated@@154))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@33 ($generated@@104 $generated@@155)) $generated@@1)
 :pattern ( ($generated@@104 $generated@@155))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@T) ) (! (= ($generated@@63 $generated@@157 ($generated@@69 $generated@@157 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@69 $generated@@157 $generated@@156))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (and ($generated@@60 $generated@@158) (and (or (not (= $generated@@159 $generated@@38)) (not true)) (= ($generated@@39 $generated@@159) $generated@@41))) ($generated@@35 $generated@@17 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@158 $generated@@159) $generated@@57)) $generated))
 :pattern ( ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@158 $generated@@159) $generated@@57)))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (and (and (and ($generated@@60 $generated@@161) ($generated@@60 $generated@@162)) (and (or (not (= $generated@@163 $generated@@38)) (not true)) ($generated@@35 $generated@@36 $generated@@163 $generated@@51))) (and ($generated@@160 $generated@@161) ($generated@@98 $generated@@161 $generated@@162))) (=> (forall (($generated@@164 T@U) ($generated@@165 T@U) )  (=> (and (or (not (= $generated@@164 $generated@@38)) (not true)) (or (= $generated@@164 $generated@@163) ($generated@@62 ($generated@@63 $generated@@64 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@161 $generated@@163) $generated@@54)) ($generated@@69 $generated@@36 $generated@@164)))) (= ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@161 $generated@@164) $generated@@165) ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@162 $generated@@164) $generated@@165)))) (= ($generated@@59 $generated@@161 $generated@@163) ($generated@@59 $generated@@162 $generated@@163))))
 :pattern ( ($generated@@160 $generated@@161) ($generated@@98 $generated@@161 $generated@@162) ($generated@@59 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@105 $generated@@166 ($generated@@104 $generated@@167)) (and (= ($generated@@69 $generated@@64 ($generated@@63 $generated@@64 $generated@@166)) $generated@@166) ($generated@@35 $generated@@64 ($generated@@63 $generated@@64 $generated@@166) ($generated@@104 $generated@@167))))
 :pattern ( ($generated@@105 $generated@@166 ($generated@@104 $generated@@167)))
)))
(assert (= ($generated@@33 $generated@@45) $generated@@4))
(assert (= ($generated@@168 $generated@@45) $generated@@11))
(assert (= ($generated@@33 $generated@@44) $generated@@5))
(assert (= ($generated@@168 $generated@@44) $generated@@11))
(assert (= ($generated@@33 $generated@@48) $generated@@6))
(assert (= ($generated@@168 $generated@@48) $generated@@12))
(assert (= ($generated@@33 $generated@@37) $generated@@7))
(assert (= ($generated@@168 $generated@@37) $generated@@12))
(assert (= ($generated@@33 $generated@@51) $generated@@8))
(assert (= ($generated@@168 $generated@@51) $generated@@13))
(assert (= ($generated@@33 $generated@@41) $generated@@9))
(assert (= ($generated@@168 $generated@@41) $generated@@13))
(assert  (and (forall (($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@T) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ) (! (= ($generated@@169 $generated@@172 $generated@@173 $generated@@174 ($generated@@171 $generated@@172 $generated@@173 $generated@@174 $generated@@176 $generated@@177 $generated@@178 $generated@@175) $generated@@177 $generated@@178) $generated@@175)
 :weight 0
)) (and (forall (($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (or (= $generated@@184 $generated@@186) (= ($generated@@169 $generated@@179 $generated@@180 $generated@@181 ($generated@@171 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@184 $generated@@185 $generated@@182) $generated@@186 $generated@@187) ($generated@@169 $generated@@179 $generated@@180 $generated@@181 $generated@@183 $generated@@186 $generated@@187)))
 :weight 0
)) (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@194 $generated@@196) (= ($generated@@169 $generated@@188 $generated@@189 $generated@@190 ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@169 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)))))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (! (= ($generated@@21 ($generated@@169 $generated@@36 $generated@@66 $generated@@17 ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))  (=> (and (or (not (= $generated@@201 $generated@@197)) (not true)) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@198 $generated@@201) $generated@@199)))) ($generated@@62 $generated@@200 ($generated@@69 $generated@@36 $generated@@201))))
 :pattern ( ($generated@@169 $generated@@36 $generated@@66 $generated@@17 ($generated@@170 $generated@@197 $generated@@198 $generated@@199 $generated@@200) $generated@@201 $generated@@202))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (! ($generated@@43 $generated@@17 $generated@@204 $generated $generated@@203)
 :pattern ( ($generated@@43 $generated@@17 $generated@@204 $generated $generated@@203))
)))
(assert (forall (($generated@@205 T@U) ) (! ($generated@@35 $generated@@17 $generated@@205 $generated)
 :pattern ( ($generated@@35 $generated@@17 $generated@@205 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@212  (=> (and (= $generated@@206 ($generated@@170 $generated@@38 $generated@@207 $generated@@2 ($generated@@63 $generated@@64 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@208) $generated@@54)))) ($generated@@111 ($generated@@69 $generated@@36 $generated@@208) $generated@@41 $generated@@207)) (=> (and (and ($generated@@61 $generated@@207 $generated@@208) ($generated@@59 $generated@@207 $generated@@208)) (and ($generated@@60 $generated@@209) ($generated@@160 $generated@@209))) (=> (and (and (and (forall (($generated@@213 T@U) ) (!  (=> (and (or (not (= $generated@@213 $generated@@38)) (not true)) ($generated@@21 ($generated@@63 $generated@@17 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@213) $generated@@2)))) (or (= ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@209 $generated@@213) ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@213)) ($generated@@62 ($generated@@63 $generated@@64 ($generated@@65 $generated@@66 $generated@@67 ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@207 $generated@@208) $generated@@54)) ($generated@@69 $generated@@36 $generated@@213))))
 :pattern ( ($generated@@65 $generated@@36 ($generated@@68 $generated@@66 $generated@@67) $generated@@209 $generated@@213))
)) ($generated@@98 $generated@@207 $generated@@209)) (and ($generated@@35 $generated@@36 $generated@@210 $generated@@37) ($generated@@43 $generated@@36 $generated@@210 $generated@@37 $generated@@209))) (and (and ($generated@@111 ($generated@@69 $generated@@36 $generated@@208) $generated@@41 $generated@@209) ($generated@@61 $generated@@209 $generated@@208)) (and ($generated@@59 $generated@@209 $generated@@208) (= (ControlFlow 0 2) (- 0 1))))) ($generated@@43 $generated@@36 $generated@@208 $generated@@51 $generated@@207))))))
(let (($generated@@214  (=> (and (and (and ($generated@@60 $generated@@207) ($generated@@160 $generated@@207)) (and (or (not (= $generated@@208 $generated@@38)) (not true)) (and ($generated@@35 $generated@@36 $generated@@208 $generated@@51) ($generated@@43 $generated@@36 $generated@@208 $generated@@51 $generated@@207)))) (and (and ($generated@@35 $generated@@36 $generated@@211 $generated@@37) ($generated@@43 $generated@@36 $generated@@211 $generated@@37 $generated@@207)) (and (= 1 $generated@@58) (= (ControlFlow 0 3) 2)))) $generated@@212)))
$generated@@214)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
