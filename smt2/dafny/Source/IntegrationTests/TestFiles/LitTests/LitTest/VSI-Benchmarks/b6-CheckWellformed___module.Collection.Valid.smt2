(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U T@U) T@U)
(declare-fun $generated@@44 (T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@48 () T@T)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 (T@T T@T) T@T)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@76 (T@T T@U) T@U)
(declare-fun $generated@@79 (T@T T@U T@U) Bool)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@U) T@U)
(declare-fun $generated@@82 (T@U T@U) Bool)
(declare-fun $generated@@83 (T@U T@U) Bool)
(declare-fun $generated@@87 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@88 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@89 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@124 (T@U T@U T@U) Bool)
(declare-fun $generated@@129 (T@U) T@U)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@138 (T@U) Bool)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U T@U T@U) Bool)
(declare-fun $generated@@168 (T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert (= ($generated@@12 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37) ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
)))
(assert (forall (($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@40 $generated@@38 $generated@@41) ($generated@@31 $generated@@32 $generated@@40 $generated@@39 $generated@@41))
 :pattern ( ($generated@@31 $generated@@32 $generated@@40 $generated@@38 $generated@@41))
 :pattern ( ($generated@@31 $generated@@32 $generated@@40 $generated@@39 $generated@@41))
)))
(assert (= ($generated@@28 $generated@@42) 0))
(assert (= ($generated@@43 $generated@@6 $generated@@11) $generated@@42))
(assert ($generated@@44 $generated@@42))
(assert  (and (and (and (and (and (and (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
)) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@47 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@47 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@12 $generated@@48) 4)) (= ($generated@@12 $generated@@49) 5)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@12 ($generated@@50 $generated@@65 $generated@@66)) 6))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@50 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@50 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@50 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@50 $generated@@69 $generated@@70))
))))
(assert (forall (($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@72 ($generated@@34 $generated@@71) $generated@@73)  (or (= $generated@@72 $generated@@45) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@73 $generated@@72) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@72 ($generated@@34 $generated@@71) $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@74 $generated@@39 $generated@@75)  (or (= $generated@@74 $generated@@45) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@75 $generated@@74) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@74 $generated@@39 $generated@@75))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@T) ) (! (= ($generated@@76 $generated@@78 ($generated@@46 $generated@@78 $generated@@77)) $generated@@77)
 :pattern ( ($generated@@46 $generated@@78 $generated@@77))
)))
(assert (= ($generated@@12 $generated@@80) 7))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@79 $generated@@80 $generated@@84 ($generated@@81 $generated@@85)) (forall (($generated@@86 T@U) ) (!  (=> ($generated@@82 $generated@@84 $generated@@86) ($generated@@83 $generated@@86 $generated@@85))
 :pattern ( ($generated@@82 $generated@@84 $generated@@86))
)))
 :pattern ( ($generated@@79 $generated@@80 $generated@@84 ($generated@@81 $generated@@85)))
)))
(assert  (and (forall (($generated@@90 T@T) ($generated@@91 T@T) ($generated@@92 T@T) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@87 $generated@@90 $generated@@91 $generated@@92 ($generated@@89 $generated@@90 $generated@@91 $generated@@92 $generated@@94 $generated@@95 $generated@@96 $generated@@93) $generated@@95 $generated@@96) $generated@@93)
 :weight 0
)) (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ) (!  (or (= $generated@@102 $generated@@104) (= ($generated@@87 $generated@@97 $generated@@98 $generated@@99 ($generated@@89 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@104 $generated@@105) ($generated@@87 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@104 $generated@@105)))
 :weight 0
)) (forall (($generated@@106 T@T) ($generated@@107 T@T) ($generated@@108 T@T) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (!  (or (= $generated@@112 $generated@@114) (= ($generated@@87 $generated@@106 $generated@@107 $generated@@108 ($generated@@89 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@111 $generated@@112 $generated@@109) $generated@@113 $generated@@114) ($generated@@87 $generated@@106 $generated@@107 $generated@@108 $generated@@110 $generated@@113 $generated@@114)))
 :weight 0
)))))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (! (= ($generated@@17 ($generated@@87 $generated@@32 $generated@@48 $generated@@13 ($generated@@88 $generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119) $generated@@120 $generated@@121))  (=> (and (or (not (= $generated@@120 $generated@@115)) (not true)) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@116 $generated@@120) $generated@@117)))) (or (= $generated@@120 $generated@@118) ($generated@@82 $generated@@119 ($generated@@76 $generated@@32 $generated@@120)))))
 :pattern ( ($generated@@87 $generated@@32 $generated@@48 $generated@@13 ($generated@@88 $generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@119) $generated@@120 $generated@@121))
)))
(assert ($generated@@44 $generated@@2))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@79 $generated@@32 $generated@@123 ($generated@@33 $generated@@122))  (and ($generated@@79 $generated@@32 $generated@@123 ($generated@@34 $generated@@122)) (or (not (= $generated@@123 $generated@@45)) (not true))))
 :pattern ( ($generated@@79 $generated@@32 $generated@@123 ($generated@@33 $generated@@122)))
 :pattern ( ($generated@@79 $generated@@32 $generated@@123 ($generated@@34 $generated@@122)))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@124 ($generated@@76 $generated@@128 $generated@@125) $generated@@126 $generated@@127) ($generated@@31 $generated@@128 $generated@@125 $generated@@126 $generated@@127))
 :pattern ( ($generated@@124 ($generated@@76 $generated@@128 $generated@@125) $generated@@126 $generated@@127))
)))
(assert (forall (($generated@@130 T@U) ) (!  (and (= ($generated@@29 ($generated@@34 $generated@@130)) $generated@@7) (= ($generated@@129 ($generated@@34 $generated@@130)) $generated@@10))
 :pattern ( ($generated@@34 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (!  (and (= ($generated@@29 ($generated@@33 $generated@@131)) $generated@@8) (= ($generated@@129 ($generated@@33 $generated@@131)) $generated@@10))
 :pattern ( ($generated@@33 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@83 $generated@@132 $generated@@39) (and (= ($generated@@76 $generated@@32 ($generated@@46 $generated@@32 $generated@@132)) $generated@@132) ($generated@@79 $generated@@32 ($generated@@46 $generated@@32 $generated@@132) $generated@@39)))
 :pattern ( ($generated@@83 $generated@@132 $generated@@39))
)))
(assert (forall (($generated@@133 T@U) ) (!  (=> ($generated@@83 $generated@@133 $generated@@38) (and (= ($generated@@76 $generated@@32 ($generated@@46 $generated@@32 $generated@@133)) $generated@@133) ($generated@@79 $generated@@32 ($generated@@46 $generated@@32 $generated@@133) $generated@@38)))
 :pattern ( ($generated@@83 $generated@@133 $generated@@38))
)))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@79 $generated@@32 $generated@@136 ($generated@@34 $generated@@135))  (or (= $generated@@136 $generated@@45) (= ($generated@@134 $generated@@136) ($generated@@34 $generated@@135))))
 :pattern ( ($generated@@79 $generated@@32 $generated@@136 ($generated@@34 $generated@@135)))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@79 $generated@@32 $generated@@137 $generated@@38)  (and ($generated@@79 $generated@@32 $generated@@137 $generated@@39) (or (not (= $generated@@137 $generated@@45)) (not true))))
 :pattern ( ($generated@@79 $generated@@32 $generated@@137 $generated@@38))
 :pattern ( ($generated@@79 $generated@@32 $generated@@137 $generated@@39))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> (and ($generated@@138 $generated@@140) (and (or (not (= $generated@@141 $generated@@45)) (not true)) (= ($generated@@134 $generated@@141) ($generated@@34 $generated@@139)))) ($generated@@79 $generated@@80 ($generated@@46 $generated@@80 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@140 $generated@@141) $generated@@42)) ($generated@@81 $generated@@38)))
 :pattern ( ($generated@@46 $generated@@80 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@140 $generated@@141) $generated@@42)) ($generated@@34 $generated@@139))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and ($generated@@138 $generated@@143) (and (or (not (= $generated@@144 $generated@@45)) (not true)) (= ($generated@@134 $generated@@144) ($generated@@34 $generated@@142)))) ($generated@@17 ($generated@@46 $generated@@13 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@143 $generated@@144) $generated@@2)))) ($generated@@31 $generated@@80 ($generated@@46 $generated@@80 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@143 $generated@@144) $generated@@42)) ($generated@@81 $generated@@38) $generated@@143))
 :pattern ( ($generated@@46 $generated@@80 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@143 $generated@@144) $generated@@42)) ($generated@@34 $generated@@142))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (and (= ($generated@@145 ($generated@@43 $generated@@146 $generated@@147)) $generated@@146) (= ($generated@@30 ($generated@@43 $generated@@146 $generated@@147)) $generated@@147))
 :pattern ( ($generated@@43 $generated@@146 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@83 $generated@@148 $generated) (and (= ($generated@@76 $generated@@13 ($generated@@46 $generated@@13 $generated@@148)) $generated@@148) ($generated@@79 $generated@@13 ($generated@@46 $generated@@13 $generated@@148) $generated)))
 :pattern ( ($generated@@83 $generated@@148 $generated))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@83 ($generated@@76 $generated@@151 $generated@@149) $generated@@150) ($generated@@79 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@83 ($generated@@76 $generated@@151 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@31 $generated@@80 $generated@@152 ($generated@@81 $generated@@153) $generated@@154) (forall (($generated@@155 T@U) ) (!  (=> ($generated@@82 $generated@@152 $generated@@155) ($generated@@124 $generated@@155 $generated@@153 $generated@@154))
 :pattern ( ($generated@@82 $generated@@152 $generated@@155))
)))
 :pattern ( ($generated@@31 $generated@@80 $generated@@152 ($generated@@81 $generated@@153) $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! ($generated@@79 $generated@@32 $generated@@156 $generated@@39)
 :pattern ( ($generated@@79 $generated@@32 $generated@@156 $generated@@39))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@81 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@81 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@29 ($generated@@81 $generated@@159)) $generated@@1)
 :pattern ( ($generated@@81 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@34 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@34 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@33 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@33 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@46 $generated@@165 ($generated@@76 $generated@@165 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@76 $generated@@165 $generated@@164))
)))
(assert  (=> (<= 0 $generated@@166) (forall (($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (or ($generated@@168 $generated@@169 $generated@@170 $generated@@171) (and (< 0 $generated@@166) (and ($generated@@138 $generated@@170) (and (or (not (= $generated@@171 $generated@@45)) (not true)) (and ($generated@@79 $generated@@32 $generated@@171 ($generated@@33 $generated@@169)) ($generated@@31 $generated@@32 $generated@@171 ($generated@@33 $generated@@169) $generated@@170)))))) (= ($generated@@167 $generated@@169 $generated@@170 $generated@@171) ($generated@@82 ($generated@@46 $generated@@80 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@170 $generated@@171) $generated@@42)) ($generated@@76 $generated@@32 $generated@@171))))
 :pattern ( ($generated@@167 $generated@@169 $generated@@170 $generated@@171) ($generated@@138 $generated@@170))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> ($generated@@83 $generated@@172 ($generated@@81 $generated@@173)) (and (= ($generated@@76 $generated@@80 ($generated@@46 $generated@@80 $generated@@172)) $generated@@172) ($generated@@79 $generated@@80 ($generated@@46 $generated@@80 $generated@@172) ($generated@@81 $generated@@173))))
 :pattern ( ($generated@@83 $generated@@172 ($generated@@81 $generated@@173)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> ($generated@@83 $generated@@175 ($generated@@34 $generated@@174)) (and (= ($generated@@76 $generated@@32 ($generated@@46 $generated@@32 $generated@@175)) $generated@@175) ($generated@@79 $generated@@32 ($generated@@46 $generated@@32 $generated@@175) ($generated@@34 $generated@@174))))
 :pattern ( ($generated@@83 $generated@@175 ($generated@@34 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@83 $generated@@177 ($generated@@33 $generated@@176)) (and (= ($generated@@76 $generated@@32 ($generated@@46 $generated@@32 $generated@@177)) $generated@@177) ($generated@@79 $generated@@32 ($generated@@46 $generated@@32 $generated@@177) ($generated@@33 $generated@@176))))
 :pattern ( ($generated@@83 $generated@@177 ($generated@@33 $generated@@176)))
)))
(assert (= ($generated@@29 $generated@@39) $generated@@4))
(assert (= ($generated@@129 $generated@@39) $generated@@9))
(assert (= ($generated@@29 $generated@@38) $generated@@5))
(assert (= ($generated@@129 $generated@@38) $generated@@9))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! ($generated@@31 $generated@@13 $generated@@179 $generated $generated@@178)
 :pattern ( ($generated@@31 $generated@@13 $generated@@179 $generated $generated@@178))
)))
(assert (forall (($generated@@180 T@U) ) (! ($generated@@79 $generated@@13 $generated@@180 $generated)
 :pattern ( ($generated@@79 $generated@@13 $generated@@180 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@188  (=> (and (and (= $generated@@181 ($generated@@17 ($generated@@87 $generated@@32 $generated@@48 $generated@@13 $generated@@182 $generated@@183 $generated@@42))) (= ($generated@@167 $generated@@184 $generated@@185 $generated@@183) ($generated@@82 ($generated@@46 $generated@@80 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@185 $generated@@183) $generated@@42)) ($generated@@76 $generated@@32 $generated@@183)))) (and ($generated@@79 $generated@@13 ($generated@@16 ($generated@@167 $generated@@184 $generated@@185 $generated@@183)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@181)))
(let (($generated@@189 true))
(let (($generated@@190  (=> (and (= $generated@@182 ($generated@@88 $generated@@45 $generated@@185 $generated@@2 $generated@@183 ($generated@@46 $generated@@80 ($generated@@47 $generated@@48 $generated@@49 ($generated@@47 $generated@@32 ($generated@@50 $generated@@48 $generated@@49) $generated@@185 $generated@@183) $generated@@42)))) (= $generated@@186 ($generated@@17 ($generated@@87 $generated@@32 $generated@@48 $generated@@13 $generated@@182 $generated@@183 $generated@@42)))) (and (=> (= (ControlFlow 0 4) (- 0 5)) $generated@@186) (=> $generated@@186 (and (=> (= (ControlFlow 0 4) 1) $generated@@189) (=> (= (ControlFlow 0 4) 3) $generated@@188)))))))
(let (($generated@@191  (=> (and ($generated@@138 $generated@@185) ($generated@@187 $generated@@185)) (=> (and (and (or (not (= $generated@@183 $generated@@45)) (not true)) (and ($generated@@79 $generated@@32 $generated@@183 ($generated@@33 $generated@@184)) ($generated@@31 $generated@@32 $generated@@183 ($generated@@33 $generated@@184) $generated@@185))) (and (= 0 $generated@@166) (= (ControlFlow 0 6) 4))) $generated@@190))))
$generated@@191)))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
