(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 (T@T) Int)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 (Bool) T@U)
(declare-fun $generated@@19 (T@U) Bool)
(declare-fun $generated@@20 (Int) T@U)
(declare-fun $generated@@21 (T@U) Int)
(declare-fun $generated@@22 (Real) T@U)
(declare-fun $generated@@23 (T@U) Real)
(declare-fun $generated@@30 (T@U) Int)
(declare-fun $generated@@31 (T@U) T@U)
(declare-fun $generated@@32 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) T@U)
(declare-fun $generated@@42 (T@U) Int)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@U T@U) T@U)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@52 (T@T T@U) T@U)
(declare-fun $generated@@53 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 () T@T)
(declare-fun $generated@@56 (T@T T@T) T@T)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@83 (Int) Int)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U) T@U)
(declare-fun $generated@@91 (T@T T@U T@U) Bool)
(declare-fun $generated@@92 () T@T)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@94 (T@U T@U) Bool)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U T@U T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@111 () T@T)
(declare-fun $generated@@112 (T@U) Bool)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@142 (T@U Int) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@159 () Int)
(declare-fun $generated@@160 (T@U T@U T@U) Bool)
(declare-fun $generated@@161 (T@U T@U T@U) Bool)
(declare-fun $generated@@165 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@166 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@167 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@14 $generated@@15) 0) (= ($generated@@14 $generated@@16) 1)) (= ($generated@@14 $generated@@17) 2)) (forall (($generated@@24 Bool) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Int) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Real) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13)
)
(assert (= ($generated@@30 $generated@@1) 0))
(assert (= ($generated@@31 $generated@@1) $generated@@2))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! ($generated@@32 $generated@@16 $generated@@34 $generated@@33 $generated@@35)
 :pattern ( ($generated@@32 $generated@@16 $generated@@34 $generated@@33 $generated@@35))
)))
(assert (= ($generated@@14 $generated@@36) 3))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@40 ($generated@@37 $generated@@39) $generated@@41) ($generated@@32 $generated@@36 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
 :pattern ( ($generated@@32 $generated@@36 $generated@@40 ($generated@@37 $generated@@39) $generated@@41))
 :pattern ( ($generated@@32 $generated@@36 $generated@@40 ($generated@@38 $generated@@39) $generated@@41))
)))
(assert (= ($generated@@42 $generated@@43) 0))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@46 $generated@@44 $generated@@47) ($generated@@32 $generated@@36 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@32 $generated@@36 $generated@@46 $generated@@44 $generated@@47))
 :pattern ( ($generated@@32 $generated@@36 $generated@@46 $generated@@45 $generated@@47))
)))
(assert (= ($generated@@30 $generated@@48) 0))
(assert (= ($generated@@49 $generated@@6 $generated@@12) $generated@@48))
(assert ($generated@@50 $generated@@48))
(assert  (and (and (and (and (and (and (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@53 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@53 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@53 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@14 $generated@@54) 4)) (= ($generated@@14 $generated@@55) 5)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@14 ($generated@@56 $generated@@71 $generated@@72)) 6))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@56 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@56 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@56 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@56 $generated@@75 $generated@@76))
))))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@78 ($generated@@38 $generated@@77) $generated@@79)  (or (= $generated@@78 $generated@@51) ($generated@@19 ($generated@@52 $generated@@15 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@79 $generated@@78) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@78 ($generated@@38 $generated@@77) $generated@@79))
)))
(assert (= ($generated@@30 $generated@@80) 0))
(assert (= ($generated@@49 $generated@@6 $generated@@13) $generated@@80))
(assert  (not ($generated@@50 $generated@@80)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ) (! (= ($generated@@32 $generated@@36 $generated@@81 $generated@@45 $generated@@82)  (or (= $generated@@81 $generated@@51) ($generated@@19 ($generated@@52 $generated@@15 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@82 $generated@@81) $generated@@1)))))
 :pattern ( ($generated@@32 $generated@@36 $generated@@81 $generated@@45 $generated@@82))
)))
(assert (forall (($generated@@84 Int) ) (! (= ($generated@@83 $generated@@84) $generated@@84)
 :pattern ( ($generated@@83 $generated@@84))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 $generated@@86) $generated@@86)
 :pattern ( ($generated@@85 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@T) ) (! (= ($generated@@88 $generated@@90 ($generated@@52 $generated@@90 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@52 $generated@@90 $generated@@89))
)))
(assert (= ($generated@@14 $generated@@92) 7))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@91 $generated@@92 $generated@@96 ($generated@@93 $generated@@97)) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@94 $generated@@96 $generated@@98) ($generated@@95 $generated@@98 $generated@@97))
 :pattern ( ($generated@@94 $generated@@96 $generated@@98))
)))
 :pattern ( ($generated@@91 $generated@@92 $generated@@96 ($generated@@93 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ) (! (= ($generated@@91 $generated@@16 $generated@@99 $generated@@33) (<= ($generated@@83 0) ($generated@@21 $generated@@99)))
 :pattern ( ($generated@@91 $generated@@16 $generated@@99 $generated@@33))
)))
(assert ($generated@@50 $generated@@1))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@91 $generated@@36 $generated@@101 ($generated@@37 $generated@@100))  (and ($generated@@91 $generated@@36 $generated@@101 ($generated@@38 $generated@@100)) (or (not (= $generated@@101 $generated@@51)) (not true))))
 :pattern ( ($generated@@91 $generated@@36 $generated@@101 ($generated@@37 $generated@@100)))
 :pattern ( ($generated@@91 $generated@@36 $generated@@101 ($generated@@38 $generated@@100)))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@102 ($generated@@88 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@32 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@102 ($generated@@88 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@109 T@U) ) (!  (and (= ($generated@@107 ($generated@@38 $generated@@109)) $generated@@7) (= ($generated@@108 ($generated@@38 $generated@@109)) $generated@@11))
 :pattern ( ($generated@@38 $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@107 ($generated@@37 $generated@@110)) $generated@@8) (= ($generated@@108 ($generated@@37 $generated@@110)) $generated@@11))
 :pattern ( ($generated@@37 $generated@@110))
)))
(assert (= ($generated@@14 $generated@@111) 8))
(assert (forall (($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@116) (and (or (not (= $generated@@117 $generated@@51)) (not true)) (= ($generated@@113 $generated@@117) ($generated@@38 $generated@@115)))) ($generated@@19 ($generated@@52 $generated@@15 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@116 $generated@@117) $generated@@1)))) ($generated@@32 $generated@@111 ($generated@@52 $generated@@111 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@116 $generated@@117) $generated@@80)) ($generated@@114 $generated@@115) $generated@@116))
 :pattern ( ($generated@@52 $generated@@111 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@116 $generated@@117) $generated@@80)) ($generated@@38 $generated@@115))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@95 $generated@@118 $generated@@33) (and (= ($generated@@88 $generated@@16 ($generated@@52 $generated@@16 $generated@@118)) $generated@@118) ($generated@@91 $generated@@16 ($generated@@52 $generated@@16 $generated@@118) $generated@@33)))
 :pattern ( ($generated@@95 $generated@@118 $generated@@33))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@95 $generated@@119 $generated@@45) (and (= ($generated@@88 $generated@@36 ($generated@@52 $generated@@36 $generated@@119)) $generated@@119) ($generated@@91 $generated@@36 ($generated@@52 $generated@@36 $generated@@119) $generated@@45)))
 :pattern ( ($generated@@95 $generated@@119 $generated@@45))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@95 $generated@@120 $generated@@44) (and (= ($generated@@88 $generated@@36 ($generated@@52 $generated@@36 $generated@@120)) $generated@@120) ($generated@@91 $generated@@36 ($generated@@52 $generated@@36 $generated@@120) $generated@@44)))
 :pattern ( ($generated@@95 $generated@@120 $generated@@44))
)))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@91 $generated@@36 $generated@@122 ($generated@@38 $generated@@121))  (or (= $generated@@122 $generated@@51) (= ($generated@@113 $generated@@122) ($generated@@38 $generated@@121))))
 :pattern ( ($generated@@91 $generated@@36 $generated@@122 ($generated@@38 $generated@@121)))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@91 $generated@@36 $generated@@123 $generated@@44)  (and ($generated@@91 $generated@@36 $generated@@123 $generated@@45) (or (not (= $generated@@123 $generated@@51)) (not true))))
 :pattern ( ($generated@@91 $generated@@36 $generated@@123 $generated@@44))
 :pattern ( ($generated@@91 $generated@@36 $generated@@123 $generated@@45))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> (and ($generated@@112 $generated@@125) (and (or (not (= $generated@@126 $generated@@51)) (not true)) (= ($generated@@113 $generated@@126) ($generated@@38 $generated@@124)))) ($generated@@91 $generated@@92 ($generated@@52 $generated@@92 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@125 $generated@@126) $generated@@48)) ($generated@@93 $generated@@44)))
 :pattern ( ($generated@@52 $generated@@92 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@125 $generated@@126) $generated@@48)) ($generated@@38 $generated@@124))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ) (!  (=> (and (and ($generated@@112 $generated@@128) (and (or (not (= $generated@@129 $generated@@51)) (not true)) (= ($generated@@113 $generated@@129) ($generated@@38 $generated@@127)))) ($generated@@19 ($generated@@52 $generated@@15 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@128 $generated@@129) $generated@@1)))) ($generated@@32 $generated@@92 ($generated@@52 $generated@@92 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@128 $generated@@129) $generated@@48)) ($generated@@93 $generated@@44) $generated@@128))
 :pattern ( ($generated@@52 $generated@@92 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@128 $generated@@129) $generated@@48)) ($generated@@38 $generated@@127))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (!  (and (= ($generated@@130 ($generated@@49 $generated@@131 $generated@@132)) $generated@@131) (= ($generated@@31 ($generated@@49 $generated@@131 $generated@@132)) $generated@@132))
 :pattern ( ($generated@@49 $generated@@131 $generated@@132))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@95 ($generated@@88 $generated@@135 $generated@@133) $generated@@134) ($generated@@91 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@95 ($generated@@88 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@42 $generated@@136))
 :pattern ( ($generated@@42 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@32 $generated@@92 $generated@@137 ($generated@@93 $generated@@138) $generated@@139) (forall (($generated@@140 T@U) ) (!  (=> ($generated@@94 $generated@@137 $generated@@140) ($generated@@102 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@94 $generated@@137 $generated@@140))
)))
 :pattern ( ($generated@@32 $generated@@92 $generated@@137 ($generated@@93 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@91 $generated@@36 $generated@@141 $generated@@45)
 :pattern ( ($generated@@91 $generated@@36 $generated@@141 $generated@@45))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@32 $generated@@111 $generated@@143 ($generated@@114 $generated@@144) $generated@@145) (forall (($generated@@146 Int) ) (!  (=> (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@42 $generated@@143))) ($generated@@102 ($generated@@142 $generated@@143 $generated@@146) $generated@@144 $generated@@145))
 :pattern ( ($generated@@142 $generated@@143 $generated@@146))
)))
 :pattern ( ($generated@@32 $generated@@111 $generated@@143 ($generated@@114 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@147 ($generated@@93 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@93 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@107 ($generated@@93 $generated@@149)) $generated)
 :pattern ( ($generated@@93 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@114 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@114 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@107 ($generated@@114 $generated@@152)) $generated@@0)
 :pattern ( ($generated@@114 $generated@@152))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@153 ($generated@@38 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@38 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@37 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@37 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@T) ) (! (= ($generated@@52 $generated@@158 ($generated@@88 $generated@@158 $generated@@157)) $generated@@157)
 :pattern ( ($generated@@88 $generated@@158 $generated@@157))
)))
(assert  (=> (<= 0 $generated@@159) (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> (or ($generated@@161 $generated@@162 $generated@@163 $generated@@164) (and (< 0 $generated@@159) (and ($generated@@112 $generated@@163) (and (or (not (= $generated@@164 $generated@@51)) (not true)) (and ($generated@@91 $generated@@36 $generated@@164 ($generated@@37 $generated@@162)) ($generated@@32 $generated@@36 $generated@@164 ($generated@@37 $generated@@162) $generated@@163)))))) (= ($generated@@160 $generated@@162 $generated@@163 $generated@@164) ($generated@@94 ($generated@@52 $generated@@92 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@163 $generated@@164) $generated@@48)) ($generated@@88 $generated@@36 $generated@@164))))
 :pattern ( ($generated@@160 $generated@@162 $generated@@163 $generated@@164) ($generated@@112 $generated@@163))
))))
(assert  (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@165 $generated@@168 $generated@@169 $generated@@170 ($generated@@167 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@173 $generated@@174) $generated@@171)
 :weight 0
)) (and (forall (($generated@@175 T@T) ($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (or (= $generated@@180 $generated@@182) (= ($generated@@165 $generated@@175 $generated@@176 $generated@@177 ($generated@@167 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@180 $generated@@181 $generated@@178) $generated@@182 $generated@@183) ($generated@@165 $generated@@175 $generated@@176 $generated@@177 $generated@@179 $generated@@182 $generated@@183)))
 :weight 0
)) (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@190 $generated@@192) (= ($generated@@165 $generated@@184 $generated@@185 $generated@@186 ($generated@@167 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@165 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)))))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 Bool) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@19 ($generated@@165 $generated@@36 $generated@@54 $generated@@15 ($generated@@166 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))  (=> (and (or (not (= $generated@@197 $generated@@193)) (not true)) ($generated@@19 ($generated@@52 $generated@@15 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@194 $generated@@197) $generated@@195)))) $generated@@196))
 :pattern ( ($generated@@165 $generated@@36 $generated@@54 $generated@@15 ($generated@@166 $generated@@193 $generated@@194 $generated@@195 $generated@@196) $generated@@197 $generated@@198))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (=> (and ($generated@@112 $generated@@200) (and (or (not (= $generated@@201 $generated@@51)) (not true)) (= ($generated@@113 $generated@@201) ($generated@@38 $generated@@199)))) ($generated@@91 $generated@@111 ($generated@@52 $generated@@111 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@200 $generated@@201) $generated@@80)) ($generated@@114 $generated@@199)))
 :pattern ( ($generated@@52 $generated@@111 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@200 $generated@@201) $generated@@80)) ($generated@@38 $generated@@199))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (!  (=> ($generated@@95 $generated@@202 ($generated@@93 $generated@@203)) (and (= ($generated@@88 $generated@@92 ($generated@@52 $generated@@92 $generated@@202)) $generated@@202) ($generated@@91 $generated@@92 ($generated@@52 $generated@@92 $generated@@202) ($generated@@93 $generated@@203))))
 :pattern ( ($generated@@95 $generated@@202 ($generated@@93 $generated@@203)))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (!  (=> ($generated@@95 $generated@@204 ($generated@@114 $generated@@205)) (and (= ($generated@@88 $generated@@111 ($generated@@52 $generated@@111 $generated@@204)) $generated@@204) ($generated@@91 $generated@@111 ($generated@@52 $generated@@111 $generated@@204) ($generated@@114 $generated@@205))))
 :pattern ( ($generated@@95 $generated@@204 ($generated@@114 $generated@@205)))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (!  (=> ($generated@@95 $generated@@207 ($generated@@38 $generated@@206)) (and (= ($generated@@88 $generated@@36 ($generated@@52 $generated@@36 $generated@@207)) $generated@@207) ($generated@@91 $generated@@36 ($generated@@52 $generated@@36 $generated@@207) ($generated@@38 $generated@@206))))
 :pattern ( ($generated@@95 $generated@@207 ($generated@@38 $generated@@206)))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (!  (=> ($generated@@95 $generated@@209 ($generated@@37 $generated@@208)) (and (= ($generated@@88 $generated@@36 ($generated@@52 $generated@@36 $generated@@209)) $generated@@209) ($generated@@91 $generated@@36 ($generated@@52 $generated@@36 $generated@@209) ($generated@@37 $generated@@208))))
 :pattern ( ($generated@@95 $generated@@209 ($generated@@37 $generated@@208)))
)))
(assert (= ($generated@@107 $generated@@33) $generated@@3))
(assert (= ($generated@@108 $generated@@33) $generated@@9))
(assert (= ($generated@@107 $generated@@45) $generated@@4))
(assert (= ($generated@@108 $generated@@45) $generated@@10))
(assert (= ($generated@@107 $generated@@44) $generated@@5))
(assert (= ($generated@@108 $generated@@44) $generated@@10))
(assert (forall (($generated@@210 Int) ) (! (= ($generated@@88 $generated@@16 ($generated@@20 ($generated@@83 $generated@@210))) ($generated@@85 $generated@@55 ($generated@@88 $generated@@16 ($generated@@20 $generated@@210))))
 :pattern ( ($generated@@88 $generated@@16 ($generated@@20 ($generated@@83 $generated@@210))))
)))
(assert (forall (($generated@@211 T@U) ($generated@@212 T@T) ) (! (= ($generated@@88 $generated@@212 ($generated@@85 $generated@@212 $generated@@211)) ($generated@@85 $generated@@55 ($generated@@88 $generated@@212 $generated@@211)))
 :pattern ( ($generated@@88 $generated@@212 ($generated@@85 $generated@@212 $generated@@211)))
)))
(assert (forall (($generated@@213 T@U) ) (!  (=> (= ($generated@@42 $generated@@213) 0) (= $generated@@213 $generated@@43))
 :pattern ( ($generated@@42 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (! (= ($generated@@91 $generated@@111 $generated@@214 ($generated@@114 $generated@@215)) (forall (($generated@@216 Int) ) (!  (=> (and (<= 0 $generated@@216) (< $generated@@216 ($generated@@42 $generated@@214))) ($generated@@95 ($generated@@142 $generated@@214 $generated@@216) $generated@@215))
 :pattern ( ($generated@@142 $generated@@214 $generated@@216))
)))
 :pattern ( ($generated@@91 $generated@@111 $generated@@214 ($generated@@114 $generated@@215)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@217 () T@U)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 () T@U)
(declare-fun $generated@@220 (T@U) Bool)
(declare-fun $generated@@221 () T@U)
(declare-fun $generated@@222 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@223  (=> (and (= $generated@@217 ($generated@@166 $generated@@51 $generated@@218 $generated@@1 false)) (= (ControlFlow 0 2) (- 0 1))) ($generated@@91 $generated@@16 ($generated@@20 ($generated@@42 ($generated@@52 $generated@@111 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@218 $generated@@219) $generated@@80)))) $generated@@33))))
(let (($generated@@224  (=> (and ($generated@@112 $generated@@218) ($generated@@220 $generated@@218)) (=> (and (and (and (or (not (= $generated@@219 $generated@@51)) (not true)) (and ($generated@@91 $generated@@36 $generated@@219 ($generated@@37 $generated@@221)) ($generated@@32 $generated@@36 $generated@@219 ($generated@@37 $generated@@221) $generated@@218))) (and (<= ($generated@@83 0) $generated@@222) (= 1 $generated@@159))) (and (and ($generated@@161 $generated@@221 $generated@@218 $generated@@219) (and ($generated@@160 $generated@@221 $generated@@218 $generated@@219) ($generated@@94 ($generated@@52 $generated@@92 ($generated@@53 $generated@@54 $generated@@55 ($generated@@53 $generated@@36 ($generated@@56 $generated@@54 $generated@@55) $generated@@218 $generated@@219) $generated@@48)) ($generated@@88 $generated@@36 $generated@@219)))) (= (ControlFlow 0 3) 2))) $generated@@223))))
$generated@@224)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
