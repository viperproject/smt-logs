(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Int)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@T T@U T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@U) T@U)
(declare-fun $generated@@45 (T@U Int) T@U)
(declare-fun $generated@@46 (T@U T@U) T@U)
(declare-fun $generated@@47 (T@U Int) T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 (T@T T@U) T@U)
(declare-fun $generated@@55 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@56 () T@T)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@T T@T) T@T)
(declare-fun $generated@@59 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@60 (T@T) T@T)
(declare-fun $generated@@61 (T@T) T@T)
(declare-fun $generated@@82 () T@U)
(declare-fun $generated@@83 (T@U T@U) T@U)
(declare-fun $generated@@84 (T@U) Bool)
(declare-fun $generated@@87 (T@U T@U) Bool)
(declare-fun $generated@@93 (Int) Int)
(declare-fun $generated@@95 (T@T T@U) T@U)
(declare-fun $generated@@98 (T@U Int) T@U)
(declare-fun $generated@@104 (T@U T@U) Bool)
(declare-fun $generated@@108 (T@T T@U) T@U)
(declare-fun $generated@@113 (T@U T@U T@U) Bool)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) Bool)
(declare-fun $generated@@135 (T@U) T@U)
(declare-fun $generated@@139 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U) Bool)
(declare-fun $generated@@188 (T@U) T@U)
(declare-fun $generated@@200 (T@U) T@U)
(declare-fun $generated@@203 (T@U) T@U)
(declare-fun $generated@@205 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert (= ($generated@@12 $generated@@32) 3))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37) ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@33 $generated@@35) $generated@@37))
 :pattern ( ($generated@@31 $generated@@32 $generated@@36 ($generated@@34 $generated@@35) $generated@@37))
)))
(assert (= ($generated@@38 $generated@@39) 0))
(assert (forall (($generated@@44 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@44 $generated@@41)  (or (= $generated@@44 $generated@@42) (= ($generated@@43 $generated@@44) $generated@@41)))
 :pattern ( ($generated@@40 $generated@@32 $generated@@44 $generated@@41))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 Int) ) (!  (=> (= $generated@@50 ($generated@@38 $generated@@48)) (and (= ($generated@@45 ($generated@@46 $generated@@48 $generated@@49) $generated@@50) $generated@@48) (= ($generated@@47 ($generated@@46 $generated@@48 $generated@@49) $generated@@50) $generated@@49)))
 :pattern ( ($generated@@45 ($generated@@46 $generated@@48 $generated@@49) $generated@@50))
 :pattern ( ($generated@@47 ($generated@@46 $generated@@48 $generated@@49) $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@52 $generated@@51 $generated@@53) ($generated@@31 $generated@@32 $generated@@52 $generated@@41 $generated@@53))
 :pattern ( ($generated@@31 $generated@@32 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@31 $generated@@32 $generated@@52 $generated@@41 $generated@@53))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@62 T@T) ($generated@@63 T@T) ($generated@@64 T@U) ($generated@@65 T@U) ($generated@@66 T@U) ) (! (= ($generated@@55 $generated@@62 $generated@@63 ($generated@@59 $generated@@62 $generated@@63 $generated@@65 $generated@@66 $generated@@64) $generated@@66) $generated@@64)
 :weight 0
)) (forall (($generated@@67 T@T) ($generated@@68 T@T) ($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (or (= $generated@@71 $generated@@72) (= ($generated@@55 $generated@@67 $generated@@68 ($generated@@59 $generated@@67 $generated@@68 $generated@@70 $generated@@71 $generated@@69) $generated@@72) ($generated@@55 $generated@@67 $generated@@68 $generated@@70 $generated@@72)))
 :weight 0
))) (= ($generated@@12 $generated@@56) 4)) (= ($generated@@12 $generated@@57) 5)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (= ($generated@@12 ($generated@@58 $generated@@73 $generated@@74)) 6))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@60 ($generated@@58 $generated@@75 $generated@@76)) $generated@@75)
 :pattern ( ($generated@@58 $generated@@75 $generated@@76))
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ) (! (= ($generated@@61 ($generated@@58 $generated@@77 $generated@@78)) $generated@@78)
 :pattern ( ($generated@@58 $generated@@77 $generated@@78))
))))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@80 ($generated@@34 $generated@@79) $generated@@81)  (or (= $generated@@80 $generated@@42) ($generated@@17 ($generated@@54 $generated@@13 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@81 $generated@@80) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@80 ($generated@@34 $generated@@79) $generated@@81))
)))
(assert (= ($generated@@28 $generated@@82) 0))
(assert (= ($generated@@83 $generated@@4 $generated@@11) $generated@@82))
(assert  (not ($generated@@84 $generated@@82)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@85 $generated@@41 $generated@@86)  (or (= $generated@@85 $generated@@42) ($generated@@17 ($generated@@54 $generated@@13 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@86 $generated@@85) $generated@@2)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@85 $generated@@41 $generated@@86))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> ($generated@@87 $generated@@88 $generated@@89) (forall (($generated@@90 T@U) ) (!  (=> ($generated@@17 ($generated@@54 $generated@@13 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@88 $generated@@90) $generated@@2))) ($generated@@17 ($generated@@54 $generated@@13 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@89 $generated@@90) $generated@@2))))
 :pattern ( ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@89 $generated@@90) $generated@@2))
)))
 :pattern ( ($generated@@87 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 Int) ) (!  (=> (= $generated@@92 0) (= ($generated@@47 $generated@@91 $generated@@92) $generated@@91))
 :pattern ( ($generated@@47 $generated@@91 $generated@@92))
)))
(assert (forall (($generated@@94 Int) ) (! (= ($generated@@93 $generated@@94) $generated@@94)
 :pattern ( ($generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@T) ) (! (= ($generated@@95 $generated@@97 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@97 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 Int) ($generated@@101 Int) ) (!  (=> (and (and (<= 0 $generated@@101) (< $generated@@101 $generated@@100)) (< $generated@@101 ($generated@@38 $generated@@99))) (= ($generated@@98 ($generated@@45 $generated@@99 $generated@@100) $generated@@101) ($generated@@98 $generated@@99 $generated@@101)))
 :weight 25
 :pattern ( ($generated@@98 ($generated@@45 $generated@@99 $generated@@100) $generated@@101))
 :pattern ( ($generated@@98 $generated@@99 $generated@@101) ($generated@@45 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 Int) ) (!  (=> (and (<= 0 $generated@@103) (<= $generated@@103 ($generated@@38 $generated@@102))) (= ($generated@@38 ($generated@@47 $generated@@102 $generated@@103)) (- ($generated@@38 $generated@@102) $generated@@103)))
 :pattern ( ($generated@@38 ($generated@@47 $generated@@102 $generated@@103)))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ) (! (= ($generated@@104 $generated@@105 $generated@@106)  (and (= ($generated@@38 $generated@@105) ($generated@@38 $generated@@106)) (forall (($generated@@107 Int) ) (!  (=> (and (<= 0 $generated@@107) (< $generated@@107 ($generated@@38 $generated@@105))) (= ($generated@@98 $generated@@105 $generated@@107) ($generated@@98 $generated@@106 $generated@@107)))
 :pattern ( ($generated@@98 $generated@@105 $generated@@107))
 :pattern ( ($generated@@98 $generated@@106 $generated@@107))
))))
 :pattern ( ($generated@@104 $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@T) ) (! (= ($generated@@108 $generated@@110 ($generated@@54 $generated@@110 $generated@@109)) $generated@@109)
 :pattern ( ($generated@@54 $generated@@110 $generated@@109))
)))
(assert ($generated@@84 $generated@@2))
(assert (forall (($generated@@111 T@U) ($generated@@112 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@112 ($generated@@33 $generated@@111))  (and ($generated@@40 $generated@@32 $generated@@112 ($generated@@34 $generated@@111)) (or (not (= $generated@@112 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@112 ($generated@@33 $generated@@111)))
 :pattern ( ($generated@@40 $generated@@32 $generated@@112 ($generated@@34 $generated@@111)))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@T) ) (! (= ($generated@@113 ($generated@@108 $generated@@117 $generated@@114) $generated@@115 $generated@@116) ($generated@@31 $generated@@117 $generated@@114 $generated@@115 $generated@@116))
 :pattern ( ($generated@@113 ($generated@@108 $generated@@117 $generated@@114) $generated@@115 $generated@@116))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@87 $generated@@118 $generated@@119) (=> ($generated@@113 $generated@@120 $generated@@121 $generated@@118) ($generated@@113 $generated@@120 $generated@@121 $generated@@119)))
 :pattern ( ($generated@@87 $generated@@118 $generated@@119) ($generated@@113 $generated@@120 $generated@@121 $generated@@118))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@T) ) (!  (=> ($generated@@87 $generated@@122 $generated@@123) (=> ($generated@@31 $generated@@126 $generated@@124 $generated@@125 $generated@@122) ($generated@@31 $generated@@126 $generated@@124 $generated@@125 $generated@@123)))
 :pattern ( ($generated@@87 $generated@@122 $generated@@123) ($generated@@31 $generated@@126 $generated@@124 $generated@@125 $generated@@122))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 Int) ($generated@@129 Int) ) (!  (=> (and (and (<= 0 $generated@@128) (<= 0 $generated@@129)) (< $generated@@129 (- ($generated@@38 $generated@@127) $generated@@128))) (= ($generated@@98 ($generated@@47 $generated@@127 $generated@@128) $generated@@129) ($generated@@98 $generated@@127 (+ $generated@@129 $generated@@128))))
 :weight 25
 :pattern ( ($generated@@98 ($generated@@47 $generated@@127 $generated@@128) $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ) (!  (and (= ($generated@@29 ($generated@@34 $generated@@131)) $generated@@5) (= ($generated@@130 ($generated@@34 $generated@@131)) $generated@@9))
 :pattern ( ($generated@@34 $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ) (!  (and (= ($generated@@29 ($generated@@33 $generated@@132)) $generated@@6) (= ($generated@@130 ($generated@@33 $generated@@132)) $generated@@9))
 :pattern ( ($generated@@33 $generated@@132))
)))
(assert (= ($generated@@12 $generated@@133) 7))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (!  (=> (and (and ($generated@@134 $generated@@137) (and (or (not (= $generated@@138 $generated@@42)) (not true)) (= ($generated@@43 $generated@@138) ($generated@@34 $generated@@136)))) ($generated@@17 ($generated@@54 $generated@@13 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@137 $generated@@138) $generated@@2)))) ($generated@@31 $generated@@133 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@137 $generated@@138) $generated@@82)) ($generated@@135 $generated@@136) $generated@@137))
 :pattern ( ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@137 $generated@@138) $generated@@82)) ($generated@@34 $generated@@136))
)))
(assert  (and (forall (($generated@@142 T@T) ($generated@@143 T@T) ($generated@@144 T@T) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@139 $generated@@142 $generated@@143 $generated@@144 ($generated@@141 $generated@@142 $generated@@143 $generated@@144 $generated@@146 $generated@@147 $generated@@148 $generated@@145) $generated@@147 $generated@@148) $generated@@145)
 :weight 0
)) (and (forall (($generated@@149 T@T) ($generated@@150 T@T) ($generated@@151 T@T) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (or (= $generated@@154 $generated@@156) (= ($generated@@139 $generated@@149 $generated@@150 $generated@@151 ($generated@@141 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@154 $generated@@155 $generated@@152) $generated@@156 $generated@@157) ($generated@@139 $generated@@149 $generated@@150 $generated@@151 $generated@@153 $generated@@156 $generated@@157)))
 :weight 0
)) (forall (($generated@@158 T@T) ($generated@@159 T@T) ($generated@@160 T@T) ($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (or (= $generated@@164 $generated@@166) (= ($generated@@139 $generated@@158 $generated@@159 $generated@@160 ($generated@@141 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@163 $generated@@164 $generated@@161) $generated@@165 $generated@@166) ($generated@@139 $generated@@158 $generated@@159 $generated@@160 $generated@@162 $generated@@165 $generated@@166)))
 :weight 0
)))))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@17 ($generated@@139 $generated@@32 $generated@@56 $generated@@13 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))  (=> (and (or (not (= $generated@@171 $generated@@167)) (not true)) ($generated@@17 ($generated@@54 $generated@@13 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@168 $generated@@171) $generated@@169)))) (= $generated@@171 $generated@@170)))
 :pattern ( ($generated@@139 $generated@@32 $generated@@56 $generated@@13 ($generated@@140 $generated@@167 $generated@@168 $generated@@169 $generated@@170) $generated@@171 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (! (= ($generated@@38 ($generated@@46 $generated@@173 $generated@@174)) (+ ($generated@@38 $generated@@173) ($generated@@38 $generated@@174)))
 :pattern ( ($generated@@38 ($generated@@46 $generated@@173 $generated@@174)))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> ($generated@@175 $generated@@176 $generated@@41) (and (= ($generated@@108 $generated@@32 ($generated@@54 $generated@@32 $generated@@176)) $generated@@176) ($generated@@40 $generated@@32 ($generated@@54 $generated@@32 $generated@@176) $generated@@41)))
 :pattern ( ($generated@@175 $generated@@176 $generated@@41))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@175 $generated@@177 $generated@@51) (and (= ($generated@@108 $generated@@32 ($generated@@54 $generated@@32 $generated@@177)) $generated@@177) ($generated@@40 $generated@@32 ($generated@@54 $generated@@32 $generated@@177) $generated@@51)))
 :pattern ( ($generated@@175 $generated@@177 $generated@@51))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@179 ($generated@@34 $generated@@178))  (or (= $generated@@179 $generated@@42) (= ($generated@@43 $generated@@179) ($generated@@34 $generated@@178))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@179 ($generated@@34 $generated@@178)))
)))
(assert (forall (($generated@@180 T@U) ) (! (= ($generated@@40 $generated@@32 $generated@@180 $generated@@51)  (and ($generated@@40 $generated@@32 $generated@@180 $generated@@41) (or (not (= $generated@@180 $generated@@42)) (not true))))
 :pattern ( ($generated@@40 $generated@@32 $generated@@180 $generated@@51))
 :pattern ( ($generated@@40 $generated@@32 $generated@@180 $generated@@41))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (!  (=> ($generated@@104 $generated@@181 $generated@@182) (= $generated@@181 $generated@@182))
 :pattern ( ($generated@@104 $generated@@181 $generated@@182))
)))
(assert (forall (($generated@@183 T@U) ($generated@@184 Int) ) (!  (=> (and (<= 0 $generated@@184) (<= $generated@@184 ($generated@@38 $generated@@183))) (= ($generated@@38 ($generated@@45 $generated@@183 $generated@@184)) $generated@@184))
 :pattern ( ($generated@@38 ($generated@@45 $generated@@183 $generated@@184)))
)))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (or (not (= $generated@@185 $generated@@187)) (not true)) (=> (and ($generated@@87 $generated@@185 $generated@@186) ($generated@@87 $generated@@186 $generated@@187)) ($generated@@87 $generated@@185 $generated@@187)))
 :pattern ( ($generated@@87 $generated@@185 $generated@@186) ($generated@@87 $generated@@186 $generated@@187))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (and (= ($generated@@188 ($generated@@83 $generated@@189 $generated@@190)) $generated@@189) (= ($generated@@30 ($generated@@83 $generated@@189 $generated@@190)) $generated@@190))
 :pattern ( ($generated@@83 $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ) (!  (=> ($generated@@175 $generated@@191 $generated) (and (= ($generated@@108 $generated@@14 ($generated@@54 $generated@@14 $generated@@191)) $generated@@191) ($generated@@40 $generated@@14 ($generated@@54 $generated@@14 $generated@@191) $generated)))
 :pattern ( ($generated@@175 $generated@@191 $generated))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@T) ) (! (= ($generated@@175 ($generated@@108 $generated@@194 $generated@@192) $generated@@193) ($generated@@40 $generated@@194 $generated@@192 $generated@@193))
 :pattern ( ($generated@@175 ($generated@@108 $generated@@194 $generated@@192) $generated@@193))
)))
(assert (forall (($generated@@195 T@U) ) (! (<= 0 ($generated@@38 $generated@@195))
 :pattern ( ($generated@@38 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@31 $generated@@133 $generated@@196 ($generated@@135 $generated@@197) $generated@@198) (forall (($generated@@199 Int) ) (!  (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@38 $generated@@196))) ($generated@@113 ($generated@@98 $generated@@196 $generated@@199) $generated@@197 $generated@@198))
 :pattern ( ($generated@@98 $generated@@196 $generated@@199))
)))
 :pattern ( ($generated@@31 $generated@@133 $generated@@196 ($generated@@135 $generated@@197) $generated@@198))
)))
(assert (forall (($generated@@201 T@U) ) (! (= ($generated@@200 ($generated@@135 $generated@@201)) $generated@@201)
 :pattern ( ($generated@@135 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ) (! (= ($generated@@29 ($generated@@135 $generated@@202)) $generated@@1)
 :pattern ( ($generated@@135 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ) (! (= ($generated@@203 ($generated@@34 $generated@@204)) $generated@@204)
 :pattern ( ($generated@@34 $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ) (! (= ($generated@@205 ($generated@@33 $generated@@206)) $generated@@206)
 :pattern ( ($generated@@33 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@T) ) (! (= ($generated@@54 $generated@@208 ($generated@@108 $generated@@208 $generated@@207)) $generated@@207)
 :pattern ( ($generated@@108 $generated@@208 $generated@@207))
)))
(assert (forall (($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and ($generated@@134 $generated@@210) (and (or (not (= $generated@@211 $generated@@42)) (not true)) (= ($generated@@43 $generated@@211) ($generated@@34 $generated@@209)))) ($generated@@40 $generated@@133 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@210 $generated@@211) $generated@@82)) ($generated@@135 $generated@@209)))
 :pattern ( ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@210 $generated@@211) $generated@@82)) ($generated@@34 $generated@@209))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@175 $generated@@212 ($generated@@135 $generated@@213)) (and (= ($generated@@108 $generated@@133 ($generated@@54 $generated@@133 $generated@@212)) $generated@@212) ($generated@@40 $generated@@133 ($generated@@54 $generated@@133 $generated@@212) ($generated@@135 $generated@@213))))
 :pattern ( ($generated@@175 $generated@@212 ($generated@@135 $generated@@213)))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (=> ($generated@@175 $generated@@215 ($generated@@34 $generated@@214)) (and (= ($generated@@108 $generated@@32 ($generated@@54 $generated@@32 $generated@@215)) $generated@@215) ($generated@@40 $generated@@32 ($generated@@54 $generated@@32 $generated@@215) ($generated@@34 $generated@@214))))
 :pattern ( ($generated@@175 $generated@@215 ($generated@@34 $generated@@214)))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@175 $generated@@217 ($generated@@33 $generated@@216)) (and (= ($generated@@108 $generated@@32 ($generated@@54 $generated@@32 $generated@@217)) $generated@@217) ($generated@@40 $generated@@32 ($generated@@54 $generated@@32 $generated@@217) ($generated@@33 $generated@@216))))
 :pattern ( ($generated@@175 $generated@@217 ($generated@@33 $generated@@216)))
)))
(assert (= ($generated@@29 $generated@@41) $generated@@7))
(assert (= ($generated@@130 $generated@@41) $generated@@10))
(assert (= ($generated@@29 $generated@@51) $generated@@8))
(assert (= ($generated@@130 $generated@@51) $generated@@10))
(assert (forall (($generated@@218 T@U) ($generated@@219 Int) ($generated@@220 Int) ) (!  (=> (and (and (<= 0 $generated@@219) (<= $generated@@219 $generated@@220)) (< $generated@@220 ($generated@@38 $generated@@218))) (= ($generated@@98 ($generated@@47 $generated@@218 $generated@@219) (- $generated@@220 $generated@@219)) ($generated@@98 $generated@@218 $generated@@220)))
 :weight 25
 :pattern ( ($generated@@98 $generated@@218 $generated@@220) ($generated@@47 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@221 T@U) ($generated@@222 Int) ($generated@@223 Int) ) (!  (=> (and (and (<= 0 $generated@@222) (<= 0 $generated@@223)) (<= (+ $generated@@222 $generated@@223) ($generated@@38 $generated@@221))) (= ($generated@@47 ($generated@@47 $generated@@221 $generated@@222) $generated@@223) ($generated@@47 $generated@@221 (+ $generated@@222 $generated@@223))))
 :pattern ( ($generated@@47 ($generated@@47 $generated@@221 $generated@@222) $generated@@223))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Int) ) (!  (and (=> (< $generated@@226 ($generated@@38 $generated@@224)) (= ($generated@@98 ($generated@@46 $generated@@224 $generated@@225) $generated@@226) ($generated@@98 $generated@@224 $generated@@226))) (=> (<= ($generated@@38 $generated@@224) $generated@@226) (= ($generated@@98 ($generated@@46 $generated@@224 $generated@@225) $generated@@226) ($generated@@98 $generated@@225 (- $generated@@226 ($generated@@38 $generated@@224))))))
 :pattern ( ($generated@@98 ($generated@@46 $generated@@224 $generated@@225) $generated@@226))
)))
(assert (forall (($generated@@227 Int) ) (! (= ($generated@@108 $generated@@14 ($generated@@18 ($generated@@93 $generated@@227))) ($generated@@95 $generated@@57 ($generated@@108 $generated@@14 ($generated@@18 $generated@@227))))
 :pattern ( ($generated@@108 $generated@@14 ($generated@@18 ($generated@@93 $generated@@227))))
)))
(assert (forall (($generated@@228 T@U) ($generated@@229 T@T) ) (! (= ($generated@@108 $generated@@229 ($generated@@95 $generated@@229 $generated@@228)) ($generated@@95 $generated@@57 ($generated@@108 $generated@@229 $generated@@228)))
 :pattern ( ($generated@@108 $generated@@229 ($generated@@95 $generated@@229 $generated@@228)))
)))
(assert (forall (($generated@@230 T@U) ) (!  (=> (= ($generated@@38 $generated@@230) 0) (= $generated@@230 $generated@@39))
 :pattern ( ($generated@@38 $generated@@230))
)))
(assert (forall (($generated@@231 T@U) ($generated@@232 Int) ) (!  (=> (= $generated@@232 0) (= ($generated@@45 $generated@@231 $generated@@232) $generated@@39))
 :pattern ( ($generated@@45 $generated@@231 $generated@@232))
)))
(assert (forall (($generated@@233 T@U) ($generated@@234 T@U) ) (! ($generated@@31 $generated@@14 $generated@@234 $generated $generated@@233)
 :pattern ( ($generated@@31 $generated@@14 $generated@@234 $generated $generated@@233))
)))
(assert (forall (($generated@@235 T@U) ($generated@@236 T@U) ) (! (= ($generated@@40 $generated@@133 $generated@@235 ($generated@@135 $generated@@236)) (forall (($generated@@237 Int) ) (!  (=> (and (<= 0 $generated@@237) (< $generated@@237 ($generated@@38 $generated@@235))) ($generated@@175 ($generated@@98 $generated@@235 $generated@@237) $generated@@236))
 :pattern ( ($generated@@98 $generated@@235 $generated@@237))
)))
 :pattern ( ($generated@@40 $generated@@133 $generated@@235 ($generated@@135 $generated@@236)))
)))
(assert (forall (($generated@@238 T@U) ) (! ($generated@@40 $generated@@14 $generated@@238 $generated)
 :pattern ( ($generated@@40 $generated@@14 $generated@@238 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(declare-fun $generated@@241 () Int)
(declare-fun $generated@@242 () T@U)
(declare-fun $generated@@243 () Int)
(declare-fun $generated@@244 () Int)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 (T@U) Bool)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 29) (let (($generated@@249  (=> (forall (($generated@@250 Int) ) (!  (=> (and (<= ($generated@@93 0) $generated@@250) (< $generated@@250 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82))))) (<= $generated@@241 ($generated@@19 ($generated@@54 $generated@@14 ($generated@@98 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82)) $generated@@250)))))
 :pattern ( ($generated@@54 $generated@@14 ($generated@@98 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82)) $generated@@250)))
)) (and (=> (= (ControlFlow 0 2) (- 0 8)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 7)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242)) (=> ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242) (and (=> (= (ControlFlow 0 2) (- 0 5)) (and (<= 0 (+ $generated@@243 1)) (<= (+ $generated@@243 1) ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82)))))) (=> (and (<= 0 (+ $generated@@243 1)) (<= (+ $generated@@243 1) ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82))))) (and (=> (= (ControlFlow 0 2) (- 0 4)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242)) (=> ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 $generated@@243) (<= $generated@@243 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82)))))))))))))))))))))
(let (($generated@@251  (=> (and (<= ($generated@@93 0) $generated@@244) (< $generated@@244 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82))))) (and (=> (= (ControlFlow 0 10) (- 0 12)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 10) (- 0 11)) (and (<= 0 $generated@@244) (< $generated@@244 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82)))))) (=> (and (<= 0 $generated@@244) (< $generated@@244 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82))))) (=> (and (<= $generated@@241 ($generated@@19 ($generated@@54 $generated@@14 ($generated@@98 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82)) $generated@@244)))) (= (ControlFlow 0 10) 2)) $generated@@249))))))))
(let (($generated@@252  (=> (and (< $generated@@244 ($generated@@93 0)) (= (ControlFlow 0 15) 10)) $generated@@251)))
(let (($generated@@253  (=> (<= ($generated@@93 0) $generated@@244) (and (=> (= (ControlFlow 0 13) (- 0 14)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (=> (= (ControlFlow 0 13) 10) $generated@@251))))))
(let (($generated@@254  (=> (and (=> (and (<= ($generated@@93 0) $generated@@244) (< $generated@@244 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82))))) (<= $generated@@241 ($generated@@19 ($generated@@54 $generated@@14 ($generated@@98 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82)) $generated@@244))))) (= (ControlFlow 0 9) 2)) $generated@@249)))
(let (($generated@@255  (=> (and (<= ($generated@@93 0) $generated@@243) (< $generated@@243 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82))))) (and (=> (= (ControlFlow 0 16) (- 0 19)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 16) (- 0 18)) ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242)) (=> ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242) (and (=> (= (ControlFlow 0 16) (- 0 17)) (and (<= 0 $generated@@243) (< $generated@@243 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82)))))) (=> (and (<= 0 $generated@@243) (< $generated@@243 ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82))))) (=> (= ($generated@@19 ($generated@@54 $generated@@14 ($generated@@98 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82)) $generated@@243))) $generated@@241) (and (and (=> (= (ControlFlow 0 16) 9) $generated@@254) (=> (= (ControlFlow 0 16) 13) $generated@@253)) (=> (= (ControlFlow 0 16) 15) $generated@@252))))))))))))
(let (($generated@@256  (=> (and (< $generated@@243 ($generated@@93 0)) (= (ControlFlow 0 23) 16)) $generated@@255)))
(let (($generated@@257  (=> (<= ($generated@@93 0) $generated@@243) (and (=> (= (ControlFlow 0 20) (- 0 22)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 20) (- 0 21)) ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242)) (=> ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242) (=> (= (ControlFlow 0 20) 16) $generated@@255))))))))
(let (($generated@@258  (=> (= $generated@@245 ($generated@@140 $generated@@42 $generated@@242 $generated@@2 $generated@@240)) (and (=> (= (ControlFlow 0 24) (- 0 28)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (=> (or (not (= ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82))) 0)) (not true)) (=> (and (and ($generated@@134 $generated@@239) ($generated@@246 $generated@@239)) (and (forall (($generated@@259 T@U) ) (!  (=> (and (or (not (= $generated@@259 $generated@@42)) (not true)) ($generated@@17 ($generated@@54 $generated@@13 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@259) $generated@@2)))) (or (= ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@259) ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@259)) (= $generated@@259 $generated@@240)))
 :pattern ( ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@259))
)) ($generated@@87 $generated@@242 $generated@@239))) (and (=> (= (ControlFlow 0 24) (- 0 27)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (and (=> (= (ControlFlow 0 24) (- 0 26)) ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242)) (=> ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242) (and (=> (= (ControlFlow 0 24) (- 0 25)) (or (not (= $generated@@240 $generated@@42)) (not true))) (=> (or (not (= $generated@@240 $generated@@42)) (not true)) (=> (= ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@242 $generated@@240) $generated@@82))) (+ ($generated@@38 ($generated@@54 $generated@@133 ($generated@@55 $generated@@56 $generated@@57 ($generated@@55 $generated@@32 ($generated@@58 $generated@@56 $generated@@57) $generated@@239 $generated@@240) $generated@@82))) 1)) (and (=> (= (ControlFlow 0 24) 20) $generated@@257) (=> (= (ControlFlow 0 24) 23) $generated@@256))))))))))))))))
(let (($generated@@260  (=> (and (and (and ($generated@@134 $generated@@242) ($generated@@246 $generated@@242)) (and (or (not (= $generated@@247 $generated@@42)) (not true)) (and ($generated@@40 $generated@@32 $generated@@247 $generated@@51) ($generated@@31 $generated@@32 $generated@@247 $generated@@51 $generated@@242)))) (and (and ($generated@@40 $generated@@32 $generated@@240 ($generated@@33 $generated)) ($generated@@31 $generated@@32 $generated@@240 ($generated@@33 $generated) $generated@@242)) (and (= 2 $generated@@248) (= (ControlFlow 0 29) 24)))) $generated@@258)))
$generated@@260)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
