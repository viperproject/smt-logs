(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 (Int) Int)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@T T@U) T@U)
(declare-fun $generated@@74 () Int)
(declare-fun $generated@@75 (T@U T@U T@U Int) T@U)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U T@U Int) Bool)
(declare-fun $generated@@78 (T@T T@U T@U) Bool)
(declare-fun $generated@@79 () T@T)
(declare-fun $generated@@80 (T@U Int) T@U)
(declare-fun $generated@@87 (T@U T@U T@U) Bool)
(declare-fun $generated@@92 (T@U) T@U)
(declare-fun $generated@@93 (T@U) T@U)
(declare-fun $generated@@96 (T@U) T@U)
(declare-fun $generated@@97 (T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@102 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@103 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@141 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@162 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@0) 0))
(assert (= ($generated@@24 $generated@@0) $generated@@1))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31) ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
)))
(assert (= ($generated@@32 $generated@@33) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@7 $generated@@37) 4)) (= ($generated@@7 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@7 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@61 ($generated@@28 $generated@@60) $generated@@62)  (or (= $generated@@61 $generated@@34) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@62 $generated@@61) $generated@@0)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@61 ($generated@@28 $generated@@60) $generated@@62))
)))
(assert (= ($generated@@23 $generated@@63) 0))
(assert (= ($generated@@64 $generated@@2 $generated@@6) $generated@@63))
(assert  (not ($generated@@65 $generated@@63)))
(assert (forall (($generated@@67 Int) ) (! (= ($generated@@66 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@67))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@T) ) (! (= ($generated@@68 $generated@@70 $generated@@69) $generated@@69)
 :pattern ( ($generated@@68 $generated@@70 $generated@@69))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@T) ) (! (= ($generated@@71 $generated@@73 ($generated@@35 $generated@@73 $generated@@72)) $generated@@72)
 :pattern ( ($generated@@35 $generated@@73 $generated@@72))
)))
(assert (= ($generated@@7 $generated@@79) 7))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 Int) ) (!  (=> (or ($generated@@77 $generated@@81 $generated@@82 $generated@@83 $generated@@84) (and (< 0 $generated@@74) (and (and ($generated@@76 $generated@@82) (and (or (not (= $generated@@83 $generated@@34)) (not true)) (and ($generated@@78 $generated@@26 $generated@@83 ($generated@@27 $generated@@81)) ($generated@@25 $generated@@26 $generated@@83 ($generated@@27 $generated@@81) $generated@@82)))) (and (<= ($generated@@66 0) $generated@@84) (< $generated@@84 ($generated@@32 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@82 $generated@@83) $generated@@63)))))))) (= ($generated@@75 $generated@@81 $generated@@82 $generated@@83 $generated@@84) ($generated@@80 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@82 $generated@@83) $generated@@63)) $generated@@84)))
 :pattern ( ($generated@@75 $generated@@81 $generated@@82 $generated@@83 $generated@@84) ($generated@@76 $generated@@82))
))))
(assert ($generated@@65 $generated@@0))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ) (! (= ($generated@@78 $generated@@26 $generated@@86 ($generated@@27 $generated@@85))  (and ($generated@@78 $generated@@26 $generated@@86 ($generated@@28 $generated@@85)) (or (not (= $generated@@86 $generated@@34)) (not true))))
 :pattern ( ($generated@@78 $generated@@26 $generated@@86 ($generated@@27 $generated@@85)))
 :pattern ( ($generated@@78 $generated@@26 $generated@@86 ($generated@@28 $generated@@85)))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@87 ($generated@@71 $generated@@91 $generated@@88) $generated@@89 $generated@@90) ($generated@@25 $generated@@91 $generated@@88 $generated@@89 $generated@@90))
 :pattern ( ($generated@@87 ($generated@@71 $generated@@91 $generated@@88) $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@94 T@U) ) (!  (and (= ($generated@@92 ($generated@@28 $generated@@94)) $generated@@3) (= ($generated@@93 ($generated@@28 $generated@@94)) $generated@@5))
 :pattern ( ($generated@@28 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ) (!  (and (= ($generated@@92 ($generated@@27 $generated@@95)) $generated@@4) (= ($generated@@93 ($generated@@27 $generated@@95)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@95))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@76 $generated@@99) (and (or (not (= $generated@@100 $generated@@34)) (not true)) (= ($generated@@96 $generated@@100) ($generated@@28 $generated@@98)))) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@99 $generated@@100) $generated@@0)))) ($generated@@25 $generated@@79 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@99 $generated@@100) $generated@@63)) ($generated@@97 $generated@@98) $generated@@99))
 :pattern ( ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@99 $generated@@100) $generated@@63)) ($generated@@28 $generated@@98))
)))
(assert  (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (! (= ($generated@@101 $generated@@104 $generated@@105 $generated@@106 ($generated@@103 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@109 $generated@@110) $generated@@107)
 :weight 0
)) (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (or (= $generated@@116 $generated@@118) (= ($generated@@101 $generated@@111 $generated@@112 $generated@@113 ($generated@@103 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@118 $generated@@119) ($generated@@101 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@118 $generated@@119)))
 :weight 0
)) (forall (($generated@@120 T@T) ($generated@@121 T@T) ($generated@@122 T@T) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (!  (or (= $generated@@126 $generated@@128) (= ($generated@@101 $generated@@120 $generated@@121 $generated@@122 ($generated@@103 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@125 $generated@@126 $generated@@123) $generated@@127 $generated@@128) ($generated@@101 $generated@@120 $generated@@121 $generated@@122 $generated@@124 $generated@@127 $generated@@128)))
 :weight 0
)))))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@12 ($generated@@101 $generated@@26 $generated@@37 $generated@@8 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))  (=> (and (or (not (= $generated@@133 $generated@@129)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@130 $generated@@133) $generated@@131)))) (= $generated@@133 $generated@@132)))
 :pattern ( ($generated@@101 $generated@@26 $generated@@37 $generated@@8 ($generated@@102 $generated@@129 $generated@@130 $generated@@131 $generated@@132) $generated@@133 $generated@@134))
)))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 Int) ) (!  (=> (or ($generated@@77 $generated@@135 $generated@@136 $generated@@137 $generated@@138) (and (< 0 $generated@@74) (and (and (and ($generated@@76 $generated@@136) (or (not (= $generated@@137 $generated@@34)) (not true))) ($generated@@25 $generated@@26 $generated@@137 ($generated@@27 $generated@@135) $generated@@136)) (and (<= ($generated@@66 0) $generated@@138) (< $generated@@138 ($generated@@32 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@136 $generated@@137) $generated@@63)))))))) ($generated@@87 ($generated@@75 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@135 $generated@@136))
 :pattern ( ($generated@@87 ($generated@@75 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@135 $generated@@136))
))))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@78 $generated@@26 $generated@@140 ($generated@@28 $generated@@139))  (or (= $generated@@140 $generated@@34) (= ($generated@@96 $generated@@140) ($generated@@28 $generated@@139))))
 :pattern ( ($generated@@78 $generated@@26 $generated@@140 ($generated@@28 $generated@@139)))
)))
(assert  (=> (<= 0 $generated@@74) (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 Int) ) (!  (=> (or ($generated@@77 $generated@@142 $generated@@143 $generated@@144 $generated@@145) (and (< 0 $generated@@74) (and (and ($generated@@76 $generated@@143) (and (or (not (= $generated@@144 $generated@@34)) (not true)) (and ($generated@@78 $generated@@26 $generated@@144 ($generated@@27 $generated@@142)) ($generated@@25 $generated@@26 $generated@@144 ($generated@@27 $generated@@142) $generated@@143)))) (and (<= ($generated@@66 0) $generated@@145) (< $generated@@145 ($generated@@32 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@143 $generated@@144) $generated@@63)))))))) ($generated@@141 ($generated@@75 $generated@@142 $generated@@143 $generated@@144 $generated@@145) $generated@@142))
 :pattern ( ($generated@@75 $generated@@142 $generated@@143 $generated@@144 $generated@@145))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (and (= ($generated@@146 ($generated@@64 $generated@@147 $generated@@148)) $generated@@147) (= ($generated@@24 ($generated@@64 $generated@@147 $generated@@148)) $generated@@148))
 :pattern ( ($generated@@64 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@141 ($generated@@71 $generated@@151 $generated@@149) $generated@@150) ($generated@@78 $generated@@151 $generated@@149 $generated@@150))
 :pattern ( ($generated@@141 ($generated@@71 $generated@@151 $generated@@149) $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (<= 0 ($generated@@32 $generated@@152))
 :pattern ( ($generated@@32 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@25 $generated@@79 $generated@@153 ($generated@@97 $generated@@154) $generated@@155) (forall (($generated@@156 Int) ) (!  (=> (and (<= 0 $generated@@156) (< $generated@@156 ($generated@@32 $generated@@153))) ($generated@@87 ($generated@@80 $generated@@153 $generated@@156) $generated@@154 $generated@@155))
 :pattern ( ($generated@@80 $generated@@153 $generated@@156))
)))
 :pattern ( ($generated@@25 $generated@@79 $generated@@153 ($generated@@97 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@97 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@97 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@92 ($generated@@97 $generated@@159)) $generated)
 :pattern ( ($generated@@97 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@160 ($generated@@28 $generated@@161)) $generated@@161)
 :pattern ( ($generated@@28 $generated@@161))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@162 ($generated@@27 $generated@@163)) $generated@@163)
 :pattern ( ($generated@@27 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@35 $generated@@165 ($generated@@71 $generated@@165 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@71 $generated@@165 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (and ($generated@@76 $generated@@167) (and (or (not (= $generated@@168 $generated@@34)) (not true)) (= ($generated@@96 $generated@@168) ($generated@@28 $generated@@166)))) ($generated@@78 $generated@@79 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@167 $generated@@168) $generated@@63)) ($generated@@97 $generated@@166)))
 :pattern ( ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@167 $generated@@168) $generated@@63)) ($generated@@28 $generated@@166))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> ($generated@@141 $generated@@169 ($generated@@97 $generated@@170)) (and (= ($generated@@71 $generated@@79 ($generated@@35 $generated@@79 $generated@@169)) $generated@@169) ($generated@@78 $generated@@79 ($generated@@35 $generated@@79 $generated@@169) ($generated@@97 $generated@@170))))
 :pattern ( ($generated@@141 $generated@@169 ($generated@@97 $generated@@170)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (!  (=> ($generated@@141 $generated@@172 ($generated@@28 $generated@@171)) (and (= ($generated@@71 $generated@@26 ($generated@@35 $generated@@26 $generated@@172)) $generated@@172) ($generated@@78 $generated@@26 ($generated@@35 $generated@@26 $generated@@172) ($generated@@28 $generated@@171))))
 :pattern ( ($generated@@141 $generated@@172 ($generated@@28 $generated@@171)))
)))
(assert (forall (($generated@@173 T@U) ($generated@@174 T@U) ) (!  (=> ($generated@@141 $generated@@174 ($generated@@27 $generated@@173)) (and (= ($generated@@71 $generated@@26 ($generated@@35 $generated@@26 $generated@@174)) $generated@@174) ($generated@@78 $generated@@26 ($generated@@35 $generated@@26 $generated@@174) ($generated@@27 $generated@@173))))
 :pattern ( ($generated@@141 $generated@@174 ($generated@@27 $generated@@173)))
)))
(assert (forall (($generated@@175 Int) ) (! (= ($generated@@71 $generated@@9 ($generated@@13 ($generated@@66 $generated@@175))) ($generated@@68 $generated@@38 ($generated@@71 $generated@@9 ($generated@@13 $generated@@175))))
 :pattern ( ($generated@@71 $generated@@9 ($generated@@13 ($generated@@66 $generated@@175))))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@71 $generated@@177 ($generated@@68 $generated@@177 $generated@@176)) ($generated@@68 $generated@@38 ($generated@@71 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@71 $generated@@177 ($generated@@68 $generated@@177 $generated@@176)))
)))
(assert (forall (($generated@@178 T@U) ) (!  (=> (= ($generated@@32 $generated@@178) 0) (= $generated@@178 $generated@@33))
 :pattern ( ($generated@@32 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! (= ($generated@@78 $generated@@79 $generated@@179 ($generated@@97 $generated@@180)) (forall (($generated@@181 Int) ) (!  (=> (and (<= 0 $generated@@181) (< $generated@@181 ($generated@@32 $generated@@179))) ($generated@@141 ($generated@@80 $generated@@179 $generated@@181) $generated@@180))
 :pattern ( ($generated@@80 $generated@@179 $generated@@181))
)))
 :pattern ( ($generated@@78 $generated@@79 $generated@@179 ($generated@@97 $generated@@180)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () Bool)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Int)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 10) (let (($generated@@191  (=> (= $generated@@182 ($generated@@12 ($generated@@101 $generated@@26 $generated@@37 $generated@@8 $generated@@183 $generated@@184 $generated@@63))) (and (=> (= (ControlFlow 0 3) (- 0 4)) (and (<= 0 $generated@@185) (< $generated@@185 ($generated@@32 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@186 $generated@@184) $generated@@63)))))) (=> (and (<= 0 $generated@@185) (< $generated@@185 ($generated@@32 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@186 $generated@@184) $generated@@63))))) (=> (= ($generated@@75 $generated@@187 $generated@@186 $generated@@184 $generated@@185) ($generated@@80 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@186 $generated@@184) $generated@@63)) $generated@@185)) (=> (and ($generated@@141 ($generated@@75 $generated@@187 $generated@@186 $generated@@184 $generated@@185) $generated@@187) (= (ControlFlow 0 3) (- 0 2))) $generated@@182)))))))
(let (($generated@@192 true))
(let (($generated@@193  (=> (and (<= ($generated@@66 0) $generated@@185) (< $generated@@185 ($generated@@32 ($generated@@35 $generated@@79 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@186 $generated@@184) $generated@@63))))) (and (=> (= (ControlFlow 0 5) (- 0 6)) $generated@@188) (=> $generated@@188 (and (=> (= (ControlFlow 0 5) 1) $generated@@192) (=> (= (ControlFlow 0 5) 3) $generated@@191)))))))
(let (($generated@@194  (=> (< $generated@@185 ($generated@@66 0)) (=> (and (= $generated@@188 true) (= (ControlFlow 0 8) 5)) $generated@@193))))
(let (($generated@@195  (=> (and (and (<= ($generated@@66 0) $generated@@185) (= $generated@@189 ($generated@@12 ($generated@@101 $generated@@26 $generated@@37 $generated@@8 $generated@@183 $generated@@184 $generated@@63)))) (and (= $generated@@188 $generated@@189) (= (ControlFlow 0 7) 5))) $generated@@193)))
(let (($generated@@196  (=> (= $generated@@183 ($generated@@102 $generated@@34 $generated@@186 $generated@@0 $generated@@184)) (and (=> (= (ControlFlow 0 9) 7) $generated@@195) (=> (= (ControlFlow 0 9) 8) $generated@@194)))))
(let (($generated@@197  (=> (and ($generated@@76 $generated@@186) ($generated@@190 $generated@@186)) (=> (and (and (or (not (= $generated@@184 $generated@@34)) (not true)) (and ($generated@@78 $generated@@26 $generated@@184 ($generated@@27 $generated@@187)) ($generated@@25 $generated@@26 $generated@@184 ($generated@@27 $generated@@187) $generated@@186))) (and (= 0 $generated@@74) (= (ControlFlow 0 10) 9))) $generated@@196))))
$generated@@197))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
