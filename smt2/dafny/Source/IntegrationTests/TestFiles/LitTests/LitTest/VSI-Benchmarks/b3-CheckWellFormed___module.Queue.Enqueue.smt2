(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@T T@U T@U) Bool)
(declare-fun $generated@@71 () T@T)
(declare-fun $generated@@72 (T@U T@U) T@U)
(declare-fun $generated@@73 (T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U) Bool)
(declare-fun $generated@@79 (T@U Int) T@U)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@108 (T@U) Bool)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@113 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@114 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@115 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@147 (T@U T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@181 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@0) 0))
(assert (= ($generated@@24 $generated@@0) $generated@@1))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31) ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
)))
(assert (= ($generated@@32 $generated@@33) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@7 $generated@@37) 4)) (= ($generated@@7 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@7 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@61 ($generated@@28 $generated@@60) $generated@@62)  (or (= $generated@@61 $generated@@34) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@62 $generated@@61) $generated@@0)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@61 ($generated@@28 $generated@@60) $generated@@62))
)))
(assert (= ($generated@@23 $generated@@63) 0))
(assert (= ($generated@@64 $generated@@2 $generated@@6) $generated@@63))
(assert  (not ($generated@@65 $generated@@63)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated@@68) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@67 $generated@@69) $generated@@0))) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@68 $generated@@69) $generated@@0))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@68 $generated@@69) $generated@@0))
)))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68))
)))
(assert (= ($generated@@7 $generated@@71) 7))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (!  (=> (and ($generated@@70 $generated@@71 $generated@@75 ($generated@@73 $generated@@77)) ($generated@@74 $generated@@76 $generated@@77)) ($generated@@70 $generated@@71 ($generated@@72 $generated@@75 $generated@@76) ($generated@@73 $generated@@77)))
 :pattern ( ($generated@@70 $generated@@71 ($generated@@72 $generated@@75 $generated@@76) ($generated@@73 $generated@@77)))
)))
(assert (forall (($generated@@80 T@U) ($generated@@81 T@U) ) (! (= ($generated@@78 $generated@@80 $generated@@81)  (and (= ($generated@@32 $generated@@80) ($generated@@32 $generated@@81)) (forall (($generated@@82 Int) ) (!  (=> (and (<= 0 $generated@@82) (< $generated@@82 ($generated@@32 $generated@@80))) (= ($generated@@79 $generated@@80 $generated@@82) ($generated@@79 $generated@@81 $generated@@82)))
 :pattern ( ($generated@@79 $generated@@80 $generated@@82))
 :pattern ( ($generated@@79 $generated@@81 $generated@@82))
))))
 :pattern ( ($generated@@78 $generated@@80 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@35 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@35 $generated@@85 $generated@@84))
)))
(assert ($generated@@65 $generated@@0))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@32 ($generated@@72 $generated@@86 $generated@@87)) (+ 1 ($generated@@32 $generated@@86)))
 :pattern ( ($generated@@72 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@88 T@U) ($generated@@89 T@U) ) (! (= ($generated@@70 $generated@@26 $generated@@89 ($generated@@27 $generated@@88))  (and ($generated@@70 $generated@@26 $generated@@89 ($generated@@28 $generated@@88)) (or (not (= $generated@@89 $generated@@34)) (not true))))
 :pattern ( ($generated@@70 $generated@@26 $generated@@89 ($generated@@27 $generated@@88)))
 :pattern ( ($generated@@70 $generated@@26 $generated@@89 ($generated@@28 $generated@@88)))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@90 ($generated@@83 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@25 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@90 ($generated@@83 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@66 $generated@@95 $generated@@96) (=> ($generated@@90 $generated@@97 $generated@@98 $generated@@95) ($generated@@90 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@66 $generated@@95 $generated@@96) ($generated@@90 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@66 $generated@@99 $generated@@100) (=> ($generated@@25 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@25 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@66 $generated@@99 $generated@@100) ($generated@@25 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert (forall (($generated@@106 T@U) ) (!  (and (= ($generated@@104 ($generated@@28 $generated@@106)) $generated@@3) (= ($generated@@105 ($generated@@28 $generated@@106)) $generated@@5))
 :pattern ( ($generated@@28 $generated@@106))
)))
(assert (forall (($generated@@107 T@U) ) (!  (and (= ($generated@@104 ($generated@@27 $generated@@107)) $generated@@4) (= ($generated@@105 ($generated@@27 $generated@@107)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (and (and ($generated@@108 $generated@@111) (and (or (not (= $generated@@112 $generated@@34)) (not true)) (= ($generated@@109 $generated@@112) ($generated@@28 $generated@@110)))) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@111 $generated@@112) $generated@@0)))) ($generated@@25 $generated@@71 ($generated@@35 $generated@@71 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@111 $generated@@112) $generated@@63)) ($generated@@73 $generated@@110) $generated@@111))
 :pattern ( ($generated@@35 $generated@@71 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@111 $generated@@112) $generated@@63)) ($generated@@28 $generated@@110))
)))
(assert  (and (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (! (= ($generated@@113 $generated@@116 $generated@@117 $generated@@118 ($generated@@115 $generated@@116 $generated@@117 $generated@@118 $generated@@120 $generated@@121 $generated@@122 $generated@@119) $generated@@121 $generated@@122) $generated@@119)
 :weight 0
)) (and (forall (($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (!  (or (= $generated@@128 $generated@@130) (= ($generated@@113 $generated@@123 $generated@@124 $generated@@125 ($generated@@115 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@128 $generated@@129 $generated@@126) $generated@@130 $generated@@131) ($generated@@113 $generated@@123 $generated@@124 $generated@@125 $generated@@127 $generated@@130 $generated@@131)))
 :weight 0
)) (forall (($generated@@132 T@T) ($generated@@133 T@T) ($generated@@134 T@T) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (!  (or (= $generated@@138 $generated@@140) (= ($generated@@113 $generated@@132 $generated@@133 $generated@@134 ($generated@@115 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@137 $generated@@138 $generated@@135) $generated@@139 $generated@@140) ($generated@@113 $generated@@132 $generated@@133 $generated@@134 $generated@@136 $generated@@139 $generated@@140)))
 :weight 0
)))))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@12 ($generated@@113 $generated@@26 $generated@@37 $generated@@8 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))  (=> (and (or (not (= $generated@@145 $generated@@141)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@142 $generated@@145) $generated@@143)))) (= $generated@@145 $generated@@144)))
 :pattern ( ($generated@@113 $generated@@26 $generated@@37 $generated@@8 ($generated@@114 $generated@@141 $generated@@142 $generated@@143 $generated@@144) $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@U) ) (! (= ($generated@@32 ($generated@@147 $generated@@148 $generated@@149)) (+ ($generated@@32 $generated@@148) ($generated@@32 $generated@@149)))
 :pattern ( ($generated@@32 ($generated@@147 $generated@@148 $generated@@149)))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@70 $generated@@26 $generated@@151 ($generated@@28 $generated@@150))  (or (= $generated@@151 $generated@@34) (= ($generated@@109 $generated@@151) ($generated@@28 $generated@@150))))
 :pattern ( ($generated@@70 $generated@@26 $generated@@151 ($generated@@28 $generated@@150)))
)))
(assert (forall (($generated@@152 T@U) ($generated@@153 Int) ($generated@@154 T@U) ) (!  (and (=> (= $generated@@153 ($generated@@32 $generated@@152)) (= ($generated@@79 ($generated@@72 $generated@@152 $generated@@154) $generated@@153) $generated@@154)) (=> (or (not (= $generated@@153 ($generated@@32 $generated@@152))) (not true)) (= ($generated@@79 ($generated@@72 $generated@@152 $generated@@154) $generated@@153) ($generated@@79 $generated@@152 $generated@@153))))
 :pattern ( ($generated@@79 ($generated@@72 $generated@@152 $generated@@154) $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@78 $generated@@155 $generated@@156) (= $generated@@155 $generated@@156))
 :pattern ( ($generated@@78 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or (not (= $generated@@157 $generated@@159)) (not true)) (=> (and ($generated@@66 $generated@@157 $generated@@158) ($generated@@66 $generated@@158 $generated@@159)) ($generated@@66 $generated@@157 $generated@@159)))
 :pattern ( ($generated@@66 $generated@@157 $generated@@158) ($generated@@66 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (and (= ($generated@@160 ($generated@@64 $generated@@161 $generated@@162)) $generated@@161) (= ($generated@@24 ($generated@@64 $generated@@161 $generated@@162)) $generated@@162))
 :pattern ( ($generated@@64 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@74 ($generated@@83 $generated@@165 $generated@@163) $generated@@164) ($generated@@70 $generated@@165 $generated@@163 $generated@@164))
 :pattern ( ($generated@@74 ($generated@@83 $generated@@165 $generated@@163) $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ) (! (<= 0 ($generated@@32 $generated@@166))
 :pattern ( ($generated@@32 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (! (= ($generated@@25 $generated@@71 $generated@@167 ($generated@@73 $generated@@168) $generated@@169) (forall (($generated@@170 Int) ) (!  (=> (and (<= 0 $generated@@170) (< $generated@@170 ($generated@@32 $generated@@167))) ($generated@@90 ($generated@@79 $generated@@167 $generated@@170) $generated@@168 $generated@@169))
 :pattern ( ($generated@@79 $generated@@167 $generated@@170))
)))
 :pattern ( ($generated@@25 $generated@@71 $generated@@167 ($generated@@73 $generated@@168) $generated@@169))
)))
(assert (forall (($generated@@172 T@U) ) (! (= ($generated@@171 ($generated@@73 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@73 $generated@@172))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@104 ($generated@@73 $generated@@173)) $generated)
 :pattern ( ($generated@@73 $generated@@173))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@174 ($generated@@28 $generated@@175)) $generated@@175)
 :pattern ( ($generated@@28 $generated@@175))
)))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@176 ($generated@@27 $generated@@177)) $generated@@177)
 :pattern ( ($generated@@27 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ($generated@@179 T@T) ) (! (= ($generated@@35 $generated@@179 ($generated@@83 $generated@@179 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@83 $generated@@179 $generated@@178))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (!  (and (= ($generated@@180 ($generated@@72 $generated@@182 $generated@@183)) $generated@@182) (= ($generated@@181 ($generated@@72 $generated@@182 $generated@@183)) $generated@@183))
 :pattern ( ($generated@@72 $generated@@182 $generated@@183))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (=> (and ($generated@@108 $generated@@185) (and (or (not (= $generated@@186 $generated@@34)) (not true)) (= ($generated@@109 $generated@@186) ($generated@@28 $generated@@184)))) ($generated@@70 $generated@@71 ($generated@@35 $generated@@71 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@185 $generated@@186) $generated@@63)) ($generated@@73 $generated@@184)))
 :pattern ( ($generated@@35 $generated@@71 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@185 $generated@@186) $generated@@63)) ($generated@@28 $generated@@184))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@U) ) (!  (=> ($generated@@74 $generated@@187 ($generated@@73 $generated@@188)) (and (= ($generated@@83 $generated@@71 ($generated@@35 $generated@@71 $generated@@187)) $generated@@187) ($generated@@70 $generated@@71 ($generated@@35 $generated@@71 $generated@@187) ($generated@@73 $generated@@188))))
 :pattern ( ($generated@@74 $generated@@187 ($generated@@73 $generated@@188)))
)))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ) (!  (=> ($generated@@74 $generated@@190 ($generated@@28 $generated@@189)) (and (= ($generated@@83 $generated@@26 ($generated@@35 $generated@@26 $generated@@190)) $generated@@190) ($generated@@70 $generated@@26 ($generated@@35 $generated@@26 $generated@@190) ($generated@@28 $generated@@189))))
 :pattern ( ($generated@@74 $generated@@190 ($generated@@28 $generated@@189)))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@74 $generated@@192 ($generated@@27 $generated@@191)) (and (= ($generated@@83 $generated@@26 ($generated@@35 $generated@@26 $generated@@192)) $generated@@192) ($generated@@70 $generated@@26 ($generated@@35 $generated@@26 $generated@@192) ($generated@@27 $generated@@191))))
 :pattern ( ($generated@@74 $generated@@192 ($generated@@27 $generated@@191)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 Int) ) (!  (and (=> (< $generated@@195 ($generated@@32 $generated@@193)) (= ($generated@@79 ($generated@@147 $generated@@193 $generated@@194) $generated@@195) ($generated@@79 $generated@@193 $generated@@195))) (=> (<= ($generated@@32 $generated@@193) $generated@@195) (= ($generated@@79 ($generated@@147 $generated@@193 $generated@@194) $generated@@195) ($generated@@79 $generated@@194 (- $generated@@195 ($generated@@32 $generated@@193))))))
 :pattern ( ($generated@@79 ($generated@@147 $generated@@193 $generated@@194) $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ) (!  (=> (= ($generated@@32 $generated@@196) 0) (= $generated@@196 $generated@@33))
 :pattern ( ($generated@@32 $generated@@196))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (! (= ($generated@@70 $generated@@71 $generated@@197 ($generated@@73 $generated@@198)) (forall (($generated@@199 Int) ) (!  (=> (and (<= 0 $generated@@199) (< $generated@@199 ($generated@@32 $generated@@197))) ($generated@@74 ($generated@@79 $generated@@197 $generated@@199) $generated@@198))
 :pattern ( ($generated@@79 $generated@@197 $generated@@199))
)))
 :pattern ( ($generated@@70 $generated@@71 $generated@@197 ($generated@@73 $generated@@198)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@200 () T@U)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 (T@U) Bool)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@208  (=> (= $generated@@200 ($generated@@114 $generated@@34 $generated@@201 $generated@@0 $generated@@202)) (=> (and (and (and ($generated@@108 $generated@@203) ($generated@@204 $generated@@203)) (forall (($generated@@209 T@U) ) (!  (=> (and (or (not (= $generated@@209 $generated@@34)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@201 $generated@@209) $generated@@0)))) (or (= ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@203 $generated@@209) ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@201 $generated@@209)) (= $generated@@209 $generated@@202)))
 :pattern ( ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@203 $generated@@209))
))) (and ($generated@@66 $generated@@201 $generated@@203) (= (ControlFlow 0 2) (- 0 1)))) ($generated@@25 $generated@@26 $generated@@202 ($generated@@27 $generated@@205) $generated@@201)))))
(let (($generated@@210  (=> (and (and (and ($generated@@108 $generated@@201) ($generated@@204 $generated@@201)) (and (or (not (= $generated@@202 $generated@@34)) (not true)) (and ($generated@@70 $generated@@26 $generated@@202 ($generated@@27 $generated@@205)) ($generated@@25 $generated@@26 $generated@@202 ($generated@@27 $generated@@205) $generated@@201)))) (and (and ($generated@@74 $generated@@206 $generated@@205) ($generated@@90 $generated@@206 $generated@@205 $generated@@201)) (and (= 0 $generated@@207) (= (ControlFlow 0 3) 2)))) $generated@@208)))
$generated@@210)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
