(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 (T@U T@U) T@U)
(declare-fun $generated@@49 (T@U) Bool)
(declare-fun $generated@@50 (T@T T@U) T@U)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@54 () Int)
(declare-fun $generated@@55 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@T T@U T@U) Bool)
(declare-fun $generated@@59 () T@T)
(declare-fun $generated@@60 (T@U) T@U)
(declare-fun $generated@@61 (T@U T@U) T@U)
(declare-fun $generated@@62 () T@T)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T T@T) T@T)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@102 (T@U T@U T@U) Bool)
(declare-fun $generated@@103 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@122 (T@U) T@U)
(declare-fun $generated@@133 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@139 (T@U) T@U)
(declare-fun $generated@@142 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@156 (T@U) T@U)
(declare-fun $generated@@174 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@175 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@176 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert (= ($generated@@25 $generated@@2) 0))
(assert (= ($generated@@26 $generated) $generated@@0))
(assert (= ($generated@@27 $generated@@2) $generated@@3))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@29 ($generated@@28 $generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@28 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@32 $generated@@34) ($generated@@29 ($generated@@28 $generated@@32 $generated@@33) $generated@@34))
 :pattern ( ($generated@@28 $generated@@32 $generated@@33) ($generated@@29 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@29 ($generated@@28 $generated@@35 $generated@@36) $generated@@37)  (or (= $generated@@37 $generated@@36) ($generated@@29 $generated@@35 $generated@@37)))
 :pattern ( ($generated@@29 ($generated@@28 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@29 $generated@@40 $generated@@41) (not ($generated@@29 ($generated@@38 $generated@@39 $generated@@40) $generated@@41)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40) ($generated@@29 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (!  (not ($generated@@29 $generated@@42 $generated@@43))
 :pattern ( ($generated@@29 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@29 ($generated@@38 $generated@@44 $generated@@45) $generated@@46)  (and ($generated@@29 $generated@@44 $generated@@46) (not ($generated@@29 $generated@@45 $generated@@46))))
 :pattern ( ($generated@@29 ($generated@@38 $generated@@44 $generated@@45) $generated@@46))
)))
(assert (= ($generated@@25 $generated@@47) 0))
(assert (= ($generated@@48 $generated@@6 $generated@@8) $generated@@47))
(assert ($generated@@49 $generated@@47))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@T) ) (! (= ($generated@@51 $generated@@53 ($generated@@50 $generated@@53 $generated@@52)) $generated@@52)
 :pattern ( ($generated@@50 $generated@@53 $generated@@52))
)))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@59) 3) (= ($generated@@9 $generated@@62) 4)) (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@66 $generated@@73 $generated@@74 ($generated@@70 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@77) $generated@@75)
 :weight 0
))) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (or (= $generated@@82 $generated@@83) (= ($generated@@66 $generated@@78 $generated@@79 ($generated@@70 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@83) ($generated@@66 $generated@@78 $generated@@79 $generated@@81 $generated@@83)))
 :weight 0
))) (= ($generated@@9 $generated@@67) 5)) (= ($generated@@9 $generated@@68) 6)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (= ($generated@@9 ($generated@@69 $generated@@84 $generated@@85)) 7))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@71 ($generated@@69 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@69 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@72 ($generated@@69 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@69 $generated@@88 $generated@@89))
))))
(assert  (=> (<= 1 $generated@@54) (forall (($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ) (!  (=> (or ($generated@@57 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94) (and (< 1 $generated@@54) (and (and ($generated@@56 $generated@@92) ($generated@@58 $generated@@59 $generated@@93 ($generated@@60 ($generated@@61 $generated@@90 $generated@@91)))) ($generated@@58 $generated@@62 $generated@@94 ($generated@@63 $generated@@90 $generated@@91))))) (= ($generated@@55 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94)  (or (and (= $generated@@94 $generated@@64) ($generated@@65 $generated@@93 $generated@@42)) (and (and (or (not (= $generated@@94 $generated@@64)) (not true)) ($generated@@29 $generated@@93 ($generated@@51 $generated@@62 $generated@@94))) ($generated@@65 ($generated@@50 $generated@@59 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@92 $generated@@94) $generated@@47)) ($generated@@38 $generated@@93 ($generated@@28 $generated@@42 ($generated@@51 $generated@@62 $generated@@94))))))))
 :pattern ( ($generated@@55 $generated@@90 $generated@@91 $generated@@92 $generated@@93 $generated@@94) ($generated@@56 $generated@@92))
))))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@58 $generated@@59 $generated@@96 ($generated@@60 $generated@@97)) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@29 $generated@@96 $generated@@98) ($generated@@95 $generated@@98 $generated@@97))
 :pattern ( ($generated@@29 $generated@@96 $generated@@98))
)))
 :pattern ( ($generated@@58 $generated@@59 $generated@@96 ($generated@@60 $generated@@97)))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@58 $generated@@62 $generated@@101 ($generated@@61 $generated@@99 $generated@@100))  (and ($generated@@58 $generated@@62 $generated@@101 ($generated@@63 $generated@@99 $generated@@100)) (or (not (= $generated@@101 $generated@@64)) (not true))))
 :pattern ( ($generated@@58 $generated@@62 $generated@@101 ($generated@@61 $generated@@99 $generated@@100)))
 :pattern ( ($generated@@58 $generated@@62 $generated@@101 ($generated@@63 $generated@@99 $generated@@100)))
)))
(assert ($generated@@49 $generated@@2))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@102 ($generated@@51 $generated@@107 $generated@@104) $generated@@105 $generated@@106) ($generated@@103 $generated@@107 $generated@@104 $generated@@105 $generated@@106))
 :pattern ( ($generated@@102 ($generated@@51 $generated@@107 $generated@@104) $generated@@105 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@58 $generated@@62 $generated@@111 ($generated@@63 $generated@@109 $generated@@110))  (or (= $generated@@111 $generated@@64) (= ($generated@@108 $generated@@111) ($generated@@63 $generated@@109 $generated@@110))))
 :pattern ( ($generated@@58 $generated@@62 $generated@@111 ($generated@@63 $generated@@109 $generated@@110)))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@103 $generated@@62 $generated@@114 ($generated@@61 $generated@@112 $generated@@113) $generated@@115) ($generated@@103 $generated@@62 $generated@@114 ($generated@@63 $generated@@112 $generated@@113) $generated@@115))
 :pattern ( ($generated@@103 $generated@@62 $generated@@114 ($generated@@61 $generated@@112 $generated@@113) $generated@@115))
 :pattern ( ($generated@@103 $generated@@62 $generated@@114 ($generated@@63 $generated@@112 $generated@@113) $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (! (= ($generated@@103 $generated@@62 $generated@@118 ($generated@@63 $generated@@116 $generated@@117) $generated@@119)  (or (= $generated@@118 $generated@@64) ($generated@@14 ($generated@@50 $generated@@10 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@119 $generated@@118) $generated@@2)))))
 :pattern ( ($generated@@103 $generated@@62 $generated@@118 ($generated@@63 $generated@@116 $generated@@117) $generated@@119))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ) (!  (=> ($generated@@65 $generated@@120 $generated@@121) (= $generated@@120 $generated@@121))
 :pattern ( ($generated@@65 $generated@@120 $generated@@121))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ) (!  (and (= ($generated@@122 ($generated@@48 $generated@@123 $generated@@124)) $generated@@123) (= ($generated@@27 ($generated@@48 $generated@@123 $generated@@124)) $generated@@124))
 :pattern ( ($generated@@48 $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@125 T@U) ) (!  (=> ($generated@@95 $generated@@125 $generated) (and (= ($generated@@51 $generated@@10 ($generated@@50 $generated@@10 $generated@@125)) $generated@@125) ($generated@@58 $generated@@10 ($generated@@50 $generated@@10 $generated@@125) $generated)))
 :pattern ( ($generated@@95 $generated@@125 $generated))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@95 ($generated@@51 $generated@@128 $generated@@126) $generated@@127) ($generated@@58 $generated@@128 $generated@@126 $generated@@127))
 :pattern ( ($generated@@95 ($generated@@51 $generated@@128 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@103 $generated@@59 $generated@@129 ($generated@@60 $generated@@130) $generated@@131) (forall (($generated@@132 T@U) ) (!  (=> ($generated@@29 $generated@@129 $generated@@132) ($generated@@102 $generated@@132 $generated@@130 $generated@@131))
 :pattern ( ($generated@@29 $generated@@129 $generated@@132))
)))
 :pattern ( ($generated@@103 $generated@@59 $generated@@129 ($generated@@60 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (! (= ($generated@@133 ($generated@@63 $generated@@134 $generated@@135)) $generated@@134)
 :pattern ( ($generated@@63 $generated@@134 $generated@@135))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@136 ($generated@@63 $generated@@137 $generated@@138)) $generated@@138)
 :pattern ( ($generated@@63 $generated@@137 $generated@@138))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@139 ($generated@@61 $generated@@140 $generated@@141)) $generated@@140)
 :pattern ( ($generated@@61 $generated@@140 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (! (= ($generated@@142 ($generated@@61 $generated@@143 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@61 $generated@@143 $generated@@144))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@145 ($generated@@60 $generated@@146)) $generated@@146)
 :pattern ( ($generated@@60 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@26 ($generated@@60 $generated@@147)) $generated@@1)
 :pattern ( ($generated@@60 $generated@@147))
)))
(assert (forall (($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@50 $generated@@149 ($generated@@51 $generated@@149 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@51 $generated@@149 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@95 $generated@@152 ($generated@@63 $generated@@150 $generated@@151)) (and (= ($generated@@51 $generated@@62 ($generated@@50 $generated@@62 $generated@@152)) $generated@@152) ($generated@@58 $generated@@62 ($generated@@50 $generated@@62 $generated@@152) ($generated@@63 $generated@@150 $generated@@151))))
 :pattern ( ($generated@@95 $generated@@152 ($generated@@63 $generated@@150 $generated@@151)))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (!  (=> ($generated@@95 $generated@@155 ($generated@@61 $generated@@153 $generated@@154)) (and (= ($generated@@51 $generated@@62 ($generated@@50 $generated@@62 $generated@@155)) $generated@@155) ($generated@@58 $generated@@62 ($generated@@50 $generated@@62 $generated@@155) ($generated@@61 $generated@@153 $generated@@154))))
 :pattern ( ($generated@@95 $generated@@155 ($generated@@61 $generated@@153 $generated@@154)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (and (= ($generated@@26 ($generated@@63 $generated@@157 $generated@@158)) $generated@@4) (= ($generated@@156 ($generated@@63 $generated@@157 $generated@@158)) $generated@@7))
 :pattern ( ($generated@@63 $generated@@157 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (and (= ($generated@@26 ($generated@@61 $generated@@159 $generated@@160)) $generated@@5) (= ($generated@@156 ($generated@@61 $generated@@159 $generated@@160)) $generated@@7))
 :pattern ( ($generated@@61 $generated@@159 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@95 $generated@@161 ($generated@@60 $generated@@162)) (and (= ($generated@@51 $generated@@59 ($generated@@50 $generated@@59 $generated@@161)) $generated@@161) ($generated@@58 $generated@@59 ($generated@@50 $generated@@59 $generated@@161) ($generated@@60 $generated@@162))))
 :pattern ( ($generated@@95 $generated@@161 ($generated@@60 $generated@@162)))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (and ($generated@@56 $generated@@165) (and (or (not (= $generated@@166 $generated@@64)) (not true)) (= ($generated@@108 $generated@@166) ($generated@@63 $generated@@163 $generated@@164)))) ($generated@@58 $generated@@59 ($generated@@50 $generated@@59 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@165 $generated@@166) $generated@@47)) ($generated@@60 ($generated@@61 $generated@@163 $generated@@164))))
 :pattern ( ($generated@@50 $generated@@59 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@165 $generated@@166) $generated@@47)) ($generated@@63 $generated@@163 $generated@@164))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and ($generated@@56 $generated@@169) (and (or (not (= $generated@@170 $generated@@64)) (not true)) (= ($generated@@108 $generated@@170) ($generated@@63 $generated@@167 $generated@@168)))) ($generated@@14 ($generated@@50 $generated@@10 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@169 $generated@@170) $generated@@2)))) ($generated@@103 $generated@@59 ($generated@@50 $generated@@59 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@169 $generated@@170) $generated@@47)) ($generated@@60 ($generated@@61 $generated@@167 $generated@@168)) $generated@@169))
 :pattern ( ($generated@@50 $generated@@59 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@169 $generated@@170) $generated@@47)) ($generated@@63 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@U) ) (! (= ($generated@@65 $generated@@171 $generated@@172) (forall (($generated@@173 T@U) ) (! (= ($generated@@29 $generated@@171 $generated@@173) ($generated@@29 $generated@@172 $generated@@173))
 :pattern ( ($generated@@29 $generated@@171 $generated@@173))
 :pattern ( ($generated@@29 $generated@@172 $generated@@173))
)))
 :pattern ( ($generated@@65 $generated@@171 $generated@@172))
)))
(assert  (and (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (! (= ($generated@@174 $generated@@177 $generated@@178 $generated@@179 ($generated@@176 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@182 $generated@@183) $generated@@180)
 :weight 0
)) (and (forall (($generated@@184 T@T) ($generated@@185 T@T) ($generated@@186 T@T) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ) (!  (or (= $generated@@189 $generated@@191) (= ($generated@@174 $generated@@184 $generated@@185 $generated@@186 ($generated@@176 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@189 $generated@@190 $generated@@187) $generated@@191 $generated@@192) ($generated@@174 $generated@@184 $generated@@185 $generated@@186 $generated@@188 $generated@@191 $generated@@192)))
 :weight 0
)) (forall (($generated@@193 T@T) ($generated@@194 T@T) ($generated@@195 T@T) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ) (!  (or (= $generated@@199 $generated@@201) (= ($generated@@174 $generated@@193 $generated@@194 $generated@@195 ($generated@@176 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@198 $generated@@199 $generated@@196) $generated@@200 $generated@@201) ($generated@@174 $generated@@193 $generated@@194 $generated@@195 $generated@@197 $generated@@200 $generated@@201)))
 :weight 0
)))))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@14 ($generated@@174 $generated@@62 $generated@@67 $generated@@10 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))  (=> (and (or (not (= $generated@@206 $generated@@202)) (not true)) ($generated@@14 ($generated@@50 $generated@@10 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@203 $generated@@206) $generated@@204)))) ($generated@@29 $generated@@205 ($generated@@51 $generated@@62 $generated@@206))))
 :pattern ( ($generated@@174 $generated@@62 $generated@@67 $generated@@10 ($generated@@175 $generated@@202 $generated@@203 $generated@@204 $generated@@205) $generated@@206 $generated@@207))
)))
(assert (forall (($generated@@208 T@U) ($generated@@209 T@U) ) (! ($generated@@103 $generated@@10 $generated@@209 $generated $generated@@208)
 :pattern ( ($generated@@103 $generated@@10 $generated@@209 $generated $generated@@208))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@58 $generated@@10 $generated@@210 $generated)
 :pattern ( ($generated@@58 $generated@@10 $generated@@210 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 () T@U)
(declare-fun $generated@@216 () Bool)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () T@U)
(declare-fun $generated@@219 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@220  (=> (= ($generated@@55 $generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)  (or (and (= $generated@@215 $generated@@64) ($generated@@65 $generated@@214 $generated@@42)) (and (and (or (not (= $generated@@215 $generated@@64)) (not true)) ($generated@@29 $generated@@214 ($generated@@51 $generated@@62 $generated@@215))) ($generated@@65 ($generated@@50 $generated@@59 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@62 ($generated@@69 $generated@@67 $generated@@68) $generated@@213 $generated@@215) $generated@@47)) ($generated@@38 $generated@@214 ($generated@@28 $generated@@42 ($generated@@51 $generated@@62 $generated@@215))))))) (=> (and ($generated@@58 $generated@@10 ($generated@@13 ($generated@@55 $generated@@211 $generated@@212 $generated@@213 $generated@@214 $generated@@215)) $generated) (= (ControlFlow 0 3) (- 0 2))) $generated@@216))))
(let (($generated@@221  (=> (not (and (or (not (= $generated@@215 $generated@@64)) (not true)) ($generated@@29 $generated@@214 ($generated@@51 $generated@@62 $generated@@215)))) (=> (and (= $generated@@216 true) (= (ControlFlow 0 7) 3)) $generated@@220))))
(let (($generated@@222  (=> (and (or (not (= $generated@@215 $generated@@64)) (not true)) ($generated@@29 $generated@@214 ($generated@@51 $generated@@62 $generated@@215))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= $generated@@215 $generated@@64)) (not true))) (=> (or (not (= $generated@@215 $generated@@64)) (not true)) (=> (= $generated@@217 ($generated@@14 ($generated@@174 $generated@@62 $generated@@67 $generated@@10 $generated@@218 $generated@@215 $generated@@47))) (=> (and (= $generated@@216 $generated@@217) (= (ControlFlow 0 5) 3)) $generated@@220)))))))
(let (($generated@@223  (=> (= $generated@@215 $generated@@64) (and (=> (= (ControlFlow 0 9) 5) $generated@@222) (=> (= (ControlFlow 0 9) 7) $generated@@221)))))
(let (($generated@@224  (=> (or (not (= $generated@@215 $generated@@64)) (not true)) (and (=> (= (ControlFlow 0 8) 5) $generated@@222) (=> (= (ControlFlow 0 8) 7) $generated@@221)))))
(let (($generated@@225  (=> (not (and (= $generated@@215 $generated@@64) ($generated@@65 $generated@@214 $generated@@42))) (and (=> (= (ControlFlow 0 10) 8) $generated@@224) (=> (= (ControlFlow 0 10) 9) $generated@@223)))))
(let (($generated@@226  (=> (and (and (= $generated@@215 $generated@@64) ($generated@@65 $generated@@214 $generated@@42)) (and (= $generated@@216 true) (= (ControlFlow 0 4) 3))) $generated@@220)))
(let (($generated@@227  (=> (or (not (= $generated@@215 $generated@@64)) (not true)) (and (=> (= (ControlFlow 0 12) 10) $generated@@225) (=> (= (ControlFlow 0 12) 4) $generated@@226)))))
(let (($generated@@228  (=> (= $generated@@215 $generated@@64) (and (=> (= (ControlFlow 0 11) 10) $generated@@225) (=> (= (ControlFlow 0 11) 4) $generated@@226)))))
(let (($generated@@229 true))
(let (($generated@@230  (=> (= $generated@@218 ($generated@@175 $generated@@64 $generated@@213 $generated@@2 $generated@@214)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@229) (=> (= (ControlFlow 0 13) 11) $generated@@228)) (=> (= (ControlFlow 0 13) 12) $generated@@227)))))
(let (($generated@@231  (=> (and ($generated@@56 $generated@@213) ($generated@@219 $generated@@213)) (=> (and (and ($generated@@58 $generated@@59 $generated@@214 ($generated@@60 ($generated@@61 $generated@@211 $generated@@212))) ($generated@@58 $generated@@62 $generated@@215 ($generated@@63 $generated@@211 $generated@@212))) (and (= 1 $generated@@54) (= (ControlFlow 0 14) 13))) $generated@@230))))
$generated@@231)))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
