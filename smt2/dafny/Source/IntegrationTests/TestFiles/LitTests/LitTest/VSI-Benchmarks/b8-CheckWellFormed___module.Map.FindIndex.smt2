(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (T@U) T@U)
(declare-fun $generated@@26 (T@U T@U) Bool)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@29 (T@U) Int)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 (T@U T@U) T@U)
(declare-fun $generated@@32 (T@U) Bool)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@36 () T@T)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@64 (Int) Int)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@U) T@U)
(declare-fun $generated@@72 (T@T T@U T@U) Bool)
(declare-fun $generated@@73 (T@U T@U) T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@94 (T@U) T@U)
(declare-fun $generated@@102 (T@U Int) T@U)
(declare-fun $generated@@113 (T@U) T@U)
(declare-fun $generated@@116 (T@U T@U) Bool)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@124 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@130 (T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@139 () Int)
(declare-fun $generated@@140 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@141 (T@U) Bool)
(declare-fun $generated@@142 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@151 (T@U) T@U)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@203 (T@U) Bool)
(declare-fun $generated@@211 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated@@0) 0))
(assert (= ($generated@@25 $generated@@0) $generated@@1))
(assert (forall (($generated@@28 T@U) ) (!  (not ($generated@@26 $generated@@27 $generated@@28))
 :pattern ( ($generated@@26 $generated@@27 $generated@@28))
)))
(assert (= ($generated@@29 $generated@@27) 0))
(assert (= ($generated@@24 $generated@@30) 0))
(assert (= ($generated@@31 $generated@@4 $generated@@6) $generated@@30))
(assert  (not ($generated@@32 $generated@@30)))
(assert (= ($generated@@24 $generated@@33) 0))
(assert (= ($generated@@31 $generated@@4 $generated@@7) $generated@@33))
(assert  (not ($generated@@32 $generated@@33)))
(assert  (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@35 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@35 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@35 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@8 $generated@@36) 3)) (= ($generated@@8 $generated@@37) 4)) (= ($generated@@8 $generated@@38) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@8 ($generated@@39 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@39 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@39 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@39 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> ($generated@@34 $generated@@61 $generated@@62) (forall (($generated@@63 T@U) ) (!  (=> ($generated@@13 ($generated@@40 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@61 $generated@@63) $generated@@0))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated@@0))))
 :pattern ( ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@62 $generated@@63) $generated@@0))
)))
 :pattern ( ($generated@@34 $generated@@61 $generated@@62))
)))
(assert (forall (($generated@@65 Int) ) (! (= ($generated@@64 $generated@@65) $generated@@65)
 :pattern ( ($generated@@64 $generated@@65))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@T) ) (! (= ($generated@@66 $generated@@68 $generated@@67) $generated@@67)
 :pattern ( ($generated@@66 $generated@@68 $generated@@67))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@69 $generated@@71 ($generated@@40 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@40 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@72 $generated@@38 $generated@@78 ($generated@@73 $generated@@76 $generated@@77))  (and ($generated@@72 $generated@@38 $generated@@78 ($generated@@74 $generated@@76 $generated@@77)) (or (not (= $generated@@78 $generated@@75)) (not true))))
 :pattern ( ($generated@@72 $generated@@38 $generated@@78 ($generated@@73 $generated@@76 $generated@@77)))
 :pattern ( ($generated@@72 $generated@@38 $generated@@78 ($generated@@74 $generated@@76 $generated@@77)))
)))
(assert ($generated@@32 $generated@@0))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@T) ) (! (= ($generated@@79 ($generated@@69 $generated@@84 $generated@@81) $generated@@82 $generated@@83) ($generated@@80 $generated@@84 $generated@@81 $generated@@82 $generated@@83))
 :pattern ( ($generated@@79 ($generated@@69 $generated@@84 $generated@@81) $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (!  (=> ($generated@@34 $generated@@85 $generated@@86) (=> ($generated@@79 $generated@@87 $generated@@88 $generated@@85) ($generated@@79 $generated@@87 $generated@@88 $generated@@86)))
 :pattern ( ($generated@@34 $generated@@85 $generated@@86) ($generated@@79 $generated@@87 $generated@@88 $generated@@85))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@T) ) (!  (=> ($generated@@34 $generated@@89 $generated@@90) (=> ($generated@@80 $generated@@93 $generated@@91 $generated@@92 $generated@@89) ($generated@@80 $generated@@93 $generated@@91 $generated@@92 $generated@@90)))
 :pattern ( ($generated@@34 $generated@@89 $generated@@90) ($generated@@80 $generated@@93 $generated@@91 $generated@@92 $generated@@89))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@72 $generated@@38 $generated@@97 ($generated@@74 $generated@@95 $generated@@96))  (or (= $generated@@97 $generated@@75) (= ($generated@@94 $generated@@97) ($generated@@74 $generated@@95 $generated@@96))))
 :pattern ( ($generated@@72 $generated@@38 $generated@@97 ($generated@@74 $generated@@95 $generated@@96)))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@80 $generated@@38 $generated@@100 ($generated@@73 $generated@@98 $generated@@99) $generated@@101) ($generated@@80 $generated@@38 $generated@@100 ($generated@@74 $generated@@98 $generated@@99) $generated@@101))
 :pattern ( ($generated@@80 $generated@@38 $generated@@100 ($generated@@73 $generated@@98 $generated@@99) $generated@@101))
 :pattern ( ($generated@@80 $generated@@38 $generated@@100 ($generated@@74 $generated@@98 $generated@@99) $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ) (! (= ($generated@@26 $generated@@103 $generated@@104) (exists (($generated@@105 Int) ) (!  (and (and (<= 0 $generated@@105) (< $generated@@105 ($generated@@29 $generated@@103))) (= ($generated@@102 $generated@@103 $generated@@105) $generated@@104))
 :pattern ( ($generated@@102 $generated@@103 $generated@@105))
)))
 :pattern ( ($generated@@26 $generated@@103 $generated@@104))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ) (! (= ($generated@@80 $generated@@38 $generated@@108 ($generated@@74 $generated@@106 $generated@@107) $generated@@109)  (or (= $generated@@108 $generated@@75) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@109 $generated@@108) $generated@@0)))))
 :pattern ( ($generated@@80 $generated@@38 $generated@@108 ($generated@@74 $generated@@106 $generated@@107) $generated@@109))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (=> (or (not (= $generated@@110 $generated@@112)) (not true)) (=> (and ($generated@@34 $generated@@110 $generated@@111) ($generated@@34 $generated@@111 $generated@@112)) ($generated@@34 $generated@@110 $generated@@112)))
 :pattern ( ($generated@@34 $generated@@110 $generated@@111) ($generated@@34 $generated@@111 $generated@@112))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (!  (and (= ($generated@@113 ($generated@@31 $generated@@114 $generated@@115)) $generated@@114) (= ($generated@@25 ($generated@@31 $generated@@114 $generated@@115)) $generated@@115))
 :pattern ( ($generated@@31 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@T) ) (! (= ($generated@@116 ($generated@@69 $generated@@119 $generated@@117) $generated@@118) ($generated@@72 $generated@@119 $generated@@117 $generated@@118))
 :pattern ( ($generated@@116 ($generated@@69 $generated@@119 $generated@@117) $generated@@118))
)))
(assert (forall (($generated@@120 T@U) ) (! (<= 0 ($generated@@29 $generated@@120))
 :pattern ( ($generated@@29 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ) (! (= ($generated@@121 ($generated@@73 $generated@@122 $generated@@123)) $generated@@122)
 :pattern ( ($generated@@73 $generated@@122 $generated@@123))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (! (= ($generated@@124 ($generated@@73 $generated@@125 $generated@@126)) $generated@@126)
 :pattern ( ($generated@@73 $generated@@125 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (! (= ($generated@@127 ($generated@@74 $generated@@128 $generated@@129)) $generated@@128)
 :pattern ( ($generated@@74 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@130 ($generated@@74 $generated@@131 $generated@@132)) $generated@@132)
 :pattern ( ($generated@@74 $generated@@131 $generated@@132))
)))
(assert (= ($generated@@8 $generated@@133) 7))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (! (= ($generated@@80 $generated@@133 $generated@@135 ($generated@@134 $generated@@136) $generated@@137) (forall (($generated@@138 Int) ) (!  (=> (and (<= 0 $generated@@138) (< $generated@@138 ($generated@@29 $generated@@135))) ($generated@@79 ($generated@@102 $generated@@135 $generated@@138) $generated@@136 $generated@@137))
 :pattern ( ($generated@@102 $generated@@135 $generated@@138))
)))
 :pattern ( ($generated@@80 $generated@@133 $generated@@135 ($generated@@134 $generated@@136) $generated@@137))
)))
(assert  (=> (<= 0 $generated@@139) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> (or ($generated@@142 $generated@@143 $generated@@144 $generated@@145 $generated@@146) (and (< 0 $generated@@139) (and ($generated@@141 $generated@@145) (and (or (not (= $generated@@146 $generated@@75)) (not true)) (and ($generated@@72 $generated@@38 $generated@@146 ($generated@@73 $generated@@143 $generated@@144)) ($generated@@80 $generated@@38 $generated@@146 ($generated@@73 $generated@@143 $generated@@144) $generated@@145)))))) (= ($generated@@140 $generated@@143 $generated@@144 $generated@@145 $generated@@146)  (and (= ($generated@@29 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@145 $generated@@146) $generated@@30))) ($generated@@29 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@145 $generated@@146) $generated@@33)))) (forall (($generated@@147 Int) ($generated@@148 Int) ) (!  (=> (and (and (<= ($generated@@64 0) $generated@@147) (< $generated@@147 $generated@@148)) (< $generated@@148 ($generated@@29 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@145 $generated@@146) $generated@@30))))) (or (not (= ($generated@@102 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@145 $generated@@146) $generated@@30)) $generated@@147) ($generated@@102 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@145 $generated@@146) $generated@@30)) $generated@@148))) (not true)))
 :pattern ( ($generated@@102 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@145 $generated@@146) $generated@@30)) $generated@@148) ($generated@@102 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@145 $generated@@146) $generated@@30)) $generated@@147))
)))))
 :pattern ( ($generated@@140 $generated@@143 $generated@@144 $generated@@145 $generated@@146) ($generated@@141 $generated@@145))
))))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@149 ($generated@@134 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@134 $generated@@150))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@151 ($generated@@134 $generated@@152)) $generated)
 :pattern ( ($generated@@134 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@40 $generated@@154 ($generated@@69 $generated@@154 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@69 $generated@@154 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> ($generated@@116 $generated@@157 ($generated@@73 $generated@@155 $generated@@156)) (and (= ($generated@@69 $generated@@38 ($generated@@40 $generated@@38 $generated@@157)) $generated@@157) ($generated@@72 $generated@@38 ($generated@@40 $generated@@38 $generated@@157) ($generated@@73 $generated@@155 $generated@@156))))
 :pattern ( ($generated@@116 $generated@@157 ($generated@@73 $generated@@155 $generated@@156)))
)))
(assert (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@116 $generated@@160 ($generated@@74 $generated@@158 $generated@@159)) (and (= ($generated@@69 $generated@@38 ($generated@@40 $generated@@38 $generated@@160)) $generated@@160) ($generated@@72 $generated@@38 ($generated@@40 $generated@@38 $generated@@160) ($generated@@74 $generated@@158 $generated@@159))))
 :pattern ( ($generated@@116 $generated@@160 ($generated@@74 $generated@@158 $generated@@159)))
)))
(assert  (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@161 $generated@@164 $generated@@165 $generated@@166 ($generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@169 $generated@@170) $generated@@167)
 :weight 0
)) (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@161 $generated@@171 $generated@@172 $generated@@173 ($generated@@163 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@161 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@161 $generated@@180 $generated@@181 $generated@@182 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@161 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 Bool) ($generated@@193 T@U) ($generated@@194 T@U) ) (! (= ($generated@@13 ($generated@@161 $generated@@38 $generated@@36 $generated@@9 ($generated@@162 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))  (=> (and (or (not (= $generated@@193 $generated@@189)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@190 $generated@@193) $generated@@191)))) $generated@@192))
 :pattern ( ($generated@@161 $generated@@38 $generated@@36 $generated@@9 ($generated@@162 $generated@@189 $generated@@190 $generated@@191 $generated@@192) $generated@@193 $generated@@194))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> (and ($generated@@141 $generated@@197) (and (or (not (= $generated@@198 $generated@@75)) (not true)) (= ($generated@@94 $generated@@198) ($generated@@74 $generated@@195 $generated@@196)))) ($generated@@72 $generated@@133 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@197 $generated@@198) $generated@@30)) ($generated@@134 $generated@@195)))
 :pattern ( ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@197 $generated@@198) $generated@@30)) ($generated@@74 $generated@@195 $generated@@196))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> (and ($generated@@141 $generated@@201) (and (or (not (= $generated@@202 $generated@@75)) (not true)) (= ($generated@@94 $generated@@202) ($generated@@74 $generated@@199 $generated@@200)))) ($generated@@72 $generated@@133 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@201 $generated@@202) $generated@@33)) ($generated@@134 $generated@@200)))
 :pattern ( ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@201 $generated@@202) $generated@@33)) ($generated@@74 $generated@@199 $generated@@200))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ($generated@@206 T@U) ($generated@@207 T@U) ($generated@@208 T@U) ) (!  (=> (and (and (and ($generated@@141 $generated@@206) ($generated@@141 $generated@@207)) (and (or (not (= $generated@@208 $generated@@75)) (not true)) ($generated@@72 $generated@@38 $generated@@208 ($generated@@73 $generated@@204 $generated@@205)))) (and ($generated@@203 $generated@@206) ($generated@@34 $generated@@206 $generated@@207))) (=> (forall (($generated@@209 T@U) ($generated@@210 T@U) )  (=> (and (or (not (= $generated@@209 $generated@@75)) (not true)) (= $generated@@209 $generated@@208)) (= ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@206 $generated@@209) $generated@@210) ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@207 $generated@@209) $generated@@210)))) (= ($generated@@140 $generated@@204 $generated@@205 $generated@@206 $generated@@208) ($generated@@140 $generated@@204 $generated@@205 $generated@@207 $generated@@208))))
 :pattern ( ($generated@@203 $generated@@206) ($generated@@34 $generated@@206 $generated@@207) ($generated@@140 $generated@@204 $generated@@205 $generated@@207 $generated@@208))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (and (= ($generated@@151 ($generated@@73 $generated@@212 $generated@@213)) $generated@@2) (= ($generated@@211 ($generated@@73 $generated@@212 $generated@@213)) $generated@@5))
 :pattern ( ($generated@@73 $generated@@212 $generated@@213))
)))
(assert (forall (($generated@@214 T@U) ($generated@@215 T@U) ) (!  (and (= ($generated@@151 ($generated@@74 $generated@@214 $generated@@215)) $generated@@3) (= ($generated@@211 ($generated@@74 $generated@@214 $generated@@215)) $generated@@5))
 :pattern ( ($generated@@74 $generated@@214 $generated@@215))
)))
(assert (forall (($generated@@216 T@U) ($generated@@217 T@U) ) (!  (=> ($generated@@116 $generated@@216 ($generated@@134 $generated@@217)) (and (= ($generated@@69 $generated@@133 ($generated@@40 $generated@@133 $generated@@216)) $generated@@216) ($generated@@72 $generated@@133 ($generated@@40 $generated@@133 $generated@@216) ($generated@@134 $generated@@217))))
 :pattern ( ($generated@@116 $generated@@216 ($generated@@134 $generated@@217)))
)))
(assert (forall (($generated@@218 T@U) ($generated@@219 T@U) ($generated@@220 T@U) ($generated@@221 T@U) ) (!  (=> (and (and ($generated@@141 $generated@@220) (and (or (not (= $generated@@221 $generated@@75)) (not true)) (= ($generated@@94 $generated@@221) ($generated@@74 $generated@@218 $generated@@219)))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@220 $generated@@221) $generated@@0)))) ($generated@@80 $generated@@133 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@220 $generated@@221) $generated@@30)) ($generated@@134 $generated@@218) $generated@@220))
 :pattern ( ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@220 $generated@@221) $generated@@30)) ($generated@@74 $generated@@218 $generated@@219))
)))
(assert (forall (($generated@@222 T@U) ($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ) (!  (=> (and (and ($generated@@141 $generated@@224) (and (or (not (= $generated@@225 $generated@@75)) (not true)) (= ($generated@@94 $generated@@225) ($generated@@74 $generated@@222 $generated@@223)))) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@224 $generated@@225) $generated@@0)))) ($generated@@80 $generated@@133 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@224 $generated@@225) $generated@@33)) ($generated@@134 $generated@@223) $generated@@224))
 :pattern ( ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@224 $generated@@225) $generated@@33)) ($generated@@74 $generated@@222 $generated@@223))
)))
(assert (forall (($generated@@226 Int) ) (! (= ($generated@@69 $generated@@10 ($generated@@14 ($generated@@64 $generated@@226))) ($generated@@66 $generated@@37 ($generated@@69 $generated@@10 ($generated@@14 $generated@@226))))
 :pattern ( ($generated@@69 $generated@@10 ($generated@@14 ($generated@@64 $generated@@226))))
)))
(assert (forall (($generated@@227 T@U) ($generated@@228 T@T) ) (! (= ($generated@@69 $generated@@228 ($generated@@66 $generated@@228 $generated@@227)) ($generated@@66 $generated@@37 ($generated@@69 $generated@@228 $generated@@227)))
 :pattern ( ($generated@@69 $generated@@228 ($generated@@66 $generated@@228 $generated@@227)))
)))
(assert (forall (($generated@@229 T@U) ) (!  (=> (= ($generated@@29 $generated@@229) 0) (= $generated@@229 $generated@@27))
 :pattern ( ($generated@@29 $generated@@229))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (! (= ($generated@@72 $generated@@133 $generated@@230 ($generated@@134 $generated@@231)) (forall (($generated@@232 Int) ) (!  (=> (and (<= 0 $generated@@232) (< $generated@@232 ($generated@@29 $generated@@230))) ($generated@@116 ($generated@@102 $generated@@230 $generated@@232) $generated@@231))
 :pattern ( ($generated@@102 $generated@@230 $generated@@232))
)))
 :pattern ( ($generated@@72 $generated@@133 $generated@@230 ($generated@@134 $generated@@231)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@233 () Int)
(declare-fun $generated@@234 () T@U)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () T@U)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 () T@U)
(declare-fun $generated@@239 () T@U)
(declare-fun $generated@@240 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 7) (let (($generated@@241 true))
(let (($generated@@242  (=> (and (<= ($generated@@64 0) $generated@@233) (= (ControlFlow 0 2) (- 0 1))) (and (<= 0 $generated@@233) (< $generated@@233 ($generated@@29 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@234 $generated@@235) $generated@@30))))))))
(let (($generated@@243  (=> (=> (= $generated@@233 ($generated@@64 (- 0 1))) (not ($generated@@26 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@234 $generated@@235) $generated@@30)) $generated@@236))) (and (=> (= (ControlFlow 0 5) 2) $generated@@242) (=> (= (ControlFlow 0 5) 3) $generated@@241)))))
(let (($generated@@244  (=> (and (= $generated@@233 ($generated@@64 (- 0 1))) (not ($generated@@26 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@234 $generated@@235) $generated@@30)) $generated@@236))) (and (=> (= (ControlFlow 0 4) 2) $generated@@242) (=> (= (ControlFlow 0 4) 3) $generated@@241)))))
(let (($generated@@245  (=> (and (= $generated@@237 ($generated@@162 $generated@@75 $generated@@238 $generated@@0 false)) ($generated@@79 ($generated@@69 $generated@@38 $generated@@235) ($generated@@74 $generated@@239 $generated@@240) $generated@@238)) (=> (and (and (and ($generated@@142 $generated@@239 $generated@@240 $generated@@238 $generated@@235) ($generated@@140 $generated@@239 $generated@@240 $generated@@238 $generated@@235)) (and ($generated@@141 $generated@@234) ($generated@@203 $generated@@234))) (and (and (forall (($generated@@246 T@U) ) (!  (=> (and (or (not (= $generated@@246 $generated@@75)) (not true)) ($generated@@13 ($generated@@40 $generated@@9 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@238 $generated@@246) $generated@@0)))) (= ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@234 $generated@@246) ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@238 $generated@@246)))
 :pattern ( ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@234 $generated@@246))
)) ($generated@@34 $generated@@238 $generated@@234)) (and (<= ($generated@@64 (- 0 1)) $generated@@233) (< $generated@@233 ($generated@@29 ($generated@@40 $generated@@133 ($generated@@35 $generated@@36 $generated@@37 ($generated@@35 $generated@@38 ($generated@@39 $generated@@36 $generated@@37) $generated@@234 $generated@@235) $generated@@30))))))) (and (=> (= (ControlFlow 0 6) 4) $generated@@244) (=> (= (ControlFlow 0 6) 5) $generated@@243))))))
(let (($generated@@247  (=> (and (and (and ($generated@@141 $generated@@238) ($generated@@203 $generated@@238)) (and (or (not (= $generated@@235 $generated@@75)) (not true)) (and ($generated@@72 $generated@@38 $generated@@235 ($generated@@73 $generated@@239 $generated@@240)) ($generated@@80 $generated@@38 $generated@@235 ($generated@@73 $generated@@239 $generated@@240) $generated@@238)))) (and (and ($generated@@116 $generated@@236 $generated@@239) ($generated@@79 $generated@@236 $generated@@239 $generated@@238)) (and (= 1 $generated@@139) (= (ControlFlow 0 7) 6)))) $generated@@245)))
$generated@@247)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
