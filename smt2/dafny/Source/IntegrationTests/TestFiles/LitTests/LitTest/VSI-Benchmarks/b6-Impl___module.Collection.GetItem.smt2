(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@37 (T@U) Int)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) Bool)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@75 () T@U)
(declare-fun $generated@@78 (Int) Int)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@T T@U) T@U)
(declare-fun $generated@@86 (T@T T@U T@U) Bool)
(declare-fun $generated@@87 () T@T)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@U T@U T@U) Bool)
(declare-fun $generated@@101 (T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@105 () T@T)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@107 (T@U) T@U)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@123 (T@U) T@U)
(declare-fun $generated@@135 (T@U Int) T@U)
(declare-fun $generated@@140 (T@U) T@U)
(declare-fun $generated@@143 (T@U) T@U)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@148 (T@U) T@U)
(declare-fun $generated@@152 () Int)
(declare-fun $generated@@153 (T@U T@U T@U) Bool)
(declare-fun $generated@@154 (T@U T@U T@U) Bool)
(declare-fun $generated@@158 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@159 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@160 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@1) 0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert (= ($generated@@12 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ($generated@@36 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@34) $generated@@36) ($generated@@30 $generated@@31 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 ($generated@@32 $generated@@34) $generated@@36))
 :pattern ( ($generated@@30 $generated@@31 $generated@@35 ($generated@@33 $generated@@34) $generated@@36))
)))
(assert (= ($generated@@37 $generated@@38) 0))
(assert (forall (($generated@@41 T@U) ($generated@@42 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@41 $generated@@39 $generated@@42) ($generated@@30 $generated@@31 $generated@@41 $generated@@40 $generated@@42))
 :pattern ( ($generated@@30 $generated@@31 $generated@@41 $generated@@39 $generated@@42))
 :pattern ( ($generated@@30 $generated@@31 $generated@@41 $generated@@40 $generated@@42))
)))
(assert (= ($generated@@28 $generated@@43) 0))
(assert (= ($generated@@44 $generated@@5 $generated@@10) $generated@@43))
(assert ($generated@@45 $generated@@43))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@12 $generated@@49) 4)) (= ($generated@@12 $generated@@50) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@12 ($generated@@51 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@73 ($generated@@33 $generated@@72) $generated@@74)  (or (= $generated@@73 $generated@@46) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@74 $generated@@73) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@73 ($generated@@33 $generated@@72) $generated@@74))
)))
(assert (= ($generated@@28 $generated@@75) 0))
(assert (= ($generated@@44 $generated@@5 $generated@@11) $generated@@75))
(assert  (not ($generated@@45 $generated@@75)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@76 $generated@@40 $generated@@77)  (or (= $generated@@76 $generated@@46) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@77 $generated@@76) $generated@@1)))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@76 $generated@@40 $generated@@77))
)))
(assert (forall (($generated@@79 Int) ) (! (= ($generated@@78 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@79))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 $generated@@81) $generated@@81)
 :pattern ( ($generated@@80 $generated@@82 $generated@@81))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@T) ) (! (= ($generated@@83 $generated@@85 ($generated@@47 $generated@@85 $generated@@84)) $generated@@84)
 :pattern ( ($generated@@47 $generated@@85 $generated@@84))
)))
(assert (= ($generated@@12 $generated@@87) 7))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@86 $generated@@87 $generated@@91 ($generated@@88 $generated@@92)) (forall (($generated@@93 T@U) ) (!  (=> ($generated@@89 $generated@@91 $generated@@93) ($generated@@90 $generated@@93 $generated@@92))
 :pattern ( ($generated@@89 $generated@@91 $generated@@93))
)))
 :pattern ( ($generated@@86 $generated@@87 $generated@@91 ($generated@@88 $generated@@92)))
)))
(assert ($generated@@45 $generated@@1))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@86 $generated@@31 $generated@@95 ($generated@@32 $generated@@94))  (and ($generated@@86 $generated@@31 $generated@@95 ($generated@@33 $generated@@94)) (or (not (= $generated@@95 $generated@@46)) (not true))))
 :pattern ( ($generated@@86 $generated@@31 $generated@@95 ($generated@@32 $generated@@94)))
 :pattern ( ($generated@@86 $generated@@31 $generated@@95 ($generated@@33 $generated@@94)))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@96 ($generated@@83 $generated@@100 $generated@@97) $generated@@98 $generated@@99) ($generated@@30 $generated@@100 $generated@@97 $generated@@98 $generated@@99))
 :pattern ( ($generated@@96 ($generated@@83 $generated@@100 $generated@@97) $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@103 T@U) ) (!  (and (= ($generated@@101 ($generated@@33 $generated@@103)) $generated@@6) (= ($generated@@102 ($generated@@33 $generated@@103)) $generated@@9))
 :pattern ( ($generated@@33 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ) (!  (and (= ($generated@@101 ($generated@@32 $generated@@104)) $generated@@7) (= ($generated@@102 ($generated@@32 $generated@@104)) $generated@@9))
 :pattern ( ($generated@@32 $generated@@104))
)))
(assert (= ($generated@@12 $generated@@105) 8))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (=> (and (and ($generated@@106 $generated@@110) (and (or (not (= $generated@@111 $generated@@46)) (not true)) (= ($generated@@107 $generated@@111) ($generated@@33 $generated@@109)))) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@110 $generated@@111) $generated@@1)))) ($generated@@30 $generated@@105 ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@110 $generated@@111) $generated@@75)) ($generated@@108 $generated@@109) $generated@@110))
 :pattern ( ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@110 $generated@@111) $generated@@75)) ($generated@@33 $generated@@109))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@90 $generated@@112 $generated@@40) (and (= ($generated@@83 $generated@@31 ($generated@@47 $generated@@31 $generated@@112)) $generated@@112) ($generated@@86 $generated@@31 ($generated@@47 $generated@@31 $generated@@112) $generated@@40)))
 :pattern ( ($generated@@90 $generated@@112 $generated@@40))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@90 $generated@@113 $generated@@39) (and (= ($generated@@83 $generated@@31 ($generated@@47 $generated@@31 $generated@@113)) $generated@@113) ($generated@@86 $generated@@31 ($generated@@47 $generated@@31 $generated@@113) $generated@@39)))
 :pattern ( ($generated@@90 $generated@@113 $generated@@39))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@86 $generated@@31 $generated@@115 ($generated@@33 $generated@@114))  (or (= $generated@@115 $generated@@46) (= ($generated@@107 $generated@@115) ($generated@@33 $generated@@114))))
 :pattern ( ($generated@@86 $generated@@31 $generated@@115 ($generated@@33 $generated@@114)))
)))
(assert (forall (($generated@@116 T@U) ) (! (= ($generated@@86 $generated@@31 $generated@@116 $generated@@39)  (and ($generated@@86 $generated@@31 $generated@@116 $generated@@40) (or (not (= $generated@@116 $generated@@46)) (not true))))
 :pattern ( ($generated@@86 $generated@@31 $generated@@116 $generated@@39))
 :pattern ( ($generated@@86 $generated@@31 $generated@@116 $generated@@40))
)))
(assert (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (and ($generated@@106 $generated@@118) (and (or (not (= $generated@@119 $generated@@46)) (not true)) (= ($generated@@107 $generated@@119) ($generated@@33 $generated@@117)))) ($generated@@86 $generated@@87 ($generated@@47 $generated@@87 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@118 $generated@@119) $generated@@43)) ($generated@@88 $generated@@39)))
 :pattern ( ($generated@@47 $generated@@87 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@118 $generated@@119) $generated@@43)) ($generated@@33 $generated@@117))
)))
(assert (forall (($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ) (!  (=> (and (and ($generated@@106 $generated@@121) (and (or (not (= $generated@@122 $generated@@46)) (not true)) (= ($generated@@107 $generated@@122) ($generated@@33 $generated@@120)))) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@121 $generated@@122) $generated@@1)))) ($generated@@30 $generated@@87 ($generated@@47 $generated@@87 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@121 $generated@@122) $generated@@43)) ($generated@@88 $generated@@39) $generated@@121))
 :pattern ( ($generated@@47 $generated@@87 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@121 $generated@@122) $generated@@43)) ($generated@@33 $generated@@120))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (and (= ($generated@@123 ($generated@@44 $generated@@124 $generated@@125)) $generated@@124) (= ($generated@@29 ($generated@@44 $generated@@124 $generated@@125)) $generated@@125))
 :pattern ( ($generated@@44 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@T) ) (! (= ($generated@@90 ($generated@@83 $generated@@128 $generated@@126) $generated@@127) ($generated@@86 $generated@@128 $generated@@126 $generated@@127))
 :pattern ( ($generated@@90 ($generated@@83 $generated@@128 $generated@@126) $generated@@127))
)))
(assert (forall (($generated@@129 T@U) ) (! (<= 0 ($generated@@37 $generated@@129))
 :pattern ( ($generated@@37 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (! (= ($generated@@30 $generated@@87 $generated@@130 ($generated@@88 $generated@@131) $generated@@132) (forall (($generated@@133 T@U) ) (!  (=> ($generated@@89 $generated@@130 $generated@@133) ($generated@@96 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@89 $generated@@130 $generated@@133))
)))
 :pattern ( ($generated@@30 $generated@@87 $generated@@130 ($generated@@88 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ) (! ($generated@@86 $generated@@31 $generated@@134 $generated@@40)
 :pattern ( ($generated@@86 $generated@@31 $generated@@134 $generated@@40))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ) (! (= ($generated@@30 $generated@@105 $generated@@136 ($generated@@108 $generated@@137) $generated@@138) (forall (($generated@@139 Int) ) (!  (=> (and (<= 0 $generated@@139) (< $generated@@139 ($generated@@37 $generated@@136))) ($generated@@96 ($generated@@135 $generated@@136 $generated@@139) $generated@@137 $generated@@138))
 :pattern ( ($generated@@135 $generated@@136 $generated@@139))
)))
 :pattern ( ($generated@@30 $generated@@105 $generated@@136 ($generated@@108 $generated@@137) $generated@@138))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@140 ($generated@@88 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@88 $generated@@141))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@101 ($generated@@88 $generated@@142)) $generated)
 :pattern ( ($generated@@88 $generated@@142))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@143 ($generated@@108 $generated@@144)) $generated@@144)
 :pattern ( ($generated@@108 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@101 ($generated@@108 $generated@@145)) $generated@@0)
 :pattern ( ($generated@@108 $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@146 ($generated@@33 $generated@@147)) $generated@@147)
 :pattern ( ($generated@@33 $generated@@147))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@148 ($generated@@32 $generated@@149)) $generated@@149)
 :pattern ( ($generated@@32 $generated@@149))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@T) ) (! (= ($generated@@47 $generated@@151 ($generated@@83 $generated@@151 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@83 $generated@@151 $generated@@150))
)))
(assert  (=> (<= 0 $generated@@152) (forall (($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ) (!  (=> (or ($generated@@154 $generated@@155 $generated@@156 $generated@@157) (and (< 0 $generated@@152) (and ($generated@@106 $generated@@156) (and (or (not (= $generated@@157 $generated@@46)) (not true)) (and ($generated@@86 $generated@@31 $generated@@157 ($generated@@32 $generated@@155)) ($generated@@30 $generated@@31 $generated@@157 ($generated@@32 $generated@@155) $generated@@156)))))) (= ($generated@@153 $generated@@155 $generated@@156 $generated@@157) ($generated@@89 ($generated@@47 $generated@@87 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@156 $generated@@157) $generated@@43)) ($generated@@83 $generated@@31 $generated@@157))))
 :pattern ( ($generated@@153 $generated@@155 $generated@@156 $generated@@157) ($generated@@106 $generated@@156))
))))
(assert  (and (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@158 $generated@@161 $generated@@162 $generated@@163 ($generated@@160 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@166 $generated@@167) $generated@@164)
 :weight 0
)) (and (forall (($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@T) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ) (!  (or (= $generated@@173 $generated@@175) (= ($generated@@158 $generated@@168 $generated@@169 $generated@@170 ($generated@@160 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@173 $generated@@174 $generated@@171) $generated@@175 $generated@@176) ($generated@@158 $generated@@168 $generated@@169 $generated@@170 $generated@@172 $generated@@175 $generated@@176)))
 :weight 0
)) (forall (($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@158 $generated@@177 $generated@@178 $generated@@179 ($generated@@160 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@182 $generated@@183 $generated@@180) $generated@@184 $generated@@185) ($generated@@158 $generated@@177 $generated@@178 $generated@@179 $generated@@181 $generated@@184 $generated@@185)))
 :weight 0
)))))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ($generated@@189 Bool) ($generated@@190 T@U) ($generated@@191 T@U) ) (! (= ($generated@@17 ($generated@@158 $generated@@31 $generated@@49 $generated@@13 ($generated@@159 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))  (=> (and (or (not (= $generated@@190 $generated@@186)) (not true)) ($generated@@17 ($generated@@47 $generated@@13 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@187 $generated@@190) $generated@@188)))) $generated@@189))
 :pattern ( ($generated@@158 $generated@@31 $generated@@49 $generated@@13 ($generated@@159 $generated@@186 $generated@@187 $generated@@188 $generated@@189) $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> (and ($generated@@106 $generated@@193) (and (or (not (= $generated@@194 $generated@@46)) (not true)) (= ($generated@@107 $generated@@194) ($generated@@33 $generated@@192)))) ($generated@@86 $generated@@105 ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@193 $generated@@194) $generated@@75)) ($generated@@108 $generated@@192)))
 :pattern ( ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@193 $generated@@194) $generated@@75)) ($generated@@33 $generated@@192))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> ($generated@@90 $generated@@195 ($generated@@88 $generated@@196)) (and (= ($generated@@83 $generated@@87 ($generated@@47 $generated@@87 $generated@@195)) $generated@@195) ($generated@@86 $generated@@87 ($generated@@47 $generated@@87 $generated@@195) ($generated@@88 $generated@@196))))
 :pattern ( ($generated@@90 $generated@@195 ($generated@@88 $generated@@196)))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@U) ) (!  (=> ($generated@@90 $generated@@197 ($generated@@108 $generated@@198)) (and (= ($generated@@83 $generated@@105 ($generated@@47 $generated@@105 $generated@@197)) $generated@@197) ($generated@@86 $generated@@105 ($generated@@47 $generated@@105 $generated@@197) ($generated@@108 $generated@@198))))
 :pattern ( ($generated@@90 $generated@@197 ($generated@@108 $generated@@198)))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@U) ) (!  (=> ($generated@@90 $generated@@200 ($generated@@33 $generated@@199)) (and (= ($generated@@83 $generated@@31 ($generated@@47 $generated@@31 $generated@@200)) $generated@@200) ($generated@@86 $generated@@31 ($generated@@47 $generated@@31 $generated@@200) ($generated@@33 $generated@@199))))
 :pattern ( ($generated@@90 $generated@@200 ($generated@@33 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ($generated@@202 T@U) ) (!  (=> ($generated@@90 $generated@@202 ($generated@@32 $generated@@201)) (and (= ($generated@@83 $generated@@31 ($generated@@47 $generated@@31 $generated@@202)) $generated@@202) ($generated@@86 $generated@@31 ($generated@@47 $generated@@31 $generated@@202) ($generated@@32 $generated@@201))))
 :pattern ( ($generated@@90 $generated@@202 ($generated@@32 $generated@@201)))
)))
(assert (= ($generated@@101 $generated@@40) $generated@@3))
(assert (= ($generated@@102 $generated@@40) $generated@@8))
(assert (= ($generated@@101 $generated@@39) $generated@@4))
(assert (= ($generated@@102 $generated@@39) $generated@@8))
(assert (forall (($generated@@203 Int) ) (! (= ($generated@@83 $generated@@14 ($generated@@18 ($generated@@78 $generated@@203))) ($generated@@80 $generated@@50 ($generated@@83 $generated@@14 ($generated@@18 $generated@@203))))
 :pattern ( ($generated@@83 $generated@@14 ($generated@@18 ($generated@@78 $generated@@203))))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@T) ) (! (= ($generated@@83 $generated@@205 ($generated@@80 $generated@@205 $generated@@204)) ($generated@@80 $generated@@50 ($generated@@83 $generated@@205 $generated@@204)))
 :pattern ( ($generated@@83 $generated@@205 ($generated@@80 $generated@@205 $generated@@204)))
)))
(assert (forall (($generated@@206 T@U) ) (!  (=> (= ($generated@@37 $generated@@206) 0) (= $generated@@206 $generated@@38))
 :pattern ( ($generated@@37 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ) (! (= ($generated@@86 $generated@@105 $generated@@207 ($generated@@108 $generated@@208)) (forall (($generated@@209 Int) ) (!  (=> (and (<= 0 $generated@@209) (< $generated@@209 ($generated@@37 $generated@@207))) ($generated@@90 ($generated@@135 $generated@@207 $generated@@209) $generated@@208))
 :pattern ( ($generated@@135 $generated@@207 $generated@@209))
)))
 :pattern ( ($generated@@86 $generated@@105 $generated@@207 ($generated@@108 $generated@@208)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () Int)
(declare-fun $generated@@213 () T@U)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(declare-fun $generated@@216 () T@U)
(declare-fun $generated@@217 () Bool)
(declare-fun $generated@@218 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 5) (let (($generated@@219  (=> (= $generated@@210 ($generated@@159 $generated@@46 $generated@@211 $generated@@1 false)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@37 ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@211 $generated@@213) $generated@@75)))))) (=> (and (<= 0 $generated@@212) (< $generated@@212 ($generated@@37 ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@211 $generated@@213) $generated@@75))))) (=> (= $generated@@214 ($generated@@135 ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@211 $generated@@213) $generated@@75)) $generated@@212)) (and (=> (= (ControlFlow 0 2) (- 0 3)) true) (=> (= (ControlFlow 0 2) (- 0 1)) (= ($generated@@135 ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@211 $generated@@213) $generated@@75)) $generated@@212) $generated@@214)))))))))
(let (($generated@@220  (=> (and ($generated@@106 $generated@@211) ($generated@@215 $generated@@211)) (=> (and (and (or (not (= $generated@@213 $generated@@46)) (not true)) (and ($generated@@86 $generated@@31 $generated@@213 ($generated@@32 $generated@@216)) ($generated@@30 $generated@@31 $generated@@213 ($generated@@32 $generated@@216) $generated@@211))) (and (=> $generated@@217 (and ($generated@@90 $generated@@218 $generated@@216) ($generated@@96 $generated@@218 $generated@@216 $generated@@211))) (= 1 $generated@@152))) (=> (and (and (and ($generated@@154 $generated@@216 $generated@@211 $generated@@213) (and ($generated@@153 $generated@@216 $generated@@211 $generated@@213) ($generated@@89 ($generated@@47 $generated@@87 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@211 $generated@@213) $generated@@43)) ($generated@@83 $generated@@31 $generated@@213)))) (<= ($generated@@78 0) $generated@@212)) (and (< $generated@@212 ($generated@@37 ($generated@@47 $generated@@105 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@211 $generated@@213) $generated@@75)))) (= (ControlFlow 0 5) 2))) $generated@@219)))))
$generated@@220)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
