(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 (T@T) Int)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 (Bool) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (Int) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (Real) T@U)
(declare-fun $generated@@26 (T@U) Real)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 (T@U) Int)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@38 (T@T T@U T@U) Bool)
(declare-fun $generated@@39 () T@T)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@U) T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@46 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 (T@U T@U) T@U)
(declare-fun $generated@@54 (T@U) Bool)
(declare-fun $generated@@55 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 () Int)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@60 (T@U T@U) Bool)
(declare-fun $generated@@61 (T@U T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 () T@T)
(declare-fun $generated@@67 (T@T T@T) T@T)
(declare-fun $generated@@68 (T@T T@U) T@U)
(declare-fun $generated@@69 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@70 (T@T) T@T)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@95 (Int) Int)
(declare-fun $generated@@97 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@U) T@U)
(declare-fun $generated@@103 (T@U T@U) Bool)
(declare-fun $generated@@109 (T@U T@U T@U) Bool)
(declare-fun $generated@@114 () T@T)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@128 (T@U) T@U)
(declare-fun $generated@@142 (T@U Int) T@U)
(declare-fun $generated@@147 (T@U) T@U)
(declare-fun $generated@@150 (T@U) T@U)
(declare-fun $generated@@157 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@158 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@159 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@197 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@17 $generated@@18) 0) (= ($generated@@17 $generated@@19) 1)) (= ($generated@@17 $generated@@20) 2)) (forall (($generated@@27 Bool) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Int) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 Real) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16)
)
(assert (= ($generated@@33 $generated@@5) 0))
(assert (= ($generated@@34 $generated) $generated@@1))
(assert (= ($generated@@34 $generated@@0) $generated@@2))
(assert (= ($generated@@35 $generated@@5) $generated@@6))
(assert (= ($generated@@36 $generated@@37) 0))
(assert (= ($generated@@17 $generated@@39) 3))
(assert (forall (($generated@@43 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@43 $generated@@40)  (or (= $generated@@43 $generated@@41) (= ($generated@@42 $generated@@43) $generated@@40)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@43 $generated@@40))
)))
(assert (forall (($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@44 $generated@@39 $generated@@47 $generated@@45 $generated@@48) ($generated@@44 $generated@@39 $generated@@47 $generated@@46 $generated@@48))
 :pattern ( ($generated@@44 $generated@@39 $generated@@47 $generated@@45 $generated@@48))
 :pattern ( ($generated@@44 $generated@@39 $generated@@47 $generated@@46 $generated@@48))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@44 $generated@@39 $generated@@50 $generated@@49 $generated@@51) ($generated@@44 $generated@@39 $generated@@50 $generated@@40 $generated@@51))
 :pattern ( ($generated@@44 $generated@@39 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@44 $generated@@39 $generated@@50 $generated@@40 $generated@@51))
)))
(assert (= ($generated@@33 $generated@@52) 0))
(assert (= ($generated@@53 $generated@@11 $generated@@14) $generated@@52))
(assert ($generated@@54 $generated@@52))
(assert (= ($generated@@33 $generated@@55) 0))
(assert (= ($generated@@53 $generated@@11 $generated@@15) $generated@@55))
(assert  (not ($generated@@54 $generated@@55)))
(assert (= ($generated@@33 $generated@@56) 0))
(assert (= ($generated@@53 $generated@@11 $generated@@16) $generated@@56))
(assert  (not ($generated@@54 $generated@@56)))
(assert  (and (and (and (and (and (and (and (= ($generated@@17 $generated@@63) 4) (forall (($generated@@72 T@T) ($generated@@73 T@T) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@64 $generated@@72 $generated@@73 ($generated@@69 $generated@@72 $generated@@73 $generated@@75 $generated@@76 $generated@@74) $generated@@76) $generated@@74)
 :weight 0
))) (forall (($generated@@77 T@T) ($generated@@78 T@T) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (or (= $generated@@81 $generated@@82) (= ($generated@@64 $generated@@77 $generated@@78 ($generated@@69 $generated@@77 $generated@@78 $generated@@80 $generated@@81 $generated@@79) $generated@@82) ($generated@@64 $generated@@77 $generated@@78 $generated@@80 $generated@@82)))
 :weight 0
))) (= ($generated@@17 $generated@@65) 5)) (= ($generated@@17 $generated@@66) 6)) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (= ($generated@@17 ($generated@@67 $generated@@83 $generated@@84)) 7))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@70 ($generated@@67 $generated@@85 $generated@@86)) $generated@@85)
 :pattern ( ($generated@@67 $generated@@85 $generated@@86))
))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@71 ($generated@@67 $generated@@87 $generated@@88)) $generated@@88)
 :pattern ( ($generated@@67 $generated@@87 $generated@@88))
))))
(assert  (=> (<= 0 $generated@@57) (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (or ($generated@@60 $generated@@89 $generated@@90) (and (< 0 $generated@@57) (and ($generated@@59 $generated@@89) (and (or (not (= $generated@@90 $generated@@41)) (not true)) (and ($generated@@38 $generated@@39 $generated@@90 $generated@@49) ($generated@@44 $generated@@39 $generated@@90 $generated@@49 $generated@@89)))))) (= ($generated@@58 $generated@@89 $generated@@90)  (and ($generated@@61 ($generated@@62 $generated@@63 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@89 $generated@@90) $generated@@52)) ($generated@@68 $generated@@39 $generated@@90)) ($generated@@22 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@89 $generated@@90) $generated@@55))))))
 :pattern ( ($generated@@58 $generated@@89 $generated@@90) ($generated@@59 $generated@@89))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@44 $generated@@39 $generated@@91 $generated@@46 $generated@@92)  (or (= $generated@@91 $generated@@41) ($generated@@22 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@92 $generated@@91) $generated@@5)))))
 :pattern ( ($generated@@44 $generated@@39 $generated@@91 $generated@@46 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@44 $generated@@39 $generated@@93 $generated@@40 $generated@@94)  (or (= $generated@@93 $generated@@41) ($generated@@22 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@94 $generated@@93) $generated@@5)))))
 :pattern ( ($generated@@44 $generated@@39 $generated@@93 $generated@@40 $generated@@94))
)))
(assert (forall (($generated@@96 Int) ) (! (= ($generated@@95 $generated@@96) $generated@@96)
 :pattern ( ($generated@@95 $generated@@96))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@97 $generated@@99 $generated@@98) $generated@@98)
 :pattern ( ($generated@@97 $generated@@99 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@68 $generated@@101 ($generated@@62 $generated@@101 $generated@@100)) $generated@@100)
 :pattern ( ($generated@@62 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@38 $generated@@63 $generated@@104 ($generated@@102 $generated@@105)) (forall (($generated@@106 T@U) ) (!  (=> ($generated@@61 $generated@@104 $generated@@106) ($generated@@103 $generated@@106 $generated@@105))
 :pattern ( ($generated@@61 $generated@@104 $generated@@106))
)))
 :pattern ( ($generated@@38 $generated@@63 $generated@@104 ($generated@@102 $generated@@105)))
)))
(assert ($generated@@54 $generated@@5))
(assert (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and (and ($generated@@59 $generated@@107) (and (or (not (= $generated@@108 $generated@@41)) (not true)) (= ($generated@@42 $generated@@108) $generated@@40))) ($generated@@22 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@107 $generated@@108) $generated@@5)))) ($generated@@44 $generated@@18 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@107 $generated@@108) $generated@@55)) $generated $generated@@107))
 :pattern ( ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@107 $generated@@108) $generated@@55)))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@T) ) (! (= ($generated@@109 ($generated@@68 $generated@@113 $generated@@110) $generated@@111 $generated@@112) ($generated@@44 $generated@@113 $generated@@110 $generated@@111 $generated@@112))
 :pattern ( ($generated@@109 ($generated@@68 $generated@@113 $generated@@110) $generated@@111 $generated@@112))
)))
(assert (= ($generated@@17 $generated@@114) 8))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (!  (=> (and (and ($generated@@59 $generated@@116) (and (or (not (= $generated@@117 $generated@@41)) (not true)) (= ($generated@@42 $generated@@117) $generated@@40))) ($generated@@22 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@116 $generated@@117) $generated@@5)))) ($generated@@44 $generated@@114 ($generated@@62 $generated@@114 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@116 $generated@@117) $generated@@56)) ($generated@@115 $generated@@0) $generated@@116))
 :pattern ( ($generated@@62 $generated@@114 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@116 $generated@@117) $generated@@56)))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@103 $generated@@118 $generated@@46) (and (= ($generated@@68 $generated@@39 ($generated@@62 $generated@@39 $generated@@118)) $generated@@118) ($generated@@38 $generated@@39 ($generated@@62 $generated@@39 $generated@@118) $generated@@46)))
 :pattern ( ($generated@@103 $generated@@118 $generated@@46))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@103 $generated@@119 $generated@@45) (and (= ($generated@@68 $generated@@39 ($generated@@62 $generated@@39 $generated@@119)) $generated@@119) ($generated@@38 $generated@@39 ($generated@@62 $generated@@39 $generated@@119) $generated@@45)))
 :pattern ( ($generated@@103 $generated@@119 $generated@@45))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@103 $generated@@120 $generated@@49) (and (= ($generated@@68 $generated@@39 ($generated@@62 $generated@@39 $generated@@120)) $generated@@120) ($generated@@38 $generated@@39 ($generated@@62 $generated@@39 $generated@@120) $generated@@49)))
 :pattern ( ($generated@@103 $generated@@120 $generated@@49))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@103 $generated@@121 $generated@@40) (and (= ($generated@@68 $generated@@39 ($generated@@62 $generated@@39 $generated@@121)) $generated@@121) ($generated@@38 $generated@@39 ($generated@@62 $generated@@39 $generated@@121) $generated@@40)))
 :pattern ( ($generated@@103 $generated@@121 $generated@@40))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@122 $generated@@45)  (and ($generated@@38 $generated@@39 $generated@@122 $generated@@46) (or (not (= $generated@@122 $generated@@41)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@122 $generated@@45))
 :pattern ( ($generated@@38 $generated@@39 $generated@@122 $generated@@46))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@38 $generated@@39 $generated@@123 $generated@@49)  (and ($generated@@38 $generated@@39 $generated@@123 $generated@@40) (or (not (= $generated@@123 $generated@@41)) (not true))))
 :pattern ( ($generated@@38 $generated@@39 $generated@@123 $generated@@49))
 :pattern ( ($generated@@38 $generated@@39 $generated@@123 $generated@@40))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (and ($generated@@59 $generated@@124) (and (or (not (= $generated@@125 $generated@@41)) (not true)) (= ($generated@@42 $generated@@125) $generated@@40))) ($generated@@38 $generated@@63 ($generated@@62 $generated@@63 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@124 $generated@@125) $generated@@52)) ($generated@@102 $generated@@45)))
 :pattern ( ($generated@@62 $generated@@63 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@124 $generated@@125) $generated@@52)))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ) (!  (=> (and (and ($generated@@59 $generated@@126) (and (or (not (= $generated@@127 $generated@@41)) (not true)) (= ($generated@@42 $generated@@127) $generated@@40))) ($generated@@22 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@126 $generated@@127) $generated@@5)))) ($generated@@44 $generated@@63 ($generated@@62 $generated@@63 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@126 $generated@@127) $generated@@52)) ($generated@@102 $generated@@45) $generated@@126))
 :pattern ( ($generated@@62 $generated@@63 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@126 $generated@@127) $generated@@52)))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ) (!  (and (= ($generated@@128 ($generated@@53 $generated@@129 $generated@@130)) $generated@@129) (= ($generated@@35 ($generated@@53 $generated@@129 $generated@@130)) $generated@@130))
 :pattern ( ($generated@@53 $generated@@129 $generated@@130))
)))
(assert (forall (($generated@@131 T@U) ) (!  (=> ($generated@@103 $generated@@131 $generated@@0) (and (= ($generated@@68 $generated@@19 ($generated@@62 $generated@@19 $generated@@131)) $generated@@131) ($generated@@38 $generated@@19 ($generated@@62 $generated@@19 $generated@@131) $generated@@0)))
 :pattern ( ($generated@@103 $generated@@131 $generated@@0))
)))
(assert (forall (($generated@@132 T@U) ) (!  (=> ($generated@@103 $generated@@132 $generated) (and (= ($generated@@68 $generated@@18 ($generated@@62 $generated@@18 $generated@@132)) $generated@@132) ($generated@@38 $generated@@18 ($generated@@62 $generated@@18 $generated@@132) $generated)))
 :pattern ( ($generated@@103 $generated@@132 $generated))
)))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@T) ) (! (= ($generated@@103 ($generated@@68 $generated@@135 $generated@@133) $generated@@134) ($generated@@38 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@103 ($generated@@68 $generated@@135 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@136 T@U) ) (! (<= 0 ($generated@@36 $generated@@136))
 :pattern ( ($generated@@36 $generated@@136))
)))
(assert (forall (($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@44 $generated@@63 $generated@@137 ($generated@@102 $generated@@138) $generated@@139) (forall (($generated@@140 T@U) ) (!  (=> ($generated@@61 $generated@@137 $generated@@140) ($generated@@109 $generated@@140 $generated@@138 $generated@@139))
 :pattern ( ($generated@@61 $generated@@137 $generated@@140))
)))
 :pattern ( ($generated@@44 $generated@@63 $generated@@137 ($generated@@102 $generated@@138) $generated@@139))
)))
(assert (forall (($generated@@141 T@U) ) (! ($generated@@38 $generated@@39 $generated@@141 $generated@@46)
 :pattern ( ($generated@@38 $generated@@39 $generated@@141 $generated@@46))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (! (= ($generated@@44 $generated@@114 $generated@@143 ($generated@@115 $generated@@144) $generated@@145) (forall (($generated@@146 Int) ) (!  (=> (and (<= 0 $generated@@146) (< $generated@@146 ($generated@@36 $generated@@143))) ($generated@@109 ($generated@@142 $generated@@143 $generated@@146) $generated@@144 $generated@@145))
 :pattern ( ($generated@@142 $generated@@143 $generated@@146))
)))
 :pattern ( ($generated@@44 $generated@@114 $generated@@143 ($generated@@115 $generated@@144) $generated@@145))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@147 ($generated@@102 $generated@@148)) $generated@@148)
 :pattern ( ($generated@@102 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@34 ($generated@@102 $generated@@149)) $generated@@3)
 :pattern ( ($generated@@102 $generated@@149))
)))
(assert (forall (($generated@@151 T@U) ) (! (= ($generated@@150 ($generated@@115 $generated@@151)) $generated@@151)
 :pattern ( ($generated@@115 $generated@@151))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@34 ($generated@@115 $generated@@152)) $generated@@4)
 :pattern ( ($generated@@115 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@62 $generated@@154 ($generated@@68 $generated@@154 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@68 $generated@@154 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and ($generated@@59 $generated@@155) (and (or (not (= $generated@@156 $generated@@41)) (not true)) (= ($generated@@42 $generated@@156) $generated@@40))) ($generated@@38 $generated@@18 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@155 $generated@@156) $generated@@55)) $generated))
 :pattern ( ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@155 $generated@@156) $generated@@55)))
)))
(assert  (and (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (! (= ($generated@@157 $generated@@160 $generated@@161 $generated@@162 ($generated@@159 $generated@@160 $generated@@161 $generated@@162 $generated@@164 $generated@@165 $generated@@166 $generated@@163) $generated@@165 $generated@@166) $generated@@163)
 :weight 0
)) (and (forall (($generated@@167 T@T) ($generated@@168 T@T) ($generated@@169 T@T) ($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 T@U) ) (!  (or (= $generated@@172 $generated@@174) (= ($generated@@157 $generated@@167 $generated@@168 $generated@@169 ($generated@@159 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@172 $generated@@173 $generated@@170) $generated@@174 $generated@@175) ($generated@@157 $generated@@167 $generated@@168 $generated@@169 $generated@@171 $generated@@174 $generated@@175)))
 :weight 0
)) (forall (($generated@@176 T@T) ($generated@@177 T@T) ($generated@@178 T@T) ($generated@@179 T@U) ($generated@@180 T@U) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ) (!  (or (= $generated@@182 $generated@@184) (= ($generated@@157 $generated@@176 $generated@@177 $generated@@178 ($generated@@159 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@181 $generated@@182 $generated@@179) $generated@@183 $generated@@184) ($generated@@157 $generated@@176 $generated@@177 $generated@@178 $generated@@180 $generated@@183 $generated@@184)))
 :weight 0
)))))
(assert (forall (($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 Bool) ($generated@@189 T@U) ($generated@@190 T@U) ) (! (= ($generated@@22 ($generated@@157 $generated@@39 $generated@@65 $generated@@18 ($generated@@158 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))  (=> (and (or (not (= $generated@@189 $generated@@185)) (not true)) ($generated@@22 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@186 $generated@@189) $generated@@187)))) $generated@@188))
 :pattern ( ($generated@@157 $generated@@39 $generated@@65 $generated@@18 ($generated@@158 $generated@@185 $generated@@186 $generated@@187 $generated@@188) $generated@@189 $generated@@190))
)))
(assert (forall (($generated@@191 T@U) ($generated@@192 T@U) ) (!  (=> ($generated@@103 $generated@@191 ($generated@@102 $generated@@192)) (and (= ($generated@@68 $generated@@63 ($generated@@62 $generated@@63 $generated@@191)) $generated@@191) ($generated@@38 $generated@@63 ($generated@@62 $generated@@63 $generated@@191) ($generated@@102 $generated@@192))))
 :pattern ( ($generated@@103 $generated@@191 ($generated@@102 $generated@@192)))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 T@U) ) (!  (=> ($generated@@103 $generated@@193 ($generated@@115 $generated@@194)) (and (= ($generated@@68 $generated@@114 ($generated@@62 $generated@@114 $generated@@193)) $generated@@193) ($generated@@38 $generated@@114 ($generated@@62 $generated@@114 $generated@@193) ($generated@@115 $generated@@194))))
 :pattern ( ($generated@@103 $generated@@193 ($generated@@115 $generated@@194)))
)))
(assert (forall (($generated@@195 T@U) ($generated@@196 T@U) ) (!  (=> (and ($generated@@59 $generated@@195) (and (or (not (= $generated@@196 $generated@@41)) (not true)) (= ($generated@@42 $generated@@196) $generated@@40))) ($generated@@38 $generated@@114 ($generated@@62 $generated@@114 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@195 $generated@@196) $generated@@56)) ($generated@@115 $generated@@0)))
 :pattern ( ($generated@@62 $generated@@114 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@195 $generated@@196) $generated@@56)))
)))
(assert (= ($generated@@34 $generated@@46) $generated@@7))
(assert (= ($generated@@197 $generated@@46) $generated@@12))
(assert (= ($generated@@34 $generated@@45) $generated@@8))
(assert (= ($generated@@197 $generated@@45) $generated@@12))
(assert (= ($generated@@34 $generated@@49) $generated@@9))
(assert (= ($generated@@197 $generated@@49) $generated@@13))
(assert (= ($generated@@34 $generated@@40) $generated@@10))
(assert (= ($generated@@197 $generated@@40) $generated@@13))
(assert (forall (($generated@@198 Int) ) (! (= ($generated@@68 $generated@@19 ($generated@@23 ($generated@@95 $generated@@198))) ($generated@@97 $generated@@66 ($generated@@68 $generated@@19 ($generated@@23 $generated@@198))))
 :pattern ( ($generated@@68 $generated@@19 ($generated@@23 ($generated@@95 $generated@@198))))
)))
(assert (forall (($generated@@199 T@U) ($generated@@200 T@T) ) (! (= ($generated@@68 $generated@@200 ($generated@@97 $generated@@200 $generated@@199)) ($generated@@97 $generated@@66 ($generated@@68 $generated@@200 $generated@@199)))
 :pattern ( ($generated@@68 $generated@@200 ($generated@@97 $generated@@200 $generated@@199)))
)))
(assert (forall (($generated@@201 T@U) ) (!  (=> (= ($generated@@36 $generated@@201) 0) (= $generated@@201 $generated@@37))
 :pattern ( ($generated@@36 $generated@@201))
)))
(assert (forall (($generated@@202 T@U) ($generated@@203 T@U) ) (! ($generated@@44 $generated@@19 $generated@@203 $generated@@0 $generated@@202)
 :pattern ( ($generated@@44 $generated@@19 $generated@@203 $generated@@0 $generated@@202))
)))
(assert (forall (($generated@@204 T@U) ($generated@@205 T@U) ) (! ($generated@@44 $generated@@18 $generated@@205 $generated $generated@@204)
 :pattern ( ($generated@@44 $generated@@18 $generated@@205 $generated $generated@@204))
)))
(assert (forall (($generated@@206 T@U) ($generated@@207 T@U) ) (! (= ($generated@@38 $generated@@114 $generated@@206 ($generated@@115 $generated@@207)) (forall (($generated@@208 Int) ) (!  (=> (and (<= 0 $generated@@208) (< $generated@@208 ($generated@@36 $generated@@206))) ($generated@@103 ($generated@@142 $generated@@206 $generated@@208) $generated@@207))
 :pattern ( ($generated@@142 $generated@@206 $generated@@208))
)))
 :pattern ( ($generated@@38 $generated@@114 $generated@@206 ($generated@@115 $generated@@207)))
)))
(assert (forall (($generated@@209 T@U) ) (! ($generated@@38 $generated@@19 $generated@@209 $generated@@0)
 :pattern ( ($generated@@38 $generated@@19 $generated@@209 $generated@@0))
)))
(assert (forall (($generated@@210 T@U) ) (! ($generated@@38 $generated@@18 $generated@@210 $generated)
 :pattern ( ($generated@@38 $generated@@18 $generated@@210 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@211 () T@U)
(declare-fun $generated@@212 () T@U)
(declare-fun $generated@@213 () Int)
(declare-fun $generated@@214 () T@U)
(declare-fun $generated@@215 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 3) (let (($generated@@216  (=> (= $generated@@211 ($generated@@158 $generated@@41 $generated@@212 $generated@@5 false)) (=> (and (= $generated@@213 ($generated@@36 ($generated@@62 $generated@@114 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@212 $generated@@214) $generated@@56)))) (= (ControlFlow 0 2) (- 0 1))) (<= ($generated@@95 0) $generated@@213)))))
(let (($generated@@217  (=> (and ($generated@@59 $generated@@212) ($generated@@215 $generated@@212)) (=> (and (and (and (or (not (= $generated@@214 $generated@@41)) (not true)) (and ($generated@@38 $generated@@39 $generated@@214 $generated@@49) ($generated@@44 $generated@@39 $generated@@214 $generated@@49 $generated@@212))) (= 1 $generated@@57)) (and (and ($generated@@60 $generated@@212 $generated@@214) (and ($generated@@58 $generated@@212 $generated@@214) (and ($generated@@61 ($generated@@62 $generated@@63 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@212 $generated@@214) $generated@@52)) ($generated@@68 $generated@@39 $generated@@214)) ($generated@@22 ($generated@@62 $generated@@18 ($generated@@64 $generated@@65 $generated@@66 ($generated@@64 $generated@@39 ($generated@@67 $generated@@65 $generated@@66) $generated@@212 $generated@@214) $generated@@55)))))) (= (ControlFlow 0 3) 2))) $generated@@216))))
$generated@@217)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
