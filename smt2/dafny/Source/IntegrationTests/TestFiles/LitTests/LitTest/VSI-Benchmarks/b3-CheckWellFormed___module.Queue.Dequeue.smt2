(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@T)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 (T@T T@U) T@U)
(declare-fun $generated@@36 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 (T@T T@T) T@T)
(declare-fun $generated@@40 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@41 (T@T) T@T)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@63 () T@U)
(declare-fun $generated@@64 (T@U T@U) T@U)
(declare-fun $generated@@65 (T@U) Bool)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@70 (T@U Int) T@U)
(declare-fun $generated@@73 (Int) Int)
(declare-fun $generated@@75 (T@T T@U) T@U)
(declare-fun $generated@@80 (T@U T@U) Bool)
(declare-fun $generated@@81 (T@U Int) T@U)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 (T@T T@U T@U) Bool)
(declare-fun $generated@@91 (T@U T@U T@U) Bool)
(declare-fun $generated@@108 (T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 () T@T)
(declare-fun $generated@@113 (T@U) Bool)
(declare-fun $generated@@114 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@121 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@163 (T@U T@U) Bool)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@175 (T@U) T@U)
(declare-fun $generated@@177 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated@@0) 0))
(assert (= ($generated@@24 $generated@@0) $generated@@1))
(assert (= ($generated@@7 $generated@@26) 3))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31) ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@27 $generated@@29) $generated@@31))
 :pattern ( ($generated@@25 $generated@@26 $generated@@30 ($generated@@28 $generated@@29) $generated@@31))
)))
(assert (= ($generated@@32 $generated@@33) 0))
(assert  (and (and (and (and (and (and (forall (($generated@@43 T@T) ($generated@@44 T@T) ($generated@@45 T@U) ($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@44 ($generated@@40 $generated@@43 $generated@@44 $generated@@46 $generated@@47 $generated@@45) $generated@@47) $generated@@45)
 :weight 0
)) (forall (($generated@@48 T@T) ($generated@@49 T@T) ($generated@@50 T@U) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ) (!  (or (= $generated@@52 $generated@@53) (= ($generated@@36 $generated@@48 $generated@@49 ($generated@@40 $generated@@48 $generated@@49 $generated@@51 $generated@@52 $generated@@50) $generated@@53) ($generated@@36 $generated@@48 $generated@@49 $generated@@51 $generated@@53)))
 :weight 0
))) (= ($generated@@7 $generated@@37) 4)) (= ($generated@@7 $generated@@38) 5)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ) (= ($generated@@7 ($generated@@39 $generated@@54 $generated@@55)) 6))) (forall (($generated@@56 T@T) ($generated@@57 T@T) ) (! (= ($generated@@41 ($generated@@39 $generated@@56 $generated@@57)) $generated@@56)
 :pattern ( ($generated@@39 $generated@@56 $generated@@57))
))) (forall (($generated@@58 T@T) ($generated@@59 T@T) ) (! (= ($generated@@42 ($generated@@39 $generated@@58 $generated@@59)) $generated@@59)
 :pattern ( ($generated@@39 $generated@@58 $generated@@59))
))))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (! (= ($generated@@25 $generated@@26 $generated@@61 ($generated@@28 $generated@@60) $generated@@62)  (or (= $generated@@61 $generated@@34) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@62 $generated@@61) $generated@@0)))))
 :pattern ( ($generated@@25 $generated@@26 $generated@@61 ($generated@@28 $generated@@60) $generated@@62))
)))
(assert (= ($generated@@23 $generated@@63) 0))
(assert (= ($generated@@64 $generated@@2 $generated@@6) $generated@@63))
(assert  (not ($generated@@65 $generated@@63)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (!  (=> ($generated@@66 $generated@@67 $generated@@68) (forall (($generated@@69 T@U) ) (!  (=> ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@67 $generated@@69) $generated@@0))) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@68 $generated@@69) $generated@@0))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@68 $generated@@69) $generated@@0))
)))
 :pattern ( ($generated@@66 $generated@@67 $generated@@68))
)))
(assert (forall (($generated@@71 T@U) ($generated@@72 Int) ) (!  (=> (= $generated@@72 0) (= ($generated@@70 $generated@@71 $generated@@72) $generated@@71))
 :pattern ( ($generated@@70 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 Int) ) (! (= ($generated@@73 $generated@@74) $generated@@74)
 :pattern ( ($generated@@73 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@T) ) (! (= ($generated@@75 $generated@@77 $generated@@76) $generated@@76)
 :pattern ( ($generated@@75 $generated@@77 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 Int) ) (!  (=> (and (<= 0 $generated@@79) (<= $generated@@79 ($generated@@32 $generated@@78))) (= ($generated@@32 ($generated@@70 $generated@@78 $generated@@79)) (- ($generated@@32 $generated@@78) $generated@@79)))
 :pattern ( ($generated@@32 ($generated@@70 $generated@@78 $generated@@79)))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@80 $generated@@82 $generated@@83)  (and (= ($generated@@32 $generated@@82) ($generated@@32 $generated@@83)) (forall (($generated@@84 Int) ) (!  (=> (and (<= 0 $generated@@84) (< $generated@@84 ($generated@@32 $generated@@82))) (= ($generated@@81 $generated@@82 $generated@@84) ($generated@@81 $generated@@83 $generated@@84)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@84))
 :pattern ( ($generated@@81 $generated@@83 $generated@@84))
))))
 :pattern ( ($generated@@80 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@35 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@35 $generated@@87 $generated@@86))
)))
(assert ($generated@@65 $generated@@0))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@88 $generated@@26 $generated@@90 ($generated@@27 $generated@@89))  (and ($generated@@88 $generated@@26 $generated@@90 ($generated@@28 $generated@@89)) (or (not (= $generated@@90 $generated@@34)) (not true))))
 :pattern ( ($generated@@88 $generated@@26 $generated@@90 ($generated@@27 $generated@@89)))
 :pattern ( ($generated@@88 $generated@@26 $generated@@90 ($generated@@28 $generated@@89)))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@U) ($generated@@95 T@T) ) (! (= ($generated@@91 ($generated@@85 $generated@@95 $generated@@92) $generated@@93 $generated@@94) ($generated@@25 $generated@@95 $generated@@92 $generated@@93 $generated@@94))
 :pattern ( ($generated@@91 ($generated@@85 $generated@@95 $generated@@92) $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@66 $generated@@96 $generated@@97) (=> ($generated@@91 $generated@@98 $generated@@99 $generated@@96) ($generated@@91 $generated@@98 $generated@@99 $generated@@97)))
 :pattern ( ($generated@@66 $generated@@96 $generated@@97) ($generated@@91 $generated@@98 $generated@@99 $generated@@96))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (!  (=> ($generated@@66 $generated@@100 $generated@@101) (=> ($generated@@25 $generated@@104 $generated@@102 $generated@@103 $generated@@100) ($generated@@25 $generated@@104 $generated@@102 $generated@@103 $generated@@101)))
 :pattern ( ($generated@@66 $generated@@100 $generated@@101) ($generated@@25 $generated@@104 $generated@@102 $generated@@103 $generated@@100))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 Int) ($generated@@107 Int) ) (!  (=> (and (and (<= 0 $generated@@106) (<= 0 $generated@@107)) (< $generated@@107 (- ($generated@@32 $generated@@105) $generated@@106))) (= ($generated@@81 ($generated@@70 $generated@@105 $generated@@106) $generated@@107) ($generated@@81 $generated@@105 (+ $generated@@107 $generated@@106))))
 :weight 25
 :pattern ( ($generated@@81 ($generated@@70 $generated@@105 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ) (!  (and (= ($generated@@108 ($generated@@28 $generated@@110)) $generated@@3) (= ($generated@@109 ($generated@@28 $generated@@110)) $generated@@5))
 :pattern ( ($generated@@28 $generated@@110))
)))
(assert (forall (($generated@@111 T@U) ) (!  (and (= ($generated@@108 ($generated@@27 $generated@@111)) $generated@@4) (= ($generated@@109 ($generated@@27 $generated@@111)) $generated@@5))
 :pattern ( ($generated@@27 $generated@@111))
)))
(assert (= ($generated@@7 $generated@@112) 7))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and (and ($generated@@113 $generated@@117) (and (or (not (= $generated@@118 $generated@@34)) (not true)) (= ($generated@@114 $generated@@118) ($generated@@28 $generated@@116)))) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@117 $generated@@118) $generated@@0)))) ($generated@@25 $generated@@112 ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@117 $generated@@118) $generated@@63)) ($generated@@115 $generated@@116) $generated@@117))
 :pattern ( ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@117 $generated@@118) $generated@@63)) ($generated@@28 $generated@@116))
)))
(assert  (and (forall (($generated@@122 T@T) ($generated@@123 T@T) ($generated@@124 T@T) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@119 $generated@@122 $generated@@123 $generated@@124 ($generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@126 $generated@@127 $generated@@128 $generated@@125) $generated@@127 $generated@@128) $generated@@125)
 :weight 0
)) (and (forall (($generated@@129 T@T) ($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ) (!  (or (= $generated@@134 $generated@@136) (= ($generated@@119 $generated@@129 $generated@@130 $generated@@131 ($generated@@121 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@134 $generated@@135 $generated@@132) $generated@@136 $generated@@137) ($generated@@119 $generated@@129 $generated@@130 $generated@@131 $generated@@133 $generated@@136 $generated@@137)))
 :weight 0
)) (forall (($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ) (!  (or (= $generated@@144 $generated@@146) (= ($generated@@119 $generated@@138 $generated@@139 $generated@@140 ($generated@@121 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@144 $generated@@141) $generated@@145 $generated@@146) ($generated@@119 $generated@@138 $generated@@139 $generated@@140 $generated@@142 $generated@@145 $generated@@146)))
 :weight 0
)))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ) (! (= ($generated@@12 ($generated@@119 $generated@@26 $generated@@37 $generated@@8 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))  (=> (and (or (not (= $generated@@151 $generated@@147)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@148 $generated@@151) $generated@@149)))) (= $generated@@151 $generated@@150)))
 :pattern ( ($generated@@119 $generated@@26 $generated@@37 $generated@@8 ($generated@@120 $generated@@147 $generated@@148 $generated@@149 $generated@@150) $generated@@151 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (! (= ($generated@@88 $generated@@26 $generated@@154 ($generated@@28 $generated@@153))  (or (= $generated@@154 $generated@@34) (= ($generated@@114 $generated@@154) ($generated@@28 $generated@@153))))
 :pattern ( ($generated@@88 $generated@@26 $generated@@154 ($generated@@28 $generated@@153)))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> ($generated@@80 $generated@@155 $generated@@156) (= $generated@@155 $generated@@156))
 :pattern ( ($generated@@80 $generated@@155 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> (or (not (= $generated@@157 $generated@@159)) (not true)) (=> (and ($generated@@66 $generated@@157 $generated@@158) ($generated@@66 $generated@@158 $generated@@159)) ($generated@@66 $generated@@157 $generated@@159)))
 :pattern ( ($generated@@66 $generated@@157 $generated@@158) ($generated@@66 $generated@@158 $generated@@159))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (and (= ($generated@@160 ($generated@@64 $generated@@161 $generated@@162)) $generated@@161) (= ($generated@@24 ($generated@@64 $generated@@161 $generated@@162)) $generated@@162))
 :pattern ( ($generated@@64 $generated@@161 $generated@@162))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@T) ) (! (= ($generated@@163 ($generated@@85 $generated@@166 $generated@@164) $generated@@165) ($generated@@88 $generated@@166 $generated@@164 $generated@@165))
 :pattern ( ($generated@@163 ($generated@@85 $generated@@166 $generated@@164) $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ) (! (<= 0 ($generated@@32 $generated@@167))
 :pattern ( ($generated@@32 $generated@@167))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@25 $generated@@112 $generated@@168 ($generated@@115 $generated@@169) $generated@@170) (forall (($generated@@171 Int) ) (!  (=> (and (<= 0 $generated@@171) (< $generated@@171 ($generated@@32 $generated@@168))) ($generated@@91 ($generated@@81 $generated@@168 $generated@@171) $generated@@169 $generated@@170))
 :pattern ( ($generated@@81 $generated@@168 $generated@@171))
)))
 :pattern ( ($generated@@25 $generated@@112 $generated@@168 ($generated@@115 $generated@@169) $generated@@170))
)))
(assert (forall (($generated@@173 T@U) ) (! (= ($generated@@172 ($generated@@115 $generated@@173)) $generated@@173)
 :pattern ( ($generated@@115 $generated@@173))
)))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@108 ($generated@@115 $generated@@174)) $generated)
 :pattern ( ($generated@@115 $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@175 ($generated@@28 $generated@@176)) $generated@@176)
 :pattern ( ($generated@@28 $generated@@176))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@177 ($generated@@27 $generated@@178)) $generated@@178)
 :pattern ( ($generated@@27 $generated@@178))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@T) ) (! (= ($generated@@35 $generated@@180 ($generated@@85 $generated@@180 $generated@@179)) $generated@@179)
 :pattern ( ($generated@@85 $generated@@180 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@113 $generated@@182) (and (or (not (= $generated@@183 $generated@@34)) (not true)) (= ($generated@@114 $generated@@183) ($generated@@28 $generated@@181)))) ($generated@@88 $generated@@112 ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@182 $generated@@183) $generated@@63)) ($generated@@115 $generated@@181)))
 :pattern ( ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@182 $generated@@183) $generated@@63)) ($generated@@28 $generated@@181))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> ($generated@@163 $generated@@184 ($generated@@115 $generated@@185)) (and (= ($generated@@85 $generated@@112 ($generated@@35 $generated@@112 $generated@@184)) $generated@@184) ($generated@@88 $generated@@112 ($generated@@35 $generated@@112 $generated@@184) ($generated@@115 $generated@@185))))
 :pattern ( ($generated@@163 $generated@@184 ($generated@@115 $generated@@185)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> ($generated@@163 $generated@@187 ($generated@@28 $generated@@186)) (and (= ($generated@@85 $generated@@26 ($generated@@35 $generated@@26 $generated@@187)) $generated@@187) ($generated@@88 $generated@@26 ($generated@@35 $generated@@26 $generated@@187) ($generated@@28 $generated@@186))))
 :pattern ( ($generated@@163 $generated@@187 ($generated@@28 $generated@@186)))
)))
(assert (forall (($generated@@188 T@U) ($generated@@189 T@U) ) (!  (=> ($generated@@163 $generated@@189 ($generated@@27 $generated@@188)) (and (= ($generated@@85 $generated@@26 ($generated@@35 $generated@@26 $generated@@189)) $generated@@189) ($generated@@88 $generated@@26 ($generated@@35 $generated@@26 $generated@@189) ($generated@@27 $generated@@188))))
 :pattern ( ($generated@@163 $generated@@189 ($generated@@27 $generated@@188)))
)))
(assert (forall (($generated@@190 T@U) ($generated@@191 Int) ($generated@@192 Int) ) (!  (=> (and (and (<= 0 $generated@@191) (<= $generated@@191 $generated@@192)) (< $generated@@192 ($generated@@32 $generated@@190))) (= ($generated@@81 ($generated@@70 $generated@@190 $generated@@191) (- $generated@@192 $generated@@191)) ($generated@@81 $generated@@190 $generated@@192)))
 :weight 25
 :pattern ( ($generated@@81 $generated@@190 $generated@@192) ($generated@@70 $generated@@190 $generated@@191))
)))
(assert (forall (($generated@@193 T@U) ($generated@@194 Int) ($generated@@195 Int) ) (!  (=> (and (and (<= 0 $generated@@194) (<= 0 $generated@@195)) (<= (+ $generated@@194 $generated@@195) ($generated@@32 $generated@@193))) (= ($generated@@70 ($generated@@70 $generated@@193 $generated@@194) $generated@@195) ($generated@@70 $generated@@193 (+ $generated@@194 $generated@@195))))
 :pattern ( ($generated@@70 ($generated@@70 $generated@@193 $generated@@194) $generated@@195))
)))
(assert (forall (($generated@@196 Int) ) (! (= ($generated@@85 $generated@@9 ($generated@@13 ($generated@@73 $generated@@196))) ($generated@@75 $generated@@38 ($generated@@85 $generated@@9 ($generated@@13 $generated@@196))))
 :pattern ( ($generated@@85 $generated@@9 ($generated@@13 ($generated@@73 $generated@@196))))
)))
(assert (forall (($generated@@197 T@U) ($generated@@198 T@T) ) (! (= ($generated@@85 $generated@@198 ($generated@@75 $generated@@198 $generated@@197)) ($generated@@75 $generated@@38 ($generated@@85 $generated@@198 $generated@@197)))
 :pattern ( ($generated@@85 $generated@@198 ($generated@@75 $generated@@198 $generated@@197)))
)))
(assert (forall (($generated@@199 T@U) ) (!  (=> (= ($generated@@32 $generated@@199) 0) (= $generated@@199 $generated@@33))
 :pattern ( ($generated@@32 $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@88 $generated@@112 $generated@@200 ($generated@@115 $generated@@201)) (forall (($generated@@202 Int) ) (!  (=> (and (<= 0 $generated@@202) (< $generated@@202 ($generated@@32 $generated@@200))) ($generated@@163 ($generated@@81 $generated@@200 $generated@@202) $generated@@201))
 :pattern ( ($generated@@81 $generated@@200 $generated@@202))
)))
 :pattern ( ($generated@@88 $generated@@112 $generated@@200 ($generated@@115 $generated@@201)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 (T@U) Bool)
(declare-fun $generated@@208 () T@U)
(declare-fun $generated@@209 () T@U)
(declare-fun $generated@@210 () T@U)
(declare-fun $generated@@211 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@212  (=> (and (and (and (= $generated@@203 ($generated@@120 $generated@@34 $generated@@204 $generated@@0 $generated@@205)) (< 0 ($generated@@32 ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@204 $generated@@205) $generated@@63))))) (and ($generated@@113 $generated@@206) ($generated@@207 $generated@@206))) (and (and (forall (($generated@@213 T@U) ) (!  (=> (and (or (not (= $generated@@213 $generated@@34)) (not true)) ($generated@@12 ($generated@@35 $generated@@8 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@204 $generated@@213) $generated@@0)))) (or (= ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@206 $generated@@213) ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@204 $generated@@213)) (= $generated@@213 $generated@@205)))
 :pattern ( ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@206 $generated@@213))
)) ($generated@@66 $generated@@204 $generated@@206)) (and ($generated@@163 $generated@@208 $generated@@209) ($generated@@91 $generated@@208 $generated@@209 $generated@@206)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@25 $generated@@26 $generated@@205 ($generated@@27 $generated@@209) $generated@@204)) (=> ($generated@@25 $generated@@26 $generated@@205 ($generated@@27 $generated@@209) $generated@@204) (and (=> (= (ControlFlow 0 2) (- 0 4)) (and (<= 0 ($generated@@73 1)) (<= ($generated@@73 1) ($generated@@32 ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@204 $generated@@205) $generated@@63)))))) (=> (and (<= 0 ($generated@@73 1)) (<= ($generated@@73 1) ($generated@@32 ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@204 $generated@@205) $generated@@63))))) (=> ($generated@@80 ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@206 $generated@@205) $generated@@63)) ($generated@@70 ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@204 $generated@@205) $generated@@63)) ($generated@@73 1))) (and (=> (= (ControlFlow 0 2) (- 0 3)) ($generated@@25 $generated@@26 $generated@@205 ($generated@@27 $generated@@209) $generated@@204)) (=> ($generated@@25 $generated@@26 $generated@@205 ($generated@@27 $generated@@209) $generated@@204) (=> (= (ControlFlow 0 2) (- 0 1)) (and (<= 0 ($generated@@73 0)) (< ($generated@@73 0) ($generated@@32 ($generated@@35 $generated@@112 ($generated@@36 $generated@@37 $generated@@38 ($generated@@36 $generated@@26 ($generated@@39 $generated@@37 $generated@@38) $generated@@204 $generated@@205) $generated@@63))))))))))))))))
(let (($generated@@214  (=> (and (and (and ($generated@@113 $generated@@204) ($generated@@207 $generated@@204)) (and (or (not (= $generated@@205 $generated@@34)) (not true)) (and ($generated@@88 $generated@@26 $generated@@205 ($generated@@27 $generated@@209)) ($generated@@25 $generated@@26 $generated@@205 ($generated@@27 $generated@@209) $generated@@204)))) (and (and ($generated@@163 $generated@@210 $generated@@209) ($generated@@91 $generated@@210 $generated@@209 $generated@@204)) (and (= 0 $generated@@211) (= (ControlFlow 0 6) 2)))) $generated@@212)))
$generated@@214)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
