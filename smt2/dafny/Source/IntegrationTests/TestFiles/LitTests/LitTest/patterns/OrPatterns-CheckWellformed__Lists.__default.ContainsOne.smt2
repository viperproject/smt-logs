(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 (T@T) Int)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 (Bool) T@U)
(declare-fun $generated@@13 (T@U) Bool)
(declare-fun $generated@@14 (Int) T@U)
(declare-fun $generated@@15 (T@U) Int)
(declare-fun $generated@@16 (Real) T@U)
(declare-fun $generated@@17 (T@U) Real)
(declare-fun $generated@@24 (T@U) T@U)
(declare-fun $generated@@25 (T@U T@U T@U) Int)
(declare-fun $generated@@26 (T@U) T@U)
(declare-fun $generated@@27 () T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@T T@U) T@U)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U) T@U)
(declare-fun $generated@@40 (Int) Int)
(declare-fun $generated@@46 (T@U) Bool)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 (T@U) T@U)
(declare-fun $generated@@55 (T@U) T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@57 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@65 (T@U T@U) T@U)
(declare-fun $generated@@66 (T@U T@U) Bool)
(declare-fun $generated@@71 (T@U) Bool)
(declare-fun $generated@@73 (T@T T@U) T@U)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) T@U)
(declare-fun $generated@@106 (T@U) T@U)
(declare-fun $generated@@110 (T@U) Int)
(declare-fun $generated@@111 (T@U) Int)
(declare-fun $generated@@119 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@120 () T@T)
(declare-fun $generated@@121 () T@T)
(declare-fun $generated@@122 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@123 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@124 () T@T)
(declare-fun $generated@@125 (T@T T@T) T@T)
(declare-fun $generated@@126 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@127 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@T) T@T)
(declare-fun $generated@@129 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@8 $generated@@9) 0) (= ($generated@@8 $generated@@10) 1)) (= ($generated@@8 $generated@@11) 2)) (forall (($generated@@18 Bool) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Int) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Real) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7)
)
(assert (= ($generated@@24 $generated) $generated@@1))
(assert (= ($generated@@24 $generated@@0) $generated@@2))
(assert (forall (($generated@@28 T@U) ($generated@@29 T@U) ($generated@@30 T@U) ) (! (= ($generated@@25 $generated@@28 $generated@@29 $generated@@30) ($generated@@25 $generated@@28 $generated@@27 $generated@@30))
 :pattern ( ($generated@@25 $generated@@28 ($generated@@26 $generated@@29) $generated@@30))
)))
(assert (= ($generated@@8 $generated@@34) 3))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@41 T@U) ($generated@@42 T@U) ($generated@@43 T@U) ) (!  (=> (or ($generated@@35 $generated@@41 ($generated@@33 $generated@@34 $generated@@43)) (and (< 1 $generated@@31) ($generated@@36 $generated@@34 $generated@@43 ($generated@@37 $generated@@41)))) (and (=> (not ($generated@@13 ($generated@@33 $generated@@9 ($generated@@12 ($generated@@38 ($generated@@33 $generated@@34 $generated@@43)))))) (let (($generated@@44 ($generated@@33 $generated@@34 ($generated@@39 ($generated@@33 $generated@@34 $generated@@43)))))
($generated@@35 $generated@@41 $generated@@44))) (= ($generated@@25 $generated@@41 ($generated@@32 $generated@@42) ($generated@@33 $generated@@34 $generated@@43)) (ite ($generated@@38 ($generated@@33 $generated@@34 $generated@@43)) 0 (let (($generated@@45 ($generated@@33 $generated@@34 ($generated@@39 ($generated@@33 $generated@@34 $generated@@43)))))
($generated@@40 (+ 1 ($generated@@25 $generated@@41 ($generated@@32 $generated@@42) $generated@@45))))))))
 :weight 3
 :pattern ( ($generated@@25 $generated@@41 ($generated@@32 $generated@@42) ($generated@@33 $generated@@34 $generated@@43)))
))))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@51 T@U) ) (!  (=> (or ($generated@@47 ($generated@@33 $generated@@34 $generated@@51)) (and (< 2 $generated@@31) (and ($generated@@36 $generated@@34 $generated@@51 ($generated@@37 $generated@@0)) (= ($generated@@40 ($generated@@25 $generated@@0 $generated@@48 ($generated@@33 $generated@@34 $generated@@51))) ($generated@@40 3))))) (= ($generated@@46 ($generated@@33 $generated@@34 $generated@@51))  (or (or (= ($generated@@40 ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 ($generated@@33 $generated@@34 $generated@@51))))) ($generated@@40 1)) (= ($generated@@40 ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 ($generated@@33 $generated@@34 ($generated@@39 ($generated@@33 $generated@@34 $generated@@51))))))) ($generated@@40 1))) (= ($generated@@40 ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 ($generated@@33 $generated@@34 ($generated@@39 ($generated@@33 $generated@@34 ($generated@@39 ($generated@@33 $generated@@34 $generated@@51))))))))) ($generated@@40 1)))))
 :weight 3
 :pattern ( ($generated@@46 ($generated@@33 $generated@@34 $generated@@51)))
))))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@25 $generated@@52 ($generated@@32 $generated@@53) $generated@@54) ($generated@@25 $generated@@52 $generated@@53 $generated@@54))
 :pattern ( ($generated@@25 $generated@@52 ($generated@@32 $generated@@53) $generated@@54))
)))
(assert (= ($generated@@55 $generated@@56) $generated@@5))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ) (!  (=> ($generated@@58 $generated@@60) ($generated@@57 $generated@@34 $generated@@56 ($generated@@37 $generated@@59) $generated@@60))
 :pattern ( ($generated@@57 $generated@@34 $generated@@56 ($generated@@37 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@61 T@U) ) (! ($generated@@36 $generated@@34 $generated@@56 ($generated@@37 $generated@@61))
 :pattern ( ($generated@@36 $generated@@34 $generated@@56 ($generated@@37 $generated@@61)))
)))
(assert (forall (($generated@@62 Int) ) (! (= ($generated@@40 $generated@@62) $generated@@62)
 :pattern ( ($generated@@40 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@T) ) (! (= ($generated@@33 $generated@@64 $generated@@63) $generated@@63)
 :pattern ( ($generated@@33 $generated@@64 $generated@@63))
)))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@36 $generated@@34 ($generated@@65 $generated@@68 $generated@@69) ($generated@@37 $generated@@67))  (and ($generated@@66 $generated@@68 $generated@@67) ($generated@@36 $generated@@34 $generated@@69 ($generated@@37 $generated@@67))))
 :pattern ( ($generated@@36 $generated@@34 ($generated@@65 $generated@@68 $generated@@69) ($generated@@37 $generated@@67)))
)))
(assert (forall (($generated@@70 T@U) ) (! (= ($generated@@38 $generated@@70) (= ($generated@@55 $generated@@70) $generated@@5))
 :pattern ( ($generated@@38 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ) (! (= ($generated@@71 $generated@@72) (= ($generated@@55 $generated@@72) $generated@@6))
 :pattern ( ($generated@@71 $generated@@72))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@T) ) (! (= ($generated@@73 $generated@@75 ($generated@@49 $generated@@75 $generated@@74)) $generated@@74)
 :pattern ( ($generated@@49 $generated@@75 $generated@@74))
)))
(assert (forall (($generated@@76 T@U) ) (!  (=> ($generated@@71 $generated@@76) (exists (($generated@@77 T@U) ($generated@@78 T@U) ) (= $generated@@76 ($generated@@65 $generated@@77 $generated@@78))))
 :pattern ( ($generated@@71 $generated@@76))
)))
(assert (forall (($generated@@79 T@U) ) (!  (=> ($generated@@38 $generated@@79) (= $generated@@79 $generated@@56))
 :pattern ( ($generated@@38 $generated@@79))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (or ($generated@@35 $generated@@80 $generated@@82) (and (< 1 $generated@@31) ($generated@@36 $generated@@34 $generated@@82 ($generated@@37 $generated@@80)))) (and (=> (not ($generated@@38 $generated@@82)) (let (($generated@@83 ($generated@@39 $generated@@82)))
($generated@@35 $generated@@80 $generated@@83))) (= ($generated@@25 $generated@@80 ($generated@@32 $generated@@81) $generated@@82) (ite ($generated@@38 $generated@@82) 0 (let (($generated@@84 ($generated@@39 $generated@@82)))
(+ 1 ($generated@@25 $generated@@80 $generated@@81 $generated@@84)))))))
 :pattern ( ($generated@@25 $generated@@80 ($generated@@32 $generated@@81) $generated@@82))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@T) ) (! (= ($generated@@85 ($generated@@73 $generated@@89 $generated@@86) $generated@@87 $generated@@88) ($generated@@57 $generated@@89 $generated@@86 $generated@@87 $generated@@88))
 :pattern ( ($generated@@85 ($generated@@73 $generated@@89 $generated@@86) $generated@@87 $generated@@88))
)))
(assert (forall (($generated@@91 T@U) ) (!  (and (= ($generated@@24 ($generated@@37 $generated@@91)) $generated@@4) (= ($generated@@90 ($generated@@37 $generated@@91)) $generated@@7))
 :pattern ( ($generated@@37 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> ($generated@@36 $generated@@34 $generated@@93 ($generated@@37 $generated@@92)) (or ($generated@@38 $generated@@93) ($generated@@71 $generated@@93)))
 :pattern ( ($generated@@71 $generated@@93) ($generated@@36 $generated@@34 $generated@@93 ($generated@@37 $generated@@92)))
 :pattern ( ($generated@@38 $generated@@93) ($generated@@36 $generated@@34 $generated@@93 ($generated@@37 $generated@@92)))
)))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@94 T@U) ) (!  (=> (or ($generated@@47 $generated@@94) (and (< 2 $generated@@31) (and ($generated@@36 $generated@@34 $generated@@94 ($generated@@37 $generated@@0)) (= ($generated@@25 $generated@@0 $generated@@48 $generated@@94) ($generated@@40 3))))) (= ($generated@@46 $generated@@94)  (or (or (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 $generated@@94))) ($generated@@40 1)) (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 ($generated@@39 $generated@@94)))) ($generated@@40 1))) (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 ($generated@@39 ($generated@@39 $generated@@94))))) ($generated@@40 1)))))
 :pattern ( ($generated@@46 $generated@@94))
))))
(assert (forall (($generated@@95 T@U) ) (!  (=> ($generated@@66 $generated@@95 $generated@@0) (and (= ($generated@@73 $generated@@10 ($generated@@49 $generated@@10 $generated@@95)) $generated@@95) ($generated@@36 $generated@@10 ($generated@@49 $generated@@10 $generated@@95) $generated@@0)))
 :pattern ( ($generated@@66 $generated@@95 $generated@@0))
)))
(assert (forall (($generated@@96 T@U) ) (!  (=> ($generated@@66 $generated@@96 $generated) (and (= ($generated@@73 $generated@@9 ($generated@@49 $generated@@9 $generated@@96)) $generated@@96) ($generated@@36 $generated@@9 ($generated@@49 $generated@@9 $generated@@96) $generated)))
 :pattern ( ($generated@@66 $generated@@96 $generated))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@T) ) (! (= ($generated@@66 ($generated@@73 $generated@@99 $generated@@97) $generated@@98) ($generated@@36 $generated@@99 $generated@@97 $generated@@98))
 :pattern ( ($generated@@66 ($generated@@73 $generated@@99 $generated@@97) $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@U) ) (! (= ($generated@@55 ($generated@@65 $generated@@100 $generated@@101)) $generated@@6)
 :pattern ( ($generated@@65 $generated@@100 $generated@@101))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@50 ($generated@@65 $generated@@102 $generated@@103)) $generated@@102)
 :pattern ( ($generated@@65 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@104 T@U) ($generated@@105 T@U) ) (! (= ($generated@@39 ($generated@@65 $generated@@104 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@65 $generated@@104 $generated@@105))
)))
(assert (forall (($generated@@107 T@U) ) (! (= ($generated@@106 ($generated@@37 $generated@@107)) $generated@@107)
 :pattern ( ($generated@@37 $generated@@107))
)))
(assert (forall (($generated@@108 T@U) ($generated@@109 T@T) ) (! (= ($generated@@49 $generated@@109 ($generated@@73 $generated@@109 $generated@@108)) $generated@@108)
 :pattern ( ($generated@@73 $generated@@109 $generated@@108))
)))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (< ($generated@@110 $generated@@112) ($generated@@111 ($generated@@65 $generated@@112 $generated@@113)))
 :pattern ( ($generated@@65 $generated@@112 $generated@@113))
)))
(assert (forall (($generated@@114 T@U) ($generated@@115 T@U) ) (! (< ($generated@@111 $generated@@115) ($generated@@111 ($generated@@65 $generated@@114 $generated@@115)))
 :pattern ( ($generated@@65 $generated@@114 $generated@@115))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ) (!  (=> (and ($generated@@58 $generated@@118) (and ($generated@@71 $generated@@116) ($generated@@57 $generated@@34 $generated@@116 ($generated@@37 $generated@@117) $generated@@118))) ($generated@@85 ($generated@@50 $generated@@116) $generated@@117 $generated@@118))
 :pattern ( ($generated@@85 ($generated@@50 $generated@@116) $generated@@117 $generated@@118))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@130 T@T) ($generated@@131 T@T) ($generated@@132 T@T) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@119 $generated@@130 $generated@@131 $generated@@132 ($generated@@126 $generated@@130 $generated@@131 $generated@@132 $generated@@134 $generated@@135 $generated@@136 $generated@@133) $generated@@135 $generated@@136) $generated@@133)
 :weight 0
)) (and (forall (($generated@@137 T@T) ($generated@@138 T@T) ($generated@@139 T@T) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (or (= $generated@@142 $generated@@144) (= ($generated@@119 $generated@@137 $generated@@138 $generated@@139 ($generated@@126 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@142 $generated@@143 $generated@@140) $generated@@144 $generated@@145) ($generated@@119 $generated@@137 $generated@@138 $generated@@139 $generated@@141 $generated@@144 $generated@@145)))
 :weight 0
)) (forall (($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@T) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (or (= $generated@@152 $generated@@154) (= ($generated@@119 $generated@@146 $generated@@147 $generated@@148 ($generated@@126 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@151 $generated@@152 $generated@@149) $generated@@153 $generated@@154) ($generated@@119 $generated@@146 $generated@@147 $generated@@148 $generated@@150 $generated@@153 $generated@@154)))
 :weight 0
)))) (= ($generated@@8 $generated@@120) 4)) (= ($generated@@8 $generated@@121) 5)) (forall (($generated@@155 T@T) ($generated@@156 T@T) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (! (= ($generated@@123 $generated@@155 $generated@@156 ($generated@@127 $generated@@155 $generated@@156 $generated@@158 $generated@@159 $generated@@157) $generated@@159) $generated@@157)
 :weight 0
))) (forall (($generated@@160 T@T) ($generated@@161 T@T) ($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (or (= $generated@@164 $generated@@165) (= ($generated@@123 $generated@@160 $generated@@161 ($generated@@127 $generated@@160 $generated@@161 $generated@@163 $generated@@164 $generated@@162) $generated@@165) ($generated@@123 $generated@@160 $generated@@161 $generated@@163 $generated@@165)))
 :weight 0
))) (= ($generated@@8 $generated@@124) 6)) (forall (($generated@@166 T@T) ($generated@@167 T@T) ) (= ($generated@@8 ($generated@@125 $generated@@166 $generated@@167)) 7))) (forall (($generated@@168 T@T) ($generated@@169 T@T) ) (! (= ($generated@@128 ($generated@@125 $generated@@168 $generated@@169)) $generated@@168)
 :pattern ( ($generated@@125 $generated@@168 $generated@@169))
))) (forall (($generated@@170 T@T) ($generated@@171 T@T) ) (! (= ($generated@@129 ($generated@@125 $generated@@170 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@125 $generated@@170 $generated@@171))
))))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ($generated@@174 T@U) ($generated@@175 Bool) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@13 ($generated@@119 $generated@@120 $generated@@121 $generated@@9 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))  (=> (and (or (not (= $generated@@176 $generated@@172)) (not true)) ($generated@@13 ($generated@@49 $generated@@9 ($generated@@123 $generated@@121 $generated@@124 ($generated@@123 $generated@@120 ($generated@@125 $generated@@121 $generated@@124) $generated@@173 $generated@@176) $generated@@174)))) $generated@@175))
 :pattern ( ($generated@@119 $generated@@120 $generated@@121 $generated@@9 ($generated@@122 $generated@@172 $generated@@173 $generated@@174 $generated@@175) $generated@@176 $generated@@177))
)))
(assert (forall (($generated@@178 T@U) ) (! (= ($generated@@110 ($generated@@73 $generated@@34 $generated@@178)) ($generated@@111 $generated@@178))
 :pattern ( ($generated@@110 ($generated@@73 $generated@@34 $generated@@178)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> ($generated@@66 $generated@@180 ($generated@@37 $generated@@179)) (and (= ($generated@@73 $generated@@34 ($generated@@49 $generated@@34 $generated@@180)) $generated@@180) ($generated@@36 $generated@@34 ($generated@@49 $generated@@34 $generated@@180) ($generated@@37 $generated@@179))))
 :pattern ( ($generated@@66 $generated@@180 ($generated@@37 $generated@@179)))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ) (!  (=> (and ($generated@@58 $generated@@183) (and ($generated@@71 $generated@@181) ($generated@@57 $generated@@34 $generated@@181 ($generated@@37 $generated@@182) $generated@@183))) ($generated@@57 $generated@@34 ($generated@@39 $generated@@181) ($generated@@37 $generated@@182) $generated@@183))
 :pattern ( ($generated@@57 $generated@@34 ($generated@@39 $generated@@181) ($generated@@37 $generated@@182) $generated@@183))
)))
(assert (= $generated@@56 ($generated@@33 $generated@@34 $generated@@56)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (! (= ($generated@@65 ($generated@@33 $generated@@124 $generated@@184) ($generated@@33 $generated@@34 $generated@@185)) ($generated@@33 $generated@@34 ($generated@@65 $generated@@184 $generated@@185)))
 :pattern ( ($generated@@65 ($generated@@33 $generated@@124 $generated@@184) ($generated@@33 $generated@@34 $generated@@185)))
)))
(assert (forall (($generated@@186 Int) ) (! (= ($generated@@73 $generated@@10 ($generated@@14 ($generated@@40 $generated@@186))) ($generated@@33 $generated@@124 ($generated@@73 $generated@@10 ($generated@@14 $generated@@186))))
 :pattern ( ($generated@@73 $generated@@10 ($generated@@14 ($generated@@40 $generated@@186))))
)))
(assert (forall (($generated@@187 T@U) ($generated@@188 T@T) ) (! (= ($generated@@73 $generated@@188 ($generated@@33 $generated@@188 $generated@@187)) ($generated@@33 $generated@@124 ($generated@@73 $generated@@188 $generated@@187)))
 :pattern ( ($generated@@73 $generated@@188 ($generated@@33 $generated@@188 $generated@@187)))
)))
(assert  (=> (<= 1 $generated@@31) (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ) (!  (=> (or ($generated@@35 $generated@@189 $generated@@191) (and (< 1 $generated@@31) ($generated@@36 $generated@@34 $generated@@191 ($generated@@37 $generated@@189)))) (<= ($generated@@40 0) ($generated@@25 $generated@@189 $generated@@190 $generated@@191)))
 :pattern ( ($generated@@25 $generated@@189 $generated@@190 $generated@@191))
))))
(assert (forall (($generated@@192 T@U) ($generated@@193 T@U) ) (! ($generated@@57 $generated@@10 $generated@@193 $generated@@0 $generated@@192)
 :pattern ( ($generated@@57 $generated@@10 $generated@@193 $generated@@0 $generated@@192))
)))
(assert (forall (($generated@@194 T@U) ($generated@@195 T@U) ) (! ($generated@@57 $generated@@9 $generated@@195 $generated $generated@@194)
 :pattern ( ($generated@@57 $generated@@9 $generated@@195 $generated $generated@@194))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 T@U) ) (!  (=> ($generated@@58 $generated@@199) (= ($generated@@57 $generated@@34 ($generated@@65 $generated@@197 $generated@@198) ($generated@@37 $generated@@196) $generated@@199)  (and ($generated@@85 $generated@@197 $generated@@196 $generated@@199) ($generated@@57 $generated@@34 $generated@@198 ($generated@@37 $generated@@196) $generated@@199))))
 :pattern ( ($generated@@57 $generated@@34 ($generated@@65 $generated@@197 $generated@@198) ($generated@@37 $generated@@196) $generated@@199))
)))
(assert (forall (($generated@@200 T@U) ) (! ($generated@@36 $generated@@10 $generated@@200 $generated@@0)
 :pattern ( ($generated@@36 $generated@@10 $generated@@200 $generated@@0))
)))
(assert (forall (($generated@@201 T@U) ) (! ($generated@@36 $generated@@9 $generated@@201 $generated)
 :pattern ( ($generated@@36 $generated@@9 $generated@@201 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () T@U)
(declare-fun $generated@@204 () T@U)
(declare-fun $generated@@205 () T@U)
(declare-fun $generated@@206 () T@U)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 15) (let (($generated@@209 true))
(let (($generated@@210  (=> (and (or (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 $generated@@202))) ($generated@@40 1)) (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 ($generated@@39 $generated@@202)))) ($generated@@40 1))) (= (ControlFlow 0 7) 2)) $generated@@209)))
(let (($generated@@211  (=> (not (or (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 $generated@@202))) ($generated@@40 1)) (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 ($generated@@39 $generated@@202)))) ($generated@@40 1)))) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@71 $generated@@202)) (=> ($generated@@71 $generated@@202) (and (=> (= (ControlFlow 0 3) (- 0 5)) ($generated@@71 ($generated@@39 $generated@@202))) (=> ($generated@@71 ($generated@@39 $generated@@202)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@71 ($generated@@39 ($generated@@39 $generated@@202)))) (=> ($generated@@71 ($generated@@39 ($generated@@39 $generated@@202))) (=> (= (ControlFlow 0 3) 2) $generated@@209))))))))))
(let (($generated@@212  (=> (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 $generated@@202))) ($generated@@40 1)) (and (=> (= (ControlFlow 0 11) 3) $generated@@211) (=> (= (ControlFlow 0 11) 7) $generated@@210)))))
(let (($generated@@213  (=> (or (not (= ($generated@@15 ($generated@@49 $generated@@10 ($generated@@50 $generated@@202))) ($generated@@40 1))) (not true)) (and (=> (= (ControlFlow 0 8) (- 0 10)) ($generated@@71 $generated@@202)) (=> ($generated@@71 $generated@@202) (and (=> (= (ControlFlow 0 8) (- 0 9)) ($generated@@71 ($generated@@39 $generated@@202))) (=> ($generated@@71 ($generated@@39 $generated@@202)) (and (=> (= (ControlFlow 0 8) 3) $generated@@211) (=> (= (ControlFlow 0 8) 7) $generated@@210)))))))))
(let (($generated@@214  (and (=> (= (ControlFlow 0 12) (- 0 13)) ($generated@@71 $generated@@202)) (=> ($generated@@71 $generated@@202) (and (=> (= (ControlFlow 0 12) 8) $generated@@213) (=> (= (ControlFlow 0 12) 11) $generated@@212))))))
(let (($generated@@215 true))
(let (($generated@@216  (=> (= $generated@@203 ($generated@@122 $generated@@204 $generated@@205 $generated@@3 false)) (=> (and (= $generated@@206 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 $generated@@207)))))) (= $generated@@48 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 ($generated@@32 $generated@@207)))))))) (=> (and (and (= ($generated@@26 $generated@@207) $generated@@207) ($generated@@85 ($generated@@73 $generated@@34 $generated@@202) ($generated@@37 $generated@@0) $generated@@205)) (and ($generated@@35 $generated@@0 $generated@@202) (= ($generated@@25 $generated@@0 $generated@@48 $generated@@202) ($generated@@40 3)))) (and (=> (= (ControlFlow 0 14) 1) $generated@@215) (=> (= (ControlFlow 0 14) 12) $generated@@214)))))))
(let (($generated@@217  (=> (and (and (and ($generated@@58 $generated@@205) ($generated@@208 $generated@@205)) ($generated@@36 $generated@@34 $generated@@202 ($generated@@37 $generated@@0))) (and (= 2 $generated@@31) (= (ControlFlow 0 15) 14))) $generated@@216)))
$generated@@217))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
