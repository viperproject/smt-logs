(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 (T@T) Int)
(declare-fun $generated@@4 () T@T)
(declare-fun $generated@@5 () T@T)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 (Bool) T@U)
(declare-fun $generated@@8 (T@U) Bool)
(declare-fun $generated@@9 (Int) T@U)
(declare-fun $generated@@10 (T@U) Int)
(declare-fun $generated@@11 (Real) T@U)
(declare-fun $generated@@12 (T@U) Real)
(declare-fun $generated@@19 (T@U) T@U)
(declare-fun $generated@@20 (T@U) Int)
(declare-fun $generated@@21 () T@U)
(declare-fun $generated@@22 (Int) Int)
(declare-fun $generated@@24 (T@T T@U) T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 (T@U T@U) Bool)
(declare-fun $generated@@35 (T@U T@U) Bool)
(declare-fun $generated@@36 (T@U Int) T@U)
(declare-fun $generated@@40 (T@T T@U) T@U)
(declare-fun $generated@@41 (T@T T@U) T@U)
(declare-fun $generated@@46 (T@U T@U T@U) Bool)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@72 (Int) T@U)
(declare-fun $generated@@73 (T@U) Int)
(declare-fun $generated@@75 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@76 () T@T)
(declare-fun $generated@@77 () T@T)
(declare-fun $generated@@78 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@79 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@80 () T@T)
(declare-fun $generated@@81 (T@T T@T) T@T)
(declare-fun $generated@@82 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@83 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@84 (T@T) T@T)
(declare-fun $generated@@85 (T@T) T@T)
(declare-fun $generated@@134 (T@U) T@U)
(declare-fun $generated@@135 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@3 $generated@@4) 0) (= ($generated@@3 $generated@@5) 1)) (= ($generated@@3 $generated@@6) 2)) (forall (($generated@@13 Bool) ) (! (= ($generated@@8 ($generated@@7 $generated@@13)) $generated@@13)
 :pattern ( ($generated@@7 $generated@@13))
))) (forall (($generated@@14 T@U) ) (! (= ($generated@@7 ($generated@@8 $generated@@14)) $generated@@14)
 :pattern ( ($generated@@8 $generated@@14))
))) (forall (($generated@@15 Int) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Real) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2)
)
(assert (= ($generated@@19 $generated) $generated@@0))
(assert (= ($generated@@20 $generated@@21) 0))
(assert (forall (($generated@@23 Int) ) (! (= ($generated@@22 $generated@@23) $generated@@23)
 :pattern ( ($generated@@22 $generated@@23))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@T) ) (! (= ($generated@@24 $generated@@26 $generated@@25) $generated@@25)
 :pattern ( ($generated@@24 $generated@@26 $generated@@25))
)))
(assert (= ($generated@@3 $generated@@28) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> (and ($generated@@27 $generated@@28 $generated@@32 ($generated@@30 $generated@@34)) ($generated@@31 $generated@@33 $generated@@34)) ($generated@@27 $generated@@28 ($generated@@29 $generated@@32 $generated@@33) ($generated@@30 $generated@@34)))
 :pattern ( ($generated@@27 $generated@@28 ($generated@@29 $generated@@32 $generated@@33) ($generated@@30 $generated@@34)))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@35 $generated@@37 $generated@@38)  (and (= ($generated@@20 $generated@@37) ($generated@@20 $generated@@38)) (forall (($generated@@39 Int) ) (!  (=> (and (<= 0 $generated@@39) (< $generated@@39 ($generated@@20 $generated@@37))) (= ($generated@@36 $generated@@37 $generated@@39) ($generated@@36 $generated@@38 $generated@@39)))
 :pattern ( ($generated@@36 $generated@@37 $generated@@39))
 :pattern ( ($generated@@36 $generated@@38 $generated@@39))
))))
 :pattern ( ($generated@@35 $generated@@37 $generated@@38))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@T) ) (! (= ($generated@@41 $generated@@43 ($generated@@40 $generated@@43 $generated@@42)) $generated@@42)
 :pattern ( ($generated@@40 $generated@@43 $generated@@42))
)))
(assert (forall (($generated@@44 T@U) ($generated@@45 T@U) ) (! (= ($generated@@20 ($generated@@29 $generated@@44 $generated@@45)) (+ 1 ($generated@@20 $generated@@44)))
 :pattern ( ($generated@@29 $generated@@44 $generated@@45))
)))
(assert (forall (($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ($generated@@51 T@T) ) (! (= ($generated@@46 ($generated@@41 $generated@@51 $generated@@48) $generated@@49 $generated@@50) ($generated@@47 $generated@@51 $generated@@48 $generated@@49 $generated@@50))
 :pattern ( ($generated@@46 ($generated@@41 $generated@@51 $generated@@48) $generated@@49 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 Int) ($generated@@54 T@U) ) (!  (and (=> (= $generated@@53 ($generated@@20 $generated@@52)) (= ($generated@@36 ($generated@@29 $generated@@52 $generated@@54) $generated@@53) $generated@@54)) (=> (or (not (= $generated@@53 ($generated@@20 $generated@@52))) (not true)) (= ($generated@@36 ($generated@@29 $generated@@52 $generated@@54) $generated@@53) ($generated@@36 $generated@@52 $generated@@53))))
 :pattern ( ($generated@@36 ($generated@@29 $generated@@52 $generated@@54) $generated@@53))
)))
(assert (forall (($generated@@55 T@U) ($generated@@56 T@U) ) (!  (=> ($generated@@35 $generated@@55 $generated@@56) (= $generated@@55 $generated@@56))
 :pattern ( ($generated@@35 $generated@@55 $generated@@56))
)))
(assert (= ($generated@@3 $generated@@57) 4))
(assert (forall (($generated@@58 T@U) ) (!  (=> ($generated@@31 $generated@@58 $generated) (and (= ($generated@@41 $generated@@57 ($generated@@40 $generated@@57 $generated@@58)) $generated@@58) ($generated@@27 $generated@@57 ($generated@@40 $generated@@57 $generated@@58) $generated)))
 :pattern ( ($generated@@31 $generated@@58 $generated))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@T) ) (! (= ($generated@@31 ($generated@@41 $generated@@61 $generated@@59) $generated@@60) ($generated@@27 $generated@@61 $generated@@59 $generated@@60))
 :pattern ( ($generated@@31 ($generated@@41 $generated@@61 $generated@@59) $generated@@60))
)))
(assert (forall (($generated@@62 T@U) ) (! (<= 0 ($generated@@20 $generated@@62))
 :pattern ( ($generated@@20 $generated@@62))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (! (= ($generated@@47 $generated@@28 $generated@@63 ($generated@@30 $generated@@64) $generated@@65) (forall (($generated@@66 Int) ) (!  (=> (and (<= 0 $generated@@66) (< $generated@@66 ($generated@@20 $generated@@63))) ($generated@@46 ($generated@@36 $generated@@63 $generated@@66) $generated@@64 $generated@@65))
 :pattern ( ($generated@@36 $generated@@63 $generated@@66))
)))
 :pattern ( ($generated@@47 $generated@@28 $generated@@63 ($generated@@30 $generated@@64) $generated@@65))
)))
(assert (forall (($generated@@68 T@U) ) (! (= ($generated@@67 ($generated@@30 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@30 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ) (! (= ($generated@@19 ($generated@@30 $generated@@69)) $generated@@1)
 :pattern ( ($generated@@30 $generated@@69))
)))
(assert (forall (($generated@@70 T@U) ($generated@@71 T@T) ) (! (= ($generated@@40 $generated@@71 ($generated@@41 $generated@@71 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@41 $generated@@71 $generated@@70))
)))
(assert (forall (($generated@@74 Int) ) (!  (=> (or (and (<= 0 $generated@@74) (< $generated@@74 55296)) (and (<= 57344 $generated@@74) (< $generated@@74 1114112))) (= ($generated@@73 ($generated@@72 $generated@@74)) $generated@@74))
 :pattern ( ($generated@@72 $generated@@74))
)))
(assert  (and (and (and (and (and (and (and (and (and (forall (($generated@@86 T@T) ($generated@@87 T@T) ($generated@@88 T@T) ($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@75 $generated@@86 $generated@@87 $generated@@88 ($generated@@82 $generated@@86 $generated@@87 $generated@@88 $generated@@90 $generated@@91 $generated@@92 $generated@@89) $generated@@91 $generated@@92) $generated@@89)
 :weight 0
)) (and (forall (($generated@@93 T@T) ($generated@@94 T@T) ($generated@@95 T@T) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ) (!  (or (= $generated@@98 $generated@@100) (= ($generated@@75 $generated@@93 $generated@@94 $generated@@95 ($generated@@82 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@98 $generated@@99 $generated@@96) $generated@@100 $generated@@101) ($generated@@75 $generated@@93 $generated@@94 $generated@@95 $generated@@97 $generated@@100 $generated@@101)))
 :weight 0
)) (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ) (!  (or (= $generated@@108 $generated@@110) (= ($generated@@75 $generated@@102 $generated@@103 $generated@@104 ($generated@@82 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@109 $generated@@110) ($generated@@75 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@109 $generated@@110)))
 :weight 0
)))) (= ($generated@@3 $generated@@76) 5)) (= ($generated@@3 $generated@@77) 6)) (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ) (! (= ($generated@@79 $generated@@111 $generated@@112 ($generated@@83 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@113) $generated@@115) $generated@@113)
 :weight 0
))) (forall (($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@120 $generated@@121) (= ($generated@@79 $generated@@116 $generated@@117 ($generated@@83 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@118) $generated@@121) ($generated@@79 $generated@@116 $generated@@117 $generated@@119 $generated@@121)))
 :weight 0
))) (= ($generated@@3 $generated@@80) 7)) (forall (($generated@@122 T@T) ($generated@@123 T@T) ) (= ($generated@@3 ($generated@@81 $generated@@122 $generated@@123)) 8))) (forall (($generated@@124 T@T) ($generated@@125 T@T) ) (! (= ($generated@@84 ($generated@@81 $generated@@124 $generated@@125)) $generated@@124)
 :pattern ( ($generated@@81 $generated@@124 $generated@@125))
))) (forall (($generated@@126 T@T) ($generated@@127 T@T) ) (! (= ($generated@@85 ($generated@@81 $generated@@126 $generated@@127)) $generated@@127)
 :pattern ( ($generated@@81 $generated@@126 $generated@@127))
))))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 Bool) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@8 ($generated@@75 $generated@@76 $generated@@77 $generated@@4 ($generated@@78 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@128)) (not true)) ($generated@@8 ($generated@@40 $generated@@4 ($generated@@79 $generated@@77 $generated@@80 ($generated@@79 $generated@@76 ($generated@@81 $generated@@77 $generated@@80) $generated@@129 $generated@@132) $generated@@130)))) $generated@@131))
 :pattern ( ($generated@@75 $generated@@76 $generated@@77 $generated@@4 ($generated@@78 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ) (!  (and (= ($generated@@134 ($generated@@29 $generated@@136 $generated@@137)) $generated@@136) (= ($generated@@135 ($generated@@29 $generated@@136 $generated@@137)) $generated@@137))
 :pattern ( ($generated@@29 $generated@@136 $generated@@137))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> ($generated@@31 $generated@@138 ($generated@@30 $generated@@139)) (and (= ($generated@@41 $generated@@28 ($generated@@40 $generated@@28 $generated@@138)) $generated@@138) ($generated@@27 $generated@@28 ($generated@@40 $generated@@28 $generated@@138) ($generated@@30 $generated@@139))))
 :pattern ( ($generated@@31 $generated@@138 ($generated@@30 $generated@@139)))
)))
(assert (forall (($generated@@140 T@U) ) (!  (and (= ($generated@@72 ($generated@@73 $generated@@140)) $generated@@140) (or (and (<= 0 ($generated@@73 $generated@@140)) (< ($generated@@73 $generated@@140) 55296)) (and (<= 57344 ($generated@@73 $generated@@140)) (< ($generated@@73 $generated@@140) 1114112))))
 :pattern ( ($generated@@73 $generated@@140))
)))
(assert (forall (($generated@@141 Int) ) (! (= ($generated@@41 $generated@@5 ($generated@@9 ($generated@@22 $generated@@141))) ($generated@@24 $generated@@80 ($generated@@41 $generated@@5 ($generated@@9 $generated@@141))))
 :pattern ( ($generated@@41 $generated@@5 ($generated@@9 ($generated@@22 $generated@@141))))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@T) ) (! (= ($generated@@41 $generated@@143 ($generated@@24 $generated@@143 $generated@@142)) ($generated@@24 $generated@@80 ($generated@@41 $generated@@143 $generated@@142)))
 :pattern ( ($generated@@41 $generated@@143 ($generated@@24 $generated@@143 $generated@@142)))
)))
(assert (forall (($generated@@144 T@U) ) (!  (=> (= ($generated@@20 $generated@@144) 0) (= $generated@@144 $generated@@21))
 :pattern ( ($generated@@20 $generated@@144))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! ($generated@@47 $generated@@57 $generated@@146 $generated $generated@@145)
 :pattern ( ($generated@@47 $generated@@57 $generated@@146 $generated $generated@@145))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@147 ($generated@@30 $generated@@148)) (forall (($generated@@149 Int) ) (!  (=> (and (<= 0 $generated@@149) (< $generated@@149 ($generated@@20 $generated@@147))) ($generated@@31 ($generated@@36 $generated@@147 $generated@@149) $generated@@148))
 :pattern ( ($generated@@36 $generated@@147 $generated@@149))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@147 ($generated@@30 $generated@@148)))
)))
(assert (forall (($generated@@150 T@U) ) (! ($generated@@27 $generated@@57 $generated@@150 $generated)
 :pattern ( ($generated@@27 $generated@@57 $generated@@150 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@151 () Int)
(declare-fun $generated@@152 () T@U)
(declare-fun $generated@@153 () T@U)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () Int)
(declare-fun $generated@@157 () Int)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 () T@U)
(declare-fun $generated@@160 () T@U)
(declare-fun $generated@@161 (T@U) Bool)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@163 () Int)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@164  (=> (= (ControlFlow 0 2) (- 0 1)) (or (or (= $generated@@151 ($generated@@22 2)) ($generated@@35 $generated@@152 ($generated@@29 ($generated@@29 ($generated@@29 ($generated@@29 $generated@@21 ($generated@@41 $generated@@57 ($generated@@72 122))) ($generated@@41 $generated@@57 ($generated@@72 101))) ($generated@@41 $generated@@57 ($generated@@72 114))) ($generated@@41 $generated@@57 ($generated@@72 111))))) ($generated@@35 $generated@@152 ($generated@@29 ($generated@@29 ($generated@@29 $generated@@21 ($generated@@41 $generated@@57 ($generated@@72 111))) ($generated@@41 $generated@@57 ($generated@@72 110))) ($generated@@41 $generated@@57 ($generated@@72 101))))))))
(let (($generated@@165  (=> (or (not (= $generated@@152 ($generated@@24 $generated@@28 ($generated@@29 ($generated@@29 ($generated@@29 $generated@@21 ($generated@@41 $generated@@57 ($generated@@72 111))) ($generated@@41 $generated@@57 ($generated@@72 110))) ($generated@@41 $generated@@57 ($generated@@72 101)))))) (not true)) (=> (and (and (and ($generated@@27 $generated@@28 $generated@@153 ($generated@@30 $generated)) ($generated@@47 $generated@@28 $generated@@153 ($generated@@30 $generated) $generated@@154)) (and (= $generated@@155 $generated@@152) ($generated@@27 $generated@@28 $generated@@155 ($generated@@30 $generated)))) (and (and (= $generated@@153 $generated@@155) (= $generated@@156 ($generated@@22 2))) (and (= $generated@@151 $generated@@156) (= (ControlFlow 0 5) 2)))) $generated@@164))))
(let (($generated@@166  (=> (and (and (= $generated@@152 ($generated@@24 $generated@@28 ($generated@@29 ($generated@@29 ($generated@@29 $generated@@21 ($generated@@41 $generated@@57 ($generated@@72 111))) ($generated@@41 $generated@@57 ($generated@@72 110))) ($generated@@41 $generated@@57 ($generated@@72 101))))) (= $generated@@157 ($generated@@22 1))) (and (= $generated@@151 $generated@@157) (= (ControlFlow 0 4) 2))) $generated@@164)))
(let (($generated@@167  (=> (or (not (= $generated@@152 ($generated@@24 $generated@@28 ($generated@@29 ($generated@@29 ($generated@@29 ($generated@@29 $generated@@21 ($generated@@41 $generated@@57 ($generated@@72 122))) ($generated@@41 $generated@@57 ($generated@@72 101))) ($generated@@41 $generated@@57 ($generated@@72 114))) ($generated@@41 $generated@@57 ($generated@@72 111)))))) (not true)) (and (=> (= (ControlFlow 0 6) 4) $generated@@166) (=> (= (ControlFlow 0 6) 5) $generated@@165)))))
(let (($generated@@168  (=> (and (and (= $generated@@152 ($generated@@24 $generated@@28 ($generated@@29 ($generated@@29 ($generated@@29 ($generated@@29 $generated@@21 ($generated@@41 $generated@@57 ($generated@@72 122))) ($generated@@41 $generated@@57 ($generated@@72 101))) ($generated@@41 $generated@@57 ($generated@@72 114))) ($generated@@41 $generated@@57 ($generated@@72 111))))) (= $generated@@158 ($generated@@22 0))) (and (= $generated@@151 $generated@@158) (= (ControlFlow 0 3) 2))) $generated@@164)))
(let (($generated@@169  (=> (= $generated@@159 ($generated@@78 $generated@@160 $generated@@154 $generated@@2 false)) (and (=> (= (ControlFlow 0 7) 3) $generated@@168) (=> (= (ControlFlow 0 7) 6) $generated@@167)))))
(let (($generated@@170  (=> (and ($generated@@161 $generated@@154) ($generated@@162 $generated@@154)) (=> (and (and ($generated@@27 $generated@@28 $generated@@152 ($generated@@30 $generated)) ($generated@@47 $generated@@28 $generated@@152 ($generated@@30 $generated) $generated@@154)) (and (= 0 $generated@@163) (= (ControlFlow 0 8) 7))) $generated@@169))))
$generated@@170))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
