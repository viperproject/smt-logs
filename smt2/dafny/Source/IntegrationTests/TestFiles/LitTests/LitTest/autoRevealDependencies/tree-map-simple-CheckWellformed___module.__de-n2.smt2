(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 (T@T) Int)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 (Bool) T@U)
(declare-fun $generated@@12 (T@U) Bool)
(declare-fun $generated@@13 (Int) T@U)
(declare-fun $generated@@14 (T@U) Int)
(declare-fun $generated@@15 (Real) T@U)
(declare-fun $generated@@16 (T@U) Real)
(declare-fun $generated@@23 (T@U) T@U)
(declare-fun $generated@@24 (T@U T@U) Bool)
(declare-fun $generated@@25 () T@U)
(declare-fun $generated@@27 (T@T T@U T@U) Bool)
(declare-fun $generated@@28 () T@T)
(declare-fun $generated@@29 (T@U T@U) T@U)
(declare-fun $generated@@30 (T@U T@U) Bool)
(declare-fun $generated@@38 () Int)
(declare-fun $generated@@39 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 (T@U T@U T@U T@U) Bool)
(declare-fun $generated@@42 (T@U T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@45 (T@U T@U T@U T@U T@U) Bool)
(declare-fun $generated@@53 (T@T T@U) T@U)
(declare-fun $generated@@56 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@64 (T@T T@U) T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@71 (T@U T@U T@U) Bool)
(declare-fun $generated@@72 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@88 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U) T@U)
(declare-fun $generated@@112 (T@U) T@U)
(declare-fun $generated@@115 (T@U) T@U)
(declare-fun $generated@@118 (T@U) T@U)
(declare-fun $generated@@121 (T@U) T@U)
(declare-fun $generated@@130 () T@T)
(declare-fun $generated@@131 () T@U)
(declare-fun $generated@@132 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@133 () T@T)
(declare-fun $generated@@134 () T@T)
(declare-fun $generated@@135 (T@T T@T) T@T)
(declare-fun $generated@@136 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@137 (T@T) T@T)
(declare-fun $generated@@138 (T@T) T@T)
(declare-fun $generated@@168 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@169 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@170 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@202 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@7 $generated@@8) 0) (= ($generated@@7 $generated@@9) 1)) (= ($generated@@7 $generated@@10) 2)) (forall (($generated@@17 Bool) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Int) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Real) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6)
)
(assert (= ($generated@@23 $generated) $generated@@0))
(assert (forall (($generated@@26 T@U) ) (!  (not ($generated@@24 $generated@@25 $generated@@26))
 :pattern ( ($generated@@24 $generated@@25 $generated@@26))
)))
(assert (= ($generated@@7 $generated@@28) 3))
(assert (forall (($generated@@31 T@U) ($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ($generated@@35 T@U) ) (!  (=> (and (and ($generated@@27 $generated@@28 $generated@@31 ($generated@@29 $generated@@32 $generated@@33)) (forall (($generated@@36 T@U) ) (!  (=> ($generated@@30 $generated@@36 $generated@@34) ($generated@@30 $generated@@36 $generated@@32))
 :pattern ( ($generated@@30 $generated@@36 $generated@@34))
 :pattern ( ($generated@@30 $generated@@36 $generated@@32))
))) (forall (($generated@@37 T@U) ) (!  (=> ($generated@@30 $generated@@37 $generated@@33) ($generated@@30 $generated@@37 $generated@@35))
 :pattern ( ($generated@@30 $generated@@37 $generated@@33))
 :pattern ( ($generated@@30 $generated@@37 $generated@@35))
))) ($generated@@27 $generated@@28 $generated@@31 ($generated@@29 $generated@@34 $generated@@35)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@31 ($generated@@29 $generated@@32 $generated@@33)) ($generated@@27 $generated@@28 $generated@@31 ($generated@@29 $generated@@34 $generated@@35)))
)))
(assert (= ($generated@@7 $generated@@43) 4))
(assert  (=> (<= 0 $generated@@38) (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ($generated@@49 T@U) ($generated@@50 T@U) ) (!  (=> (or ($generated@@41 $generated@@46 $generated@@47 $generated@@49 $generated@@50) (and (< 0 $generated@@38) (and (and ($generated@@40 $generated@@48) ($generated@@27 $generated@@28 $generated@@49 ($generated@@42 $generated@@46 $generated@@47))) ($generated@@27 $generated@@43 $generated@@50 ($generated@@44 $generated@@46))))) (and (forall (($generated@@51 T@U) ) (!  (=> ($generated@@30 $generated@@51 $generated@@46) (=> ($generated@@24 $generated@@50 $generated@@51) true))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@51))
 :pattern ( ($generated@@24 $generated@@50 $generated@@51))
)) (= ($generated@@39 $generated@@46 $generated@@47 $generated@@49 $generated@@50) (forall (($generated@@52 T@U) ) (!  (=> ($generated@@30 $generated@@52 $generated@@46) (=> ($generated@@24 $generated@@50 $generated@@52) ($generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@52)))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 $generated@@48 $generated@@49 $generated@@52))
 :pattern ( ($generated@@24 $generated@@50 $generated@@52))
)))))
 :pattern ( ($generated@@39 $generated@@46 $generated@@47 $generated@@49 $generated@@50) ($generated@@40 $generated@@48))
))))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@T) ) (! (= ($generated@@53 $generated@@55 $generated@@54) $generated@@54)
 :pattern ( ($generated@@53 $generated@@55 $generated@@54))
)))
(assert (forall (($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (!  (=> (and ($generated@@40 $generated@@61) (and ($generated@@30 $generated@@63 $generated@@59) ($generated@@27 $generated@@28 $generated@@62 ($generated@@29 $generated@@59 $generated@@60)))) (= ($generated@@58 ($generated@@56 $generated@@59 $generated@@60 $generated@@57 $generated@@62 $generated@@63) $generated@@25) ($generated@@58 ($generated@@56 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63) $generated@@25)))
 :pattern ( ($generated@@56 $generated@@59 $generated@@60 $generated@@57 $generated@@62 $generated@@63) ($generated@@40 $generated@@61))
 :pattern ( ($generated@@56 $generated@@59 $generated@@60 $generated@@61 $generated@@62 $generated@@63))
)))
(assert (forall (($generated@@66 T@U) ($generated@@67 T@T) ) (! (= ($generated@@65 $generated@@67 ($generated@@64 $generated@@67 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@64 $generated@@67 $generated@@66))
)))
(assert (forall (($generated@@68 T@U) ($generated@@69 T@U) ) (! (= ($generated@@27 $generated@@43 $generated@@68 ($generated@@44 $generated@@69)) (forall (($generated@@70 T@U) ) (!  (=> ($generated@@24 $generated@@68 $generated@@70) ($generated@@30 $generated@@70 $generated@@69))
 :pattern ( ($generated@@24 $generated@@68 $generated@@70))
)))
 :pattern ( ($generated@@27 $generated@@43 $generated@@68 ($generated@@44 $generated@@69)))
)))
(assert ($generated@@40 $generated@@57))
(assert (forall (($generated@@73 T@U) ($generated@@74 T@U) ($generated@@75 T@U) ($generated@@76 T@T) ) (! (= ($generated@@71 ($generated@@65 $generated@@76 $generated@@73) $generated@@74 $generated@@75) ($generated@@72 $generated@@76 $generated@@73 $generated@@74 $generated@@75))
 :pattern ( ($generated@@71 ($generated@@65 $generated@@76 $generated@@73) $generated@@74 $generated@@75))
)))
(assert  (=> (<= 0 $generated@@38) (forall (($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ) (!  (=> (or ($generated@@41 $generated@@77 $generated@@78 ($generated@@53 $generated@@28 $generated@@80) ($generated@@53 $generated@@43 $generated@@81)) (and (< 0 $generated@@38) (and (and ($generated@@40 $generated@@79) ($generated@@27 $generated@@28 $generated@@80 ($generated@@42 $generated@@77 $generated@@78))) ($generated@@27 $generated@@43 $generated@@81 ($generated@@44 $generated@@77))))) (and (forall (($generated@@82 T@U) ) (!  (=> ($generated@@30 $generated@@82 $generated@@77) (=> ($generated@@24 ($generated@@53 $generated@@43 $generated@@81) $generated@@82) true))
 :pattern ( ($generated@@45 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@82))
 :pattern ( ($generated@@24 $generated@@81 $generated@@82))
)) (= ($generated@@39 $generated@@77 $generated@@78 ($generated@@53 $generated@@28 $generated@@80) ($generated@@53 $generated@@43 $generated@@81)) (forall (($generated@@83 T@U) ) (!  (=> ($generated@@30 $generated@@83 $generated@@77) (=> ($generated@@24 ($generated@@53 $generated@@43 $generated@@81) $generated@@83) ($generated@@45 $generated@@77 $generated@@78 $generated@@79 ($generated@@53 $generated@@28 $generated@@80) $generated@@83)))
 :pattern ( ($generated@@45 $generated@@77 $generated@@78 $generated@@79 $generated@@80 $generated@@83))
 :pattern ( ($generated@@24 $generated@@81 $generated@@83))
)))))
 :weight 3
 :pattern ( ($generated@@39 $generated@@77 $generated@@78 ($generated@@53 $generated@@28 $generated@@80) ($generated@@53 $generated@@43 $generated@@81)) ($generated@@40 $generated@@79))
))))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@72 $generated@@28 $generated@@86 ($generated@@42 $generated@@84 $generated@@85) $generated@@87) ($generated@@72 $generated@@28 $generated@@86 ($generated@@29 $generated@@84 $generated@@85) $generated@@87))
 :pattern ( ($generated@@72 $generated@@28 $generated@@86 ($generated@@42 $generated@@84 $generated@@85) $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ($generated@@91 T@U) ($generated@@92 T@U) ) (!  (=> (and ($generated@@40 $generated@@92) ($generated@@72 $generated@@28 $generated@@89 ($generated@@29 $generated@@90 $generated@@91) $generated@@92)) (forall (($generated@@93 T@U) ) (!  (=> (and ($generated@@71 $generated@@93 $generated@@90 $generated@@92) ($generated@@45 $generated@@90 $generated@@91 $generated@@92 $generated@@89 $generated@@93)) ($generated@@71 ($generated@@88 $generated@@90 $generated@@91 $generated@@92 $generated@@89 $generated@@93) $generated@@91 $generated@@92))
 :pattern ( ($generated@@88 $generated@@90 $generated@@91 $generated@@92 $generated@@89 $generated@@93))
)))
 :pattern ( ($generated@@72 $generated@@28 $generated@@89 ($generated@@29 $generated@@90 $generated@@91) $generated@@92))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (!  (=> ($generated@@58 $generated@@94 $generated@@95) (= $generated@@94 $generated@@95))
 :pattern ( ($generated@@58 $generated@@94 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@96 ($generated@@29 $generated@@97 $generated@@98)) (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@99) ($generated@@30 $generated@@100 $generated@@97)) ($generated@@45 $generated@@97 $generated@@98 $generated@@99 $generated@@96 $generated@@100)) ($generated@@30 ($generated@@88 $generated@@97 $generated@@98 $generated@@99 $generated@@96 $generated@@100) $generated@@98))
 :pattern ( ($generated@@88 $generated@@97 $generated@@98 $generated@@99 $generated@@96 $generated@@100))
)))
 :pattern ( ($generated@@27 $generated@@28 $generated@@96 ($generated@@29 $generated@@97 $generated@@98)))
)))
(assert (forall (($generated@@101 T@U) ) (!  (=> ($generated@@30 $generated@@101 $generated) (and (= ($generated@@65 $generated@@8 ($generated@@64 $generated@@8 $generated@@101)) $generated@@101) ($generated@@27 $generated@@8 ($generated@@64 $generated@@8 $generated@@101) $generated)))
 :pattern ( ($generated@@30 $generated@@101 $generated))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@30 ($generated@@65 $generated@@104 $generated@@102) $generated@@103) ($generated@@27 $generated@@104 $generated@@102 $generated@@103))
 :pattern ( ($generated@@30 ($generated@@65 $generated@@104 $generated@@102) $generated@@103))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@72 $generated@@43 $generated@@105 ($generated@@44 $generated@@106) $generated@@107) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@24 $generated@@105 $generated@@108) ($generated@@71 $generated@@108 $generated@@106 $generated@@107))
 :pattern ( ($generated@@24 $generated@@105 $generated@@108))
)))
 :pattern ( ($generated@@72 $generated@@43 $generated@@105 ($generated@@44 $generated@@106) $generated@@107))
)))
(assert (forall (($generated@@110 T@U) ($generated@@111 T@U) ) (! (= ($generated@@109 ($generated@@29 $generated@@110 $generated@@111)) $generated@@110)
 :pattern ( ($generated@@29 $generated@@110 $generated@@111))
)))
(assert (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@112 ($generated@@29 $generated@@113 $generated@@114)) $generated@@114)
 :pattern ( ($generated@@29 $generated@@113 $generated@@114))
)))
(assert (forall (($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@115 ($generated@@42 $generated@@116 $generated@@117)) $generated@@116)
 :pattern ( ($generated@@42 $generated@@116 $generated@@117))
)))
(assert (forall (($generated@@119 T@U) ($generated@@120 T@U) ) (! (= ($generated@@118 ($generated@@42 $generated@@119 $generated@@120)) $generated@@120)
 :pattern ( ($generated@@42 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@121 ($generated@@44 $generated@@122)) $generated@@122)
 :pattern ( ($generated@@44 $generated@@122))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@23 ($generated@@44 $generated@@123)) $generated@@1)
 :pattern ( ($generated@@44 $generated@@123))
)))
(assert (forall (($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@64 $generated@@125 ($generated@@65 $generated@@125 $generated@@124)) $generated@@124)
 :pattern ( ($generated@@65 $generated@@125 $generated@@124))
)))
(assert (forall (($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@27 $generated@@28 $generated@@128 ($generated@@42 $generated@@126 $generated@@127))  (and ($generated@@27 $generated@@28 $generated@@128 ($generated@@29 $generated@@126 $generated@@127)) (forall (($generated@@129 T@U) )  (=> ($generated@@30 $generated@@129 $generated@@126) ($generated@@58 ($generated@@56 $generated@@126 $generated@@127 $generated@@57 $generated@@128 $generated@@129) $generated@@25)))))
 :pattern ( ($generated@@27 $generated@@28 $generated@@128 ($generated@@42 $generated@@126 $generated@@127)))
)))
(assert  (and (and (and (and (and (and (and (= ($generated@@7 $generated@@130) 5) (forall (($generated@@139 T@T) ($generated@@140 T@T) ($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@132 $generated@@139 $generated@@140 ($generated@@136 $generated@@139 $generated@@140 $generated@@142 $generated@@143 $generated@@141) $generated@@143) $generated@@141)
 :weight 0
))) (forall (($generated@@144 T@T) ($generated@@145 T@T) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@U) ) (!  (or (= $generated@@148 $generated@@149) (= ($generated@@132 $generated@@144 $generated@@145 ($generated@@136 $generated@@144 $generated@@145 $generated@@147 $generated@@148 $generated@@146) $generated@@149) ($generated@@132 $generated@@144 $generated@@145 $generated@@147 $generated@@149)))
 :weight 0
))) (= ($generated@@7 $generated@@133) 6)) (= ($generated@@7 $generated@@134) 7)) (forall (($generated@@150 T@T) ($generated@@151 T@T) ) (= ($generated@@7 ($generated@@135 $generated@@150 $generated@@151)) 8))) (forall (($generated@@152 T@T) ($generated@@153 T@T) ) (! (= ($generated@@137 ($generated@@135 $generated@@152 $generated@@153)) $generated@@152)
 :pattern ( ($generated@@135 $generated@@152 $generated@@153))
))) (forall (($generated@@154 T@T) ($generated@@155 T@T) ) (! (= ($generated@@138 ($generated@@135 $generated@@154 $generated@@155)) $generated@@155)
 :pattern ( ($generated@@135 $generated@@154 $generated@@155))
))))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ) (!  (=> ($generated@@40 $generated@@159) (= ($generated@@72 $generated@@28 $generated@@156 ($generated@@29 $generated@@157 $generated@@158) $generated@@159) (forall (($generated@@160 T@U) ) (!  (=> (and (and ($generated@@30 $generated@@160 $generated@@157) ($generated@@71 $generated@@160 $generated@@157 $generated@@159)) ($generated@@45 $generated@@157 $generated@@158 $generated@@159 $generated@@156 $generated@@160)) (forall (($generated@@161 T@U) ) (!  (=> (and (or (not (= $generated@@161 $generated@@131)) (not true)) ($generated@@24 ($generated@@56 $generated@@157 $generated@@158 $generated@@159 $generated@@156 $generated@@160) ($generated@@65 $generated@@130 $generated@@161))) ($generated@@12 ($generated@@64 $generated@@8 ($generated@@132 $generated@@133 $generated@@134 ($generated@@132 $generated@@130 ($generated@@135 $generated@@133 $generated@@134) $generated@@159 $generated@@161) $generated@@2))))
 :pattern ( ($generated@@24 ($generated@@56 $generated@@157 $generated@@158 $generated@@159 $generated@@156 $generated@@160) ($generated@@65 $generated@@130 $generated@@161)))
)))
 :pattern ( ($generated@@88 $generated@@157 $generated@@158 $generated@@159 $generated@@156 $generated@@160))
 :pattern ( ($generated@@56 $generated@@157 $generated@@158 $generated@@159 $generated@@156 $generated@@160))
))))
 :pattern ( ($generated@@72 $generated@@28 $generated@@156 ($generated@@29 $generated@@157 $generated@@158) $generated@@159))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ($generated@@164 T@U) ) (!  (=> ($generated@@30 $generated@@164 ($generated@@29 $generated@@162 $generated@@163)) (and (= ($generated@@65 $generated@@28 ($generated@@64 $generated@@28 $generated@@164)) $generated@@164) ($generated@@27 $generated@@28 ($generated@@64 $generated@@28 $generated@@164) ($generated@@29 $generated@@162 $generated@@163))))
 :pattern ( ($generated@@30 $generated@@164 ($generated@@29 $generated@@162 $generated@@163)))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> ($generated@@30 $generated@@167 ($generated@@42 $generated@@165 $generated@@166)) (and (= ($generated@@65 $generated@@28 ($generated@@64 $generated@@28 $generated@@167)) $generated@@167) ($generated@@27 $generated@@28 ($generated@@64 $generated@@28 $generated@@167) ($generated@@42 $generated@@165 $generated@@166))))
 :pattern ( ($generated@@30 $generated@@167 ($generated@@42 $generated@@165 $generated@@166)))
)))
(assert  (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ) (! (= ($generated@@168 $generated@@171 $generated@@172 $generated@@173 ($generated@@170 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@176 $generated@@177) $generated@@174)
 :weight 0
)) (and (forall (($generated@@178 T@T) ($generated@@179 T@T) ($generated@@180 T@T) ($generated@@181 T@U) ($generated@@182 T@U) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ) (!  (or (= $generated@@183 $generated@@185) (= ($generated@@168 $generated@@178 $generated@@179 $generated@@180 ($generated@@170 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@183 $generated@@184 $generated@@181) $generated@@185 $generated@@186) ($generated@@168 $generated@@178 $generated@@179 $generated@@180 $generated@@182 $generated@@185 $generated@@186)))
 :weight 0
)) (forall (($generated@@187 T@T) ($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@168 $generated@@187 $generated@@188 $generated@@189 ($generated@@170 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@192 $generated@@193 $generated@@190) $generated@@194 $generated@@195) ($generated@@168 $generated@@187 $generated@@188 $generated@@189 $generated@@191 $generated@@194 $generated@@195)))
 :weight 0
)))))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ($generated@@198 T@U) ($generated@@199 Bool) ($generated@@200 T@U) ($generated@@201 T@U) ) (! (= ($generated@@12 ($generated@@168 $generated@@130 $generated@@133 $generated@@8 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))  (=> (and (or (not (= $generated@@200 $generated@@196)) (not true)) ($generated@@12 ($generated@@64 $generated@@8 ($generated@@132 $generated@@133 $generated@@134 ($generated@@132 $generated@@130 ($generated@@135 $generated@@133 $generated@@134) $generated@@197 $generated@@200) $generated@@198)))) $generated@@199))
 :pattern ( ($generated@@168 $generated@@130 $generated@@133 $generated@@8 ($generated@@169 $generated@@196 $generated@@197 $generated@@198 $generated@@199) $generated@@200 $generated@@201))
)))
(assert (forall (($generated@@203 T@U) ($generated@@204 T@U) ) (!  (and (= ($generated@@23 ($generated@@29 $generated@@203 $generated@@204)) $generated@@3) (= ($generated@@202 ($generated@@29 $generated@@203 $generated@@204)) $generated@@5))
 :pattern ( ($generated@@29 $generated@@203 $generated@@204))
)))
(assert (forall (($generated@@205 T@U) ($generated@@206 T@U) ) (!  (and (= ($generated@@23 ($generated@@42 $generated@@205 $generated@@206)) $generated@@4) (= ($generated@@202 ($generated@@42 $generated@@205 $generated@@206)) $generated@@6))
 :pattern ( ($generated@@42 $generated@@205 $generated@@206))
)))
(assert (forall (($generated@@207 T@U) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ($generated@@211 T@U) ) (!  (=> (and (and ($generated@@40 $generated@@209) (and ($generated@@30 $generated@@211 $generated@@207) ($generated@@27 $generated@@28 $generated@@210 ($generated@@29 $generated@@207 $generated@@208)))) ($generated@@58 ($generated@@56 $generated@@207 $generated@@208 $generated@@57 $generated@@210 $generated@@211) $generated@@25)) (= ($generated@@45 $generated@@207 $generated@@208 $generated@@57 $generated@@210 $generated@@211) ($generated@@45 $generated@@207 $generated@@208 $generated@@209 $generated@@210 $generated@@211)))
 :pattern ( ($generated@@45 $generated@@207 $generated@@208 $generated@@57 $generated@@210 $generated@@211) ($generated@@40 $generated@@209))
 :pattern ( ($generated@@45 $generated@@207 $generated@@208 $generated@@209 $generated@@210 $generated@@211))
)))
(assert (forall (($generated@@212 T@U) ($generated@@213 T@U) ) (!  (=> ($generated@@30 $generated@@212 ($generated@@44 $generated@@213)) (and (= ($generated@@65 $generated@@43 ($generated@@64 $generated@@43 $generated@@212)) $generated@@212) ($generated@@27 $generated@@43 ($generated@@64 $generated@@43 $generated@@212) ($generated@@44 $generated@@213))))
 :pattern ( ($generated@@30 $generated@@212 ($generated@@44 $generated@@213)))
)))
(assert  (=> (<= 0 $generated@@38) (forall (($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ($generated@@217 T@U) ($generated@@218 T@U) ) (!  (=> (or ($generated@@41 $generated@@214 $generated@@215 $generated@@217 ($generated@@53 $generated@@43 $generated@@218)) (and (< 0 $generated@@38) (and (and ($generated@@40 $generated@@216) ($generated@@27 $generated@@28 $generated@@217 ($generated@@42 $generated@@214 $generated@@215))) ($generated@@27 $generated@@43 $generated@@218 ($generated@@44 $generated@@214))))) (and (forall (($generated@@219 T@U) ) (!  (=> ($generated@@30 $generated@@219 $generated@@214) (=> ($generated@@24 ($generated@@53 $generated@@43 $generated@@218) $generated@@219) true))
 :pattern ( ($generated@@45 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@219))
 :pattern ( ($generated@@24 $generated@@218 $generated@@219))
)) (= ($generated@@39 $generated@@214 $generated@@215 $generated@@217 ($generated@@53 $generated@@43 $generated@@218)) (forall (($generated@@220 T@U) ) (!  (=> ($generated@@30 $generated@@220 $generated@@214) (=> ($generated@@24 ($generated@@53 $generated@@43 $generated@@218) $generated@@220) ($generated@@45 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@220)))
 :pattern ( ($generated@@45 $generated@@214 $generated@@215 $generated@@216 $generated@@217 $generated@@220))
 :pattern ( ($generated@@24 $generated@@218 $generated@@220))
)))))
 :weight 3
 :pattern ( ($generated@@39 $generated@@214 $generated@@215 $generated@@217 ($generated@@53 $generated@@43 $generated@@218)) ($generated@@40 $generated@@216))
))))
(assert (forall (($generated@@221 T@U) ($generated@@222 T@U) ) (! (= ($generated@@58 $generated@@221 $generated@@222) (forall (($generated@@223 T@U) ) (! (= ($generated@@24 $generated@@221 $generated@@223) ($generated@@24 $generated@@222 $generated@@223))
 :pattern ( ($generated@@24 $generated@@221 $generated@@223))
 :pattern ( ($generated@@24 $generated@@222 $generated@@223))
)))
 :pattern ( ($generated@@58 $generated@@221 $generated@@222))
)))
(assert (forall (($generated@@224 T@U) ($generated@@225 T@T) ) (! (= ($generated@@65 $generated@@225 ($generated@@53 $generated@@225 $generated@@224)) ($generated@@53 $generated@@134 ($generated@@65 $generated@@225 $generated@@224)))
 :pattern ( ($generated@@65 $generated@@225 ($generated@@53 $generated@@225 $generated@@224)))
)))
(assert (forall (($generated@@226 T@U) ($generated@@227 T@U) ) (! ($generated@@72 $generated@@8 $generated@@227 $generated $generated@@226)
 :pattern ( ($generated@@72 $generated@@8 $generated@@227 $generated $generated@@226))
)))
(assert (forall (($generated@@228 T@U) ) (! ($generated@@27 $generated@@8 $generated@@228 $generated)
 :pattern ( ($generated@@27 $generated@@8 $generated@@228 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@229 () T@U)
(declare-fun $generated@@230 () T@U)
(declare-fun $generated@@231 () T@U)
(declare-fun $generated@@232 () T@U)
(declare-fun $generated@@233 () T@U)
(declare-fun $generated@@234 () Bool)
(declare-fun $generated@@235 () T@U)
(declare-fun $generated@@236 () Bool)
(declare-fun $generated@@237 () T@U)
(declare-fun $generated@@238 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@239  (=> (and (and (= ($generated@@39 $generated@@229 $generated@@230 $generated@@231 $generated@@232) (forall (($generated@@240 T@U) ) (!  (=> ($generated@@30 $generated@@240 $generated@@229) (=> ($generated@@24 $generated@@232 $generated@@240) ($generated@@45 $generated@@229 $generated@@230 $generated@@233 $generated@@231 $generated@@240)))
 :pattern ( ($generated@@45 $generated@@229 $generated@@230 $generated@@233 $generated@@231 $generated@@240))
 :pattern ( ($generated@@24 $generated@@232 $generated@@240))
))) (forall (($generated@@241 T@U) ) (!  (=> ($generated@@30 $generated@@241 $generated@@229) (=> ($generated@@24 $generated@@232 $generated@@241) true))
 :pattern ( ($generated@@45 $generated@@229 $generated@@230 $generated@@233 $generated@@231 $generated@@241))
 :pattern ( ($generated@@24 $generated@@232 $generated@@241))
))) (and ($generated@@27 $generated@@8 ($generated@@11 ($generated@@39 $generated@@229 $generated@@230 $generated@@231 $generated@@232)) $generated) (= (ControlFlow 0 3) (- 0 2)))) $generated@@234)))
(let (($generated@@242  (=> (not ($generated@@24 $generated@@232 $generated@@235)) (=> (and (= $generated@@234 true) (= (ControlFlow 0 6) 3)) $generated@@239))))
(let (($generated@@243  (=> (and ($generated@@24 $generated@@232 $generated@@235) ($generated@@71 ($generated@@65 $generated@@28 $generated@@231) ($generated@@29 $generated@@229 $generated@@230) $generated@@233)) (=> (and (and ($generated@@71 $generated@@235 $generated@@229 $generated@@233) (= $generated@@236 (forall (($generated@@244 T@U) ($generated@@245 T@U) )  (=> (and (and (or (not (= $generated@@244 $generated@@131)) (not true)) ($generated@@12 ($generated@@64 $generated@@8 ($generated@@132 $generated@@133 $generated@@134 ($generated@@132 $generated@@130 ($generated@@135 $generated@@133 $generated@@134) $generated@@233 $generated@@244) $generated@@2)))) ($generated@@24 ($generated@@56 $generated@@229 $generated@@230 $generated@@233 $generated@@231 $generated@@235) ($generated@@65 $generated@@130 $generated@@244))) ($generated@@12 ($generated@@168 $generated@@130 $generated@@133 $generated@@8 $generated@@237 $generated@@244 $generated@@245)))))) (and (= $generated@@234 $generated@@236) (= (ControlFlow 0 5) 3))) $generated@@239))))
(let (($generated@@246  (=> (and ($generated@@30 $generated@@235 $generated@@229) ($generated@@71 $generated@@235 $generated@@229 $generated@@233)) (and (=> (= (ControlFlow 0 7) 5) $generated@@243) (=> (= (ControlFlow 0 7) 6) $generated@@242)))))
(let (($generated@@247  (=> (not (and ($generated@@30 $generated@@235 $generated@@229) ($generated@@71 $generated@@235 $generated@@229 $generated@@233))) (=> (and (= $generated@@234 true) (= (ControlFlow 0 4) 3)) $generated@@239))))
(let (($generated@@248 true))
(let (($generated@@249  (=> (= $generated@@237 ($generated@@169 $generated@@131 $generated@@233 $generated@@2 false)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@248) (=> (= (ControlFlow 0 8) 7) $generated@@246)) (=> (= (ControlFlow 0 8) 4) $generated@@247)))))
(let (($generated@@250  (=> (and ($generated@@40 $generated@@233) ($generated@@238 $generated@@233)) (=> (and (and ($generated@@27 $generated@@28 $generated@@231 ($generated@@42 $generated@@229 $generated@@230)) ($generated@@27 $generated@@43 $generated@@232 ($generated@@44 $generated@@229))) (and (= 0 $generated@@38) (= (ControlFlow 0 9) 8))) $generated@@249))))
$generated@@250)))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
