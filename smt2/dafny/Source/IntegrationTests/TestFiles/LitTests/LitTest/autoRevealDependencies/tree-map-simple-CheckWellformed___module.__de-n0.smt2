(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 (T@T) Int)
(declare-fun $generated@@6 () T@T)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 (Bool) T@U)
(declare-fun $generated@@10 (T@U) Bool)
(declare-fun $generated@@11 (Int) T@U)
(declare-fun $generated@@12 (T@U) Int)
(declare-fun $generated@@13 (Real) T@U)
(declare-fun $generated@@14 (T@U) Real)
(declare-fun $generated@@21 (T@U T@U) T@U)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@38 (T@U T@U) T@U)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@44 (T@U T@U T@U) T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@49 (T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@56 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@57 () T@T)
(declare-fun $generated@@58 (T@U) T@U)
(declare-fun $generated@@59 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U T@U) Bool)
(declare-fun $generated@@64 () Int)
(declare-fun $generated@@65 (T@U T@U) Bool)
(declare-fun $generated@@66 (T@U) Bool)
(declare-fun $generated@@67 (T@U) T@U)
(declare-fun $generated@@68 (T@U) T@U)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U) Bool)
(declare-fun $generated@@81 (T@T T@U) T@U)
(declare-fun $generated@@84 (T@U T@U) T@U)
(declare-fun $generated@@85 (T@U T@U) Bool)
(declare-fun $generated@@91 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@T T@U) T@U)
(declare-fun $generated@@95 (T@U T@U) Bool)
(declare-fun $generated@@99 () T@T)
(declare-fun $generated@@110 () T@T)
(declare-fun $generated@@111 (T@U) T@U)
(declare-fun $generated@@115 (T@U) Int)
(declare-fun $generated@@116 (T@U) Int)
(declare-fun $generated@@121 (T@U T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@171 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@172 () T@T)
(declare-fun $generated@@173 () T@T)
(declare-fun $generated@@174 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@175 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@176 (T@T T@T) T@T)
(declare-fun $generated@@177 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@179 (T@T) T@T)
(declare-fun $generated@@180 (T@T) T@T)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@5 $generated@@6) 0) (= ($generated@@5 $generated@@7) 1)) (= ($generated@@5 $generated@@8) 2)) (forall (($generated@@15 Bool) ) (! (= ($generated@@10 ($generated@@9 $generated@@15)) $generated@@15)
 :pattern ( ($generated@@9 $generated@@15))
))) (forall (($generated@@16 T@U) ) (! (= ($generated@@9 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 Int) ) (! (= ($generated@@12 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 T@U) ) (! (= ($generated@@11 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 Real) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4)
)
(assert (forall (($generated@@23 T@U) ($generated@@24 T@U) ) (! ($generated@@22 ($generated@@21 $generated@@23 $generated@@24) $generated@@24)
 :pattern ( ($generated@@21 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@25 T@U) ($generated@@26 T@U) ($generated@@27 T@U) ) (!  (=> ($generated@@22 $generated@@25 $generated@@27) ($generated@@22 ($generated@@21 $generated@@25 $generated@@26) $generated@@27))
 :pattern ( ($generated@@21 $generated@@25 $generated@@26) ($generated@@22 $generated@@25 $generated@@27))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ($generated@@31 T@U) ) (!  (=> ($generated@@22 $generated@@29 $generated@@31) ($generated@@22 ($generated@@28 $generated@@29 $generated@@30) $generated@@31))
 :pattern ( ($generated@@28 $generated@@29 $generated@@30) ($generated@@22 $generated@@29 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@22 $generated@@33 $generated@@34) ($generated@@22 ($generated@@28 $generated@@32 $generated@@33) $generated@@34))
 :pattern ( ($generated@@28 $generated@@32 $generated@@33) ($generated@@22 $generated@@33 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@22 ($generated@@21 $generated@@35 $generated@@36) $generated@@37)  (or (= $generated@@37 $generated@@36) ($generated@@22 $generated@@35 $generated@@37)))
 :pattern ( ($generated@@22 ($generated@@21 $generated@@35 $generated@@36) $generated@@37))
)))
(assert (forall (($generated@@39 T@U) ($generated@@40 T@U) ($generated@@41 T@U) ) (!  (=> ($generated@@22 $generated@@40 $generated@@41) (not ($generated@@22 ($generated@@38 $generated@@39 $generated@@40) $generated@@41)))
 :pattern ( ($generated@@38 $generated@@39 $generated@@40) ($generated@@22 $generated@@40 $generated@@41))
)))
(assert (forall (($generated@@43 T@U) ) (!  (not ($generated@@22 $generated@@42 $generated@@43))
 :pattern ( ($generated@@22 $generated@@42 $generated@@43))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@44 $generated@@46 ($generated@@45 $generated@@47) $generated@@48) ($generated@@44 $generated@@46 $generated@@47 $generated@@48))
 :pattern ( ($generated@@44 $generated@@46 ($generated@@45 $generated@@47) $generated@@48))
)))
(assert (= ($generated@@49 $generated@@50) $generated@@2))
(assert (forall (($generated@@51 T@U) ($generated@@52 T@U) ) (! (= ($generated@@28 ($generated@@28 $generated@@51 $generated@@52) $generated@@52) ($generated@@28 $generated@@51 $generated@@52))
 :pattern ( ($generated@@28 ($generated@@28 $generated@@51 $generated@@52) $generated@@52))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@22 ($generated@@38 $generated@@53 $generated@@54) $generated@@55)  (and ($generated@@22 $generated@@53 $generated@@55) (not ($generated@@22 $generated@@54 $generated@@55))))
 :pattern ( ($generated@@22 ($generated@@38 $generated@@53 $generated@@54) $generated@@55))
)))
(assert (= ($generated@@5 $generated@@57) 3))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (!  (=> ($generated@@59 $generated@@61) ($generated@@56 $generated@@57 $generated@@50 ($generated@@58 $generated@@60) $generated@@61))
 :pattern ( ($generated@@56 $generated@@57 $generated@@50 ($generated@@58 $generated@@60) $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ) (! ($generated@@62 $generated@@57 $generated@@50 ($generated@@58 $generated@@63))
 :pattern ( ($generated@@62 $generated@@57 $generated@@50 ($generated@@58 $generated@@63)))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ) (!  (=> (or ($generated@@65 $generated@@69 $generated@@71) (and (< 1 $generated@@64) ($generated@@62 $generated@@57 $generated@@71 ($generated@@58 $generated@@69)))) (and (=> (not ($generated@@66 $generated@@71)) (let (($generated@@72 ($generated@@67 $generated@@71)))
($generated@@65 $generated@@69 $generated@@72))) (= ($generated@@44 $generated@@69 ($generated@@45 $generated@@70) $generated@@71) (ite ($generated@@66 $generated@@71) $generated@@42 (let (($generated@@73 ($generated@@67 $generated@@71)))
(let (($generated@@74 ($generated@@68 $generated@@71)))
($generated@@28 ($generated@@21 $generated@@42 $generated@@74) ($generated@@44 $generated@@69 $generated@@70 $generated@@73))))))))
 :pattern ( ($generated@@44 $generated@@69 ($generated@@45 $generated@@70) $generated@@71))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@75 $generated@@76 $generated@@77) (= $generated@@76 $generated@@77))
 :pattern ( ($generated@@75 $generated@@76 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ) (!  (=> (and ($generated@@78 $generated@@79) ($generated@@78 $generated@@80)) (= ($generated@@75 $generated@@79 $generated@@80)  (and (= ($generated@@68 $generated@@79) ($generated@@68 $generated@@80)) ($generated@@75 ($generated@@67 $generated@@79) ($generated@@67 $generated@@80)))))
 :pattern ( ($generated@@75 $generated@@79 $generated@@80) ($generated@@78 $generated@@79))
 :pattern ( ($generated@@75 $generated@@79 $generated@@80) ($generated@@78 $generated@@80))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@T) ) (! (= ($generated@@81 $generated@@83 $generated@@82) $generated@@82)
 :pattern ( ($generated@@81 $generated@@83 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@62 $generated@@57 ($generated@@84 $generated@@87 $generated@@88) ($generated@@58 $generated@@86))  (and ($generated@@85 $generated@@87 $generated@@86) ($generated@@62 $generated@@57 $generated@@88 ($generated@@58 $generated@@86))))
 :pattern ( ($generated@@62 $generated@@57 ($generated@@84 $generated@@87 $generated@@88) ($generated@@58 $generated@@86)))
)))
(assert (forall (($generated@@89 T@U) ) (! (= ($generated@@66 $generated@@89) (= ($generated@@49 $generated@@89) $generated@@2))
 :pattern ( ($generated@@66 $generated@@89))
)))
(assert (forall (($generated@@90 T@U) ) (! (= ($generated@@78 $generated@@90) (= ($generated@@49 $generated@@90) $generated@@3))
 :pattern ( ($generated@@78 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@92 $generated@@94 ($generated@@91 $generated@@94 $generated@@93)) $generated@@93)
 :pattern ( ($generated@@91 $generated@@94 $generated@@93))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@95 $generated@@96 $generated@@97) (forall (($generated@@98 T@U) ) (!  (or (not ($generated@@22 $generated@@96 $generated@@98)) (not ($generated@@22 $generated@@97 $generated@@98)))
 :pattern ( ($generated@@22 $generated@@96 $generated@@98))
 :pattern ( ($generated@@22 $generated@@97 $generated@@98))
)))
 :pattern ( ($generated@@95 $generated@@96 $generated@@97))
)))
(assert (= ($generated@@5 $generated@@99) 4))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (!  (=> (or ($generated@@65 $generated@@100 ($generated@@81 $generated@@57 $generated@@102)) (and (< 1 $generated@@64) ($generated@@62 $generated@@57 $generated@@102 ($generated@@58 $generated@@100)))) (and (=> (not ($generated@@10 ($generated@@81 $generated@@6 ($generated@@9 ($generated@@66 ($generated@@81 $generated@@57 $generated@@102)))))) (let (($generated@@103 ($generated@@81 $generated@@57 ($generated@@67 ($generated@@81 $generated@@57 $generated@@102)))))
($generated@@65 $generated@@100 $generated@@103))) (= ($generated@@44 $generated@@100 ($generated@@45 $generated@@101) ($generated@@81 $generated@@57 $generated@@102)) (ite ($generated@@66 ($generated@@81 $generated@@57 $generated@@102)) $generated@@42 (let (($generated@@104 ($generated@@81 $generated@@57 ($generated@@67 ($generated@@81 $generated@@57 $generated@@102)))))
(let (($generated@@105 ($generated@@81 $generated@@99 ($generated@@68 ($generated@@81 $generated@@57 $generated@@102)))))
($generated@@28 ($generated@@21 $generated@@42 $generated@@105) ($generated@@44 $generated@@100 ($generated@@45 $generated@@101) $generated@@104))))))))
 :weight 3
 :pattern ( ($generated@@44 $generated@@100 ($generated@@45 $generated@@101) ($generated@@81 $generated@@57 $generated@@102)))
))))
(assert (forall (($generated@@106 T@U) ) (!  (=> ($generated@@78 $generated@@106) (exists (($generated@@107 T@U) ($generated@@108 T@U) ) (= $generated@@106 ($generated@@84 $generated@@107 $generated@@108))))
 :pattern ( ($generated@@78 $generated@@106))
)))
(assert (forall (($generated@@109 T@U) ) (!  (=> ($generated@@66 $generated@@109) (= $generated@@109 $generated@@50))
 :pattern ( ($generated@@66 $generated@@109))
)))
(assert (= ($generated@@5 $generated@@110) 5))
(assert (forall (($generated@@112 T@U) ($generated@@113 T@U) ) (! (= ($generated@@62 $generated@@110 $generated@@112 ($generated@@111 $generated@@113)) (forall (($generated@@114 T@U) ) (!  (=> ($generated@@22 $generated@@112 $generated@@114) ($generated@@85 $generated@@114 $generated@@113))
 :pattern ( ($generated@@22 $generated@@112 $generated@@114))
)))
 :pattern ( ($generated@@62 $generated@@110 $generated@@112 ($generated@@111 $generated@@113)))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ) (!  (=> (or ($generated@@65 $generated@@117 $generated@@119) (and (< 1 $generated@@64) ($generated@@62 $generated@@57 $generated@@119 ($generated@@58 $generated@@117)))) (and (forall (($generated@@120 T@U) ) (!  (=> ($generated@@85 $generated@@120 $generated@@117) (=> ($generated@@22 ($generated@@44 $generated@@117 $generated@@118 $generated@@119) $generated@@120) (< ($generated@@115 $generated@@120) ($generated@@116 $generated@@119))))
 :pattern ( ($generated@@22 ($generated@@44 $generated@@117 $generated@@118 $generated@@119) $generated@@120))
)) ($generated@@62 $generated@@110 ($generated@@44 $generated@@117 $generated@@118 $generated@@119) ($generated@@111 $generated@@117))))
 :pattern ( ($generated@@44 $generated@@117 $generated@@118 $generated@@119))
))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@T) ) (! (= ($generated@@121 ($generated@@92 $generated@@125 $generated@@122) $generated@@123 $generated@@124) ($generated@@56 $generated@@125 $generated@@122 $generated@@123 $generated@@124))
 :pattern ( ($generated@@121 ($generated@@92 $generated@@125 $generated@@122) $generated@@123 $generated@@124))
)))
(assert (forall (($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@58 $generated@@128)) $generated@@1) (= ($generated@@127 ($generated@@58 $generated@@128)) $generated@@4))
 :pattern ( ($generated@@58 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ) (! (= ($generated@@22 ($generated@@28 $generated@@129 $generated@@130) $generated@@131)  (or ($generated@@22 $generated@@129 $generated@@131) ($generated@@22 $generated@@130 $generated@@131)))
 :pattern ( ($generated@@22 ($generated@@28 $generated@@129 $generated@@130) $generated@@131))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@95 $generated@@132 $generated@@133) (and (= ($generated@@38 ($generated@@28 $generated@@132 $generated@@133) $generated@@132) $generated@@133) (= ($generated@@38 ($generated@@28 $generated@@132 $generated@@133) $generated@@133) $generated@@132)))
 :pattern ( ($generated@@28 $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@62 $generated@@57 $generated@@135 ($generated@@58 $generated@@134)) (or ($generated@@66 $generated@@135) ($generated@@78 $generated@@135)))
 :pattern ( ($generated@@78 $generated@@135) ($generated@@62 $generated@@57 $generated@@135 ($generated@@58 $generated@@134)))
 :pattern ( ($generated@@66 $generated@@135) ($generated@@62 $generated@@57 $generated@@135 ($generated@@58 $generated@@134)))
)))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@T) ) (! (= ($generated@@85 ($generated@@92 $generated@@138 $generated@@136) $generated@@137) ($generated@@62 $generated@@138 $generated@@136 $generated@@137))
 :pattern ( ($generated@@85 ($generated@@92 $generated@@138 $generated@@136) $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ($generated@@140 T@U) ) (!  (=> (and ($generated@@66 $generated@@139) ($generated@@66 $generated@@140)) ($generated@@75 $generated@@139 $generated@@140))
 :pattern ( ($generated@@75 $generated@@139 $generated@@140) ($generated@@66 $generated@@139))
 :pattern ( ($generated@@75 $generated@@139 $generated@@140) ($generated@@66 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ($generated@@143 T@U) ) (! (= ($generated@@56 $generated@@110 $generated@@141 ($generated@@111 $generated@@142) $generated@@143) (forall (($generated@@144 T@U) ) (!  (=> ($generated@@22 $generated@@141 $generated@@144) ($generated@@121 $generated@@144 $generated@@142 $generated@@143))
 :pattern ( ($generated@@22 $generated@@141 $generated@@144))
)))
 :pattern ( ($generated@@56 $generated@@110 $generated@@141 ($generated@@111 $generated@@142) $generated@@143))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (! (= ($generated@@49 ($generated@@84 $generated@@145 $generated@@146)) $generated@@3)
 :pattern ( ($generated@@84 $generated@@145 $generated@@146))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (! (= ($generated@@68 ($generated@@84 $generated@@147 $generated@@148)) $generated@@147)
 :pattern ( ($generated@@84 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (! (= ($generated@@67 ($generated@@84 $generated@@149 $generated@@150)) $generated@@150)
 :pattern ( ($generated@@84 $generated@@149 $generated@@150))
)))
(assert  (=> (<= 1 $generated@@64) (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> (and (or ($generated@@65 $generated@@152 $generated@@154) (and (< 1 $generated@@64) (and ($generated@@62 $generated@@57 $generated@@154 ($generated@@58 $generated@@152)) ($generated@@56 $generated@@57 $generated@@154 ($generated@@58 $generated@@152) $generated@@151)))) ($generated@@59 $generated@@151)) ($generated@@56 $generated@@110 ($generated@@44 $generated@@152 $generated@@153 $generated@@154) ($generated@@111 $generated@@152) $generated@@151))
 :pattern ( ($generated@@56 $generated@@110 ($generated@@44 $generated@@152 $generated@@153 $generated@@154) ($generated@@111 $generated@@152) $generated@@151))
))))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@155 ($generated@@111 $generated@@156)) $generated@@156)
 :pattern ( ($generated@@111 $generated@@156))
)))
(assert (forall (($generated@@157 T@U) ) (! (= ($generated@@126 ($generated@@111 $generated@@157)) $generated)
 :pattern ( ($generated@@111 $generated@@157))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@158 ($generated@@58 $generated@@159)) $generated@@159)
 :pattern ( ($generated@@58 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@91 $generated@@161 ($generated@@92 $generated@@161 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@92 $generated@@161 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (! (< ($generated@@115 $generated@@162) ($generated@@116 ($generated@@84 $generated@@162 $generated@@163)))
 :pattern ( ($generated@@84 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ) (! (< ($generated@@116 $generated@@165) ($generated@@116 ($generated@@84 $generated@@164 $generated@@165)))
 :pattern ( ($generated@@84 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (! (= ($generated@@28 $generated@@166 ($generated@@28 $generated@@166 $generated@@167)) ($generated@@28 $generated@@166 $generated@@167))
 :pattern ( ($generated@@28 $generated@@166 ($generated@@28 $generated@@166 $generated@@167)))
)))
(assert (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@59 $generated@@170) (and ($generated@@78 $generated@@168) ($generated@@56 $generated@@57 $generated@@168 ($generated@@58 $generated@@169) $generated@@170))) ($generated@@121 ($generated@@68 $generated@@168) $generated@@169 $generated@@170))
 :pattern ( ($generated@@121 ($generated@@68 $generated@@168) $generated@@169 $generated@@170))
)))
(assert  (and (and (and (and (and (and (and (and (forall (($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@T) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ) (! (= ($generated@@171 $generated@@181 $generated@@182 $generated@@183 ($generated@@177 $generated@@181 $generated@@182 $generated@@183 $generated@@185 $generated@@186 $generated@@187 $generated@@184) $generated@@186 $generated@@187) $generated@@184)
 :weight 0
)) (and (forall (($generated@@188 T@T) ($generated@@189 T@T) ($generated@@190 T@T) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ($generated@@196 T@U) ) (!  (or (= $generated@@193 $generated@@195) (= ($generated@@171 $generated@@188 $generated@@189 $generated@@190 ($generated@@177 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@193 $generated@@194 $generated@@191) $generated@@195 $generated@@196) ($generated@@171 $generated@@188 $generated@@189 $generated@@190 $generated@@192 $generated@@195 $generated@@196)))
 :weight 0
)) (forall (($generated@@197 T@T) ($generated@@198 T@T) ($generated@@199 T@T) ($generated@@200 T@U) ($generated@@201 T@U) ($generated@@202 T@U) ($generated@@203 T@U) ($generated@@204 T@U) ($generated@@205 T@U) ) (!  (or (= $generated@@203 $generated@@205) (= ($generated@@171 $generated@@197 $generated@@198 $generated@@199 ($generated@@177 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@202 $generated@@203 $generated@@200) $generated@@204 $generated@@205) ($generated@@171 $generated@@197 $generated@@198 $generated@@199 $generated@@201 $generated@@204 $generated@@205)))
 :weight 0
)))) (= ($generated@@5 $generated@@172) 6)) (= ($generated@@5 $generated@@173) 7)) (forall (($generated@@206 T@T) ($generated@@207 T@T) ($generated@@208 T@U) ($generated@@209 T@U) ($generated@@210 T@U) ) (! (= ($generated@@175 $generated@@206 $generated@@207 ($generated@@178 $generated@@206 $generated@@207 $generated@@209 $generated@@210 $generated@@208) $generated@@210) $generated@@208)
 :weight 0
))) (forall (($generated@@211 T@T) ($generated@@212 T@T) ($generated@@213 T@U) ($generated@@214 T@U) ($generated@@215 T@U) ($generated@@216 T@U) ) (!  (or (= $generated@@215 $generated@@216) (= ($generated@@175 $generated@@211 $generated@@212 ($generated@@178 $generated@@211 $generated@@212 $generated@@214 $generated@@215 $generated@@213) $generated@@216) ($generated@@175 $generated@@211 $generated@@212 $generated@@214 $generated@@216)))
 :weight 0
))) (forall (($generated@@217 T@T) ($generated@@218 T@T) ) (= ($generated@@5 ($generated@@176 $generated@@217 $generated@@218)) 8))) (forall (($generated@@219 T@T) ($generated@@220 T@T) ) (! (= ($generated@@179 ($generated@@176 $generated@@219 $generated@@220)) $generated@@219)
 :pattern ( ($generated@@176 $generated@@219 $generated@@220))
))) (forall (($generated@@221 T@T) ($generated@@222 T@T) ) (! (= ($generated@@180 ($generated@@176 $generated@@221 $generated@@222)) $generated@@222)
 :pattern ( ($generated@@176 $generated@@221 $generated@@222))
))))
(assert (forall (($generated@@223 T@U) ($generated@@224 T@U) ($generated@@225 T@U) ($generated@@226 Bool) ($generated@@227 T@U) ($generated@@228 T@U) ) (! (= ($generated@@10 ($generated@@171 $generated@@172 $generated@@173 $generated@@6 ($generated@@174 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))  (=> (and (or (not (= $generated@@227 $generated@@223)) (not true)) ($generated@@10 ($generated@@91 $generated@@6 ($generated@@175 $generated@@173 $generated@@99 ($generated@@175 $generated@@172 ($generated@@176 $generated@@173 $generated@@99) $generated@@224 $generated@@227) $generated@@225)))) $generated@@226))
 :pattern ( ($generated@@171 $generated@@172 $generated@@173 $generated@@6 ($generated@@174 $generated@@223 $generated@@224 $generated@@225 $generated@@226) $generated@@227 $generated@@228))
)))
(assert (forall (($generated@@229 T@U) ) (! (= ($generated@@115 ($generated@@92 $generated@@57 $generated@@229)) ($generated@@116 $generated@@229))
 :pattern ( ($generated@@115 ($generated@@92 $generated@@57 $generated@@229)))
)))
(assert (forall (($generated@@230 T@U) ($generated@@231 T@U) ) (!  (=> ($generated@@85 $generated@@230 ($generated@@111 $generated@@231)) (and (= ($generated@@92 $generated@@110 ($generated@@91 $generated@@110 $generated@@230)) $generated@@230) ($generated@@62 $generated@@110 ($generated@@91 $generated@@110 $generated@@230) ($generated@@111 $generated@@231))))
 :pattern ( ($generated@@85 $generated@@230 ($generated@@111 $generated@@231)))
)))
(assert (forall (($generated@@232 T@U) ($generated@@233 T@U) ) (!  (=> ($generated@@85 $generated@@233 ($generated@@58 $generated@@232)) (and (= ($generated@@92 $generated@@57 ($generated@@91 $generated@@57 $generated@@233)) $generated@@233) ($generated@@62 $generated@@57 ($generated@@91 $generated@@57 $generated@@233) ($generated@@58 $generated@@232))))
 :pattern ( ($generated@@85 $generated@@233 ($generated@@58 $generated@@232)))
)))
(assert (forall (($generated@@234 T@U) ($generated@@235 T@U) ($generated@@236 T@U) ) (!  (=> (and ($generated@@59 $generated@@236) (and ($generated@@78 $generated@@234) ($generated@@56 $generated@@57 $generated@@234 ($generated@@58 $generated@@235) $generated@@236))) ($generated@@56 $generated@@57 ($generated@@67 $generated@@234) ($generated@@58 $generated@@235) $generated@@236))
 :pattern ( ($generated@@56 $generated@@57 ($generated@@67 $generated@@234) ($generated@@58 $generated@@235) $generated@@236))
)))
(assert (= $generated@@50 ($generated@@81 $generated@@57 $generated@@50)))
(assert (forall (($generated@@237 T@U) ($generated@@238 T@U) ) (! (= ($generated@@84 ($generated@@81 $generated@@99 $generated@@237) ($generated@@81 $generated@@57 $generated@@238)) ($generated@@81 $generated@@57 ($generated@@84 $generated@@237 $generated@@238)))
 :pattern ( ($generated@@84 ($generated@@81 $generated@@99 $generated@@237) ($generated@@81 $generated@@57 $generated@@238)))
)))
(assert (forall (($generated@@239 T@U) ($generated@@240 T@T) ) (! (= ($generated@@92 $generated@@240 ($generated@@81 $generated@@240 $generated@@239)) ($generated@@81 $generated@@99 ($generated@@92 $generated@@240 $generated@@239)))
 :pattern ( ($generated@@92 $generated@@240 ($generated@@81 $generated@@240 $generated@@239)))
)))
(assert (forall (($generated@@241 T@U) ($generated@@242 T@U) ($generated@@243 T@U) ($generated@@244 T@U) ) (!  (=> ($generated@@59 $generated@@244) (= ($generated@@56 $generated@@57 ($generated@@84 $generated@@242 $generated@@243) ($generated@@58 $generated@@241) $generated@@244)  (and ($generated@@121 $generated@@242 $generated@@241 $generated@@244) ($generated@@56 $generated@@57 $generated@@243 ($generated@@58 $generated@@241) $generated@@244))))
 :pattern ( ($generated@@56 $generated@@57 ($generated@@84 $generated@@242 $generated@@243) ($generated@@58 $generated@@241) $generated@@244))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@245 () T@U)
(declare-fun $generated@@246 () T@U)
(declare-fun $generated@@247 () T@U)
(declare-fun $generated@@248 () T@U)
(declare-fun $generated@@249 () T@U)
(declare-fun $generated@@250 () T@U)
(declare-fun $generated@@251 () T@U)
(declare-fun $generated@@252 () T@U)
(declare-fun $generated@@253 () T@U)
(declare-fun $generated@@254 () T@U)
(declare-fun $generated@@255 () T@U)
(declare-fun $generated@@256 () T@U)
(declare-fun $generated@@257 () T@U)
(declare-fun $generated@@258 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@259 true))
(let (($generated@@260  (=> (and (=> ($generated@@22 ($generated@@44 $generated@@245 ($generated@@45 $generated@@246) $generated@@247) $generated@@248) (< ($generated@@115 $generated@@248) ($generated@@116 $generated@@247))) (= (ControlFlow 0 11) 8)) $generated@@259)))
(let (($generated@@261  (=> ($generated@@56 $generated@@57 $generated@@247 ($generated@@58 $generated@@245) $generated@@249) (and (=> (= (ControlFlow 0 9) (- 0 10)) (or ($generated@@75 $generated@@247 $generated@@247) (< ($generated@@116 $generated@@247) ($generated@@116 $generated@@247)))) (=> (or ($generated@@75 $generated@@247 $generated@@247) (< ($generated@@116 $generated@@247) ($generated@@116 $generated@@247))) (=> (and (and (or ($generated@@75 $generated@@247 $generated@@247) ($generated@@65 $generated@@245 $generated@@247)) ($generated@@22 ($generated@@44 $generated@@245 ($generated@@45 $generated@@246) $generated@@247) $generated@@248)) (and (< ($generated@@115 $generated@@248) ($generated@@116 $generated@@247)) (= (ControlFlow 0 9) 8))) $generated@@259))))))
(let (($generated@@262  (=> ($generated@@62 $generated@@110 ($generated@@44 $generated@@245 ($generated@@45 $generated@@246) $generated@@247) ($generated@@111 $generated@@245)) (=> (and ($generated@@85 $generated@@248 $generated@@245) ($generated@@121 $generated@@248 $generated@@245 $generated@@249)) (and (=> (= (ControlFlow 0 12) 9) $generated@@261) (=> (= (ControlFlow 0 12) 11) $generated@@260))))))
(let (($generated@@263  (=> (= (ControlFlow 0 3) (- 0 2)) (forall (($generated@@264 T@U) ) (!  (=> ($generated@@85 $generated@@264 $generated@@245) (=> ($generated@@22 ($generated@@44 $generated@@245 ($generated@@45 ($generated@@45 $generated@@246)) $generated@@247) $generated@@264) (< ($generated@@115 $generated@@264) ($generated@@116 $generated@@247))))
 :pattern ( ($generated@@22 ($generated@@44 $generated@@245 ($generated@@45 ($generated@@45 $generated@@246)) $generated@@247) $generated@@264))
)))))
(let (($generated@@265  (=> (and (= $generated@@247 ($generated@@84 $generated@@250 $generated@@251)) ($generated@@85 $generated@@250 $generated@@245)) (=> (and (and (and ($generated@@62 $generated@@57 $generated@@251 ($generated@@58 $generated@@245)) (= $generated@@252 $generated@@251)) (and ($generated@@62 $generated@@57 $generated@@252 ($generated@@58 $generated@@245)) (= $generated@@253 $generated@@252))) (and (and (= $generated@@254 $generated@@250) ($generated@@85 $generated@@254 $generated@@245)) (and (= $generated@@255 $generated@@254) ($generated@@56 $generated@@57 $generated@@253 ($generated@@58 $generated@@245) $generated@@249)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (< ($generated@@116 $generated@@253) ($generated@@116 $generated@@247))) (=> (< ($generated@@116 $generated@@253) ($generated@@116 $generated@@247)) (=> ($generated@@65 $generated@@245 $generated@@253) (=> (and (and (= ($generated@@44 $generated@@245 ($generated@@45 $generated@@246) $generated@@247) ($generated@@28 ($generated@@21 $generated@@42 $generated@@255) ($generated@@44 $generated@@245 ($generated@@45 $generated@@246) $generated@@253))) ($generated@@65 $generated@@245 $generated@@253)) (and ($generated@@62 $generated@@110 ($generated@@44 $generated@@245 ($generated@@45 $generated@@246) $generated@@247) ($generated@@111 $generated@@245)) (= (ControlFlow 0 5) 3))) $generated@@263))))))))
(let (($generated@@266  (=> (and (and (= $generated@@247 $generated@@50) (= ($generated@@44 $generated@@245 ($generated@@45 $generated@@246) $generated@@247) ($generated@@81 $generated@@110 $generated@@42))) (and ($generated@@62 $generated@@110 ($generated@@44 $generated@@245 ($generated@@45 $generated@@246) $generated@@247) ($generated@@111 $generated@@245)) (= (ControlFlow 0 4) 3))) $generated@@263)))
(let (($generated@@267 true))
(let (($generated@@268  (=> (or (not (= $generated@@247 $generated@@50)) (not true)) (and (=> (= (ControlFlow 0 7) 5) $generated@@265) (=> (= (ControlFlow 0 7) 1) $generated@@267)))))
(let (($generated@@269  (=> (= $generated@@256 ($generated@@174 $generated@@257 $generated@@249 $generated@@0 false)) (and (and (=> (= (ControlFlow 0 13) 12) $generated@@262) (=> (= (ControlFlow 0 13) 4) $generated@@266)) (=> (= (ControlFlow 0 13) 7) $generated@@268)))))
(let (($generated@@270  (=> (and (and (and ($generated@@59 $generated@@249) ($generated@@258 $generated@@249)) ($generated@@62 $generated@@57 $generated@@247 ($generated@@58 $generated@@245))) (and (= 1 $generated@@64) (= (ControlFlow 0 14) 13))) $generated@@269)))
$generated@@270))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
