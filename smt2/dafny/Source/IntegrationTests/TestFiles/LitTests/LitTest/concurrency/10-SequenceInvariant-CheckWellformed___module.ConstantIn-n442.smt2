(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 (T@T) Int)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 (Bool) T@U)
(declare-fun $generated@@21 (T@U) Bool)
(declare-fun $generated@@22 (Int) T@U)
(declare-fun $generated@@23 (T@U) Int)
(declare-fun $generated@@24 (Real) T@U)
(declare-fun $generated@@25 (T@U) Real)
(declare-fun $generated@@32 (T@U) Int)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@42 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 (T@U) Bool)
(declare-fun $generated@@58 (T@U T@U) Bool)
(declare-fun $generated@@59 (T@U T@U T@U) Bool)
(declare-fun $generated@@60 (T@U) Bool)
(declare-fun $generated@@61 (T@T T@U) T@U)
(declare-fun $generated@@62 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@63 () T@T)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 (T@T T@T) T@T)
(declare-fun $generated@@66 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@67 (T@T) T@T)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@144 () Int)
(declare-fun $generated@@145 (T@U T@U T@U) Bool)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@173 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@16 $generated@@17) 0) (= ($generated@@16 $generated@@18) 1)) (= ($generated@@16 $generated@@19) 2)) (forall (($generated@@26 Bool) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 Int) ) (! (= ($generated@@23 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 T@U) ) (! (= ($generated@@22 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 Real) ) (! (= ($generated@@25 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 T@U) ) (! (= ($generated@@24 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15)
)
(assert (= ($generated@@32 $generated@@3) 0))
(assert (= ($generated@@33 $generated) $generated@@1))
(assert (= ($generated@@33 $generated@@0) $generated@@2))
(assert (= ($generated@@34 $generated@@3) $generated@@4))
(assert ($generated@@35 $generated@@36))
(assert (= ($generated@@16 $generated@@38) 3))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@41 $generated@@36)  (or (= $generated@@41 $generated@@39) (= ($generated@@40 $generated@@41) $generated@@36)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 $generated@@36))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@42 $generated@@38 $generated@@45 $generated@@43 $generated@@46) ($generated@@42 $generated@@38 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@42 $generated@@38 $generated@@45 $generated@@43 $generated@@46))
 :pattern ( ($generated@@42 $generated@@38 $generated@@45 $generated@@44 $generated@@46))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@42 $generated@@38 $generated@@49 $generated@@47 $generated@@50) ($generated@@42 $generated@@38 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@42 $generated@@38 $generated@@49 $generated@@47 $generated@@50))
 :pattern ( ($generated@@42 $generated@@38 $generated@@49 $generated@@48 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@42 $generated@@38 $generated@@52 $generated@@51 $generated@@53) ($generated@@42 $generated@@38 $generated@@52 $generated@@36 $generated@@53))
 :pattern ( ($generated@@42 $generated@@38 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@42 $generated@@38 $generated@@52 $generated@@36 $generated@@53))
)))
(assert (= ($generated@@32 $generated@@54) 0))
(assert (= ($generated@@55 $generated@@10 $generated@@15) $generated@@54))
(assert  (not ($generated@@56 $generated@@54)))
(assert  (and (and (and (and (and (and (forall (($generated@@69 T@T) ($generated@@70 T@T) ($generated@@71 T@U) ($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@62 $generated@@69 $generated@@70 ($generated@@66 $generated@@69 $generated@@70 $generated@@72 $generated@@73 $generated@@71) $generated@@73) $generated@@71)
 :weight 0
)) (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (or (= $generated@@78 $generated@@79) (= ($generated@@62 $generated@@74 $generated@@75 ($generated@@66 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@79) ($generated@@62 $generated@@74 $generated@@75 $generated@@77 $generated@@79)))
 :weight 0
))) (= ($generated@@16 $generated@@63) 4)) (= ($generated@@16 $generated@@64) 5)) (forall (($generated@@80 T@T) ($generated@@81 T@T) ) (= ($generated@@16 ($generated@@65 $generated@@80 $generated@@81)) 6))) (forall (($generated@@82 T@T) ($generated@@83 T@T) ) (! (= ($generated@@67 ($generated@@65 $generated@@82 $generated@@83)) $generated@@82)
 :pattern ( ($generated@@65 $generated@@82 $generated@@83))
))) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (! (= ($generated@@68 ($generated@@65 $generated@@84 $generated@@85)) $generated@@85)
 :pattern ( ($generated@@65 $generated@@84 $generated@@85))
))))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and ($generated@@60 $generated@@87) ($generated@@60 $generated@@88)) (and (or (not (= $generated@@89 $generated@@39)) (not true)) (and ($generated@@37 $generated@@38 $generated@@89 $generated@@51) ($generated@@42 $generated@@38 $generated@@89 $generated@@51 $generated@@87)))) (and ($generated@@57 $generated@@87) ($generated@@58 $generated@@87 $generated@@88))) (=> (forall (($generated@@90 T@U) ($generated@@91 T@U) )  (=> (and (or (not (= $generated@@90 $generated@@39)) (not true)) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@87 $generated@@90) $generated@@3)))) (= ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@87 $generated@@90) $generated@@91) ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@88 $generated@@90) $generated@@91)))) (= ($generated@@59 $generated@@86 $generated@@87 $generated@@89) ($generated@@59 $generated@@86 $generated@@88 $generated@@89))))
 :pattern ( ($generated@@57 $generated@@87) ($generated@@58 $generated@@87 $generated@@88) ($generated@@59 $generated@@86 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@42 $generated@@38 $generated@@92 $generated@@44 $generated@@93)  (or (= $generated@@92 $generated@@39) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@93 $generated@@92) $generated@@3)))))
 :pattern ( ($generated@@42 $generated@@38 $generated@@92 $generated@@44 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@42 $generated@@38 $generated@@94 $generated@@48 $generated@@95)  (or (= $generated@@94 $generated@@39) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@95 $generated@@94) $generated@@3)))))
 :pattern ( ($generated@@42 $generated@@38 $generated@@94 $generated@@48 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (! (= ($generated@@42 $generated@@38 $generated@@96 $generated@@36 $generated@@97)  (or (= $generated@@96 $generated@@39) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@97 $generated@@96) $generated@@3)))))
 :pattern ( ($generated@@42 $generated@@38 $generated@@96 $generated@@36 $generated@@97))
)))
(assert (forall (($generated@@98 T@U) ($generated@@99 T@U) ) (!  (=> ($generated@@58 $generated@@98 $generated@@99) (forall (($generated@@100 T@U) ) (!  (=> ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@98 $generated@@100) $generated@@3))) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@99 $generated@@100) $generated@@3))))
 :pattern ( ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@99 $generated@@100) $generated@@3))
)))
 :pattern ( ($generated@@58 $generated@@98 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 $generated@@102) $generated@@102)
 :pattern ( ($generated@@101 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@104 $generated@@106 ($generated@@61 $generated@@106 $generated@@105)) $generated@@105)
 :pattern ( ($generated@@61 $generated@@106 $generated@@105))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (! (= ($generated@@21 ($generated@@107 $generated@@38 $generated@@63 $generated@@17 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))  (=> (and (or (not (= $generated@@140 $generated@@135)) (not true)) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@136 $generated@@140) $generated@@137)))) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@138 $generated@@140) $generated@@139)))))
 :pattern ( ($generated@@107 $generated@@38 $generated@@63 $generated@@17 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138 $generated@@139) $generated@@140 $generated@@141))
)))
(assert ($generated@@56 $generated@@3))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ) (!  (=> (and (and ($generated@@60 $generated@@142) (and (or (not (= $generated@@143 $generated@@39)) (not true)) (= ($generated@@40 $generated@@143) $generated@@36))) ($generated@@21 ($generated@@61 $generated@@17 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@142 $generated@@143) $generated@@3)))) ($generated@@42 $generated@@18 ($generated@@61 $generated@@18 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@142 $generated@@143) $generated@@54)) $generated@@0 $generated@@142))
 :pattern ( ($generated@@61 $generated@@18 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@142 $generated@@143) $generated@@54)))
)))
(assert  (=> (<= 0 $generated@@144) (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (or ($generated@@145 $generated@@146 $generated@@147 $generated@@148) (and (< 0 $generated@@144) (and (and (and ($generated@@60 $generated@@146) ($generated@@60 $generated@@147)) ($generated@@58 $generated@@146 $generated@@147)) (and (or (not (= $generated@@148 $generated@@39)) (not true)) (and ($generated@@37 $generated@@38 $generated@@148 $generated@@51) ($generated@@42 $generated@@38 $generated@@148 $generated@@51 $generated@@146)))))) (= ($generated@@59 $generated@@146 $generated@@147 $generated@@148)  (and true (= ($generated@@23 ($generated@@61 $generated@@18 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@146 $generated@@148) $generated@@54))) ($generated@@23 ($generated@@61 $generated@@18 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@147 $generated@@148) $generated@@54)))))))
 :pattern ( ($generated@@59 $generated@@146 $generated@@147 $generated@@148) ($generated@@60 $generated@@147))
))))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@T) ) (!  (=> ($generated@@58 $generated@@149 $generated@@150) (=> ($generated@@42 $generated@@153 $generated@@151 $generated@@152 $generated@@149) ($generated@@42 $generated@@153 $generated@@151 $generated@@152 $generated@@150)))
 :pattern ( ($generated@@58 $generated@@149 $generated@@150) ($generated@@42 $generated@@153 $generated@@151 $generated@@152 $generated@@149))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@154 $generated@@43)  (and ($generated@@37 $generated@@38 $generated@@154 $generated@@44) (or (not (= $generated@@154 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@154 $generated@@43))
 :pattern ( ($generated@@37 $generated@@38 $generated@@154 $generated@@44))
)))
(assert (forall (($generated@@155 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@155 $generated@@47)  (and ($generated@@37 $generated@@38 $generated@@155 $generated@@48) (or (not (= $generated@@155 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@155 $generated@@47))
 :pattern ( ($generated@@37 $generated@@38 $generated@@155 $generated@@48))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@156 $generated@@51)  (and ($generated@@37 $generated@@38 $generated@@156 $generated@@36) (or (not (= $generated@@156 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@156 $generated@@51))
 :pattern ( ($generated@@37 $generated@@38 $generated@@156 $generated@@36))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@42 $generated@@38 $generated@@157 $generated@@48 $generated@@158) ($generated@@42 $generated@@38 $generated@@157 $generated@@44 $generated@@158))
 :pattern ( ($generated@@42 $generated@@38 $generated@@157 $generated@@48 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@42 $generated@@38 $generated@@159 $generated@@36 $generated@@160) ($generated@@42 $generated@@38 $generated@@159 $generated@@48 $generated@@160))
 :pattern ( ($generated@@42 $generated@@38 $generated@@159 $generated@@36 $generated@@160))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or (not (= $generated@@161 $generated@@163)) (not true)) (=> (and ($generated@@58 $generated@@161 $generated@@162) ($generated@@58 $generated@@162 $generated@@163)) ($generated@@58 $generated@@161 $generated@@163)))
 :pattern ( ($generated@@58 $generated@@161 $generated@@162) ($generated@@58 $generated@@162 $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ($generated@@166 T@U) ) (!  (and (= ($generated@@164 ($generated@@55 $generated@@165 $generated@@166)) $generated@@165) (= ($generated@@34 ($generated@@55 $generated@@165 $generated@@166)) $generated@@166))
 :pattern ( ($generated@@55 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@61 $generated@@168 ($generated@@104 $generated@@168 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@104 $generated@@168 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and ($generated@@60 $generated@@169) (and (or (not (= $generated@@170 $generated@@39)) (not true)) (= ($generated@@40 $generated@@170) $generated@@36))) ($generated@@37 $generated@@18 ($generated@@61 $generated@@18 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@169 $generated@@170) $generated@@54)) $generated@@0))
 :pattern ( ($generated@@61 $generated@@18 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@169 $generated@@170) $generated@@54)))
)))
(assert (forall (($generated@@171 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@171 $generated@@48) ($generated@@37 $generated@@38 $generated@@171 $generated@@44))
 :pattern ( ($generated@@37 $generated@@38 $generated@@171 $generated@@48))
)))
(assert (forall (($generated@@172 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@172 $generated@@36) ($generated@@37 $generated@@38 $generated@@172 $generated@@48))
 :pattern ( ($generated@@37 $generated@@38 $generated@@172 $generated@@36))
)))
(assert (= ($generated@@33 $generated@@43) $generated@@5))
(assert (= ($generated@@173 $generated@@43) $generated@@12))
(assert (= ($generated@@33 $generated@@51) $generated@@6))
(assert (= ($generated@@173 $generated@@51) $generated@@13))
(assert (= ($generated@@33 $generated@@44) $generated@@7))
(assert (= ($generated@@173 $generated@@44) $generated@@12))
(assert (= ($generated@@33 $generated@@47) $generated@@8))
(assert (= ($generated@@173 $generated@@47) $generated@@14))
(assert (= ($generated@@33 $generated@@48) $generated@@9))
(assert (= ($generated@@173 $generated@@48) $generated@@14))
(assert (= ($generated@@33 $generated@@36) $generated@@11))
(assert (= ($generated@@173 $generated@@36) $generated@@13))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@175 $generated@@44)  (or (= $generated@@175 $generated@@39) ($generated@@174 ($generated@@40 $generated@@175))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@175 $generated@@44))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@176 $generated@@48)  (or (= $generated@@176 $generated@@39) ($generated@@35 ($generated@@40 $generated@@176))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@176 $generated@@48))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@104 $generated@@178 ($generated@@101 $generated@@178 $generated@@177)) ($generated@@101 $generated@@64 ($generated@@104 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@104 $generated@@178 ($generated@@101 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@42 $generated@@18 $generated@@180 $generated@@0 $generated@@179)
 :pattern ( ($generated@@42 $generated@@18 $generated@@180 $generated@@0 $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ($generated@@182 T@U) ) (! ($generated@@42 $generated@@17 $generated@@182 $generated $generated@@181)
 :pattern ( ($generated@@42 $generated@@17 $generated@@182 $generated $generated@@181))
)))
(assert (forall (($generated@@183 T@U) ) (! ($generated@@37 $generated@@18 $generated@@183 $generated@@0)
 :pattern ( ($generated@@37 $generated@@18 $generated@@183 $generated@@0))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@37 $generated@@17 $generated@@184 $generated)
 :pattern ( ($generated@@37 $generated@@17 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@192  (=> (= ($generated@@59 $generated@@185 $generated@@186 $generated@@187)  (and true (= ($generated@@23 ($generated@@61 $generated@@18 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@185 $generated@@187) $generated@@54))) ($generated@@23 ($generated@@61 $generated@@18 ($generated@@62 $generated@@63 $generated@@64 ($generated@@62 $generated@@38 ($generated@@65 $generated@@63 $generated@@64) $generated@@186 $generated@@187) $generated@@54)))))) (=> (and ($generated@@37 $generated@@17 ($generated@@20 ($generated@@59 $generated@@185 $generated@@186 $generated@@187)) $generated) (= (ControlFlow 0 3) (- 0 2))) $generated@@188))))
(let (($generated@@193  (=> (not ($generated@@21 ($generated@@101 $generated@@17 ($generated@@20 true)))) (=> (and (= $generated@@188 true) (= (ControlFlow 0 6) 3)) $generated@@192))))
(let (($generated@@194  (=> ($generated@@21 ($generated@@101 $generated@@17 ($generated@@20 true))) (and (=> (= (ControlFlow 0 4) (- 0 5)) ($generated@@42 $generated@@38 $generated@@187 $generated@@51 $generated@@185)) (=> ($generated@@42 $generated@@38 $generated@@187 $generated@@51 $generated@@185) (=> (= $generated@@189 ($generated@@21 ($generated@@107 $generated@@38 $generated@@63 $generated@@17 $generated@@190 $generated@@187 $generated@@54))) (=> (and (= $generated@@188 $generated@@189) (= (ControlFlow 0 4) 3)) $generated@@192)))))))
(let (($generated@@195 true))
(let (($generated@@196  (=> (= $generated@@190 ($generated@@108 $generated@@39 $generated@@186 $generated@@3 $generated@@186 $generated@@3)) (and (and (=> (= (ControlFlow 0 7) 1) $generated@@195) (=> (= (ControlFlow 0 7) 4) $generated@@194)) (=> (= (ControlFlow 0 7) 6) $generated@@193)))))
(let (($generated@@197  (=> (and ($generated@@60 $generated@@185) ($generated@@57 $generated@@185)) (=> (and (and (and (or (not (= $generated@@187 $generated@@39)) (not true)) (and ($generated@@37 $generated@@38 $generated@@187 $generated@@51) ($generated@@42 $generated@@38 $generated@@187 $generated@@51 $generated@@191))) (= 0 $generated@@144)) (and (and (= $generated@@191 $generated@@185) (and ($generated@@58 $generated@@191 $generated@@186) ($generated@@60 $generated@@186))) (= (ControlFlow 0 8) 7))) $generated@@196))))
$generated@@197)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
