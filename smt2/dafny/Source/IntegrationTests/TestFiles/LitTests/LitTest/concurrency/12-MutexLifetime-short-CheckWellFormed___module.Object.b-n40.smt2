(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 (T@T) Int)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 (Bool) T@U)
(declare-fun $generated@@15 (T@U) Bool)
(declare-fun $generated@@16 (Int) T@U)
(declare-fun $generated@@17 (T@U) Int)
(declare-fun $generated@@18 (Real) T@U)
(declare-fun $generated@@19 (T@U) Real)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@29 () T@T)
(declare-fun $generated@@30 () T@U)
(declare-fun $generated@@31 () T@U)
(declare-fun $generated@@34 () T@U)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@U T@U) T@U)
(declare-fun $generated@@40 (T@U) Bool)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@44 () T@T)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 (T@T T@T) T@T)
(declare-fun $generated@@47 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@48 (T@T) T@T)
(declare-fun $generated@@49 (T@T) T@T)
(declare-fun $generated@@71 (T@U T@U) Bool)
(declare-fun $generated@@75 (T@U T@U) Bool)
(declare-fun $generated@@76 (T@U T@U) Bool)
(declare-fun $generated@@80 (T@T T@U) T@U)
(declare-fun $generated@@83 (T@T T@U T@U) Bool)
(declare-fun $generated@@84 () T@T)
(declare-fun $generated@@85 (T@U) T@U)
(declare-fun $generated@@86 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U T@U T@U) Bool)
(declare-fun $generated@@104 () Int)
(declare-fun $generated@@105 (T@U) T@U)
(declare-fun $generated@@106 (T@U) Bool)
(declare-fun $generated@@116 (T@U) Bool)
(declare-fun $generated@@117 (T@U T@U) Bool)
(declare-fun $generated@@126 (T@U) T@U)
(declare-fun $generated@@136 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@142 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@143 (T@U T@U T@U Bool) T@U)
(declare-fun $generated@@144 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(declare-fun $generated@@179 (T@U) Bool)
(declare-fun $generated@@180 (T@U) T@U)
(declare-fun $generated@@182 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@10 $generated@@11) 0) (= ($generated@@10 $generated@@12) 1)) (= ($generated@@10 $generated@@13) 2)) (forall (($generated@@20 Bool) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 Int) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Real) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9)
)
(assert (= ($generated@@26 $generated@@0) 0))
(assert (= ($generated@@27 $generated@@0) $generated@@1))
(assert (= ($generated@@10 $generated@@29) 3))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@32 $generated@@30 $generated@@33) ($generated@@28 $generated@@29 $generated@@32 $generated@@31 $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@30 $generated@@33))
 :pattern ( ($generated@@28 $generated@@29 $generated@@32 $generated@@31 $generated@@33))
)))
(assert (forall (($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@36 $generated@@34 $generated@@37) ($generated@@28 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
 :pattern ( ($generated@@28 $generated@@29 $generated@@36 $generated@@34 $generated@@37))
 :pattern ( ($generated@@28 $generated@@29 $generated@@36 $generated@@35 $generated@@37))
)))
(assert (= ($generated@@26 $generated@@38) 0))
(assert (= ($generated@@39 $generated@@6 $generated@@9) $generated@@38))
(assert ($generated@@40 $generated@@38))
(assert  (and (and (and (and (and (and (forall (($generated@@50 T@T) ($generated@@51 T@T) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (! (= ($generated@@43 $generated@@50 $generated@@51 ($generated@@47 $generated@@50 $generated@@51 $generated@@53 $generated@@54 $generated@@52) $generated@@54) $generated@@52)
 :weight 0
)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ($generated@@60 T@U) ) (!  (or (= $generated@@59 $generated@@60) (= ($generated@@43 $generated@@55 $generated@@56 ($generated@@47 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@60) ($generated@@43 $generated@@55 $generated@@56 $generated@@58 $generated@@60)))
 :weight 0
))) (= ($generated@@10 $generated@@44) 4)) (= ($generated@@10 $generated@@45) 5)) (forall (($generated@@61 T@T) ($generated@@62 T@T) ) (= ($generated@@10 ($generated@@46 $generated@@61 $generated@@62)) 6))) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (! (= ($generated@@48 ($generated@@46 $generated@@63 $generated@@64)) $generated@@63)
 :pattern ( ($generated@@46 $generated@@63 $generated@@64))
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@49 ($generated@@46 $generated@@65 $generated@@66)) $generated@@66)
 :pattern ( ($generated@@46 $generated@@65 $generated@@66))
))))
(assert (forall (($generated@@67 T@U) ($generated@@68 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@67 $generated@@31 $generated@@68)  (or (= $generated@@67 $generated@@41) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@68 $generated@@67) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@67 $generated@@31 $generated@@68))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@28 $generated@@29 $generated@@69 $generated@@35 $generated@@70)  (or (= $generated@@69 $generated@@41) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@70 $generated@@69) $generated@@0)))))
 :pattern ( ($generated@@28 $generated@@29 $generated@@69 $generated@@35 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (!  (=> ($generated@@71 $generated@@72 $generated@@73) (forall (($generated@@74 T@U) ) (!  (=> ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@72 $generated@@74) $generated@@0))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@73 $generated@@74) $generated@@0))))
 :pattern ( ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@73 $generated@@74) $generated@@0))
)))
 :pattern ( ($generated@@71 $generated@@72 $generated@@73))
)))
(assert (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@75 $generated@@77 $generated@@78) (forall (($generated@@79 T@U) ) (!  (=> ($generated@@76 $generated@@77 $generated@@79) ($generated@@76 $generated@@78 $generated@@79))
 :pattern ( ($generated@@76 $generated@@77 $generated@@79))
 :pattern ( ($generated@@76 $generated@@78 $generated@@79))
)))
 :pattern ( ($generated@@75 $generated@@77 $generated@@78))
)))
(assert (forall (($generated@@81 T@U) ($generated@@82 T@T) ) (! (= ($generated@@80 $generated@@82 ($generated@@42 $generated@@82 $generated@@81)) $generated@@81)
 :pattern ( ($generated@@42 $generated@@82 $generated@@81))
)))
(assert (= ($generated@@10 $generated@@84) 7))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ) (! (= ($generated@@83 $generated@@84 $generated@@87 ($generated@@85 $generated@@88)) (forall (($generated@@89 T@U) ) (!  (=> ($generated@@76 $generated@@87 $generated@@89) ($generated@@86 $generated@@89 $generated@@88))
 :pattern ( ($generated@@76 $generated@@87 $generated@@89))
)))
 :pattern ( ($generated@@83 $generated@@84 $generated@@87 ($generated@@85 $generated@@88)))
)))
(assert ($generated@@40 $generated@@0))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ($generated@@93 T@U) ($generated@@94 T@T) ) (! (= ($generated@@90 ($generated@@80 $generated@@94 $generated@@91) $generated@@92 $generated@@93) ($generated@@28 $generated@@94 $generated@@91 $generated@@92 $generated@@93))
 :pattern ( ($generated@@90 ($generated@@80 $generated@@94 $generated@@91) $generated@@92 $generated@@93))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ($generated@@97 T@U) ($generated@@98 T@U) ) (!  (=> ($generated@@71 $generated@@95 $generated@@96) (=> ($generated@@90 $generated@@97 $generated@@98 $generated@@95) ($generated@@90 $generated@@97 $generated@@98 $generated@@96)))
 :pattern ( ($generated@@71 $generated@@95 $generated@@96) ($generated@@90 $generated@@97 $generated@@98 $generated@@95))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@T) ) (!  (=> ($generated@@71 $generated@@99 $generated@@100) (=> ($generated@@28 $generated@@103 $generated@@101 $generated@@102 $generated@@99) ($generated@@28 $generated@@103 $generated@@101 $generated@@102 $generated@@100)))
 :pattern ( ($generated@@71 $generated@@99 $generated@@100) ($generated@@28 $generated@@103 $generated@@101 $generated@@102 $generated@@99))
)))
(assert  (=> (< 1 $generated@@104) (forall (($generated@@107 T@U) ($generated@@108 T@U) ) (!  (=> (and (and ($generated@@106 $generated@@107) (and (or (not (= $generated@@108 $generated@@41)) (not true)) ($generated@@83 $generated@@29 $generated@@108 $generated@@35))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@107 $generated@@108) $generated@@0)))) ($generated@@28 $generated@@29 ($generated@@105 $generated@@108) $generated@@30 $generated@@107))
 :pattern ( ($generated@@105 $generated@@108) ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@107 $generated@@108) $generated@@0)))
))))
(assert  (=> (< 1 $generated@@104) (forall (($generated@@109 T@U) ) (!  (=> (and (or (not (= $generated@@109 $generated@@41)) (not true)) ($generated@@83 $generated@@29 $generated@@109 $generated@@35)) ($generated@@83 $generated@@29 ($generated@@105 $generated@@109) $generated@@30))
 :pattern ( ($generated@@105 $generated@@109))
))))
(assert (forall (($generated@@110 T@U) ) (!  (=> ($generated@@86 $generated@@110 $generated@@30) (and (= ($generated@@80 $generated@@29 ($generated@@42 $generated@@29 $generated@@110)) $generated@@110) ($generated@@83 $generated@@29 ($generated@@42 $generated@@29 $generated@@110) $generated@@30)))
 :pattern ( ($generated@@86 $generated@@110 $generated@@30))
)))
(assert (forall (($generated@@111 T@U) ) (!  (=> ($generated@@86 $generated@@111 $generated@@31) (and (= ($generated@@80 $generated@@29 ($generated@@42 $generated@@29 $generated@@111)) $generated@@111) ($generated@@83 $generated@@29 ($generated@@42 $generated@@29 $generated@@111) $generated@@31)))
 :pattern ( ($generated@@86 $generated@@111 $generated@@31))
)))
(assert (forall (($generated@@112 T@U) ) (!  (=> ($generated@@86 $generated@@112 $generated@@34) (and (= ($generated@@80 $generated@@29 ($generated@@42 $generated@@29 $generated@@112)) $generated@@112) ($generated@@83 $generated@@29 ($generated@@42 $generated@@29 $generated@@112) $generated@@34)))
 :pattern ( ($generated@@86 $generated@@112 $generated@@34))
)))
(assert (forall (($generated@@113 T@U) ) (!  (=> ($generated@@86 $generated@@113 $generated@@35) (and (= ($generated@@80 $generated@@29 ($generated@@42 $generated@@29 $generated@@113)) $generated@@113) ($generated@@83 $generated@@29 ($generated@@42 $generated@@29 $generated@@113) $generated@@35)))
 :pattern ( ($generated@@86 $generated@@113 $generated@@35))
)))
(assert (forall (($generated@@114 T@U) ) (! (= ($generated@@83 $generated@@29 $generated@@114 $generated@@30)  (and ($generated@@83 $generated@@29 $generated@@114 $generated@@31) (or (not (= $generated@@114 $generated@@41)) (not true))))
 :pattern ( ($generated@@83 $generated@@29 $generated@@114 $generated@@30))
 :pattern ( ($generated@@83 $generated@@29 $generated@@114 $generated@@31))
)))
(assert (forall (($generated@@115 T@U) ) (! (= ($generated@@83 $generated@@29 $generated@@115 $generated@@34)  (and ($generated@@83 $generated@@29 $generated@@115 $generated@@35) (or (not (= $generated@@115 $generated@@41)) (not true))))
 :pattern ( ($generated@@83 $generated@@29 $generated@@115 $generated@@34))
 :pattern ( ($generated@@83 $generated@@29 $generated@@115 $generated@@35))
)))
(assert (forall (($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (=> (and (and (and ($generated@@106 $generated@@118) ($generated@@106 $generated@@119)) (and (or (not (= $generated@@120 $generated@@41)) (not true)) ($generated@@83 $generated@@29 $generated@@120 $generated@@34))) (and ($generated@@116 $generated@@118) ($generated@@71 $generated@@118 $generated@@119))) (=> (forall (($generated@@121 T@U) ($generated@@122 T@U) )  (=> (and (or (not (= $generated@@121 $generated@@41)) (not true)) (or (= $generated@@121 $generated@@120) (= $generated@@121 ($generated@@105 $generated@@120)))) (= ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@118 $generated@@121) $generated@@122) ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@119 $generated@@121) $generated@@122)))) (= ($generated@@117 $generated@@118 $generated@@120) ($generated@@117 $generated@@119 $generated@@120))))
 :pattern ( ($generated@@116 $generated@@118) ($generated@@71 $generated@@118 $generated@@119) ($generated@@117 $generated@@119 $generated@@120))
)))
(assert (forall (($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (=> (or (not (= $generated@@123 $generated@@125)) (not true)) (=> (and ($generated@@71 $generated@@123 $generated@@124) ($generated@@71 $generated@@124 $generated@@125)) ($generated@@71 $generated@@123 $generated@@125)))
 :pattern ( ($generated@@71 $generated@@123 $generated@@124) ($generated@@71 $generated@@124 $generated@@125))
)))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ) (!  (and (= ($generated@@126 ($generated@@39 $generated@@127 $generated@@128)) $generated@@127) (= ($generated@@27 ($generated@@39 $generated@@127 $generated@@128)) $generated@@128))
 :pattern ( ($generated@@39 $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@T) ) (! (= ($generated@@86 ($generated@@80 $generated@@131 $generated@@129) $generated@@130) ($generated@@83 $generated@@131 $generated@@129 $generated@@130))
 :pattern ( ($generated@@86 ($generated@@80 $generated@@131 $generated@@129) $generated@@130))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (! (= ($generated@@28 $generated@@84 $generated@@132 ($generated@@85 $generated@@133) $generated@@134) (forall (($generated@@135 T@U) ) (!  (=> ($generated@@76 $generated@@132 $generated@@135) ($generated@@90 $generated@@135 $generated@@133 $generated@@134))
 :pattern ( ($generated@@76 $generated@@132 $generated@@135))
)))
 :pattern ( ($generated@@28 $generated@@84 $generated@@132 ($generated@@85 $generated@@133) $generated@@134))
)))
(assert (forall (($generated@@137 T@U) ) (! (= ($generated@@136 ($generated@@85 $generated@@137)) $generated@@137)
 :pattern ( ($generated@@85 $generated@@137))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@85 $generated@@139)) $generated)
 :pattern ( ($generated@@85 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@42 $generated@@141 ($generated@@80 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@80 $generated@@141 $generated@@140))
)))
(assert  (and (forall (($generated@@145 T@T) ($generated@@146 T@T) ($generated@@147 T@T) ($generated@@148 T@U) ($generated@@149 T@U) ($generated@@150 T@U) ($generated@@151 T@U) ) (! (= ($generated@@142 $generated@@145 $generated@@146 $generated@@147 ($generated@@144 $generated@@145 $generated@@146 $generated@@147 $generated@@149 $generated@@150 $generated@@151 $generated@@148) $generated@@150 $generated@@151) $generated@@148)
 :weight 0
)) (and (forall (($generated@@152 T@T) ($generated@@153 T@T) ($generated@@154 T@T) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (or (= $generated@@157 $generated@@159) (= ($generated@@142 $generated@@152 $generated@@153 $generated@@154 ($generated@@144 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@157 $generated@@158 $generated@@155) $generated@@159 $generated@@160) ($generated@@142 $generated@@152 $generated@@153 $generated@@154 $generated@@156 $generated@@159 $generated@@160)))
 :weight 0
)) (forall (($generated@@161 T@T) ($generated@@162 T@T) ($generated@@163 T@T) ($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ) (!  (or (= $generated@@167 $generated@@169) (= ($generated@@142 $generated@@161 $generated@@162 $generated@@163 ($generated@@144 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@166 $generated@@167 $generated@@164) $generated@@168 $generated@@169) ($generated@@142 $generated@@161 $generated@@162 $generated@@163 $generated@@165 $generated@@168 $generated@@169)))
 :weight 0
)))))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ($generated@@172 T@U) ($generated@@173 Bool) ($generated@@174 T@U) ($generated@@175 T@U) ) (! (= ($generated@@15 ($generated@@142 $generated@@29 $generated@@44 $generated@@11 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))  (=> (and (or (not (= $generated@@174 $generated@@170)) (not true)) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@171 $generated@@174) $generated@@172)))) $generated@@173))
 :pattern ( ($generated@@142 $generated@@29 $generated@@44 $generated@@11 ($generated@@143 $generated@@170 $generated@@171 $generated@@172 $generated@@173) $generated@@174 $generated@@175))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@U) ) (!  (=> ($generated@@86 $generated@@176 ($generated@@85 $generated@@177)) (and (= ($generated@@80 $generated@@84 ($generated@@42 $generated@@84 $generated@@176)) $generated@@176) ($generated@@83 $generated@@84 ($generated@@42 $generated@@84 $generated@@176) ($generated@@85 $generated@@177))))
 :pattern ( ($generated@@86 $generated@@176 ($generated@@85 $generated@@177)))
)))
(assert (= ($generated@@138 $generated@@30) $generated@@2))
(assert (= ($generated@@178 $generated@@30) $generated@@7))
(assert (= ($generated@@138 $generated@@31) $generated@@3))
(assert (= ($generated@@178 $generated@@31) $generated@@7))
(assert (= ($generated@@138 $generated@@34) $generated@@4))
(assert (= ($generated@@178 $generated@@34) $generated@@8))
(assert (= ($generated@@138 $generated@@35) $generated@@5))
(assert (= ($generated@@178 $generated@@35) $generated@@8))
(assert (forall (($generated@@181 T@U) ) (! (= ($generated@@83 $generated@@29 $generated@@181 $generated@@31)  (or (= $generated@@181 $generated@@41) ($generated@@179 ($generated@@180 $generated@@181))))
 :pattern ( ($generated@@83 $generated@@29 $generated@@181 $generated@@31))
)))
(assert (forall (($generated@@183 T@U) ) (! (= ($generated@@83 $generated@@29 $generated@@183 $generated@@35)  (or (= $generated@@183 $generated@@41) ($generated@@182 ($generated@@180 $generated@@183))))
 :pattern ( ($generated@@83 $generated@@29 $generated@@183 $generated@@35))
)))
(assert (forall (($generated@@184 T@U) ($generated@@185 T@U) ) (!  (=> (and (and ($generated@@106 $generated@@184) (and (or (not (= $generated@@185 $generated@@41)) (not true)) ($generated@@83 $generated@@29 $generated@@185 $generated@@31))) ($generated@@15 ($generated@@42 $generated@@11 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@184 $generated@@185) $generated@@0)))) ($generated@@28 $generated@@84 ($generated@@42 $generated@@84 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@184 $generated@@185) $generated@@38)) ($generated@@85 $generated@@34) $generated@@184))
 :pattern ( ($generated@@42 $generated@@84 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@184 $generated@@185) $generated@@38)))
)))
(assert (forall (($generated@@186 T@U) ($generated@@187 T@U) ) (!  (=> (and ($generated@@106 $generated@@186) (and (or (not (= $generated@@187 $generated@@41)) (not true)) ($generated@@83 $generated@@29 $generated@@187 $generated@@31))) ($generated@@83 $generated@@84 ($generated@@42 $generated@@84 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@186 $generated@@187) $generated@@38)) ($generated@@85 $generated@@34)))
 :pattern ( ($generated@@42 $generated@@84 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@186 $generated@@187) $generated@@38)))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () T@U)
(declare-fun $generated@@190 () T@U)
(declare-fun $generated@@191 () T@U)
(declare-fun $generated@@192 (T@U T@U) Bool)
(declare-fun $generated@@193 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 8) (let (($generated@@194  (=> (= $generated@@188 ($generated@@143 $generated@@41 $generated@@189 $generated@@0 false)) (and (=> (= (ControlFlow 0 2) (- 0 7)) ($generated@@28 $generated@@29 $generated@@190 $generated@@34 $generated@@191)) (=> ($generated@@28 $generated@@29 $generated@@190 $generated@@34 $generated@@191) (=> (and ($generated@@192 $generated@@191 $generated@@190) ($generated@@117 $generated@@191 $generated@@190)) (and (=> (= (ControlFlow 0 2) (- 0 6)) ($generated@@28 $generated@@29 $generated@@190 $generated@@34 $generated@@191)) (=> ($generated@@28 $generated@@29 $generated@@190 $generated@@34 $generated@@191) (and (=> (= (ControlFlow 0 2) (- 0 5)) (or (not (= ($generated@@105 $generated@@190) $generated@@41)) (not true))) (=> (or (not (= ($generated@@105 $generated@@190) $generated@@41)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 4)) ($generated@@28 $generated@@29 ($generated@@105 $generated@@190) $generated@@30 $generated@@191)) (=> ($generated@@28 $generated@@29 ($generated@@105 $generated@@190) $generated@@30 $generated@@191) (and (=> (= (ControlFlow 0 2) (- 0 3)) (or (not (= ($generated@@105 $generated@@190) $generated@@41)) (not true))) (=> (or (not (= ($generated@@105 $generated@@190) $generated@@41)) (not true)) (=> (and ($generated@@75 ($generated@@42 $generated@@84 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@191 ($generated@@105 $generated@@190)) $generated@@38)) ($generated@@42 $generated@@84 ($generated@@43 $generated@@44 $generated@@45 ($generated@@43 $generated@@29 ($generated@@46 $generated@@44 $generated@@45) $generated@@189 ($generated@@105 $generated@@190)) $generated@@38))) (= (ControlFlow 0 2) (- 0 1))) ($generated@@28 $generated@@29 $generated@@190 $generated@@34 $generated@@191))))))))))))))))
(let (($generated@@195  (=> (and ($generated@@106 $generated@@191) ($generated@@116 $generated@@191)) (=> (and (and (and (or (not (= $generated@@190 $generated@@41)) (not true)) (and ($generated@@83 $generated@@29 $generated@@190 $generated@@34) ($generated@@28 $generated@@29 $generated@@190 $generated@@34 $generated@@193))) (= 7 $generated@@104)) (and (and (= $generated@@193 $generated@@191) (and ($generated@@71 $generated@@193 $generated@@189) ($generated@@106 $generated@@189))) (= (ControlFlow 0 8) 2))) $generated@@194))))
$generated@@195)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
