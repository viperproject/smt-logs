(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 (T@T) Int)
(declare-fun $generated@@7 () T@T)
(declare-fun $generated@@8 () T@T)
(declare-fun $generated@@9 () T@T)
(declare-fun $generated@@10 (Bool) T@U)
(declare-fun $generated@@11 (T@U) Bool)
(declare-fun $generated@@12 (Int) T@U)
(declare-fun $generated@@13 (T@U) Int)
(declare-fun $generated@@14 (Real) T@U)
(declare-fun $generated@@15 (T@U) Real)
(declare-fun $generated@@22 (T@U T@U) Bool)
(declare-fun $generated@@23 () T@U)
(declare-fun $generated@@25 (T@U T@U T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@31 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@39 (T@U) Bool)
(declare-fun $generated@@40 (T@U T@U) Bool)
(declare-fun $generated@@41 (T@U T@U T@U) Bool)
(declare-fun $generated@@42 () T@U)
(declare-fun $generated@@43 (T@T T@U T@U) Bool)
(declare-fun $generated@@44 (T@T T@U) T@U)
(declare-fun $generated@@45 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T) T@T)
(declare-fun $generated@@49 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@50 (T@T) T@T)
(declare-fun $generated@@51 (T@T) T@T)
(declare-fun $generated@@75 (T@U T@U T@U) Bool)
(declare-fun $generated@@89 (T@T T@U) T@U)
(declare-fun $generated@@92 (T@U T@U) Bool)
(declare-fun $generated@@96 (T@T T@U) T@U)
(declare-fun $generated@@99 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@100 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@101 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@158 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(declare-fun $generated@@160 (T@U) T@U)
(declare-fun $generated@@162 (T@U) Bool)
(declare-fun $generated@@166 () Int)
(declare-fun $generated@@167 (T@U T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@6 $generated@@7) 0) (= ($generated@@6 $generated@@8) 1)) (= ($generated@@6 $generated@@9) 2)) (forall (($generated@@16 Bool) ) (! (= ($generated@@11 ($generated@@10 $generated@@16)) $generated@@16)
 :pattern ( ($generated@@10 $generated@@16))
))) (forall (($generated@@17 T@U) ) (! (= ($generated@@10 ($generated@@11 $generated@@17)) $generated@@17)
 :pattern ( ($generated@@11 $generated@@17))
))) (forall (($generated@@18 Int) ) (! (= ($generated@@13 ($generated@@12 $generated@@18)) $generated@@18)
 :pattern ( ($generated@@12 $generated@@18))
))) (forall (($generated@@19 T@U) ) (! (= ($generated@@12 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 Real) ) (! (= ($generated@@15 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 T@U) ) (! (= ($generated@@14 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5)
)
(assert (forall (($generated@@24 T@U) ) (!  (not ($generated@@22 $generated@@23 $generated@@24))
 :pattern ( ($generated@@22 $generated@@23 $generated@@24))
)))
(assert (forall (($generated@@29 T@U) ($generated@@30 T@U) ) (!  (=> (and ($generated@@25 $generated@@29 $generated@@26 $generated@@30) ($generated@@27 $generated@@30)) ($generated@@25 $generated@@29 $generated@@28 $generated@@30))
 :pattern ( ($generated@@25 $generated@@29 $generated@@26 $generated@@30))
)))
(assert (= ($generated@@6 $generated@@32) 3))
(assert (forall (($generated@@34 T@U) ($generated@@35 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@34 $generated@@33 $generated@@35) ($generated@@31 $generated@@32 $generated@@34 $generated@@28 $generated@@35))
 :pattern ( ($generated@@31 $generated@@32 $generated@@34 $generated@@33 $generated@@35))
 :pattern ( ($generated@@31 $generated@@32 $generated@@34 $generated@@28 $generated@@35))
)))
(assert (forall (($generated@@37 T@U) ($generated@@38 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@37 $generated@@36 $generated@@38) ($generated@@31 $generated@@32 $generated@@37 $generated@@26 $generated@@38))
 :pattern ( ($generated@@31 $generated@@32 $generated@@37 $generated@@36 $generated@@38))
 :pattern ( ($generated@@31 $generated@@32 $generated@@37 $generated@@26 $generated@@38))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@52 T@T) ($generated@@53 T@T) ($generated@@54 T@U) ($generated@@55 T@U) ($generated@@56 T@U) ) (! (= ($generated@@45 $generated@@52 $generated@@53 ($generated@@49 $generated@@52 $generated@@53 $generated@@55 $generated@@56 $generated@@54) $generated@@56) $generated@@54)
 :weight 0
)) (forall (($generated@@57 T@T) ($generated@@58 T@T) ($generated@@59 T@U) ($generated@@60 T@U) ($generated@@61 T@U) ($generated@@62 T@U) ) (!  (or (= $generated@@61 $generated@@62) (= ($generated@@45 $generated@@57 $generated@@58 ($generated@@49 $generated@@57 $generated@@58 $generated@@60 $generated@@61 $generated@@59) $generated@@62) ($generated@@45 $generated@@57 $generated@@58 $generated@@60 $generated@@62)))
 :weight 0
))) (= ($generated@@6 $generated@@46) 4)) (= ($generated@@6 $generated@@47) 5)) (forall (($generated@@63 T@T) ($generated@@64 T@T) ) (= ($generated@@6 ($generated@@48 $generated@@63 $generated@@64)) 6))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (! (= ($generated@@50 ($generated@@48 $generated@@65 $generated@@66)) $generated@@65)
 :pattern ( ($generated@@48 $generated@@65 $generated@@66))
))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@51 ($generated@@48 $generated@@67 $generated@@68)) $generated@@68)
 :pattern ( ($generated@@48 $generated@@67 $generated@@68))
))))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (and (and (and ($generated@@27 $generated@@70) ($generated@@27 $generated@@71)) (and (or (not (= $generated@@72 $generated@@42)) (not true)) (and ($generated@@43 $generated@@32 $generated@@72 $generated@@36) ($generated@@31 $generated@@32 $generated@@72 $generated@@36 $generated@@70)))) (and ($generated@@39 $generated@@70) ($generated@@40 $generated@@70 $generated@@71))) (=> (forall (($generated@@73 T@U) ($generated@@74 T@U) )  (=> (and (or (not (= $generated@@73 $generated@@42)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@73) $generated)))) (= ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@70 $generated@@73) $generated@@74) ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@71 $generated@@73) $generated@@74)))) (= ($generated@@41 $generated@@69 $generated@@70 $generated@@72) ($generated@@41 $generated@@69 $generated@@71 $generated@@72))))
 :pattern ( ($generated@@39 $generated@@70) ($generated@@40 $generated@@70 $generated@@71) ($generated@@41 $generated@@69 $generated@@71 $generated@@72))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and (and ($generated@@27 $generated@@77) ($generated@@27 $generated@@78)) (and (or (not (= $generated@@79 $generated@@42)) (not true)) (and ($generated@@43 $generated@@32 $generated@@79 $generated@@36) ($generated@@31 $generated@@32 $generated@@79 $generated@@36 $generated@@77)))) (and ($generated@@39 $generated@@77) ($generated@@40 $generated@@77 $generated@@78))) (=> (forall (($generated@@80 T@U) ($generated@@81 T@U) )  (=> (and (or (not (= $generated@@80 $generated@@42)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@77 $generated@@80) $generated)))) (= ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@77 $generated@@80) $generated@@81) ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@78 $generated@@80) $generated@@81)))) (= ($generated@@75 $generated@@76 $generated@@77 $generated@@79) ($generated@@75 $generated@@76 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@39 $generated@@77) ($generated@@40 $generated@@77 $generated@@78) ($generated@@75 $generated@@76 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@82 $generated@@28 $generated@@83)  (or (= $generated@@82 $generated@@42) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@83 $generated@@82) $generated)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@82 $generated@@28 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@31 $generated@@32 $generated@@84 $generated@@26 $generated@@85)  (or (= $generated@@84 $generated@@42) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@85 $generated@@84) $generated)))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@84 $generated@@26 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (!  (=> ($generated@@40 $generated@@86 $generated@@87) (forall (($generated@@88 T@U) ) (!  (=> ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@86 $generated@@88) $generated))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@87 $generated@@88) $generated))))
 :pattern ( ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@87 $generated@@88) $generated))
)))
 :pattern ( ($generated@@40 $generated@@86 $generated@@87))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@T) ) (! (= ($generated@@89 $generated@@91 $generated@@90) $generated@@90)
 :pattern ( ($generated@@89 $generated@@91 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@92 $generated@@93 $generated@@94) (forall (($generated@@95 T@U) ) (!  (=> ($generated@@22 $generated@@93 $generated@@95) ($generated@@22 $generated@@94 $generated@@95))
 :pattern ( ($generated@@22 $generated@@93 $generated@@95))
 :pattern ( ($generated@@22 $generated@@94 $generated@@95))
)))
 :pattern ( ($generated@@92 $generated@@93 $generated@@94))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@T) ) (! (= ($generated@@96 $generated@@98 ($generated@@44 $generated@@98 $generated@@97)) $generated@@97)
 :pattern ( ($generated@@44 $generated@@98 $generated@@97))
)))
(assert  (and (forall (($generated@@102 T@T) ($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@U) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ) (! (= ($generated@@99 $generated@@102 $generated@@103 $generated@@104 ($generated@@101 $generated@@102 $generated@@103 $generated@@104 $generated@@106 $generated@@107 $generated@@108 $generated@@105) $generated@@107 $generated@@108) $generated@@105)
 :weight 0
)) (and (forall (($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (!  (or (= $generated@@114 $generated@@116) (= ($generated@@99 $generated@@109 $generated@@110 $generated@@111 ($generated@@101 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@114 $generated@@115 $generated@@112) $generated@@116 $generated@@117) ($generated@@99 $generated@@109 $generated@@110 $generated@@111 $generated@@113 $generated@@116 $generated@@117)))
 :weight 0
)) (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@124 $generated@@126) (= ($generated@@99 $generated@@118 $generated@@119 $generated@@120 ($generated@@101 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@99 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)))))
(assert (forall (($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ) (! (= ($generated@@11 ($generated@@99 $generated@@32 $generated@@46 $generated@@7 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))  (=> (and (or (not (= $generated@@132 $generated@@127)) (not true)) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@128 $generated@@132) $generated@@129)))) ($generated@@11 ($generated@@44 $generated@@7 ($generated@@45 $generated@@46 $generated@@47 ($generated@@45 $generated@@32 ($generated@@48 $generated@@46 $generated@@47) $generated@@130 $generated@@132) $generated@@131)))))
 :pattern ( ($generated@@99 $generated@@32 $generated@@46 $generated@@7 ($generated@@100 $generated@@127 $generated@@128 $generated@@129 $generated@@130 $generated@@131) $generated@@132 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@T) ) (! (= ($generated@@25 ($generated@@96 $generated@@137 $generated@@134) $generated@@135 $generated@@136) ($generated@@31 $generated@@137 $generated@@134 $generated@@135 $generated@@136))
 :pattern ( ($generated@@25 ($generated@@96 $generated@@137 $generated@@134) $generated@@135 $generated@@136))
)))
(assert (forall (($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ) (!  (=> ($generated@@40 $generated@@138 $generated@@139) (=> ($generated@@25 $generated@@140 $generated@@141 $generated@@138) ($generated@@25 $generated@@140 $generated@@141 $generated@@139)))
 :pattern ( ($generated@@40 $generated@@138 $generated@@139) ($generated@@25 $generated@@140 $generated@@141 $generated@@138))
)))
(assert (forall (($generated@@142 T@U) ($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@T) ) (!  (=> ($generated@@40 $generated@@142 $generated@@143) (=> ($generated@@31 $generated@@146 $generated@@144 $generated@@145 $generated@@142) ($generated@@31 $generated@@146 $generated@@144 $generated@@145 $generated@@143)))
 :pattern ( ($generated@@40 $generated@@142 $generated@@143) ($generated@@31 $generated@@146 $generated@@144 $generated@@145 $generated@@142))
)))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@147 $generated@@33)  (and ($generated@@43 $generated@@32 $generated@@147 $generated@@28) (or (not (= $generated@@147 $generated@@42)) (not true))))
 :pattern ( ($generated@@43 $generated@@32 $generated@@147 $generated@@33))
 :pattern ( ($generated@@43 $generated@@32 $generated@@147 $generated@@28))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@148 $generated@@36)  (and ($generated@@43 $generated@@32 $generated@@148 $generated@@26) (or (not (= $generated@@148 $generated@@42)) (not true))))
 :pattern ( ($generated@@43 $generated@@32 $generated@@148 $generated@@36))
 :pattern ( ($generated@@43 $generated@@32 $generated@@148 $generated@@26))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@31 $generated@@32 $generated@@149 $generated@@26 $generated@@150) ($generated@@31 $generated@@32 $generated@@149 $generated@@28 $generated@@150))
 :pattern ( ($generated@@31 $generated@@32 $generated@@149 $generated@@26 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> (or (not (= $generated@@151 $generated@@153)) (not true)) (=> (and ($generated@@40 $generated@@151 $generated@@152) ($generated@@40 $generated@@152 $generated@@153)) ($generated@@40 $generated@@151 $generated@@153)))
 :pattern ( ($generated@@40 $generated@@151 $generated@@152) ($generated@@40 $generated@@152 $generated@@153))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@T) ) (! (= ($generated@@44 $generated@@155 ($generated@@96 $generated@@155 $generated@@154)) $generated@@154)
 :pattern ( ($generated@@96 $generated@@155 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@43 $generated@@32 $generated@@156 $generated@@26) ($generated@@43 $generated@@32 $generated@@156 $generated@@28))
 :pattern ( ($generated@@43 $generated@@32 $generated@@156 $generated@@26))
)))
(assert (= ($generated@@157 $generated@@33) $generated@@0))
(assert (= ($generated@@158 $generated@@33) $generated@@4))
(assert (= ($generated@@157 $generated@@36) $generated@@1))
(assert (= ($generated@@158 $generated@@36) $generated@@5))
(assert (= ($generated@@157 $generated@@28) $generated@@2))
(assert (= ($generated@@158 $generated@@28) $generated@@4))
(assert (= ($generated@@157 $generated@@26) $generated@@3))
(assert (= ($generated@@158 $generated@@26) $generated@@5))
(assert (forall (($generated@@161 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@161 $generated@@28)  (or (= $generated@@161 $generated@@42) ($generated@@159 ($generated@@160 $generated@@161))))
 :pattern ( ($generated@@43 $generated@@32 $generated@@161 $generated@@28))
)))
(assert (forall (($generated@@163 T@U) ) (! (= ($generated@@43 $generated@@32 $generated@@163 $generated@@26)  (or (= $generated@@163 $generated@@42) ($generated@@162 ($generated@@160 $generated@@163))))
 :pattern ( ($generated@@43 $generated@@32 $generated@@163 $generated@@26))
)))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@96 $generated@@165 ($generated@@89 $generated@@165 $generated@@164)) ($generated@@89 $generated@@47 ($generated@@96 $generated@@165 $generated@@164)))
 :pattern ( ($generated@@96 $generated@@165 ($generated@@89 $generated@@165 $generated@@164)))
)))
(assert  (=> (<= 2 $generated@@166) (forall (($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (or ($generated@@167 $generated@@168 $generated@@169 $generated@@170) (and (< 2 $generated@@166) (and (and (and ($generated@@27 $generated@@168) ($generated@@27 $generated@@169)) ($generated@@40 $generated@@168 $generated@@169)) (and (or (not (= $generated@@170 $generated@@42)) (not true)) (and ($generated@@43 $generated@@32 $generated@@170 $generated@@36) ($generated@@31 $generated@@32 $generated@@170 $generated@@36 $generated@@168)))))) (=> ($generated@@75 $generated@@168 $generated@@169 $generated@@170) ($generated@@41 $generated@@168 $generated@@169 $generated@@170)))
 :pattern ( ($generated@@75 $generated@@168 $generated@@169 $generated@@170))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@171 () T@U)
(declare-fun $generated@@172 () T@U)
(declare-fun $generated@@173 () T@U)
(declare-fun $generated@@174 () T@T)
(declare-fun $generated@@175 (T@U T@U T@U) Bool)
(declare-fun $generated@@176 () T@U)
(declare-fun $generated@@177 () T@U)
(assert (= ($generated@@6 $generated@@174) 7))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@178 true))
(let (($generated@@179  (=> (and (=> ($generated@@75 $generated@@171 $generated@@172 $generated@@173) ($generated@@41 $generated@@171 $generated@@172 $generated@@173)) (= (ControlFlow 0 7) 2)) $generated@@178)))
(let (($generated@@180  (=> ($generated@@25 ($generated@@96 $generated@@32 $generated@@173) $generated@@26 $generated@@172) (and (=> (= (ControlFlow 0 3) (- 0 6)) ($generated@@31 $generated@@32 $generated@@173 $generated@@36 $generated@@171)) (=> ($generated@@31 $generated@@32 $generated@@173 $generated@@36 $generated@@171) (and (=> (= (ControlFlow 0 3) (- 0 5)) (or (= $generated@@173 $generated@@173) (and ($generated@@92 ($generated@@89 $generated@@174 $generated@@23) ($generated@@89 $generated@@174 $generated@@23)) (not ($generated@@92 ($generated@@89 $generated@@174 $generated@@23) ($generated@@89 $generated@@174 $generated@@23)))))) (=> (or (= $generated@@173 $generated@@173) (and ($generated@@92 ($generated@@89 $generated@@174 $generated@@23) ($generated@@89 $generated@@174 $generated@@23)) (not ($generated@@92 ($generated@@89 $generated@@174 $generated@@23) ($generated@@89 $generated@@174 $generated@@23))))) (=> (or (= $generated@@173 $generated@@173) ($generated@@167 $generated@@171 $generated@@172 $generated@@173)) (=> (and ($generated@@75 $generated@@171 $generated@@172 $generated@@173) ($generated@@25 ($generated@@96 $generated@@32 $generated@@173) $generated@@26 $generated@@172)) (and (=> (= (ControlFlow 0 3) (- 0 4)) ($generated@@31 $generated@@32 $generated@@173 $generated@@36 $generated@@171)) (=> ($generated@@31 $generated@@32 $generated@@173 $generated@@36 $generated@@171) (=> ($generated@@175 $generated@@171 $generated@@172 $generated@@173) (=> (and ($generated@@41 $generated@@171 $generated@@172 $generated@@173) (= (ControlFlow 0 3) 2)) $generated@@178)))))))))))))
(let (($generated@@181 true))
(let (($generated@@182  (=> (= $generated@@176 ($generated@@100 $generated@@42 $generated@@172 $generated $generated@@172 $generated)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@181) (=> (= (ControlFlow 0 8) 3) $generated@@180)) (=> (= (ControlFlow 0 8) 7) $generated@@179)))))
(let (($generated@@183  (=> (and ($generated@@27 $generated@@171) ($generated@@39 $generated@@171)) (=> (and (and (and (or (not (= $generated@@173 $generated@@42)) (not true)) (and ($generated@@43 $generated@@32 $generated@@173 $generated@@36) ($generated@@31 $generated@@32 $generated@@173 $generated@@36 $generated@@177))) (= 2 $generated@@166)) (and (and (= $generated@@177 $generated@@171) (and ($generated@@40 $generated@@177 $generated@@172) ($generated@@27 $generated@@172))) (= (ControlFlow 0 9) 8))) $generated@@182))))
$generated@@183)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
