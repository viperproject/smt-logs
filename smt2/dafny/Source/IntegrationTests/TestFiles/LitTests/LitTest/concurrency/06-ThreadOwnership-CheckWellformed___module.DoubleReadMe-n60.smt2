(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 () T@U)
(declare-fun $generated@@18 () T@U)
(declare-fun $generated@@19 (T@T) Int)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 () T@T)
(declare-fun $generated@@22 () T@T)
(declare-fun $generated@@23 (Bool) T@U)
(declare-fun $generated@@24 (T@U) Bool)
(declare-fun $generated@@25 (Int) T@U)
(declare-fun $generated@@26 (T@U) Int)
(declare-fun $generated@@27 (Real) T@U)
(declare-fun $generated@@28 (T@U) Real)
(declare-fun $generated@@35 (T@U) Int)
(declare-fun $generated@@36 (T@U) T@U)
(declare-fun $generated@@37 (T@U) T@U)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@U) T@U)
(declare-fun $generated@@47 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@63 (T@U T@U) T@U)
(declare-fun $generated@@64 (T@U) Bool)
(declare-fun $generated@@65 () T@U)
(declare-fun $generated@@66 (T@T T@U) T@U)
(declare-fun $generated@@67 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 () T@T)
(declare-fun $generated@@70 (T@T T@T) T@T)
(declare-fun $generated@@71 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@73 (T@T) T@T)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@140 (T@U) Bool)
(declare-fun $generated@@155 (T@U) T@U)
(declare-fun $generated@@158 () Int)
(declare-fun $generated@@159 (T@U T@U T@U) Bool)
(declare-fun $generated@@160 (T@U T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@174 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@19 $generated@@20) 0) (= ($generated@@19 $generated@@21) 1)) (= ($generated@@19 $generated@@22) 2)) (forall (($generated@@29 Bool) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 Int) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))) (forall (($generated@@33 Real) ) (! (= ($generated@@28 ($generated@@27 $generated@@33)) $generated@@33)
 :pattern ( ($generated@@27 $generated@@33))
))) (forall (($generated@@34 T@U) ) (! (= ($generated@@27 ($generated@@28 $generated@@34)) $generated@@34)
 :pattern ( ($generated@@28 $generated@@34))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16 $generated@@17 $generated@@18)
)
(assert (= ($generated@@35 $generated@@1) 0))
(assert (= ($generated@@36 $generated) $generated@@0))
(assert (= ($generated@@37 $generated@@1) $generated@@2))
(assert ($generated@@38 $generated@@39))
(assert ($generated@@38 $generated@@40))
(assert (= ($generated@@19 $generated@@42) 3))
(assert (forall (($generated@@45 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@45 $generated@@39)  (or (= $generated@@45 $generated@@43) (= ($generated@@44 $generated@@45) $generated@@39)))
 :pattern ( ($generated@@41 $generated@@42 $generated@@45 $generated@@39))
)))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@46 $generated@@40)  (or (= $generated@@46 $generated@@43) (= ($generated@@44 $generated@@46) $generated@@40)))
 :pattern ( ($generated@@41 $generated@@42 $generated@@46 $generated@@40))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@50 $generated@@48 $generated@@51) ($generated@@47 $generated@@42 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@47 $generated@@42 $generated@@50 $generated@@48 $generated@@51))
 :pattern ( ($generated@@47 $generated@@42 $generated@@50 $generated@@49 $generated@@51))
)))
(assert (forall (($generated@@54 T@U) ($generated@@55 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@54 $generated@@52 $generated@@55) ($generated@@47 $generated@@42 $generated@@54 $generated@@53 $generated@@55))
 :pattern ( ($generated@@47 $generated@@42 $generated@@54 $generated@@52 $generated@@55))
 :pattern ( ($generated@@47 $generated@@42 $generated@@54 $generated@@53 $generated@@55))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@57 $generated@@56 $generated@@58) ($generated@@47 $generated@@42 $generated@@57 $generated@@39 $generated@@58))
 :pattern ( ($generated@@47 $generated@@42 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@47 $generated@@42 $generated@@57 $generated@@39 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@60 $generated@@59 $generated@@61) ($generated@@47 $generated@@42 $generated@@60 $generated@@40 $generated@@61))
 :pattern ( ($generated@@47 $generated@@42 $generated@@60 $generated@@59 $generated@@61))
 :pattern ( ($generated@@47 $generated@@42 $generated@@60 $generated@@40 $generated@@61))
)))
(assert (= ($generated@@35 $generated@@62) 0))
(assert (= ($generated@@63 $generated@@6 $generated@@17) $generated@@62))
(assert ($generated@@64 $generated@@62))
(assert (= ($generated@@35 $generated@@65) 0))
(assert (= ($generated@@63 $generated@@10 $generated@@18) $generated@@65))
(assert  (not ($generated@@64 $generated@@65)))
(assert  (and (and (and (and (and (and (forall (($generated@@74 T@T) ($generated@@75 T@T) ($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ) (! (= ($generated@@67 $generated@@74 $generated@@75 ($generated@@71 $generated@@74 $generated@@75 $generated@@77 $generated@@78 $generated@@76) $generated@@78) $generated@@76)
 :weight 0
)) (forall (($generated@@79 T@T) ($generated@@80 T@T) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ($generated@@84 T@U) ) (!  (or (= $generated@@83 $generated@@84) (= ($generated@@67 $generated@@79 $generated@@80 ($generated@@71 $generated@@79 $generated@@80 $generated@@82 $generated@@83 $generated@@81) $generated@@84) ($generated@@67 $generated@@79 $generated@@80 $generated@@82 $generated@@84)))
 :weight 0
))) (= ($generated@@19 $generated@@68) 4)) (= ($generated@@19 $generated@@69) 5)) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (= ($generated@@19 ($generated@@70 $generated@@85 $generated@@86)) 6))) (forall (($generated@@87 T@T) ($generated@@88 T@T) ) (! (= ($generated@@72 ($generated@@70 $generated@@87 $generated@@88)) $generated@@87)
 :pattern ( ($generated@@70 $generated@@87 $generated@@88))
))) (forall (($generated@@89 T@T) ($generated@@90 T@T) ) (! (= ($generated@@73 ($generated@@70 $generated@@89 $generated@@90)) $generated@@90)
 :pattern ( ($generated@@70 $generated@@89 $generated@@90))
))))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@91 $generated@@49 $generated@@92)  (or (= $generated@@91 $generated@@43) ($generated@@24 ($generated@@66 $generated@@20 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@92 $generated@@91) $generated@@1)))))
 :pattern ( ($generated@@47 $generated@@42 $generated@@91 $generated@@49 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@93 $generated@@53 $generated@@94)  (or (= $generated@@93 $generated@@43) ($generated@@24 ($generated@@66 $generated@@20 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@94 $generated@@93) $generated@@1)))))
 :pattern ( ($generated@@47 $generated@@42 $generated@@93 $generated@@53 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@95 $generated@@39 $generated@@96)  (or (= $generated@@95 $generated@@43) ($generated@@24 ($generated@@66 $generated@@20 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@96 $generated@@95) $generated@@1)))))
 :pattern ( ($generated@@47 $generated@@42 $generated@@95 $generated@@39 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@47 $generated@@42 $generated@@97 $generated@@40 $generated@@98)  (or (= $generated@@97 $generated@@43) ($generated@@24 ($generated@@66 $generated@@20 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@98 $generated@@97) $generated@@1)))))
 :pattern ( ($generated@@47 $generated@@42 $generated@@97 $generated@@40 $generated@@98))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 ($generated@@66 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@66 $generated@@104 $generated@@103))
)))
(assert  (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@105 $generated@@108 $generated@@109 $generated@@110 ($generated@@107 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@113 $generated@@114) $generated@@111)
 :weight 0
)) (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@105 $generated@@115 $generated@@116 $generated@@117 ($generated@@107 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@105 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@105 $generated@@124 $generated@@125 $generated@@126 ($generated@@107 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@105 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@24 ($generated@@105 $generated@@42 $generated@@68 $generated@@20 ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@133)) (not true)) ($generated@@24 ($generated@@66 $generated@@20 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@134 $generated@@138) $generated@@135)))) ($generated@@24 ($generated@@66 $generated@@20 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@136 $generated@@138) $generated@@137)))))
 :pattern ( ($generated@@105 $generated@@42 $generated@@68 $generated@@20 ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert ($generated@@64 $generated@@1))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@U) ) (!  (=> (and ($generated@@140 $generated@@141) (and (or (not (= $generated@@142 $generated@@43)) (not true)) (= ($generated@@44 $generated@@142) $generated@@40))) ($generated@@41 $generated@@42 ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@141 $generated@@142) $generated@@65)) $generated@@56))
 :pattern ( ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@141 $generated@@142) $generated@@65)))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@143 $generated@@48)  (and ($generated@@41 $generated@@42 $generated@@143 $generated@@49) (or (not (= $generated@@143 $generated@@43)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@143 $generated@@48))
 :pattern ( ($generated@@41 $generated@@42 $generated@@143 $generated@@49))
)))
(assert (forall (($generated@@144 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@144 $generated@@52)  (and ($generated@@41 $generated@@42 $generated@@144 $generated@@53) (or (not (= $generated@@144 $generated@@43)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@144 $generated@@52))
 :pattern ( ($generated@@41 $generated@@42 $generated@@144 $generated@@53))
)))
(assert (forall (($generated@@145 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@145 $generated@@56)  (and ($generated@@41 $generated@@42 $generated@@145 $generated@@39) (or (not (= $generated@@145 $generated@@43)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@145 $generated@@56))
 :pattern ( ($generated@@41 $generated@@42 $generated@@145 $generated@@39))
)))
(assert (forall (($generated@@146 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@146 $generated@@59)  (and ($generated@@41 $generated@@42 $generated@@146 $generated@@40) (or (not (= $generated@@146 $generated@@43)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@146 $generated@@59))
 :pattern ( ($generated@@41 $generated@@42 $generated@@146 $generated@@40))
)))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (=> (and (and ($generated@@140 $generated@@147) (and (or (not (= $generated@@148 $generated@@43)) (not true)) (= ($generated@@44 $generated@@148) $generated@@40))) ($generated@@24 ($generated@@66 $generated@@20 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@147 $generated@@148) $generated@@1)))) ($generated@@47 $generated@@42 ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@147 $generated@@148) $generated@@65)) $generated@@56 $generated@@147))
 :pattern ( ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@147 $generated@@148) $generated@@65)))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@U) ) (!  (=> ($generated@@47 $generated@@42 $generated@@149 $generated@@53 $generated@@150) ($generated@@47 $generated@@42 $generated@@149 $generated@@49 $generated@@150))
 :pattern ( ($generated@@47 $generated@@42 $generated@@149 $generated@@53 $generated@@150))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@47 $generated@@42 $generated@@151 $generated@@39 $generated@@152) ($generated@@47 $generated@@42 $generated@@151 $generated@@53 $generated@@152))
 :pattern ( ($generated@@47 $generated@@42 $generated@@151 $generated@@39 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@47 $generated@@42 $generated@@153 $generated@@40 $generated@@154) ($generated@@47 $generated@@42 $generated@@153 $generated@@53 $generated@@154))
 :pattern ( ($generated@@47 $generated@@42 $generated@@153 $generated@@40 $generated@@154))
)))
(assert (forall (($generated@@156 T@U) ($generated@@157 T@U) ) (!  (and (= ($generated@@155 ($generated@@63 $generated@@156 $generated@@157)) $generated@@156) (= ($generated@@37 ($generated@@63 $generated@@156 $generated@@157)) $generated@@157))
 :pattern ( ($generated@@63 $generated@@156 $generated@@157))
)))
(assert  (=> (<= 1 $generated@@158) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or ($generated@@160 $generated@@161 $generated@@162 $generated@@163) (and (< 1 $generated@@158) (and (and ($generated@@140 $generated@@161) (and (or (not (= $generated@@162 $generated@@43)) (not true)) (and ($generated@@41 $generated@@42 $generated@@162 $generated@@59) ($generated@@47 $generated@@42 $generated@@162 $generated@@59 $generated@@161)))) ($generated@@41 $generated@@42 $generated@@163 $generated@@48)))) (= ($generated@@159 $generated@@161 $generated@@162 $generated@@163)  (and true (= ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@161 ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@161 $generated@@162) $generated@@65))) $generated@@62)) $generated@@163))))
 :pattern ( ($generated@@159 $generated@@161 $generated@@162 $generated@@163) ($generated@@140 $generated@@161))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@T) ) (! (= ($generated@@66 $generated@@165 ($generated@@102 $generated@@165 $generated@@164)) $generated@@164)
 :pattern ( ($generated@@102 $generated@@165 $generated@@164))
)))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ) (!  (=> (and (and ($generated@@140 $generated@@166) (and (or (not (= $generated@@167 $generated@@43)) (not true)) ($generated@@41 $generated@@42 $generated@@167 $generated@@53))) ($generated@@24 ($generated@@66 $generated@@20 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@166 $generated@@167) $generated@@1)))) ($generated@@47 $generated@@42 ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@166 $generated@@167) $generated@@62)) $generated@@48 $generated@@166))
 :pattern ( ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@166 $generated@@167) $generated@@62)))
)))
(assert (forall (($generated@@168 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@168 $generated@@53) ($generated@@41 $generated@@42 $generated@@168 $generated@@49))
 :pattern ( ($generated@@41 $generated@@42 $generated@@168 $generated@@53))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@169 $generated@@39) ($generated@@41 $generated@@42 $generated@@169 $generated@@53))
 :pattern ( ($generated@@41 $generated@@42 $generated@@169 $generated@@39))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@170 $generated@@40) ($generated@@41 $generated@@42 $generated@@170 $generated@@53))
 :pattern ( ($generated@@41 $generated@@42 $generated@@170 $generated@@40))
)))
(assert (= ($generated@@36 $generated@@52) $generated@@3))
(assert (= ($generated@@171 $generated@@52) $generated@@13))
(assert (= ($generated@@36 $generated@@48) $generated@@4))
(assert (= ($generated@@171 $generated@@48) $generated@@14))
(assert (= ($generated@@36 $generated@@49) $generated@@5))
(assert (= ($generated@@171 $generated@@49) $generated@@14))
(assert (= ($generated@@36 $generated@@53) $generated@@7))
(assert (= ($generated@@171 $generated@@53) $generated@@13))
(assert (= ($generated@@36 $generated@@39) $generated@@8))
(assert (= ($generated@@171 $generated@@39) $generated@@15))
(assert (= ($generated@@36 $generated@@56) $generated@@9))
(assert (= ($generated@@171 $generated@@56) $generated@@15))
(assert (= ($generated@@36 $generated@@40) $generated@@11))
(assert (= ($generated@@171 $generated@@40) $generated@@16))
(assert (= ($generated@@36 $generated@@59) $generated@@12))
(assert (= ($generated@@171 $generated@@59) $generated@@16))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@140 $generated@@172) (and (or (not (= $generated@@173 $generated@@43)) (not true)) ($generated@@41 $generated@@42 $generated@@173 $generated@@53))) ($generated@@41 $generated@@42 ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@172 $generated@@173) $generated@@62)) $generated@@48))
 :pattern ( ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@172 $generated@@173) $generated@@62)))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@175 $generated@@49)  (or (= $generated@@175 $generated@@43) ($generated@@174 ($generated@@44 $generated@@175))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@175 $generated@@49))
)))
(assert (forall (($generated@@176 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@176 $generated@@53)  (or (= $generated@@176 $generated@@43) ($generated@@38 ($generated@@44 $generated@@176))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@176 $generated@@53))
)))
(assert (forall (($generated@@177 T@U) ($generated@@178 T@T) ) (! (= ($generated@@102 $generated@@178 ($generated@@99 $generated@@178 $generated@@177)) ($generated@@99 $generated@@69 ($generated@@102 $generated@@178 $generated@@177)))
 :pattern ( ($generated@@102 $generated@@178 ($generated@@99 $generated@@178 $generated@@177)))
)))
(assert (forall (($generated@@179 T@U) ($generated@@180 T@U) ) (! ($generated@@47 $generated@@20 $generated@@180 $generated $generated@@179)
 :pattern ( ($generated@@47 $generated@@20 $generated@@180 $generated $generated@@179))
)))
(assert (forall (($generated@@181 T@U) ) (! ($generated@@41 $generated@@20 $generated@@181 $generated)
 :pattern ( ($generated@@41 $generated@@20 $generated@@181 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () Bool)
(declare-fun $generated@@186 () Bool)
(declare-fun $generated@@187 () Bool)
(declare-fun $generated@@188 () T@U)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 9) (let (($generated@@191  (=> (and (= ($generated@@159 $generated@@182 $generated@@183 $generated@@184)  (and true (= ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@182 ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@182 $generated@@183) $generated@@65))) $generated@@62)) $generated@@184))) ($generated@@41 $generated@@20 ($generated@@23 ($generated@@159 $generated@@182 $generated@@183 $generated@@184)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@185) (=> $generated@@185 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@186))))))
(let (($generated@@192  (=> (and (and (not ($generated@@24 ($generated@@99 $generated@@20 ($generated@@23 true)))) (= $generated@@185 true)) (and (= $generated@@186 true) (= (ControlFlow 0 7) 3))) $generated@@191)))
(let (($generated@@193  (=> (and ($generated@@24 ($generated@@99 $generated@@20 ($generated@@23 true))) (= $generated@@187 ($generated@@24 ($generated@@105 $generated@@42 $generated@@68 $generated@@20 $generated@@188 $generated@@183 $generated@@65)))) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@182 $generated@@183) $generated@@65)) $generated@@43)) (not true))) (=> (or (not (= ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@182 $generated@@183) $generated@@65)) $generated@@43)) (not true)) (=> (and (and (= $generated@@189 ($generated@@24 ($generated@@105 $generated@@42 $generated@@68 $generated@@20 $generated@@188 ($generated@@66 $generated@@42 ($generated@@67 $generated@@68 $generated@@69 ($generated@@67 $generated@@42 ($generated@@70 $generated@@68 $generated@@69) $generated@@182 $generated@@183) $generated@@65)) $generated@@62))) (= $generated@@185 $generated@@187)) (and (= $generated@@186 $generated@@189) (= (ControlFlow 0 5) 3))) $generated@@191))))))
(let (($generated@@194 true))
(let (($generated@@195  (=> (= $generated@@188 ($generated@@106 $generated@@43 $generated@@182 $generated@@1 $generated@@182 $generated@@1)) (and (and (=> (= (ControlFlow 0 8) 1) $generated@@194) (=> (= (ControlFlow 0 8) 5) $generated@@193)) (=> (= (ControlFlow 0 8) 7) $generated@@192)))))
(let (($generated@@196  (=> (and ($generated@@140 $generated@@182) ($generated@@190 $generated@@182)) (=> (and (and (and (or (not (= $generated@@183 $generated@@43)) (not true)) (and ($generated@@41 $generated@@42 $generated@@183 $generated@@59) ($generated@@47 $generated@@42 $generated@@183 $generated@@59 $generated@@182))) ($generated@@41 $generated@@42 $generated@@184 $generated@@48)) (and (= 1 $generated@@158) (= (ControlFlow 0 9) 8))) $generated@@195))))
$generated@@196)))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
