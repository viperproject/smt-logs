(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 (T@T) Int)
(declare-fun $generated@@16 () T@T)
(declare-fun $generated@@17 () T@T)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 (Bool) T@U)
(declare-fun $generated@@20 (T@U) Bool)
(declare-fun $generated@@21 (Int) T@U)
(declare-fun $generated@@22 (T@U) Int)
(declare-fun $generated@@23 (Real) T@U)
(declare-fun $generated@@24 (T@U) Real)
(declare-fun $generated@@31 (T@U) Int)
(declare-fun $generated@@32 (T@U) T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@34 (T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@T T@U T@U) Bool)
(declare-fun $generated@@38 () T@T)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@43 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 () T@U)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@51 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) T@U)
(declare-fun $generated@@56 (T@U) Bool)
(declare-fun $generated@@57 () T@U)
(declare-fun $generated@@58 (T@U) Bool)
(declare-fun $generated@@59 (T@U T@U) Bool)
(declare-fun $generated@@60 (T@U T@U T@U) Bool)
(declare-fun $generated@@61 (T@U) Bool)
(declare-fun $generated@@62 (T@T T@U) T@U)
(declare-fun $generated@@63 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@64 () T@T)
(declare-fun $generated@@65 () T@T)
(declare-fun $generated@@66 (T@T T@T) T@T)
(declare-fun $generated@@67 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@68 (T@T) T@T)
(declare-fun $generated@@69 (T@T) T@T)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@161 () Int)
(declare-fun $generated@@162 (T@U T@U T@U) Bool)
(declare-fun $generated@@169 (T@U) T@U)
(declare-fun $generated@@178 (T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@15 $generated@@16) 0) (= ($generated@@15 $generated@@17) 1)) (= ($generated@@15 $generated@@18) 2)) (forall (($generated@@25 Bool) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 Int) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Real) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14)
)
(assert (= ($generated@@31 $generated@@1) 0))
(assert (= ($generated@@32 $generated) $generated@@0))
(assert (= ($generated@@33 $generated@@1) $generated@@2))
(assert ($generated@@34 $generated@@35))
(assert ($generated@@34 $generated@@36))
(assert (= ($generated@@15 $generated@@38) 3))
(assert (forall (($generated@@41 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@41 $generated@@35)  (or (= $generated@@41 $generated@@39) (= ($generated@@40 $generated@@41) $generated@@35)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@41 $generated@@35))
)))
(assert (forall (($generated@@42 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@42 $generated@@36)  (or (= $generated@@42 $generated@@39) (= ($generated@@40 $generated@@42) $generated@@36)))
 :pattern ( ($generated@@37 $generated@@38 $generated@@42 $generated@@36))
)))
(assert (forall (($generated@@46 T@U) ($generated@@47 T@U) ) (! (= ($generated@@43 $generated@@38 $generated@@46 $generated@@44 $generated@@47) ($generated@@43 $generated@@38 $generated@@46 $generated@@45 $generated@@47))
 :pattern ( ($generated@@43 $generated@@38 $generated@@46 $generated@@44 $generated@@47))
 :pattern ( ($generated@@43 $generated@@38 $generated@@46 $generated@@45 $generated@@47))
)))
(assert (forall (($generated@@49 T@U) ($generated@@50 T@U) ) (! (= ($generated@@43 $generated@@38 $generated@@49 $generated@@48 $generated@@50) ($generated@@43 $generated@@38 $generated@@49 $generated@@35 $generated@@50))
 :pattern ( ($generated@@43 $generated@@38 $generated@@49 $generated@@48 $generated@@50))
 :pattern ( ($generated@@43 $generated@@38 $generated@@49 $generated@@35 $generated@@50))
)))
(assert (forall (($generated@@52 T@U) ($generated@@53 T@U) ) (! (= ($generated@@43 $generated@@38 $generated@@52 $generated@@51 $generated@@53) ($generated@@43 $generated@@38 $generated@@52 $generated@@36 $generated@@53))
 :pattern ( ($generated@@43 $generated@@38 $generated@@52 $generated@@51 $generated@@53))
 :pattern ( ($generated@@43 $generated@@38 $generated@@52 $generated@@36 $generated@@53))
)))
(assert (= ($generated@@31 $generated@@54) 0))
(assert (= ($generated@@55 $generated@@5 $generated@@13) $generated@@54))
(assert ($generated@@56 $generated@@54))
(assert (= ($generated@@31 $generated@@57) 0))
(assert (= ($generated@@55 $generated@@5 $generated@@14) $generated@@57))
(assert ($generated@@56 $generated@@57))
(assert  (and (and (and (and (and (and (forall (($generated@@70 T@T) ($generated@@71 T@T) ($generated@@72 T@U) ($generated@@73 T@U) ($generated@@74 T@U) ) (! (= ($generated@@63 $generated@@70 $generated@@71 ($generated@@67 $generated@@70 $generated@@71 $generated@@73 $generated@@74 $generated@@72) $generated@@74) $generated@@72)
 :weight 0
)) (forall (($generated@@75 T@T) ($generated@@76 T@T) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ($generated@@80 T@U) ) (!  (or (= $generated@@79 $generated@@80) (= ($generated@@63 $generated@@75 $generated@@76 ($generated@@67 $generated@@75 $generated@@76 $generated@@78 $generated@@79 $generated@@77) $generated@@80) ($generated@@63 $generated@@75 $generated@@76 $generated@@78 $generated@@80)))
 :weight 0
))) (= ($generated@@15 $generated@@64) 4)) (= ($generated@@15 $generated@@65) 5)) (forall (($generated@@81 T@T) ($generated@@82 T@T) ) (= ($generated@@15 ($generated@@66 $generated@@81 $generated@@82)) 6))) (forall (($generated@@83 T@T) ($generated@@84 T@T) ) (! (= ($generated@@68 ($generated@@66 $generated@@83 $generated@@84)) $generated@@83)
 :pattern ( ($generated@@66 $generated@@83 $generated@@84))
))) (forall (($generated@@85 T@T) ($generated@@86 T@T) ) (! (= ($generated@@69 ($generated@@66 $generated@@85 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@66 $generated@@85 $generated@@86))
))))
(assert (forall (($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ($generated@@90 T@U) ) (!  (=> (and (and (and ($generated@@61 $generated@@88) ($generated@@61 $generated@@89)) (and (or (not (= $generated@@90 $generated@@39)) (not true)) (and ($generated@@37 $generated@@38 $generated@@90 $generated@@48) ($generated@@43 $generated@@38 $generated@@90 $generated@@48 $generated@@88)))) (and ($generated@@58 $generated@@88) ($generated@@59 $generated@@88 $generated@@89))) (=> (forall (($generated@@91 T@U) ($generated@@92 T@U) )  (=> (and (or (not (= $generated@@91 $generated@@39)) (not true)) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@88 $generated@@91) $generated@@1)))) (= ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@88 $generated@@91) $generated@@92) ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@89 $generated@@91) $generated@@92)))) (= ($generated@@60 $generated@@87 $generated@@88 $generated@@90) ($generated@@60 $generated@@87 $generated@@89 $generated@@90))))
 :pattern ( ($generated@@58 $generated@@88) ($generated@@59 $generated@@88 $generated@@89) ($generated@@60 $generated@@87 $generated@@89 $generated@@90))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@43 $generated@@38 $generated@@93 $generated@@45 $generated@@94)  (or (= $generated@@93 $generated@@39) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@94 $generated@@93) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@38 $generated@@93 $generated@@45 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@43 $generated@@38 $generated@@95 $generated@@35 $generated@@96)  (or (= $generated@@95 $generated@@39) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@96 $generated@@95) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@38 $generated@@95 $generated@@35 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@43 $generated@@38 $generated@@97 $generated@@36 $generated@@98)  (or (= $generated@@97 $generated@@39) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@98 $generated@@97) $generated@@1)))))
 :pattern ( ($generated@@43 $generated@@38 $generated@@97 $generated@@36 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (!  (=> ($generated@@59 $generated@@99 $generated@@100) (forall (($generated@@101 T@U) ) (!  (=> ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@99 $generated@@101) $generated@@1))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@100 $generated@@101) $generated@@1))))
 :pattern ( ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@100 $generated@@101) $generated@@1))
)))
 :pattern ( ($generated@@59 $generated@@99 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 $generated@@103) $generated@@103)
 :pattern ( ($generated@@102 $generated@@104 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@62 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@62 $generated@@107 $generated@@106))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@20 ($generated@@108 $generated@@38 $generated@@64 $generated@@16 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@136)) (not true)) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@137 $generated@@141) $generated@@138)))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@139 $generated@@141) $generated@@140)))))
 :pattern ( ($generated@@108 $generated@@38 $generated@@64 $generated@@16 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert ($generated@@56 $generated@@1))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and ($generated@@61 $generated@@143) (and (or (not (= $generated@@144 $generated@@39)) (not true)) (= ($generated@@40 $generated@@144) $generated@@35))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@143 $generated@@144) $generated@@1)))) ($generated@@43 $generated@@16 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@143 $generated@@144) $generated@@54)) $generated $generated@@143))
 :pattern ( ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@143 $generated@@144) $generated@@54)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@T) ) (!  (=> ($generated@@59 $generated@@145 $generated@@146) (=> ($generated@@43 $generated@@149 $generated@@147 $generated@@148 $generated@@145) ($generated@@43 $generated@@149 $generated@@147 $generated@@148 $generated@@146)))
 :pattern ( ($generated@@59 $generated@@145 $generated@@146) ($generated@@43 $generated@@149 $generated@@147 $generated@@148 $generated@@145))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@61 $generated@@150) (and (or (not (= $generated@@151 $generated@@39)) (not true)) (= ($generated@@40 $generated@@151) $generated@@35))) ($generated@@37 $generated@@38 ($generated@@62 $generated@@38 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@150 $generated@@151) $generated@@57)) $generated@@51))
 :pattern ( ($generated@@62 $generated@@38 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@150 $generated@@151) $generated@@57)))
)))
(assert (forall (($generated@@152 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@152 $generated@@44)  (and ($generated@@37 $generated@@38 $generated@@152 $generated@@45) (or (not (= $generated@@152 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@152 $generated@@44))
 :pattern ( ($generated@@37 $generated@@38 $generated@@152 $generated@@45))
)))
(assert (forall (($generated@@153 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@153 $generated@@48)  (and ($generated@@37 $generated@@38 $generated@@153 $generated@@35) (or (not (= $generated@@153 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@153 $generated@@48))
 :pattern ( ($generated@@37 $generated@@38 $generated@@153 $generated@@35))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@154 $generated@@51)  (and ($generated@@37 $generated@@38 $generated@@154 $generated@@36) (or (not (= $generated@@154 $generated@@39)) (not true))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@154 $generated@@51))
 :pattern ( ($generated@@37 $generated@@38 $generated@@154 $generated@@36))
)))
(assert (forall (($generated@@155 T@U) ($generated@@156 T@U) ) (!  (=> (and (and ($generated@@61 $generated@@155) (and (or (not (= $generated@@156 $generated@@39)) (not true)) (= ($generated@@40 $generated@@156) $generated@@35))) ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@155 $generated@@156) $generated@@1)))) ($generated@@43 $generated@@38 ($generated@@62 $generated@@38 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@155 $generated@@156) $generated@@57)) $generated@@51 $generated@@155))
 :pattern ( ($generated@@62 $generated@@38 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@155 $generated@@156) $generated@@57)))
)))
(assert (forall (($generated@@157 T@U) ($generated@@158 T@U) ) (!  (=> ($generated@@43 $generated@@38 $generated@@157 $generated@@35 $generated@@158) ($generated@@43 $generated@@38 $generated@@157 $generated@@45 $generated@@158))
 :pattern ( ($generated@@43 $generated@@38 $generated@@157 $generated@@35 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> ($generated@@43 $generated@@38 $generated@@159 $generated@@36 $generated@@160) ($generated@@43 $generated@@38 $generated@@159 $generated@@45 $generated@@160))
 :pattern ( ($generated@@43 $generated@@38 $generated@@159 $generated@@36 $generated@@160))
)))
(assert  (=> (<= 0 $generated@@161) (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or ($generated@@162 $generated@@163 $generated@@164 $generated@@165) (and (< 0 $generated@@161) (and (and (and ($generated@@61 $generated@@163) ($generated@@61 $generated@@164)) ($generated@@59 $generated@@163 $generated@@164)) (and (or (not (= $generated@@165 $generated@@39)) (not true)) (and ($generated@@37 $generated@@38 $generated@@165 $generated@@48) ($generated@@43 $generated@@38 $generated@@165 $generated@@48 $generated@@163)))))) (= ($generated@@60 $generated@@163 $generated@@164 $generated@@165)  (and true (=> ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@163 $generated@@165) $generated@@54))) (and ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@164 $generated@@165) $generated@@54))) (= ($generated@@62 $generated@@38 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@163 $generated@@165) $generated@@57)) ($generated@@62 $generated@@38 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@164 $generated@@165) $generated@@57))))))))
 :pattern ( ($generated@@60 $generated@@163 $generated@@164 $generated@@165) ($generated@@61 $generated@@164))
))))
(assert (forall (($generated@@166 T@U) ($generated@@167 T@U) ($generated@@168 T@U) ) (!  (=> (or (not (= $generated@@166 $generated@@168)) (not true)) (=> (and ($generated@@59 $generated@@166 $generated@@167) ($generated@@59 $generated@@167 $generated@@168)) ($generated@@59 $generated@@166 $generated@@168)))
 :pattern ( ($generated@@59 $generated@@166 $generated@@167) ($generated@@59 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (and (= ($generated@@169 ($generated@@55 $generated@@170 $generated@@171)) $generated@@170) (= ($generated@@33 ($generated@@55 $generated@@170 $generated@@171)) $generated@@171))
 :pattern ( ($generated@@55 $generated@@170 $generated@@171))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@T) ) (! (= ($generated@@62 $generated@@173 ($generated@@105 $generated@@173 $generated@@172)) $generated@@172)
 :pattern ( ($generated@@105 $generated@@173 $generated@@172))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (!  (=> (and ($generated@@61 $generated@@174) (and (or (not (= $generated@@175 $generated@@39)) (not true)) (= ($generated@@40 $generated@@175) $generated@@35))) ($generated@@37 $generated@@16 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@174 $generated@@175) $generated@@54)) $generated))
 :pattern ( ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@174 $generated@@175) $generated@@54)))
)))
(assert (forall (($generated@@176 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@176 $generated@@35) ($generated@@37 $generated@@38 $generated@@176 $generated@@45))
 :pattern ( ($generated@@37 $generated@@38 $generated@@176 $generated@@35))
)))
(assert (forall (($generated@@177 T@U) ) (!  (=> ($generated@@37 $generated@@38 $generated@@177 $generated@@36) ($generated@@37 $generated@@38 $generated@@177 $generated@@45))
 :pattern ( ($generated@@37 $generated@@38 $generated@@177 $generated@@36))
)))
(assert (= ($generated@@32 $generated@@44) $generated@@3))
(assert (= ($generated@@178 $generated@@44) $generated@@10))
(assert (= ($generated@@32 $generated@@45) $generated@@4))
(assert (= ($generated@@178 $generated@@45) $generated@@10))
(assert (= ($generated@@32 $generated@@35) $generated@@6))
(assert (= ($generated@@178 $generated@@35) $generated@@11))
(assert (= ($generated@@32 $generated@@51) $generated@@7))
(assert (= ($generated@@178 $generated@@51) $generated@@12))
(assert (= ($generated@@32 $generated@@48) $generated@@8))
(assert (= ($generated@@178 $generated@@48) $generated@@11))
(assert (= ($generated@@32 $generated@@36) $generated@@9))
(assert (= ($generated@@178 $generated@@36) $generated@@12))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@37 $generated@@38 $generated@@179 $generated@@45)  (or (= $generated@@179 $generated@@39) ($generated@@34 ($generated@@40 $generated@@179))))
 :pattern ( ($generated@@37 $generated@@38 $generated@@179 $generated@@45))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@105 $generated@@181 ($generated@@102 $generated@@181 $generated@@180)) ($generated@@102 $generated@@65 ($generated@@105 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@105 $generated@@181 ($generated@@102 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@43 $generated@@16 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@43 $generated@@16 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@37 $generated@@16 $generated@@184 $generated)
 :pattern ( ($generated@@37 $generated@@16 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@194  (=> (and (= ($generated@@60 $generated@@185 $generated@@186 $generated@@187)  (and true (=> ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@185 $generated@@187) $generated@@54))) (and ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@186 $generated@@187) $generated@@54))) (= ($generated@@62 $generated@@38 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@185 $generated@@187) $generated@@57)) ($generated@@62 $generated@@38 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@186 $generated@@187) $generated@@57))))))) ($generated@@37 $generated@@16 ($generated@@19 ($generated@@60 $generated@@185 $generated@@186 $generated@@187)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@188) (=> $generated@@188 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@189))))))
(let (($generated@@195  (=> (and (and (not ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@186 $generated@@187) $generated@@54)))) (= $generated@@188 $generated@@190)) (and (= $generated@@189 true) (= (ControlFlow 0 9) 3))) $generated@@194)))
(let (($generated@@196  (=> ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@186 $generated@@187) $generated@@54))) (and (=> (= (ControlFlow 0 7) (- 0 8)) ($generated@@43 $generated@@38 $generated@@187 $generated@@48 $generated@@185)) (=> ($generated@@43 $generated@@38 $generated@@187 $generated@@48 $generated@@185) (=> (and (and (= $generated@@191 ($generated@@20 ($generated@@108 $generated@@38 $generated@@64 $generated@@16 $generated@@192 $generated@@187 $generated@@57))) (= $generated@@188 $generated@@190)) (and (= $generated@@189 $generated@@191) (= (ControlFlow 0 7) 3))) $generated@@194))))))
(let (($generated@@197  (=> (and ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@185 $generated@@187) $generated@@54))) (= $generated@@190 ($generated@@20 ($generated@@108 $generated@@38 $generated@@64 $generated@@16 $generated@@192 $generated@@187 $generated@@54)))) (and (=> (= (ControlFlow 0 10) 7) $generated@@196) (=> (= (ControlFlow 0 10) 9) $generated@@195)))))
(let (($generated@@198  (=> (and (and (not ($generated@@20 ($generated@@62 $generated@@16 ($generated@@63 $generated@@64 $generated@@65 ($generated@@63 $generated@@38 ($generated@@66 $generated@@64 $generated@@65) $generated@@185 $generated@@187) $generated@@54)))) (= $generated@@188 true)) (and (= $generated@@189 true) (= (ControlFlow 0 6) 3))) $generated@@194)))
(let (($generated@@199  (=> ($generated@@20 ($generated@@102 $generated@@16 ($generated@@19 true))) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@43 $generated@@38 $generated@@187 $generated@@48 $generated@@185)) (=> ($generated@@43 $generated@@38 $generated@@187 $generated@@48 $generated@@185) (and (=> (= (ControlFlow 0 11) 10) $generated@@197) (=> (= (ControlFlow 0 11) 6) $generated@@198)))))))
(let (($generated@@200  (=> (and (and (not ($generated@@20 ($generated@@102 $generated@@16 ($generated@@19 true)))) (= $generated@@188 true)) (and (= $generated@@189 true) (= (ControlFlow 0 5) 3))) $generated@@194)))
(let (($generated@@201 true))
(let (($generated@@202  (=> (= $generated@@192 ($generated@@109 $generated@@39 $generated@@186 $generated@@1 $generated@@186 $generated@@1)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@201) (=> (= (ControlFlow 0 13) 11) $generated@@199)) (=> (= (ControlFlow 0 13) 5) $generated@@200)))))
(let (($generated@@203  (=> (and ($generated@@61 $generated@@185) ($generated@@58 $generated@@185)) (=> (and (and (and (or (not (= $generated@@187 $generated@@39)) (not true)) (and ($generated@@37 $generated@@38 $generated@@187 $generated@@48) ($generated@@43 $generated@@38 $generated@@187 $generated@@48 $generated@@193))) (= 0 $generated@@161)) (and (and (= $generated@@193 $generated@@185) (and ($generated@@59 $generated@@193 $generated@@186) ($generated@@61 $generated@@186))) (= (ControlFlow 0 14) 13))) $generated@@202))))
$generated@@203)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
