(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 () T@U)
(declare-fun $generated@@13 () T@U)
(declare-fun $generated@@14 () T@U)
(declare-fun $generated@@15 () T@U)
(declare-fun $generated@@16 () T@U)
(declare-fun $generated@@17 (T@T) Int)
(declare-fun $generated@@18 () T@T)
(declare-fun $generated@@19 () T@T)
(declare-fun $generated@@20 () T@T)
(declare-fun $generated@@21 (Bool) T@U)
(declare-fun $generated@@22 (T@U) Bool)
(declare-fun $generated@@23 (Int) T@U)
(declare-fun $generated@@24 (T@U) Int)
(declare-fun $generated@@25 (Real) T@U)
(declare-fun $generated@@26 (T@U) Real)
(declare-fun $generated@@33 (T@U) Int)
(declare-fun $generated@@34 (T@U) T@U)
(declare-fun $generated@@35 (T@U) T@U)
(declare-fun $generated@@36 () Int)
(declare-fun $generated@@37 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 (T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@U T@U) Bool)
(declare-fun $generated@@42 () T@T)
(declare-fun $generated@@43 () T@U)
(declare-fun $generated@@44 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@45 (T@U T@U) Bool)
(declare-fun $generated@@46 (T@T T@U) T@U)
(declare-fun $generated@@47 () T@T)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@U) T@U)
(declare-fun $generated@@53 () T@U)
(declare-fun $generated@@54 () T@U)
(declare-fun $generated@@55 (T@U T@U) Bool)
(declare-fun $generated@@56 (T@U T@U) Bool)
(declare-fun $generated@@57 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@59 (T@T) T@T)
(declare-fun $generated@@79 (T@U T@U T@U) Bool)
(declare-fun $generated@@80 () T@U)
(declare-fun $generated@@81 () T@U)
(declare-fun $generated@@84 () T@U)
(declare-fun $generated@@85 () T@U)
(declare-fun $generated@@88 () T@U)
(declare-fun $generated@@93 (T@U T@U) T@U)
(declare-fun $generated@@94 (T@U) Bool)
(declare-fun $generated@@101 (T@T T@U) T@U)
(declare-fun $generated@@104 (T@U) T@U)
(declare-fun $generated@@105 (T@U T@U) Bool)
(declare-fun $generated@@127 (T@U) T@U)
(declare-fun $generated@@138 (T@U) T@U)
(declare-fun $generated@@149 (T@U) T@U)
(declare-fun $generated@@152 (T@U) Bool)
(declare-fun $generated@@153 (T@U) T@U)
(declare-fun $generated@@155 (T@U) Bool)
(declare-fun $generated@@157 (T@U) Bool)
(declare-fun $generated@@161 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@162 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@163 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@17 $generated@@18) 0) (= ($generated@@17 $generated@@19) 1)) (= ($generated@@17 $generated@@20) 2)) (forall (($generated@@27 Bool) ) (! (= ($generated@@22 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))) (forall (($generated@@28 T@U) ) (! (= ($generated@@21 ($generated@@22 $generated@@28)) $generated@@28)
 :pattern ( ($generated@@22 $generated@@28))
))) (forall (($generated@@29 Int) ) (! (= ($generated@@24 ($generated@@23 $generated@@29)) $generated@@29)
 :pattern ( ($generated@@23 $generated@@29))
))) (forall (($generated@@30 T@U) ) (! (= ($generated@@23 ($generated@@24 $generated@@30)) $generated@@30)
 :pattern ( ($generated@@24 $generated@@30))
))) (forall (($generated@@31 Real) ) (! (= ($generated@@26 ($generated@@25 $generated@@31)) $generated@@31)
 :pattern ( ($generated@@25 $generated@@31))
))) (forall (($generated@@32 T@U) ) (! (= ($generated@@25 ($generated@@26 $generated@@32)) $generated@@32)
 :pattern ( ($generated@@26 $generated@@32))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11 $generated@@12 $generated@@13 $generated@@14 $generated@@15 $generated@@16)
)
(assert (= ($generated@@33 $generated@@2) 0))
(assert (= ($generated@@34 $generated) $generated@@0))
(assert (= ($generated@@35 $generated@@2) $generated@@3))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@17 $generated@@42) 3) (= ($generated@@17 $generated@@47) 4)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@57 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@64) $generated@@62)
 :weight 0
))) (forall (($generated@@65 T@T) ($generated@@66 T@T) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ($generated@@70 T@U) ) (!  (or (= $generated@@69 $generated@@70) (= ($generated@@48 $generated@@65 $generated@@66 ($generated@@57 $generated@@65 $generated@@66 $generated@@68 $generated@@69 $generated@@67) $generated@@70) ($generated@@48 $generated@@65 $generated@@66 $generated@@68 $generated@@70)))
 :weight 0
))) (= ($generated@@17 $generated@@49) 5)) (= ($generated@@17 $generated@@50) 6)) (forall (($generated@@71 T@T) ($generated@@72 T@T) ) (= ($generated@@17 ($generated@@51 $generated@@71 $generated@@72)) 7))) (forall (($generated@@73 T@T) ($generated@@74 T@T) ) (! (= ($generated@@58 ($generated@@51 $generated@@73 $generated@@74)) $generated@@73)
 :pattern ( ($generated@@51 $generated@@73 $generated@@74))
))) (forall (($generated@@75 T@T) ($generated@@76 T@T) ) (! (= ($generated@@59 ($generated@@51 $generated@@75 $generated@@76)) $generated@@76)
 :pattern ( ($generated@@51 $generated@@75 $generated@@76))
))))
(assert  (=> (<= 4 $generated@@36) (forall (($generated@@77 T@U) ($generated@@78 T@U) ) (!  (=> (or ($generated@@39 $generated@@77 $generated@@78) (and (< 4 $generated@@36) (and ($generated@@38 $generated@@77) (and (or (not (= $generated@@78 $generated@@40)) (not true)) (and ($generated@@41 $generated@@42 $generated@@78 $generated@@43) ($generated@@44 $generated@@42 $generated@@78 $generated@@43 $generated@@77)))))) (and (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@77 ($generated@@52 $generated@@78)) $generated@@53)) ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@77 $generated@@78) $generated@@54)) ($generated@@55 $generated@@77 $generated@@78)) (= ($generated@@37 $generated@@77 $generated@@78)  (and ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@77 ($generated@@52 $generated@@78)) $generated@@53)) ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@77 $generated@@78) $generated@@54)) ($generated@@56 $generated@@77 $generated@@78)))))
 :pattern ( ($generated@@37 $generated@@77 $generated@@78) ($generated@@38 $generated@@77))
))))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (!  (=> (and ($generated@@79 $generated@@82 $generated@@80 $generated@@83) ($generated@@38 $generated@@83)) ($generated@@79 $generated@@82 $generated@@81 $generated@@83))
 :pattern ( ($generated@@79 $generated@@82 $generated@@80 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@86 $generated@@84 $generated@@87) ($generated@@44 $generated@@42 $generated@@86 $generated@@85 $generated@@87))
 :pattern ( ($generated@@44 $generated@@42 $generated@@86 $generated@@84 $generated@@87))
 :pattern ( ($generated@@44 $generated@@42 $generated@@86 $generated@@85 $generated@@87))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@89 $generated@@88 $generated@@90) ($generated@@44 $generated@@42 $generated@@89 $generated@@81 $generated@@90))
 :pattern ( ($generated@@44 $generated@@42 $generated@@89 $generated@@88 $generated@@90))
 :pattern ( ($generated@@44 $generated@@42 $generated@@89 $generated@@81 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@91 $generated@@43 $generated@@92) ($generated@@44 $generated@@42 $generated@@91 $generated@@80 $generated@@92))
 :pattern ( ($generated@@44 $generated@@42 $generated@@91 $generated@@43 $generated@@92))
 :pattern ( ($generated@@44 $generated@@42 $generated@@91 $generated@@80 $generated@@92))
)))
(assert (= ($generated@@33 $generated@@54) 0))
(assert (= ($generated@@93 $generated@@10 $generated@@16) $generated@@54))
(assert ($generated@@94 $generated@@54))
(assert (= ($generated@@33 $generated@@53) 0))
(assert (= ($generated@@93 $generated@@7 $generated@@15) $generated@@53))
(assert  (not ($generated@@94 $generated@@53)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@95 $generated@@85 $generated@@96)  (or (= $generated@@95 $generated@@40) ($generated@@22 ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@96 $generated@@95) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@42 $generated@@95 $generated@@85 $generated@@96))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@97 $generated@@81 $generated@@98)  (or (= $generated@@97 $generated@@40) ($generated@@22 ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@98 $generated@@97) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@42 $generated@@97 $generated@@81 $generated@@98))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@U) ) (! (= ($generated@@44 $generated@@42 $generated@@99 $generated@@80 $generated@@100)  (or (= $generated@@99 $generated@@40) ($generated@@22 ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@100 $generated@@99) $generated@@2)))))
 :pattern ( ($generated@@44 $generated@@42 $generated@@99 $generated@@80 $generated@@100))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@T) ) (! (= ($generated@@101 $generated@@103 ($generated@@46 $generated@@103 $generated@@102)) $generated@@102)
 :pattern ( ($generated@@46 $generated@@103 $generated@@102))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@U) ) (! (= ($generated@@41 $generated@@47 $generated@@106 ($generated@@104 $generated@@107)) (forall (($generated@@108 T@U) ) (!  (=> ($generated@@45 $generated@@106 $generated@@108) ($generated@@105 $generated@@108 $generated@@107))
 :pattern ( ($generated@@45 $generated@@106 $generated@@108))
)))
 :pattern ( ($generated@@41 $generated@@47 $generated@@106 ($generated@@104 $generated@@107)))
)))
(assert ($generated@@94 $generated@@2))
(assert (forall (($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@T) ) (! (= ($generated@@79 ($generated@@101 $generated@@112 $generated@@109) $generated@@110 $generated@@111) ($generated@@44 $generated@@112 $generated@@109 $generated@@110 $generated@@111))
 :pattern ( ($generated@@79 ($generated@@101 $generated@@112 $generated@@109) $generated@@110 $generated@@111))
)))
(assert  (=> (< 1 $generated@@36) (forall (($generated@@113 T@U) ($generated@@114 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@113) (and (or (not (= $generated@@114 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@114 $generated@@81))) ($generated@@22 ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@113 $generated@@114) $generated@@2)))) ($generated@@44 $generated@@42 ($generated@@52 $generated@@114) $generated@@84 $generated@@113))
 :pattern ( ($generated@@52 $generated@@114) ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@113 $generated@@114) $generated@@2)))
))))
(assert  (=> (< 1 $generated@@36) (forall (($generated@@115 T@U) ) (!  (=> (and (or (not (= $generated@@115 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@115 $generated@@81)) ($generated@@41 $generated@@42 ($generated@@52 $generated@@115) $generated@@84))
 :pattern ( ($generated@@52 $generated@@115))
))))
(assert (forall (($generated@@116 T@U) ) (!  (=> ($generated@@105 $generated@@116 $generated@@84) (and (= ($generated@@101 $generated@@42 ($generated@@46 $generated@@42 $generated@@116)) $generated@@116) ($generated@@41 $generated@@42 ($generated@@46 $generated@@42 $generated@@116) $generated@@84)))
 :pattern ( ($generated@@105 $generated@@116 $generated@@84))
)))
(assert (forall (($generated@@117 T@U) ) (!  (=> ($generated@@105 $generated@@117 $generated@@85) (and (= ($generated@@101 $generated@@42 ($generated@@46 $generated@@42 $generated@@117)) $generated@@117) ($generated@@41 $generated@@42 ($generated@@46 $generated@@42 $generated@@117) $generated@@85)))
 :pattern ( ($generated@@105 $generated@@117 $generated@@85))
)))
(assert (forall (($generated@@118 T@U) ) (!  (=> ($generated@@105 $generated@@118 $generated@@88) (and (= ($generated@@101 $generated@@42 ($generated@@46 $generated@@42 $generated@@118)) $generated@@118) ($generated@@41 $generated@@42 ($generated@@46 $generated@@42 $generated@@118) $generated@@88)))
 :pattern ( ($generated@@105 $generated@@118 $generated@@88))
)))
(assert (forall (($generated@@119 T@U) ) (!  (=> ($generated@@105 $generated@@119 $generated@@81) (and (= ($generated@@101 $generated@@42 ($generated@@46 $generated@@42 $generated@@119)) $generated@@119) ($generated@@41 $generated@@42 ($generated@@46 $generated@@42 $generated@@119) $generated@@81)))
 :pattern ( ($generated@@105 $generated@@119 $generated@@81))
)))
(assert (forall (($generated@@120 T@U) ) (!  (=> ($generated@@105 $generated@@120 $generated@@43) (and (= ($generated@@101 $generated@@42 ($generated@@46 $generated@@42 $generated@@120)) $generated@@120) ($generated@@41 $generated@@42 ($generated@@46 $generated@@42 $generated@@120) $generated@@43)))
 :pattern ( ($generated@@105 $generated@@120 $generated@@43))
)))
(assert (forall (($generated@@121 T@U) ) (!  (=> ($generated@@105 $generated@@121 $generated@@80) (and (= ($generated@@101 $generated@@42 ($generated@@46 $generated@@42 $generated@@121)) $generated@@121) ($generated@@41 $generated@@42 ($generated@@46 $generated@@42 $generated@@121) $generated@@80)))
 :pattern ( ($generated@@105 $generated@@121 $generated@@80))
)))
(assert (forall (($generated@@122 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@122 $generated@@84)  (and ($generated@@41 $generated@@42 $generated@@122 $generated@@85) (or (not (= $generated@@122 $generated@@40)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@122 $generated@@84))
 :pattern ( ($generated@@41 $generated@@42 $generated@@122 $generated@@85))
)))
(assert (forall (($generated@@123 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@123 $generated@@88)  (and ($generated@@41 $generated@@42 $generated@@123 $generated@@81) (or (not (= $generated@@123 $generated@@40)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@123 $generated@@88))
 :pattern ( ($generated@@41 $generated@@42 $generated@@123 $generated@@81))
)))
(assert (forall (($generated@@124 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@124 $generated@@43)  (and ($generated@@41 $generated@@42 $generated@@124 $generated@@80) (or (not (= $generated@@124 $generated@@40)) (not true))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@124 $generated@@43))
 :pattern ( ($generated@@41 $generated@@42 $generated@@124 $generated@@80))
)))
(assert (forall (($generated@@125 T@U) ($generated@@126 T@U) ) (!  (=> ($generated@@44 $generated@@42 $generated@@125 $generated@@80 $generated@@126) ($generated@@44 $generated@@42 $generated@@125 $generated@@81 $generated@@126))
 :pattern ( ($generated@@44 $generated@@42 $generated@@125 $generated@@80 $generated@@126))
)))
(assert (forall (($generated@@128 T@U) ($generated@@129 T@U) ) (!  (and (= ($generated@@127 ($generated@@93 $generated@@128 $generated@@129)) $generated@@128) (= ($generated@@35 ($generated@@93 $generated@@128 $generated@@129)) $generated@@129))
 :pattern ( ($generated@@93 $generated@@128 $generated@@129))
)))
(assert (forall (($generated@@130 T@U) ) (!  (=> ($generated@@105 $generated@@130 $generated) (and (= ($generated@@101 $generated@@18 ($generated@@46 $generated@@18 $generated@@130)) $generated@@130) ($generated@@41 $generated@@18 ($generated@@46 $generated@@18 $generated@@130) $generated)))
 :pattern ( ($generated@@105 $generated@@130 $generated))
)))
(assert (forall (($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@T) ) (! (= ($generated@@105 ($generated@@101 $generated@@133 $generated@@131) $generated@@132) ($generated@@41 $generated@@133 $generated@@131 $generated@@132))
 :pattern ( ($generated@@105 ($generated@@101 $generated@@133 $generated@@131) $generated@@132))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ) (! (= ($generated@@44 $generated@@47 $generated@@134 ($generated@@104 $generated@@135) $generated@@136) (forall (($generated@@137 T@U) ) (!  (=> ($generated@@45 $generated@@134 $generated@@137) ($generated@@79 $generated@@137 $generated@@135 $generated@@136))
 :pattern ( ($generated@@45 $generated@@134 $generated@@137))
)))
 :pattern ( ($generated@@44 $generated@@47 $generated@@134 ($generated@@104 $generated@@135) $generated@@136))
)))
(assert (forall (($generated@@139 T@U) ) (! (= ($generated@@138 ($generated@@104 $generated@@139)) $generated@@139)
 :pattern ( ($generated@@104 $generated@@139))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@34 ($generated@@104 $generated@@140)) $generated@@1)
 :pattern ( ($generated@@104 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ($generated@@142 T@T) ) (! (= ($generated@@46 $generated@@142 ($generated@@101 $generated@@142 $generated@@141)) $generated@@141)
 :pattern ( ($generated@@101 $generated@@142 $generated@@141))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@143) (and (or (not (= $generated@@144 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@144 $generated@@80))) ($generated@@22 ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@143 $generated@@144) $generated@@2)))) ($generated@@44 $generated@@42 ($generated@@46 $generated@@42 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@143 $generated@@144) $generated@@54)) $generated@@88 $generated@@143))
 :pattern ( ($generated@@46 $generated@@42 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@143 $generated@@144) $generated@@54)))
)))
(assert (forall (($generated@@145 T@U) ($generated@@146 T@U) ) (!  (=> ($generated@@105 $generated@@145 ($generated@@104 $generated@@146)) (and (= ($generated@@101 $generated@@47 ($generated@@46 $generated@@47 $generated@@145)) $generated@@145) ($generated@@41 $generated@@47 ($generated@@46 $generated@@47 $generated@@145) ($generated@@104 $generated@@146))))
 :pattern ( ($generated@@105 $generated@@145 ($generated@@104 $generated@@146)))
)))
(assert (forall (($generated@@147 T@U) ) (!  (=> ($generated@@41 $generated@@42 $generated@@147 $generated@@80) ($generated@@41 $generated@@42 $generated@@147 $generated@@81))
 :pattern ( ($generated@@41 $generated@@42 $generated@@147 $generated@@80))
)))
(assert (forall (($generated@@148 T@U) ) (!  (=> ($generated@@105 $generated@@148 $generated@@80) ($generated@@105 $generated@@148 $generated@@81))
 :pattern ( ($generated@@105 $generated@@148 $generated@@80))
)))
(assert (= ($generated@@34 $generated@@84) $generated@@4))
(assert (= ($generated@@149 $generated@@84) $generated@@12))
(assert (= ($generated@@34 $generated@@85) $generated@@5))
(assert (= ($generated@@149 $generated@@85) $generated@@12))
(assert (= ($generated@@34 $generated@@88) $generated@@6))
(assert (= ($generated@@149 $generated@@88) $generated@@13))
(assert (= ($generated@@34 $generated@@81) $generated@@8))
(assert (= ($generated@@149 $generated@@81) $generated@@13))
(assert (= ($generated@@34 $generated@@43) $generated@@9))
(assert (= ($generated@@149 $generated@@43) $generated@@14))
(assert (= ($generated@@34 $generated@@80) $generated@@11))
(assert (= ($generated@@149 $generated@@80) $generated@@14))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ) (!  (=> (and ($generated@@38 $generated@@150) (and (or (not (= $generated@@151 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@151 $generated@@80))) ($generated@@41 $generated@@42 ($generated@@46 $generated@@42 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@150 $generated@@151) $generated@@54)) $generated@@88))
 :pattern ( ($generated@@46 $generated@@42 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@150 $generated@@151) $generated@@54)))
)))
(assert (forall (($generated@@154 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@154 $generated@@85)  (or (= $generated@@154 $generated@@40) ($generated@@152 ($generated@@153 $generated@@154))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@154 $generated@@85))
)))
(assert (forall (($generated@@156 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@156 $generated@@81)  (or (= $generated@@156 $generated@@40) ($generated@@155 ($generated@@153 $generated@@156))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@156 $generated@@81))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@41 $generated@@42 $generated@@158 $generated@@80)  (or (= $generated@@158 $generated@@40) ($generated@@157 ($generated@@153 $generated@@158))))
 :pattern ( ($generated@@41 $generated@@42 $generated@@158 $generated@@80))
)))
(assert (forall (($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (and (and ($generated@@38 $generated@@159) (and (or (not (= $generated@@160 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@160 $generated@@85))) ($generated@@22 ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@159 $generated@@160) $generated@@2)))) ($generated@@44 $generated@@47 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@159 $generated@@160) $generated@@53)) ($generated@@104 $generated@@88) $generated@@159))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@159 $generated@@160) $generated@@53)))
)))
(assert  (and (forall (($generated@@164 T@T) ($generated@@165 T@T) ($generated@@166 T@T) ($generated@@167 T@U) ($generated@@168 T@U) ($generated@@169 T@U) ($generated@@170 T@U) ) (! (= ($generated@@161 $generated@@164 $generated@@165 $generated@@166 ($generated@@163 $generated@@164 $generated@@165 $generated@@166 $generated@@168 $generated@@169 $generated@@170 $generated@@167) $generated@@169 $generated@@170) $generated@@167)
 :weight 0
)) (and (forall (($generated@@171 T@T) ($generated@@172 T@T) ($generated@@173 T@T) ($generated@@174 T@U) ($generated@@175 T@U) ($generated@@176 T@U) ($generated@@177 T@U) ($generated@@178 T@U) ($generated@@179 T@U) ) (!  (or (= $generated@@176 $generated@@178) (= ($generated@@161 $generated@@171 $generated@@172 $generated@@173 ($generated@@163 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@176 $generated@@177 $generated@@174) $generated@@178 $generated@@179) ($generated@@161 $generated@@171 $generated@@172 $generated@@173 $generated@@175 $generated@@178 $generated@@179)))
 :weight 0
)) (forall (($generated@@180 T@T) ($generated@@181 T@T) ($generated@@182 T@T) ($generated@@183 T@U) ($generated@@184 T@U) ($generated@@185 T@U) ($generated@@186 T@U) ($generated@@187 T@U) ($generated@@188 T@U) ) (!  (or (= $generated@@186 $generated@@188) (= ($generated@@161 $generated@@180 $generated@@181 $generated@@182 ($generated@@163 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@185 $generated@@186 $generated@@183) $generated@@187 $generated@@188) ($generated@@161 $generated@@180 $generated@@181 $generated@@182 $generated@@184 $generated@@187 $generated@@188)))
 :weight 0
)))))
(assert (forall (($generated@@189 T@U) ($generated@@190 T@U) ($generated@@191 T@U) ($generated@@192 T@U) ($generated@@193 T@U) ($generated@@194 T@U) ($generated@@195 T@U) ) (! (= ($generated@@22 ($generated@@161 $generated@@42 $generated@@49 $generated@@18 ($generated@@162 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@194 $generated@@195))  (=> (and (or (not (= $generated@@194 $generated@@189)) (not true)) ($generated@@22 ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@190 $generated@@194) $generated@@191)))) (or (= $generated@@194 $generated@@192) (= $generated@@194 $generated@@193))))
 :pattern ( ($generated@@161 $generated@@42 $generated@@49 $generated@@18 ($generated@@162 $generated@@189 $generated@@190 $generated@@191 $generated@@192 $generated@@193) $generated@@194 $generated@@195))
)))
(assert (forall (($generated@@196 T@U) ($generated@@197 T@U) ) (!  (=> (and ($generated@@38 $generated@@196) (and (or (not (= $generated@@197 $generated@@40)) (not true)) ($generated@@41 $generated@@42 $generated@@197 $generated@@85))) ($generated@@41 $generated@@47 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@196 $generated@@197) $generated@@53)) ($generated@@104 $generated@@88)))
 :pattern ( ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@196 $generated@@197) $generated@@53)))
)))
(assert (forall (($generated@@198 T@U) ($generated@@199 T@U) ) (! ($generated@@44 $generated@@18 $generated@@199 $generated $generated@@198)
 :pattern ( ($generated@@44 $generated@@18 $generated@@199 $generated $generated@@198))
)))
(assert (forall (($generated@@200 T@U) ) (! ($generated@@41 $generated@@18 $generated@@200 $generated)
 :pattern ( ($generated@@41 $generated@@18 $generated@@200 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@201 () T@U)
(declare-fun $generated@@202 () T@U)
(declare-fun $generated@@203 () Bool)
(declare-fun $generated@@204 () Bool)
(declare-fun $generated@@205 () Bool)
(declare-fun $generated@@206 () Bool)
(declare-fun $generated@@207 () T@U)
(declare-fun $generated@@208 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@209  (=> (= ($generated@@37 $generated@@201 $generated@@202)  (and ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 ($generated@@52 $generated@@202)) $generated@@53)) ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 $generated@@202) $generated@@54)) ($generated@@56 $generated@@201 $generated@@202))) (=> (and (=> ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 ($generated@@52 $generated@@202)) $generated@@53)) ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 $generated@@202) $generated@@54)) ($generated@@55 $generated@@201 $generated@@202)) ($generated@@41 $generated@@18 ($generated@@21 ($generated@@37 $generated@@201 $generated@@202)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 5)) $generated@@203) (=> $generated@@203 (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@204) (=> $generated@@204 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@205)))))))))
(let (($generated@@210  (=> (not ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 ($generated@@52 $generated@@202)) $generated@@53)) ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 $generated@@202) $generated@@54))) (=> (and (= $generated@@205 true) (= (ControlFlow 0 7) 3)) $generated@@209))))
(let (($generated@@211  (=> (and ($generated@@45 ($generated@@46 $generated@@47 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 ($generated@@52 $generated@@202)) $generated@@53)) ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 $generated@@202) $generated@@54)) ($generated@@79 ($generated@@101 $generated@@42 $generated@@202) $generated@@80 $generated@@201)) (=> (and (and (= $generated@@206 (forall (($generated@@212 T@U) ($generated@@213 T@U) )  (=> (and (and (or (not (= $generated@@212 $generated@@40)) (not true)) ($generated@@22 ($generated@@46 $generated@@18 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@42 ($generated@@51 $generated@@49 $generated@@50) $generated@@201 $generated@@212) $generated@@2)))) (or (= $generated@@212 $generated@@202) (= $generated@@212 ($generated@@52 $generated@@202)))) ($generated@@22 ($generated@@161 $generated@@42 $generated@@49 $generated@@18 $generated@@207 $generated@@212 $generated@@213))))) ($generated@@55 $generated@@201 $generated@@202)) (and (= $generated@@205 $generated@@206) (= (ControlFlow 0 6) 3))) $generated@@209))))
(let (($generated@@214  (=> (= $generated@@203 ($generated@@22 ($generated@@161 $generated@@42 $generated@@49 $generated@@18 $generated@@207 $generated@@202 $generated@@54))) (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= ($generated@@52 $generated@@202) $generated@@40)) (not true))) (=> (or (not (= ($generated@@52 $generated@@202) $generated@@40)) (not true)) (=> (= $generated@@204 ($generated@@22 ($generated@@161 $generated@@42 $generated@@49 $generated@@18 $generated@@207 ($generated@@52 $generated@@202) $generated@@53))) (and (=> (= (ControlFlow 0 8) 6) $generated@@211) (=> (= (ControlFlow 0 8) 7) $generated@@210))))))))
(let (($generated@@215 true))
(let (($generated@@216  (=> (= $generated@@207 ($generated@@162 $generated@@40 $generated@@201 $generated@@2 $generated@@202 ($generated@@52 $generated@@202))) (and (=> (= (ControlFlow 0 10) 1) $generated@@215) (=> (= (ControlFlow 0 10) 8) $generated@@214)))))
(let (($generated@@217  (=> (and ($generated@@38 $generated@@201) ($generated@@208 $generated@@201)) (=> (and (and (or (not (= $generated@@202 $generated@@40)) (not true)) (and ($generated@@41 $generated@@42 $generated@@202 $generated@@43) ($generated@@44 $generated@@42 $generated@@202 $generated@@43 $generated@@201))) (and (= 4 $generated@@36) (= (ControlFlow 0 11) 10))) $generated@@216))))
$generated@@217))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
