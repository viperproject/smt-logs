(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) Int)
(declare-fun $generated@@28 (T@U) T@U)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@T T@U) T@U)
(declare-fun $generated@@31 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@32 () T@T)
(declare-fun $generated@@33 () T@T)
(declare-fun $generated@@34 () T@T)
(declare-fun $generated@@35 (T@T T@T) T@T)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 (T@U) Bool)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U) Bool)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@42 (T@T) T@T)
(declare-fun $generated@@43 (T@T) T@T)
(declare-fun $generated@@63 (T@U T@U T@U) Bool)
(declare-fun $generated@@64 () T@U)
(declare-fun $generated@@67 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@68 () T@U)
(declare-fun $generated@@71 () T@U)
(declare-fun $generated@@74 (T@U T@U) T@U)
(declare-fun $generated@@75 (T@U) Bool)
(declare-fun $generated@@76 (T@U) Bool)
(declare-fun $generated@@77 (T@U T@U) Bool)
(declare-fun $generated@@78 (T@U T@U T@U) Bool)
(declare-fun $generated@@85 (T@U T@U T@U) Bool)
(declare-fun $generated@@99 (T@T T@U) T@U)
(declare-fun $generated@@102 (T@T T@U) T@U)
(declare-fun $generated@@105 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@106 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@140 () Int)
(declare-fun $generated@@141 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@174 (T@U) T@U)
(declare-fun $generated@@175 (T@U) Bool)
(declare-fun $generated@@176 (T@U) T@U)
(declare-fun $generated@@178 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated@@1) 0))
(assert (= ($generated@@28 $generated) $generated@@0))
(assert (= ($generated@@29 $generated@@1) $generated@@2))
(assert  (and (and (and (and (and (and (and (forall (($generated@@44 T@T) ($generated@@45 T@T) ($generated@@46 T@U) ($generated@@47 T@U) ($generated@@48 T@U) ) (! (= ($generated@@31 $generated@@44 $generated@@45 ($generated@@41 $generated@@44 $generated@@45 $generated@@47 $generated@@48 $generated@@46) $generated@@48) $generated@@46)
 :weight 0
)) (forall (($generated@@49 T@T) ($generated@@50 T@T) ($generated@@51 T@U) ($generated@@52 T@U) ($generated@@53 T@U) ($generated@@54 T@U) ) (!  (or (= $generated@@53 $generated@@54) (= ($generated@@31 $generated@@49 $generated@@50 ($generated@@41 $generated@@49 $generated@@50 $generated@@52 $generated@@53 $generated@@51) $generated@@54) ($generated@@31 $generated@@49 $generated@@50 $generated@@52 $generated@@54)))
 :weight 0
))) (= ($generated@@11 $generated@@32) 3)) (= ($generated@@11 $generated@@33) 4)) (= ($generated@@11 $generated@@34) 5)) (forall (($generated@@55 T@T) ($generated@@56 T@T) ) (= ($generated@@11 ($generated@@35 $generated@@55 $generated@@56)) 6))) (forall (($generated@@57 T@T) ($generated@@58 T@T) ) (! (= ($generated@@42 ($generated@@35 $generated@@57 $generated@@58)) $generated@@57)
 :pattern ( ($generated@@35 $generated@@57 $generated@@58))
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ) (! (= ($generated@@43 ($generated@@35 $generated@@59 $generated@@60)) $generated@@60)
 :pattern ( ($generated@@35 $generated@@59 $generated@@60))
))))
(assert (forall (($generated@@61 T@U) ($generated@@62 T@U) ) (!  (=> (and ($generated@@37 $generated@@61) (and (or (not (= $generated@@62 $generated@@38)) (not true)) ($generated@@39 $generated@@34 $generated@@62 $generated@@40))) ($generated@@39 $generated@@12 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@61 $generated@@62) $generated@@36)) $generated))
 :pattern ( ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@61 $generated@@62) $generated@@36)))
)))
(assert (forall (($generated@@65 T@U) ($generated@@66 T@U) ) (!  (=> (and ($generated@@63 $generated@@65 $generated@@40 $generated@@66) ($generated@@37 $generated@@66)) ($generated@@63 $generated@@65 $generated@@64 $generated@@66))
 :pattern ( ($generated@@63 $generated@@65 $generated@@40 $generated@@66))
)))
(assert (forall (($generated@@69 T@U) ($generated@@70 T@U) ) (! (= ($generated@@67 $generated@@34 $generated@@69 $generated@@68 $generated@@70) ($generated@@67 $generated@@34 $generated@@69 $generated@@64 $generated@@70))
 :pattern ( ($generated@@67 $generated@@34 $generated@@69 $generated@@68 $generated@@70))
 :pattern ( ($generated@@67 $generated@@34 $generated@@69 $generated@@64 $generated@@70))
)))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@67 $generated@@34 $generated@@72 $generated@@71 $generated@@73) ($generated@@67 $generated@@34 $generated@@72 $generated@@40 $generated@@73))
 :pattern ( ($generated@@67 $generated@@34 $generated@@72 $generated@@71 $generated@@73))
 :pattern ( ($generated@@67 $generated@@34 $generated@@72 $generated@@40 $generated@@73))
)))
(assert (= ($generated@@27 $generated@@36) 0))
(assert (= ($generated@@74 $generated@@6 $generated@@10) $generated@@36))
(assert ($generated@@75 $generated@@36))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ) (!  (=> (and (and (and ($generated@@37 $generated@@80) ($generated@@37 $generated@@81)) (and (or (not (= $generated@@82 $generated@@38)) (not true)) (and ($generated@@39 $generated@@34 $generated@@82 $generated@@71) ($generated@@67 $generated@@34 $generated@@82 $generated@@71 $generated@@80)))) (and ($generated@@76 $generated@@80) ($generated@@77 $generated@@80 $generated@@81))) (=> (forall (($generated@@83 T@U) ($generated@@84 T@U) )  (=> (and (or (not (= $generated@@83 $generated@@38)) (not true)) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@80 $generated@@83) $generated@@1)))) (= ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@80 $generated@@83) $generated@@84) ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@81 $generated@@83) $generated@@84)))) (= ($generated@@78 $generated@@79 $generated@@80 $generated@@82) ($generated@@78 $generated@@79 $generated@@81 $generated@@82))))
 :pattern ( ($generated@@76 $generated@@80) ($generated@@77 $generated@@80 $generated@@81) ($generated@@78 $generated@@79 $generated@@81 $generated@@82))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@U) ($generated@@88 T@U) ($generated@@89 T@U) ) (!  (=> (and (and (and ($generated@@37 $generated@@87) ($generated@@37 $generated@@88)) (and (or (not (= $generated@@89 $generated@@38)) (not true)) (and ($generated@@39 $generated@@34 $generated@@89 $generated@@71) ($generated@@67 $generated@@34 $generated@@89 $generated@@71 $generated@@87)))) (and ($generated@@76 $generated@@87) ($generated@@77 $generated@@87 $generated@@88))) (=> (forall (($generated@@90 T@U) ($generated@@91 T@U) )  (=> (and (or (not (= $generated@@90 $generated@@38)) (not true)) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@87 $generated@@90) $generated@@1)))) (= ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@87 $generated@@90) $generated@@91) ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@88 $generated@@90) $generated@@91)))) (= ($generated@@85 $generated@@86 $generated@@87 $generated@@89) ($generated@@85 $generated@@86 $generated@@88 $generated@@89))))
 :pattern ( ($generated@@76 $generated@@87) ($generated@@77 $generated@@87 $generated@@88) ($generated@@85 $generated@@86 $generated@@88 $generated@@89))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@67 $generated@@34 $generated@@92 $generated@@64 $generated@@93)  (or (= $generated@@92 $generated@@38) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@93 $generated@@92) $generated@@1)))))
 :pattern ( ($generated@@67 $generated@@34 $generated@@92 $generated@@64 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@67 $generated@@34 $generated@@94 $generated@@40 $generated@@95)  (or (= $generated@@94 $generated@@38) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@95 $generated@@94) $generated@@1)))))
 :pattern ( ($generated@@67 $generated@@34 $generated@@94 $generated@@40 $generated@@95))
)))
(assert (forall (($generated@@96 T@U) ($generated@@97 T@U) ) (!  (=> ($generated@@77 $generated@@96 $generated@@97) (forall (($generated@@98 T@U) ) (!  (=> ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@96 $generated@@98) $generated@@1))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@97 $generated@@98) $generated@@1))))
 :pattern ( ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@97 $generated@@98) $generated@@1))
)))
 :pattern ( ($generated@@77 $generated@@96 $generated@@97))
)))
(assert (forall (($generated@@100 T@U) ($generated@@101 T@T) ) (! (= ($generated@@99 $generated@@101 $generated@@100) $generated@@100)
 :pattern ( ($generated@@99 $generated@@101 $generated@@100))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@T) ) (! (= ($generated@@102 $generated@@104 ($generated@@30 $generated@@104 $generated@@103)) $generated@@103)
 :pattern ( ($generated@@30 $generated@@104 $generated@@103))
)))
(assert  (and (forall (($generated@@108 T@T) ($generated@@109 T@T) ($generated@@110 T@T) ($generated@@111 T@U) ($generated@@112 T@U) ($generated@@113 T@U) ($generated@@114 T@U) ) (! (= ($generated@@105 $generated@@108 $generated@@109 $generated@@110 ($generated@@107 $generated@@108 $generated@@109 $generated@@110 $generated@@112 $generated@@113 $generated@@114 $generated@@111) $generated@@113 $generated@@114) $generated@@111)
 :weight 0
)) (and (forall (($generated@@115 T@T) ($generated@@116 T@T) ($generated@@117 T@T) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ) (!  (or (= $generated@@120 $generated@@122) (= ($generated@@105 $generated@@115 $generated@@116 $generated@@117 ($generated@@107 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@120 $generated@@121 $generated@@118) $generated@@122 $generated@@123) ($generated@@105 $generated@@115 $generated@@116 $generated@@117 $generated@@119 $generated@@122 $generated@@123)))
 :weight 0
)) (forall (($generated@@124 T@T) ($generated@@125 T@T) ($generated@@126 T@T) ($generated@@127 T@U) ($generated@@128 T@U) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ) (!  (or (= $generated@@130 $generated@@132) (= ($generated@@105 $generated@@124 $generated@@125 $generated@@126 ($generated@@107 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@129 $generated@@130 $generated@@127) $generated@@131 $generated@@132) ($generated@@105 $generated@@124 $generated@@125 $generated@@126 $generated@@128 $generated@@131 $generated@@132)))
 :weight 0
)))))
(assert (forall (($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ) (! (= ($generated@@16 ($generated@@105 $generated@@34 $generated@@32 $generated@@12 ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))  (=> (and (or (not (= $generated@@138 $generated@@133)) (not true)) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@134 $generated@@138) $generated@@135)))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@136 $generated@@138) $generated@@137)))))
 :pattern ( ($generated@@105 $generated@@34 $generated@@32 $generated@@12 ($generated@@106 $generated@@133 $generated@@134 $generated@@135 $generated@@136 $generated@@137) $generated@@138 $generated@@139))
)))
(assert ($generated@@75 $generated@@1))
(assert  (=> (<= 2 $generated@@140) (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@141 $generated@@143 $generated@@144 $generated@@145) (and (< 2 $generated@@140) (and (and (and ($generated@@37 $generated@@143) ($generated@@37 $generated@@144)) ($generated@@77 $generated@@143 $generated@@144)) (and (or (not (= $generated@@145 $generated@@38)) (not true)) (and ($generated@@39 $generated@@34 $generated@@145 $generated@@71) ($generated@@67 $generated@@34 $generated@@145 $generated@@71 $generated@@143)))))) (and (=> ($generated@@16 ($generated@@99 $generated@@12 ($generated@@15 true))) (=> ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@143 $generated@@145) $generated@@36))) (=> ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@144 $generated@@145) $generated@@36))) ($generated@@142 $generated@@143 $generated@@144 $generated@@145)))) (= ($generated@@78 $generated@@143 $generated@@144 $generated@@145)  (and true (=> (and ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@143 $generated@@145) $generated@@36))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@144 $generated@@145) $generated@@36)))) ($generated@@85 $generated@@143 $generated@@144 $generated@@145))))))
 :pattern ( ($generated@@78 $generated@@143 $generated@@144 $generated@@145) ($generated@@37 $generated@@144))
))))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ($generated@@148 T@U) ($generated@@149 T@T) ) (! (= ($generated@@63 ($generated@@102 $generated@@149 $generated@@146) $generated@@147 $generated@@148) ($generated@@67 $generated@@149 $generated@@146 $generated@@147 $generated@@148))
 :pattern ( ($generated@@63 ($generated@@102 $generated@@149 $generated@@146) $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@U) ($generated@@153 T@U) ) (!  (=> ($generated@@77 $generated@@150 $generated@@151) (=> ($generated@@63 $generated@@152 $generated@@153 $generated@@150) ($generated@@63 $generated@@152 $generated@@153 $generated@@151)))
 :pattern ( ($generated@@77 $generated@@150 $generated@@151) ($generated@@63 $generated@@152 $generated@@153 $generated@@150))
)))
(assert (forall (($generated@@154 T@U) ($generated@@155 T@U) ($generated@@156 T@U) ($generated@@157 T@U) ($generated@@158 T@T) ) (!  (=> ($generated@@77 $generated@@154 $generated@@155) (=> ($generated@@67 $generated@@158 $generated@@156 $generated@@157 $generated@@154) ($generated@@67 $generated@@158 $generated@@156 $generated@@157 $generated@@155)))
 :pattern ( ($generated@@77 $generated@@154 $generated@@155) ($generated@@67 $generated@@158 $generated@@156 $generated@@157 $generated@@154))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@159 $generated@@68)  (and ($generated@@39 $generated@@34 $generated@@159 $generated@@64) (or (not (= $generated@@159 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@159 $generated@@68))
 :pattern ( ($generated@@39 $generated@@34 $generated@@159 $generated@@64))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@160 $generated@@71)  (and ($generated@@39 $generated@@34 $generated@@160 $generated@@40) (or (not (= $generated@@160 $generated@@38)) (not true))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@160 $generated@@71))
 :pattern ( ($generated@@39 $generated@@34 $generated@@160 $generated@@40))
)))
(assert (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> ($generated@@67 $generated@@34 $generated@@161 $generated@@40 $generated@@162) ($generated@@67 $generated@@34 $generated@@161 $generated@@64 $generated@@162))
 :pattern ( ($generated@@67 $generated@@34 $generated@@161 $generated@@40 $generated@@162))
)))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ($generated@@165 T@U) ) (!  (=> (or (not (= $generated@@163 $generated@@165)) (not true)) (=> (and ($generated@@77 $generated@@163 $generated@@164) ($generated@@77 $generated@@164 $generated@@165)) ($generated@@77 $generated@@163 $generated@@165)))
 :pattern ( ($generated@@77 $generated@@163 $generated@@164) ($generated@@77 $generated@@164 $generated@@165))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@U) ) (!  (and (= ($generated@@166 ($generated@@74 $generated@@167 $generated@@168)) $generated@@167) (= ($generated@@29 ($generated@@74 $generated@@167 $generated@@168)) $generated@@168))
 :pattern ( ($generated@@74 $generated@@167 $generated@@168))
)))
(assert (forall (($generated@@169 T@U) ($generated@@170 T@U) ) (!  (=> (and (and ($generated@@37 $generated@@169) (and (or (not (= $generated@@170 $generated@@38)) (not true)) ($generated@@39 $generated@@34 $generated@@170 $generated@@40))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@169 $generated@@170) $generated@@1)))) ($generated@@67 $generated@@12 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@169 $generated@@170) $generated@@36)) $generated $generated@@169))
 :pattern ( ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@169 $generated@@170) $generated@@36)))
)))
(assert (forall (($generated@@171 T@U) ($generated@@172 T@T) ) (! (= ($generated@@30 $generated@@172 ($generated@@102 $generated@@172 $generated@@171)) $generated@@171)
 :pattern ( ($generated@@102 $generated@@172 $generated@@171))
)))
(assert (forall (($generated@@173 T@U) ) (!  (=> ($generated@@39 $generated@@34 $generated@@173 $generated@@40) ($generated@@39 $generated@@34 $generated@@173 $generated@@64))
 :pattern ( ($generated@@39 $generated@@34 $generated@@173 $generated@@40))
)))
(assert (= ($generated@@28 $generated@@71) $generated@@3))
(assert (= ($generated@@174 $generated@@71) $generated@@8))
(assert (= ($generated@@28 $generated@@68) $generated@@4))
(assert (= ($generated@@174 $generated@@68) $generated@@9))
(assert (= ($generated@@28 $generated@@64) $generated@@5))
(assert (= ($generated@@174 $generated@@64) $generated@@9))
(assert (= ($generated@@28 $generated@@40) $generated@@7))
(assert (= ($generated@@174 $generated@@40) $generated@@8))
(assert (forall (($generated@@177 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@177 $generated@@64)  (or (= $generated@@177 $generated@@38) ($generated@@175 ($generated@@176 $generated@@177))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@177 $generated@@64))
)))
(assert (forall (($generated@@179 T@U) ) (! (= ($generated@@39 $generated@@34 $generated@@179 $generated@@40)  (or (= $generated@@179 $generated@@38) ($generated@@178 ($generated@@176 $generated@@179))))
 :pattern ( ($generated@@39 $generated@@34 $generated@@179 $generated@@40))
)))
(assert (forall (($generated@@180 T@U) ($generated@@181 T@T) ) (! (= ($generated@@102 $generated@@181 ($generated@@99 $generated@@181 $generated@@180)) ($generated@@99 $generated@@33 ($generated@@102 $generated@@181 $generated@@180)))
 :pattern ( ($generated@@102 $generated@@181 ($generated@@99 $generated@@181 $generated@@180)))
)))
(assert (forall (($generated@@182 T@U) ($generated@@183 T@U) ) (! ($generated@@67 $generated@@12 $generated@@183 $generated $generated@@182)
 :pattern ( ($generated@@67 $generated@@12 $generated@@183 $generated $generated@@182))
)))
(assert (forall (($generated@@184 T@U) ) (! ($generated@@39 $generated@@12 $generated@@184 $generated)
 :pattern ( ($generated@@39 $generated@@12 $generated@@184 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(declare-fun $generated@@188 () Bool)
(declare-fun $generated@@189 () Bool)
(declare-fun $generated@@190 () Bool)
(declare-fun $generated@@191 () Bool)
(declare-fun $generated@@192 () T@U)
(declare-fun $generated@@193 () Bool)
(declare-fun $generated@@194 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 14) (let (($generated@@195  (=> (= ($generated@@78 $generated@@185 $generated@@186 $generated@@187)  (and true (=> (and ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@185 $generated@@187) $generated@@36))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@186 $generated@@187) $generated@@36)))) ($generated@@85 $generated@@185 $generated@@186 $generated@@187)))) (=> (and (=> ($generated@@16 ($generated@@99 $generated@@12 ($generated@@15 true))) (=> ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@185 $generated@@187) $generated@@36))) (=> ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@186 $generated@@187) $generated@@36))) ($generated@@142 $generated@@185 $generated@@186 $generated@@187)))) ($generated@@39 $generated@@12 ($generated@@15 ($generated@@78 $generated@@185 $generated@@186 $generated@@187)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@188) (=> $generated@@188 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@189)))))))
(let (($generated@@196  (=> (and (and (not (and ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@185 $generated@@187) $generated@@36))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@186 $generated@@187) $generated@@36))))) (= $generated@@188 $generated@@190)) (and (= $generated@@189 true) (= (ControlFlow 0 8) 3))) $generated@@195)))
(let (($generated@@197  (=> (and (and ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@185 $generated@@187) $generated@@36))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@186 $generated@@187) $generated@@36)))) ($generated@@63 ($generated@@102 $generated@@34 $generated@@187) $generated@@40 $generated@@186)) (and (=> (= (ControlFlow 0 6) (- 0 7)) ($generated@@67 $generated@@34 $generated@@187 $generated@@71 $generated@@185)) (=> ($generated@@67 $generated@@34 $generated@@187 $generated@@71 $generated@@185) (=> (= $generated@@191 (forall (($generated@@198 T@U) ($generated@@199 T@U) )  (=> (and (and (or (not (= $generated@@198 $generated@@38)) (not true)) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@186 $generated@@198) $generated@@1)))) ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@186 $generated@@198) $generated@@1)))) ($generated@@16 ($generated@@105 $generated@@34 $generated@@32 $generated@@12 $generated@@192 $generated@@198 $generated@@199))))) (=> (and (and ($generated@@142 $generated@@185 $generated@@186 $generated@@187) (= $generated@@188 $generated@@190)) (and (= $generated@@189 $generated@@191) (= (ControlFlow 0 6) 3))) $generated@@195)))))))
(let (($generated@@200  (=> (and (not ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@185 $generated@@187) $generated@@36)))) (= $generated@@190 true)) (and (=> (= (ControlFlow 0 10) 6) $generated@@197) (=> (= (ControlFlow 0 10) 8) $generated@@196)))))
(let (($generated@@201  (=> ($generated@@16 ($generated@@30 $generated@@12 ($generated@@31 $generated@@32 $generated@@33 ($generated@@31 $generated@@34 ($generated@@35 $generated@@32 $generated@@33) $generated@@185 $generated@@187) $generated@@36))) (=> (and (= $generated@@193 ($generated@@16 ($generated@@105 $generated@@34 $generated@@32 $generated@@12 $generated@@192 $generated@@187 $generated@@36))) (= $generated@@190 $generated@@193)) (and (=> (= (ControlFlow 0 9) 6) $generated@@197) (=> (= (ControlFlow 0 9) 8) $generated@@196))))))
(let (($generated@@202  (=> ($generated@@16 ($generated@@99 $generated@@12 ($generated@@15 true))) (and (=> (= (ControlFlow 0 11) (- 0 12)) ($generated@@67 $generated@@34 $generated@@187 $generated@@71 $generated@@185)) (=> ($generated@@67 $generated@@34 $generated@@187 $generated@@71 $generated@@185) (and (=> (= (ControlFlow 0 11) 9) $generated@@201) (=> (= (ControlFlow 0 11) 10) $generated@@200)))))))
(let (($generated@@203  (=> (and (and (not ($generated@@16 ($generated@@99 $generated@@12 ($generated@@15 true)))) (= $generated@@188 true)) (and (= $generated@@189 true) (= (ControlFlow 0 5) 3))) $generated@@195)))
(let (($generated@@204 true))
(let (($generated@@205  (=> (= $generated@@192 ($generated@@106 $generated@@38 $generated@@186 $generated@@1 $generated@@186 $generated@@1)) (and (and (=> (= (ControlFlow 0 13) 1) $generated@@204) (=> (= (ControlFlow 0 13) 11) $generated@@202)) (=> (= (ControlFlow 0 13) 5) $generated@@203)))))
(let (($generated@@206  (=> (and ($generated@@37 $generated@@185) ($generated@@76 $generated@@185)) (=> (and (and (and (or (not (= $generated@@187 $generated@@38)) (not true)) (and ($generated@@39 $generated@@34 $generated@@187 $generated@@71) ($generated@@67 $generated@@34 $generated@@187 $generated@@71 $generated@@194))) (= 2 $generated@@140)) (and (and (= $generated@@194 $generated@@185) (and ($generated@@77 $generated@@194 $generated@@186) ($generated@@37 $generated@@186))) (= (ControlFlow 0 14) 13))) $generated@@205))))
$generated@@206)))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
