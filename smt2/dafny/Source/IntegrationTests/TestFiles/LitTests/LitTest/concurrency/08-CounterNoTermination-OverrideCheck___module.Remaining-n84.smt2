(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 (T@T T@U) T@U)
(declare-fun $generated@@48 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@49 () T@T)
(declare-fun $generated@@50 () T@T)
(declare-fun $generated@@51 (T@T T@T) T@T)
(declare-fun $generated@@52 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@54 (T@T) T@T)
(declare-fun $generated@@78 (T@T T@U) T@U)
(declare-fun $generated@@81 (T@U T@U) Bool)
(declare-fun $generated@@85 (T@T T@U) T@U)
(declare-fun $generated@@88 () Int)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@90 (T@U) Bool)
(declare-fun $generated@@91 (T@U T@U) Bool)
(declare-fun $generated@@94 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@96 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@136 (T@U T@U) Bool)
(declare-fun $generated@@137 (T@U T@U) Bool)
(declare-fun $generated@@144 (T@U) T@U)
(declare-fun $generated@@145 (T@U) T@U)
(declare-fun $generated@@146 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert ($generated@@25 $generated@@26))
(assert (forall (($generated@@29 T@U) ) (!  (not ($generated@@27 $generated@@28 $generated@@29))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 $generated@@26)  (or (= $generated@@34 $generated@@32) (= ($generated@@33 $generated@@34) $generated@@26)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 $generated@@26))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@38 $generated@@36 $generated@@39) ($generated@@35 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@35 $generated@@31 $generated@@38 $generated@@36 $generated@@39))
 :pattern ( ($generated@@35 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@42 $generated@@40 $generated@@43) ($generated@@35 $generated@@31 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@35 $generated@@31 $generated@@42 $generated@@40 $generated@@43))
 :pattern ( ($generated@@35 $generated@@31 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@45 $generated@@44 $generated@@46) ($generated@@35 $generated@@31 $generated@@45 $generated@@26 $generated@@46))
 :pattern ( ($generated@@35 $generated@@31 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@35 $generated@@31 $generated@@45 $generated@@26 $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@55 T@T) ($generated@@56 T@T) ($generated@@57 T@U) ($generated@@58 T@U) ($generated@@59 T@U) ) (! (= ($generated@@48 $generated@@55 $generated@@56 ($generated@@52 $generated@@55 $generated@@56 $generated@@58 $generated@@59 $generated@@57) $generated@@59) $generated@@57)
 :weight 0
)) (forall (($generated@@60 T@T) ($generated@@61 T@T) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ($generated@@65 T@U) ) (!  (or (= $generated@@64 $generated@@65) (= ($generated@@48 $generated@@60 $generated@@61 ($generated@@52 $generated@@60 $generated@@61 $generated@@63 $generated@@64 $generated@@62) $generated@@65) ($generated@@48 $generated@@60 $generated@@61 $generated@@63 $generated@@65)))
 :weight 0
))) (= ($generated@@9 $generated@@49) 4)) (= ($generated@@9 $generated@@50) 5)) (forall (($generated@@66 T@T) ($generated@@67 T@T) ) (= ($generated@@9 ($generated@@51 $generated@@66 $generated@@67)) 6))) (forall (($generated@@68 T@T) ($generated@@69 T@T) ) (! (= ($generated@@53 ($generated@@51 $generated@@68 $generated@@69)) $generated@@68)
 :pattern ( ($generated@@51 $generated@@68 $generated@@69))
))) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (! (= ($generated@@54 ($generated@@51 $generated@@70 $generated@@71)) $generated@@71)
 :pattern ( ($generated@@51 $generated@@70 $generated@@71))
))))
(assert (forall (($generated@@72 T@U) ($generated@@73 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@72 $generated@@37 $generated@@73)  (or (= $generated@@72 $generated@@32) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@73 $generated@@72) $generated)))))
 :pattern ( ($generated@@35 $generated@@31 $generated@@72 $generated@@37 $generated@@73))
)))
(assert (forall (($generated@@74 T@U) ($generated@@75 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@74 $generated@@41 $generated@@75)  (or (= $generated@@74 $generated@@32) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@75 $generated@@74) $generated)))))
 :pattern ( ($generated@@35 $generated@@31 $generated@@74 $generated@@41 $generated@@75))
)))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@76 $generated@@26 $generated@@77)  (or (= $generated@@76 $generated@@32) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@77 $generated@@76) $generated)))))
 :pattern ( ($generated@@35 $generated@@31 $generated@@76 $generated@@26 $generated@@77))
)))
(assert (forall (($generated@@79 T@U) ($generated@@80 T@T) ) (! (= ($generated@@78 $generated@@80 $generated@@79) $generated@@79)
 :pattern ( ($generated@@78 $generated@@80 $generated@@79))
)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@81 $generated@@82 $generated@@83) (forall (($generated@@84 T@U) ) (!  (=> ($generated@@27 $generated@@82 $generated@@84) ($generated@@27 $generated@@83 $generated@@84))
 :pattern ( ($generated@@27 $generated@@82 $generated@@84))
 :pattern ( ($generated@@27 $generated@@83 $generated@@84))
)))
 :pattern ( ($generated@@81 $generated@@82 $generated@@83))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@85 $generated@@87 ($generated@@47 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@47 $generated@@87 $generated@@86))
)))
(assert  (=> (<= 0 $generated@@88) (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (!  (=> (or ($generated@@91 $generated@@92 $generated@@93) (and (< 0 $generated@@88) (and ($generated@@90 $generated@@92) (and (or (not (= $generated@@93 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@93 $generated@@44) ($generated@@35 $generated@@31 $generated@@93 $generated@@44 $generated@@92)))))) (= ($generated@@89 $generated@@92 $generated@@93) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@13  (and true true))))))
 :pattern ( ($generated@@89 $generated@@92 $generated@@93) ($generated@@90 $generated@@92))
))))
(assert  (and (forall (($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@T) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@94 $generated@@97 $generated@@98 $generated@@99 ($generated@@96 $generated@@97 $generated@@98 $generated@@99 $generated@@101 $generated@@102 $generated@@103 $generated@@100) $generated@@102 $generated@@103) $generated@@100)
 :weight 0
)) (and (forall (($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@T) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ($generated@@112 T@U) ) (!  (or (= $generated@@109 $generated@@111) (= ($generated@@94 $generated@@104 $generated@@105 $generated@@106 ($generated@@96 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@109 $generated@@110 $generated@@107) $generated@@111 $generated@@112) ($generated@@94 $generated@@104 $generated@@105 $generated@@106 $generated@@108 $generated@@111 $generated@@112)))
 :weight 0
)) (forall (($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@T) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ($generated@@121 T@U) ) (!  (or (= $generated@@119 $generated@@121) (= ($generated@@94 $generated@@113 $generated@@114 $generated@@115 ($generated@@96 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@118 $generated@@119 $generated@@116) $generated@@120 $generated@@121) ($generated@@94 $generated@@113 $generated@@114 $generated@@115 $generated@@117 $generated@@120 $generated@@121)))
 :weight 0
)))))
(assert (forall (($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ($generated@@128 T@U) ) (! (= ($generated@@14 ($generated@@94 $generated@@31 $generated@@49 $generated@@10 ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))  (=> (and (or (not (= $generated@@127 $generated@@122)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@123 $generated@@127) $generated@@124)))) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@125 $generated@@127) $generated@@126)))))
 :pattern ( ($generated@@94 $generated@@31 $generated@@49 $generated@@10 ($generated@@95 $generated@@122 $generated@@123 $generated@@124 $generated@@125 $generated@@126) $generated@@127 $generated@@128))
)))
(assert (forall (($generated@@129 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@129 $generated@@36)  (and ($generated@@30 $generated@@31 $generated@@129 $generated@@37) (or (not (= $generated@@129 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@129 $generated@@36))
 :pattern ( ($generated@@30 $generated@@31 $generated@@129 $generated@@37))
)))
(assert (forall (($generated@@130 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@130 $generated@@40)  (and ($generated@@30 $generated@@31 $generated@@130 $generated@@41) (or (not (= $generated@@130 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@130 $generated@@40))
 :pattern ( ($generated@@30 $generated@@31 $generated@@130 $generated@@41))
)))
(assert (forall (($generated@@131 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@131 $generated@@44)  (and ($generated@@30 $generated@@31 $generated@@131 $generated@@26) (or (not (= $generated@@131 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@131 $generated@@44))
 :pattern ( ($generated@@30 $generated@@31 $generated@@131 $generated@@26))
)))
(assert (forall (($generated@@132 T@U) ($generated@@133 T@U) ) (!  (=> ($generated@@35 $generated@@31 $generated@@132 $generated@@41 $generated@@133) ($generated@@35 $generated@@31 $generated@@132 $generated@@37 $generated@@133))
 :pattern ( ($generated@@35 $generated@@31 $generated@@132 $generated@@41 $generated@@133))
)))
(assert (forall (($generated@@134 T@U) ($generated@@135 T@U) ) (!  (=> ($generated@@35 $generated@@31 $generated@@134 $generated@@26 $generated@@135) ($generated@@35 $generated@@31 $generated@@134 $generated@@41 $generated@@135))
 :pattern ( ($generated@@35 $generated@@31 $generated@@134 $generated@@26 $generated@@135))
)))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@138 T@U) ($generated@@139 T@U) ) (!  (=> (or ($generated@@137 $generated@@138 $generated@@139) (and (< 1 $generated@@88) (and ($generated@@90 $generated@@138) (and (or (not (= $generated@@139 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@139 $generated@@44) ($generated@@35 $generated@@31 $generated@@139 $generated@@44 $generated@@138)))))) (=> ($generated@@136 $generated@@138 $generated@@139) ($generated@@89 $generated@@138 $generated@@139)))
 :pattern ( ($generated@@136 $generated@@138 $generated@@139))
))))
(assert (forall (($generated@@140 T@U) ($generated@@141 T@T) ) (! (= ($generated@@47 $generated@@141 ($generated@@85 $generated@@141 $generated@@140)) $generated@@140)
 :pattern ( ($generated@@85 $generated@@141 $generated@@140))
)))
(assert (forall (($generated@@142 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@142 $generated@@41) ($generated@@30 $generated@@31 $generated@@142 $generated@@37))
 :pattern ( ($generated@@30 $generated@@31 $generated@@142 $generated@@41))
)))
(assert (forall (($generated@@143 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@143 $generated@@26) ($generated@@30 $generated@@31 $generated@@143 $generated@@41))
 :pattern ( ($generated@@30 $generated@@31 $generated@@143 $generated@@26))
)))
(assert (= ($generated@@144 $generated@@40) $generated@@0))
(assert (= ($generated@@145 $generated@@40) $generated@@6))
(assert (= ($generated@@144 $generated@@36) $generated@@1))
(assert (= ($generated@@145 $generated@@36) $generated@@7))
(assert (= ($generated@@144 $generated@@37) $generated@@2))
(assert (= ($generated@@145 $generated@@37) $generated@@7))
(assert (= ($generated@@144 $generated@@41) $generated@@3))
(assert (= ($generated@@145 $generated@@41) $generated@@6))
(assert (= ($generated@@144 $generated@@26) $generated@@4))
(assert (= ($generated@@145 $generated@@26) $generated@@8))
(assert (= ($generated@@144 $generated@@44) $generated@@5))
(assert (= ($generated@@145 $generated@@44) $generated@@8))
(assert (forall (($generated@@147 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@147 $generated@@37)  (or (= $generated@@147 $generated@@32) ($generated@@146 ($generated@@33 $generated@@147))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@147 $generated@@37))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@148 $generated@@41)  (or (= $generated@@148 $generated@@32) ($generated@@25 ($generated@@33 $generated@@148))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@148 $generated@@41))
)))
(assert (forall (($generated@@149 T@U) ($generated@@150 T@T) ) (! (= ($generated@@85 $generated@@150 ($generated@@78 $generated@@150 $generated@@149)) ($generated@@78 $generated@@50 ($generated@@85 $generated@@150 $generated@@149)))
 :pattern ( ($generated@@85 $generated@@150 ($generated@@78 $generated@@150 $generated@@149)))
)))
(assert  (=> (<= 1 $generated@@88) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or ($generated@@137 $generated@@151 $generated@@152) (and (< 1 $generated@@88) (and ($generated@@90 $generated@@151) (and (or (not (= $generated@@152 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@152 $generated@@44) ($generated@@35 $generated@@31 $generated@@152 $generated@@44 $generated@@151)))))) (and (=> ($generated@@14 ($generated@@78 $generated@@10 ($generated@@13 true))) ($generated@@91 $generated@@151 $generated@@152)) (= ($generated@@136 $generated@@151 $generated@@152)  (and true ($generated@@89 $generated@@151 $generated@@152)))))
 :pattern ( ($generated@@136 $generated@@151 $generated@@152) ($generated@@90 $generated@@151))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@153 () T@T)
(declare-fun $generated@@154 () T@U)
(declare-fun $generated@@155 () T@U)
(declare-fun $generated@@156 () T@U)
(declare-fun $generated@@157 (T@U) Bool)
(assert (= ($generated@@9 $generated@@153) 7))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@158  (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@81 ($generated@@78 $generated@@153 $generated@@28) ($generated@@78 $generated@@153 $generated@@28))) (=> ($generated@@81 ($generated@@78 $generated@@153 $generated@@28) ($generated@@78 $generated@@153 $generated@@28)) (=> (= $generated@@154 ($generated@@95 $generated@@32 $generated@@155 $generated $generated@@155 $generated)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@159 T@U) ($generated@@160 T@U) )  (=> (and (and (or (not (= $generated@@159 $generated@@32)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@155 $generated@@159) $generated)))) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@155 $generated@@159) $generated)))) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@155 $generated@@159) $generated)))))) (=> (forall (($generated@@161 T@U) ($generated@@162 T@U) )  (=> (and (and (or (not (= $generated@@161 $generated@@32)) (not true)) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@155 $generated@@161) $generated)))) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@155 $generated@@161) $generated)))) ($generated@@14 ($generated@@47 $generated@@10 ($generated@@48 $generated@@49 $generated@@50 ($generated@@48 $generated@@31 ($generated@@51 $generated@@49 $generated@@50) $generated@@155 $generated@@161) $generated))))) (=> (=> ($generated@@136 $generated@@155 $generated@@156) ($generated@@89 $generated@@155 $generated@@156)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@136 $generated@@155 $generated@@156) (=> ($generated@@91 $generated@@155 $generated@@156) (or ($generated@@89 $generated@@155 $generated@@156) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@13 true))))))) (=> (=> ($generated@@136 $generated@@155 $generated@@156) (=> ($generated@@91 $generated@@155 $generated@@156) (or ($generated@@89 $generated@@155 $generated@@156) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@13 true)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@136 $generated@@155 $generated@@156) (=> ($generated@@91 $generated@@155 $generated@@156) (or ($generated@@89 $generated@@155 $generated@@156) ($generated@@14 ($generated@@78 $generated@@10 ($generated@@13 true)))))))))))))))))
(let (($generated@@163  (=> (and ($generated@@90 $generated@@155) ($generated@@157 $generated@@155)) (=> (and (and (or (not (= $generated@@156 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@156 $generated@@44) ($generated@@35 $generated@@31 $generated@@156 $generated@@44 $generated@@155))) (and (= 1 $generated@@88) (= (ControlFlow 0 6) 2))) $generated@@158))))
$generated@@163)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
