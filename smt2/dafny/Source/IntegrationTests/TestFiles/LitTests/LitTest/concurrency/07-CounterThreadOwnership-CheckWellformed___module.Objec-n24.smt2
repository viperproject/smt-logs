(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 () T@U)
(declare-fun $generated@@12 (T@T) Int)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 () T@T)
(declare-fun $generated@@16 (Bool) T@U)
(declare-fun $generated@@17 (T@U) Bool)
(declare-fun $generated@@18 (Int) T@U)
(declare-fun $generated@@19 (T@U) Int)
(declare-fun $generated@@20 (Real) T@U)
(declare-fun $generated@@21 (T@U) Real)
(declare-fun $generated@@28 (T@U) Int)
(declare-fun $generated@@29 (T@U) T@U)
(declare-fun $generated@@30 (T@U) T@U)
(declare-fun $generated@@31 () Int)
(declare-fun $generated@@32 (T@U T@U) Bool)
(declare-fun $generated@@33 (T@U) Bool)
(declare-fun $generated@@34 (T@U T@U) Bool)
(declare-fun $generated@@35 () T@U)
(declare-fun $generated@@36 (T@T T@U T@U) Bool)
(declare-fun $generated@@37 () T@T)
(declare-fun $generated@@38 () T@U)
(declare-fun $generated@@39 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@40 (T@U) T@U)
(declare-fun $generated@@41 (T@U T@U) Bool)
(declare-fun $generated@@42 (T@T T@U) T@U)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@45 () T@T)
(declare-fun $generated@@46 () T@T)
(declare-fun $generated@@47 (T@T T@T) T@T)
(declare-fun $generated@@48 () T@U)
(declare-fun $generated@@49 (T@T T@U) T@U)
(declare-fun $generated@@50 () T@U)
(declare-fun $generated@@51 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@52 (T@T) T@T)
(declare-fun $generated@@53 (T@T) T@T)
(declare-fun $generated@@74 () T@U)
(declare-fun $generated@@77 () T@U)
(declare-fun $generated@@80 (T@U T@U) T@U)
(declare-fun $generated@@81 (T@U) Bool)
(declare-fun $generated@@88 (T@U) T@U)
(declare-fun $generated@@89 (T@U T@U) Bool)
(declare-fun $generated@@93 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@94 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@95 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@128 (T@U T@U T@U) Bool)
(declare-fun $generated@@142 (T@U T@U) Bool)
(declare-fun $generated@@143 (T@U T@U) Bool)
(declare-fun $generated@@146 (T@U) T@U)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@164 (T@U) T@U)
(declare-fun $generated@@165 (T@U) Bool)
(declare-fun $generated@@166 (T@U) T@U)
(declare-fun $generated@@168 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@13) 0) (= ($generated@@12 $generated@@14) 1)) (= ($generated@@12 $generated@@15) 2)) (forall (($generated@@22 Bool) ) (! (= ($generated@@17 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 T@U) ) (! (= ($generated@@16 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 Int) ) (! (= ($generated@@19 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 T@U) ) (! (= ($generated@@18 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 Real) ) (! (= ($generated@@21 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))) (forall (($generated@@27 T@U) ) (! (= ($generated@@20 ($generated@@21 $generated@@27)) $generated@@27)
 :pattern ( ($generated@@21 $generated@@27))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10 $generated@@11)
)
(assert (= ($generated@@28 $generated@@2) 0))
(assert (= ($generated@@29 $generated) $generated@@0))
(assert (= ($generated@@30 $generated@@2) $generated@@3))
(assert  (and (and (and (and (and (and (and (and (= ($generated@@12 $generated@@37) 3) (= ($generated@@12 $generated@@43) 4)) (forall (($generated@@54 T@T) ($generated@@55 T@T) ($generated@@56 T@U) ($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@44 $generated@@54 $generated@@55 ($generated@@51 $generated@@54 $generated@@55 $generated@@57 $generated@@58 $generated@@56) $generated@@58) $generated@@56)
 :weight 0
))) (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ($generated@@64 T@U) ) (!  (or (= $generated@@63 $generated@@64) (= ($generated@@44 $generated@@59 $generated@@60 ($generated@@51 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@64) ($generated@@44 $generated@@59 $generated@@60 $generated@@62 $generated@@64)))
 :weight 0
))) (= ($generated@@12 $generated@@45) 5)) (= ($generated@@12 $generated@@46) 6)) (forall (($generated@@65 T@T) ($generated@@66 T@T) ) (= ($generated@@12 ($generated@@47 $generated@@65 $generated@@66)) 7))) (forall (($generated@@67 T@T) ($generated@@68 T@T) ) (! (= ($generated@@52 ($generated@@47 $generated@@67 $generated@@68)) $generated@@67)
 :pattern ( ($generated@@47 $generated@@67 $generated@@68))
))) (forall (($generated@@69 T@T) ($generated@@70 T@T) ) (! (= ($generated@@53 ($generated@@47 $generated@@69 $generated@@70)) $generated@@70)
 :pattern ( ($generated@@47 $generated@@69 $generated@@70))
))))
(assert  (=> (<= 2 $generated@@31) (forall (($generated@@71 T@U) ($generated@@72 T@U) ) (!  (=> (or ($generated@@34 $generated@@71 $generated@@72) (and (< 2 $generated@@31) (and ($generated@@33 $generated@@71) (and (or (not (= $generated@@72 $generated@@35)) (not true)) (and ($generated@@36 $generated@@37 $generated@@72 $generated@@38) ($generated@@39 $generated@@37 $generated@@72 $generated@@38 $generated@@71)))))) (= ($generated@@32 $generated@@71 $generated@@72) (forall (($generated@@73 T@U) ) (!  (=> (and ($generated@@36 $generated@@37 $generated@@73 $generated@@50) ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@71 $generated@@72) $generated@@48)) ($generated@@49 $generated@@37 $generated@@73))) (and (= ($generated@@40 $generated@@73) $generated@@72) (or (not (= $generated@@73 $generated@@72)) (not true))))
 :pattern ( ($generated@@40 $generated@@73))
 :pattern ( ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@71 $generated@@72) $generated@@48)) ($generated@@49 $generated@@37 $generated@@73)))
))))
 :pattern ( ($generated@@32 $generated@@71 $generated@@72) ($generated@@33 $generated@@71))
))))
(assert (forall (($generated@@75 T@U) ($generated@@76 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@75 $generated@@38 $generated@@76) ($generated@@39 $generated@@37 $generated@@75 $generated@@74 $generated@@76))
 :pattern ( ($generated@@39 $generated@@37 $generated@@75 $generated@@38 $generated@@76))
 :pattern ( ($generated@@39 $generated@@37 $generated@@75 $generated@@74 $generated@@76))
)))
(assert (forall (($generated@@78 T@U) ($generated@@79 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@78 $generated@@50 $generated@@79) ($generated@@39 $generated@@37 $generated@@78 $generated@@77 $generated@@79))
 :pattern ( ($generated@@39 $generated@@37 $generated@@78 $generated@@50 $generated@@79))
 :pattern ( ($generated@@39 $generated@@37 $generated@@78 $generated@@77 $generated@@79))
)))
(assert (= ($generated@@28 $generated@@48) 0))
(assert (= ($generated@@80 $generated@@6 $generated@@11) $generated@@48))
(assert  (not ($generated@@81 $generated@@48)))
(assert (forall (($generated@@82 T@U) ($generated@@83 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@82 $generated@@74 $generated@@83)  (or (= $generated@@82 $generated@@35) ($generated@@17 ($generated@@42 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@83 $generated@@82) $generated@@2)))))
 :pattern ( ($generated@@39 $generated@@37 $generated@@82 $generated@@74 $generated@@83))
)))
(assert (forall (($generated@@84 T@U) ($generated@@85 T@U) ) (! (= ($generated@@39 $generated@@37 $generated@@84 $generated@@77 $generated@@85)  (or (= $generated@@84 $generated@@35) ($generated@@17 ($generated@@42 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@85 $generated@@84) $generated@@2)))))
 :pattern ( ($generated@@39 $generated@@37 $generated@@84 $generated@@77 $generated@@85))
)))
(assert (forall (($generated@@86 T@U) ($generated@@87 T@T) ) (! (= ($generated@@49 $generated@@87 ($generated@@42 $generated@@87 $generated@@86)) $generated@@86)
 :pattern ( ($generated@@42 $generated@@87 $generated@@86))
)))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@36 $generated@@43 $generated@@90 ($generated@@88 $generated@@91)) (forall (($generated@@92 T@U) ) (!  (=> ($generated@@41 $generated@@90 $generated@@92) ($generated@@89 $generated@@92 $generated@@91))
 :pattern ( ($generated@@41 $generated@@90 $generated@@92))
)))
 :pattern ( ($generated@@36 $generated@@43 $generated@@90 ($generated@@88 $generated@@91)))
)))
(assert  (and (forall (($generated@@96 T@T) ($generated@@97 T@T) ($generated@@98 T@T) ($generated@@99 T@U) ($generated@@100 T@U) ($generated@@101 T@U) ($generated@@102 T@U) ) (! (= ($generated@@93 $generated@@96 $generated@@97 $generated@@98 ($generated@@95 $generated@@96 $generated@@97 $generated@@98 $generated@@100 $generated@@101 $generated@@102 $generated@@99) $generated@@101 $generated@@102) $generated@@99)
 :weight 0
)) (and (forall (($generated@@103 T@T) ($generated@@104 T@T) ($generated@@105 T@T) ($generated@@106 T@U) ($generated@@107 T@U) ($generated@@108 T@U) ($generated@@109 T@U) ($generated@@110 T@U) ($generated@@111 T@U) ) (!  (or (= $generated@@108 $generated@@110) (= ($generated@@93 $generated@@103 $generated@@104 $generated@@105 ($generated@@95 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@108 $generated@@109 $generated@@106) $generated@@110 $generated@@111) ($generated@@93 $generated@@103 $generated@@104 $generated@@105 $generated@@107 $generated@@110 $generated@@111)))
 :weight 0
)) (forall (($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@T) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ($generated@@118 T@U) ($generated@@119 T@U) ($generated@@120 T@U) ) (!  (or (= $generated@@118 $generated@@120) (= ($generated@@93 $generated@@112 $generated@@113 $generated@@114 ($generated@@95 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@117 $generated@@118 $generated@@115) $generated@@119 $generated@@120) ($generated@@93 $generated@@112 $generated@@113 $generated@@114 $generated@@116 $generated@@119 $generated@@120)))
 :weight 0
)))))
(assert (forall (($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ($generated@@127 T@U) ) (! (= ($generated@@17 ($generated@@93 $generated@@37 $generated@@45 $generated@@13 ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))  (=> (and (or (not (= $generated@@126 $generated@@121)) (not true)) ($generated@@17 ($generated@@42 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@122 $generated@@126) $generated@@123)))) ($generated@@17 ($generated@@42 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@124 $generated@@126) $generated@@125)))))
 :pattern ( ($generated@@93 $generated@@37 $generated@@45 $generated@@13 ($generated@@94 $generated@@121 $generated@@122 $generated@@123 $generated@@124 $generated@@125) $generated@@126 $generated@@127))
)))
(assert ($generated@@81 $generated@@2))
(assert (forall (($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@T) ) (! (= ($generated@@128 ($generated@@49 $generated@@132 $generated@@129) $generated@@130 $generated@@131) ($generated@@39 $generated@@132 $generated@@129 $generated@@130 $generated@@131))
 :pattern ( ($generated@@128 ($generated@@49 $generated@@132 $generated@@129) $generated@@130 $generated@@131))
)))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@133 T@U) ($generated@@134 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@133) (and (or (not (= $generated@@134 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@134 $generated@@77))) ($generated@@17 ($generated@@42 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@133 $generated@@134) $generated@@2)))) ($generated@@39 $generated@@37 ($generated@@40 $generated@@134) $generated@@38 $generated@@133))
 :pattern ( ($generated@@40 $generated@@134) ($generated@@42 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@133 $generated@@134) $generated@@2)))
))))
(assert  (=> (< 1 $generated@@31) (forall (($generated@@135 T@U) ) (!  (=> (and (or (not (= $generated@@135 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@135 $generated@@77)) ($generated@@36 $generated@@37 ($generated@@40 $generated@@135) $generated@@38))
 :pattern ( ($generated@@40 $generated@@135))
))))
(assert (forall (($generated@@136 T@U) ) (!  (=> ($generated@@89 $generated@@136 $generated@@38) (and (= ($generated@@49 $generated@@37 ($generated@@42 $generated@@37 $generated@@136)) $generated@@136) ($generated@@36 $generated@@37 ($generated@@42 $generated@@37 $generated@@136) $generated@@38)))
 :pattern ( ($generated@@89 $generated@@136 $generated@@38))
)))
(assert (forall (($generated@@137 T@U) ) (!  (=> ($generated@@89 $generated@@137 $generated@@50) (and (= ($generated@@49 $generated@@37 ($generated@@42 $generated@@37 $generated@@137)) $generated@@137) ($generated@@36 $generated@@37 ($generated@@42 $generated@@37 $generated@@137) $generated@@50)))
 :pattern ( ($generated@@89 $generated@@137 $generated@@50))
)))
(assert (forall (($generated@@138 T@U) ) (!  (=> ($generated@@89 $generated@@138 $generated@@74) (and (= ($generated@@49 $generated@@37 ($generated@@42 $generated@@37 $generated@@138)) $generated@@138) ($generated@@36 $generated@@37 ($generated@@42 $generated@@37 $generated@@138) $generated@@74)))
 :pattern ( ($generated@@89 $generated@@138 $generated@@74))
)))
(assert (forall (($generated@@139 T@U) ) (!  (=> ($generated@@89 $generated@@139 $generated@@77) (and (= ($generated@@49 $generated@@37 ($generated@@42 $generated@@37 $generated@@139)) $generated@@139) ($generated@@36 $generated@@37 ($generated@@42 $generated@@37 $generated@@139) $generated@@77)))
 :pattern ( ($generated@@89 $generated@@139 $generated@@77))
)))
(assert (forall (($generated@@140 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@140 $generated@@38)  (and ($generated@@36 $generated@@37 $generated@@140 $generated@@74) (or (not (= $generated@@140 $generated@@35)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@140 $generated@@38))
 :pattern ( ($generated@@36 $generated@@37 $generated@@140 $generated@@74))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@141 $generated@@50)  (and ($generated@@36 $generated@@37 $generated@@141 $generated@@77) (or (not (= $generated@@141 $generated@@35)) (not true))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@141 $generated@@50))
 :pattern ( ($generated@@36 $generated@@37 $generated@@141 $generated@@77))
)))
(assert  (=> (<= 3 $generated@@31) (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> (or ($generated@@143 $generated@@144 $generated@@145) (and (< 3 $generated@@31) (and ($generated@@33 $generated@@144) (and (or (not (= $generated@@145 $generated@@35)) (not true)) (and ($generated@@36 $generated@@37 $generated@@145 $generated@@50) ($generated@@39 $generated@@37 $generated@@145 $generated@@50 $generated@@144)))))) (and (=> ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@144 ($generated@@40 $generated@@145)) $generated@@48)) ($generated@@49 $generated@@37 $generated@@145)) ($generated@@34 $generated@@144 ($generated@@40 $generated@@145))) (= ($generated@@142 $generated@@144 $generated@@145)  (and ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@144 ($generated@@40 $generated@@145)) $generated@@48)) ($generated@@49 $generated@@37 $generated@@145)) ($generated@@32 $generated@@144 ($generated@@40 $generated@@145))))))
 :pattern ( ($generated@@142 $generated@@144 $generated@@145) ($generated@@33 $generated@@144))
))))
(assert (forall (($generated@@147 T@U) ($generated@@148 T@U) ) (!  (and (= ($generated@@146 ($generated@@80 $generated@@147 $generated@@148)) $generated@@147) (= ($generated@@30 ($generated@@80 $generated@@147 $generated@@148)) $generated@@148))
 :pattern ( ($generated@@80 $generated@@147 $generated@@148))
)))
(assert (forall (($generated@@149 T@U) ) (!  (=> ($generated@@89 $generated@@149 $generated) (and (= ($generated@@49 $generated@@13 ($generated@@42 $generated@@13 $generated@@149)) $generated@@149) ($generated@@36 $generated@@13 ($generated@@42 $generated@@13 $generated@@149) $generated)))
 :pattern ( ($generated@@89 $generated@@149 $generated))
)))
(assert (forall (($generated@@150 T@U) ($generated@@151 T@U) ($generated@@152 T@T) ) (! (= ($generated@@89 ($generated@@49 $generated@@152 $generated@@150) $generated@@151) ($generated@@36 $generated@@152 $generated@@150 $generated@@151))
 :pattern ( ($generated@@89 ($generated@@49 $generated@@152 $generated@@150) $generated@@151))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ($generated@@155 T@U) ) (! (= ($generated@@39 $generated@@43 $generated@@153 ($generated@@88 $generated@@154) $generated@@155) (forall (($generated@@156 T@U) ) (!  (=> ($generated@@41 $generated@@153 $generated@@156) ($generated@@128 $generated@@156 $generated@@154 $generated@@155))
 :pattern ( ($generated@@41 $generated@@153 $generated@@156))
)))
 :pattern ( ($generated@@39 $generated@@43 $generated@@153 ($generated@@88 $generated@@154) $generated@@155))
)))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@157 ($generated@@88 $generated@@158)) $generated@@158)
 :pattern ( ($generated@@88 $generated@@158))
)))
(assert (forall (($generated@@159 T@U) ) (! (= ($generated@@29 ($generated@@88 $generated@@159)) $generated@@1)
 :pattern ( ($generated@@88 $generated@@159))
)))
(assert (forall (($generated@@160 T@U) ($generated@@161 T@T) ) (! (= ($generated@@42 $generated@@161 ($generated@@49 $generated@@161 $generated@@160)) $generated@@160)
 :pattern ( ($generated@@49 $generated@@161 $generated@@160))
)))
(assert (forall (($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> ($generated@@89 $generated@@162 ($generated@@88 $generated@@163)) (and (= ($generated@@49 $generated@@43 ($generated@@42 $generated@@43 $generated@@162)) $generated@@162) ($generated@@36 $generated@@43 ($generated@@42 $generated@@43 $generated@@162) ($generated@@88 $generated@@163))))
 :pattern ( ($generated@@89 $generated@@162 ($generated@@88 $generated@@163)))
)))
(assert (= ($generated@@29 $generated@@38) $generated@@4))
(assert (= ($generated@@164 $generated@@38) $generated@@9))
(assert (= ($generated@@29 $generated@@50) $generated@@5))
(assert (= ($generated@@164 $generated@@50) $generated@@10))
(assert (= ($generated@@29 $generated@@74) $generated@@7))
(assert (= ($generated@@164 $generated@@74) $generated@@9))
(assert (= ($generated@@29 $generated@@77) $generated@@8))
(assert (= ($generated@@164 $generated@@77) $generated@@10))
(assert (forall (($generated@@167 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@167 $generated@@74)  (or (= $generated@@167 $generated@@35) ($generated@@165 ($generated@@166 $generated@@167))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@167 $generated@@74))
)))
(assert (forall (($generated@@169 T@U) ) (! (= ($generated@@36 $generated@@37 $generated@@169 $generated@@77)  (or (= $generated@@169 $generated@@35) ($generated@@168 ($generated@@166 $generated@@169))))
 :pattern ( ($generated@@36 $generated@@37 $generated@@169 $generated@@77))
)))
(assert (forall (($generated@@170 T@U) ($generated@@171 T@U) ) (!  (=> (and (and ($generated@@33 $generated@@170) (and (or (not (= $generated@@171 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@171 $generated@@74))) ($generated@@17 ($generated@@42 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@170 $generated@@171) $generated@@2)))) ($generated@@39 $generated@@43 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@170 $generated@@171) $generated@@48)) ($generated@@88 $generated@@50) $generated@@170))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@170 $generated@@171) $generated@@48)))
)))
(assert (forall (($generated@@172 T@U) ($generated@@173 T@U) ) (!  (=> (and ($generated@@33 $generated@@172) (and (or (not (= $generated@@173 $generated@@35)) (not true)) ($generated@@36 $generated@@37 $generated@@173 $generated@@74))) ($generated@@36 $generated@@43 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) $generated@@48)) ($generated@@88 $generated@@50)))
 :pattern ( ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@172 $generated@@173) $generated@@48)))
)))
(assert (forall (($generated@@174 T@U) ($generated@@175 T@U) ) (! ($generated@@39 $generated@@13 $generated@@175 $generated $generated@@174)
 :pattern ( ($generated@@39 $generated@@13 $generated@@175 $generated $generated@@174))
)))
(assert (forall (($generated@@176 T@U) ) (! ($generated@@36 $generated@@13 $generated@@176 $generated)
 :pattern ( ($generated@@36 $generated@@13 $generated@@176 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@177 () T@U)
(declare-fun $generated@@178 () T@U)
(declare-fun $generated@@179 () Bool)
(declare-fun $generated@@180 () Bool)
(declare-fun $generated@@181 () Bool)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 11) (let (($generated@@184  (=> (= ($generated@@142 $generated@@177 $generated@@178)  (and ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@177 ($generated@@40 $generated@@178)) $generated@@48)) ($generated@@49 $generated@@37 $generated@@178)) ($generated@@32 $generated@@177 ($generated@@40 $generated@@178)))) (=> (and (=> ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@177 ($generated@@40 $generated@@178)) $generated@@48)) ($generated@@49 $generated@@37 $generated@@178)) ($generated@@34 $generated@@177 ($generated@@40 $generated@@178))) ($generated@@36 $generated@@13 ($generated@@16 ($generated@@142 $generated@@177 $generated@@178)) $generated)) (and (=> (= (ControlFlow 0 3) (- 0 4)) $generated@@179) (=> $generated@@179 (=> (= (ControlFlow 0 3) (- 0 2)) $generated@@180)))))))
(let (($generated@@185  (=> (not ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@177 ($generated@@40 $generated@@178)) $generated@@48)) ($generated@@49 $generated@@37 $generated@@178))) (=> (and (= $generated@@180 true) (= (ControlFlow 0 7) 3)) $generated@@184))))
(let (($generated@@186  (=> ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@177 ($generated@@40 $generated@@178)) $generated@@48)) ($generated@@49 $generated@@37 $generated@@178)) (and (=> (= (ControlFlow 0 5) (- 0 6)) (or (not (= ($generated@@40 $generated@@178) $generated@@35)) (not true))) (=> (or (not (= ($generated@@40 $generated@@178) $generated@@35)) (not true)) (=> ($generated@@128 ($generated@@49 $generated@@37 ($generated@@40 $generated@@178)) $generated@@74 $generated@@177) (=> (and (and (= $generated@@181 (forall (($generated@@187 T@U) ($generated@@188 T@U) )  (=> (and (and (or (not (= $generated@@187 $generated@@35)) (not true)) ($generated@@17 ($generated@@42 $generated@@13 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@177 $generated@@187) $generated@@2)))) (or (= $generated@@187 ($generated@@40 $generated@@178)) ($generated@@41 ($generated@@42 $generated@@43 ($generated@@44 $generated@@45 $generated@@46 ($generated@@44 $generated@@37 ($generated@@47 $generated@@45 $generated@@46) $generated@@177 ($generated@@40 $generated@@178)) $generated@@48)) ($generated@@49 $generated@@37 $generated@@187)))) ($generated@@17 ($generated@@93 $generated@@37 $generated@@45 $generated@@13 $generated@@182 $generated@@187 $generated@@188))))) ($generated@@34 $generated@@177 ($generated@@40 $generated@@178))) (and (= $generated@@180 $generated@@181) (= (ControlFlow 0 5) 3))) $generated@@184)))))))
(let (($generated@@189  (and (=> (= (ControlFlow 0 8) (- 0 9)) (or (not (= ($generated@@40 $generated@@178) $generated@@35)) (not true))) (=> (or (not (= ($generated@@40 $generated@@178) $generated@@35)) (not true)) (=> (= $generated@@179 ($generated@@17 ($generated@@93 $generated@@37 $generated@@45 $generated@@13 $generated@@182 ($generated@@40 $generated@@178) $generated@@48))) (and (=> (= (ControlFlow 0 8) 5) $generated@@186) (=> (= (ControlFlow 0 8) 7) $generated@@185)))))))
(let (($generated@@190 true))
(let (($generated@@191  (=> (= $generated@@182 ($generated@@94 $generated@@35 $generated@@177 $generated@@2 $generated@@177 $generated@@2)) (and (=> (= (ControlFlow 0 10) 1) $generated@@190) (=> (= (ControlFlow 0 10) 8) $generated@@189)))))
(let (($generated@@192  (=> (and ($generated@@33 $generated@@177) ($generated@@183 $generated@@177)) (=> (and (and (or (not (= $generated@@178 $generated@@35)) (not true)) (and ($generated@@36 $generated@@37 $generated@@178 $generated@@50) ($generated@@39 $generated@@37 $generated@@178 $generated@@50 $generated@@177))) (and (= 3 $generated@@31) (= (ControlFlow 0 11) 10))) $generated@@191))))
$generated@@192))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
