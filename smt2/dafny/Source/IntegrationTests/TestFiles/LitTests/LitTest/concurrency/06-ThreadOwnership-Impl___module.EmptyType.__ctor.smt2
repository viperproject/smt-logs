(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun TBool () T@U)
(declare-fun TagBool () T@U)
(declare-fun TagSet () T@U)
(declare-fun alloc () T@U)
(declare-fun allocName () T@U)
(declare-fun Tagclass._module.Universe () T@U)
(declare-fun Tagclass._module.NonOwnedObject () T@U)
(declare-fun Tagclass._module.OwnedObject () T@U)
(declare-fun class._module.Universe? () T@U)
(declare-fun Tagclass._module.Universe? () T@U)
(declare-fun Tagclass._module.Object () T@U)
(declare-fun Tagclass._module.Thread () T@U)
(declare-fun Tagclass._module.Object? () T@U)
(declare-fun Tagclass._module.NonOwnedObject? () T@U)
(declare-fun class._module.OwnedObject? () T@U)
(declare-fun Tagclass._module.OwnedObject? () T@U)
(declare-fun Tagclass._module.Thread? () T@U)
(declare-fun Tagclass._module.EmptyType? () T@U)
(declare-fun Tagclass._module.EmptyType () T@U)
(declare-fun tytagFamily$Universe () T@U)
(declare-fun tytagFamily$NonOwnedObject () T@U)
(declare-fun tytagFamily$OwnedObject () T@U)
(declare-fun tytagFamily$Object () T@U)
(declare-fun tytagFamily$Thread () T@U)
(declare-fun tytagFamily$EmptyType () T@U)
(declare-fun field$content () T@U)
(declare-fun field$owner () T@U)
(declare-fun field$closed () T@U)
(declare-fun Ctor (T@T) Int)
(declare-fun boolType () T@T)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun $IsHeapAnchor (T@U) Bool)
(declare-fun $HeapSucc (T@U T@U) Bool)
(declare-fun _module.Universe.multipleLegalTransitions (T@U T@U T@U T@U) Bool)
(declare-fun $IsGoodHeap (T@U) Bool)
(declare-fun null () T@U)
(declare-fun $Is (T@T T@U T@U) Bool)
(declare-fun refType () T@T)
(declare-fun Tclass._module.Universe () T@U)
(declare-fun $IsAlloc (T@T T@U T@U T@U) Bool)
(declare-fun |_module.Universe.multipleLegalTransitions#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun SetType () T@T)
(declare-fun TSet (T@U) T@U)
(declare-fun Tclass._module.Thread () T@U)
(declare-fun $Unbox (T@T T@U) T@U)
(declare-fun MapType0Select (T@T T@T T@U T@U) T@U)
(declare-fun FieldType () T@T)
(declare-fun BoxType () T@T)
(declare-fun MapType0Type (T@T T@T) T@T)
(declare-fun MapType0Store (T@T T@T T@U T@U T@U) T@U)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0TypeInv1 (T@T) T@T)
(declare-fun FDim (T@U) Int)
(declare-fun Tag (T@U) T@U)
(declare-fun DeclName (T@U) T@U)
(declare-fun |Set#UnionOne| (T@U T@U) T@U)
(declare-fun |Set#IsMember| (T@U T@U) Bool)
(declare-fun |Set#Union| (T@U T@U) T@U)
(declare-fun $FunctionContextHeight () Int)
(declare-fun _module.Universe.globalBaseInv (T@U T@U) Bool)
(declare-fun |_module.Universe.globalBaseInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.universe (T@U) T@U)
(declare-fun _module.Universe.content () T@U)
(declare-fun $Box (T@T T@U) T@U)
(declare-fun Tclass._module.Object () T@U)
(declare-fun _module.OwnedObject.closed () T@U)
(declare-fun _module.OwnedObject.owner () T@U)
(declare-fun Tclass._module.OwnedObject () T@U)
(declare-fun |Set#Difference| (T@U T@U) T@U)
(declare-fun implements$_module.NonOwnedObject (T@U) Bool)
(declare-fun Tclass._module.Thread? () T@U)
(declare-fun implements$_module.OwnedObject (T@U) Bool)
(declare-fun Tclass._module.EmptyType? () T@U)
(declare-fun |Set#Empty| () T@U)
(declare-fun _module.Universe.globalInv (T@U T@U) Bool)
(declare-fun |_module.Universe.globalInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.inv (T@U T@U) Bool)
(declare-fun |_module.Object.inv#canCall| (T@U T@U) Bool)
(declare-fun dtype (T@U) T@U)
(declare-fun _module.Universe.legalTransition (T@U T@U T@U T@U) Bool)
(declare-fun |_module.Universe.legalTransition#canCall| (T@U T@U T@U T@U) Bool)
(declare-fun Tclass._module.OwnedObject? () T@U)
(declare-fun $IsAllocBox (T@U T@U T@U) Bool)
(declare-fun Tclass._module.NonOwnedObject? () T@U)
(declare-fun Tclass._module.Object? () T@U)
(declare-fun Tclass._module.Universe? () T@U)
(declare-fun Tclass._module.NonOwnedObject () T@U)
(declare-fun Tclass._module.EmptyType () T@U)
(declare-fun FieldOfDecl (T@U T@U) T@U)
(declare-fun $IsGhostField (T@U) Bool)
(declare-fun _module.OwnedObject.baseUserInv (T@U T@U) Bool)
(declare-fun _module.EmptyType.baseUserInv (T@U T@U) Bool)
(declare-fun |_module.EmptyType.baseUserInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.localUserInv (T@U T@U) Bool)
(declare-fun _module.EmptyType.localUserInv (T@U T@U) Bool)
(declare-fun |_module.EmptyType.localUserInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.userInv (T@U T@U) Bool)
(declare-fun _module.EmptyType.userInv (T@U T@U) Bool)
(declare-fun |_module.EmptyType.userInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.localInv (T@U T@U) Bool)
(declare-fun _module.OwnedObject.localInv (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Thread.localInv (T@U T@U) Bool)
(declare-fun |_module.Thread.localInv#canCall| (T@U T@U) Bool)
(declare-fun _module.OwnedObject.inv (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.inv#canCall| (T@U T@U) Bool)
(declare-fun _module.Thread.inv (T@U T@U) Bool)
(declare-fun |_module.Thread.inv#canCall| (T@U T@U) Bool)
(declare-fun _module.Universe.globalInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Object.localInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Object.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.localInv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.userFieldsUnchanged (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.localUserInv2 (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.userInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Thread.localInv2 (T@U T@U T@U) Bool)
(declare-fun _module.Thread.inv2 (T@U T@U T@U) Bool)
(declare-fun _module.EmptyType.userFieldsUnchanged (T@U T@U T@U) Bool)
(declare-fun _module.EmptyType.localUserInv2 (T@U T@U T@U) Bool)
(declare-fun _module.EmptyType.userInv2 (T@U T@U T@U) Bool)
(declare-fun Lit (T@T T@U) T@U)
(declare-fun |Set#Subset| (T@U T@U) Bool)
(declare-fun _module.EmptyType.userFieldsOwnedBy (T@U T@U T@U) Bool)
(declare-fun |_module.EmptyType.userFieldsOwnedBy#canCall| (T@U T@U T@U) Bool)
(declare-fun |Set#Disjoint| (T@U T@U) Bool)
(declare-fun $IsBox (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localUserInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun $HeapSuccGhost (T@U T@U) Bool)
(declare-fun MapType1Select (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun |lambda#22| (T@U T@U T@U T@U) T@U)
(declare-fun MapType1Store (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun |_module.Thread.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.EmptyType.userFieldsUnchanged#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.EmptyType.localUserInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Thread.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun _module.OwnedObject.userFieldsOwnedBy (T@U T@U T@U) Bool)
(declare-fun |_module.EmptyType.userInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.userFieldsOwnedBy#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Object.baseInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.baseInv (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.baseUserInv#canCall| (T@U T@U) Bool)
(declare-fun |_module.OwnedObject.localUserInv#canCall| (T@U T@U) Bool)
(declare-fun _module.Object.objectGlobalInv (T@U T@U) Bool)
(declare-fun |_module.Object.objectGlobalInv#canCall| (T@U T@U) Bool)
(declare-fun |Set#Equal| (T@U T@U) Bool)
(declare-fun DeclType (T@U) T@U)
(declare-fun |_module.OwnedObject.userInv#canCall| (T@U T@U) Bool)
(declare-fun Inv0_TSet (T@U) T@U)
(declare-fun |_module.Object.inv2#canCall| (T@U T@U T@U) Bool)
(declare-fun TagFamily (T@U) T@U)
(declare-fun implements$_module.Universe (T@U) Bool)
(declare-fun implements$_module.Object (T@U) Bool)
(declare-fun |_module.Universe.globalInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.userInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.OwnedObject.userFieldsUnchanged#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Object.localInv2#canCall| (T@U T@U T@U) Bool)
(declare-fun |_module.Object.localInv#canCall| (T@U T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= (Ctor boolType) 0) (= (Ctor intType) 1)) (= (Ctor realType) 2)) (forall ((arg0 Bool) ) (! (= (U_2_bool (bool_2_U arg0)) arg0)
 :pattern ( (bool_2_U arg0))
))) (forall ((x T@U) ) (! (= (bool_2_U (U_2_bool x)) x)
 :pattern ( (U_2_bool x))
))) (forall ((arg0@@0 Int) ) (! (= (U_2_int (int_2_U arg0@@0)) arg0@@0)
 :pattern ( (int_2_U arg0@@0))
))) (forall ((x@@0 T@U) ) (! (= (int_2_U (U_2_int x@@0)) x@@0)
 :pattern ( (U_2_int x@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@1 T@U) ) (! (= (real_2_U (U_2_real x@@1)) x@@1)
 :pattern ( (U_2_real x@@1))
))))
(assert (distinct TBool TagBool TagSet alloc allocName Tagclass._module.Universe Tagclass._module.NonOwnedObject Tagclass._module.OwnedObject class._module.Universe? Tagclass._module.Universe? Tagclass._module.Object Tagclass._module.Thread Tagclass._module.Object? Tagclass._module.NonOwnedObject? class._module.OwnedObject? Tagclass._module.OwnedObject? Tagclass._module.Thread? Tagclass._module.EmptyType? Tagclass._module.EmptyType tytagFamily$Universe tytagFamily$NonOwnedObject tytagFamily$OwnedObject tytagFamily$Object tytagFamily$Thread tytagFamily$EmptyType field$content field$owner field$closed)
)
(assert  (and (and (and (and (and (and (and (and (= (Ctor refType) 3) (= (Ctor SetType) 4)) (forall ((t0 T@T) (t1 T@T) (val T@U) (m T@U) (x0 T@U) ) (! (= (MapType0Select t0 t1 (MapType0Store t0 t1 m x0 val) x0) val)
 :weight 0
))) (forall ((u0 T@T) (u1 T@T) (val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (y0 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select u0 u1 (MapType0Store u0 u1 m@@0 x0@@0 val@@0) y0) (MapType0Select u0 u1 m@@0 y0)))
 :weight 0
))) (= (Ctor FieldType) 5)) (= (Ctor BoxType) 6)) (forall ((arg0@@2 T@T) (arg1 T@T) ) (= (Ctor (MapType0Type arg0@@2 arg1)) 7))) (forall ((arg0@@3 T@T) (arg1@@0 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@3 arg1@@0)) arg0@@3)
 :pattern ( (MapType0Type arg0@@3 arg1@@0))
))) (forall ((arg0@@4 T@T) (arg1@@1 T@T) ) (! (= (MapType0TypeInv1 (MapType0Type arg0@@4 arg1@@1)) arg1@@1)
 :pattern ( (MapType0Type arg0@@4 arg1@@1))
))))
(assert (forall (($prevHeap T@U) ($h0 T@U) ($h1 T@U) (this T@U) (|running#0| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0) ($IsGoodHeap $h1)) (and (or (not (= this null)) (not true)) (and ($Is refType this Tclass._module.Universe) ($IsAlloc refType this Tclass._module.Universe $h0)))) (or (|_module.Universe.multipleLegalTransitions#canCall| $prevHeap $h0 this |running#0|) (and ($Is SetType |running#0| (TSet Tclass._module.Thread)) ($IsAlloc SetType |running#0| (TSet Tclass._module.Thread) $h0)))) (and ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1))) (=> (forall (($o T@U) ($f T@U) )  (=> (and (or (not (= $o null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0 $o) $f) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1 $o) $f)))) (= (_module.Universe.multipleLegalTransitions $prevHeap $h0 this |running#0|) (_module.Universe.multipleLegalTransitions $prevHeap $h1 this |running#0|))))
 :pattern ( ($IsHeapAnchor $h0) ($HeapSucc $h0 $h1) (_module.Universe.multipleLegalTransitions $prevHeap $h1 this |running#0|))
)))
(assert (= (FDim alloc) 0))
(assert (= (Tag TBool) TagBool))
(assert (= (DeclName alloc) allocName))
(assert (forall ((a T@U) (x@@2 T@U) ) (! (|Set#IsMember| (|Set#UnionOne| a x@@2) x@@2)
 :pattern ( (|Set#UnionOne| a x@@2))
)))
(assert (forall ((a@@0 T@U) (x@@3 T@U) (y T@U) ) (!  (=> (|Set#IsMember| a@@0 y) (|Set#IsMember| (|Set#UnionOne| a@@0 x@@3) y))
 :pattern ( (|Set#UnionOne| a@@0 x@@3) (|Set#IsMember| a@@0 y))
)))
(assert (forall ((a@@1 T@U) (b T@U) (y@@0 T@U) ) (!  (=> (|Set#IsMember| a@@1 y@@0) (|Set#IsMember| (|Set#Union| a@@1 b) y@@0))
 :pattern ( (|Set#Union| a@@1 b) (|Set#IsMember| a@@1 y@@0))
)))
(assert (forall ((a@@2 T@U) (b@@0 T@U) (y@@1 T@U) ) (!  (=> (|Set#IsMember| b@@0 y@@1) (|Set#IsMember| (|Set#Union| a@@2 b@@0) y@@1))
 :pattern ( (|Set#Union| a@@2 b@@0) (|Set#IsMember| b@@0 y@@1))
)))
(assert (forall ((a@@3 T@U) (x@@4 T@U) (o T@U) ) (! (= (|Set#IsMember| (|Set#UnionOne| a@@3 x@@4) o)  (or (= o x@@4) (|Set#IsMember| a@@3 o)))
 :pattern ( (|Set#IsMember| (|Set#UnionOne| a@@3 x@@4) o))
)))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap T@U) (this@@0 T@U) ) (!  (=> (or (|_module.Universe.globalBaseInv#canCall| $Heap this@@0) (and (< 2 $FunctionContextHeight) (and ($IsGoodHeap $Heap) (and (or (not (= this@@0 null)) (not true)) (and ($Is refType this@@0 Tclass._module.Universe) ($IsAlloc refType this@@0 Tclass._module.Universe $Heap)))))) (= (_module.Universe.globalBaseInv $Heap this@@0)  (and (forall ((|o#0| T@U) ) (!  (=> (and ($Is refType |o#0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Universe.content)) ($Box refType |o#0|))) (and (= (_module.Object.universe |o#0|) this@@0) (or (not (= |o#0| this@@0)) (not true))))
 :pattern ( (_module.Object.universe |o#0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Universe.content)) ($Box refType |o#0|)))
)) (forall ((|o#1| T@U) ) (!  (=> (and ($Is refType |o#1| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Universe.content)) ($Box refType |o#1|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |o#1|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |o#1|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |o#1|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |o#1|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap |o#1|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap this@@0) _module.Universe.content)) ($Box refType |o#1|)))
)))))
 :pattern ( (_module.Universe.globalBaseInv $Heap this@@0) ($IsGoodHeap $Heap))
))))
(assert (forall ((a@@4 T@U) (b@@1 T@U) (y@@2 T@U) ) (!  (=> (|Set#IsMember| b@@1 y@@2) (not (|Set#IsMember| (|Set#Difference| a@@4 b@@1) y@@2)))
 :pattern ( (|Set#Difference| a@@4 b@@1) (|Set#IsMember| b@@1 y@@2))
)))
(assert (implements$_module.NonOwnedObject Tclass._module.Thread?))
(assert (implements$_module.OwnedObject Tclass._module.EmptyType?))
(assert (forall ((o@@0 T@U) ) (!  (not (|Set#IsMember| |Set#Empty| o@@0))
 :pattern ( (|Set#IsMember| |Set#Empty| o@@0))
)))
(assert  (=> (<= 7 $FunctionContextHeight) (forall (($Heap@@0 T@U) (this@@1 T@U) ) (!  (=> (or (|_module.Universe.globalInv#canCall| $Heap@@0 this@@1) (and (< 7 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@0) (and (or (not (= this@@1 null)) (not true)) (and ($Is refType this@@1 Tclass._module.Universe) ($IsAlloc refType this@@1 Tclass._module.Universe $Heap@@0)))))) (and (and (|_module.Universe.globalBaseInv#canCall| $Heap@@0 this@@1) (=> (_module.Universe.globalBaseInv $Heap@@0 this@@1) (forall ((|o#0@@0| T@U) ) (!  (=> ($Is refType |o#0@@0| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0@@0|)) (|_module.Object.inv#canCall| $Heap@@0 |o#0@@0|)))
 :pattern ( (_module.Object.inv $Heap@@0 |o#0@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0@@0|)))
)))) (= (_module.Universe.globalInv $Heap@@0 this@@1)  (and (_module.Universe.globalBaseInv $Heap@@0 this@@1) (forall ((|o#0@@1| T@U) ) (!  (=> (and ($Is refType |o#0@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0@@1|))) (_module.Object.inv $Heap@@0 |o#0@@1|))
 :pattern ( (_module.Object.inv $Heap@@0 |o#0@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@0 this@@1) _module.Universe.content)) ($Box refType |o#0@@1|)))
))))))
 :pattern ( (_module.Universe.globalInv $Heap@@0 this@@1) ($IsGoodHeap $Heap@@0))
))))
(assert (forall (($o@@0 T@U) ) (! (= ($Is refType $o@@0 Tclass._module.Thread?)  (or (= $o@@0 null) (= (dtype $o@@0) Tclass._module.Thread?)))
 :pattern ( ($Is refType $o@@0 Tclass._module.Thread?))
)))
(assert (forall (($o@@1 T@U) ) (! (= ($Is refType $o@@1 Tclass._module.EmptyType?)  (or (= $o@@1 null) (= (dtype $o@@1) Tclass._module.EmptyType?)))
 :pattern ( ($Is refType $o@@1 Tclass._module.EmptyType?))
)))
(assert (forall ((a@@5 T@U) (b@@2 T@U) ) (! (= (|Set#Union| (|Set#Union| a@@5 b@@2) b@@2) (|Set#Union| a@@5 b@@2))
 :pattern ( (|Set#Union| (|Set#Union| a@@5 b@@2) b@@2))
)))
(assert (forall (($prevHeap@@0 T@U) ($h0@@0 T@U) ($h1@@0 T@U) (this@@2 T@U) (|running#0@@0| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0@@0) ($IsGoodHeap $h1@@0)) (and (or (not (= this@@2 null)) (not true)) (and ($Is refType this@@2 Tclass._module.Universe) ($IsAlloc refType this@@2 Tclass._module.Universe $h0@@0)))) (or (|_module.Universe.legalTransition#canCall| $prevHeap@@0 $h0@@0 this@@2 |running#0@@0|) (and ($Is refType |running#0@@0| Tclass._module.Thread) ($IsAlloc refType |running#0@@0| Tclass._module.Thread $h0@@0)))) (and ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0))) (=> (forall (($o@@2 T@U) ($f@@0 T@U) )  (=> (and (or (not (= $o@@2 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@0 $o@@2) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@0 $o@@2) $f@@0) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@0 $o@@2) $f@@0)))) (= (_module.Universe.legalTransition $prevHeap@@0 $h0@@0 this@@2 |running#0@@0|) (_module.Universe.legalTransition $prevHeap@@0 $h1@@0 this@@2 |running#0@@0|))))
 :pattern ( ($IsHeapAnchor $h0@@0) ($HeapSucc $h0@@0 $h1@@0) (_module.Universe.legalTransition $prevHeap@@0 $h1@@0 this@@2 |running#0@@0|))
)))
(assert (forall ((a@@6 T@U) (b@@3 T@U) (o@@1 T@U) ) (! (= (|Set#IsMember| (|Set#Difference| a@@6 b@@3) o@@1)  (and (|Set#IsMember| a@@6 o@@1) (not (|Set#IsMember| b@@3 o@@1))))
 :pattern ( (|Set#IsMember| (|Set#Difference| a@@6 b@@3) o@@1))
)))
(assert (forall (($h T@U) ($o@@3 T@U) ) (!  (=> (and ($IsGoodHeap $h) (and (or (not (= $o@@3 null)) (not true)) ($Is refType $o@@3 Tclass._module.OwnedObject?))) ($Is boolType ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h $o@@3) _module.OwnedObject.closed)) TBool))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h $o@@3) _module.OwnedObject.closed)))
)))
(assert (forall ((bx T@U) ($h@@0 T@U) ) (!  (=> (and ($IsAllocBox bx Tclass._module.NonOwnedObject? $h@@0) ($IsGoodHeap $h@@0)) ($IsAllocBox bx Tclass._module.Object? $h@@0))
 :pattern ( ($IsAllocBox bx Tclass._module.NonOwnedObject? $h@@0))
)))
(assert (forall ((bx@@0 T@U) ($h@@1 T@U) ) (!  (=> (and ($IsAllocBox bx@@0 Tclass._module.OwnedObject? $h@@1) ($IsGoodHeap $h@@1)) ($IsAllocBox bx@@0 Tclass._module.Object? $h@@1))
 :pattern ( ($IsAllocBox bx@@0 Tclass._module.OwnedObject? $h@@1))
)))
(assert (forall ((bx@@1 T@U) ($h@@2 T@U) ) (!  (=> (and ($IsAllocBox bx@@1 Tclass._module.Thread? $h@@2) ($IsGoodHeap $h@@2)) ($IsAllocBox bx@@1 Tclass._module.NonOwnedObject? $h@@2))
 :pattern ( ($IsAllocBox bx@@1 Tclass._module.Thread? $h@@2))
)))
(assert (forall ((bx@@2 T@U) ($h@@3 T@U) ) (!  (=> (and ($IsAllocBox bx@@2 Tclass._module.EmptyType? $h@@3) ($IsGoodHeap $h@@3)) ($IsAllocBox bx@@2 Tclass._module.OwnedObject? $h@@3))
 :pattern ( ($IsAllocBox bx@@2 Tclass._module.EmptyType? $h@@3))
)))
(assert (forall ((|c#0| T@U) ($h@@4 T@U) ) (! (= ($IsAlloc refType |c#0| Tclass._module.Universe $h@@4) ($IsAlloc refType |c#0| Tclass._module.Universe? $h@@4))
 :pattern ( ($IsAlloc refType |c#0| Tclass._module.Universe $h@@4))
 :pattern ( ($IsAlloc refType |c#0| Tclass._module.Universe? $h@@4))
)))
(assert (forall ((|c#0@@0| T@U) ($h@@5 T@U) ) (! (= ($IsAlloc refType |c#0@@0| Tclass._module.Object $h@@5) ($IsAlloc refType |c#0@@0| Tclass._module.Object? $h@@5))
 :pattern ( ($IsAlloc refType |c#0@@0| Tclass._module.Object $h@@5))
 :pattern ( ($IsAlloc refType |c#0@@0| Tclass._module.Object? $h@@5))
)))
(assert (forall ((|c#0@@1| T@U) ($h@@6 T@U) ) (! (= ($IsAlloc refType |c#0@@1| Tclass._module.NonOwnedObject $h@@6) ($IsAlloc refType |c#0@@1| Tclass._module.NonOwnedObject? $h@@6))
 :pattern ( ($IsAlloc refType |c#0@@1| Tclass._module.NonOwnedObject $h@@6))
 :pattern ( ($IsAlloc refType |c#0@@1| Tclass._module.NonOwnedObject? $h@@6))
)))
(assert (forall ((|c#0@@2| T@U) ($h@@7 T@U) ) (! (= ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject $h@@7) ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject? $h@@7))
 :pattern ( ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject $h@@7))
 :pattern ( ($IsAlloc refType |c#0@@2| Tclass._module.OwnedObject? $h@@7))
)))
(assert (forall ((|c#0@@3| T@U) ($h@@8 T@U) ) (! (= ($IsAlloc refType |c#0@@3| Tclass._module.Thread $h@@8) ($IsAlloc refType |c#0@@3| Tclass._module.Thread? $h@@8))
 :pattern ( ($IsAlloc refType |c#0@@3| Tclass._module.Thread $h@@8))
 :pattern ( ($IsAlloc refType |c#0@@3| Tclass._module.Thread? $h@@8))
)))
(assert (forall ((|c#0@@4| T@U) ($h@@9 T@U) ) (! (= ($IsAlloc refType |c#0@@4| Tclass._module.EmptyType $h@@9) ($IsAlloc refType |c#0@@4| Tclass._module.EmptyType? $h@@9))
 :pattern ( ($IsAlloc refType |c#0@@4| Tclass._module.EmptyType $h@@9))
 :pattern ( ($IsAlloc refType |c#0@@4| Tclass._module.EmptyType? $h@@9))
)))
(assert (= (FDim _module.Universe.content) 0))
(assert (= (FieldOfDecl class._module.Universe? field$content) _module.Universe.content))
(assert ($IsGhostField _module.Universe.content))
(assert (= (FDim _module.OwnedObject.owner) 0))
(assert (= (FieldOfDecl class._module.OwnedObject? field$owner) _module.OwnedObject.owner))
(assert ($IsGhostField _module.OwnedObject.owner))
(assert (= (FDim _module.OwnedObject.closed) 0))
(assert (= (FieldOfDecl class._module.OwnedObject? field$closed) _module.OwnedObject.closed))
(assert ($IsGhostField _module.OwnedObject.closed))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@1 T@U) (this@@3 T@U) ) (!  (=> (or (|_module.EmptyType.baseUserInv#canCall| $Heap@@1 this@@3) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@3 null)) (not true)) ($Is refType this@@3 Tclass._module.EmptyType)))) (= (_module.OwnedObject.baseUserInv $Heap@@1 this@@3) (_module.EmptyType.baseUserInv $Heap@@1 this@@3)))
 :pattern ( (_module.OwnedObject.baseUserInv $Heap@@1 this@@3) ($Is refType this@@3 Tclass._module.EmptyType) ($IsGoodHeap $Heap@@1))
 :pattern ( (_module.OwnedObject.baseUserInv $Heap@@1 this@@3) (_module.EmptyType.baseUserInv $Heap@@1 this@@3) ($IsGoodHeap $Heap@@1))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@2 T@U) (this@@4 T@U) ) (!  (=> (or (|_module.EmptyType.localUserInv#canCall| $Heap@@2 this@@4) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@4 null)) (not true)) ($Is refType this@@4 Tclass._module.EmptyType)))) (= (_module.OwnedObject.localUserInv $Heap@@2 this@@4) (_module.EmptyType.localUserInv $Heap@@2 this@@4)))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@2 this@@4) ($Is refType this@@4 Tclass._module.EmptyType) ($IsGoodHeap $Heap@@2))
 :pattern ( (_module.OwnedObject.localUserInv $Heap@@2 this@@4) (_module.EmptyType.localUserInv $Heap@@2 this@@4) ($IsGoodHeap $Heap@@2))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@3 T@U) (this@@5 T@U) ) (!  (=> (or (|_module.EmptyType.userInv#canCall| $Heap@@3 this@@5) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@5 null)) (not true)) ($Is refType this@@5 Tclass._module.EmptyType)))) (= (_module.OwnedObject.userInv $Heap@@3 this@@5) (_module.EmptyType.userInv $Heap@@3 this@@5)))
 :pattern ( (_module.OwnedObject.userInv $Heap@@3 this@@5) ($Is refType this@@5 Tclass._module.EmptyType) ($IsGoodHeap $Heap@@3))
 :pattern ( (_module.OwnedObject.userInv $Heap@@3 this@@5) (_module.EmptyType.userInv $Heap@@3 this@@5) ($IsGoodHeap $Heap@@3))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@4 T@U) (this@@6 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv#canCall| $Heap@@4 this@@6) (and (< 4 $FunctionContextHeight) (and (or (not (= this@@6 null)) (not true)) ($Is refType this@@6 Tclass._module.OwnedObject)))) (= (_module.Object.localInv $Heap@@4 this@@6) (_module.OwnedObject.localInv $Heap@@4 this@@6)))
 :pattern ( (_module.Object.localInv $Heap@@4 this@@6) ($Is refType this@@6 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@4))
 :pattern ( (_module.Object.localInv $Heap@@4 this@@6) (_module.OwnedObject.localInv $Heap@@4 this@@6) ($IsGoodHeap $Heap@@4))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@5 T@U) (this@@7 T@U) ) (!  (=> (or (|_module.Thread.localInv#canCall| $Heap@@5 this@@7) (and (< 4 $FunctionContextHeight) (and (or (not (= this@@7 null)) (not true)) ($Is refType this@@7 Tclass._module.Thread)))) (= (_module.Object.localInv $Heap@@5 this@@7) (_module.Thread.localInv $Heap@@5 this@@7)))
 :pattern ( (_module.Object.localInv $Heap@@5 this@@7) ($Is refType this@@7 Tclass._module.Thread) ($IsGoodHeap $Heap@@5))
 :pattern ( (_module.Object.localInv $Heap@@5 this@@7) (_module.Thread.localInv $Heap@@5 this@@7) ($IsGoodHeap $Heap@@5))
))))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($Heap@@6 T@U) (this@@8 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@6 this@@8) (and (< 5 $FunctionContextHeight) (and (or (not (= this@@8 null)) (not true)) ($Is refType this@@8 Tclass._module.OwnedObject)))) (= (_module.Object.inv $Heap@@6 this@@8) (_module.OwnedObject.inv $Heap@@6 this@@8)))
 :pattern ( (_module.Object.inv $Heap@@6 this@@8) ($Is refType this@@8 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@6))
 :pattern ( (_module.Object.inv $Heap@@6 this@@8) (_module.OwnedObject.inv $Heap@@6 this@@8) ($IsGoodHeap $Heap@@6))
))))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($Heap@@7 T@U) (this@@9 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@7 this@@9) (and (< 5 $FunctionContextHeight) (and (or (not (= this@@9 null)) (not true)) ($Is refType this@@9 Tclass._module.Thread)))) (= (_module.Object.inv $Heap@@7 this@@9) (_module.Thread.inv $Heap@@7 this@@9)))
 :pattern ( (_module.Object.inv $Heap@@7 this@@9) ($Is refType this@@9 Tclass._module.Thread) ($IsGoodHeap $Heap@@7))
 :pattern ( (_module.Object.inv $Heap@@7 this@@9) (_module.Thread.inv $Heap@@7 this@@9) ($IsGoodHeap $Heap@@7))
))))
(assert (forall (($prevHeap@@1 T@U) ($h0@@1 T@U) ($h1@@1 T@U) (this@@10 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@1) ($IsGoodHeap $h1@@1)) (and (or (not (= this@@10 null)) (not true)) (and ($Is refType this@@10 Tclass._module.Universe) ($IsAlloc refType this@@10 Tclass._module.Universe $h0@@1)))) (and ($IsHeapAnchor $h0@@1) ($HeapSucc $h0@@1 $h1@@1))) (=> (forall (($o@@4 T@U) ($f@@1 T@U) )  (=> (and (or (not (= $o@@4 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@1 $o@@4) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@1 $o@@4) $f@@1) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@1 $o@@4) $f@@1)))) (= (_module.Universe.globalInv2 $prevHeap@@1 $h0@@1 this@@10) (_module.Universe.globalInv2 $prevHeap@@1 $h1@@1 this@@10))))
 :pattern ( ($IsHeapAnchor $h0@@1) ($HeapSucc $h0@@1 $h1@@1) (_module.Universe.globalInv2 $prevHeap@@1 $h1@@1 this@@10))
)))
(assert (forall (($prevHeap@@2 T@U) ($h0@@2 T@U) ($h1@@2 T@U) (this@@11 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@2) ($IsGoodHeap $h1@@2)) (and (or (not (= this@@11 null)) (not true)) (and ($Is refType this@@11 Tclass._module.Object) ($IsAlloc refType this@@11 Tclass._module.Object $h0@@2)))) (and ($IsHeapAnchor $h0@@2) ($HeapSucc $h0@@2 $h1@@2))) (=> (forall (($o@@5 T@U) ($f@@2 T@U) )  (=> (and (or (not (= $o@@5 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@2 $o@@5) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@2 $o@@5) $f@@2) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@2 $o@@5) $f@@2)))) (= (_module.Object.localInv2 $prevHeap@@2 $h0@@2 this@@11) (_module.Object.localInv2 $prevHeap@@2 $h1@@2 this@@11))))
 :pattern ( ($IsHeapAnchor $h0@@2) ($HeapSucc $h0@@2 $h1@@2) (_module.Object.localInv2 $prevHeap@@2 $h1@@2 this@@11))
)))
(assert (forall (($prevHeap@@3 T@U) ($h0@@3 T@U) ($h1@@3 T@U) (this@@12 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@3) ($IsGoodHeap $h1@@3)) (and (or (not (= this@@12 null)) (not true)) (and ($Is refType this@@12 Tclass._module.Object) ($IsAlloc refType this@@12 Tclass._module.Object $h0@@3)))) (and ($IsHeapAnchor $h0@@3) ($HeapSucc $h0@@3 $h1@@3))) (=> (forall (($o@@6 T@U) ($f@@3 T@U) )  (=> (and (or (not (= $o@@6 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@3 $o@@6) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@3 $o@@6) $f@@3) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@3 $o@@6) $f@@3)))) (= (_module.Object.inv2 $prevHeap@@3 $h0@@3 this@@12) (_module.Object.inv2 $prevHeap@@3 $h1@@3 this@@12))))
 :pattern ( ($IsHeapAnchor $h0@@3) ($HeapSucc $h0@@3 $h1@@3) (_module.Object.inv2 $prevHeap@@3 $h1@@3 this@@12))
)))
(assert (forall (($prevHeap@@4 T@U) ($h0@@4 T@U) ($h1@@4 T@U) (this@@13 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@4) ($IsGoodHeap $h1@@4)) (and (or (not (= this@@13 null)) (not true)) (and ($Is refType this@@13 Tclass._module.OwnedObject) ($IsAlloc refType this@@13 Tclass._module.OwnedObject $h0@@4)))) (and ($IsHeapAnchor $h0@@4) ($HeapSucc $h0@@4 $h1@@4))) (=> (forall (($o@@7 T@U) ($f@@4 T@U) )  (=> (and (or (not (= $o@@7 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@4 $o@@7) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@4 $o@@7) $f@@4) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@4 $o@@7) $f@@4)))) (= (_module.OwnedObject.localInv2 $prevHeap@@4 $h0@@4 this@@13) (_module.OwnedObject.localInv2 $prevHeap@@4 $h1@@4 this@@13))))
 :pattern ( ($IsHeapAnchor $h0@@4) ($HeapSucc $h0@@4 $h1@@4) (_module.OwnedObject.localInv2 $prevHeap@@4 $h1@@4 this@@13))
)))
(assert (forall (($prevHeap@@5 T@U) ($h0@@5 T@U) ($h1@@5 T@U) (this@@14 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@5) ($IsGoodHeap $h1@@5)) (and (or (not (= this@@14 null)) (not true)) (and ($Is refType this@@14 Tclass._module.OwnedObject) ($IsAlloc refType this@@14 Tclass._module.OwnedObject $h0@@5)))) (and ($IsHeapAnchor $h0@@5) ($HeapSucc $h0@@5 $h1@@5))) (=> (forall (($o@@8 T@U) ($f@@5 T@U) )  (=> (and (or (not (= $o@@8 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@5 $o@@8) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@5 $o@@8) $f@@5) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@5 $o@@8) $f@@5)))) (= (_module.OwnedObject.inv2 $prevHeap@@5 $h0@@5 this@@14) (_module.OwnedObject.inv2 $prevHeap@@5 $h1@@5 this@@14))))
 :pattern ( ($IsHeapAnchor $h0@@5) ($HeapSucc $h0@@5 $h1@@5) (_module.OwnedObject.inv2 $prevHeap@@5 $h1@@5 this@@14))
)))
(assert (forall (($prevHeap@@6 T@U) ($h0@@6 T@U) ($h1@@6 T@U) (this@@15 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@6) ($IsGoodHeap $h1@@6)) (and (or (not (= this@@15 null)) (not true)) (and ($Is refType this@@15 Tclass._module.OwnedObject) ($IsAlloc refType this@@15 Tclass._module.OwnedObject $h0@@6)))) (and ($IsHeapAnchor $h0@@6) ($HeapSucc $h0@@6 $h1@@6))) (=> (forall (($o@@9 T@U) ($f@@6 T@U) )  (=> (and (or (not (= $o@@9 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@6 $o@@9) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@6 $o@@9) $f@@6) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@6 $o@@9) $f@@6)))) (= (_module.OwnedObject.userFieldsUnchanged $prevHeap@@6 $h0@@6 this@@15) (_module.OwnedObject.userFieldsUnchanged $prevHeap@@6 $h1@@6 this@@15))))
 :pattern ( ($IsHeapAnchor $h0@@6) ($HeapSucc $h0@@6 $h1@@6) (_module.OwnedObject.userFieldsUnchanged $prevHeap@@6 $h1@@6 this@@15))
)))
(assert (forall (($prevHeap@@7 T@U) ($h0@@7 T@U) ($h1@@7 T@U) (this@@16 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@7) ($IsGoodHeap $h1@@7)) (and (or (not (= this@@16 null)) (not true)) (and ($Is refType this@@16 Tclass._module.OwnedObject) ($IsAlloc refType this@@16 Tclass._module.OwnedObject $h0@@7)))) (and ($IsHeapAnchor $h0@@7) ($HeapSucc $h0@@7 $h1@@7))) (=> (forall (($o@@10 T@U) ($f@@7 T@U) )  (=> (and (or (not (= $o@@10 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@7 $o@@10) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@7 $o@@10) $f@@7) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@7 $o@@10) $f@@7)))) (= (_module.OwnedObject.localUserInv2 $prevHeap@@7 $h0@@7 this@@16) (_module.OwnedObject.localUserInv2 $prevHeap@@7 $h1@@7 this@@16))))
 :pattern ( ($IsHeapAnchor $h0@@7) ($HeapSucc $h0@@7 $h1@@7) (_module.OwnedObject.localUserInv2 $prevHeap@@7 $h1@@7 this@@16))
)))
(assert (forall (($prevHeap@@8 T@U) ($h0@@8 T@U) ($h1@@8 T@U) (this@@17 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@8) ($IsGoodHeap $h1@@8)) (and (or (not (= this@@17 null)) (not true)) (and ($Is refType this@@17 Tclass._module.OwnedObject) ($IsAlloc refType this@@17 Tclass._module.OwnedObject $h0@@8)))) (and ($IsHeapAnchor $h0@@8) ($HeapSucc $h0@@8 $h1@@8))) (=> (forall (($o@@11 T@U) ($f@@8 T@U) )  (=> (and (or (not (= $o@@11 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@8 $o@@11) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@8 $o@@11) $f@@8) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@8 $o@@11) $f@@8)))) (= (_module.OwnedObject.userInv2 $prevHeap@@8 $h0@@8 this@@17) (_module.OwnedObject.userInv2 $prevHeap@@8 $h1@@8 this@@17))))
 :pattern ( ($IsHeapAnchor $h0@@8) ($HeapSucc $h0@@8 $h1@@8) (_module.OwnedObject.userInv2 $prevHeap@@8 $h1@@8 this@@17))
)))
(assert (forall (($prevHeap@@9 T@U) ($h0@@9 T@U) ($h1@@9 T@U) (this@@18 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@9) ($IsGoodHeap $h1@@9)) (and (or (not (= this@@18 null)) (not true)) (and ($Is refType this@@18 Tclass._module.Thread) ($IsAlloc refType this@@18 Tclass._module.Thread $h0@@9)))) (and ($IsHeapAnchor $h0@@9) ($HeapSucc $h0@@9 $h1@@9))) (=> (forall (($o@@12 T@U) ($f@@9 T@U) )  (=> (and (or (not (= $o@@12 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@9 $o@@12) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@9 $o@@12) $f@@9) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@9 $o@@12) $f@@9)))) (= (_module.Thread.localInv2 $prevHeap@@9 $h0@@9 this@@18) (_module.Thread.localInv2 $prevHeap@@9 $h1@@9 this@@18))))
 :pattern ( ($IsHeapAnchor $h0@@9) ($HeapSucc $h0@@9 $h1@@9) (_module.Thread.localInv2 $prevHeap@@9 $h1@@9 this@@18))
)))
(assert (forall (($prevHeap@@10 T@U) ($h0@@10 T@U) ($h1@@10 T@U) (this@@19 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@10) ($IsGoodHeap $h1@@10)) (and (or (not (= this@@19 null)) (not true)) (and ($Is refType this@@19 Tclass._module.Thread) ($IsAlloc refType this@@19 Tclass._module.Thread $h0@@10)))) (and ($IsHeapAnchor $h0@@10) ($HeapSucc $h0@@10 $h1@@10))) (=> (forall (($o@@13 T@U) ($f@@10 T@U) )  (=> (and (or (not (= $o@@13 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@10 $o@@13) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@10 $o@@13) $f@@10) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@10 $o@@13) $f@@10)))) (= (_module.Thread.inv2 $prevHeap@@10 $h0@@10 this@@19) (_module.Thread.inv2 $prevHeap@@10 $h1@@10 this@@19))))
 :pattern ( ($IsHeapAnchor $h0@@10) ($HeapSucc $h0@@10 $h1@@10) (_module.Thread.inv2 $prevHeap@@10 $h1@@10 this@@19))
)))
(assert (forall (($prevHeap@@11 T@U) ($h0@@11 T@U) ($h1@@11 T@U) (this@@20 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@11) ($IsGoodHeap $h1@@11)) (and (or (not (= this@@20 null)) (not true)) (and ($Is refType this@@20 Tclass._module.EmptyType) ($IsAlloc refType this@@20 Tclass._module.EmptyType $h0@@11)))) (and ($IsHeapAnchor $h0@@11) ($HeapSucc $h0@@11 $h1@@11))) (=> (forall (($o@@14 T@U) ($f@@11 T@U) )  (=> (and (or (not (= $o@@14 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@11 $o@@14) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@11 $o@@14) $f@@11) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@11 $o@@14) $f@@11)))) (= (_module.EmptyType.userFieldsUnchanged $prevHeap@@11 $h0@@11 this@@20) (_module.EmptyType.userFieldsUnchanged $prevHeap@@11 $h1@@11 this@@20))))
 :pattern ( ($IsHeapAnchor $h0@@11) ($HeapSucc $h0@@11 $h1@@11) (_module.EmptyType.userFieldsUnchanged $prevHeap@@11 $h1@@11 this@@20))
)))
(assert (forall (($prevHeap@@12 T@U) ($h0@@12 T@U) ($h1@@12 T@U) (this@@21 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@12) ($IsGoodHeap $h1@@12)) (and (or (not (= this@@21 null)) (not true)) (and ($Is refType this@@21 Tclass._module.EmptyType) ($IsAlloc refType this@@21 Tclass._module.EmptyType $h0@@12)))) (and ($IsHeapAnchor $h0@@12) ($HeapSucc $h0@@12 $h1@@12))) (=> (forall (($o@@15 T@U) ($f@@12 T@U) )  (=> (and (or (not (= $o@@15 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@12 $o@@15) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@12 $o@@15) $f@@12) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@12 $o@@15) $f@@12)))) (= (_module.EmptyType.localUserInv2 $prevHeap@@12 $h0@@12 this@@21) (_module.EmptyType.localUserInv2 $prevHeap@@12 $h1@@12 this@@21))))
 :pattern ( ($IsHeapAnchor $h0@@12) ($HeapSucc $h0@@12 $h1@@12) (_module.EmptyType.localUserInv2 $prevHeap@@12 $h1@@12 this@@21))
)))
(assert (forall (($prevHeap@@13 T@U) ($h0@@13 T@U) ($h1@@13 T@U) (this@@22 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@13) ($IsGoodHeap $h1@@13)) (and (or (not (= this@@22 null)) (not true)) (and ($Is refType this@@22 Tclass._module.EmptyType) ($IsAlloc refType this@@22 Tclass._module.EmptyType $h0@@13)))) (and ($IsHeapAnchor $h0@@13) ($HeapSucc $h0@@13 $h1@@13))) (=> (forall (($o@@16 T@U) ($f@@13 T@U) )  (=> (and (or (not (= $o@@16 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@13 $o@@16) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@13 $o@@16) $f@@13) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@13 $o@@16) $f@@13)))) (= (_module.EmptyType.userInv2 $prevHeap@@13 $h0@@13 this@@22) (_module.EmptyType.userInv2 $prevHeap@@13 $h1@@13 this@@22))))
 :pattern ( ($IsHeapAnchor $h0@@13) ($HeapSucc $h0@@13 $h1@@13) (_module.EmptyType.userInv2 $prevHeap@@13 $h1@@13 this@@22))
)))
(assert (forall (($o@@17 T@U) ($h@@10 T@U) ) (! (= ($IsAlloc refType $o@@17 Tclass._module.Universe? $h@@10)  (or (= $o@@17 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@10 $o@@17) alloc)))))
 :pattern ( ($IsAlloc refType $o@@17 Tclass._module.Universe? $h@@10))
)))
(assert (forall (($o@@18 T@U) ($h@@11 T@U) ) (! (= ($IsAlloc refType $o@@18 Tclass._module.Object? $h@@11)  (or (= $o@@18 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@11 $o@@18) alloc)))))
 :pattern ( ($IsAlloc refType $o@@18 Tclass._module.Object? $h@@11))
)))
(assert (forall (($o@@19 T@U) ($h@@12 T@U) ) (! (= ($IsAlloc refType $o@@19 Tclass._module.NonOwnedObject? $h@@12)  (or (= $o@@19 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@12 $o@@19) alloc)))))
 :pattern ( ($IsAlloc refType $o@@19 Tclass._module.NonOwnedObject? $h@@12))
)))
(assert (forall (($o@@20 T@U) ($h@@13 T@U) ) (! (= ($IsAlloc refType $o@@20 Tclass._module.OwnedObject? $h@@13)  (or (= $o@@20 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@13 $o@@20) alloc)))))
 :pattern ( ($IsAlloc refType $o@@20 Tclass._module.OwnedObject? $h@@13))
)))
(assert (forall (($o@@21 T@U) ($h@@14 T@U) ) (! (= ($IsAlloc refType $o@@21 Tclass._module.Thread? $h@@14)  (or (= $o@@21 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@14 $o@@21) alloc)))))
 :pattern ( ($IsAlloc refType $o@@21 Tclass._module.Thread? $h@@14))
)))
(assert (forall (($o@@22 T@U) ($h@@15 T@U) ) (! (= ($IsAlloc refType $o@@22 Tclass._module.EmptyType? $h@@15)  (or (= $o@@22 null) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@15 $o@@22) alloc)))))
 :pattern ( ($IsAlloc refType $o@@22 Tclass._module.EmptyType? $h@@15))
)))
(assert (forall ((h T@U) (k T@U) ) (!  (=> ($HeapSucc h k) (forall ((o@@2 T@U) ) (!  (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h o@@2) alloc))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@2) alloc))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k o@@2) alloc))
)))
 :pattern ( ($HeapSucc h k))
)))
(assert (forall ((x@@5 T@U) (T T@T) ) (! (= (Lit T x@@5) x@@5)
 :pattern ( (Lit T x@@5))
)))
(assert (forall ((a@@7 T@U) (b@@4 T@U) ) (! (= (|Set#Subset| a@@7 b@@4) (forall ((o@@3 T@U) ) (!  (=> (|Set#IsMember| a@@7 o@@3) (|Set#IsMember| b@@4 o@@3))
 :pattern ( (|Set#IsMember| a@@7 o@@3))
 :pattern ( (|Set#IsMember| b@@4 o@@3))
)))
 :pattern ( (|Set#Subset| a@@7 b@@4))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@8 T@U) (this@@23 T@U) (|owner#0| T@U) ) (!  (=> (or (|_module.EmptyType.userFieldsOwnedBy#canCall| $Heap@@8 this@@23 |owner#0|) (and (< 1 $FunctionContextHeight) (and (and ($IsGoodHeap $Heap@@8) (and (or (not (= this@@23 null)) (not true)) (and ($Is refType this@@23 Tclass._module.EmptyType) ($IsAlloc refType this@@23 Tclass._module.EmptyType $Heap@@8)))) ($Is refType |owner#0| Tclass._module.Object)))) (= (_module.EmptyType.userFieldsOwnedBy $Heap@@8 this@@23 |owner#0|) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.EmptyType.userFieldsOwnedBy $Heap@@8 this@@23 |owner#0|) ($IsGoodHeap $Heap@@8))
))))
(assert (forall ((x@@6 T@U) (T@@0 T@T) ) (! (= ($Box T@@0 ($Unbox T@@0 x@@6)) x@@6)
 :pattern ( ($Unbox T@@0 x@@6))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@9 T@U) (this@@24 T@U) ) (!  (=> (or (|_module.EmptyType.baseUserInv#canCall| $Heap@@9 this@@24) (and (< 0 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@9) (and (or (not (= this@@24 null)) (not true)) (and ($Is refType this@@24 Tclass._module.EmptyType) ($IsAlloc refType this@@24 Tclass._module.EmptyType $Heap@@9)))))) (= (_module.EmptyType.baseUserInv $Heap@@9 this@@24) (U_2_bool (Lit boolType (bool_2_U  (and true true))))))
 :pattern ( (_module.EmptyType.baseUserInv $Heap@@9 this@@24) ($IsGoodHeap $Heap@@9))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($Heap@@10 T@U) (this@@25 T@U) ) (!  (=> (or (|_module.EmptyType.localUserInv#canCall| $Heap@@10 this@@25) (and (< 0 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@10) (and (or (not (= this@@25 null)) (not true)) (and ($Is refType this@@25 Tclass._module.EmptyType) ($IsAlloc refType this@@25 Tclass._module.EmptyType $Heap@@10)))))) (= (_module.EmptyType.localUserInv $Heap@@10 this@@25) (U_2_bool (Lit boolType (bool_2_U  (and true true))))))
 :pattern ( (_module.EmptyType.localUserInv $Heap@@10 this@@25) ($IsGoodHeap $Heap@@10))
))))
(assert (forall ((a@@8 T@U) (b@@5 T@U) ) (! (= (|Set#Disjoint| a@@8 b@@5) (forall ((o@@4 T@U) ) (!  (or (not (|Set#IsMember| a@@8 o@@4)) (not (|Set#IsMember| b@@5 o@@4)))
 :pattern ( (|Set#IsMember| a@@8 o@@4))
 :pattern ( (|Set#IsMember| b@@5 o@@4))
)))
 :pattern ( (|Set#Disjoint| a@@8 b@@5))
)))
(assert (forall ((v T@U) (t0@@0 T@U) ) (! (= ($Is SetType v (TSet t0@@0)) (forall ((bx@@3 T@U) ) (!  (=> (|Set#IsMember| v bx@@3) ($IsBox bx@@3 t0@@0))
 :pattern ( (|Set#IsMember| v bx@@3))
)))
 :pattern ( ($Is SetType v (TSet t0@@0)))
)))
(assert ($IsGhostField alloc))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@14 T@U) ($Heap@@11 T@U) (this@@26 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv2#canCall| $prevHeap@@14 $Heap@@11 this@@26) (and (< 2 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@14) ($IsGoodHeap $Heap@@11)) ($HeapSucc $prevHeap@@14 $Heap@@11)) (and (or (not (= this@@26 null)) (not true)) (and ($Is refType this@@26 Tclass._module.OwnedObject) ($IsAlloc refType this@@26 Tclass._module.OwnedObject $prevHeap@@14)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@14 this@@26) _module.OwnedObject.closed))) (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@11 this@@26) _module.OwnedObject.closed))) (|_module.OwnedObject.localUserInv2#canCall| $prevHeap@@14 $Heap@@11 this@@26)))) (= (_module.OwnedObject.localInv2 $prevHeap@@14 $Heap@@11 this@@26)  (and true (=> (and (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@14 this@@26) _module.OwnedObject.closed))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@11 this@@26) _module.OwnedObject.closed)))) (_module.OwnedObject.localUserInv2 $prevHeap@@14 $Heap@@11 this@@26))))))
 :pattern ( (_module.OwnedObject.localInv2 $prevHeap@@14 $Heap@@11 this@@26) ($IsGoodHeap $Heap@@11))
))))
(assert (forall ((v@@0 T@U) (t T@U) (h@@0 T@U) (T@@1 T@T) ) (! (= ($IsAllocBox ($Box T@@1 v@@0) t h@@0) ($IsAlloc T@@1 v@@0 t h@@0))
 :pattern ( ($IsAllocBox ($Box T@@1 v@@0) t h@@0))
)))
(assert (forall ((h@@1 T@U) (k@@0 T@U) (bx@@4 T@U) (t@@0 T@U) ) (!  (=> ($HeapSucc h@@1 k@@0) (=> ($IsAllocBox bx@@4 t@@0 h@@1) ($IsAllocBox bx@@4 t@@0 k@@0)))
 :pattern ( ($HeapSucc h@@1 k@@0) ($IsAllocBox bx@@4 t@@0 h@@1))
)))
(assert (forall ((h@@2 T@U) (k@@1 T@U) (v@@1 T@U) (t@@1 T@U) (T@@2 T@T) ) (!  (=> ($HeapSucc h@@2 k@@1) (=> ($IsAlloc T@@2 v@@1 t@@1 h@@2) ($IsAlloc T@@2 v@@1 t@@1 k@@1)))
 :pattern ( ($HeapSucc h@@2 k@@1) ($IsAlloc T@@2 v@@1 t@@1 h@@2))
)))
(assert  (=> (< 1 $FunctionContextHeight) (forall (($h@@16 T@U) ($o@@23 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@16) (and (or (not (= $o@@23 null)) (not true)) ($Is refType $o@@23 Tclass._module.Object?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@16 $o@@23) alloc)))) ($IsAlloc refType (_module.Object.universe $o@@23) Tclass._module.Universe $h@@16))
 :pattern ( (_module.Object.universe $o@@23) ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@16 $o@@23) alloc)))
))))
(assert  (=> (< 1 $FunctionContextHeight) (forall (($o@@24 T@U) ) (!  (=> (and (or (not (= $o@@24 null)) (not true)) ($Is refType $o@@24 Tclass._module.Object?)) ($Is refType (_module.Object.universe $o@@24) Tclass._module.Universe))
 :pattern ( (_module.Object.universe $o@@24))
))))
(assert (forall ((h@@3 T@U) (k@@2 T@U) ) (!  (=> ($HeapSuccGhost h@@3 k@@2) (and ($HeapSucc h@@3 k@@2) (forall ((o@@5 T@U) (f T@U) ) (!  (=> (not ($IsGhostField f)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@3 o@@5) f) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k@@2 o@@5) f)))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) k@@2 o@@5) f))
))))
 :pattern ( ($HeapSuccGhost h@@3 k@@2))
)))
(assert  (and (forall ((t0@@1 T@T) (t1@@0 T@T) (t2 T@T) (val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1 T@U) ) (! (= (MapType1Select t0@@1 t1@@0 t2 (MapType1Store t0@@1 t1@@0 t2 m@@1 x0@@1 x1 val@@1) x0@@1 x1) val@@1)
 :weight 0
)) (and (forall ((u0@@0 T@T) (u1@@0 T@T) (u2 T@T) (val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) (x1@@0 T@U) (y0@@0 T@U) (y1 T@U) ) (!  (or (= x0@@2 y0@@0) (= (MapType1Select u0@@0 u1@@0 u2 (MapType1Store u0@@0 u1@@0 u2 m@@2 x0@@2 x1@@0 val@@2) y0@@0 y1) (MapType1Select u0@@0 u1@@0 u2 m@@2 y0@@0 y1)))
 :weight 0
)) (forall ((u0@@1 T@T) (u1@@1 T@T) (u2@@0 T@T) (val@@3 T@U) (m@@3 T@U) (x0@@3 T@U) (x1@@1 T@U) (y0@@1 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType1Select u0@@1 u1@@1 u2@@0 (MapType1Store u0@@1 u1@@1 u2@@0 m@@3 x0@@3 x1@@1 val@@3) y0@@1 y1@@0) (MapType1Select u0@@1 u1@@1 u2@@0 m@@3 y0@@1 y1@@0)))
 :weight 0
)))))
(assert (forall ((|l#0| T@U) (|l#1| T@U) (|l#2| T@U) (|l#3| T@U) ($o@@25 T@U) ($f@@14 T@U) ) (! (= (U_2_bool (MapType1Select refType FieldType boolType (|lambda#22| |l#0| |l#1| |l#2| |l#3|) $o@@25 $f@@14))  (=> (and (or (not (= $o@@25 |l#0|)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) |l#1| $o@@25) |l#2|)))) (= $o@@25 |l#3|)))
 :pattern ( (MapType1Select refType FieldType boolType (|lambda#22| |l#0| |l#1| |l#2| |l#3|) $o@@25 $f@@14))
)))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@15 T@U) ($Heap@@12 T@U) (this@@27 T@U) ) (!  (=> (or (|_module.Thread.localInv2#canCall| $prevHeap@@15 $Heap@@12 this@@27) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@27 null)) (not true)) ($Is refType this@@27 Tclass._module.Thread)))) (= (_module.Object.localInv2 $prevHeap@@15 $Heap@@12 this@@27) (_module.Thread.localInv2 $prevHeap@@15 $Heap@@12 this@@27)))
 :pattern ( (_module.Object.localInv2 $prevHeap@@15 $Heap@@12 this@@27) ($Is refType this@@27 Tclass._module.Thread) ($IsGoodHeap $Heap@@12))
 :pattern ( (_module.Object.localInv2 $prevHeap@@15 $Heap@@12 this@@27) (_module.Thread.localInv2 $prevHeap@@15 $Heap@@12 this@@27) ($IsGoodHeap $Heap@@12))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@16 T@U) ($Heap@@13 T@U) (this@@28 T@U) ) (!  (=> (or (|_module.EmptyType.userFieldsUnchanged#canCall| $prevHeap@@16 $Heap@@13 this@@28) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@28 null)) (not true)) ($Is refType this@@28 Tclass._module.EmptyType)))) (= (_module.OwnedObject.userFieldsUnchanged $prevHeap@@16 $Heap@@13 this@@28) (_module.EmptyType.userFieldsUnchanged $prevHeap@@16 $Heap@@13 this@@28)))
 :pattern ( (_module.OwnedObject.userFieldsUnchanged $prevHeap@@16 $Heap@@13 this@@28) ($Is refType this@@28 Tclass._module.EmptyType) ($IsGoodHeap $Heap@@13))
 :pattern ( (_module.OwnedObject.userFieldsUnchanged $prevHeap@@16 $Heap@@13 this@@28) (_module.EmptyType.userFieldsUnchanged $prevHeap@@16 $Heap@@13 this@@28) ($IsGoodHeap $Heap@@13))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@17 T@U) ($Heap@@14 T@U) (this@@29 T@U) ) (!  (=> (or (|_module.EmptyType.localUserInv2#canCall| $prevHeap@@17 $Heap@@14 this@@29) (and (< 0 $FunctionContextHeight) (and (or (not (= this@@29 null)) (not true)) ($Is refType this@@29 Tclass._module.EmptyType)))) (= (_module.OwnedObject.localUserInv2 $prevHeap@@17 $Heap@@14 this@@29) (_module.EmptyType.localUserInv2 $prevHeap@@17 $Heap@@14 this@@29)))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@17 $Heap@@14 this@@29) ($Is refType this@@29 Tclass._module.EmptyType) ($IsGoodHeap $Heap@@14))
 :pattern ( (_module.OwnedObject.localUserInv2 $prevHeap@@17 $Heap@@14 this@@29) (_module.EmptyType.localUserInv2 $prevHeap@@17 $Heap@@14 this@@29) ($IsGoodHeap $Heap@@14))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@18 T@U) ($Heap@@15 T@U) (this@@30 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@18 $Heap@@15 this@@30) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@30 null)) (not true)) ($Is refType this@@30 Tclass._module.Thread)))) (= (_module.Object.inv2 $prevHeap@@18 $Heap@@15 this@@30) (_module.Thread.inv2 $prevHeap@@18 $Heap@@15 this@@30)))
 :pattern ( (_module.Object.inv2 $prevHeap@@18 $Heap@@15 this@@30) ($Is refType this@@30 Tclass._module.Thread) ($IsGoodHeap $Heap@@15))
 :pattern ( (_module.Object.inv2 $prevHeap@@18 $Heap@@15 this@@30) (_module.Thread.inv2 $prevHeap@@18 $Heap@@15 this@@30) ($IsGoodHeap $Heap@@15))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@16 T@U) (this@@31 T@U) (|owner#0@@0| T@U) ) (!  (=> (or (|_module.EmptyType.userFieldsOwnedBy#canCall| $Heap@@16 this@@31 |owner#0@@0|) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@31 null)) (not true)) ($Is refType this@@31 Tclass._module.EmptyType)))) (= (_module.OwnedObject.userFieldsOwnedBy $Heap@@16 this@@31 |owner#0@@0|) (_module.EmptyType.userFieldsOwnedBy $Heap@@16 this@@31 |owner#0@@0|)))
 :pattern ( (_module.OwnedObject.userFieldsOwnedBy $Heap@@16 this@@31 |owner#0@@0|) ($Is refType this@@31 Tclass._module.EmptyType) ($IsGoodHeap $Heap@@16))
 :pattern ( (_module.OwnedObject.userFieldsOwnedBy $Heap@@16 this@@31 |owner#0@@0|) (_module.EmptyType.userFieldsOwnedBy $Heap@@16 this@@31 |owner#0@@0|) ($IsGoodHeap $Heap@@16))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@19 T@U) ($Heap@@17 T@U) (this@@32 T@U) ) (!  (=> (or (|_module.EmptyType.userInv2#canCall| $prevHeap@@19 $Heap@@17 this@@32) (and (< 1 $FunctionContextHeight) (and (or (not (= this@@32 null)) (not true)) ($Is refType this@@32 Tclass._module.EmptyType)))) (= (_module.OwnedObject.userInv2 $prevHeap@@19 $Heap@@17 this@@32) (_module.EmptyType.userInv2 $prevHeap@@19 $Heap@@17 this@@32)))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@19 $Heap@@17 this@@32) ($Is refType this@@32 Tclass._module.EmptyType) ($IsGoodHeap $Heap@@17))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@19 $Heap@@17 this@@32) (_module.EmptyType.userInv2 $prevHeap@@19 $Heap@@17 this@@32) ($IsGoodHeap $Heap@@17))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@20 T@U) ($Heap@@18 T@U) (this@@33 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv2#canCall| $prevHeap@@20 $Heap@@18 this@@33) (and (< 2 $FunctionContextHeight) (and (or (not (= this@@33 null)) (not true)) ($Is refType this@@33 Tclass._module.OwnedObject)))) (= (_module.Object.localInv2 $prevHeap@@20 $Heap@@18 this@@33) (_module.OwnedObject.localInv2 $prevHeap@@20 $Heap@@18 this@@33)))
 :pattern ( (_module.Object.localInv2 $prevHeap@@20 $Heap@@18 this@@33) ($Is refType this@@33 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@18))
 :pattern ( (_module.Object.localInv2 $prevHeap@@20 $Heap@@18 this@@33) (_module.OwnedObject.localInv2 $prevHeap@@20 $Heap@@18 this@@33) ($IsGoodHeap $Heap@@18))
))))
(assert  (=> (<= 6 $FunctionContextHeight) (forall (($prevHeap@@21 T@U) ($Heap@@19 T@U) (this@@34 T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap@@21 $Heap@@19 this@@34) (and (< 6 $FunctionContextHeight) (and (or (not (= this@@34 null)) (not true)) ($Is refType this@@34 Tclass._module.OwnedObject)))) (= (_module.Object.inv2 $prevHeap@@21 $Heap@@19 this@@34) (_module.OwnedObject.inv2 $prevHeap@@21 $Heap@@19 this@@34)))
 :pattern ( (_module.Object.inv2 $prevHeap@@21 $Heap@@19 this@@34) ($Is refType this@@34 Tclass._module.OwnedObject) ($IsGoodHeap $Heap@@19))
 :pattern ( (_module.Object.inv2 $prevHeap@@21 $Heap@@19 this@@34) (_module.OwnedObject.inv2 $prevHeap@@21 $Heap@@19 this@@34) ($IsGoodHeap $Heap@@19))
))))
(assert (forall ((bx@@5 T@U) ) (!  (=> ($IsBox bx@@5 Tclass._module.Universe) (and (= ($Box refType ($Unbox refType bx@@5)) bx@@5) ($Is refType ($Unbox refType bx@@5) Tclass._module.Universe)))
 :pattern ( ($IsBox bx@@5 Tclass._module.Universe))
)))
(assert (forall ((bx@@6 T@U) ) (!  (=> ($IsBox bx@@6 Tclass._module.NonOwnedObject) (and (= ($Box refType ($Unbox refType bx@@6)) bx@@6) ($Is refType ($Unbox refType bx@@6) Tclass._module.NonOwnedObject)))
 :pattern ( ($IsBox bx@@6 Tclass._module.NonOwnedObject))
)))
(assert (forall ((bx@@7 T@U) ) (!  (=> ($IsBox bx@@7 Tclass._module.OwnedObject) (and (= ($Box refType ($Unbox refType bx@@7)) bx@@7) ($Is refType ($Unbox refType bx@@7) Tclass._module.OwnedObject)))
 :pattern ( ($IsBox bx@@7 Tclass._module.OwnedObject))
)))
(assert (forall ((bx@@8 T@U) ) (!  (=> ($IsBox bx@@8 Tclass._module.Universe?) (and (= ($Box refType ($Unbox refType bx@@8)) bx@@8) ($Is refType ($Unbox refType bx@@8) Tclass._module.Universe?)))
 :pattern ( ($IsBox bx@@8 Tclass._module.Universe?))
)))
(assert (forall ((bx@@9 T@U) ) (!  (=> ($IsBox bx@@9 Tclass._module.Object) (and (= ($Box refType ($Unbox refType bx@@9)) bx@@9) ($Is refType ($Unbox refType bx@@9) Tclass._module.Object)))
 :pattern ( ($IsBox bx@@9 Tclass._module.Object))
)))
(assert (forall ((bx@@10 T@U) ) (!  (=> ($IsBox bx@@10 Tclass._module.Thread) (and (= ($Box refType ($Unbox refType bx@@10)) bx@@10) ($Is refType ($Unbox refType bx@@10) Tclass._module.Thread)))
 :pattern ( ($IsBox bx@@10 Tclass._module.Thread))
)))
(assert (forall ((bx@@11 T@U) ) (!  (=> ($IsBox bx@@11 Tclass._module.Object?) (and (= ($Box refType ($Unbox refType bx@@11)) bx@@11) ($Is refType ($Unbox refType bx@@11) Tclass._module.Object?)))
 :pattern ( ($IsBox bx@@11 Tclass._module.Object?))
)))
(assert (forall ((bx@@12 T@U) ) (!  (=> ($IsBox bx@@12 Tclass._module.NonOwnedObject?) (and (= ($Box refType ($Unbox refType bx@@12)) bx@@12) ($Is refType ($Unbox refType bx@@12) Tclass._module.NonOwnedObject?)))
 :pattern ( ($IsBox bx@@12 Tclass._module.NonOwnedObject?))
)))
(assert (forall ((bx@@13 T@U) ) (!  (=> ($IsBox bx@@13 Tclass._module.OwnedObject?) (and (= ($Box refType ($Unbox refType bx@@13)) bx@@13) ($Is refType ($Unbox refType bx@@13) Tclass._module.OwnedObject?)))
 :pattern ( ($IsBox bx@@13 Tclass._module.OwnedObject?))
)))
(assert (forall ((bx@@14 T@U) ) (!  (=> ($IsBox bx@@14 Tclass._module.Thread?) (and (= ($Box refType ($Unbox refType bx@@14)) bx@@14) ($Is refType ($Unbox refType bx@@14) Tclass._module.Thread?)))
 :pattern ( ($IsBox bx@@14 Tclass._module.Thread?))
)))
(assert (forall ((bx@@15 T@U) ) (!  (=> ($IsBox bx@@15 Tclass._module.EmptyType?) (and (= ($Box refType ($Unbox refType bx@@15)) bx@@15) ($Is refType ($Unbox refType bx@@15) Tclass._module.EmptyType?)))
 :pattern ( ($IsBox bx@@15 Tclass._module.EmptyType?))
)))
(assert (forall ((bx@@16 T@U) ) (!  (=> ($IsBox bx@@16 Tclass._module.EmptyType) (and (= ($Box refType ($Unbox refType bx@@16)) bx@@16) ($Is refType ($Unbox refType bx@@16) Tclass._module.EmptyType)))
 :pattern ( ($IsBox bx@@16 Tclass._module.EmptyType))
)))
(assert (forall ((|c#0@@5| T@U) ) (! (= ($Is refType |c#0@@5| Tclass._module.Universe)  (and ($Is refType |c#0@@5| Tclass._module.Universe?) (or (not (= |c#0@@5| null)) (not true))))
 :pattern ( ($Is refType |c#0@@5| Tclass._module.Universe))
 :pattern ( ($Is refType |c#0@@5| Tclass._module.Universe?))
)))
(assert (forall ((|c#0@@6| T@U) ) (! (= ($Is refType |c#0@@6| Tclass._module.Object)  (and ($Is refType |c#0@@6| Tclass._module.Object?) (or (not (= |c#0@@6| null)) (not true))))
 :pattern ( ($Is refType |c#0@@6| Tclass._module.Object))
 :pattern ( ($Is refType |c#0@@6| Tclass._module.Object?))
)))
(assert (forall ((|c#0@@7| T@U) ) (! (= ($Is refType |c#0@@7| Tclass._module.NonOwnedObject)  (and ($Is refType |c#0@@7| Tclass._module.NonOwnedObject?) (or (not (= |c#0@@7| null)) (not true))))
 :pattern ( ($Is refType |c#0@@7| Tclass._module.NonOwnedObject))
 :pattern ( ($Is refType |c#0@@7| Tclass._module.NonOwnedObject?))
)))
(assert (forall ((|c#0@@8| T@U) ) (! (= ($Is refType |c#0@@8| Tclass._module.OwnedObject)  (and ($Is refType |c#0@@8| Tclass._module.OwnedObject?) (or (not (= |c#0@@8| null)) (not true))))
 :pattern ( ($Is refType |c#0@@8| Tclass._module.OwnedObject))
 :pattern ( ($Is refType |c#0@@8| Tclass._module.OwnedObject?))
)))
(assert (forall ((|c#0@@9| T@U) ) (! (= ($Is refType |c#0@@9| Tclass._module.Thread)  (and ($Is refType |c#0@@9| Tclass._module.Thread?) (or (not (= |c#0@@9| null)) (not true))))
 :pattern ( ($Is refType |c#0@@9| Tclass._module.Thread))
 :pattern ( ($Is refType |c#0@@9| Tclass._module.Thread?))
)))
(assert (forall ((|c#0@@10| T@U) ) (! (= ($Is refType |c#0@@10| Tclass._module.EmptyType)  (and ($Is refType |c#0@@10| Tclass._module.EmptyType?) (or (not (= |c#0@@10| null)) (not true))))
 :pattern ( ($Is refType |c#0@@10| Tclass._module.EmptyType))
 :pattern ( ($Is refType |c#0@@10| Tclass._module.EmptyType?))
)))
(assert (forall (($h0@@14 T@U) ($h1@@14 T@U) (this@@35 T@U) (|owner#0@@1| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0@@14) ($IsGoodHeap $h1@@14)) (and (or (not (= this@@35 null)) (not true)) (and ($Is refType this@@35 Tclass._module.OwnedObject) ($IsAlloc refType this@@35 Tclass._module.OwnedObject $h0@@14)))) (or (|_module.OwnedObject.userFieldsOwnedBy#canCall| $h0@@14 this@@35 |owner#0@@1|) (and ($Is refType |owner#0@@1| Tclass._module.Object) ($IsAlloc refType |owner#0@@1| Tclass._module.Object $h0@@14)))) (and ($IsHeapAnchor $h0@@14) ($HeapSucc $h0@@14 $h1@@14))) (=> (forall (($o@@26 T@U) ($f@@15 T@U) )  (=> (and (or (not (= $o@@26 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@14 $o@@26) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@14 $o@@26) $f@@15) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@14 $o@@26) $f@@15)))) (= (_module.OwnedObject.userFieldsOwnedBy $h0@@14 this@@35 |owner#0@@1|) (_module.OwnedObject.userFieldsOwnedBy $h1@@14 this@@35 |owner#0@@1|))))
 :pattern ( ($IsHeapAnchor $h0@@14) ($HeapSucc $h0@@14 $h1@@14) (_module.OwnedObject.userFieldsOwnedBy $h1@@14 this@@35 |owner#0@@1|))
)))
(assert (forall (($h0@@15 T@U) ($h1@@15 T@U) (this@@36 T@U) (|owner#0@@2| T@U) ) (!  (=> (and (and (and (and ($IsGoodHeap $h0@@15) ($IsGoodHeap $h1@@15)) (and (or (not (= this@@36 null)) (not true)) (and ($Is refType this@@36 Tclass._module.EmptyType) ($IsAlloc refType this@@36 Tclass._module.EmptyType $h0@@15)))) (or (|_module.EmptyType.userFieldsOwnedBy#canCall| $h0@@15 this@@36 |owner#0@@2|) (and ($Is refType |owner#0@@2| Tclass._module.Object) ($IsAlloc refType |owner#0@@2| Tclass._module.Object $h0@@15)))) (and ($IsHeapAnchor $h0@@15) ($HeapSucc $h0@@15 $h1@@15))) (=> (forall (($o@@27 T@U) ($f@@16 T@U) )  (=> (and (or (not (= $o@@27 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@15 $o@@27) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@15 $o@@27) $f@@16) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@15 $o@@27) $f@@16)))) (= (_module.EmptyType.userFieldsOwnedBy $h0@@15 this@@36 |owner#0@@2|) (_module.EmptyType.userFieldsOwnedBy $h1@@15 this@@36 |owner#0@@2|))))
 :pattern ( ($IsHeapAnchor $h0@@15) ($HeapSucc $h0@@15 $h1@@15) (_module.EmptyType.userFieldsOwnedBy $h1@@15 this@@36 |owner#0@@2|))
)))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@20 T@U) (this@@37 T@U) ) (!  (=> (or (|_module.OwnedObject.localInv#canCall| $Heap@@20 this@@37) (and (< 4 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@20) (and (or (not (= this@@37 null)) (not true)) (and ($Is refType this@@37 Tclass._module.OwnedObject) ($IsAlloc refType this@@37 Tclass._module.OwnedObject $Heap@@20)))))) (and (and (|_module.Object.baseInv#canCall| $Heap@@20 this@@37) (=> (_module.Object.baseInv $Heap@@20 this@@37) (=> (= (_module.Object.universe ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@20 this@@37) _module.OwnedObject.owner))) (_module.Object.universe this@@37)) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@20 (_module.Object.universe this@@37)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@20 this@@37) _module.OwnedObject.owner)) (and (|_module.OwnedObject.baseUserInv#canCall| $Heap@@20 this@@37) (=> (_module.OwnedObject.baseUserInv $Heap@@20 this@@37) (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@20 this@@37) _module.OwnedObject.closed))) (|_module.OwnedObject.localUserInv#canCall| $Heap@@20 this@@37)))))))) (= (_module.OwnedObject.localInv $Heap@@20 this@@37)  (and (and (and (and (_module.Object.baseInv $Heap@@20 this@@37) (= (_module.Object.universe ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@20 this@@37) _module.OwnedObject.owner))) (_module.Object.universe this@@37))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@20 (_module.Object.universe this@@37)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@20 this@@37) _module.OwnedObject.owner))) (_module.OwnedObject.baseUserInv $Heap@@20 this@@37)) (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@20 this@@37) _module.OwnedObject.closed))) (_module.OwnedObject.localUserInv $Heap@@20 this@@37))))))
 :pattern ( (_module.OwnedObject.localInv $Heap@@20 this@@37) ($IsGoodHeap $Heap@@20))
))))
(assert (forall ((a@@9 T@U) (b@@6 T@U) (o@@6 T@U) ) (! (= (|Set#IsMember| (|Set#Union| a@@9 b@@6) o@@6)  (or (|Set#IsMember| a@@9 o@@6) (|Set#IsMember| b@@6 o@@6)))
 :pattern ( (|Set#IsMember| (|Set#Union| a@@9 b@@6) o@@6))
)))
(assert (forall ((a@@10 T@U) (b@@7 T@U) ) (!  (=> (|Set#Disjoint| a@@10 b@@7) (and (= (|Set#Difference| (|Set#Union| a@@10 b@@7) a@@10) b@@7) (= (|Set#Difference| (|Set#Union| a@@10 b@@7) b@@7) a@@10)))
 :pattern ( (|Set#Union| a@@10 b@@7))
)))
(assert  (=> (<= 3 $FunctionContextHeight) (forall (($Heap@@21 T@U) (this@@38 T@U) ) (!  (=> (or (|_module.Object.baseInv#canCall| $Heap@@21 this@@38) (and (< 3 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@21) (and (or (not (= this@@38 null)) (not true)) (and ($Is refType this@@38 Tclass._module.Object) ($IsAlloc refType this@@38 Tclass._module.Object $Heap@@21)))))) (and (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@21 (_module.Object.universe this@@38)) _module.Universe.content)) ($Box refType this@@38)) (|_module.Universe.globalBaseInv#canCall| $Heap@@21 (_module.Object.universe this@@38))) (= (_module.Object.baseInv $Heap@@21 this@@38)  (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@21 (_module.Object.universe this@@38)) _module.Universe.content)) ($Box refType this@@38)) (_module.Universe.globalBaseInv $Heap@@21 (_module.Object.universe this@@38))))))
 :pattern ( (_module.Object.baseInv $Heap@@21 this@@38) ($IsGoodHeap $Heap@@21))
))))
(assert (forall (($o@@28 T@U) ($heap T@U) ) (!  (=> ($IsAlloc refType $o@@28 Tclass._module.NonOwnedObject? $heap) ($IsAlloc refType $o@@28 Tclass._module.Object? $heap))
 :pattern ( ($IsAlloc refType $o@@28 Tclass._module.NonOwnedObject? $heap))
)))
(assert (forall (($o@@29 T@U) ($heap@@0 T@U) ) (!  (=> ($IsAlloc refType $o@@29 Tclass._module.OwnedObject? $heap@@0) ($IsAlloc refType $o@@29 Tclass._module.Object? $heap@@0))
 :pattern ( ($IsAlloc refType $o@@29 Tclass._module.OwnedObject? $heap@@0))
)))
(assert (forall (($o@@30 T@U) ($heap@@1 T@U) ) (!  (=> ($IsAlloc refType $o@@30 Tclass._module.Thread? $heap@@1) ($IsAlloc refType $o@@30 Tclass._module.NonOwnedObject? $heap@@1))
 :pattern ( ($IsAlloc refType $o@@30 Tclass._module.Thread? $heap@@1))
)))
(assert (forall (($o@@31 T@U) ($heap@@2 T@U) ) (!  (=> ($IsAlloc refType $o@@31 Tclass._module.EmptyType? $heap@@2) ($IsAlloc refType $o@@31 Tclass._module.OwnedObject? $heap@@2))
 :pattern ( ($IsAlloc refType $o@@31 Tclass._module.EmptyType? $heap@@2))
)))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($Heap@@22 T@U) (this@@39 T@U) ) (!  (=> (or (|_module.Object.objectGlobalInv#canCall| $Heap@@22 this@@39) (and (< 8 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@22) (and (or (not (= this@@39 null)) (not true)) (and ($Is refType this@@39 Tclass._module.Object) ($IsAlloc refType this@@39 Tclass._module.Object $Heap@@22)))))) (and (and (|_module.Object.baseInv#canCall| $Heap@@22 this@@39) (=> (_module.Object.baseInv $Heap@@22 this@@39) (|_module.Universe.globalInv#canCall| $Heap@@22 (_module.Object.universe this@@39)))) (= (_module.Object.objectGlobalInv $Heap@@22 this@@39)  (and (_module.Object.baseInv $Heap@@22 this@@39) (_module.Universe.globalInv $Heap@@22 (_module.Object.universe this@@39))))))
 :pattern ( (_module.Object.objectGlobalInv $Heap@@22 this@@39) ($IsGoodHeap $Heap@@22))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@22 T@U) ($Heap@@23 T@U) (this@@40 T@U) ) (!  (=> (or (|_module.Thread.localInv2#canCall| $prevHeap@@22 $Heap@@23 this@@40) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@22) ($IsGoodHeap $Heap@@23)) ($HeapSucc $prevHeap@@22 $Heap@@23)) (and (or (not (= this@@40 null)) (not true)) (and ($Is refType this@@40 Tclass._module.Thread) ($IsAlloc refType this@@40 Tclass._module.Thread $prevHeap@@22)))))) (= (_module.Thread.localInv2 $prevHeap@@22 $Heap@@23 this@@40) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.Thread.localInv2 $prevHeap@@22 $Heap@@23 this@@40) ($IsGoodHeap $Heap@@23))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@23 T@U) ($Heap@@24 T@U) (this@@41 T@U) ) (!  (=> (or (|_module.EmptyType.userFieldsUnchanged#canCall| $prevHeap@@23 $Heap@@24 this@@41) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@23) ($IsGoodHeap $Heap@@24)) ($HeapSucc $prevHeap@@23 $Heap@@24)) (and (or (not (= this@@41 null)) (not true)) (and ($Is refType this@@41 Tclass._module.EmptyType) ($IsAlloc refType this@@41 Tclass._module.EmptyType $prevHeap@@23)))))) (= (_module.EmptyType.userFieldsUnchanged $prevHeap@@23 $Heap@@24 this@@41) (U_2_bool (Lit boolType (bool_2_U true)))))
 :pattern ( (_module.EmptyType.userFieldsUnchanged $prevHeap@@23 $Heap@@24 this@@41) ($IsGoodHeap $Heap@@24))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@24 T@U) ($Heap@@25 T@U) (this@@42 T@U) ) (!  (=> (or (|_module.EmptyType.userInv2#canCall| $prevHeap@@24 $Heap@@25 this@@42) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@24) ($IsGoodHeap $Heap@@25)) ($HeapSucc $prevHeap@@24 $Heap@@25)) (and (or (not (= this@@42 null)) (not true)) (and ($Is refType this@@42 Tclass._module.EmptyType) ($IsAlloc refType this@@42 Tclass._module.EmptyType $prevHeap@@24)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.EmptyType.localUserInv2#canCall| $prevHeap@@24 $Heap@@25 this@@42)) (= (_module.EmptyType.userInv2 $prevHeap@@24 $Heap@@25 this@@42)  (and true (_module.EmptyType.localUserInv2 $prevHeap@@24 $Heap@@25 this@@42)))))
 :pattern ( (_module.EmptyType.userInv2 $prevHeap@@24 $Heap@@25 this@@42) ($IsGoodHeap $Heap@@25))
))))
(assert  (=> (<= 0 $FunctionContextHeight) (forall (($prevHeap@@25 T@U) ($Heap@@26 T@U) (this@@43 T@U) ) (!  (=> (or (|_module.EmptyType.localUserInv2#canCall| $prevHeap@@25 $Heap@@26 this@@43) (and (< 0 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@25) ($IsGoodHeap $Heap@@26)) ($HeapSucc $prevHeap@@25 $Heap@@26)) (and (or (not (= this@@43 null)) (not true)) (and ($Is refType this@@43 Tclass._module.EmptyType) ($IsAlloc refType this@@43 Tclass._module.EmptyType $prevHeap@@25)))))) (= (_module.EmptyType.localUserInv2 $prevHeap@@25 $Heap@@26 this@@43) (U_2_bool (Lit boolType (bool_2_U  (and true true))))))
 :pattern ( (_module.EmptyType.localUserInv2 $prevHeap@@25 $Heap@@26 this@@43) ($IsGoodHeap $Heap@@26))
))))
(assert (forall ((a@@11 T@U) (b@@8 T@U) ) (!  (=> (|Set#Equal| a@@11 b@@8) (= a@@11 b@@8))
 :pattern ( (|Set#Equal| a@@11 b@@8))
)))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($prevHeap@@26 T@U) ($Heap@@27 T@U) (this@@44 T@U) (|running#0@@1| T@U) ) (!  (=> (or (|_module.Universe.multipleLegalTransitions#canCall| $prevHeap@@26 $Heap@@27 this@@44 |running#0@@1|) (and (< 8 $FunctionContextHeight) (and (and (and (and ($IsGoodHeap $prevHeap@@26) ($IsGoodHeap $Heap@@27)) ($HeapSucc $prevHeap@@26 $Heap@@27)) (and (or (not (= this@@44 null)) (not true)) (and ($Is refType this@@44 Tclass._module.Universe) ($IsAlloc refType this@@44 Tclass._module.Universe $prevHeap@@26)))) ($Is SetType |running#0@@1| (TSet Tclass._module.Thread))))) (and (and (|_module.Universe.globalInv#canCall| $prevHeap@@26 this@@44) (=> (_module.Universe.globalInv $prevHeap@@26 this@@44) (and (|_module.Universe.globalBaseInv#canCall| $Heap@@27 this@@44) (=> (_module.Universe.globalBaseInv $Heap@@27 this@@44) (=> (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content))) (=> (forall ((|o#0@@2| T@U) ) (!  (=> (and ($Is refType |o#0@@2| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#0@@2|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)) ($Box refType |o#0@@2|)))) (not ($IsAllocBox ($Box refType |o#0@@2|) Tclass._module.Object $prevHeap@@26)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)) ($Box refType |o#0@@2|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#0@@2|)))
)) (and (forall ((|o#1@@0| T@U) ) (!  (=> ($Is refType |o#1@@0| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#1@@0|)) (=> (not (forall (($o@@32 T@U) ($f@@17 T@U) ) (!  (=> (or (not (= $o@@32 null)) (not true)) (=> (= $o@@32 |o#1@@0|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 $o@@32) $f@@17) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 $o@@32) $f@@17))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 $o@@32) $f@@17))
))) (|_module.Object.inv#canCall| $Heap@@27 |o#1@@0|))))
 :pattern ( (_module.Object.inv $Heap@@27 |o#1@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#1@@0|)))
)) (=> (forall ((|o#1@@1| T@U) ) (!  (=> (and ($Is refType |o#1@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#1@@1|))) (or (forall (($o@@33 T@U) ($f@@18 T@U) ) (!  (=> (or (not (= $o@@33 null)) (not true)) (=> (= $o@@33 |o#1@@1|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 $o@@33) $f@@18) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 $o@@33) $f@@18))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 $o@@33) $f@@18))
)) (_module.Object.inv $Heap@@27 |o#1@@1|)))
 :pattern ( (_module.Object.inv $Heap@@27 |o#1@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#1@@1|)))
)) (forall ((|o#2| T@U) ) (!  (=> ($Is refType |o#2| Tclass._module.Object) (=> (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)) ($Box refType |o#2|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#2|)))) (|_module.Object.inv#canCall| $Heap@@27 |o#2|)))
 :pattern ( (_module.Object.inv $Heap@@27 |o#2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#2|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)) ($Box refType |o#2|)))
)))))))))) (= (_module.Universe.multipleLegalTransitions $prevHeap@@26 $Heap@@27 this@@44 |running#0@@1|)  (and (and (and (and (and (and (and (_module.Universe.globalInv $prevHeap@@26 this@@44) (_module.Universe.globalBaseInv $Heap@@27 this@@44)) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)))) (forall ((|o#0@@3| T@U) ) (!  (=> (and ($Is refType |o#0@@3| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#0@@3|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)) ($Box refType |o#0@@3|)))) (not ($IsAllocBox ($Box refType |o#0@@3|) Tclass._module.Object $prevHeap@@26)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)) ($Box refType |o#0@@3|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#0@@3|)))
))) (forall ((|o#1@@2| T@U) ) (!  (=> (and ($Is refType |o#1@@2| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#1@@2|))) (or (forall (($o@@34 T@U) ($f@@19 T@U) ) (!  (=> (or (not (= $o@@34 null)) (not true)) (=> (= $o@@34 |o#1@@2|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 $o@@34) $f@@19) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 $o@@34) $f@@19))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 $o@@34) $f@@19))
)) (_module.Object.inv $Heap@@27 |o#1@@2|)))
 :pattern ( (_module.Object.inv $Heap@@27 |o#1@@2|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#1@@2|)))
))) (forall ((|o#2@@0| T@U) ) (!  (=> (and ($Is refType |o#2@@0| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)) ($Box refType |o#2@@0|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#2@@0|))))) (_module.Object.inv $Heap@@27 |o#2@@0|))
 :pattern ( (_module.Object.inv $Heap@@27 |o#2@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#2@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 this@@44) _module.Universe.content)) ($Box refType |o#2@@0|)))
))) (forall ((|t#0| T@U) ) (!  (=> (and ($Is refType |t#0| Tclass._module.Thread) (|Set#IsMember| |running#0@@1| ($Box refType |t#0|))) (and (= (_module.Object.universe |t#0|) this@@44) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |t#0|))))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |t#0|)))
 :pattern ( (_module.Object.universe |t#0|))
 :pattern ( (|Set#IsMember| |running#0@@1| ($Box refType |t#0|)))
))) (forall ((|o#3| T@U) ) (!  (=> (and ($Is refType |o#3| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#3|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 |o#3|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (not (|Set#IsMember| |running#0@@1| (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 |o#3|) _module.OwnedObject.owner))) (forall (($o@@35 T@U) ($f@@20 T@U) ) (!  (=> (or (not (= $o@@35 null)) (not true)) (=> (= $o@@35 |o#3|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 $o@@35) $f@@20) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 $o@@35) $f@@20))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@27 $o@@35) $f@@20))
))))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 |o#3|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@26 this@@44) _module.Universe.content)) ($Box refType |o#3|)))
))))))
 :pattern ( (_module.Universe.multipleLegalTransitions $prevHeap@@26 $Heap@@27 this@@44 |running#0@@1|) ($IsGoodHeap $Heap@@27))
))))
(assert (forall ((a@@12 T@U) (b@@9 T@U) (c T@U) ) (!  (=> (or (not (= a@@12 c)) (not true)) (=> (and ($HeapSucc a@@12 b@@9) ($HeapSucc b@@9 c)) ($HeapSucc a@@12 c)))
 :pattern ( ($HeapSucc a@@12 b@@9) ($HeapSucc b@@9 c))
)))
(assert (forall ((cl T@U) (nm T@U) ) (!  (and (= (DeclType (FieldOfDecl cl nm)) cl) (= (DeclName (FieldOfDecl cl nm)) nm))
 :pattern ( (FieldOfDecl cl nm))
)))
(assert (forall ((bx@@17 T@U) ) (!  (=> ($IsBox bx@@17 TBool) (and (= ($Box boolType ($Unbox boolType bx@@17)) bx@@17) ($Is boolType ($Unbox boolType bx@@17) TBool)))
 :pattern ( ($IsBox bx@@17 TBool))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@28 T@U) (this@@45 T@U) ) (!  (=> (or (|_module.EmptyType.userInv#canCall| $Heap@@28 this@@45) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@28) (and (or (not (= this@@45 null)) (not true)) (and ($Is refType this@@45 Tclass._module.EmptyType) ($IsAlloc refType this@@45 Tclass._module.EmptyType $Heap@@28)))))) (=> (_module.EmptyType.userInv $Heap@@28 this@@45) (_module.EmptyType.localUserInv $Heap@@28 this@@45)))
 :pattern ( (_module.EmptyType.userInv $Heap@@28 this@@45))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($Heap@@29 T@U) (this@@46 T@U) ) (!  (=> (or (|_module.OwnedObject.userInv#canCall| $Heap@@29 this@@46) (and (< 2 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@29) (and (or (not (= this@@46 null)) (not true)) (and ($Is refType this@@46 Tclass._module.OwnedObject) ($IsAlloc refType this@@46 Tclass._module.OwnedObject $Heap@@29)))))) (=> (_module.OwnedObject.userInv $Heap@@29 this@@46) (_module.OwnedObject.localUserInv $Heap@@29 this@@46)))
 :pattern ( (_module.OwnedObject.userInv $Heap@@29 this@@46))
))))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($Heap@@30 T@U) (this@@47 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@30 this@@47) (and (< 5 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@30) (and (or (not (= this@@47 null)) (not true)) (and ($Is refType this@@47 Tclass._module.OwnedObject) ($IsAlloc refType this@@47 Tclass._module.OwnedObject $Heap@@30)))))) (=> (_module.OwnedObject.inv $Heap@@30 this@@47) (_module.OwnedObject.localInv $Heap@@30 this@@47)))
 :pattern ( (_module.OwnedObject.inv $Heap@@30 this@@47))
))))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($Heap@@31 T@U) (this@@48 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@31 this@@48) (and (< 5 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@31) (and (or (not (= this@@48 null)) (not true)) (and ($Is refType this@@48 Tclass._module.Thread) ($IsAlloc refType this@@48 Tclass._module.Thread $Heap@@31)))))) (=> (_module.Thread.inv $Heap@@31 this@@48) (_module.Thread.localInv $Heap@@31 this@@48)))
 :pattern ( (_module.Thread.inv $Heap@@31 this@@48))
))))
(assert  (=> (<= 6 $FunctionContextHeight) (forall (($Heap@@32 T@U) (this@@49 T@U) ) (!  (=> (or (|_module.Object.inv#canCall| $Heap@@32 this@@49) (and (< 6 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@32) (and (or (not (= this@@49 null)) (not true)) (and ($Is refType this@@49 Tclass._module.Object) ($IsAlloc refType this@@49 Tclass._module.Object $Heap@@32)))))) (=> (_module.Object.inv $Heap@@32 this@@49) (_module.Object.localInv $Heap@@32 this@@49)))
 :pattern ( (_module.Object.inv $Heap@@32 this@@49))
))))
(assert (forall ((v@@2 T@U) (t@@2 T@U) (T@@3 T@T) ) (! (= ($IsBox ($Box T@@3 v@@2) t@@2) ($Is T@@3 v@@2 t@@2))
 :pattern ( ($IsBox ($Box T@@3 v@@2) t@@2))
)))
(assert (forall ((v@@3 T@U) (t0@@2 T@U) (h@@4 T@U) ) (! (= ($IsAlloc SetType v@@3 (TSet t0@@2) h@@4) (forall ((bx@@18 T@U) ) (!  (=> (|Set#IsMember| v@@3 bx@@18) ($IsAllocBox bx@@18 t0@@2 h@@4))
 :pattern ( (|Set#IsMember| v@@3 bx@@18))
)))
 :pattern ( ($IsAlloc SetType v@@3 (TSet t0@@2) h@@4))
)))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($Heap@@33 T@U) (this@@50 T@U) ) (!  (=> (or (|_module.OwnedObject.inv#canCall| $Heap@@33 this@@50) (and (< 5 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@33) (and (or (not (= this@@50 null)) (not true)) (and ($Is refType this@@50 Tclass._module.OwnedObject) ($IsAlloc refType this@@50 Tclass._module.OwnedObject $Heap@@33)))))) (and (and (|_module.OwnedObject.localInv#canCall| $Heap@@33 this@@50) (=> (_module.OwnedObject.localInv $Heap@@33 this@@50) (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@33 this@@50) _module.OwnedObject.closed))) (|_module.OwnedObject.userInv#canCall| $Heap@@33 this@@50)))) (= (_module.OwnedObject.inv $Heap@@33 this@@50)  (and (_module.OwnedObject.localInv $Heap@@33 this@@50) (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@33 this@@50) _module.OwnedObject.closed))) (_module.OwnedObject.userInv $Heap@@33 this@@50))))))
 :pattern ( (_module.OwnedObject.inv $Heap@@33 this@@50) ($IsGoodHeap $Heap@@33))
))))
(assert (forall (($h@@17 T@U) ($o@@36 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@17) (and (or (not (= $o@@36 null)) (not true)) ($Is refType $o@@36 Tclass._module.OwnedObject?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@17 $o@@36) alloc)))) ($IsAlloc boolType ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@17 $o@@36) _module.OwnedObject.closed)) TBool $h@@17))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@17 $o@@36) _module.OwnedObject.closed)))
)))
(assert (forall ((t@@3 T@U) ) (! (= (Inv0_TSet (TSet t@@3)) t@@3)
 :pattern ( (TSet t@@3))
)))
(assert (forall ((t@@4 T@U) ) (! (= (Tag (TSet t@@4)) TagSet)
 :pattern ( (TSet t@@4))
)))
(assert (forall ((x@@7 T@U) (T@@4 T@T) ) (! (= ($Unbox T@@4 ($Box T@@4 x@@7)) x@@7)
 :pattern ( ($Box T@@4 x@@7))
)))
(assert (forall (($h0@@16 T@U) ($h1@@16 T@U) (this@@51 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@16) ($IsGoodHeap $h1@@16)) (and (or (not (= this@@51 null)) (not true)) ($Is refType this@@51 Tclass._module.Universe))) (and ($IsHeapAnchor $h0@@16) ($HeapSucc $h0@@16 $h1@@16))) (=> (forall (($o@@37 T@U) ($f@@21 T@U) )  (=> (and (or (not (= $o@@37 null)) (not true)) (or (= $o@@37 this@@51) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@16 this@@51) _module.Universe.content)) ($Box refType $o@@37)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@16 $o@@37) $f@@21) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@16 $o@@37) $f@@21)))) (= (_module.Universe.globalBaseInv $h0@@16 this@@51) (_module.Universe.globalBaseInv $h1@@16 this@@51))))
 :pattern ( ($IsHeapAnchor $h0@@16) ($HeapSucc $h0@@16 $h1@@16) (_module.Universe.globalBaseInv $h1@@16 this@@51))
)))
(assert (forall ((a@@13 T@U) (b@@10 T@U) ) (! (= (|Set#Union| a@@13 (|Set#Union| a@@13 b@@10)) (|Set#Union| a@@13 b@@10))
 :pattern ( (|Set#Union| a@@13 (|Set#Union| a@@13 b@@10)))
)))
(assert (forall (($h@@18 T@U) ($o@@38 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@18) (and (or (not (= $o@@38 null)) (not true)) ($Is refType $o@@38 Tclass._module.OwnedObject?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@18 $o@@38) alloc)))) ($IsAlloc refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@18 $o@@38) _module.OwnedObject.owner)) Tclass._module.Object $h@@18))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@18 $o@@38) _module.OwnedObject.owner)))
)))
(assert (forall (($h0@@17 T@U) ($h1@@17 T@U) (this@@52 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@17) ($IsGoodHeap $h1@@17)) (and (or (not (= this@@52 null)) (not true)) (and ($Is refType this@@52 Tclass._module.Universe) ($IsAlloc refType this@@52 Tclass._module.Universe $h0@@17)))) (and ($IsHeapAnchor $h0@@17) ($HeapSucc $h0@@17 $h1@@17))) (=> (forall (($o@@39 T@U) ($f@@22 T@U) )  (=> (and (or (not (= $o@@39 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@17 $o@@39) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@17 $o@@39) $f@@22) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@17 $o@@39) $f@@22)))) (= (_module.Universe.globalInv $h0@@17 this@@52) (_module.Universe.globalInv $h1@@17 this@@52))))
 :pattern ( ($IsHeapAnchor $h0@@17) ($HeapSucc $h0@@17 $h1@@17) (_module.Universe.globalInv $h1@@17 this@@52))
)))
(assert (forall (($h0@@18 T@U) ($h1@@18 T@U) (this@@53 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@18) ($IsGoodHeap $h1@@18)) (and (or (not (= this@@53 null)) (not true)) (and ($Is refType this@@53 Tclass._module.Object) ($IsAlloc refType this@@53 Tclass._module.Object $h0@@18)))) (and ($IsHeapAnchor $h0@@18) ($HeapSucc $h0@@18 $h1@@18))) (=> (forall (($o@@40 T@U) ($f@@23 T@U) )  (=> (and (or (not (= $o@@40 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@18 $o@@40) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@18 $o@@40) $f@@23) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@18 $o@@40) $f@@23)))) (= (_module.Object.baseInv $h0@@18 this@@53) (_module.Object.baseInv $h1@@18 this@@53))))
 :pattern ( ($IsHeapAnchor $h0@@18) ($HeapSucc $h0@@18 $h1@@18) (_module.Object.baseInv $h1@@18 this@@53))
)))
(assert (forall (($h0@@19 T@U) ($h1@@19 T@U) (this@@54 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@19) ($IsGoodHeap $h1@@19)) (and (or (not (= this@@54 null)) (not true)) (and ($Is refType this@@54 Tclass._module.Object) ($IsAlloc refType this@@54 Tclass._module.Object $h0@@19)))) (and ($IsHeapAnchor $h0@@19) ($HeapSucc $h0@@19 $h1@@19))) (=> (forall (($o@@41 T@U) ($f@@24 T@U) )  (=> (and (or (not (= $o@@41 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@19 $o@@41) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@19 $o@@41) $f@@24) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@19 $o@@41) $f@@24)))) (= (_module.Object.objectGlobalInv $h0@@19 this@@54) (_module.Object.objectGlobalInv $h1@@19 this@@54))))
 :pattern ( ($IsHeapAnchor $h0@@19) ($HeapSucc $h0@@19 $h1@@19) (_module.Object.objectGlobalInv $h1@@19 this@@54))
)))
(assert (forall (($h0@@20 T@U) ($h1@@20 T@U) (this@@55 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@20) ($IsGoodHeap $h1@@20)) (and (or (not (= this@@55 null)) (not true)) (and ($Is refType this@@55 Tclass._module.Object) ($IsAlloc refType this@@55 Tclass._module.Object $h0@@20)))) (and ($IsHeapAnchor $h0@@20) ($HeapSucc $h0@@20 $h1@@20))) (=> (forall (($o@@42 T@U) ($f@@25 T@U) )  (=> (and (or (not (= $o@@42 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@20 $o@@42) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@20 $o@@42) $f@@25) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@20 $o@@42) $f@@25)))) (= (_module.Object.localInv $h0@@20 this@@55) (_module.Object.localInv $h1@@20 this@@55))))
 :pattern ( ($IsHeapAnchor $h0@@20) ($HeapSucc $h0@@20 $h1@@20) (_module.Object.localInv $h1@@20 this@@55))
)))
(assert (forall (($h0@@21 T@U) ($h1@@21 T@U) (this@@56 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@21) ($IsGoodHeap $h1@@21)) (and (or (not (= this@@56 null)) (not true)) (and ($Is refType this@@56 Tclass._module.Object) ($IsAlloc refType this@@56 Tclass._module.Object $h0@@21)))) (and ($IsHeapAnchor $h0@@21) ($HeapSucc $h0@@21 $h1@@21))) (=> (forall (($o@@43 T@U) ($f@@26 T@U) )  (=> (and (or (not (= $o@@43 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@21 $o@@43) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@21 $o@@43) $f@@26) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@21 $o@@43) $f@@26)))) (= (_module.Object.inv $h0@@21 this@@56) (_module.Object.inv $h1@@21 this@@56))))
 :pattern ( ($IsHeapAnchor $h0@@21) ($HeapSucc $h0@@21 $h1@@21) (_module.Object.inv $h1@@21 this@@56))
)))
(assert (forall (($h0@@22 T@U) ($h1@@22 T@U) (this@@57 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@22) ($IsGoodHeap $h1@@22)) (and (or (not (= this@@57 null)) (not true)) (and ($Is refType this@@57 Tclass._module.OwnedObject) ($IsAlloc refType this@@57 Tclass._module.OwnedObject $h0@@22)))) (and ($IsHeapAnchor $h0@@22) ($HeapSucc $h0@@22 $h1@@22))) (=> (forall (($o@@44 T@U) ($f@@27 T@U) )  (=> (and (or (not (= $o@@44 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@22 $o@@44) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@22 $o@@44) $f@@27) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@22 $o@@44) $f@@27)))) (= (_module.OwnedObject.localInv $h0@@22 this@@57) (_module.OwnedObject.localInv $h1@@22 this@@57))))
 :pattern ( ($IsHeapAnchor $h0@@22) ($HeapSucc $h0@@22 $h1@@22) (_module.OwnedObject.localInv $h1@@22 this@@57))
)))
(assert (forall (($h0@@23 T@U) ($h1@@23 T@U) (this@@58 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@23) ($IsGoodHeap $h1@@23)) (and (or (not (= this@@58 null)) (not true)) (and ($Is refType this@@58 Tclass._module.OwnedObject) ($IsAlloc refType this@@58 Tclass._module.OwnedObject $h0@@23)))) (and ($IsHeapAnchor $h0@@23) ($HeapSucc $h0@@23 $h1@@23))) (=> (forall (($o@@45 T@U) ($f@@28 T@U) )  (=> (and (or (not (= $o@@45 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@23 $o@@45) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@23 $o@@45) $f@@28) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@23 $o@@45) $f@@28)))) (= (_module.OwnedObject.inv $h0@@23 this@@58) (_module.OwnedObject.inv $h1@@23 this@@58))))
 :pattern ( ($IsHeapAnchor $h0@@23) ($HeapSucc $h0@@23 $h1@@23) (_module.OwnedObject.inv $h1@@23 this@@58))
)))
(assert (forall (($h0@@24 T@U) ($h1@@24 T@U) (this@@59 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@24) ($IsGoodHeap $h1@@24)) (and (or (not (= this@@59 null)) (not true)) (and ($Is refType this@@59 Tclass._module.OwnedObject) ($IsAlloc refType this@@59 Tclass._module.OwnedObject $h0@@24)))) (and ($IsHeapAnchor $h0@@24) ($HeapSucc $h0@@24 $h1@@24))) (=> (forall (($o@@46 T@U) ($f@@29 T@U) )  (=> (and (or (not (= $o@@46 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@24 $o@@46) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@24 $o@@46) $f@@29) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@24 $o@@46) $f@@29)))) (= (_module.OwnedObject.baseUserInv $h0@@24 this@@59) (_module.OwnedObject.baseUserInv $h1@@24 this@@59))))
 :pattern ( ($IsHeapAnchor $h0@@24) ($HeapSucc $h0@@24 $h1@@24) (_module.OwnedObject.baseUserInv $h1@@24 this@@59))
)))
(assert (forall (($h0@@25 T@U) ($h1@@25 T@U) (this@@60 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@25) ($IsGoodHeap $h1@@25)) (and (or (not (= this@@60 null)) (not true)) (and ($Is refType this@@60 Tclass._module.OwnedObject) ($IsAlloc refType this@@60 Tclass._module.OwnedObject $h0@@25)))) (and ($IsHeapAnchor $h0@@25) ($HeapSucc $h0@@25 $h1@@25))) (=> (forall (($o@@47 T@U) ($f@@30 T@U) )  (=> (and (or (not (= $o@@47 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@25 $o@@47) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@25 $o@@47) $f@@30) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@25 $o@@47) $f@@30)))) (= (_module.OwnedObject.localUserInv $h0@@25 this@@60) (_module.OwnedObject.localUserInv $h1@@25 this@@60))))
 :pattern ( ($IsHeapAnchor $h0@@25) ($HeapSucc $h0@@25 $h1@@25) (_module.OwnedObject.localUserInv $h1@@25 this@@60))
)))
(assert (forall (($h0@@26 T@U) ($h1@@26 T@U) (this@@61 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@26) ($IsGoodHeap $h1@@26)) (and (or (not (= this@@61 null)) (not true)) (and ($Is refType this@@61 Tclass._module.OwnedObject) ($IsAlloc refType this@@61 Tclass._module.OwnedObject $h0@@26)))) (and ($IsHeapAnchor $h0@@26) ($HeapSucc $h0@@26 $h1@@26))) (=> (forall (($o@@48 T@U) ($f@@31 T@U) )  (=> (and (or (not (= $o@@48 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@26 $o@@48) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@26 $o@@48) $f@@31) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@26 $o@@48) $f@@31)))) (= (_module.OwnedObject.userInv $h0@@26 this@@61) (_module.OwnedObject.userInv $h1@@26 this@@61))))
 :pattern ( ($IsHeapAnchor $h0@@26) ($HeapSucc $h0@@26 $h1@@26) (_module.OwnedObject.userInv $h1@@26 this@@61))
)))
(assert (forall (($h0@@27 T@U) ($h1@@27 T@U) (this@@62 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@27) ($IsGoodHeap $h1@@27)) (and (or (not (= this@@62 null)) (not true)) (and ($Is refType this@@62 Tclass._module.Thread) ($IsAlloc refType this@@62 Tclass._module.Thread $h0@@27)))) (and ($IsHeapAnchor $h0@@27) ($HeapSucc $h0@@27 $h1@@27))) (=> (forall (($o@@49 T@U) ($f@@32 T@U) )  (=> (and (or (not (= $o@@49 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@27 $o@@49) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@27 $o@@49) $f@@32) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@27 $o@@49) $f@@32)))) (= (_module.Thread.localInv $h0@@27 this@@62) (_module.Thread.localInv $h1@@27 this@@62))))
 :pattern ( ($IsHeapAnchor $h0@@27) ($HeapSucc $h0@@27 $h1@@27) (_module.Thread.localInv $h1@@27 this@@62))
)))
(assert (forall (($h0@@28 T@U) ($h1@@28 T@U) (this@@63 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@28) ($IsGoodHeap $h1@@28)) (and (or (not (= this@@63 null)) (not true)) (and ($Is refType this@@63 Tclass._module.Thread) ($IsAlloc refType this@@63 Tclass._module.Thread $h0@@28)))) (and ($IsHeapAnchor $h0@@28) ($HeapSucc $h0@@28 $h1@@28))) (=> (forall (($o@@50 T@U) ($f@@33 T@U) )  (=> (and (or (not (= $o@@50 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@28 $o@@50) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@28 $o@@50) $f@@33) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@28 $o@@50) $f@@33)))) (= (_module.Thread.inv $h0@@28 this@@63) (_module.Thread.inv $h1@@28 this@@63))))
 :pattern ( ($IsHeapAnchor $h0@@28) ($HeapSucc $h0@@28 $h1@@28) (_module.Thread.inv $h1@@28 this@@63))
)))
(assert (forall (($h0@@29 T@U) ($h1@@29 T@U) (this@@64 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@29) ($IsGoodHeap $h1@@29)) (and (or (not (= this@@64 null)) (not true)) (and ($Is refType this@@64 Tclass._module.EmptyType) ($IsAlloc refType this@@64 Tclass._module.EmptyType $h0@@29)))) (and ($IsHeapAnchor $h0@@29) ($HeapSucc $h0@@29 $h1@@29))) (=> (forall (($o@@51 T@U) ($f@@34 T@U) )  (=> (and (or (not (= $o@@51 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@29 $o@@51) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@29 $o@@51) $f@@34) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@29 $o@@51) $f@@34)))) (= (_module.EmptyType.baseUserInv $h0@@29 this@@64) (_module.EmptyType.baseUserInv $h1@@29 this@@64))))
 :pattern ( ($IsHeapAnchor $h0@@29) ($HeapSucc $h0@@29 $h1@@29) (_module.EmptyType.baseUserInv $h1@@29 this@@64))
)))
(assert (forall (($h0@@30 T@U) ($h1@@30 T@U) (this@@65 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@30) ($IsGoodHeap $h1@@30)) (and (or (not (= this@@65 null)) (not true)) (and ($Is refType this@@65 Tclass._module.EmptyType) ($IsAlloc refType this@@65 Tclass._module.EmptyType $h0@@30)))) (and ($IsHeapAnchor $h0@@30) ($HeapSucc $h0@@30 $h1@@30))) (=> (forall (($o@@52 T@U) ($f@@35 T@U) )  (=> (and (or (not (= $o@@52 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@30 $o@@52) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@30 $o@@52) $f@@35) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@30 $o@@52) $f@@35)))) (= (_module.EmptyType.localUserInv $h0@@30 this@@65) (_module.EmptyType.localUserInv $h1@@30 this@@65))))
 :pattern ( ($IsHeapAnchor $h0@@30) ($HeapSucc $h0@@30 $h1@@30) (_module.EmptyType.localUserInv $h1@@30 this@@65))
)))
(assert (forall (($h0@@31 T@U) ($h1@@31 T@U) (this@@66 T@U) ) (!  (=> (and (and (and ($IsGoodHeap $h0@@31) ($IsGoodHeap $h1@@31)) (and (or (not (= this@@66 null)) (not true)) (and ($Is refType this@@66 Tclass._module.EmptyType) ($IsAlloc refType this@@66 Tclass._module.EmptyType $h0@@31)))) (and ($IsHeapAnchor $h0@@31) ($HeapSucc $h0@@31 $h1@@31))) (=> (forall (($o@@53 T@U) ($f@@36 T@U) )  (=> (and (or (not (= $o@@53 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@31 $o@@53) alloc)))) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h0@@31 $o@@53) $f@@36) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h1@@31 $o@@53) $f@@36)))) (= (_module.EmptyType.userInv $h0@@31 this@@66) (_module.EmptyType.userInv $h1@@31 this@@66))))
 :pattern ( ($IsHeapAnchor $h0@@31) ($HeapSucc $h0@@31 $h1@@31) (_module.EmptyType.userInv $h1@@31 this@@66))
)))
(assert  (=> (<= 9 $FunctionContextHeight) (forall (($prevHeap@@27 T@U) ($Heap@@34 T@U) (this@@67 T@U) (|running#0@@2| T@U) ) (!  (=> (or (|_module.Universe.legalTransition#canCall| $prevHeap@@27 $Heap@@34 this@@67 |running#0@@2|) (and (< 9 $FunctionContextHeight) (and (and (and (and ($IsGoodHeap $prevHeap@@27) ($IsGoodHeap $Heap@@34)) ($HeapSucc $prevHeap@@27 $Heap@@34)) (and (or (not (= this@@67 null)) (not true)) (and ($Is refType this@@67 Tclass._module.Universe) ($IsAlloc refType this@@67 Tclass._module.Universe $prevHeap@@27)))) ($Is refType |running#0@@2| Tclass._module.Thread)))) (and (and (|_module.Universe.multipleLegalTransitions#canCall| $prevHeap@@27 $Heap@@34 this@@67 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (=> (_module.Universe.multipleLegalTransitions $prevHeap@@27 $Heap@@34 this@@67 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (forall ((|o#0@@4| T@U) ) (!  (=> ($Is refType |o#0@@4| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@27 this@@67) _module.Universe.content)) ($Box refType |o#0@@4|)) (=> (not (forall (($o@@54 T@U) ($f@@37 T@U) ) (!  (=> (or (not (= $o@@54 null)) (not true)) (=> (= $o@@54 |o#0@@4|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@34 $o@@54) $f@@37) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@27 $o@@54) $f@@37))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@34 $o@@54) $f@@37))
))) (|_module.Object.inv2#canCall| $prevHeap@@27 $Heap@@34 |o#0@@4|))))
 :pattern ( (_module.Object.inv2 $prevHeap@@27 $Heap@@34 |o#0@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@27 this@@67) _module.Universe.content)) ($Box refType |o#0@@4|)))
)))) (= (_module.Universe.legalTransition $prevHeap@@27 $Heap@@34 this@@67 |running#0@@2|)  (and (_module.Universe.multipleLegalTransitions $prevHeap@@27 $Heap@@34 this@@67 (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@2|))) (forall ((|o#0@@5| T@U) ) (!  (=> (and ($Is refType |o#0@@5| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@27 this@@67) _module.Universe.content)) ($Box refType |o#0@@5|))) (or (forall (($o@@55 T@U) ($f@@38 T@U) ) (!  (=> (or (not (= $o@@55 null)) (not true)) (=> (= $o@@55 |o#0@@5|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@34 $o@@55) $f@@38) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@27 $o@@55) $f@@38))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@34 $o@@55) $f@@38))
)) (_module.Object.inv2 $prevHeap@@27 $Heap@@34 |o#0@@5|)))
 :pattern ( (_module.Object.inv2 $prevHeap@@27 $Heap@@34 |o#0@@5|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@27 this@@67) _module.Universe.content)) ($Box refType |o#0@@5|)))
))))))
 :pattern ( (_module.Universe.legalTransition $prevHeap@@27 $Heap@@34 this@@67 |running#0@@2|) ($IsGoodHeap $Heap@@34))
))))
(assert (forall ((bx@@19 T@U) (t@@5 T@U) ) (!  (=> ($IsBox bx@@19 (TSet t@@5)) (and (= ($Box SetType ($Unbox SetType bx@@19)) bx@@19) ($Is SetType ($Unbox SetType bx@@19) (TSet t@@5))))
 :pattern ( ($IsBox bx@@19 (TSet t@@5)))
)))
(assert (forall (($o@@56 T@U) ) (!  (=> ($Is refType $o@@56 Tclass._module.NonOwnedObject?) ($Is refType $o@@56 Tclass._module.Object?))
 :pattern ( ($Is refType $o@@56 Tclass._module.NonOwnedObject?))
)))
(assert (forall ((bx@@20 T@U) ) (!  (=> ($IsBox bx@@20 Tclass._module.NonOwnedObject?) ($IsBox bx@@20 Tclass._module.Object?))
 :pattern ( ($IsBox bx@@20 Tclass._module.NonOwnedObject?))
)))
(assert (forall (($o@@57 T@U) ) (!  (=> ($Is refType $o@@57 Tclass._module.OwnedObject?) ($Is refType $o@@57 Tclass._module.Object?))
 :pattern ( ($Is refType $o@@57 Tclass._module.OwnedObject?))
)))
(assert (forall ((bx@@21 T@U) ) (!  (=> ($IsBox bx@@21 Tclass._module.OwnedObject?) ($IsBox bx@@21 Tclass._module.Object?))
 :pattern ( ($IsBox bx@@21 Tclass._module.OwnedObject?))
)))
(assert (forall (($o@@58 T@U) ) (!  (=> ($Is refType $o@@58 Tclass._module.Thread?) ($Is refType $o@@58 Tclass._module.NonOwnedObject?))
 :pattern ( ($Is refType $o@@58 Tclass._module.Thread?))
)))
(assert (forall ((bx@@22 T@U) ) (!  (=> ($IsBox bx@@22 Tclass._module.Thread?) ($IsBox bx@@22 Tclass._module.NonOwnedObject?))
 :pattern ( ($IsBox bx@@22 Tclass._module.Thread?))
)))
(assert (forall (($o@@59 T@U) ) (!  (=> ($Is refType $o@@59 Tclass._module.EmptyType?) ($Is refType $o@@59 Tclass._module.OwnedObject?))
 :pattern ( ($Is refType $o@@59 Tclass._module.EmptyType?))
)))
(assert (forall ((bx@@23 T@U) ) (!  (=> ($IsBox bx@@23 Tclass._module.EmptyType?) ($IsBox bx@@23 Tclass._module.OwnedObject?))
 :pattern ( ($IsBox bx@@23 Tclass._module.EmptyType?))
)))
(assert (forall ((h@@5 T@U) (r T@U) (f@@0 T@U) (x@@8 T@U) ) (!  (=> ($IsGoodHeap (MapType0Store refType (MapType0Type FieldType BoxType) h@@5 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@5 r) f@@0 x@@8))) ($HeapSucc h@@5 (MapType0Store refType (MapType0Type FieldType BoxType) h@@5 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@5 r) f@@0 x@@8))))
 :pattern ( (MapType0Store refType (MapType0Type FieldType BoxType) h@@5 r (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) h@@5 r) f@@0 x@@8)))
)))
(assert (= (Tag Tclass._module.Universe) Tagclass._module.Universe))
(assert (= (TagFamily Tclass._module.Universe) tytagFamily$Universe))
(assert (= (Tag Tclass._module.NonOwnedObject) Tagclass._module.NonOwnedObject))
(assert (= (TagFamily Tclass._module.NonOwnedObject) tytagFamily$NonOwnedObject))
(assert (= (Tag Tclass._module.OwnedObject) Tagclass._module.OwnedObject))
(assert (= (TagFamily Tclass._module.OwnedObject) tytagFamily$OwnedObject))
(assert (= (Tag Tclass._module.Universe?) Tagclass._module.Universe?))
(assert (= (TagFamily Tclass._module.Universe?) tytagFamily$Universe))
(assert (= (Tag Tclass._module.Object) Tagclass._module.Object))
(assert (= (TagFamily Tclass._module.Object) tytagFamily$Object))
(assert (= (Tag Tclass._module.Thread) Tagclass._module.Thread))
(assert (= (TagFamily Tclass._module.Thread) tytagFamily$Thread))
(assert (= (Tag Tclass._module.Object?) Tagclass._module.Object?))
(assert (= (TagFamily Tclass._module.Object?) tytagFamily$Object))
(assert (= (Tag Tclass._module.NonOwnedObject?) Tagclass._module.NonOwnedObject?))
(assert (= (TagFamily Tclass._module.NonOwnedObject?) tytagFamily$NonOwnedObject))
(assert (= (Tag Tclass._module.OwnedObject?) Tagclass._module.OwnedObject?))
(assert (= (TagFamily Tclass._module.OwnedObject?) tytagFamily$OwnedObject))
(assert (= (Tag Tclass._module.Thread?) Tagclass._module.Thread?))
(assert (= (TagFamily Tclass._module.Thread?) tytagFamily$Thread))
(assert (= (Tag Tclass._module.EmptyType?) Tagclass._module.EmptyType?))
(assert (= (TagFamily Tclass._module.EmptyType?) tytagFamily$EmptyType))
(assert (= (Tag Tclass._module.EmptyType) Tagclass._module.EmptyType))
(assert (= (TagFamily Tclass._module.EmptyType) tytagFamily$EmptyType))
(assert (forall (($h@@19 T@U) ($o@@60 T@U) ) (!  (=> (and ($IsGoodHeap $h@@19) (and (or (not (= $o@@60 null)) (not true)) ($Is refType $o@@60 Tclass._module.OwnedObject?))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@19 $o@@60) _module.OwnedObject.owner)) Tclass._module.Object))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@19 $o@@60) _module.OwnedObject.owner)))
)))
(assert (forall (($o@@61 T@U) ) (! (= ($Is refType $o@@61 Tclass._module.Universe?)  (or (= $o@@61 null) (implements$_module.Universe (dtype $o@@61))))
 :pattern ( ($Is refType $o@@61 Tclass._module.Universe?))
)))
(assert (forall (($o@@62 T@U) ) (! (= ($Is refType $o@@62 Tclass._module.Object?)  (or (= $o@@62 null) (implements$_module.Object (dtype $o@@62))))
 :pattern ( ($Is refType $o@@62 Tclass._module.Object?))
)))
(assert (forall (($o@@63 T@U) ) (! (= ($Is refType $o@@63 Tclass._module.NonOwnedObject?)  (or (= $o@@63 null) (implements$_module.NonOwnedObject (dtype $o@@63))))
 :pattern ( ($Is refType $o@@63 Tclass._module.NonOwnedObject?))
)))
(assert (forall (($o@@64 T@U) ) (! (= ($Is refType $o@@64 Tclass._module.OwnedObject?)  (or (= $o@@64 null) (implements$_module.OwnedObject (dtype $o@@64))))
 :pattern ( ($Is refType $o@@64 Tclass._module.OwnedObject?))
)))
(assert (forall (($h@@20 T@U) ($o@@65 T@U) ) (!  (=> (and (and ($IsGoodHeap $h@@20) (and (or (not (= $o@@65 null)) (not true)) ($Is refType $o@@65 Tclass._module.Universe?))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@65) alloc)))) ($IsAlloc SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@65) _module.Universe.content)) (TSet Tclass._module.Object) $h@@20))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@20 $o@@65) _module.Universe.content)))
)))
(assert (forall ((a@@14 T@U) (b@@11 T@U) ) (! (= (|Set#Equal| a@@14 b@@11) (forall ((o@@7 T@U) ) (! (= (|Set#IsMember| a@@14 o@@7) (|Set#IsMember| b@@11 o@@7))
 :pattern ( (|Set#IsMember| a@@14 o@@7))
 :pattern ( (|Set#IsMember| b@@11 o@@7))
)))
 :pattern ( (|Set#Equal| a@@14 b@@11))
)))
(assert  (=> (<= 8 $FunctionContextHeight) (forall (($prevHeap@@28 T@U) ($Heap@@35 T@U) (this@@68 T@U) ) (!  (=> (or (|_module.Universe.globalInv2#canCall| $prevHeap@@28 $Heap@@35 this@@68) (and (< 8 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@28) ($IsGoodHeap $Heap@@35)) ($HeapSucc $prevHeap@@28 $Heap@@35)) (and (or (not (= this@@68 null)) (not true)) (and ($Is refType this@@68 Tclass._module.Universe) ($IsAlloc refType this@@68 Tclass._module.Universe $prevHeap@@28)))))) (and (forall ((|o#0@@6| T@U) ) (!  (=> ($Is refType |o#0@@6| Tclass._module.Object) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@28 this@@68) _module.Universe.content)) ($Box refType |o#0@@6|)) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@35 this@@68) _module.Universe.content)) ($Box refType |o#0@@6|)) (|_module.Object.inv2#canCall| $prevHeap@@28 $Heap@@35 |o#0@@6|))))
 :pattern ( (_module.Object.inv2 $prevHeap@@28 $Heap@@35 |o#0@@6|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@35 this@@68) _module.Universe.content)) ($Box refType |o#0@@6|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@28 this@@68) _module.Universe.content)) ($Box refType |o#0@@6|)))
)) (= (_module.Universe.globalInv2 $prevHeap@@28 $Heap@@35 this@@68) (forall ((|o#0@@7| T@U) ) (!  (=> (and ($Is refType |o#0@@7| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@28 this@@68) _module.Universe.content)) ($Box refType |o#0@@7|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@35 this@@68) _module.Universe.content)) ($Box refType |o#0@@7|)) (_module.Object.inv2 $prevHeap@@28 $Heap@@35 |o#0@@7|)))
 :pattern ( (_module.Object.inv2 $prevHeap@@28 $Heap@@35 |o#0@@7|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@35 this@@68) _module.Universe.content)) ($Box refType |o#0@@7|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@28 this@@68) _module.Universe.content)) ($Box refType |o#0@@7|)))
)))))
 :pattern ( (_module.Universe.globalInv2 $prevHeap@@28 $Heap@@35 this@@68) ($IsGoodHeap $Heap@@35))
))))
(assert (forall ((x@@9 T@U) (T@@5 T@T) ) (! (= ($Box T@@5 (Lit T@@5 x@@9)) (Lit BoxType ($Box T@@5 x@@9)))
 :pattern ( ($Box T@@5 (Lit T@@5 x@@9)))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@29 T@U) ($Heap@@36 T@U) (this@@69 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@29 $Heap@@36 this@@69) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@29) ($IsGoodHeap $Heap@@36)) ($HeapSucc $prevHeap@@29 $Heap@@36)) (and (or (not (= this@@69 null)) (not true)) (and ($Is refType this@@69 Tclass._module.Thread) ($IsAlloc refType this@@69 Tclass._module.Thread $prevHeap@@29)))))) (=> (_module.Thread.inv2 $prevHeap@@29 $Heap@@36 this@@69) (_module.Thread.localInv2 $prevHeap@@29 $Heap@@36 this@@69)))
 :pattern ( (_module.Thread.inv2 $prevHeap@@29 $Heap@@36 this@@69))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@30 T@U) ($Heap@@37 T@U) (this@@70 T@U) ) (!  (=> (or (|_module.EmptyType.userInv2#canCall| $prevHeap@@30 $Heap@@37 this@@70) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@30) ($IsGoodHeap $Heap@@37)) ($HeapSucc $prevHeap@@30 $Heap@@37)) (and (or (not (= this@@70 null)) (not true)) (and ($Is refType this@@70 Tclass._module.EmptyType) ($IsAlloc refType this@@70 Tclass._module.EmptyType $prevHeap@@30)))))) (=> (_module.EmptyType.userInv2 $prevHeap@@30 $Heap@@37 this@@70) (_module.EmptyType.localUserInv2 $prevHeap@@30 $Heap@@37 this@@70)))
 :pattern ( (_module.EmptyType.userInv2 $prevHeap@@30 $Heap@@37 this@@70))
))))
(assert  (=> (<= 2 $FunctionContextHeight) (forall (($prevHeap@@31 T@U) ($Heap@@38 T@U) (this@@71 T@U) ) (!  (=> (or (|_module.OwnedObject.userInv2#canCall| $prevHeap@@31 $Heap@@38 this@@71) (and (< 2 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@31) ($IsGoodHeap $Heap@@38)) ($HeapSucc $prevHeap@@31 $Heap@@38)) (and (or (not (= this@@71 null)) (not true)) (and ($Is refType this@@71 Tclass._module.OwnedObject) ($IsAlloc refType this@@71 Tclass._module.OwnedObject $prevHeap@@31)))))) (=> (_module.OwnedObject.userInv2 $prevHeap@@31 $Heap@@38 this@@71) (_module.OwnedObject.localUserInv2 $prevHeap@@31 $Heap@@38 this@@71)))
 :pattern ( (_module.OwnedObject.userInv2 $prevHeap@@31 $Heap@@38 this@@71))
))))
(assert  (=> (<= 6 $FunctionContextHeight) (forall (($prevHeap@@32 T@U) ($Heap@@39 T@U) (this@@72 T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap@@32 $Heap@@39 this@@72) (and (< 6 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@32) ($IsGoodHeap $Heap@@39)) ($HeapSucc $prevHeap@@32 $Heap@@39)) (and (or (not (= this@@72 null)) (not true)) (and ($Is refType this@@72 Tclass._module.OwnedObject) ($IsAlloc refType this@@72 Tclass._module.OwnedObject $prevHeap@@32)))))) (=> (_module.OwnedObject.inv2 $prevHeap@@32 $Heap@@39 this@@72) (_module.OwnedObject.localInv2 $prevHeap@@32 $Heap@@39 this@@72)))
 :pattern ( (_module.OwnedObject.inv2 $prevHeap@@32 $Heap@@39 this@@72))
))))
(assert  (=> (<= 7 $FunctionContextHeight) (forall (($prevHeap@@33 T@U) ($Heap@@40 T@U) (this@@73 T@U) ) (!  (=> (or (|_module.Object.inv2#canCall| $prevHeap@@33 $Heap@@40 this@@73) (and (< 7 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@33) ($IsGoodHeap $Heap@@40)) ($HeapSucc $prevHeap@@33 $Heap@@40)) (and (or (not (= this@@73 null)) (not true)) (and ($Is refType this@@73 Tclass._module.Object) ($IsAlloc refType this@@73 Tclass._module.Object $prevHeap@@33)))))) (=> (_module.Object.inv2 $prevHeap@@33 $Heap@@40 this@@73) (_module.Object.localInv2 $prevHeap@@33 $Heap@@40 this@@73)))
 :pattern ( (_module.Object.inv2 $prevHeap@@33 $Heap@@40 this@@73))
))))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($Heap@@41 T@U) (this@@74 T@U) ) (!  (=> (or (|_module.EmptyType.userInv#canCall| $Heap@@41 this@@74) (and (< 1 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@41) (and (or (not (= this@@74 null)) (not true)) (and ($Is refType this@@74 Tclass._module.EmptyType) ($IsAlloc refType this@@74 Tclass._module.EmptyType $Heap@@41)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.EmptyType.localUserInv#canCall| $Heap@@41 this@@74)) (= (_module.EmptyType.userInv $Heap@@41 this@@74)  (and true (_module.EmptyType.localUserInv $Heap@@41 this@@74)))))
 :pattern ( (_module.EmptyType.userInv $Heap@@41 this@@74) ($IsGoodHeap $Heap@@41))
))))
(assert  (=> (<= 4 $FunctionContextHeight) (forall (($Heap@@42 T@U) (this@@75 T@U) ) (!  (=> (or (|_module.Thread.localInv#canCall| $Heap@@42 this@@75) (and (< 4 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@42) (and (or (not (= this@@75 null)) (not true)) (and ($Is refType this@@75 Tclass._module.Thread) ($IsAlloc refType this@@75 Tclass._module.Thread $Heap@@42)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.Object.baseInv#canCall| $Heap@@42 this@@75)) (= (_module.Thread.localInv $Heap@@42 this@@75)  (and true (_module.Object.baseInv $Heap@@42 this@@75)))))
 :pattern ( (_module.Thread.localInv $Heap@@42 this@@75) ($IsGoodHeap $Heap@@42))
))))
(assert  (=> (<= 5 $FunctionContextHeight) (forall (($Heap@@43 T@U) (this@@76 T@U) ) (!  (=> (or (|_module.Thread.inv#canCall| $Heap@@43 this@@76) (and (< 5 $FunctionContextHeight) (and ($IsGoodHeap $Heap@@43) (and (or (not (= this@@76 null)) (not true)) (and ($Is refType this@@76 Tclass._module.Thread) ($IsAlloc refType this@@76 Tclass._module.Thread $Heap@@43)))))) (and (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.Thread.localInv#canCall| $Heap@@43 this@@76)) (= (_module.Thread.inv $Heap@@43 this@@76)  (and true (_module.Thread.localInv $Heap@@43 this@@76)))))
 :pattern ( (_module.Thread.inv $Heap@@43 this@@76) ($IsGoodHeap $Heap@@43))
))))
(assert (forall (($h@@21 T@U) ($o@@66 T@U) ) (!  (=> (and ($IsGoodHeap $h@@21) (and (or (not (= $o@@66 null)) (not true)) ($Is refType $o@@66 Tclass._module.Universe?))) ($Is SetType ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@21 $o@@66) _module.Universe.content)) (TSet Tclass._module.Object)))
 :pattern ( ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $h@@21 $o@@66) _module.Universe.content)))
)))
(assert  (=> (<= 6 $FunctionContextHeight) (forall (($prevHeap@@34 T@U) ($Heap@@44 T@U) (this@@77 T@U) ) (!  (=> (or (|_module.OwnedObject.inv2#canCall| $prevHeap@@34 $Heap@@44 this@@77) (and (< 6 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@34) ($IsGoodHeap $Heap@@44)) ($HeapSucc $prevHeap@@34 $Heap@@44)) (and (or (not (= this@@77 null)) (not true)) (and ($Is refType this@@77 Tclass._module.OwnedObject) ($IsAlloc refType this@@77 Tclass._module.OwnedObject $prevHeap@@34)))))) (and (let ((|currOwner#0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))))
 (and (|_module.OwnedObject.localInv2#canCall| $prevHeap@@34 $Heap@@44 this@@77) (=> (_module.OwnedObject.localInv2 $prevHeap@@34 $Heap@@44 this@@77) (and (|_module.OwnedObject.userInv2#canCall| $prevHeap@@34 $Heap@@44 this@@77) (=> (_module.OwnedObject.userInv2 $prevHeap@@34 $Heap@@44 this@@77) (and (=> (or (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))))) (and (|_module.OwnedObject.userFieldsUnchanged#canCall| $prevHeap@@34 $Heap@@44 this@@77) (=> (not (_module.OwnedObject.userFieldsUnchanged $prevHeap@@34 $Heap@@44 this@@77)) (=> (U_2_bool (Lit boolType (bool_2_U true))) (=> ($IsAllocBox ($Box refType |currOwner#0|) Tclass._module.Object $prevHeap@@34) (|_module.Object.localInv2#canCall| $prevHeap@@34 $Heap@@44 |currOwner#0|)))))) (=> (=> (or (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))))) (or (_module.OwnedObject.userFieldsUnchanged $prevHeap@@34 $Heap@@44 this@@77) (and true (=> ($IsAllocBox ($Box refType |currOwner#0|) Tclass._module.Object $prevHeap@@34) (_module.Object.localInv2 $prevHeap@@34 $Heap@@44 |currOwner#0|))))) (and (=> (= (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))  (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))))) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))) (|_module.Object.localInv2#canCall| $prevHeap@@34 $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))))) (=> (=> (= (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))  (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))))) (and (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))) (_module.Object.localInv2 $prevHeap@@34 $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))))) (and (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))) (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))) (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.OwnedObject.userFieldsOwnedBy#canCall| $Heap@@44 this@@77 this@@77)))) (=> (=> (and (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed)))) (and true (_module.OwnedObject.userFieldsOwnedBy $Heap@@44 this@@77 this@@77))) (and (=> (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed))) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed)))) (=> (U_2_bool (Lit boolType (bool_2_U true))) (|_module.OwnedObject.userFieldsOwnedBy#canCall| $prevHeap@@34 this@@77 this@@77)))) (=> (=> (and (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))))) (and true (_module.OwnedObject.userFieldsOwnedBy $prevHeap@@34 this@@77 this@@77))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner)))) (not true)) (and (|_module.Object.localInv2#canCall| $prevHeap@@34 $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner))) (=> (_module.Object.localInv2 $prevHeap@@34 $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner))) (and (|_module.Object.localInv#canCall| $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner))) (=> (_module.Object.localInv $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner))) (and (=> ($IsAllocBox ($Box refType |currOwner#0|) Tclass._module.Object $prevHeap@@34) (|_module.Object.localInv2#canCall| $prevHeap@@34 $Heap@@44 |currOwner#0|)) (=> (=> ($IsAllocBox ($Box refType |currOwner#0|) Tclass._module.Object $prevHeap@@34) (_module.Object.localInv2 $prevHeap@@34 $Heap@@44 |currOwner#0|)) (|_module.Object.localInv#canCall| $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))))))))))))))))))))))) (= (_module.OwnedObject.inv2 $prevHeap@@34 $Heap@@44 this@@77) (let ((|currOwner#0@@0| ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))))
 (and (and (and (and (and (and (_module.OwnedObject.localInv2 $prevHeap@@34 $Heap@@44 this@@77) (_module.OwnedObject.userInv2 $prevHeap@@34 $Heap@@44 this@@77)) (=> (or (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))))) (or (_module.OwnedObject.userFieldsUnchanged $prevHeap@@34 $Heap@@44 this@@77) (and true (=> ($IsAllocBox ($Box refType |currOwner#0@@0|) Tclass._module.Object $prevHeap@@34) (_module.Object.localInv2 $prevHeap@@34 $Heap@@44 |currOwner#0@@0|)))))) (=> (= (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))  (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))))) (and (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))) (_module.Object.localInv2 $prevHeap@@34 $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner)))))) (=> (and (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed)))) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed)))) (and true (_module.OwnedObject.userFieldsOwnedBy $Heap@@44 this@@77 this@@77)))) (=> (and (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.closed))) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.closed))))) (and true (_module.OwnedObject.userFieldsOwnedBy $prevHeap@@34 this@@77 this@@77)))) (=> (or (not (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner)) ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner)))) (not true)) (and (and (and (_module.Object.localInv2 $prevHeap@@34 $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner))) (_module.Object.localInv $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $prevHeap@@34 this@@77) _module.OwnedObject.owner)))) (=> ($IsAllocBox ($Box refType |currOwner#0@@0|) Tclass._module.Object $prevHeap@@34) (_module.Object.localInv2 $prevHeap@@34 $Heap@@44 |currOwner#0@@0|))) (_module.Object.localInv $Heap@@44 ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@44 this@@77) _module.OwnedObject.owner))))))))))
 :pattern ( (_module.OwnedObject.inv2 $prevHeap@@34 $Heap@@44 this@@77) ($IsGoodHeap $Heap@@44))
))))
(assert (forall ((h@@6 T@U) (v@@4 T@U) ) (! ($IsAlloc boolType v@@4 TBool h@@6)
 :pattern ( ($IsAlloc boolType v@@4 TBool h@@6))
)))
(assert  (=> (<= 1 $FunctionContextHeight) (forall (($prevHeap@@35 T@U) ($Heap@@45 T@U) (this@@78 T@U) ) (!  (=> (or (|_module.Thread.inv2#canCall| $prevHeap@@35 $Heap@@45 this@@78) (and (< 1 $FunctionContextHeight) (and (and (and ($IsGoodHeap $prevHeap@@35) ($IsGoodHeap $Heap@@45)) ($HeapSucc $prevHeap@@35 $Heap@@45)) (and (or (not (= this@@78 null)) (not true)) (and ($Is refType this@@78 Tclass._module.Thread) ($IsAlloc refType this@@78 Tclass._module.Thread $prevHeap@@35)))))) (and (|_module.Thread.localInv2#canCall| $prevHeap@@35 $Heap@@45 this@@78) (= (_module.Thread.inv2 $prevHeap@@35 $Heap@@45 this@@78) (_module.Thread.localInv2 $prevHeap@@35 $Heap@@45 this@@78))))
 :pattern ( (_module.Thread.inv2 $prevHeap@@35 $Heap@@45 this@@78) ($IsGoodHeap $Heap@@45))
))))
(assert (forall ((v@@5 T@U) ) (! ($Is boolType v@@5 TBool)
 :pattern ( ($Is boolType v@@5 TBool))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $_ModifiesFrame@0 () T@U)
(declare-fun $Heap@@46 () T@U)
(declare-fun |universe#0| () T@U)
(declare-fun this.closed@0 () Bool)
(declare-fun this@@79 () T@U)
(declare-fun |running#0@@3| () T@U)
(declare-fun $Heap@0 () T@U)
(declare-fun $Heap@1 () T@U)
(declare-fun $Heap@2 () T@U)
(declare-fun call0formal@previous$Heap@0 () T@U)
(declare-fun $Heap@3 () T@U)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 37) (let ((anon0_correct  (=> (and (= $_ModifiesFrame@0 (|lambda#22| null $Heap@@46 alloc |universe#0|)) (= this.closed@0 (U_2_bool (Lit boolType (bool_2_U false))))) (and (=> (= (ControlFlow 0 2) (- 0 36)) true) (and (=> (= (ControlFlow 0 2) (- 0 35)) true) (=> (and (and (and (and (or (not (= this@@79 null)) (not true)) ($Is refType this@@79 Tclass._module.EmptyType?)) (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@79) alloc))))) (and (= (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@79) _module.OwnedObject.closed))) this.closed@0) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@79) _module.OwnedObject.owner)) |running#0@@3|))) (and (and (= (_module.Object.universe this@@79) |universe#0|) (= $Heap@0 (MapType0Store refType (MapType0Type FieldType BoxType) $Heap@@46 this@@79 (MapType0Store FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 this@@79) alloc ($Box boolType (bool_2_U true)))))) (and ($IsGoodHeap $Heap@0) ($IsHeapAnchor $Heap@0)))) (and (=> (= (ControlFlow 0 2) (- 0 34)) (forall (($o@@67 T@U) ($f@@39 T@U) )  (=> (and (and (or (not (= $o@@67 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@67) alloc)))) (= $o@@67 (_module.Object.universe this@@79))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@67 $f@@39))))) (=> (forall (($o@@68 T@U) ($f@@40 T@U) )  (=> (and (and (or (not (= $o@@68 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@68) alloc)))) (= $o@@68 (_module.Object.universe this@@79))) (U_2_bool (MapType1Select refType FieldType boolType $_ModifiesFrame@0 $o@@68 $f@@40)))) (and (=> (= (ControlFlow 0 2) (- 0 33)) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@0 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@0 (_module.Object.universe this@@79)) (forall ((|o#1@@3| T@U) ) (!  (=> (and ($Is refType |o#1@@3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#1@@3|))) (and (= (_module.Object.universe |o#1@@3|) (_module.Object.universe this@@79)) (or (not (= |o#1@@3| (_module.Object.universe this@@79))) (not true))))
 :pattern ( (_module.Object.universe |o#1@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#1@@3|)))
))))) (=> (=> (|_module.Universe.globalBaseInv#canCall| $Heap@0 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@0 (_module.Object.universe this@@79)) (forall ((|o#1@@4| T@U) ) (!  (=> (and ($Is refType |o#1@@4| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#1@@4|))) (and (= (_module.Object.universe |o#1@@4|) (_module.Object.universe this@@79)) (or (not (= |o#1@@4| (_module.Object.universe this@@79))) (not true))))
 :pattern ( (_module.Object.universe |o#1@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#1@@4|)))
)))) (and (=> (= (ControlFlow 0 2) (- 0 32)) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@0 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@0 (_module.Object.universe this@@79)) (forall ((|o#2@@1| T@U) ) (!  (=> (and ($Is refType |o#2@@1| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#2@@1|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@1|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@1|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@1|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@1|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@1|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#2@@1|)))
))))) (=> (=> (|_module.Universe.globalBaseInv#canCall| $Heap@0 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@0 (_module.Object.universe this@@79)) (forall ((|o#2@@2| T@U) ) (!  (=> (and ($Is refType |o#2@@2| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#2@@2|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@2|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@2|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@2|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@2|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#2@@2|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#2@@2|)))
)))) (and (=> (= (ControlFlow 0 2) (- 0 31)) (or (not (= this@@79 (_module.Object.universe this@@79))) (not true))) (=> (or (not (= this@@79 (_module.Object.universe this@@79))) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 30)) (=> ($Is refType this@@79 Tclass._module.OwnedObject) (let ((|o#0@@8| this@@79))
(|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#0@@8|) _module.OwnedObject.owner))))) (=> (=> ($Is refType this@@79 Tclass._module.OwnedObject) (let ((|o#0@@9| this@@79))
(|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#0@@9|) _module.OwnedObject.owner)))) (and (=> (= (ControlFlow 0 2) (- 0 29)) (=> ($Is refType this@@79 Tclass._module.OwnedObject) (let ((|o#0@@10| this@@79))
 (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#0@@10|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#0@@10|) _module.OwnedObject.owner)) Tclass._module.Thread))))) (=> (=> ($Is refType this@@79 Tclass._module.OwnedObject) (let ((|o#0@@11| this@@79))
 (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#0@@11|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 |o#0@@11|) _module.OwnedObject.owner)) Tclass._module.Thread)))) (=> (and (and (and (and ($IsGoodHeap $Heap@1) ($IsHeapAnchor $Heap@1)) (|_module.Object.baseInv#canCall| $Heap@1 this@@79)) (and (|_module.Object.baseInv#canCall| $Heap@1 this@@79) (and (_module.Object.baseInv $Heap@1 this@@79) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType this@@79)) (_module.Universe.globalBaseInv $Heap@1 (_module.Object.universe this@@79)))))) (and (and (and (|Set#Equal| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 (_module.Object.universe this@@79)) _module.Universe.content)) (|Set#Union| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 (_module.Object.universe this@@79)) _module.Universe.content)) (|Set#UnionOne| |Set#Empty| ($Box refType this@@79)))) (forall (($o@@69 T@U) ($f@@41 T@U) ) (!  (=> (or (not (= $o@@69 null)) (not true)) (=> (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType $o@@69)) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@69) $f@@41) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@69) $f@@41))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@69) $f@@41))
))) (and (forall (($o@@70 T@U) ) (!  (=> (and (or (not (= $o@@70 null)) (not true)) (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@70) alloc)))) (or (= (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@70) (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@0 $o@@70)) (= $o@@70 (_module.Object.universe this@@79))))
 :pattern ( (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@1 $o@@70))
)) ($HeapSuccGhost $Heap@0 $Heap@1))) (and (and ($IsGoodHeap $Heap@2) ($IsHeapAnchor $Heap@2)) (and (forall ((|a#1| T@U) (|b#1| T@U) ) (!  (=> (and (and ($Is refType |a#1| Tclass._module.NonOwnedObject) ($Is refType |b#1| Tclass._module.OwnedObject)) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |a#1|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |b#1|)))) (or (not (= |a#1| |b#1|)) (not true)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |b#1|)) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |a#1|)))
)) (= $Heap@1 $Heap@2))))) (and (=> (= (ControlFlow 0 2) (- 0 28)) (or (not (= |universe#0| null)) (not true))) (=> (or (not (= |universe#0| null)) (not true)) (and (=> (= (ControlFlow 0 2) (- 0 27)) ($IsAlloc refType |universe#0| Tclass._module.Universe $Heap@@46)) (=> ($IsAlloc refType |universe#0| Tclass._module.Universe $Heap@@46) (and (=> (= (ControlFlow 0 2) (- 0 26)) ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@@46)) (=> ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@@46) (=> (= call0formal@previous$Heap@0 $Heap@@46) (and (=> (= (ControlFlow 0 2) (- 0 25)) ($IsAlloc refType |running#0@@3| Tclass._module.Thread call0formal@previous$Heap@0)) (=> ($IsAlloc refType |running#0@@3| Tclass._module.Thread call0formal@previous$Heap@0) (and (=> (= (ControlFlow 0 2) (- 0 24)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalInv call0formal@previous$Heap@0 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalBaseInv call0formal@previous$Heap@0 |universe#0|) (forall ((|o#0@@12| T@U) ) (!  (=> (and ($Is refType |o#0@@12| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@12|))) (and (= (_module.Object.universe |o#0@@12|) |universe#0|) (or (not (= |o#0@@12| |universe#0|)) (not true))))
 :pattern ( (_module.Object.universe |o#0@@12|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@12|)))
))))))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalInv call0formal@previous$Heap@0 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalBaseInv call0formal@previous$Heap@0 |universe#0|) (forall ((|o#0@@13| T@U) ) (!  (=> (and ($Is refType |o#0@@13| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@13|))) (and (= (_module.Object.universe |o#0@@13|) |universe#0|) (or (not (= |o#0@@13| |universe#0|)) (not true))))
 :pattern ( (_module.Object.universe |o#0@@13|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#0@@13|)))
)))))))))) (and (=> (= (ControlFlow 0 2) (- 0 23)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalInv call0formal@previous$Heap@0 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalBaseInv call0formal@previous$Heap@0 |universe#0|) (forall ((|o#1@@5| T@U) ) (!  (=> (and ($Is refType |o#1@@5| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@5|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@5|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@5|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@5|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@5|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@5|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@5|)))
))))))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalInv call0formal@previous$Heap@0 |universe#0|) (=> (|_module.Universe.globalBaseInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalBaseInv call0formal@previous$Heap@0 |universe#0|) (forall ((|o#1@@6| T@U) ) (!  (=> (and ($Is refType |o#1@@6| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@6|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@6|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@6|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@6|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@6|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#1@@6|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#1@@6|)))
)))))))))) (and (=> (= (ControlFlow 0 2) (- 0 22)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalInv call0formal@previous$Heap@0 |universe#0|) (forall ((|o#2@@3| T@U) ) (!  (=> (and ($Is refType |o#2@@3| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@3|))) (_module.Object.inv call0formal@previous$Heap@0 |o#2@@3|))
 :pattern ( (_module.Object.inv call0formal@previous$Heap@0 |o#2@@3|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@3|)))
))))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalInv#canCall| call0formal@previous$Heap@0 |universe#0|) (or (_module.Universe.globalInv call0formal@previous$Heap@0 |universe#0|) (forall ((|o#2@@4| T@U) ) (!  (=> (and ($Is refType |o#2@@4| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@4|))) (_module.Object.inv call0formal@previous$Heap@0 |o#2@@4|))
 :pattern ( (_module.Object.inv call0formal@previous$Heap@0 |o#2@@4|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#2@@4|)))
)))))))) (and (=> (= (ControlFlow 0 2) (- 0 21)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#3@@0| T@U) ) (!  (=> (and ($Is refType |o#3@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@0|))) (and (= (_module.Object.universe |o#3@@0|) |universe#0|) (or (not (= |o#3@@0| |universe#0|)) (not true))))
 :pattern ( (_module.Object.universe |o#3@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@0|)))
))))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#3@@1| T@U) ) (!  (=> (and ($Is refType |o#3@@1| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@1|))) (and (= (_module.Object.universe |o#3@@1|) |universe#0|) (or (not (= |o#3@@1| |universe#0|)) (not true))))
 :pattern ( (_module.Object.universe |o#3@@1|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#3@@1|)))
)))))))) (and (=> (= (ControlFlow 0 2) (- 0 20)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#4| T@U) ) (!  (=> (and ($Is refType |o#4| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#4|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#4|)))
))))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@2 |universe#0|) (or (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#4@@0| T@U) ) (!  (=> (and ($Is refType |o#4@@0| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#4@@0|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4@@0|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4@@0|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4@@0|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4@@0|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |o#4@@0|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#4@@0|)))
)))))))) (and (=> (= (ControlFlow 0 2) (- 0 19)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (|Set#Subset| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content))))))) (and (=> (= (ControlFlow 0 2) (- 0 18)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#5| T@U) ) (!  (=> (and ($Is refType |o#5| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#5|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#5|)))) (not ($IsAllocBox ($Box refType |o#5|) Tclass._module.Object call0formal@previous$Heap@0)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#5|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#5|)))
))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#5@@0| T@U) ) (!  (=> (and ($Is refType |o#5@@0| Tclass._module.Object) (and (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#5@@0|))) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#5@@0|)))) (not ($IsAllocBox ($Box refType |o#5@@0|) Tclass._module.Object call0formal@previous$Heap@0)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#5@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#5@@0|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 17)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#6| T@U) ) (!  (=> (and ($Is refType |o#6| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#6|))) (or (forall (($o@@71 T@U) ($f@@42 T@U) ) (!  (=> (or (not (= $o@@71 null)) (not true)) (=> (= $o@@71 |o#6|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@71) $f@@42) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 $o@@71) $f@@42))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@71) $f@@42))
)) (_module.Object.inv $Heap@2 |o#6|)))
 :pattern ( (_module.Object.inv $Heap@2 |o#6|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#6|)))
))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#6@@0| T@U) ) (!  (=> (and ($Is refType |o#6@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#6@@0|))) (or (forall (($o@@72 T@U) ($f@@43 T@U) ) (!  (=> (or (not (= $o@@72 null)) (not true)) (=> (= $o@@72 |o#6@@0|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@72) $f@@43) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 $o@@72) $f@@43))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@72) $f@@43))
)) (_module.Object.inv $Heap@2 |o#6@@0|)))
 :pattern ( (_module.Object.inv $Heap@2 |o#6@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#6@@0|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 16)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#7| T@U) ) (!  (=> (and ($Is refType |o#7| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#7|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#7|))))) (_module.Object.inv $Heap@2 |o#7|))
 :pattern ( (_module.Object.inv $Heap@2 |o#7|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#7|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#7|)))
))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#7@@0| T@U) ) (!  (=> (and ($Is refType |o#7@@0| Tclass._module.Object) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@0|)) (not (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@0|))))) (_module.Object.inv $Heap@2 |o#7@@0|))
 :pattern ( (_module.Object.inv $Heap@2 |o#7@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#7@@0|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 15)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|t#0@@0| T@U) ) (!  (=> (and ($Is refType |t#0@@0| Tclass._module.Thread) (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) ($Box refType |t#0@@0|))) (and (= (_module.Object.universe |t#0@@0|) |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |t#0@@0|))))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |t#0@@0|)))
 :pattern ( (_module.Object.universe |t#0@@0|))
 :pattern ( (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) ($Box refType |t#0@@0|)))
))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|t#0@@1| T@U) ) (!  (=> (and ($Is refType |t#0@@1| Tclass._module.Thread) (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) ($Box refType |t#0@@1|))) (and (= (_module.Object.universe |t#0@@1|) |universe#0|) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |t#0@@1|))))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |t#0@@1|)))
 :pattern ( (_module.Object.universe |t#0@@1|))
 :pattern ( (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) ($Box refType |t#0@@1|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 14)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#8| T@U) ) (!  (=> (and ($Is refType |o#8| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#8|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#8|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (not (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#8|) _module.OwnedObject.owner))) (forall (($o@@73 T@U) ($f@@44 T@U) ) (!  (=> (or (not (= $o@@73 null)) (not true)) (=> (= $o@@73 |o#8|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@73) $f@@44) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 $o@@73) $f@@44))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@73) $f@@44))
))))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#8|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#8|)))
))))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (=> (|_module.Universe.multipleLegalTransitions#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (or (_module.Universe.multipleLegalTransitions call0formal@previous$Heap@0 $Heap@2 |universe#0| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|))) (forall ((|o#8@@0| T@U) ) (!  (=> (and ($Is refType |o#8@@0| Tclass._module.OwnedObject) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@0|)) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#8@@0|) _module.OwnedObject.owner)) Tclass._module.Thread))) (=> (not (|Set#IsMember| (|Set#UnionOne| |Set#Empty| ($Box refType |running#0@@3|)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#8@@0|) _module.OwnedObject.owner))) (forall (($o@@74 T@U) ($f@@45 T@U) ) (!  (=> (or (not (= $o@@74 null)) (not true)) (=> (= $o@@74 |o#8@@0|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@74) $f@@45) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 $o@@74) $f@@45))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@74) $f@@45))
))))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |o#8@@0|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#8@@0|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 13)) (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (forall ((|o#9| T@U) ) (!  (=> (and ($Is refType |o#9| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#9|))) (or (forall (($o@@75 T@U) ($f@@46 T@U) ) (!  (=> (or (not (= $o@@75 null)) (not true)) (=> (= $o@@75 |o#9|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@75) $f@@46) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 $o@@75) $f@@46))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@75) $f@@46))
)) (_module.Object.inv2 call0formal@previous$Heap@0 $Heap@2 |o#9|)))
 :pattern ( (_module.Object.inv2 call0formal@previous$Heap@0 $Heap@2 |o#9|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#9|)))
))))) (=> (=> (|_module.Universe.legalTransition#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (or (_module.Universe.legalTransition call0formal@previous$Heap@0 $Heap@2 |universe#0| |running#0@@3|) (forall ((|o#9@@0| T@U) ) (!  (=> (and ($Is refType |o#9@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@0|))) (or (forall (($o@@76 T@U) ($f@@47 T@U) ) (!  (=> (or (not (= $o@@76 null)) (not true)) (=> (= $o@@76 |o#9@@0|) (= (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@76) $f@@47) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 $o@@76) $f@@47))))
 :pattern ( (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 $o@@76) $f@@47))
)) (_module.Object.inv2 call0formal@previous$Heap@0 $Heap@2 |o#9@@0|)))
 :pattern ( (_module.Object.inv2 call0formal@previous$Heap@0 $Heap@2 |o#9@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#9@@0|)))
)))) (=> (and ($IsGoodHeap $Heap@3) ($IsHeapAnchor $Heap@3)) (=> (and (and (and (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|) (=> (_module.Universe.globalInv $Heap@2 |universe#0|) (|_module.Universe.globalInv2#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0|))) (and (|_module.Universe.globalInv#canCall| $Heap@2 |universe#0|) (and (_module.Universe.globalInv $Heap@2 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@2 |universe#0|) (forall ((|o#12| T@U) ) (!  (=> (and ($Is refType |o#12| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#12|))) (_module.Object.inv $Heap@2 |o#12|))
 :pattern ( (_module.Object.inv $Heap@2 |o#12|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#12|)))
)))))) (and (and (|_module.Universe.globalInv2#canCall| call0formal@previous$Heap@0 $Heap@2 |universe#0|) (and (_module.Universe.globalInv2 call0formal@previous$Heap@0 $Heap@2 |universe#0|) (forall ((|o#13| T@U) ) (!  (=> (and ($Is refType |o#13| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#13|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#13|)) (_module.Object.inv2 call0formal@previous$Heap@0 $Heap@2 |o#13|)))
 :pattern ( (_module.Object.inv2 call0formal@previous$Heap@0 $Heap@2 |o#13|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@2 |universe#0|) _module.Universe.content)) ($Box refType |o#13|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) call0formal@previous$Heap@0 |universe#0|) _module.Universe.content)) ($Box refType |o#13|)))
)))) (= $Heap@2 $Heap@3))) (and (=> (= (ControlFlow 0 2) (- 0 12)) (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Object.baseInv#canCall| $Heap@3 this@@79) (or (_module.Object.baseInv $Heap@3 this@@79) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType this@@79))))))) (=> (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Object.baseInv#canCall| $Heap@3 this@@79) (or (_module.Object.baseInv $Heap@3 this@@79) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType this@@79)))))) (and (=> (= (ControlFlow 0 2) (- 0 11)) (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Object.baseInv#canCall| $Heap@3 this@@79) (or (_module.Object.baseInv $Heap@3 this@@79) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#16| T@U) ) (!  (=> (and ($Is refType |o#16| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#16|))) (and (= (_module.Object.universe |o#16|) (_module.Object.universe this@@79)) (or (not (= |o#16| (_module.Object.universe this@@79))) (not true))))
 :pattern ( (_module.Object.universe |o#16|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#16|)))
))))))))) (=> (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Object.baseInv#canCall| $Heap@3 this@@79) (or (_module.Object.baseInv $Heap@3 this@@79) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#16@@0| T@U) ) (!  (=> (and ($Is refType |o#16@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#16@@0|))) (and (= (_module.Object.universe |o#16@@0|) (_module.Object.universe this@@79)) (or (not (= |o#16@@0| (_module.Object.universe this@@79))) (not true))))
 :pattern ( (_module.Object.universe |o#16@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#16@@0|)))
)))))))) (and (=> (= (ControlFlow 0 2) (- 0 10)) (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Object.baseInv#canCall| $Heap@3 this@@79) (or (_module.Object.baseInv $Heap@3 this@@79) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#17| T@U) ) (!  (=> (and ($Is refType |o#17| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#17|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#17|)))
))))))))) (=> (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Object.baseInv#canCall| $Heap@3 this@@79) (or (_module.Object.baseInv $Heap@3 this@@79) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#17@@0| T@U) ) (!  (=> (and ($Is refType |o#17@@0| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#17@@0|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17@@0|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17@@0|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17@@0|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17@@0|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#17@@0|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#17@@0|)))
)))))))) (and (=> (= (ControlFlow 0 2) (- 0 9)) (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Universe.globalInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalInv $Heap@3 (_module.Object.universe this@@79)) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#18| T@U) ) (!  (=> (and ($Is refType |o#18| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#18|))) (and (= (_module.Object.universe |o#18|) (_module.Object.universe this@@79)) (or (not (= |o#18| (_module.Object.universe this@@79))) (not true))))
 :pattern ( (_module.Object.universe |o#18|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#18|)))
))))))))) (=> (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Universe.globalInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalInv $Heap@3 (_module.Object.universe this@@79)) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#18@@0| T@U) ) (!  (=> (and ($Is refType |o#18@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#18@@0|))) (and (= (_module.Object.universe |o#18@@0|) (_module.Object.universe this@@79)) (or (not (= |o#18@@0| (_module.Object.universe this@@79))) (not true))))
 :pattern ( (_module.Object.universe |o#18@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#18@@0|)))
)))))))) (and (=> (= (ControlFlow 0 2) (- 0 8)) (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Universe.globalInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalInv $Heap@3 (_module.Object.universe this@@79)) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#19| T@U) ) (!  (=> (and ($Is refType |o#19| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#19|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#19|)))
))))))))) (=> (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Universe.globalInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalInv $Heap@3 (_module.Object.universe this@@79)) (=> (|_module.Universe.globalBaseInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalBaseInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#19@@0| T@U) ) (!  (=> (and ($Is refType |o#19@@0| Tclass._module.OwnedObject) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#19@@0|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19@@0|) _module.OwnedObject.owner)) (=> (not (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19@@0|) _module.OwnedObject.closed)))) ($Is refType ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19@@0|) _module.OwnedObject.owner)) Tclass._module.Thread))))
 :pattern ( ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19@@0|) _module.OwnedObject.closed)))
 :pattern ( ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |o#19@@0|) _module.OwnedObject.owner)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#19@@0|)))
)))))))) (and (=> (= (ControlFlow 0 2) (- 0 7)) (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Universe.globalInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#20| T@U) ) (!  (=> (and ($Is refType |o#20| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#20|))) (_module.Object.inv $Heap@3 |o#20|))
 :pattern ( (_module.Object.inv $Heap@3 |o#20|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#20|)))
))))))) (=> (=> (|_module.Object.objectGlobalInv#canCall| $Heap@3 this@@79) (or (_module.Object.objectGlobalInv $Heap@3 this@@79) (=> (|_module.Universe.globalInv#canCall| $Heap@3 (_module.Object.universe this@@79)) (or (_module.Universe.globalInv $Heap@3 (_module.Object.universe this@@79)) (forall ((|o#20@@0| T@U) ) (!  (=> (and ($Is refType |o#20@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#20@@0|))) (_module.Object.inv $Heap@3 |o#20@@0|))
 :pattern ( (_module.Object.inv $Heap@3 |o#20@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 (_module.Object.universe this@@79)) _module.Universe.content)) ($Box refType |o#20@@0|)))
)))))) (and (=> (= (ControlFlow 0 2) (- 0 6)) (=> (|_module.Universe.globalInv2#canCall| $Heap@@46 $Heap@3 |universe#0|) (or (_module.Universe.globalInv2 $Heap@@46 $Heap@3 |universe#0|) (forall ((|o#21| T@U) ) (!  (=> (and ($Is refType |o#21| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 |universe#0|) _module.Universe.content)) ($Box refType |o#21|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#21|)) (_module.Object.inv2 $Heap@@46 $Heap@3 |o#21|)))
 :pattern ( (_module.Object.inv2 $Heap@@46 $Heap@3 |o#21|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#21|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 |universe#0|) _module.Universe.content)) ($Box refType |o#21|)))
))))) (=> (=> (|_module.Universe.globalInv2#canCall| $Heap@@46 $Heap@3 |universe#0|) (or (_module.Universe.globalInv2 $Heap@@46 $Heap@3 |universe#0|) (forall ((|o#21@@0| T@U) ) (!  (=> (and ($Is refType |o#21@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 |universe#0|) _module.Universe.content)) ($Box refType |o#21@@0|))) (and (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#21@@0|)) (_module.Object.inv2 $Heap@@46 $Heap@3 |o#21@@0|)))
 :pattern ( (_module.Object.inv2 $Heap@@46 $Heap@3 |o#21@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) ($Box refType |o#21@@0|)))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 |universe#0|) _module.Universe.content)) ($Box refType |o#21@@0|)))
)))) (and (=> (= (ControlFlow 0 2) (- 0 5)) (= (_module.Object.universe this@@79) |universe#0|)) (=> (= (_module.Object.universe this@@79) |universe#0|) (and (=> (= (ControlFlow 0 2) (- 0 4)) (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 this@@79) _module.OwnedObject.owner)) |running#0@@3|)) (=> (= ($Unbox refType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 this@@79) _module.OwnedObject.owner)) |running#0@@3|) (and (=> (= (ControlFlow 0 2) (- 0 3)) (= (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 this@@79) _module.OwnedObject.closed))) (U_2_bool (Lit boolType (bool_2_U false))))) (=> (= (U_2_bool ($Unbox boolType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 this@@79) _module.OwnedObject.closed))) (U_2_bool (Lit boolType (bool_2_U false)))) (=> (= (ControlFlow 0 2) (- 0 1)) (|Set#Equal| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@3 |universe#0|) _module.Universe.content)) (|Set#Union| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 |universe#0|) _module.Universe.content)) (|Set#UnionOne| |Set#Empty| ($Box refType this@@79)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(let ((PreconditionGeneratedEntry_correct  (=> (and (and (and (and ($IsGoodHeap $Heap@@46) ($IsHeapAnchor $Heap@@46)) (and ($Is refType |universe#0| Tclass._module.Universe) ($IsAlloc refType |universe#0| Tclass._module.Universe $Heap@@46))) (and (and ($Is refType |running#0@@3| Tclass._module.Thread) ($IsAlloc refType |running#0@@3| Tclass._module.Thread $Heap@@46)) (= 14 $FunctionContextHeight))) (and (and (and (|_module.Universe.globalInv#canCall| $Heap@@46 |universe#0|) (and (_module.Universe.globalInv $Heap@@46 |universe#0|) (and (_module.Universe.globalBaseInv $Heap@@46 |universe#0|) (forall ((|o#13@@0| T@U) ) (!  (=> (and ($Is refType |o#13@@0| Tclass._module.Object) (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 |universe#0|) _module.Universe.content)) ($Box refType |o#13@@0|))) (_module.Object.inv $Heap@@46 |o#13@@0|))
 :pattern ( (_module.Object.inv $Heap@@46 |o#13@@0|))
 :pattern ( (|Set#IsMember| ($Unbox SetType (MapType0Select FieldType BoxType (MapType0Select refType (MapType0Type FieldType BoxType) $Heap@@46 |universe#0|) _module.Universe.content)) ($Box refType |o#13@@0|)))
))))) (= (_module.Object.universe |running#0@@3|) |universe#0|)) (and (and (|_module.Thread.inv#canCall| $Heap@@46 |running#0@@3|) (and (_module.Thread.inv $Heap@@46 |running#0@@3|) (and true (_module.Thread.localInv $Heap@@46 |running#0@@3|)))) (= (ControlFlow 0 37) 2)))) anon0_correct)))
PreconditionGeneratedEntry_correct)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
