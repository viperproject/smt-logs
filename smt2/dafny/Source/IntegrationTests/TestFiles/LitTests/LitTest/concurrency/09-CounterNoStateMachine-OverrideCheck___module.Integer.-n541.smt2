(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 (T@T) Int)
(declare-fun $generated@@10 () T@T)
(declare-fun $generated@@11 () T@T)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 (Bool) T@U)
(declare-fun $generated@@14 (T@U) Bool)
(declare-fun $generated@@15 (Int) T@U)
(declare-fun $generated@@16 (T@U) Int)
(declare-fun $generated@@17 (Real) T@U)
(declare-fun $generated@@18 (T@U) Real)
(declare-fun $generated@@25 (T@U) Bool)
(declare-fun $generated@@26 () T@U)
(declare-fun $generated@@27 (T@U T@U) Bool)
(declare-fun $generated@@28 () T@U)
(declare-fun $generated@@30 (T@T T@U T@U) Bool)
(declare-fun $generated@@31 () T@T)
(declare-fun $generated@@32 () T@U)
(declare-fun $generated@@33 (T@U) T@U)
(declare-fun $generated@@35 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@36 () T@U)
(declare-fun $generated@@37 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@41 () T@U)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@47 (T@U) Bool)
(declare-fun $generated@@48 (T@U T@U) Bool)
(declare-fun $generated@@49 (T@U T@U T@U) Bool)
(declare-fun $generated@@50 (T@U) Bool)
(declare-fun $generated@@51 (T@T T@U) T@U)
(declare-fun $generated@@52 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@53 () T@T)
(declare-fun $generated@@54 () T@T)
(declare-fun $generated@@55 (T@T T@T) T@T)
(declare-fun $generated@@56 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@57 (T@T) T@T)
(declare-fun $generated@@58 (T@T) T@T)
(declare-fun $generated@@82 (T@U T@U T@U) Bool)
(declare-fun $generated@@98 (T@T T@U) T@U)
(declare-fun $generated@@101 (T@U T@U) Bool)
(declare-fun $generated@@105 (T@T T@U) T@U)
(declare-fun $generated@@108 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@U T@U T@U T@U T@U) T@U)
(declare-fun $generated@@110 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@155 () Int)
(declare-fun $generated@@156 (T@U T@U T@U) Bool)
(declare-fun $generated@@157 (T@U T@U T@U) Bool)
(declare-fun $generated@@171 (T@U) T@U)
(declare-fun $generated@@172 (T@U) T@U)
(declare-fun $generated@@173 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@9 $generated@@10) 0) (= ($generated@@9 $generated@@11) 1)) (= ($generated@@9 $generated@@12) 2)) (forall (($generated@@19 Bool) ) (! (= ($generated@@14 ($generated@@13 $generated@@19)) $generated@@19)
 :pattern ( ($generated@@13 $generated@@19))
))) (forall (($generated@@20 T@U) ) (! (= ($generated@@13 ($generated@@14 $generated@@20)) $generated@@20)
 :pattern ( ($generated@@14 $generated@@20))
))) (forall (($generated@@21 Int) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Real) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8)
)
(assert ($generated@@25 $generated@@26))
(assert (forall (($generated@@29 T@U) ) (!  (not ($generated@@27 $generated@@28 $generated@@29))
 :pattern ( ($generated@@27 $generated@@28 $generated@@29))
)))
(assert (= ($generated@@9 $generated@@31) 3))
(assert (forall (($generated@@34 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@34 $generated@@26)  (or (= $generated@@34 $generated@@32) (= ($generated@@33 $generated@@34) $generated@@26)))
 :pattern ( ($generated@@30 $generated@@31 $generated@@34 $generated@@26))
)))
(assert (forall (($generated@@38 T@U) ($generated@@39 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@38 $generated@@36 $generated@@39) ($generated@@35 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
 :pattern ( ($generated@@35 $generated@@31 $generated@@38 $generated@@36 $generated@@39))
 :pattern ( ($generated@@35 $generated@@31 $generated@@38 $generated@@37 $generated@@39))
)))
(assert (forall (($generated@@42 T@U) ($generated@@43 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@42 $generated@@40 $generated@@43) ($generated@@35 $generated@@31 $generated@@42 $generated@@41 $generated@@43))
 :pattern ( ($generated@@35 $generated@@31 $generated@@42 $generated@@40 $generated@@43))
 :pattern ( ($generated@@35 $generated@@31 $generated@@42 $generated@@41 $generated@@43))
)))
(assert (forall (($generated@@45 T@U) ($generated@@46 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@45 $generated@@44 $generated@@46) ($generated@@35 $generated@@31 $generated@@45 $generated@@26 $generated@@46))
 :pattern ( ($generated@@35 $generated@@31 $generated@@45 $generated@@44 $generated@@46))
 :pattern ( ($generated@@35 $generated@@31 $generated@@45 $generated@@26 $generated@@46))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@59 T@T) ($generated@@60 T@T) ($generated@@61 T@U) ($generated@@62 T@U) ($generated@@63 T@U) ) (! (= ($generated@@52 $generated@@59 $generated@@60 ($generated@@56 $generated@@59 $generated@@60 $generated@@62 $generated@@63 $generated@@61) $generated@@63) $generated@@61)
 :weight 0
)) (forall (($generated@@64 T@T) ($generated@@65 T@T) ($generated@@66 T@U) ($generated@@67 T@U) ($generated@@68 T@U) ($generated@@69 T@U) ) (!  (or (= $generated@@68 $generated@@69) (= ($generated@@52 $generated@@64 $generated@@65 ($generated@@56 $generated@@64 $generated@@65 $generated@@67 $generated@@68 $generated@@66) $generated@@69) ($generated@@52 $generated@@64 $generated@@65 $generated@@67 $generated@@69)))
 :weight 0
))) (= ($generated@@9 $generated@@53) 4)) (= ($generated@@9 $generated@@54) 5)) (forall (($generated@@70 T@T) ($generated@@71 T@T) ) (= ($generated@@9 ($generated@@55 $generated@@70 $generated@@71)) 6))) (forall (($generated@@72 T@T) ($generated@@73 T@T) ) (! (= ($generated@@57 ($generated@@55 $generated@@72 $generated@@73)) $generated@@72)
 :pattern ( ($generated@@55 $generated@@72 $generated@@73))
))) (forall (($generated@@74 T@T) ($generated@@75 T@T) ) (! (= ($generated@@58 ($generated@@55 $generated@@74 $generated@@75)) $generated@@75)
 :pattern ( ($generated@@55 $generated@@74 $generated@@75))
))))
(assert (forall (($generated@@76 T@U) ($generated@@77 T@U) ($generated@@78 T@U) ($generated@@79 T@U) ) (!  (=> (and (and (and ($generated@@50 $generated@@77) ($generated@@50 $generated@@78)) (and (or (not (= $generated@@79 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@79 $generated@@44) ($generated@@35 $generated@@31 $generated@@79 $generated@@44 $generated@@77)))) (and ($generated@@47 $generated@@77) ($generated@@48 $generated@@77 $generated@@78))) (=> (forall (($generated@@80 T@U) ($generated@@81 T@U) )  (=> (and (or (not (= $generated@@80 $generated@@32)) (not true)) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@80) $generated)))) (= ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@77 $generated@@80) $generated@@81) ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@78 $generated@@80) $generated@@81)))) (= ($generated@@49 $generated@@76 $generated@@77 $generated@@79) ($generated@@49 $generated@@76 $generated@@78 $generated@@79))))
 :pattern ( ($generated@@47 $generated@@77) ($generated@@48 $generated@@77 $generated@@78) ($generated@@49 $generated@@76 $generated@@78 $generated@@79))
)))
(assert (forall (($generated@@83 T@U) ($generated@@84 T@U) ($generated@@85 T@U) ($generated@@86 T@U) ) (!  (=> (and (and (and ($generated@@50 $generated@@84) ($generated@@50 $generated@@85)) (and (or (not (= $generated@@86 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@86 $generated@@44) ($generated@@35 $generated@@31 $generated@@86 $generated@@44 $generated@@84)))) (and ($generated@@47 $generated@@84) ($generated@@48 $generated@@84 $generated@@85))) (=> (forall (($generated@@87 T@U) ($generated@@88 T@U) )  (=> (and (or (not (= $generated@@87 $generated@@32)) (not true)) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@84 $generated@@87) $generated)))) (= ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@84 $generated@@87) $generated@@88) ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@85 $generated@@87) $generated@@88)))) (= ($generated@@82 $generated@@83 $generated@@84 $generated@@86) ($generated@@82 $generated@@83 $generated@@85 $generated@@86))))
 :pattern ( ($generated@@47 $generated@@84) ($generated@@48 $generated@@84 $generated@@85) ($generated@@82 $generated@@83 $generated@@85 $generated@@86))
)))
(assert (forall (($generated@@89 T@U) ($generated@@90 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@89 $generated@@37 $generated@@90)  (or (= $generated@@89 $generated@@32) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@90 $generated@@89) $generated)))))
 :pattern ( ($generated@@35 $generated@@31 $generated@@89 $generated@@37 $generated@@90))
)))
(assert (forall (($generated@@91 T@U) ($generated@@92 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@91 $generated@@41 $generated@@92)  (or (= $generated@@91 $generated@@32) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@92 $generated@@91) $generated)))))
 :pattern ( ($generated@@35 $generated@@31 $generated@@91 $generated@@41 $generated@@92))
)))
(assert (forall (($generated@@93 T@U) ($generated@@94 T@U) ) (! (= ($generated@@35 $generated@@31 $generated@@93 $generated@@26 $generated@@94)  (or (= $generated@@93 $generated@@32) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@94 $generated@@93) $generated)))))
 :pattern ( ($generated@@35 $generated@@31 $generated@@93 $generated@@26 $generated@@94))
)))
(assert (forall (($generated@@95 T@U) ($generated@@96 T@U) ) (!  (=> ($generated@@48 $generated@@95 $generated@@96) (forall (($generated@@97 T@U) ) (!  (=> ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@95 $generated@@97) $generated))) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@96 $generated@@97) $generated))))
 :pattern ( ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@96 $generated@@97) $generated))
)))
 :pattern ( ($generated@@48 $generated@@95 $generated@@96))
)))
(assert (forall (($generated@@99 T@U) ($generated@@100 T@T) ) (! (= ($generated@@98 $generated@@100 $generated@@99) $generated@@99)
 :pattern ( ($generated@@98 $generated@@100 $generated@@99))
)))
(assert (forall (($generated@@102 T@U) ($generated@@103 T@U) ) (! (= ($generated@@101 $generated@@102 $generated@@103) (forall (($generated@@104 T@U) ) (!  (=> ($generated@@27 $generated@@102 $generated@@104) ($generated@@27 $generated@@103 $generated@@104))
 :pattern ( ($generated@@27 $generated@@102 $generated@@104))
 :pattern ( ($generated@@27 $generated@@103 $generated@@104))
)))
 :pattern ( ($generated@@101 $generated@@102 $generated@@103))
)))
(assert (forall (($generated@@106 T@U) ($generated@@107 T@T) ) (! (= ($generated@@105 $generated@@107 ($generated@@51 $generated@@107 $generated@@106)) $generated@@106)
 :pattern ( ($generated@@51 $generated@@107 $generated@@106))
)))
(assert  (and (forall (($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@T) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ($generated@@117 T@U) ) (! (= ($generated@@108 $generated@@111 $generated@@112 $generated@@113 ($generated@@110 $generated@@111 $generated@@112 $generated@@113 $generated@@115 $generated@@116 $generated@@117 $generated@@114) $generated@@116 $generated@@117) $generated@@114)
 :weight 0
)) (and (forall (($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@T) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ($generated@@126 T@U) ) (!  (or (= $generated@@123 $generated@@125) (= ($generated@@108 $generated@@118 $generated@@119 $generated@@120 ($generated@@110 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@123 $generated@@124 $generated@@121) $generated@@125 $generated@@126) ($generated@@108 $generated@@118 $generated@@119 $generated@@120 $generated@@122 $generated@@125 $generated@@126)))
 :weight 0
)) (forall (($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@T) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ($generated@@135 T@U) ) (!  (or (= $generated@@133 $generated@@135) (= ($generated@@108 $generated@@127 $generated@@128 $generated@@129 ($generated@@110 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@132 $generated@@133 $generated@@130) $generated@@134 $generated@@135) ($generated@@108 $generated@@127 $generated@@128 $generated@@129 $generated@@131 $generated@@134 $generated@@135)))
 :weight 0
)))))
(assert (forall (($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ($generated@@141 T@U) ($generated@@142 T@U) ) (! (= ($generated@@14 ($generated@@108 $generated@@31 $generated@@53 $generated@@10 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))  (=> (and (or (not (= $generated@@141 $generated@@136)) (not true)) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@137 $generated@@141) $generated@@138)))) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@139 $generated@@141) $generated@@140)))))
 :pattern ( ($generated@@108 $generated@@31 $generated@@53 $generated@@10 ($generated@@109 $generated@@136 $generated@@137 $generated@@138 $generated@@139 $generated@@140) $generated@@141 $generated@@142))
)))
(assert (forall (($generated@@143 T@U) ($generated@@144 T@U) ($generated@@145 T@U) ($generated@@146 T@U) ($generated@@147 T@T) ) (!  (=> ($generated@@48 $generated@@143 $generated@@144) (=> ($generated@@35 $generated@@147 $generated@@145 $generated@@146 $generated@@143) ($generated@@35 $generated@@147 $generated@@145 $generated@@146 $generated@@144)))
 :pattern ( ($generated@@48 $generated@@143 $generated@@144) ($generated@@35 $generated@@147 $generated@@145 $generated@@146 $generated@@143))
)))
(assert (forall (($generated@@148 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@148 $generated@@36)  (and ($generated@@30 $generated@@31 $generated@@148 $generated@@37) (or (not (= $generated@@148 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@148 $generated@@36))
 :pattern ( ($generated@@30 $generated@@31 $generated@@148 $generated@@37))
)))
(assert (forall (($generated@@149 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@149 $generated@@40)  (and ($generated@@30 $generated@@31 $generated@@149 $generated@@41) (or (not (= $generated@@149 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@149 $generated@@40))
 :pattern ( ($generated@@30 $generated@@31 $generated@@149 $generated@@41))
)))
(assert (forall (($generated@@150 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@150 $generated@@44)  (and ($generated@@30 $generated@@31 $generated@@150 $generated@@26) (or (not (= $generated@@150 $generated@@32)) (not true))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@150 $generated@@44))
 :pattern ( ($generated@@30 $generated@@31 $generated@@150 $generated@@26))
)))
(assert (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> ($generated@@35 $generated@@31 $generated@@151 $generated@@41 $generated@@152) ($generated@@35 $generated@@31 $generated@@151 $generated@@37 $generated@@152))
 :pattern ( ($generated@@35 $generated@@31 $generated@@151 $generated@@41 $generated@@152))
)))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@U) ) (!  (=> ($generated@@35 $generated@@31 $generated@@153 $generated@@26 $generated@@154) ($generated@@35 $generated@@31 $generated@@153 $generated@@41 $generated@@154))
 :pattern ( ($generated@@35 $generated@@31 $generated@@153 $generated@@26 $generated@@154))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@158 T@U) ($generated@@159 T@U) ($generated@@160 T@U) ) (!  (=> (or ($generated@@156 $generated@@158 $generated@@159 $generated@@160) (and (< 1 $generated@@155) (and (and (and ($generated@@50 $generated@@158) ($generated@@50 $generated@@159)) ($generated@@48 $generated@@158 $generated@@159)) (and (or (not (= $generated@@160 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@160 $generated@@44) ($generated@@35 $generated@@31 $generated@@160 $generated@@44 $generated@@158)))))) (and (=> ($generated@@14 ($generated@@98 $generated@@10 ($generated@@13 true))) ($generated@@157 $generated@@158 $generated@@159 $generated@@160)) (= ($generated@@82 $generated@@158 $generated@@159 $generated@@160)  (and true ($generated@@49 $generated@@158 $generated@@159 $generated@@160)))))
 :pattern ( ($generated@@82 $generated@@158 $generated@@159 $generated@@160) ($generated@@50 $generated@@159))
))))
(assert  (=> (<= 0 $generated@@155) (forall (($generated@@161 T@U) ($generated@@162 T@U) ($generated@@163 T@U) ) (!  (=> (or ($generated@@157 $generated@@161 $generated@@162 $generated@@163) (and (< 0 $generated@@155) (and (and (and ($generated@@50 $generated@@161) ($generated@@50 $generated@@162)) ($generated@@48 $generated@@161 $generated@@162)) (and (or (not (= $generated@@163 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@163 $generated@@44) ($generated@@35 $generated@@31 $generated@@163 $generated@@44 $generated@@161)))))) (= ($generated@@49 $generated@@161 $generated@@162 $generated@@163) ($generated@@14 ($generated@@98 $generated@@10 ($generated@@13  (and true true))))))
 :pattern ( ($generated@@49 $generated@@161 $generated@@162 $generated@@163) ($generated@@50 $generated@@162))
))))
(assert (forall (($generated@@164 T@U) ($generated@@165 T@U) ($generated@@166 T@U) ) (!  (=> (or (not (= $generated@@164 $generated@@166)) (not true)) (=> (and ($generated@@48 $generated@@164 $generated@@165) ($generated@@48 $generated@@165 $generated@@166)) ($generated@@48 $generated@@164 $generated@@166)))
 :pattern ( ($generated@@48 $generated@@164 $generated@@165) ($generated@@48 $generated@@165 $generated@@166))
)))
(assert (forall (($generated@@167 T@U) ($generated@@168 T@T) ) (! (= ($generated@@51 $generated@@168 ($generated@@105 $generated@@168 $generated@@167)) $generated@@167)
 :pattern ( ($generated@@105 $generated@@168 $generated@@167))
)))
(assert (forall (($generated@@169 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@169 $generated@@41) ($generated@@30 $generated@@31 $generated@@169 $generated@@37))
 :pattern ( ($generated@@30 $generated@@31 $generated@@169 $generated@@41))
)))
(assert (forall (($generated@@170 T@U) ) (!  (=> ($generated@@30 $generated@@31 $generated@@170 $generated@@26) ($generated@@30 $generated@@31 $generated@@170 $generated@@41))
 :pattern ( ($generated@@30 $generated@@31 $generated@@170 $generated@@26))
)))
(assert (= ($generated@@171 $generated@@44) $generated@@0))
(assert (= ($generated@@172 $generated@@44) $generated@@6))
(assert (= ($generated@@171 $generated@@36) $generated@@1))
(assert (= ($generated@@172 $generated@@36) $generated@@7))
(assert (= ($generated@@171 $generated@@40) $generated@@2))
(assert (= ($generated@@172 $generated@@40) $generated@@8))
(assert (= ($generated@@171 $generated@@37) $generated@@3))
(assert (= ($generated@@172 $generated@@37) $generated@@7))
(assert (= ($generated@@171 $generated@@41) $generated@@4))
(assert (= ($generated@@172 $generated@@41) $generated@@8))
(assert (= ($generated@@171 $generated@@26) $generated@@5))
(assert (= ($generated@@172 $generated@@26) $generated@@6))
(assert (forall (($generated@@174 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@174 $generated@@37)  (or (= $generated@@174 $generated@@32) ($generated@@173 ($generated@@33 $generated@@174))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@174 $generated@@37))
)))
(assert (forall (($generated@@175 T@U) ) (! (= ($generated@@30 $generated@@31 $generated@@175 $generated@@41)  (or (= $generated@@175 $generated@@32) ($generated@@25 ($generated@@33 $generated@@175))))
 :pattern ( ($generated@@30 $generated@@31 $generated@@175 $generated@@41))
)))
(assert (forall (($generated@@176 T@U) ($generated@@177 T@T) ) (! (= ($generated@@105 $generated@@177 ($generated@@98 $generated@@177 $generated@@176)) ($generated@@98 $generated@@54 ($generated@@105 $generated@@177 $generated@@176)))
 :pattern ( ($generated@@105 $generated@@177 ($generated@@98 $generated@@177 $generated@@176)))
)))
(assert  (=> (<= 1 $generated@@155) (forall (($generated@@178 T@U) ($generated@@179 T@U) ($generated@@180 T@U) ) (!  (=> (or ($generated@@156 $generated@@178 $generated@@179 $generated@@180) (and (< 1 $generated@@155) (and (and (and ($generated@@50 $generated@@178) ($generated@@50 $generated@@179)) ($generated@@48 $generated@@178 $generated@@179)) (and (or (not (= $generated@@180 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@180 $generated@@44) ($generated@@35 $generated@@31 $generated@@180 $generated@@44 $generated@@178)))))) (=> ($generated@@82 $generated@@178 $generated@@179 $generated@@180) ($generated@@49 $generated@@178 $generated@@179 $generated@@180)))
 :pattern ( ($generated@@82 $generated@@178 $generated@@179 $generated@@180))
))))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@181 () T@T)
(declare-fun $generated@@182 () T@U)
(declare-fun $generated@@183 () T@U)
(declare-fun $generated@@184 () T@U)
(declare-fun $generated@@185 () T@U)
(declare-fun $generated@@186 () T@U)
(declare-fun $generated@@187 () T@U)
(assert (= ($generated@@9 $generated@@181) 7))
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 6) (let (($generated@@188  (and (=> (= (ControlFlow 0 2) (- 0 5)) ($generated@@101 ($generated@@98 $generated@@181 $generated@@28) ($generated@@98 $generated@@181 $generated@@28))) (=> ($generated@@101 ($generated@@98 $generated@@181 $generated@@28) ($generated@@98 $generated@@181 $generated@@28)) (=> (= $generated@@182 ($generated@@109 $generated@@32 $generated@@183 $generated $generated@@183 $generated)) (and (=> (= (ControlFlow 0 2) (- 0 4)) (forall (($generated@@189 T@U) ($generated@@190 T@U) )  (=> (and (and (or (not (= $generated@@189 $generated@@32)) (not true)) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@183 $generated@@189) $generated)))) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@183 $generated@@189) $generated)))) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@183 $generated@@189) $generated)))))) (=> (forall (($generated@@191 T@U) ($generated@@192 T@U) )  (=> (and (and (or (not (= $generated@@191 $generated@@32)) (not true)) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@183 $generated@@191) $generated)))) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@183 $generated@@191) $generated)))) ($generated@@14 ($generated@@51 $generated@@10 ($generated@@52 $generated@@53 $generated@@54 ($generated@@52 $generated@@31 ($generated@@55 $generated@@53 $generated@@54) $generated@@183 $generated@@191) $generated))))) (=> (=> ($generated@@82 $generated@@184 $generated@@183 $generated@@185) ($generated@@49 $generated@@184 $generated@@183 $generated@@185)) (and (=> (= (ControlFlow 0 2) (- 0 3)) (=> ($generated@@82 $generated@@184 $generated@@183 $generated@@185) (=> ($generated@@157 $generated@@184 $generated@@183 $generated@@185) (or ($generated@@49 $generated@@184 $generated@@183 $generated@@185) ($generated@@14 ($generated@@98 $generated@@10 ($generated@@13 true))))))) (=> (=> ($generated@@82 $generated@@184 $generated@@183 $generated@@185) (=> ($generated@@157 $generated@@184 $generated@@183 $generated@@185) (or ($generated@@49 $generated@@184 $generated@@183 $generated@@185) ($generated@@14 ($generated@@98 $generated@@10 ($generated@@13 true)))))) (=> (= (ControlFlow 0 2) (- 0 1)) (=> ($generated@@82 $generated@@184 $generated@@183 $generated@@185) (=> ($generated@@157 $generated@@184 $generated@@183 $generated@@185) (or ($generated@@49 $generated@@184 $generated@@183 $generated@@185) ($generated@@14 ($generated@@98 $generated@@10 ($generated@@13 true)))))))))))))))))
(let (($generated@@193  (=> (and ($generated@@50 $generated@@184) ($generated@@47 $generated@@184)) (=> (and (and (and (or (not (= $generated@@185 $generated@@32)) (not true)) (and ($generated@@30 $generated@@31 $generated@@185 $generated@@44) ($generated@@35 $generated@@31 $generated@@185 $generated@@44 $generated@@186))) (= 1 $generated@@155)) (and (and (= $generated@@187 $generated@@184) (and ($generated@@48 $generated@@187 $generated@@186) ($generated@@50 $generated@@186))) (= (ControlFlow 0 6) 2))) $generated@@188))))
$generated@@193)))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
