(set-option :print-success false)
(set-info :smt-lib-version 2.6)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun $generated () T@U)
(declare-fun $generated@@0 () T@U)
(declare-fun $generated@@1 () T@U)
(declare-fun $generated@@2 () T@U)
(declare-fun $generated@@3 () T@U)
(declare-fun $generated@@4 () T@U)
(declare-fun $generated@@5 () T@U)
(declare-fun $generated@@6 () T@U)
(declare-fun $generated@@7 () T@U)
(declare-fun $generated@@8 () T@U)
(declare-fun $generated@@9 () T@U)
(declare-fun $generated@@10 () T@U)
(declare-fun $generated@@11 (T@T) Int)
(declare-fun $generated@@12 () T@T)
(declare-fun $generated@@13 () T@T)
(declare-fun $generated@@14 () T@T)
(declare-fun $generated@@15 (Bool) T@U)
(declare-fun $generated@@16 (T@U) Bool)
(declare-fun $generated@@17 (Int) T@U)
(declare-fun $generated@@18 (T@U) Int)
(declare-fun $generated@@19 (Real) T@U)
(declare-fun $generated@@20 (T@U) Real)
(declare-fun $generated@@27 (T@U) T@U)
(declare-fun $generated@@28 (T@U T@U) T@U)
(declare-fun $generated@@29 (T@U T@U) Bool)
(declare-fun $generated@@38 (T@U) Bool)
(declare-fun $generated@@39 () T@U)
(declare-fun $generated@@40 () T@U)
(declare-fun $generated@@42 (T@T T@U T@U) Bool)
(declare-fun $generated@@43 () T@T)
(declare-fun $generated@@44 () T@U)
(declare-fun $generated@@45 (T@U) T@U)
(declare-fun $generated@@47 (T@U T@U T@U) Bool)
(declare-fun $generated@@48 (T@U) Bool)
(declare-fun $generated@@49 () T@U)
(declare-fun $generated@@52 () T@U)
(declare-fun $generated@@55 (T@T T@U T@U T@U) Bool)
(declare-fun $generated@@56 () T@U)
(declare-fun $generated@@59 () T@U)
(declare-fun $generated@@62 () T@U)
(declare-fun $generated@@65 (T@T T@U) T@U)
(declare-fun $generated@@66 (T@T T@T T@U T@U) T@U)
(declare-fun $generated@@67 () T@T)
(declare-fun $generated@@68 () T@T)
(declare-fun $generated@@69 (T@T T@T) T@T)
(declare-fun $generated@@70 (T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@71 (T@T) T@T)
(declare-fun $generated@@72 (T@T) T@T)
(declare-fun $generated@@96 (T@U T@U) Bool)
(declare-fun $generated@@100 (T@T T@U) T@U)
(declare-fun $generated@@107 (T@T T@T T@T T@U T@U T@U) T@U)
(declare-fun $generated@@108 (T@U T@U T@U T@U) T@U)
(declare-fun $generated@@109 (T@T T@T T@T T@U T@U T@U T@U) T@U)
(declare-fun $generated@@148 () Int)
(declare-fun $generated@@149 (T@U T@U) Bool)
(declare-fun $generated@@150 (T@U T@U) Bool)
(declare-fun $generated@@157 (T@U) T@U)
(declare-fun $generated@@159 (T@U) Bool)
(assert  (and (and (and (and (and (and (and (and (= ($generated@@11 $generated@@12) 0) (= ($generated@@11 $generated@@13) 1)) (= ($generated@@11 $generated@@14) 2)) (forall (($generated@@21 Bool) ) (! (= ($generated@@16 ($generated@@15 $generated@@21)) $generated@@21)
 :pattern ( ($generated@@15 $generated@@21))
))) (forall (($generated@@22 T@U) ) (! (= ($generated@@15 ($generated@@16 $generated@@22)) $generated@@22)
 :pattern ( ($generated@@16 $generated@@22))
))) (forall (($generated@@23 Int) ) (! (= ($generated@@18 ($generated@@17 $generated@@23)) $generated@@23)
 :pattern ( ($generated@@17 $generated@@23))
))) (forall (($generated@@24 T@U) ) (! (= ($generated@@17 ($generated@@18 $generated@@24)) $generated@@24)
 :pattern ( ($generated@@18 $generated@@24))
))) (forall (($generated@@25 Real) ) (! (= ($generated@@20 ($generated@@19 $generated@@25)) $generated@@25)
 :pattern ( ($generated@@19 $generated@@25))
))) (forall (($generated@@26 T@U) ) (! (= ($generated@@19 ($generated@@20 $generated@@26)) $generated@@26)
 :pattern ( ($generated@@20 $generated@@26))
))))
(assert (distinct $generated $generated@@0 $generated@@1 $generated@@2 $generated@@3 $generated@@4 $generated@@5 $generated@@6 $generated@@7 $generated@@8 $generated@@9 $generated@@10)
)
(assert (= ($generated@@27 $generated) $generated@@0))
(assert (forall (($generated@@30 T@U) ($generated@@31 T@U) ) (! ($generated@@29 ($generated@@28 $generated@@30 $generated@@31) $generated@@31)
 :pattern ( ($generated@@28 $generated@@30 $generated@@31))
)))
(assert (forall (($generated@@32 T@U) ($generated@@33 T@U) ($generated@@34 T@U) ) (!  (=> ($generated@@29 $generated@@32 $generated@@34) ($generated@@29 ($generated@@28 $generated@@32 $generated@@33) $generated@@34))
 :pattern ( ($generated@@28 $generated@@32 $generated@@33) ($generated@@29 $generated@@32 $generated@@34))
)))
(assert (forall (($generated@@35 T@U) ($generated@@36 T@U) ($generated@@37 T@U) ) (! (= ($generated@@29 ($generated@@28 $generated@@35 $generated@@36) $generated@@37)  (or (= $generated@@37 $generated@@36) ($generated@@29 $generated@@35 $generated@@37)))
 :pattern ( ($generated@@29 ($generated@@28 $generated@@35 $generated@@36) $generated@@37))
)))
(assert ($generated@@38 $generated@@39))
(assert (forall (($generated@@41 T@U) ) (!  (not ($generated@@29 $generated@@40 $generated@@41))
 :pattern ( ($generated@@29 $generated@@40 $generated@@41))
)))
(assert (= ($generated@@11 $generated@@43) 3))
(assert (forall (($generated@@46 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@46 $generated@@39)  (or (= $generated@@46 $generated@@44) (= ($generated@@45 $generated@@46) $generated@@39)))
 :pattern ( ($generated@@42 $generated@@43 $generated@@46 $generated@@39))
)))
(assert (forall (($generated@@50 T@U) ($generated@@51 T@U) ) (!  (=> (and ($generated@@47 $generated@@50 $generated@@39 $generated@@51) ($generated@@48 $generated@@51)) ($generated@@47 $generated@@50 $generated@@49 $generated@@51))
 :pattern ( ($generated@@47 $generated@@50 $generated@@39 $generated@@51))
)))
(assert (forall (($generated@@53 T@U) ($generated@@54 T@U) ) (!  (=> (and ($generated@@47 $generated@@53 $generated@@52 $generated@@54) ($generated@@48 $generated@@54)) ($generated@@47 $generated@@53 $generated@@49 $generated@@54))
 :pattern ( ($generated@@47 $generated@@53 $generated@@52 $generated@@54))
)))
(assert (forall (($generated@@57 T@U) ($generated@@58 T@U) ) (! (= ($generated@@55 $generated@@43 $generated@@57 $generated@@56 $generated@@58) ($generated@@55 $generated@@43 $generated@@57 $generated@@49 $generated@@58))
 :pattern ( ($generated@@55 $generated@@43 $generated@@57 $generated@@56 $generated@@58))
 :pattern ( ($generated@@55 $generated@@43 $generated@@57 $generated@@49 $generated@@58))
)))
(assert (forall (($generated@@60 T@U) ($generated@@61 T@U) ) (! (= ($generated@@55 $generated@@43 $generated@@60 $generated@@59 $generated@@61) ($generated@@55 $generated@@43 $generated@@60 $generated@@39 $generated@@61))
 :pattern ( ($generated@@55 $generated@@43 $generated@@60 $generated@@59 $generated@@61))
 :pattern ( ($generated@@55 $generated@@43 $generated@@60 $generated@@39 $generated@@61))
)))
(assert (forall (($generated@@63 T@U) ($generated@@64 T@U) ) (! (= ($generated@@55 $generated@@43 $generated@@63 $generated@@62 $generated@@64) ($generated@@55 $generated@@43 $generated@@63 $generated@@52 $generated@@64))
 :pattern ( ($generated@@55 $generated@@43 $generated@@63 $generated@@62 $generated@@64))
 :pattern ( ($generated@@55 $generated@@43 $generated@@63 $generated@@52 $generated@@64))
)))
(assert  (and (and (and (and (and (and (forall (($generated@@73 T@T) ($generated@@74 T@T) ($generated@@75 T@U) ($generated@@76 T@U) ($generated@@77 T@U) ) (! (= ($generated@@66 $generated@@73 $generated@@74 ($generated@@70 $generated@@73 $generated@@74 $generated@@76 $generated@@77 $generated@@75) $generated@@77) $generated@@75)
 :weight 0
)) (forall (($generated@@78 T@T) ($generated@@79 T@T) ($generated@@80 T@U) ($generated@@81 T@U) ($generated@@82 T@U) ($generated@@83 T@U) ) (!  (or (= $generated@@82 $generated@@83) (= ($generated@@66 $generated@@78 $generated@@79 ($generated@@70 $generated@@78 $generated@@79 $generated@@81 $generated@@82 $generated@@80) $generated@@83) ($generated@@66 $generated@@78 $generated@@79 $generated@@81 $generated@@83)))
 :weight 0
))) (= ($generated@@11 $generated@@67) 4)) (= ($generated@@11 $generated@@68) 5)) (forall (($generated@@84 T@T) ($generated@@85 T@T) ) (= ($generated@@11 ($generated@@69 $generated@@84 $generated@@85)) 6))) (forall (($generated@@86 T@T) ($generated@@87 T@T) ) (! (= ($generated@@71 ($generated@@69 $generated@@86 $generated@@87)) $generated@@86)
 :pattern ( ($generated@@69 $generated@@86 $generated@@87))
))) (forall (($generated@@88 T@T) ($generated@@89 T@T) ) (! (= ($generated@@72 ($generated@@69 $generated@@88 $generated@@89)) $generated@@89)
 :pattern ( ($generated@@69 $generated@@88 $generated@@89))
))))
(assert (forall (($generated@@90 T@U) ($generated@@91 T@U) ) (! (= ($generated@@55 $generated@@43 $generated@@90 $generated@@49 $generated@@91)  (or (= $generated@@90 $generated@@44) ($generated@@16 ($generated@@65 $generated@@12 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@91 $generated@@90) $generated@@1)))))
 :pattern ( ($generated@@55 $generated@@43 $generated@@90 $generated@@49 $generated@@91))
)))
(assert (forall (($generated@@92 T@U) ($generated@@93 T@U) ) (! (= ($generated@@55 $generated@@43 $generated@@92 $generated@@39 $generated@@93)  (or (= $generated@@92 $generated@@44) ($generated@@16 ($generated@@65 $generated@@12 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@93 $generated@@92) $generated@@1)))))
 :pattern ( ($generated@@55 $generated@@43 $generated@@92 $generated@@39 $generated@@93))
)))
(assert (forall (($generated@@94 T@U) ($generated@@95 T@U) ) (! (= ($generated@@55 $generated@@43 $generated@@94 $generated@@52 $generated@@95)  (or (= $generated@@94 $generated@@44) ($generated@@16 ($generated@@65 $generated@@12 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@95 $generated@@94) $generated@@1)))))
 :pattern ( ($generated@@55 $generated@@43 $generated@@94 $generated@@52 $generated@@95))
)))
(assert (forall (($generated@@97 T@U) ($generated@@98 T@U) ) (! (= ($generated@@96 $generated@@97 $generated@@98) (forall (($generated@@99 T@U) ) (!  (=> ($generated@@29 $generated@@97 $generated@@99) ($generated@@29 $generated@@98 $generated@@99))
 :pattern ( ($generated@@29 $generated@@97 $generated@@99))
 :pattern ( ($generated@@29 $generated@@98 $generated@@99))
)))
 :pattern ( ($generated@@96 $generated@@97 $generated@@98))
)))
(assert (forall (($generated@@101 T@U) ($generated@@102 T@T) ) (! (= ($generated@@100 $generated@@102 ($generated@@65 $generated@@102 $generated@@101)) $generated@@101)
 :pattern ( ($generated@@65 $generated@@102 $generated@@101))
)))
(assert (forall (($generated@@103 T@U) ($generated@@104 T@U) ($generated@@105 T@U) ($generated@@106 T@T) ) (! (= ($generated@@47 ($generated@@100 $generated@@106 $generated@@103) $generated@@104 $generated@@105) ($generated@@55 $generated@@106 $generated@@103 $generated@@104 $generated@@105))
 :pattern ( ($generated@@47 ($generated@@100 $generated@@106 $generated@@103) $generated@@104 $generated@@105))
)))
(assert  (and (forall (($generated@@110 T@T) ($generated@@111 T@T) ($generated@@112 T@T) ($generated@@113 T@U) ($generated@@114 T@U) ($generated@@115 T@U) ($generated@@116 T@U) ) (! (= ($generated@@107 $generated@@110 $generated@@111 $generated@@112 ($generated@@109 $generated@@110 $generated@@111 $generated@@112 $generated@@114 $generated@@115 $generated@@116 $generated@@113) $generated@@115 $generated@@116) $generated@@113)
 :weight 0
)) (and (forall (($generated@@117 T@T) ($generated@@118 T@T) ($generated@@119 T@T) ($generated@@120 T@U) ($generated@@121 T@U) ($generated@@122 T@U) ($generated@@123 T@U) ($generated@@124 T@U) ($generated@@125 T@U) ) (!  (or (= $generated@@122 $generated@@124) (= ($generated@@107 $generated@@117 $generated@@118 $generated@@119 ($generated@@109 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@122 $generated@@123 $generated@@120) $generated@@124 $generated@@125) ($generated@@107 $generated@@117 $generated@@118 $generated@@119 $generated@@121 $generated@@124 $generated@@125)))
 :weight 0
)) (forall (($generated@@126 T@T) ($generated@@127 T@T) ($generated@@128 T@T) ($generated@@129 T@U) ($generated@@130 T@U) ($generated@@131 T@U) ($generated@@132 T@U) ($generated@@133 T@U) ($generated@@134 T@U) ) (!  (or (= $generated@@132 $generated@@134) (= ($generated@@107 $generated@@126 $generated@@127 $generated@@128 ($generated@@109 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@131 $generated@@132 $generated@@129) $generated@@133 $generated@@134) ($generated@@107 $generated@@126 $generated@@127 $generated@@128 $generated@@130 $generated@@133 $generated@@134)))
 :weight 0
)))))
(assert (forall (($generated@@135 T@U) ($generated@@136 T@U) ($generated@@137 T@U) ($generated@@138 T@U) ($generated@@139 T@U) ($generated@@140 T@U) ) (! (= ($generated@@16 ($generated@@107 $generated@@43 $generated@@67 $generated@@12 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))  (=> (and (or (not (= $generated@@139 $generated@@135)) (not true)) ($generated@@16 ($generated@@65 $generated@@12 ($generated@@66 $generated@@67 $generated@@68 ($generated@@66 $generated@@43 ($generated@@69 $generated@@67 $generated@@68) $generated@@136 $generated@@139) $generated@@137)))) (= $generated@@139 $generated@@138)))
 :pattern ( ($generated@@107 $generated@@43 $generated@@67 $generated@@12 ($generated@@108 $generated@@135 $generated@@136 $generated@@137 $generated@@138) $generated@@139 $generated@@140))
)))
(assert (forall (($generated@@141 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@141 $generated@@56)  (and ($generated@@42 $generated@@43 $generated@@141 $generated@@49) (or (not (= $generated@@141 $generated@@44)) (not true))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@141 $generated@@56))
 :pattern ( ($generated@@42 $generated@@43 $generated@@141 $generated@@49))
)))
(assert (forall (($generated@@142 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@142 $generated@@59)  (and ($generated@@42 $generated@@43 $generated@@142 $generated@@39) (or (not (= $generated@@142 $generated@@44)) (not true))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@142 $generated@@59))
 :pattern ( ($generated@@42 $generated@@43 $generated@@142 $generated@@39))
)))
(assert (forall (($generated@@143 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@143 $generated@@62)  (and ($generated@@42 $generated@@43 $generated@@143 $generated@@52) (or (not (= $generated@@143 $generated@@44)) (not true))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@143 $generated@@62))
 :pattern ( ($generated@@42 $generated@@43 $generated@@143 $generated@@52))
)))
(assert (forall (($generated@@144 T@U) ($generated@@145 T@U) ) (!  (=> ($generated@@55 $generated@@43 $generated@@144 $generated@@39 $generated@@145) ($generated@@55 $generated@@43 $generated@@144 $generated@@49 $generated@@145))
 :pattern ( ($generated@@55 $generated@@43 $generated@@144 $generated@@39 $generated@@145))
)))
(assert (forall (($generated@@146 T@U) ($generated@@147 T@U) ) (!  (=> ($generated@@55 $generated@@43 $generated@@146 $generated@@52 $generated@@147) ($generated@@55 $generated@@43 $generated@@146 $generated@@49 $generated@@147))
 :pattern ( ($generated@@55 $generated@@43 $generated@@146 $generated@@52 $generated@@147))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@151 T@U) ($generated@@152 T@U) ) (!  (=> (or ($generated@@150 $generated@@151 $generated@@152) (and (< 1 $generated@@148) (and ($generated@@48 $generated@@151) (and (or (not (= $generated@@152 $generated@@44)) (not true)) (and ($generated@@42 $generated@@43 $generated@@152 $generated@@56) ($generated@@55 $generated@@43 $generated@@152 $generated@@56 $generated@@151)))))) ($generated@@149 $generated@@151 $generated@@152))
 :pattern ( ($generated@@149 $generated@@151 $generated@@152))
))))
(assert (forall (($generated@@153 T@U) ($generated@@154 T@T) ) (! (= ($generated@@65 $generated@@154 ($generated@@100 $generated@@154 $generated@@153)) $generated@@153)
 :pattern ( ($generated@@100 $generated@@154 $generated@@153))
)))
(assert (forall (($generated@@155 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@155 $generated@@39) ($generated@@42 $generated@@43 $generated@@155 $generated@@49))
 :pattern ( ($generated@@42 $generated@@43 $generated@@155 $generated@@39))
)))
(assert (forall (($generated@@156 T@U) ) (!  (=> ($generated@@42 $generated@@43 $generated@@156 $generated@@52) ($generated@@42 $generated@@43 $generated@@156 $generated@@49))
 :pattern ( ($generated@@42 $generated@@43 $generated@@156 $generated@@52))
)))
(assert (= ($generated@@27 $generated@@59) $generated@@2))
(assert (= ($generated@@157 $generated@@59) $generated@@8))
(assert (= ($generated@@27 $generated@@56) $generated@@3))
(assert (= ($generated@@157 $generated@@56) $generated@@9))
(assert (= ($generated@@27 $generated@@62) $generated@@4))
(assert (= ($generated@@157 $generated@@62) $generated@@10))
(assert (= ($generated@@27 $generated@@49) $generated@@5))
(assert (= ($generated@@157 $generated@@49) $generated@@9))
(assert (= ($generated@@27 $generated@@52) $generated@@6))
(assert (= ($generated@@157 $generated@@52) $generated@@10))
(assert (= ($generated@@27 $generated@@39) $generated@@7))
(assert (= ($generated@@157 $generated@@39) $generated@@8))
(assert (forall (($generated@@158 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@158 $generated@@49)  (or (= $generated@@158 $generated@@44) ($generated@@38 ($generated@@45 $generated@@158))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@158 $generated@@49))
)))
(assert (forall (($generated@@160 T@U) ) (! (= ($generated@@42 $generated@@43 $generated@@160 $generated@@52)  (or (= $generated@@160 $generated@@44) ($generated@@159 ($generated@@45 $generated@@160))))
 :pattern ( ($generated@@42 $generated@@43 $generated@@160 $generated@@52))
)))
(assert  (=> (<= 1 $generated@@148) (forall (($generated@@161 T@U) ($generated@@162 T@U) ) (!  (=> (or ($generated@@150 $generated@@161 $generated@@162) (and (< 1 $generated@@148) (and ($generated@@48 $generated@@161) (and (or (not (= $generated@@162 $generated@@44)) (not true)) (and ($generated@@42 $generated@@43 $generated@@162 $generated@@56) ($generated@@55 $generated@@43 $generated@@162 $generated@@56 $generated@@161)))))) (= ($generated@@149 $generated@@161 $generated@@162)  (and (or ($generated@@42 $generated@@43 $generated@@162 $generated@@62) ($generated@@42 $generated@@43 $generated@@162 $generated@@59)) (not (and ($generated@@42 $generated@@43 $generated@@162 $generated@@62) ($generated@@42 $generated@@43 $generated@@162 $generated@@59))))))
 :pattern ( ($generated@@149 $generated@@161 $generated@@162) ($generated@@48 $generated@@161))
))))
(assert (forall (($generated@@163 T@U) ($generated@@164 T@U) ) (! ($generated@@55 $generated@@12 $generated@@164 $generated $generated@@163)
 :pattern ( ($generated@@55 $generated@@12 $generated@@164 $generated $generated@@163))
)))
(assert (forall (($generated@@165 T@U) ) (! ($generated@@42 $generated@@12 $generated@@165 $generated)
 :pattern ( ($generated@@42 $generated@@12 $generated@@165 $generated))
)))
(push 1)
(declare-fun ControlFlow (Int Int) Int)
(declare-fun $generated@@166 () T@U)
(declare-fun $generated@@167 () T@U)
(declare-fun $generated@@168 () T@U)
(declare-fun $generated@@169 (T@U) Bool)
(set-option :timeout 10000)
(set-option :rlimit 0)
(set-option :auto_config false)
(set-option :type_check true)
(set-option :smt.qi.eager_threshold 100)
(set-option :smt.delay_units true)
(set-option :model_evaluator.completion true)
(set-option :model.completion true)
(set-option :model.compact false)
(set-option :smt.case_split 3)
(set-option :smt.mbqi false)
(set-option :model.v2 true)
(set-option :pp.bv_literals false)
(set-option :smt.arith.solver 2)
(assert (not
 (=> (= (ControlFlow 0 0) 20) (let (($generated@@170  (=> (= (ControlFlow 0 4) (- 0 3)) ($generated@@149 $generated@@166 $generated@@167))))
(let (($generated@@171  (=> (= ($generated@@149 $generated@@166 $generated@@167)  (and (or ($generated@@42 $generated@@43 $generated@@167 $generated@@62) ($generated@@42 $generated@@43 $generated@@167 $generated@@59)) (not (and ($generated@@42 $generated@@43 $generated@@167 $generated@@62) ($generated@@42 $generated@@43 $generated@@167 $generated@@59))))) (=> (and ($generated@@42 $generated@@12 ($generated@@15 ($generated@@149 $generated@@166 $generated@@167)) $generated) (= (ControlFlow 0 5) 4)) $generated@@170))))
(let (($generated@@172  (=> (and (not ($generated@@42 $generated@@43 $generated@@167 $generated@@62)) (= (ControlFlow 0 8) 5)) $generated@@171)))
(let (($generated@@173  (=> (and ($generated@@42 $generated@@43 $generated@@167 $generated@@62) (= (ControlFlow 0 7) 5)) $generated@@171)))
(let (($generated@@174  (=> (or ($generated@@42 $generated@@43 $generated@@167 $generated@@62) ($generated@@42 $generated@@43 $generated@@167 $generated@@59)) (and (=> (= (ControlFlow 0 9) 7) $generated@@173) (=> (= (ControlFlow 0 9) 8) $generated@@172)))))
(let (($generated@@175  (=> (and (not (or ($generated@@42 $generated@@43 $generated@@167 $generated@@62) ($generated@@42 $generated@@43 $generated@@167 $generated@@59))) (= (ControlFlow 0 6) 5)) $generated@@171)))
(let (($generated@@176  (=> ($generated@@42 $generated@@43 $generated@@167 $generated@@62) (and (=> (= (ControlFlow 0 11) 9) $generated@@174) (=> (= (ControlFlow 0 11) 6) $generated@@175)))))
(let (($generated@@177  (=> (not ($generated@@42 $generated@@43 $generated@@167 $generated@@62)) (and (=> (= (ControlFlow 0 10) 9) $generated@@174) (=> (= (ControlFlow 0 10) 6) $generated@@175)))))
(let (($generated@@178  (=> (and (or ($generated@@42 $generated@@43 $generated@@167 $generated@@62) ($generated@@42 $generated@@43 $generated@@167 $generated@@59)) (not (and ($generated@@42 $generated@@43 $generated@@167 $generated@@62) ($generated@@42 $generated@@43 $generated@@167 $generated@@59)))) (and (=> (= (ControlFlow 0 12) 10) $generated@@177) (=> (= (ControlFlow 0 12) 11) $generated@@176)))))
(let (($generated@@179  (=> (and (not ($generated@@42 $generated@@43 $generated@@167 $generated@@62)) (= (ControlFlow 0 15) 12)) $generated@@178)))
(let (($generated@@180  (=> (and ($generated@@42 $generated@@43 $generated@@167 $generated@@62) (= (ControlFlow 0 14) 12)) $generated@@178)))
(let (($generated@@181  (=> (or ($generated@@42 $generated@@43 $generated@@167 $generated@@62) ($generated@@42 $generated@@43 $generated@@167 $generated@@59)) (and (=> (= (ControlFlow 0 16) 14) $generated@@180) (=> (= (ControlFlow 0 16) 15) $generated@@179)))))
(let (($generated@@182  (=> (and (not (or ($generated@@42 $generated@@43 $generated@@167 $generated@@62) ($generated@@42 $generated@@43 $generated@@167 $generated@@59))) (= (ControlFlow 0 13) 12)) $generated@@178)))
(let (($generated@@183  (=> ($generated@@42 $generated@@43 $generated@@167 $generated@@62) (and (=> (= (ControlFlow 0 18) 16) $generated@@181) (=> (= (ControlFlow 0 18) 13) $generated@@182)))))
(let (($generated@@184  (=> (not ($generated@@42 $generated@@43 $generated@@167 $generated@@62)) (and (=> (= (ControlFlow 0 17) 16) $generated@@181) (=> (= (ControlFlow 0 17) 13) $generated@@182)))))
(let (($generated@@185  (=> (and ($generated@@47 ($generated@@100 $generated@@43 $generated@@167) $generated@@49 $generated@@166) (= (ControlFlow 0 2) (- 0 1))) (or (= $generated@@167 $generated@@167) (and ($generated@@96 ($generated@@28 $generated@@40 ($generated@@100 $generated@@43 $generated@@167)) ($generated@@28 $generated@@40 ($generated@@100 $generated@@43 $generated@@167))) (not ($generated@@96 ($generated@@28 $generated@@40 ($generated@@100 $generated@@43 $generated@@167)) ($generated@@28 $generated@@40 ($generated@@100 $generated@@43 $generated@@167)))))))))
(let (($generated@@186  (=> (= $generated@@168 ($generated@@108 $generated@@44 $generated@@166 $generated@@1 $generated@@167)) (and (and (=> (= (ControlFlow 0 19) 2) $generated@@185) (=> (= (ControlFlow 0 19) 17) $generated@@184)) (=> (= (ControlFlow 0 19) 18) $generated@@183)))))
(let (($generated@@187  (=> (and ($generated@@48 $generated@@166) ($generated@@169 $generated@@166)) (=> (and (and (or (not (= $generated@@167 $generated@@44)) (not true)) (and ($generated@@42 $generated@@43 $generated@@167 $generated@@56) ($generated@@55 $generated@@43 $generated@@167 $generated@@56 $generated@@166))) (and (= 1 $generated@@148) (= (ControlFlow 0 20) 19))) $generated@@186))))
$generated@@187)))))))))))))))))))
))
(check-sat)
(get-info :rlimit)
(pop 1)
; Valid
(reset)
(set-option :rlimit 0)
; did a full reset
(reset)
